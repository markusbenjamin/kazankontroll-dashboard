(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2792627,      54265]
NotebookOptionsPosition[   2753919,      53693]
NotebookOutlinePosition[   2754489,      53713]
CellTagsIndexPosition[   2754446,      53710]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["functions", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 3.9266096544308543`*^9}, {
  3.9266109938395076`*^9, 
  3.926610994581573*^9}},ExpressionUUID->"de884582-daa6-466c-9130-\
8dadb65fabe8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToStringWithDateCorrection", "[", "expression_", "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
       "]"}], "]"}], "==", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<0\>\"", "<>", 
     RowBox[{"ToString", "[", "expression", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ToString", "[", "expression", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToStringWithDateCorrection", "[", 
   RowBox[{"expression_", ",", "correctLength_"}], "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
       "]"}], "]"}], "<", "correctLength"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringRiffle", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"\"\<0\>\"", ",", 
         RowBox[{"correctLength", "-", 
          RowBox[{"Length", "[", 
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
            "]"}], "]"}]}]}], "]"}], ",", "\"\<\>\""}], "]"}], "<>", 
     RowBox[{"ToString", "[", "expression", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ToString", "[", "expression", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.925989169233279*^9, 3.925989267992455*^9}, {
  3.9264141352271404`*^9, 3.9264141505005507`*^9}, {3.9264141975496087`*^9, 
  3.9264142132326336`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ef87188f-e7f7-4fd9-aeee-f0dcf1fa0f2a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MinuteOfDayToHourAndMinuteString", "[", "minuteOfDay_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ToStringWithDateCorrection", "[", 
    RowBox[{"IntegerPart", "[", 
     RowBox[{"minuteOfDay", "/", "60"}], "]"}], "]"}], "<>", "\"\<:\>\"", "<>", 
   RowBox[{"ToStringWithDateCorrection", "[", 
    RowBox[{
     RowBox[{"FractionalPart", "[", 
      RowBox[{"minuteOfDay", "/", "60"}], "]"}], "60"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinuteOfDayToHourAndMinuteList", "[", "minuteOfDay_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"IntegerPart", "[", 
     RowBox[{"minuteOfDay", "/", "60"}], "]"}], ",", 
    RowBox[{
     RowBox[{"FractionalPart", "[", 
      RowBox[{"minuteOfDay", "/", "60"}], "]"}], "60"}]}], "}"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926407378735193*^9, 3.9264074397457685`*^9}, 
   3.9264075049673653`*^9, {3.9266116962578964`*^9, 3.926611717457899*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"517c5a7e-5706-44db-a0a9-1a783629fab8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HourAndMinuteToMinuteOfDay", "[", 
   RowBox[{"hour_", ",", "minute_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"60", "hour"}], "+", "minute"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926407772516139*^9, 3.926407798893014*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"16e2e7e4-0721-4473-b6d1-e2194096779c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HourAndMinuteToMinuteOfDay", "[", "hourAndMinuteString_", "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"hourAndMinuteString", ",", "\"\<:\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"hourAndMinuteString", ",", "\"\<:\>\""}], "]"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "60"}], "+", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{"hourAndMinuteString", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "60"}], "+", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringTake", "[", 
       RowBox[{"hourAndMinuteString", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926407800975358*^9, 3.9264078464302816`*^9}, {
  3.92640920055725*^9, 3.9264092685148034`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"1067bdc3-f0b9-4316-b2f0-04ff4908391e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DateExtend", "[", 
   RowBox[{"dateObject_", ",", "hour_", ",", "minute_"}], "]"}], ":=", 
  RowBox[{"DateObject", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"DateList", "[", "dateObject", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"hour", ",", "minute"}], "}"}]}], "}"}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926616415255797*^9, 3.9266164600834856`*^9}, {
  3.9266164984696054`*^9, 3.9266164998273354`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"282c3f6d-3215-4c8e-8c5b-62a46155ca77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "normalize", " ", "DateObjects", " ", "to", 
    " ", "the", " ", "same", " ", "granularity"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NormalizeDate", "[", "date_", "]"}], ":=", 
    RowBox[{"DateObject", "[", 
     RowBox[{
      RowBox[{"DateList", "[", "date", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "find", " ", "the", " ", "index", " ", "of", 
     " ", "the", " ", "first", " ", "element", " ", "not", " ", "less", " ", 
     "than", " ", "a", " ", "given", " ", "date"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"FindFirstIndexNotLessThan", "[", 
     RowBox[{"list_", ",", "date_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", "list", "]"}]}], ",", 
        RowBox[{"low", "=", "1"}], ",", "high", ",", "mid", ",", "normDate"}],
        "}"}], ",", 
      RowBox[{
       RowBox[{"normDate", "=", 
        RowBox[{"NormalizeDate", "[", "date", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"high", "=", "len"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"low", "<", "high"}], ",", 
         RowBox[{
          RowBox[{"mid", "=", 
           RowBox[{"Quotient", "[", 
            RowBox[{
             RowBox[{"low", "+", "high"}], ",", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"NormalizeDate", "[", 
              RowBox[{"First", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", "mid", "]"}], "]"}], "]"}], "]"}], "<", 
             "normDate"}], ",", 
            RowBox[{"low", "=", 
             RowBox[{"mid", "+", "1"}]}], ",", 
            RowBox[{"high", "=", "mid"}]}], "]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "low"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "find", " ", "the", " ", "index", " ", "of", 
     " ", "the", " ", "first", " ", "element", " ", "greater", " ", "than", 
     " ", "a", " ", "given", " ", "date"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"FindFirstIndexGreaterThan", "[", 
     RowBox[{"list_", ",", "date_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", "list", "]"}]}], ",", 
        RowBox[{"low", "=", "1"}], ",", "high", ",", "mid", ",", "normDate"}],
        "}"}], ",", 
      RowBox[{
       RowBox[{"normDate", "=", 
        RowBox[{"NormalizeDate", "[", "date", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"high", "=", "len"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"low", "<", "high"}], ",", 
         RowBox[{
          RowBox[{"mid", "=", 
           RowBox[{"Quotient", "[", 
            RowBox[{
             RowBox[{"low", "+", "high"}], ",", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"NormalizeDate", "[", 
              RowBox[{"First", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", "mid", "]"}], "]"}], "]"}], "]"}], "<=", 
             "normDate"}], ",", 
            RowBox[{"low", "=", 
             RowBox[{"mid", "+", "1"}]}], ",", 
            RowBox[{"high", "=", "mid"}]}], "]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "low"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "function", " ", "to", " ", "select", " ", 
     "elements", " ", "by", " ", "date", " ", "range"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"SelectElementsByDateRange", "[", 
     RowBox[{"list_", ",", "startDate_", ",", "endDate_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "startIndex", ",", "endIndex", ",", "normStartDate", ",", 
        "normEndDate"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Normalize", " ", "dates"}], "*)"}], 
      RowBox[{
       RowBox[{"normStartDate", "=", 
        RowBox[{"NormalizeDate", "[", "startDate", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"normEndDate", "=", 
        RowBox[{"NormalizeDate", "[", "endDate", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Find", " ", "the", " ", "starting", " ", "and", " ", "ending", " ", 
         "indices"}], "*)"}], 
       RowBox[{"startIndex", "=", 
        RowBox[{"FindFirstIndexNotLessThan", "[", 
         RowBox[{"list", ",", "normStartDate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"endIndex", "=", 
        RowBox[{"FindFirstIndexGreaterThan", "[", 
         RowBox[{"list", ",", "normEndDate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "sublist", " ", "within", " ", "the", " ", 
         "range"}], "*)"}], 
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{"startIndex", ";;", 
          RowBox[{"endIndex", "-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
   "\n"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266151105498524`*^9, 3.9266151281307926`*^9}, {
  3.926615263669429*^9, 3.9266152662930775`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"590f5eab-5099-4966-89d2-f75d3f1dee33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapFunctionToGranularity", "[", 
   RowBox[{"function_", ",", "data_List", ",", "granularity_String"}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"extractedComponents", ",", "groupedData", ",", "mappedData"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Extract", " ", "the", " ", "relevant", " ", "component", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", ".", "g", "."}], ",", "month"}], ")"}], " ", "from", " ",
       "each", " ", "DateObject", " ", "and", " ", "pair", " ", "with", " ", 
      "value"}], "*)"}], 
    RowBox[{
     RowBox[{"extractedComponents", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"DateValue", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "granularity"}], "]"}], 
           ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", "data"}], 
       ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Group", " ", "data", " ", "by", " ", "the", " ", "extracted", " ", 
       "component", " ", "and", " ", "calculate", " ", "the", " ", "mean", 
       " ", "for", " ", "each", " ", "group"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"groupedData", "=", 
      RowBox[{"GroupBy", "[", 
       RowBox[{"extractedComponents", ",", 
        RowBox[{"First", "->", "Last"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Replace", " ", "each", " ", "group", " ", "key", " ", "with", " ", 
       "an", " ", "average", " ", "value"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"mappedData", "=", 
      RowBox[{"function", "/@", "groupedData"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Keys", "[", "mappedData", "]"}], ",", 
          RowBox[{"Values", "[", "mappedData", "]"}]}], "}"}], "]"}], ",", 
       "First"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.922259041186428*^9, 3.9222590830296435`*^9}, {
  3.9222598196615105`*^9, 3.9222598318004327`*^9}, {3.9222601836143236`*^9, 
  3.922260249623652*^9}, {3.9222603934282913`*^9, 3.9222604134380503`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"53f841ca-da66-4840-8d35-ce98d8417550"]
}, Closed]],

Cell[CellGroupData[{

Cell["misc", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 
  3.9266096544308543`*^9}},ExpressionUUID->"d81bbbe0-5219-4dcb-b7f7-\
605c30d91d76"],

Cell[CellGroupData[{

Cell["heatmeter read-in", "Section",
 CellChangeTimes->{{3.926609631407152*^9, 
  3.926609640288895*^9}},ExpressionUUID->"2cb6c7fd-e9ba-4e58-ba29-\
ac8ddd04cf7d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToStringWithDateCorrection", "[", "expression_", "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
       "]"}], "]"}], "==", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<0\>\"", "<>", 
     RowBox[{"ToString", "[", "expression", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ToString", "[", "expression", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToStringWithDateCorrection", "[", 
   RowBox[{"expression_", ",", "correctLength_"}], "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
       "]"}], "]"}], "<", "correctLength"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringRiffle", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"\"\<0\>\"", ",", 
         RowBox[{"correctLength", "-", 
          RowBox[{"Length", "[", 
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
            "]"}], "]"}]}]}], "]"}], ",", "\"\<\>\""}], "]"}], "<>", 
     RowBox[{"ToString", "[", "expression", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ToString", "[", "expression", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.925989169233279*^9, 3.925989267992455*^9}, {
  3.9264141352271404`*^9, 3.9264141505005507`*^9}, {3.9264141975496087`*^9, 
  3.9264142132326336`*^9}},
 CellLabel->
  "In[657]:=",ExpressionUUID->"0400ffef-c102-4bb5-9445-98d4baef5acf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MinuteOfDayToHourAndMinute", "[", "minuteOfDay_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ToStringWithDateCorrection", "[", 
    RowBox[{"IntegerPart", "[", 
     RowBox[{"minuteOfDay", "/", "60"}], "]"}], "]"}], "<>", "\"\<:\>\"", "<>", 
   RowBox[{"ToStringWithDateCorrection", "[", 
    RowBox[{
     RowBox[{"FractionalPart", "[", 
      RowBox[{"minuteOfDay", "/", "60"}], "]"}], "60"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.926407378735193*^9, 3.9264074397457685`*^9}, 
   3.9264075049673653`*^9},
 CellLabel->
  "In[101]:=",ExpressionUUID->"59e78a66-3b7f-4c8a-88c8-0845ea2c0116"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HourAndMinuteToMinuteOfDay", "[", 
   RowBox[{"hour_", ",", "minute_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"60", "hour"}], "+", "minute"}]}]], "Input",
 CellChangeTimes->{{3.926407772516139*^9, 3.926407798893014*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"4f0312ec-481b-4601-b221-7746863bf32f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HourAndMinuteToMinuteOfDay", "[", "hourAndMinuteString_", "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"hourAndMinuteString", ",", "\"\<:\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"hourAndMinuteString", ",", "\"\<:\>\""}], "]"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "60"}], "+", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{"hourAndMinuteString", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "60"}], "+", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringTake", "[", 
       RowBox[{"hourAndMinuteString", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.926407800975358*^9, 3.9264078464302816`*^9}, {
  3.92640920055725*^9, 3.9264092685148034`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"2046797a-0d0a-4004-b120-fa27ac9e2206"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "rawDataRoot", "=", 
   "\"\<C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\kazankontroll-\
dashboard\\\\data\\\\raw\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.9264072662174683`*^9, 3.926407266512049*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"84235713-8645-473d-b997-e5773f5b0ef7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "formattedDataRoot", "=", 
   "\"\<C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\kazankontroll-\
dashboard\\\\data\\\\formatted\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.9259888840241904`*^9, 3.9259889122362614`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"cab43216-a9b4-448f-bf1e-94a85c7104aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", "=", "formattedDataRoot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileName", "=", "\"\<heat_stock_net.csv\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lastLoadDay", "=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dirs", ",", "sortedDirs", ",", "foundFile"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Get", " ", "list", " ", "of", " ", "directories"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dirs", "=", 
       RowBox[{"FileNames", "[", 
        RowBox[{"\"\<*\>\"", ",", "path"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Sort", " ", "directories", " ", "in", " ", "decreasing", " ", 
        "order"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sortedDirs", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"dirs", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"DateObject", "[", "#1", "]"}], ">", 
           RowBox[{"DateObject", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Search", " ", "for", " ", "the", " ", "file"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"foundFile", "=", 
       RowBox[{"SelectFirst", "[", 
        RowBox[{"sortedDirs", ",", 
         RowBox[{
          RowBox[{"FileExistsQ", "[", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"#", ",", "fileName"}], "}"}], "]"}], "]"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{"foundFile", ",", "\"\<\\\\\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadDayStamps", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringRiffle", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"ToStringWithDateCorrection", ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
        "\"\<-\>\""}], "]"}], "&"}], ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2024", ",", "2", ",", "1"}], "}"}], ",", 
       RowBox[{"DateObject", "[", "lastLoadDay", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"heatStockDataOriginal", "=", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{
         "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
          "\"\<\\\\heat_stock.csv\>\""}], "]"}], "&"}], ",", 
       "\[IndentingNewLine]", "loadDayStamps"}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"$Failed", "->", "\"\<no data\>\""}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"heatStockDataNet", "=", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{
         "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
          "\"\<\\\\heat_stock_net.csv\>\""}], "]"}], "&"}], ",", 
       "\[IndentingNewLine]", "loadDayStamps"}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"$Failed", "->", "\"\<no data\>\""}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"badDays", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Intersection", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"heatStockDataOriginal", ",", "$Failed"}], "]"}], "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"heatStockDataNet", ",", "$Failed"}], "]"}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodDays", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "loadDayStamps", "]"}], "]"}], ",", "badDays"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dayN", ",", "timeStamps"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dayN", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"loadDayStamps", ",", "day"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"timeStamps", "=", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"HourAndMinuteToMinuteOfDay", "[", 
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "10"}], ",", 
               RowBox[{"-", "7"}]}], "}"}]}], "]"}], "]"}], "&"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"FileNames", "[", 
            RowBox[{"All", ",", 
             RowBox[{
             "rawDataRoot", "<>", "\"\<\\\\\>\"", "<>", "day", "<>", 
              "\"\<\\\\heatmeter_images\\\\\>\""}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringEndsQ", "[", 
             RowBox[{"#", ",", "\"\<.png\>\""}], "]"}], "&"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<day\>\"", ",", "\"\<original\>\"", ",", "\"\<net\>\"", ",", 
           "\"\<diff\>\""}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"loadDayStamps", "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"heatStockDataOriginal", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"heatStockDataOriginal", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", "5"}], "]"}], "]"}], ",", 
             "\"\<no data\>\""}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"heatStockDataNet", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"heatStockDataNet", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", "5"}], "]"}], "]"}], ",", 
             "\"\<no data\>\""}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Dimensions", "[", 
                RowBox[{"heatStockDataOriginal", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
               RowBox[{"{", "}"}]}], "&&", 
              RowBox[{
               RowBox[{"Dimensions", "[", 
                RowBox[{"heatStockDataNet", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
               RowBox[{"{", "}"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"heatStockDataNet", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", "5"}], "]"}], "]"}], "-", 
              RowBox[{
               RowBox[{
                RowBox[{"heatStockDataOriginal", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", "5"}], "]"}], "]"}]}], ",", 
             "\"\<no data\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"heatStockDataOriginal", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"heatStockDataOriginal", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}],
                  ",", "Nothing"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"heatStockDataNet", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"heatStockDataNet", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}],
                  ",", "Nothing"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "->", "All"}], ",", 
             RowBox[{"Ticks", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#", ",", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"MinuteOfDayToHourAndMinute", "[", "#", "]"}], 
                    ",", 
                    RowBox[{"Pi", " ", "0.25"}]}], "]"}]}], "}"}], "&"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"24", " ", "60"}], ",", " ", "120"}], "]"}]}], 
                 "]"}], ",", "Automatic"}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<cycle \>\"", "<>", 
               RowBox[{"ToString", "[", "cycle", "]"}]}]}], ",", 
             RowBox[{"Prolog", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"If", "[", 
                RowBox[{"showCaptures", ",", 
                 RowBox[{"{", 
                  RowBox[{"Pink", ",", "Thin", ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "10000"}], "}"}]}], "}"}], "]"}], "&"}],
                     ",", "timeStamps"}], "]"}]}], "}"}]}], "]"}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"showCaptures", ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"day", ",", 
       RowBox[{
        RowBox[{"loadDayStamps", "[", 
         RowBox[{"[", "goodDays", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"loadDayStamps", "[", 
      RowBox[{"[", "goodDays", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]",
   "]"}]}], "Input",
 CellChangeTimes->{{3.926487626803466*^9, 3.9264876291320148`*^9}, {
   3.9264879039344945`*^9, 3.926487946153433*^9}, {3.926488511974119*^9, 
   3.92648851432641*^9}, {3.9264886510208015`*^9, 3.9264886957487745`*^9}, {
   3.926489790955743*^9, 3.9264897909880457`*^9}, {3.926490098530619*^9, 
   3.926490098729957*^9}, {3.926490178483502*^9, 3.9264901785258703`*^9}, 
   3.926490317506263*^9, {3.9264908239984217`*^9, 3.9264908497907763`*^9}, {
   3.9264908847250743`*^9, 3.9264908848404217`*^9}, {3.9264913361950026`*^9, 
   3.926491336251018*^9}, {3.9264918570526185`*^9, 3.9264918571108727`*^9}, {
   3.9264920159834485`*^9, 3.9264920160389705`*^9}, {3.9264924372892046`*^9, 
   3.9264924373466125`*^9}, {3.926493371842695*^9, 3.9264933719033117`*^9}, {
   3.92649503118521*^9, 3.926495052835286*^9}, {3.9264954554131327`*^9, 
   3.9264954556830378`*^9}, {3.926495500371458*^9, 3.9264955004271765`*^9}, {
   3.9264968790421133`*^9, 3.9264968790999117`*^9}, {3.9264969092487693`*^9, 
   3.9264969093494167`*^9}, {3.926497526421712*^9, 3.9264975264805517`*^9}, {
   3.92649780337027*^9, 3.92649780343392*^9}, {3.926506902380454*^9, 
   3.9265069026370044`*^9}, {3.9265073593662014`*^9, 
   3.9265073594282985`*^9}, {3.926507833666227*^9, 3.9265078339122815`*^9}, {
   3.9265083603361*^9, 3.926508360626668*^9}, {3.9265084599917655`*^9, 
   3.9265084603003054`*^9}, {3.926510884409176*^9, 3.926510887504158*^9}, {
   3.92651118365746*^9, 3.9265111837609887`*^9}, {3.9265113679032435`*^9, 
   3.9265113684898396`*^9}, {3.926512068518323*^9, 3.9265120685703387`*^9}, {
   3.9265123229490523`*^9, 3.9265123254026546`*^9}, {3.9265125203501453`*^9, 
   3.926512520411183*^9}, {3.926513413831066*^9, 3.9265134139212017`*^9}, {
   3.926514570591022*^9, 3.9265145706926904`*^9}, {3.9265899235810657`*^9, 
   3.926589923660239*^9}, {3.926590291677614*^9, 3.926590291739766*^9}, {
   3.9265923927588134`*^9, 3.926592393276374*^9}, 3.926592432237482*^9},
 CellLabel->
  "In[6103]:=",ExpressionUUID->"4edeefdc-67c6-4a5f-a78b-35c2e7d14f88"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`day$$ = 
    "2024-03-29", $CellContext`showCaptures$$ = False, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`showCaptures$$], {False, True}}, {{
       Hold[$CellContext`day$$], "2024-03-29"}, {
      "2024-02-01", "2024-02-02", "2024-02-03", "2024-02-04", "2024-02-05", 
       "2024-02-06", "2024-02-07", "2024-02-08", "2024-02-09", "2024-02-10", 
       "2024-02-11", "2024-02-12", "2024-02-13", "2024-02-14", "2024-02-15", 
       "2024-02-16", "2024-02-17", "2024-02-18", "2024-02-19", "2024-02-20", 
       "2024-02-21", "2024-02-22", "2024-02-23", "2024-02-24", "2024-02-25", 
       "2024-02-26", "2024-02-27", "2024-02-28", "2024-02-29", "2024-03-01", 
       "2024-03-02", "2024-03-03", "2024-03-04", "2024-03-05", "2024-03-06", 
       "2024-03-07", "2024-03-08", "2024-03-09", "2024-03-10", "2024-03-11", 
       "2024-03-12", "2024-03-13", "2024-03-14", "2024-03-15", "2024-03-16", 
       "2024-03-17", "2024-03-18", "2024-03-19", "2024-03-20", "2024-03-21", 
       "2024-03-22", "2024-03-23", "2024-03-24", "2024-03-25", "2024-03-26", 
       "2024-03-27", "2024-03-28", "2024-03-29"}}}, Typeset`size$$ = {
    1028., {141.33403309800195`, 147.06596690199802`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`day$$ = 
        "2024-03-29", $CellContext`showCaptures$$ = False}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`dayN$, $CellContext`timeStamps$}, \
$CellContext`dayN$ = Part[
           Part[
            Position[$CellContext`loadDayStamps, $CellContext`day$$], 1], 
           1]; $CellContext`timeStamps$ = 
         Map[$CellContext`HourAndMinuteToMinuteOfDay[
            StringTake[#, {-10, -7}]]& , 
           Select[
            FileNames[All, 
             
             StringJoin[$CellContext`rawDataRoot, "\\", $CellContext`day$$, 
              "\\heatmeter_images\\"]], StringEndsQ[#, ".png"]& ]]; 
        Grid[{{"day", "original", "net", "diff"}, {
            Part[$CellContext`loadDayStamps, $CellContext`dayN$], 
            If[Dimensions[
               
               Part[$CellContext`heatStockDataOriginal, $CellContext`dayN$]] != \
{}, 
             Part[
              Part[
               
               Part[$CellContext`heatStockDataOriginal, $CellContext`dayN$], \
-1], 
              Span[2, 5]], "no data"], 
            If[Dimensions[
               Part[$CellContext`heatStockDataNet, $CellContext`dayN$]] != {}, 
             Part[
              Part[
               Part[$CellContext`heatStockDataNet, $CellContext`dayN$], -1], 
              Span[2, 5]], "no data"], 
            If[
             And[Dimensions[
                
                Part[$CellContext`heatStockDataOriginal, $CellContext`dayN$]] != \
{}, Dimensions[
                
                Part[$CellContext`heatStockDataNet, $CellContext`dayN$]] != \
{}], Part[
               Part[
                Part[$CellContext`heatStockDataNet, $CellContext`dayN$], -1], 
               Span[2, 5]] - Part[
              Part[
               
               Part[$CellContext`heatStockDataOriginal, $CellContext`dayN$], \
-1], 
              Span[2, 5]], "no data"]}, 
           Table[
            ListPlot[{
              If[Dimensions[
                 
                 Part[$CellContext`heatStockDataOriginal, \
$CellContext`dayN$]] != {}, 
               Transpose[
                Part[
                 Transpose[
                  
                  Part[$CellContext`heatStockDataOriginal, \
$CellContext`dayN$]], {1, 1 + $CellContext`cycle}]], Nothing], 
              If[Dimensions[
                 
                 Part[$CellContext`heatStockDataNet, $CellContext`dayN$]] != \
{}, 
               Transpose[
                Part[
                 Transpose[
                  Part[$CellContext`heatStockDataNet, $CellContext`dayN$]], {
                 1, 1 + $CellContext`cycle}]], Nothing]}, Joined -> True, 
             PlotRange -> All, Ticks -> {
               Map[{#, 
                 Rotate[
                  $CellContext`MinuteOfDayToHourAndMinute[#], Pi 0.25]}& , 
                Range[0, 24 60, 120]], Automatic}, ImageSize -> 250, 
             PlotLabel -> StringJoin["cycle ", 
               ToString[$CellContext`cycle]], Prolog -> {
               If[$CellContext`showCaptures$$, {Pink, Thin, 
                 Map[
                 Line[{{#, 0}, {#, 
                    10000}}]& , $CellContext`timeStamps$]}]}], \
{$CellContext`cycle, 1, 4}]}]], 
      "Specifications" :> {{$CellContext`showCaptures$$, {
         False, True}}, {{$CellContext`day$$, "2024-03-29"}, {
         "2024-02-01", "2024-02-02", "2024-02-03", "2024-02-04", "2024-02-05",
           "2024-02-06", "2024-02-07", "2024-02-08", "2024-02-09", 
          "2024-02-10", "2024-02-11", "2024-02-12", "2024-02-13", 
          "2024-02-14", "2024-02-15", "2024-02-16", "2024-02-17", 
          "2024-02-18", "2024-02-19", "2024-02-20", "2024-02-21", 
          "2024-02-22", "2024-02-23", "2024-02-24", "2024-02-25", 
          "2024-02-26", "2024-02-27", "2024-02-28", "2024-02-29", 
          "2024-03-01", "2024-03-02", "2024-03-03", "2024-03-04", 
          "2024-03-05", "2024-03-06", "2024-03-07", "2024-03-08", 
          "2024-03-09", "2024-03-10", "2024-03-11", "2024-03-12", 
          "2024-03-13", "2024-03-14", "2024-03-15", "2024-03-16", 
          "2024-03-17", "2024-03-18", "2024-03-19", "2024-03-20", 
          "2024-03-21", "2024-03-22", "2024-03-23", "2024-03-24", 
          "2024-03-25", "2024-03-26", "2024-03-27", "2024-03-28", 
          "2024-03-29"}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1078., {196.13403328722342`, 201.86596671277658`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.9264879474317265`*^9, {3.9264881365004597`*^9, 3.9264881847184143`*^9}, 
   3.926488514636073*^9, 3.926488653035104*^9, 3.9264886961831264`*^9, 
   3.9264892268364983`*^9, {3.9264897667475677`*^9, 3.9264897913633556`*^9}, 
   3.9264898337198067`*^9, 3.9264900426414423`*^9, 3.92649009905409*^9, 
   3.9264901789681196`*^9, 3.9264903178748956`*^9, 3.9264907814454007`*^9, {
   3.926490825631588*^9, 3.9264908513725615`*^9}, 3.9264908863507414`*^9, 
   3.926491240510536*^9, 3.9264912818390837`*^9, {3.926491320285535*^9, 
   3.926491337761351*^9}, 3.926491476679671*^9, 3.926491858334759*^9, 
   3.926491984977523*^9, 3.926492017679846*^9, {3.9264924216426377`*^9, 
   3.926492438876682*^9}, 3.9264932114111924`*^9, 3.9264932483446736`*^9, 
   3.926493372539054*^9, 3.9264949710879264`*^9, {3.926495013321425*^9, 
   3.926495054295497*^9}, {3.9264952997718134`*^9, 3.9264953281024265`*^9}, {
   3.9264954397161627`*^9, 3.9264954568738775`*^9}, 3.92649550342159*^9, 
   3.9264956335924745`*^9, 3.926496664498308*^9, 3.9264967003324623`*^9, {
   3.926496812625079*^9, 3.926496818695339*^9}, {3.9264968623597107`*^9, 
   3.926496880058401*^9}, 3.9264969114389267`*^9, 3.9264973924077854`*^9, {
   3.9264975079432354`*^9, 3.9264975274429426`*^9}, {3.926497784803477*^9, 
   3.926497805404852*^9}, 3.926497983238365*^9, 3.926506904730691*^9, 
   3.9265071534713707`*^9, 3.926507230206668*^9, 3.9265072668782244`*^9, 
   3.926507325235034*^9, 3.9265073616099386`*^9, 3.926507690844803*^9, 
   3.9265078014398117`*^9, 3.926507835905185*^9, 3.9265082052643323`*^9, 
   3.9265083640014153`*^9, {3.9265084625434256`*^9, 3.9265084809161186`*^9}, 
   3.926510827440632*^9, 3.926510889916275*^9, 3.9265111506245885`*^9, 
   3.926511187742586*^9, 3.9265113239756513`*^9, 3.9265113725692806`*^9, {
   3.926512045792496*^9, 3.9265120711153493`*^9}, 3.926512246849595*^9, 
   3.926512325884589*^9, 3.9265124688077636`*^9, {3.926512500799781*^9, 
   3.92651252100568*^9}, 3.9265130237901373`*^9, 3.9265130944279647`*^9, 
   3.9265131652607565`*^9, 3.926513223183564*^9, 3.9265132858072095`*^9, 
   3.9265133359694247`*^9, 3.926513414573474*^9, 3.926514005907502*^9, 
   3.926514403284069*^9, 3.926514446261652*^9, 3.9265144861010265`*^9, 
   3.926514572485228*^9, {3.9265898922915106`*^9, 3.926589897061067*^9}, 
   3.9265899278736863`*^9, 3.926590255297968*^9, 3.926590292235428*^9, 
   3.926592437257222*^9, 3.9265927792572117`*^9, 3.9265928715278144`*^9, 
   3.9265929354886503`*^9, 3.9265933764323053`*^9, 3.926593512521063*^9, {
   3.9265935852307844`*^9, 3.9265936060169764`*^9}, 3.9265937115467114`*^9, 
   3.92659376027773*^9, 3.9265942216428366`*^9, 3.9265943790136104`*^9, 
   3.926594420433*^9, {3.92659453087303*^9, 3.926594547854407*^9}, 
   3.9265946032241783`*^9, 3.9265948361715374`*^9, {3.926594870921565*^9, 
   3.9265948778432693`*^9}, 3.9265950004811263`*^9, {3.9265951949545755`*^9, 
   3.926595223449504*^9}, 3.9265956200993547`*^9, 3.926595693066337*^9, 
   3.9265957247463207`*^9, 3.9265957558055806`*^9, {3.926595791430488*^9, 
   3.926595815853423*^9}, {3.926596664548005*^9, 3.9265966898490915`*^9}, 
   3.9265967564278555`*^9, 3.9265978156292353`*^9, {3.926597869527507*^9, 
   3.926597890524105*^9}, 3.9265982023385367`*^9, {3.9265982515483823`*^9, 
   3.92659827483115*^9}, 3.9265983713275805`*^9, 3.9265991644955425`*^9, 
   3.9265992246919394`*^9, 3.926600651316723*^9, 3.926600687222706*^9, {
   3.9266009461696987`*^9, 3.926600965837453*^9}, 3.926601104563336*^9, {
   3.926601986030177*^9, 3.926602010309459*^9}, 3.9266024025941243`*^9, {
   3.926602438673465*^9, 3.926602458594005*^9}, 3.926602542207994*^9, {
   3.9266027163355484`*^9, 3.9266027610895953`*^9}, 3.926602807711078*^9, 
   3.9266034808298397`*^9, 3.9266035438934536`*^9, {3.9266036233302493`*^9, 
   3.926603651700077*^9}, 3.9266037477137575`*^9, 3.9266037939321394`*^9, 
   3.9266038482854323`*^9, {3.9266038921726894`*^9, 3.926603961096862*^9}, {
   3.926604570691636*^9, 3.9266045914259005`*^9}, {3.926604764598268*^9, 
   3.926604780731309*^9}, {3.9266050952737646`*^9, 3.9266051186402273`*^9}, {
   3.9266053408053813`*^9, 3.926605383297173*^9}, {3.9266055584189386`*^9, 
   3.9266055858326426`*^9}, {3.926605769633848*^9, 3.926605789078451*^9}, {
   3.9266058671333237`*^9, 3.9266058968060484`*^9}, 3.926606136612389*^9, 
   3.9266063711930785`*^9, 3.926606406620182*^9, {3.926606562294856*^9, 
   3.9266065798745093`*^9}, 3.9266078227188663`*^9, 3.9266078827420373`*^9, 
   3.926608298541871*^9, {3.9266083659886184`*^9, 3.9266083879245005`*^9}, {
   3.9266085209316316`*^9, 3.9266085711103106`*^9}, 3.926608633834733*^9, 
   3.9266087963572545`*^9, 3.9266088366100907`*^9, 3.92660912648716*^9, 
   3.9266091662657022`*^9, 3.926609205175126*^9, {3.9266092538848815`*^9, 
   3.926609272838417*^9}},
 CellLabel->
  "Out[6111]=",ExpressionUUID->"6505e617-071a-42f6-bd95-7cb73ce9c044"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 39, 1, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708677827234`*^9},
 CellLabel->"",ExpressionUUID->"fc00a36d-9c1b-442b-9896-c66cb4f717c8"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 39, 2, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708678398542`*^9},
 CellLabel->"",ExpressionUUID->"4eaca1ca-3c66-4449-954c-3b5c39ca3983"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 39, 3, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867855852*^9},
 CellLabel->"",ExpressionUUID->"add79bdb-8a8f-4eac-84e3-66db977e1366"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 39, 4, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708678658524`*^9},
 CellLabel->"",ExpressionUUID->"9c328a8b-0b97-4a6b-b1ac-5032908b739e"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 39, 5, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867876005*^9},
 CellLabel->"",ExpressionUUID->"eccd7dcb-011f-4978-8f9c-515ae89e47b3"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 39, 6, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867888008*^9},
 CellLabel->"",ExpressionUUID->"6c33a815-87a9-4906-ba12-d4d9e5e5cade"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 39, 7, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867897009*^9},
 CellLabel->"",ExpressionUUID->"c189daf7-cbe6-40f4-ace6-942825b4adeb"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 39, 8, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708679060287`*^9},
 CellLabel->"",ExpressionUUID->"b29d1902-b7b6-4b1c-ba6d-c19d62e5e04a"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 39, 9, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708679200344`*^9},
 CellLabel->"",ExpressionUUID->"1c67b3c4-82c7-4ac3-8d5a-0175fb7a31cd"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 39, 10, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867937038*^9},
 CellLabel->"",ExpressionUUID->"eb7f36b6-9f55-4c26-aadd-45a9f974c9f6"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 39, 11, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708679510374`*^9},
 CellLabel->"",ExpressionUUID->"1fde6bdf-14c7-429c-ad94-8f3622cc3af0"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 39, 12, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867964033*^9},
 CellLabel->"",ExpressionUUID->"677483fe-0a85-4486-a596-f3a8d0fd98f4"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 39, 13, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867996535*^9},
 CellLabel->"",ExpressionUUID->"eebb4732-4a5e-4923-81a3-06592ee7e48f"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 39, 14, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870868027907*^9},
 CellLabel->"",ExpressionUUID->"43857139-5ad1-4820-ace7-a9d6a4bfdc34"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 39, 15, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708680553646`*^9},
 CellLabel->"",ExpressionUUID->"12147c85-3192-4385-8fde-7e7419eb9188"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 39, 16, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708680881343`*^9},
 CellLabel->"",ExpressionUUID->"87972f3e-0bc8-43db-9dec-e7bf27221fc8"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 598, 513, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496441149*^9},
 CellLabel->"",ExpressionUUID->"6f33cbf9-dfac-45ab-92c5-b90604dc3bc0"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 598, 514, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92687949644616*^9},
 CellLabel->"",ExpressionUUID->"4617ef93-bac6-407f-9045-266fdea6a6f6"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 598, 515, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794964581637`*^9},
 CellLabel->"",ExpressionUUID->"1d797dbd-91c3-4d8c-909d-80c758fd242b"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 598, 516, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496488475*^9},
 CellLabel->"",ExpressionUUID->"d0bd7609-3112-40cc-8f38-b842b19a98d8"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 598, 517, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496520047*^9},
 CellLabel->"",ExpressionUUID->"971394b7-019d-474f-a7a5-bcfd52667843"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 598, 518, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794965511103`*^9},
 CellLabel->"",ExpressionUUID->"6e0bebb6-9d18-43ed-92d3-8ef8294ff640"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 598, 519, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794965825033`*^9},
 CellLabel->"",ExpressionUUID->"74aa40d9-9c49-43a1-989e-3fc212200b86"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 598, 520, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496617985*^9},
 CellLabel->"",ExpressionUUID->"42cbb2b9-20a9-4bc6-b790-2cd7a5d5cffa"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 598, 521, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794966458206`*^9},
 CellLabel->"",ExpressionUUID->"3e0079fc-af64-4852-95e2-c6c76857d115"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 598, 522, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496677255*^9},
 CellLabel->"",ExpressionUUID->"714d20bf-5804-4e92-9e45-cb77787b530f"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 598, 523, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794967091365`*^9},
 CellLabel->"",ExpressionUUID->"f3534991-af09-4e10-bf9b-dd86c777f38f"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 598, 524, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794967400455`*^9},
 CellLabel->"",ExpressionUUID->"691fa287-c970-4cf8-911c-b88ba92e6f27"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 598, 525, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794967718534`*^9},
 CellLabel->"",ExpressionUUID->"52420f73-cc4c-4e85-8b04-0a01cefcee98"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 598, 526, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794968010406`*^9},
 CellLabel->"",ExpressionUUID->"ebc1d064-c5a6-48e1-9f4f-e495338ad6fd"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 598, 527, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496832575*^9},
 CellLabel->"",ExpressionUUID->"6d6d46df-77a2-426c-979b-16c762fa6869"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 598, 528, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794968641443`*^9},
 CellLabel->"",ExpressionUUID->"f3eaa398-a9fb-4947-b11c-130a76e2d36d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 47, 2, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199237415*^9},
 CellLabel->"",ExpressionUUID->"0e246d32-56ba-4d2b-af61-2fd3a8508125"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 47, 3, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161992655134`*^9},
 CellLabel->"",ExpressionUUID->"50eebbe6-56a7-4f8a-8efb-1fb52b7dae8d"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 4, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161992755322`*^9},
 CellLabel->"",ExpressionUUID->"2c677898-0bf6-4f1c-b2cf-9af637c15120"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 5, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199283532*^9},
 CellLabel->"",ExpressionUUID->"e6ade439-9a0b-416d-aef4-a2ceb773bc45"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 47, 6, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199291713*^9},
 CellLabel->"",ExpressionUUID->"3babb71c-19ec-484a-9d34-216d24de2143"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 7, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161993008356`*^9},
 CellLabel->"",ExpressionUUID->"779a3319-2f61-472e-a987-77ee3a796621"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 8, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161993078375`*^9},
 CellLabel->"",ExpressionUUID->"65e7f7b5-c1c4-45cb-a7b8-db99fa0a6ff4"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 9, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92711619931584*^9},
 CellLabel->"",ExpressionUUID->"edc56215-2a74-4e6d-88f1-6258d30e100f"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 10, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161993240027`*^9},
 CellLabel->"",ExpressionUUID->"49e46d07-cd36-4094-b9cd-c76c56b34ea8"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 11, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199333107*^9},
 CellLabel->"",ExpressionUUID->"92e202b8-178d-4f41-8533-6796cb5739ab"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 12, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199350232*^9},
 CellLabel->"",ExpressionUUID->"72f17fa2-2fb9-4ce0-998b-a0c04d88887d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 13, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161993757534`*^9},
 CellLabel->"",ExpressionUUID->"b0ff2be6-7fa8-46d1-8d08-302779f3635e"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 14, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161994879675`*^9},
 CellLabel->"",ExpressionUUID->"e5d4ca5f-b200-4df2-b744-fa87b876f992"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 15, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161995035844`*^9},
 CellLabel->"",ExpressionUUID->"d271a6e9-3a4b-42ec-9d01-ae00d038a6f6"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 16, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199533416*^9},
 CellLabel->"",ExpressionUUID->"f9368bb1-5fa4-4640-97a6-dfbba25a81c3"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 17, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161995662413`*^9},
 CellLabel->"",ExpressionUUID->"0a349068-e8dd-4339-ab9e-0cdcce72aeed"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 47, 2, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153497158*^9},
 CellLabel->"",ExpressionUUID->"d608247f-ffc0-43e0-ac1a-5c498c5dfe9e"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 47, 3, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221535349965`*^9},
 CellLabel->"",ExpressionUUID->"dc75ff62-8bd7-43e8-aca7-78984fb407c1"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 4, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221535479984`*^9},
 CellLabel->"",ExpressionUUID->"c79ccb66-ef53-4971-9097-1ae0152f5f60"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 5, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221535600014`*^9},
 CellLabel->"",ExpressionUUID->"a4fa8bb2-4a92-437b-ab12-ca930c669b56"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 47, 6, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153571132*^9},
 CellLabel->"",ExpressionUUID->"5cf1528c-17d6-4847-be64-375ea330cc23"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 7, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153585151*^9},
 CellLabel->"",ExpressionUUID->"6366871b-d8df-4ec2-8bf2-d56e8b2fc287"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 8, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221536112213`*^9},
 CellLabel->"",ExpressionUUID->"5f2c98c2-fee5-4774-9144-e3d22ec10f80"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 9, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221536232233`*^9},
 CellLabel->"",ExpressionUUID->"ffcba76c-62a0-4fa4-aadc-21829ff750c2"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 10, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221536366963`*^9},
 CellLabel->"",ExpressionUUID->"9222602c-c0e8-437d-9ddc-b0266178acc4"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 11, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153676272*^9},
 CellLabel->"",ExpressionUUID->"7a4c26ea-2ab4-468d-be07-13f9451351b7"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 12, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153704366*^9},
 CellLabel->"",ExpressionUUID->"b41ebeb9-3fdc-4e5b-b373-66b9a3583319"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 13, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153733773*^9},
 CellLabel->"",ExpressionUUID->"14d5f4cd-3cf5-4154-b470-6e2cd3000445"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 14, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153765457*^9},
 CellLabel->"",ExpressionUUID->"a221a849-695b-4a2e-84b3-e7c8215cbeff"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 15, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153796212*^9},
 CellLabel->"",ExpressionUUID->"fc748c03-3ed2-4d34-9e58-635d22bf6562"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 16, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153828998*^9},
 CellLabel->"",ExpressionUUID->"d1e49d41-eb5b-4670-ace8-95ea5fcbadfd"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 17, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221538602896`*^9},
 CellLabel->"",ExpressionUUID->"f768a5e8-b6cb-42dd-ab63-de1d756756b8"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 47, 2, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293945919055*^9},
 CellLabel->"",ExpressionUUID->"f2d493c4-0c35-45d5-8b5f-2905ecc13d22"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 47, 3, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293945965062*^9},
 CellLabel->"",ExpressionUUID->"c0b2b6db-8e8e-4305-a1d5-f465776d8435"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 4, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939459770727`*^9},
 CellLabel->"",ExpressionUUID->"68874fe8-a89a-4756-9a86-05965f078579"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 5, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293945991074*^9},
 CellLabel->"",ExpressionUUID->"d8b441d8-c542-47c5-b9ca-8b550cb18da4"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 47, 6, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946007077*^9},
 CellLabel->"",ExpressionUUID->"9d2d9938-b261-4e25-86bf-fcb961ae1a3c"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 7, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939460230837`*^9},
 CellLabel->"",ExpressionUUID->"5225d770-1c17-4d28-b67c-7dccaa458a27"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 8, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946149046*^9},
 CellLabel->"",ExpressionUUID->"9b36af11-fb95-4784-bbd9-dfb2949e6fd9"],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 9, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946165052*^9},
 CellLabel->"",ExpressionUUID->"ccc90345-fc8c-493a-8638-890cd6964e51"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 10, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939461750674`*^9},
 CellLabel->"",ExpressionUUID->"af456469-1387-4042-857b-57178c3a7abf"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 11, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939462036753`*^9},
 CellLabel->"",ExpressionUUID->"e05c5a0e-f78c-40c6-af31-3b961e70a71c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 12, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946235196*^9},
 CellLabel->"",ExpressionUUID->"209672b6-27b2-429d-90b8-ac2782bde273"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 13, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939462714834`*^9},
 CellLabel->"",ExpressionUUID->"6c5b3c31-ab22-4c3b-ac7e-64286f1bab91"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 14, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946302933*^9},
 CellLabel->"",ExpressionUUID->"f2a40aaa-1f11-4051-883a-faf151cd57e5"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 15, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946332472*^9},
 CellLabel->"",ExpressionUUID->"3bc316ed-f12d-47f9-b2c9-4285cbcb4407"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 16, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946353145*^9},
 CellLabel->"",ExpressionUUID->"6c109b4b-8ffe-42bb-97d1-9ffe14dbfce9"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 17, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946385004*^9},
 CellLabel->"",ExpressionUUID->"5121acf3-dc00-45b8-9942-d0c2634ed61f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cycle", "=", "2"}], ";", 
  RowBox[{"timeSpan", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"15", ",", "24"}], "}"}], "100"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"day", "=", 
   RowBox[{
    RowBox[{"loadDayStamps", "[", 
     RowBox[{"[", "goodDays", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dayN", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"loadDayStamps", ",", "day"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"timeStamps", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringTake", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", 
            RowBox[{"-", "7"}]}], "}"}]}], "]"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"FileNames", "[", 
         RowBox[{"All", ",", 
          RowBox[{
          "rawDataRoot", "<>", "\"\<\\\\\>\"", "<>", "day", "<>", 
           "\"\<\\\\heatmeter_images\\\\\>\""}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"StringEndsQ", "[", 
          RowBox[{"#", ",", "\"\<.png\>\""}], "]"}], "&"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cycleImagesForTimeSpan", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
       "rawDataRoot", "<>", "\"\<\\\\\>\"", "<>", "day", "<>", 
        "\"\<\\\\heatmeter_images\\\\\>\"", "<>", 
        RowBox[{"ToStringWithDateCorrection", "[", 
         RowBox[{"#", ",", "4"}], "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "cycle", "]"}], "<>", "\"\<.png\>\""}], 
       "]"}], "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{"Select", "[", 
      RowBox[{"timeStamps", ",", 
       RowBox[{
        RowBox[{"Between", "[", 
         RowBox[{"#", ",", "timeSpan"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", 
            RowBox[{"heatStockDataOriginal", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"heatStockDataOriginal", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}], 
            ",", 
            RowBox[{
             RowBox[{"Between", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Map", "[", 
                RowBox[{"HourAndMinuteToMinuteOfDay", ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ToStringWithDateCorrection", "[", 
                    RowBox[{"#", ",", "4"}], "]"}], "&"}], ",", "timeSpan"}], 
                  "]"}]}], "]"}]}], "]"}], "&"}]}], "]"}], ",", "Nothing"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", 
            RowBox[{"heatStockDataNet", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"heatStockDataNet", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}], 
            ",", 
            RowBox[{
             RowBox[{"Between", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Map", "[", 
                RowBox[{"HourAndMinuteToMinuteOfDay", ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ToStringWithDateCorrection", "[", 
                    RowBox[{"#", ",", "4"}], "]"}], "&"}], ",", "timeSpan"}], 
                  "]"}]}], "]"}]}], "]"}], "&"}]}], "]"}], ",", "Nothing"}], 
         "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"MinuteOfDayToHourAndMinute", "[", "#", "]"}], ",", 
                RowBox[{"Pi", " ", "0.5"}]}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{"24", " ", "60"}], ",", " ", "10"}], "]"}]}], "]"}], ",",
          "Automatic"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"day", "<>", "\"\<, cycle \>\"", "<>", 
        RowBox[{"ToString", "[", "cycle", "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"timeStamps", ",", 
         RowBox[{
          RowBox[{"Between", "[", 
           RowBox[{"#", ",", "timeSpan"}], "]"}], "&"}]}], "]"}], ",", 
       "cycleImagesForTimeSpan"}], "}"}], "//", "Grid"}]}], 
   "\[IndentingNewLine]", "}"}], "//", "Column"}]}], "Input",
 CellChangeTimes->{{3.9264072364799986`*^9, 3.926407242347778*^9}, {
   3.9264114890920258`*^9, 3.926411514643262*^9}, {3.926411598249937*^9, 
   3.9264116330357466`*^9}, {3.9264118607799263`*^9, 3.926411864325836*^9}, {
   3.9264119510724287`*^9, 3.9264119603458567`*^9}, {3.9264121185204477`*^9, 
   3.926412143979905*^9}, {3.9264122536895223`*^9, 3.9264122629305477`*^9}, {
   3.926412430247726*^9, 3.926412444454441*^9}, {3.9264124935751667`*^9, 
   3.926412503986397*^9}, {3.926412831902872*^9, 3.926412858882677*^9}, {
   3.926413049455408*^9, 3.926413055794054*^9}, {3.9264131369562607`*^9, 
   3.9264131514140043`*^9}, {3.926413377894293*^9, 3.9264133836841326`*^9}, {
   3.9264135684369793`*^9, 3.926413588400985*^9}, {3.926413738095464*^9, 
   3.926413738431554*^9}, {3.9264138112320404`*^9, 3.926413822677439*^9}, {
   3.926413883178423*^9, 3.9264138942690415`*^9}, {3.9264139771290407`*^9, 
   3.9264140035005226`*^9}, {3.9264141136866302`*^9, 
   3.9264141145018735`*^9}, {3.9264142287295146`*^9, 3.926414250225365*^9}, {
   3.9264142961313615`*^9, 3.926414329857622*^9}, {3.9264143830373096`*^9, 
   3.926414383712015*^9}, {3.9264144499065847`*^9, 3.926414467132888*^9}, {
   3.926414498189108*^9, 3.926414534177368*^9}, {3.926414642651273*^9, 
   3.9264146520237527`*^9}, 3.9264148536191406`*^9, {3.926414906706523*^9, 
   3.926414908528827*^9}, {3.926415014458276*^9, 3.926415025251234*^9}, {
   3.926417254095313*^9, 3.9264172682435417`*^9}, {3.9264177212978153`*^9, 
   3.9264177542025614`*^9}, {3.9264179712613697`*^9, 
   3.9264179717704678`*^9}, {3.9264181145483203`*^9, 
   3.9264181151057806`*^9}, {3.9264182561715975`*^9, 
   3.9264182857882495`*^9}, {3.9264184938369036`*^9, 3.926418542176159*^9}, {
   3.9264188238238153`*^9, 3.926418841784096*^9}, {3.9264188812111683`*^9, 
   3.9264189714602594`*^9}, {3.926419431463194*^9, 3.926419441329981*^9}, {
   3.92641957579563*^9, 3.926419576356077*^9}, {3.9264196363595095`*^9, 
   3.9264196366391926`*^9}, {3.9264197013025217`*^9, 3.926419707068026*^9}, {
   3.9264197383271437`*^9, 3.9264197583023252`*^9}, {3.9264199396754093`*^9, 
   3.9264199500675783`*^9}, {3.9264199806164474`*^9, 3.926420022561701*^9}, {
   3.9264201816706567`*^9, 3.926420257516055*^9}, {3.9264204874521255`*^9, 
   3.9264205351928663`*^9}, {3.9264205948905783`*^9, 3.926420636574979*^9}, {
   3.926421438192114*^9, 3.926421460025833*^9}, {3.926421507813038*^9, 
   3.9264215178069825`*^9}, {3.9264215482570553`*^9, 
   3.9264215624520054`*^9}, {3.9264218036962004`*^9, 
   3.9264218186654224`*^9}, {3.9264218587204585`*^9, 
   3.9264218851028605`*^9}, {3.926422055330397*^9, 3.926422115489357*^9}, {
   3.9264221536323624`*^9, 3.9264221972178006`*^9}, {3.9264223051671877`*^9, 
   3.926422306695257*^9}, {3.9264223418914566`*^9, 3.926422376489458*^9}, {
   3.926422605680974*^9, 3.926422616663299*^9}, {3.926422661380201*^9, 
   3.926422705641957*^9}, {3.9264228001770563`*^9, 3.9264228494886227`*^9}, {
   3.9264229360077972`*^9, 3.9264229380246124`*^9}, {3.926423025474284*^9, 
   3.926423031147933*^9}, {3.926423079333934*^9, 3.9264230829608173`*^9}, {
   3.926423128586128*^9, 3.926423135392316*^9}, {3.926423176885584*^9, 
   3.926423176917591*^9}, {3.926423328187042*^9, 3.926423335818595*^9}, {
   3.92642339121998*^9, 3.9264233915692034`*^9}, {3.9264234818333454`*^9, 
   3.9264234831846485`*^9}, {3.9264235302181053`*^9, 3.926423568845829*^9}, {
   3.9264236463228426`*^9, 3.926423648099578*^9}, {3.9264236880452166`*^9, 
   3.9264236948031836`*^9}, {3.926423830770077*^9, 3.926423871721944*^9}, {
   3.926423912454385*^9, 3.9264239126682615`*^9}, {3.9264239693493423`*^9, 
   3.9264239709767036`*^9}, {3.92642405410944*^9, 3.9264240559357867`*^9}, {
   3.926424327829755*^9, 3.9264243300686536`*^9}, {3.926424376885307*^9, 
   3.92642438030267*^9}, {3.926424504297844*^9, 3.926424538754779*^9}, {
   3.9264246215089974`*^9, 3.9264246229773407`*^9}, {3.9264246855532317`*^9, 
   3.9264247162751827`*^9}, {3.926424835995689*^9, 3.926424847112885*^9}, {
   3.926424880931615*^9, 3.926424891706197*^9}, {3.9264249965622187`*^9, 
   3.9264250061235447`*^9}, {3.926425053053873*^9, 3.9264250600891867`*^9}, {
   3.9264251831740127`*^9, 3.9264251936682014`*^9}, {3.9264252423300695`*^9, 
   3.926425280239729*^9}, {3.926425339626813*^9, 3.926425355757595*^9}, {
   3.9264254571946507`*^9, 3.9264254685984945`*^9}, {3.9264784970181427`*^9, 
   3.926478507415406*^9}, {3.926478672852271*^9, 3.92647871667943*^9}, {
   3.926478822247656*^9, 3.9264788545432816`*^9}, {3.92647902932172*^9, 
   3.926479037669276*^9}, {3.9264791959495673`*^9, 3.926479199072749*^9}, {
   3.9264793291374736`*^9, 3.926479333103403*^9}, {3.9264794162812004`*^9, 
   3.9264794190587134`*^9}, {3.9264794821629906`*^9, 3.926479489245285*^9}, {
   3.9264796680195327`*^9, 3.9264796812129097`*^9}, {3.9264797914531283`*^9, 
   3.926479792487379*^9}, {3.9264798543561974`*^9, 3.9264798544484844`*^9}, {
   3.926479894254093*^9, 3.926479895423129*^9}, {3.926479950374217*^9, 
   3.9264800036297674`*^9}, {3.9264801071862745`*^9, 3.926480112713807*^9}, {
   3.9264802884955444`*^9, 3.9264802961389704`*^9}, {3.9264804139372287`*^9, 
   3.9264804491785545`*^9}, {3.9264804950360823`*^9, 
   3.9264805039932747`*^9}, {3.9264810027215977`*^9, 3.9264810116418395`*^9}, 
   3.926481122073368*^9, {3.926481650194172*^9, 3.9264817238407817`*^9}, {
   3.9264818628127055`*^9, 3.9264818674781837`*^9}, {3.9264819495277805`*^9, 
   3.9264819525770783`*^9}, {3.926482149372571*^9, 3.9264821816622477`*^9}, {
   3.9264822688326826`*^9, 3.9264822747686453`*^9}, {3.926482546485586*^9, 
   3.9264825483460574`*^9}, {3.926482719183716*^9, 3.926482722489172*^9}, {
   3.9264829239047036`*^9, 3.9264829239962983`*^9}, {3.9264857111377573`*^9, 
   3.9264857184828835`*^9}, {3.92648596422296*^9, 3.9264859694970655`*^9}, {
   3.9264860485851912`*^9, 3.9264860508896303`*^9}, {3.926486082065776*^9, 
   3.9264860844015484`*^9}, {3.9264861957399063`*^9, 3.92648620971955*^9}, {
   3.926486281119507*^9, 3.9264862811988688`*^9}, {3.926486352446354*^9, 
   3.9264863543144636`*^9}, {3.926486698351147*^9, 3.926486702461261*^9}, {
   3.9264867594948354`*^9, 3.926486800742699*^9}, {3.926486894578614*^9, 
   3.926486895674225*^9}, {3.9264869771917305`*^9, 3.926486978300516*^9}, {
   3.9264871313755193`*^9, 3.926487146586138*^9}, {3.926488525885645*^9, 
   3.9264885610941095`*^9}, {3.926488713931363*^9, 3.926488724542784*^9}, {
   3.9264887653668523`*^9, 3.926488769812092*^9}, {3.9264888142465334`*^9, 
   3.9264888182451315`*^9}, {3.926488859469617*^9, 3.9264888853249416`*^9}, {
   3.926488957071605*^9, 3.9264889586408153`*^9}, {3.9264890686910925`*^9, 
   3.9264890969520435`*^9}, {3.9264891724341583`*^9, 
   3.9264891745847025`*^9}, {3.9264898571119533`*^9, 3.926489858793618*^9}, {
   3.926489890241003*^9, 3.926489900627371*^9}, {3.9264899351250496`*^9, 
   3.926489939165303*^9}, {3.9264901276881123`*^9, 3.9264901503600154`*^9}, {
   3.9264902298953223`*^9, 3.926490295307829*^9}, {3.9264903705703382`*^9, 
   3.9264903844923267`*^9}, {3.9264904529049377`*^9, 3.926490455475918*^9}, {
   3.9264905068930306`*^9, 3.926490514252988*^9}, {3.9264905881420846`*^9, 
   3.926490591607292*^9}, {3.926490676695923*^9, 3.9264906779913397`*^9}, {
   3.9264907184378743`*^9, 3.926490758255999*^9}, {3.926490864154056*^9, 
   3.9264908642290397`*^9}, {3.926490902842174*^9, 3.9264909122090797`*^9}, {
   3.9264910204747443`*^9, 3.9264910250184097`*^9}, {3.926491070273568*^9, 
   3.9264911167217484`*^9}, {3.926491867781844*^9, 3.9264918770179095`*^9}, {
   3.926492051025815*^9, 3.9264920744447703`*^9}, {3.926492148657339*^9, 
   3.9264921488847775`*^9}, {3.926492229664424*^9, 3.926492229869747*^9}, {
   3.9264923031958036`*^9, 3.9264923049722614`*^9}, {3.9264923574078383`*^9, 
   3.9264923947331514`*^9}, {3.9264924740929604`*^9, 
   3.9264925194891233`*^9}, {3.9264926080425234`*^9, 3.926492612734022*^9}, {
   3.9264930224187946`*^9, 3.9264930241523848`*^9}, {3.926493058602172*^9, 
   3.9264930622832384`*^9}, {3.9264933901331844`*^9, 3.926493460498402*^9}, {
   3.926494798373819*^9, 3.9264948151181197`*^9}, {3.926494852633193*^9, 
   3.926494853674925*^9}, {3.926494889694126*^9, 3.926494894284453*^9}, {
   3.9264950902318773`*^9, 3.926495092022811*^9}, {3.9264951253589363`*^9, 
   3.926495137263161*^9}, {3.926495204177394*^9, 3.92649523880643*^9}, {
   3.926495467532956*^9, 3.926495476923521*^9}, 3.9264955256716957`*^9, {
   3.9264955733535614`*^9, 3.9264955734205494`*^9}, {3.9264956464874945`*^9, 
   3.9264956496881485`*^9}, {3.926495892760736*^9, 3.926495914322797*^9}, {
   3.926496065870363*^9, 3.9264960742634335`*^9}, 3.9264961587036586`*^9, {
   3.9264962352811522`*^9, 3.9264962360540676`*^9}, {3.926496297267731*^9, 
   3.9264962997197466`*^9}, {3.926496480960392*^9, 3.9264964835674267`*^9}, {
   3.926496523001401*^9, 3.9264965260016727`*^9}, {3.9264965903892813`*^9, 
   3.926496594501753*^9}, {3.9264967243684845`*^9, 3.926496729440487*^9}, {
   3.926496780630255*^9, 3.9264967812521796`*^9}, {3.926497023944377*^9, 
   3.9264970534446063`*^9}, {3.9264975754019575`*^9, 3.926497583395594*^9}, {
   3.9264976657860093`*^9, 3.9264976679293146`*^9}, {3.926497702378953*^9, 
   3.92649775756929*^9}, 3.9264978165744534`*^9, 3.9264978541360984`*^9, {
   3.9264979015726647`*^9, 3.926497932429932*^9}, {3.9265069926591215`*^9, 
   3.9265070050228224`*^9}, {3.926507167363351*^9, 3.926507179551921*^9}, {
   3.926507385962431*^9, 3.9265074307249546`*^9}, {3.926507867769854*^9, 
   3.9265078809181614`*^9}, {3.9265079986008*^9, 3.92650800572902*^9}, {
   3.92650805321025*^9, 3.9265080543214054`*^9}, {3.9265080877418127`*^9, 
   3.9265080990081177`*^9}, {3.9265081694483824`*^9, 3.926508170951696*^9}, {
   3.9265083751449313`*^9, 3.9265083756572437`*^9}, {3.9265084091967773`*^9, 
   3.926508409533721*^9}, {3.926508565768799*^9, 3.9265085719371667`*^9}, {
   3.926510899287006*^9, 3.926510913676368*^9}, {3.9265112222033043`*^9, 
   3.9265112282677937`*^9}, {3.9265121434791365`*^9, 3.926512160881693*^9}, {
   3.9265122235461583`*^9, 3.9265122236051717`*^9}, {3.9265124119190893`*^9, 
   3.926512411994759*^9}, {3.926512613952675*^9, 3.926512622723754*^9}, {
   3.9265127065112906`*^9, 3.9265127065863576`*^9}, {3.9265128366246953`*^9, 
   3.9265128379339867`*^9}, {3.926512890625114*^9, 3.9265129038137*^9}, {
   3.9265131127817144`*^9, 3.9265131369073095`*^9}, {3.9265134962180223`*^9, 
   3.926513541943781*^9}, {3.9265135776964417`*^9, 3.9265135975197325`*^9}, {
   3.926513930761111*^9, 3.9265139377372274`*^9}, {3.9265139715083942`*^9, 
   3.9265139753654876`*^9}, {3.9265142545512266`*^9, 
   3.9265142639830675`*^9}, {3.9265145980290422`*^9, 
   3.9265146065303135`*^9}, {3.9265896924303684`*^9, 3.926589750122533*^9}, {
   3.9265898238042765`*^9, 3.926589825848877*^9}, {3.9265899770522914`*^9, 
   3.9265899879497695`*^9}, {3.926590024363508*^9, 3.92659002644074*^9}, {
   3.9265901000756283`*^9, 3.9265901001375933`*^9}, {3.926590179132101*^9, 
   3.926590219507428*^9}, {3.9265905532789373`*^9, 3.926590559654626*^9}, {
   3.9265905899481916`*^9, 3.9265906000121183`*^9}, {3.9265924923874063`*^9, 
   3.926592492422541*^9}, {3.9265925424458294`*^9, 3.926592557691854*^9}, {
   3.926592642876705*^9, 3.926592645387694*^9}, {3.9265927223014417`*^9, 
   3.9265927620963826`*^9}, {3.9265929082696505`*^9, 3.92659291393556*^9}, {
   3.9265932275926657`*^9, 3.9265933141377115`*^9}, {3.92659341248956*^9, 
   3.926593415539278*^9}, {3.926593474122782*^9, 3.9265934795384717`*^9}, {
   3.9265935454986143`*^9, 3.926593546279192*^9}, {3.926593626522566*^9, 
   3.926593660418043*^9}, {3.9265937793541183`*^9, 3.9265937862497797`*^9}, {
   3.9265938594350834`*^9, 3.926593874328164*^9}, {3.926593958170705*^9, 
   3.9265939604244847`*^9}, {3.9265940377059884`*^9, 
   3.9265940404244823`*^9}, {3.9265941194347925`*^9, 
   3.9265941493847494`*^9}, {3.926594284201833*^9, 3.9265942911293507`*^9}, {
   3.9265943365393753`*^9, 3.926594338727977*^9}, {3.926594482731041*^9, 
   3.9265945173371234`*^9}, {3.9265945596265087`*^9, 3.926594584201765*^9}, 
   3.9265946165702405`*^9, {3.9265946532428236`*^9, 3.9265946532968245`*^9}, {
   3.926594684330827*^9, 3.9265946854179745`*^9}, {3.9265947628586264`*^9, 
   3.926594764408784*^9}, {3.926594814907276*^9, 3.9265948155935993`*^9}, {
   3.9265949379630485`*^9, 3.926594966634853*^9}, {3.9265950430828533`*^9, 
   3.9265950620265503`*^9}, {3.926595373964401*^9, 3.9265954187634335`*^9}, {
   3.926595579149962*^9, 3.9265955987141*^9}, {3.9265956596929893`*^9, 
   3.926595662776512*^9}, {3.926595847258791*^9, 3.9265958639046745`*^9}, {
   3.9265960717239494`*^9, 3.926596077513362*^9}, {3.9265962036911464`*^9, 
   3.9265962619461155`*^9}, {3.9265963731319532`*^9, 
   3.9265964095964193`*^9}, {3.9265964789393873`*^9, 
   3.9265964790341434`*^9}, {3.9265967156632195`*^9, 3.926596715720251*^9}, {
   3.926596813226695*^9, 3.92659681868176*^9}, {3.9265969328961296`*^9, 
   3.926596945801445*^9}, {3.926597043644322*^9, 3.926597046027336*^9}, {
   3.9265971431031837`*^9, 3.926597164753826*^9}, {3.926597317132826*^9, 
   3.926597319018307*^9}, {3.9265973982582836`*^9, 3.9265974010825953`*^9}, {
   3.9265974842044497`*^9, 3.9265974969864883`*^9}, 3.926597575179427*^9, {
   3.9265977398538456`*^9, 3.926597741018979*^9}, {3.9265977796922445`*^9, 
   3.926597798762704*^9}, {3.9265979240120964`*^9, 3.9265979455370007`*^9}, {
   3.9265979816453075`*^9, 3.9265979884427967`*^9}, {3.9265980483960505`*^9, 
   3.9265980529070387`*^9}, {3.9265982273400803`*^9, 3.926598230590615*^9}, {
   3.9265983218036118`*^9, 3.9265983474672613`*^9}, {3.9265991042689056`*^9, 
   3.9265991359795074`*^9}, {3.926599186285351*^9, 3.926599202428766*^9}, {
   3.926599242525693*^9, 3.926599245643672*^9}, {3.926600435550279*^9, 
   3.926600445292051*^9}, {3.9266007003799515`*^9, 3.926600702029422*^9}, {
   3.926600745469157*^9, 3.9266007599810143`*^9}, {3.9266007921424236`*^9, 
   3.9266007929403143`*^9}, {3.926600877198592*^9, 3.9266008794272447`*^9}, {
   3.926600980112239*^9, 3.9266010635016003`*^9}, {3.9266017178065653`*^9, 
   3.92660179141125*^9}, {3.9266020550881066`*^9, 3.9266020697421265`*^9}, {
   3.9266021187818313`*^9, 3.926602118835182*^9}, {3.926602248238006*^9, 
   3.9266022618215427`*^9}, {3.9266023111038914`*^9, 
   3.9266023127330513`*^9}, {3.9266023470861797`*^9, 3.92660235432199*^9}, {
   3.926602468638667*^9, 3.926602493117902*^9}, {3.9266027708145213`*^9, 
   3.9266027875893574`*^9}, 3.9266028192461834`*^9, 3.9266029203355618`*^9, {
   3.9266030400777035`*^9, 3.9266030416458125`*^9}, {3.9266031650555253`*^9, 
   3.9266031663174753`*^9}, {3.92660322276658*^9, 3.9266032247492404`*^9}, {
   3.926603263821638*^9, 3.9266033049322777`*^9}, {3.9266034402230015`*^9, 
   3.9266034418691053`*^9}, {3.9266035602707148`*^9, 
   3.9266035626539974`*^9}, {3.92660366303956*^9, 3.9266037087499313`*^9}, {
   3.92660386396581*^9, 3.9266038640198107`*^9}, {3.9266039990087767`*^9, 
   3.926604003086095*^9}, {3.9266041714402013`*^9, 3.926604196176862*^9}, {
   3.9266042918228903`*^9, 3.9266043121106863`*^9}, {3.9266043959202056`*^9, 
   3.926604433138178*^9}, {3.92660460599979*^9, 3.926604611102824*^9}, {
   3.92660464916741*^9, 3.9266046492634306`*^9}, {3.9266047087045946`*^9, 
   3.9266047464296494`*^9}, {3.926604802144213*^9, 3.9266048072670913`*^9}, {
   3.926604838047488*^9, 3.926604838191593*^9}, {3.9266049382082796`*^9, 
   3.926604949727723*^9}, {3.9266051401601343`*^9, 3.9266051535357046`*^9}, {
   3.92660519257547*^9, 3.926605197118415*^9}, {3.926605315443164*^9, 
   3.926605319324845*^9}, {3.9266054079206543`*^9, 3.926605408942788*^9}, {
   3.9266056781752906`*^9, 3.9266056784305906`*^9}, 3.926605723599819*^9, {
   3.9266058309583*^9, 3.9266058420480156`*^9}, {3.9266059383041945`*^9, 
   3.926605946287346*^9}, {3.926606171568403*^9, 3.9266062125429926`*^9}, {
   3.9266064305453825`*^9, 3.9266064359682055`*^9}, 3.9266066032316823`*^9, 
   3.92660696092901*^9, {3.9266072745931845`*^9, 3.926607274736044*^9}, {
   3.92660739031996*^9, 3.92660739678619*^9}, {3.9266076502413177`*^9, 
   3.926607650287957*^9}, {3.9266078979691916`*^9, 3.926607930897621*^9}, {
   3.9266080485621624`*^9, 3.926608057952242*^9}, {3.926608309041431*^9, 
   3.926608312176104*^9}, {3.926608401056396*^9, 3.926608426161214*^9}, {
   3.9266085818899307`*^9, 3.92660858673546*^9}, {3.9266086826265497`*^9, 
   3.9266086859039755`*^9}, {3.9266088071158743`*^9, 
   3.9266088087376237`*^9}, {3.926608847568605*^9, 3.926608858432624*^9}, {
   3.9266088904656305`*^9, 3.926608905984905*^9}, {3.9266091324822044`*^9, 
   3.926609132512784*^9}, {3.9266091745619087`*^9, 3.926609178385852*^9}, {
   3.9266092944016695`*^9, 3.926609331473093*^9}},
 CellLabel->
  "In[6130]:=",ExpressionUUID->"263fa599-9a3c-4342-95ab-f1676c79c30a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxdzj1IQmEYxfFLODg0NDQ4NBg0ODg4NDg03MGhoUHCoKFBosDAyMFBSCgo
QkLLzERCQkIi7AMJCYkGhwaHhoaGhgaHBocGB4eGhtR7JO7/gZfDD87L80yv
bi2ujxmGEe2/QQ7HnTaXBrNxZw49n7ZyU46lzZtqf2JyUf243FQ/IXfU35Yn
MlZ/R/ZnrNyTwxmrfyCn1D+Ua+ofyR9yVjaOrMzJHjkvB+WCnJCLclk+l1ty
Se7KF7LrWP9kU76UI3JFzspXckO+lttyVXZkrbwd7ZPvZa9cG+2XH+SQXB/d
Iz/KSbkxuk9+kitwA36F23APdp7YPQX74AC8DEfhXTgPX8PP8Bv8Bf/A4zm7
3fAsPA+vwDF4Hy7Ct3ATfoc78C88cWr3DOyHF+AwHIdTcAmuwS/wB/wNG3m7
J2EPPAcH4TU4AafhMlyHW/An3IUdZ3a7YC9swiE4AifhLFyBG/Ar3IZ7sLNg
9xTsgwPwMhz99x/o00xJ
         "]]}, {{}, {}}},
      AspectRatio->0.25,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{888.8541666666666, 3762.425925925926},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"2024-03-29, cycle 2\"", TraditionalForm],
      PlotRange->{{888.8541666666666, 1435.}, {3762.425925925926, 3805.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{{{0, 
          FormBox[
           RotationBox["\"00:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {10, 
          FormBox[
           RotationBox["\"00:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {20, 
          FormBox[
           RotationBox["\"00:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {30, 
          FormBox[
           RotationBox["\"00:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {40, 
          FormBox[
           RotationBox["\"00:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {50, 
          FormBox[
           RotationBox["\"00:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {60, 
          FormBox[
           RotationBox["\"01:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {70, 
          FormBox[
           RotationBox["\"01:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {80, 
          FormBox[
           RotationBox["\"01:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {90, 
          FormBox[
           RotationBox["\"01:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {100, 
          FormBox[
           RotationBox["\"01:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {110, 
          FormBox[
           RotationBox["\"01:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {120, 
          FormBox[
           RotationBox["\"02:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {130, 
          FormBox[
           RotationBox["\"02:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {140, 
          FormBox[
           RotationBox["\"02:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {150, 
          FormBox[
           RotationBox["\"02:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {160, 
          FormBox[
           RotationBox["\"02:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {170, 
          FormBox[
           RotationBox["\"02:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {180, 
          FormBox[
           RotationBox["\"03:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {190, 
          FormBox[
           RotationBox["\"03:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {200, 
          FormBox[
           RotationBox["\"03:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {210, 
          FormBox[
           RotationBox["\"03:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {220, 
          FormBox[
           RotationBox["\"03:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {230, 
          FormBox[
           RotationBox["\"03:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {240, 
          FormBox[
           RotationBox["\"04:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {250, 
          FormBox[
           RotationBox["\"04:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {260, 
          FormBox[
           RotationBox["\"04:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {270, 
          FormBox[
           RotationBox["\"04:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {280, 
          FormBox[
           RotationBox["\"04:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {290, 
          FormBox[
           RotationBox["\"04:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {300, 
          FormBox[
           RotationBox["\"05:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {310, 
          FormBox[
           RotationBox["\"05:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {320, 
          FormBox[
           RotationBox["\"05:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {330, 
          FormBox[
           RotationBox["\"05:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {340, 
          FormBox[
           RotationBox["\"05:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {350, 
          FormBox[
           RotationBox["\"05:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {360, 
          FormBox[
           RotationBox["\"06:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {370, 
          FormBox[
           RotationBox["\"06:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {380, 
          FormBox[
           RotationBox["\"06:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {390, 
          FormBox[
           RotationBox["\"06:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {400, 
          FormBox[
           RotationBox["\"06:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {410, 
          FormBox[
           RotationBox["\"06:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {420, 
          FormBox[
           RotationBox["\"07:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {430, 
          FormBox[
           RotationBox["\"07:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {440, 
          FormBox[
           RotationBox["\"07:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {450, 
          FormBox[
           RotationBox["\"07:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {460, 
          FormBox[
           RotationBox["\"07:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {470, 
          FormBox[
           RotationBox["\"07:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {480, 
          FormBox[
           RotationBox["\"08:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {490, 
          FormBox[
           RotationBox["\"08:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {500, 
          FormBox[
           RotationBox["\"08:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {510, 
          FormBox[
           RotationBox["\"08:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {520, 
          FormBox[
           RotationBox["\"08:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {530, 
          FormBox[
           RotationBox["\"08:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {540, 
          FormBox[
           RotationBox["\"09:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {550, 
          FormBox[
           RotationBox["\"09:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {560, 
          FormBox[
           RotationBox["\"09:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {570, 
          FormBox[
           RotationBox["\"09:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {580, 
          FormBox[
           RotationBox["\"09:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {590, 
          FormBox[
           RotationBox["\"09:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {600, 
          FormBox[
           RotationBox["\"10:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {610, 
          FormBox[
           RotationBox["\"10:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {620, 
          FormBox[
           RotationBox["\"10:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {630, 
          FormBox[
           RotationBox["\"10:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {640, 
          FormBox[
           RotationBox["\"10:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {650, 
          FormBox[
           RotationBox["\"10:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {660, 
          FormBox[
           RotationBox["\"11:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {670, 
          FormBox[
           RotationBox["\"11:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {680, 
          FormBox[
           RotationBox["\"11:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {690, 
          FormBox[
           RotationBox["\"11:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {700, 
          FormBox[
           RotationBox["\"11:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {710, 
          FormBox[
           RotationBox["\"11:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {720, 
          FormBox[
           RotationBox["\"12:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {730, 
          FormBox[
           RotationBox["\"12:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {740, 
          FormBox[
           RotationBox["\"12:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {750, 
          FormBox[
           RotationBox["\"12:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {760, 
          FormBox[
           RotationBox["\"12:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {770, 
          FormBox[
           RotationBox["\"12:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {780, 
          FormBox[
           RotationBox["\"13:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {790, 
          FormBox[
           RotationBox["\"13:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {800, 
          FormBox[
           RotationBox["\"13:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {810, 
          FormBox[
           RotationBox["\"13:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {820, 
          FormBox[
           RotationBox["\"13:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {830, 
          FormBox[
           RotationBox["\"13:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {840, 
          FormBox[
           RotationBox["\"14:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {850, 
          FormBox[
           RotationBox["\"14:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {860, 
          FormBox[
           RotationBox["\"14:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {870, 
          FormBox[
           RotationBox["\"14:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {880, 
          FormBox[
           RotationBox["\"14:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {890, 
          FormBox[
           RotationBox["\"14:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {900, 
          FormBox[
           RotationBox["\"15:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {910, 
          FormBox[
           RotationBox["\"15:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {920, 
          FormBox[
           RotationBox["\"15:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {930, 
          FormBox[
           RotationBox["\"15:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {940, 
          FormBox[
           RotationBox["\"15:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {950, 
          FormBox[
           RotationBox["\"15:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {960, 
          FormBox[
           RotationBox["\"16:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {970, 
          FormBox[
           RotationBox["\"16:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {980, 
          FormBox[
           RotationBox["\"16:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {990, 
          FormBox[
           RotationBox["\"16:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1000, 
          FormBox[
           RotationBox["\"16:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1010, 
          FormBox[
           RotationBox["\"16:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1020, 
          FormBox[
           RotationBox["\"17:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1030, 
          FormBox[
           RotationBox["\"17:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1040, 
          FormBox[
           RotationBox["\"17:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1050, 
          FormBox[
           RotationBox["\"17:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1060, 
          FormBox[
           RotationBox["\"17:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1070, 
          FormBox[
           RotationBox["\"17:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1080, 
          FormBox[
           RotationBox["\"18:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1090, 
          FormBox[
           RotationBox["\"18:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1100, 
          FormBox[
           RotationBox["\"18:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1110, 
          FormBox[
           RotationBox["\"18:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1120, 
          FormBox[
           RotationBox["\"18:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1130, 
          FormBox[
           RotationBox["\"18:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1140, 
          FormBox[
           RotationBox["\"19:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1150, 
          FormBox[
           RotationBox["\"19:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1160, 
          FormBox[
           RotationBox["\"19:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1170, 
          FormBox[
           RotationBox["\"19:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1180, 
          FormBox[
           RotationBox["\"19:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1190, 
          FormBox[
           RotationBox["\"19:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1200, 
          FormBox[
           RotationBox["\"20:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1210, 
          FormBox[
           RotationBox["\"20:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1220, 
          FormBox[
           RotationBox["\"20:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1230, 
          FormBox[
           RotationBox["\"20:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1240, 
          FormBox[
           RotationBox["\"20:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1250, 
          FormBox[
           RotationBox["\"20:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1260, 
          FormBox[
           RotationBox["\"21:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1270, 
          FormBox[
           RotationBox["\"21:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1280, 
          FormBox[
           RotationBox["\"21:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1290, 
          FormBox[
           RotationBox["\"21:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1300, 
          FormBox[
           RotationBox["\"21:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1310, 
          FormBox[
           RotationBox["\"21:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1320, 
          FormBox[
           RotationBox["\"22:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1330, 
          FormBox[
           RotationBox["\"22:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1340, 
          FormBox[
           RotationBox["\"22:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1350, 
          FormBox[
           RotationBox["\"22:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1360, 
          FormBox[
           RotationBox["\"22:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1370, 
          FormBox[
           RotationBox["\"22:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1380, 
          FormBox[
           RotationBox["\"23:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1390, 
          FormBox[
           RotationBox["\"23:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1400, 
          FormBox[
           RotationBox["\"23:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1410, 
          FormBox[
           RotationBox["\"23:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1420, 
          FormBox[
           RotationBox["\"23:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1430, 
          FormBox[
           RotationBox["\"23:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1440, 
          FormBox[
           RotationBox["\"24:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, Automatic}]},
    {
     TagBox[GridBox[{
        {"1500", "1510", "1520", "1530", "1540", "1550", "1600", "1610", 
         "1620", "1630", "1640", "1650", "1700", "1710", "1720", "1730", 
         "1740", "1750", "1800", "1810", "1820", "1830", "1840", "1850", 
         "1900", "1910", "1920", "1930", "1940", "1950", "2000", "2010", 
         "2020", "2030", "2040", "2050", "2100", "2110", "2120", "2130", 
         "2140", "2150", "2200", "2210", "2220", "2230", "2240", "2250", 
         "2300", "2310", "2320", "2330", "2340", "2350"},
        {
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
cGf/zPC9xV0b44YzgAo8Wf4/AQId4g==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVAlb09oWbZlERWSGwkVAEFC8AjIIosjF2Xv5lElFppbSkSZtkraZmnlq
hrbpXCarXt97f/NF862zvpOTnbPPXlnZQ0fhDW+NzWZDGi3acKF/wbAL32yx
brZBJOADPcdvwajH54EXjmqtxXZrjFjj17zH8edvTLR1DF270fHHH7191tU7
4OgZ7OoY6Gwf7O0ZHbx1v69v7Nate93dw803+trbBh09o22tQw31nRY3XXc0
NnQ0NrQ21N+w2xpstpp6W12tva6upr6urqG2tt5mq/sFuzXpsdm77LbmGtt1
m72h5vcje80Vu/3qlSut1kpt3dWa2sa6+qv2+sbaK9dstQ31jTesgKabXTda
ujvbHN0d1tkGO9odnR29Ft/qvz02OjE1NTU5Oflwdmb+0eLT5ZW5xcfTcwtb
O4DrKB4M4VGEJEg2ipE4wUSjCRimMUwkSSlB8TQj4hRN8wIvK2JSZwRZUo2k
bsp6RleSqpLUNMPQUulMQU8XU7mKnMobqYympyxWU6aWzmaLlcsf/2XECi9V
jPR5pfLNzBSKxcts4VIzznXjmyidxVF9Y9Ozvunc2jn8uOt6v7nn9kVIJsnL
2e2d493DoMt54HK5fL7AyQkShnEjfRaG6A+bR192nU6X98v+8YfNL1ufDvyh
WK5UjVMZSsh7ArAvBIcAGIAIBOVpLifK5yx/SiSy+07E40f3nIHdQ38QxBOs
TnEGK+R29gNhhAmHoRAAQTAqq6Yo5wzzwgr2g7QV7/KAh94IjAuskg2ESUbK
kmIRxuT5x6+abvbYbJa3Gpua++YX35B0Vk9Xtz8H+ofu1V9rrmloq7/aOXRn
yuWBtNSFlWtpee16c39DY6e9tqW1fXDro0fRTlXj8t3aQXvXmBXf2NTT3Xv3
/babU4rBCIvSaSSRwlkTow0AYfwhbP849M+Gs6P3HojItFjQzAtGNgiBR1Ah
CBL3p568/vuTlCyLSimpn1ngpRLBmjt7wMjYgiCXE4z5YHolgvDW/krqXEld
pvL/pgo/fSCbEIpekIvRGas6gsmLapWScvvH8Y7eKXeA45PfcDbHa0Vez0l6
meRSt8fnV15tSfopRqcZqWhBSX8X9a+7TsQxMCmoZRBih4YfhgBGMi54rSzq
56r5Q0pX3SEK5wpALBmjcrFExgKMq5Radp+w3f2PXD6GEk5xNm/VTskZUkiT
vHH3/tPVl5/5ZIXkc5RcppUKLpa41OX2Qbhn4CGj5IIRuqfvnvUdraIE7cyq
i1VOE1LpwIf9zmXEydN4ohTFDZSWca3wyZXo6n98HEhI2iVOF1Aqj3I6KWUZ
2Rwdn3v1ek/S/0X5QlwuocrXOF/hMhfvd0+6bz0WjLzTgzv650GYtuSVjTNR
qXBiWdK+fj6ECC4PxlUono+RRVGryGkzQivru/HeoeUTiBP0EkaX4lQ5xmUg
RotS8p+TTzY3TzilGmbNmFyJKVVMuSD04oYTGLj7IqGkdo9if9x+Yr1rZH5k
cv8xc/9LZX7KqW87TphVygilAoj6z/rxhy3nm7UPi6tvV17sT89t+EDa0ipC
5BH6AuGLAJPCRHNj+/jIjVHcGUIXMKkC05UoWyLVwnGYW3rhYbXCgZtt7Zgb
GFloc8wP3nm+vHoYBlOCcHl4FKPlX/rsuZGB0QV7favdXlvTcLO5ZWx5dR9E
ZYhQAbIIEGcAVQox6YR6CsVVlEhx8lmMLWBCOc6eEvJFlM8EorI7pHN68c1a
sMux0NM/0+xYbGydaumceba87/NxTnc8aZ6jnIYk9DCm+mHaC9NHXujJyu7k
7FYE0wMxCcDzUOIMpkuYfnEckRdXNt3BhKV8lMkjVAnlzgixGmXNpecf1zYR
WjFnF99Pza5Zzo/KX3GpuvraMzr2EgRlr58SjHNKMU9iHEhoqJBFOAOKccNj
qw8XP1oG88ckkCiE0CJI5AA6t+Omu/tnInGRkosIUwyTecsYuHAB4OrA+OK7
dYBVzfvTL+eX3luWgOQyqX1/txEYHHmKxNJuPy1nvlk/lA/hQFIP4eoJmQzD
wu3RvxZX9mEmB9GZEJYD0UIEzVtJt/fw1rYHECrgQgph8yBViFAmxuWCCO8Y
nNr8HOPV/OjEs6WnW1bDifAmoZ0+eb07cv95JJryhkRarTJqMRgX/VEeoizR
uBMgMXh7aebxxxhXBqhUAM2GiUoQMUNofm0DdvQvQKhkmSTC5MJMyWKcz3sg
pn9kdufQapXG8PjyyupOUqtCnMkYlxPz7+5MvfKGZBjPJ+QqLuUBVABjEsGm
45QSBojhkcXpR+sQlUekUz+W9aMliP0O4sWNz8TYxJsARGNyxnJmmLaQJbmy
F2An59982iOsnmbpv/TsC0GXWf07RBZmnu3MreztBaVIooQK55hY2PfGJmdf
j008ujM+PToy7eh9MHBnaf0AChDpE6oYJE99aAXizn2RzJ6bwvg0rpgxsQyS
aZjKRgkzEk/7w7z3RMXp7Mu3x119000td69cH29qezj84N2Gi94FJD+W4dM/
/w8fZjDj
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
NbQONbSMv5MsyHu2T/TU5S3tDvEI+/A/aEv5TA==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAlXE1kWhhBAsB22Zg27oZVGQXAZBIFGUEREMciiKDTBEJKQpSpJVWrf
q5LUklT2EDto0zM9P3MeM+fc9859t867373vfl+NOIOOU0tNTU34Btgcx+gy
DB9j263gsBMIe9wB19f1QMTldsGzzjoQ7ADLDtb//M6R1tY+YB0dtu7uoX7b
cG/PwNDg7b6+fuB0tHc33bgFHFtX37Bt1NY10HqzDVhPe39328CtxrZGa0tT
Q1uDtcVa31xvbbLU1dfU1lks1tra2muAWkudpfH6WAPiDbW1t2qAWVpqapqv
/RpLnbXBWt8IdnCxobGp1mK9Dlpqmhp/qq+70dhgbb7R1PJTR3tLz2D/gP32
uP323f6BUVv/yOCQfXTs1+nHs3OLy88WlhaXVhZ+e7Gyuv5m8/3O7oFje995
Cp+44ECIwog4TiYoWgDGsBLLSZKcZFgR+LwQ5ziOpgRZUmVZTiY1Q88n49lE
Qk2qKVVLJ9W0mSsbZklPF/VMCZiqmf+3uJoG8Uy+elH9W0jkRTmT0MvxVFlP
VYDFkwUlUeDFLM2mTs/Qnb3TLcfR+539jc3Pu/tup8vLSxqGax8/nX/YO9ze
/rK3d7z70fnVHUJxIWkUT7zwm62DtdfvX204Xq5vvXmz++btpwgiFC7+RXAp
JCaeeqNHJ+dHTp/ThUTQOM1lElqFZNIn7vDBof/ICR04vac+OhzTGNmgpRSM
queQ4g7Evp5FXJ4oRiUEJavo5XTxh5apEoKhp75lct+LlX+nslVOyX/1xth4
PkYbIUS8/2ixoRlQBkyw6x9t9pWXe6JSSOglXzDWNzRWU9dc1/yzpXFg8uE6
HBNlrXTsoju6Z+pv9lrqu6yNPZ094x+P/KycE5MlPlmUjYooV5J6FSSJ4EmE
MKGoIWt/YbSJkFqEkGCEd3kiIMnC8/2B0cfeEM3Hc4pRELUUn0gFY9z+YaTT
Nr135JWN8vo798ysA2W0uFGlhOz+YWBm9hWfKMv6pWJUAZwoX2by/8FZY2Fl
2xuSPaGkqP2AUD2CpUguT7DZhPGDk69eb3n7hmd9kEKJBUJIC2pB0ksJvUDS
xfafJ7b3nJxkzDzaXFw6AFMGuGwis3vos997SslFLlmh5QolXfCJb3r2KoiK
9on5T07UCyfi2b+9sALH0hCioWQGRpO0WF1aPR4aW/IEJYIrIlQa57I4Z9Ky
iTHF9q6pT4deklWH7QuvNn2CWmLiZty8WHjhuDu1JGgVRrmgxO9s/JJVyqJa
8UBk3+jUGcQHMFXJXrn8fJjIQJiBUDpCSTE2/2zly537L84jCnr9vBmUyWFc
jlCKEJnp7H3y+wmMknzvwNxrB0KrFUmrgrT3Zl5PPtkU9LKgfifEH3T8ipaK
SfPqxI91j0xAhOIKMGziAqZMhCuSYhHwRFbNICLPL+9NTG8gTBplTYTOo3wJ
plIhJuOGkqPjL048WBjnewbm1t6FESHLSBVKqPw6tTn//LOgFwmhQEp/4uIf
TBy8Z9kVJH558MwX5QCcnKoCoBMf+2Th3czj1enp+QfTK/MLHxaW9qOkgbFZ
TPgWIooBKh2gcgj/besjEohKEM6N3FmenNzq7Z/qsj0dn3w7MLL68TimmBcE
UGXiMibmYlwa+BhvugKU04eHsDiAjtDFL2fk7XvzdU3dlob2OmtXr21mdf0I
F3IQpkFUNkhkg7QZEUoBrOgJ6aSU84Xp/uH5u+Nrba2jt9qnOvvm2roeHXto
0bjGIuSLCJumlQIuZCKU4YFE8MkXkUBffjQdZXMRxnSHuSAmfToIdfc+ePb8
M8rngqQWIjMRJh+lUzCV3dqNPfjnB5RSgTC7bY+AakjRBMM6h4wh+/LvHpyJ
l6NULsZXCOk76IhWSps7Z4svDwBWKKYms3+54bgP1SE6FeYMPymcB/mO3uml
jWOYN/2UFsDTMG7GGBPUM7d4Mjz2PBpTPuyddfbOhLBkiIwDURy5KHDFeR4D
wwJYMAlq+yNMqkAC9x+/np51nHhFwD1RrwawlCeaOkMNNyr7MB7UDAS75jiF
uPQpIkNUHiVK4agRRLWph7v2sRWGS6+9+gL6ggktROlcouDYi7R0TgACACJR
YpWUL3HhO5Uox4T84N3lB3M7rmDyHElxWhXlC34s60PNAKEGSfHYBbX1TCxu
HIYl0x2LnxOZQNQMRVVvWLwzuXH7zm/g5zb37D3oC1QOOMDIhd0D7FbHeJhS
IqQZJQu4BDhQDjMpOlGxjS0+e+E8dIsQkcPEAiaX/WgGYy8INoexydOv+ODo
wtLaIQIEJWb8dAYQI0ioHphb3/Lfn30LCLay4bQNzSKoKnBlUii8+xCxjcyH
cBHn8xhXouLXOsKlYpjOLKw551ac+8csRBSYZNWP66tv3b/cezl2d37UPj06
+Ng2NDdy7/nuGXLO6EEu7yONIJGI8YYXUh1HMCpl9k+w/tG51raxlpt2683B
noH5h0/fUYoJ5oVzlSibAa+HcFkxdQUgjs6Uzy4xTJVY9fK/jhIyxw==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
uLTrbmH34+q+5rZ53REHdsrlTZJi5n9xdojT
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVAlX2loQRtHqc68gCrggKi5F6oLaTbHWarVFLWpx94kiggKyhyWBkARC
EkjYKWrVLq/nvF/5bt85X+bc3EzuzP3mm+k12HXnlTwez1ULjO7E99bpPPFv
toCXbZvLbLIZz1ZsbqPJ6Hxh4INNAXj6wfNnLezoF4r6hCK5WNwnlfZ1SYcA
ujuHOyUD4nZ5e5usTdgJ0CXp6xTL21rFLXXCxhpBw5OWplpRa4Okuba5qaa5
oaaxprqOz6/mVfArKqt4/KrKiif8yhqACrDDqwbgAVQ+5VUIKnhNPF4Dr7L+
j+XVVVY2VFTUV1WBdS2fX19ZWVfNq2qoqa/l//VXTUNdTVNLo7CtpV0kkLS3
dkjapJIOqVgslXZ2S3u6+0eGRsZU4xNq9dTMpHpaM7+48G55Uv1ifGLm2Ogx
GL1mq9/hht0+BIYTgQAOw3FgURSso8ACYCgehiNkjKYSKRwjWS5P09k4lWaZ
bDqV59gcy+W4dCGVybO5Is1lOWBT2SSXZ9hcKl0q3Xy/e/iNUXdx5p7iHrjc
H6Sz30nqa4q7j5HFKJ62XPn3Dsy6rZONtV2d7mB359xk9oYxFsEz+kPr9o55
a+NoXbt3sGM6NTjhcIrN/Li8xnR6y/6Rae/gQrf1t3b9QLd16g+SpfLvEFZA
sILNjVusoXOL98oecfti4Wg6wdwEYObU5Do+tV1cQWfnrrMLFxSkXAEKp8ow
XljZOLU4iWs7bLuGvVA8iLBs5hfFPO4dew4NkP7QvHt8abbD3hAFIczmrjmZ
/RHCb07N4YGR2boWWUWVgMdvrWvsfKNZi2CZOF20OuCu3tEndaKqOhH4qlIv
XFyGcPrGfI2JusdrmvtrGlobnraPT825ISydfwxFOc3CZqOgj1/XWtsk6e4f
u3IiCfZu99gaJQtBrHxsDE6++Li1ZzFfBc8s0OrGQe/gpN2DxlMlOnMbjnH+
COUKEccXjm7FuG7PRKUfV9cN6tdafyQTpTmAOFdEyUzm6w/w1zPVLIiIJnIk
d4PRJbb4k84+HBk9IMNQ7H5dbxtUzltdGJYowrGi/sjW0fPcfB1ByRISyxLJ
cix1gzFpCI11Dig/6g5QIj39chUAj5fAOYn0N+ATIbPA7fDULh+eBLmh1A2V
+YUmbknuB7DXUDLO/uPHy3NLh2LZpBMi0XgW+GzuXUllk6DEOH3nDaegSBIm
MiBWAKNEPQr90RmRyAwrZ+febtGpeziWx5gbYMNxcJG77X2TVK7E6Tye/BZj
HwCi9C1MlA0WoOVvXpibev25b3DeE0xEElwgml9dP+2WzdgdJJCNJ5SCwiyQ
CkqkgkiyXaowmCwQSgKHtfVLjLzxE9koUwpgmQCaTuZ+Ln3aAfeKxtJoPE/Q
X3GqFCFKEJLbPYGI5Hennx5SLckVGqCWSDxpDzDLnwwDA7M+PxeM5oN4Nkrl
iUQ+gnOX1qikS2lzeWGckfa8ev/BBEcLOPtIZX+C5ENYFlRkcfXLkOoVcGbY
h3TxV/brr0zx30js27EJAWTavPT49Gb/4JJ243Rdt7/y+eLTZ9Os5ovbRwVw
7uTSM7e8NjEz+0azsbh0+EylcfhDwSgzrt6UKz7KFHNDzz++eXd4YY9SmXsy
davVGWXyl92yl9Iuda/i1fz7XZuHdEKZg7Mgk//HEfgTq75FweOLwETiVYuf
ikbWPp8B/i1u5NnU3JNmEa+6vqKqrb6xv7d/ygEhMaZktJCKEW2TcKS2Wdkq
nlYoF+y+KNjXLO5IO1+IJdPNT4eaBMPi7omlTwariwb1SuV/g8zlwy9Bja5d
+LUzfHDqEveMLq7ueBHajVIOJO6DE0GY8UAJnf5S2jvuDMAEA9r/IYg+hokb
BL812+i+oblTswenCqrJ5VnNDhzOobFyOFaaX959Pr1i9TBmBxlnv+8bbY1t
sg9rR6Dx/QEGyE/c8/ztyhd3JGX1Ez486fWTYPgAYaxvmTrlY+5QGEjaBxfd
/oIXTiJEyepkhZIxg9kB6tgln15cOsZiRYTIY1R5elY7oNQ4A+w1xOLMvf7s
qr5VvrFtDoeLPohxOGOCDiXgGSbL1kDSFUpee3EwzXwwrXm/LR9SB/FECGch
pOBDSt4wh+C5cwvR2Kq4dEIIQQPStLoLMgUuVfCjudGpDxOv1h1+zhXMgP7a
NXrqW/sBP+FIzhegL68i7Z0T8x8OXeG8LcA54OSfGehBXRA9qNT0Dc940bgf
TbkDGWcgDTIBfbF/HGoWjvjCUSiCCTpUui8OMMwjoB3wkmJ8Wf16+8KeAOEi
5L3u0NXeNbOiPQeBQhHm8goRikeXNswe7M5P3OHMI+iUaIz1IemFlf1R9RII
FI6Xg9F7hHgEB0bwx019QCCehGOABEwoUa9or/3ITYj46QyWB1Tr7z5d/n0V
84TLMHGrPwkMqT60SScHn83IBkf7BiaahYO9yoUVvePIgo+90A6Ovu5RjMkU
b4afv9dumf4np7Chd0l6XzcJlS0CdU/fClAyliwE8aRqStfSNlvbpKoTqNu6
Nf3KjUNj4tzOOEN5jP7+H2KIBr0=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
+/t//MCiig==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
2PZGo18/PEdPrXgQLcH03f8BDTD1NQ==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
FA==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
3IcDRCEm//gf9zQMxg==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVQlb2swWRkArIgLKoiDiUsVdWz9bqTvSuisuSEGRfUkgIQlZIYEgq7j1
s3a5z739r3dsnnfOM5nMzHnnvOdMhsKZ07hUIpFk24E5DTGbBBHizjTgxY1m
oQQai+6iZCwRI5bCMjDYA9pb0F77Kv2gStuvUpu1WrOux9ytNep1JqNhQK/r
12p61V06rUav0xn6TAMGY79Ga1B2ajuUmq4ug1ptBOhUDKg7rVq1RanQtco7
ZNI3MplMKpW0yuSyFulfyOUt7TKJAnQkUu0r5IBYh1TaKWlplbSAKW8kLW1S
GaAul8nbWsAjAWeRS2Wv42AO+AQgl3e2tmplMlVbW1drm1LVpekG1Ho61TqV
Xt9jNOq1WnVfX9/wkG3AMjI4OLx3Ejn1wBdX8HUQCUexaDQNEAqlYJhEUTab
zWM49RdZIsuQFEczeZbL0wwvFMqFYkUQ64VSTRCrhRuAslgpF8s3wk2hUquK
N6VqvVYolqrVh2bz+fn7L1b8zonfc+K3SuOl3vxea/xq3P63WvvNcg8IKiZh
bmfPs+E42vy8s+7Y3tjaOXR5SKYAI+Tuwdn23plz27Wzfw5weHyZTJGl8tPV
Nbz1+cThONjePt7c3LfbP6+tHocCZLXyksTKKaIagZgLX9znj3v8qWCERvEK
yTQBfEFs99DruUy4vwauAsloAktAVE6oESSgQYM4hJKviCMMzpTJXIMtPLov
U24fApb4riF/CMkQZYyoH58kOf4JYe+9IXrQZv8rXBdQTd6uW908zBClIiAZ
TClUhpY2oKOqpVUzOWt3e2P5YtPrh3TGsdZ2I1gilWv1vbbrKFm5+4Mxt7OL
O3KFRdLS1dZhUPdYAVs6/6/rHEGIGso9nXixyXfOrS/ugyPf4Ylvzeky9I9/
vYbZQrPcfMEYAcaZaDJ7ehEaGJ7ZcLqE0oNz53xw5D2EcDhXI/lbhKyEYUas
/ycQZ7v7psIQT4vNXOUbsHz1RWz8ObskEKoRw28396OjU5vhGFsQnyih4fYn
2zUWTyCdxASYEOAsTwoVki0DdwbT6PL6Pi/erzmOes2TBFXhSi9c6Weaql3F
aLCt+xpRGUd8UYwp3TGlB2BJ4RFjn3yhPLBJ8v79itsyYg9GSCjFMsX7g/OA
XGn2BrEMW0foKvCIUCLF1xBcUPcMbGwdEHRxZmHdOrrICLes+AMmbiG8EkMF
vva8ueeVqfqCMDjQS1aoU6UHjL9H2EeXj0rRzRhen3jntM2sRhM0SQN9a45t
Hwj4VYTCc3dJrJrK1pIoH0nn46miqrN//8BFc6K+f+7t9CZRrOPMQ4Z6SiBl
KCNQQnPV4VZqxmBEpPkmkatm2FtS/BYnms7DNH/zO56tjc6uj01/ghAWxXMw
Vvi0fqbWTUZTAqAEkQ0i95ATH4lcPRjm+i3vDl1ugivpBj/Y5r5kciJT+Je/
+V+GvgXRJvn62taFumc2kb4Ry8+Vux/l+z9c9QdE3e2e4nz5Z5JsLq4cDAzO
gFrYdGyvOi+W17/apr7AICx4afcCcuz5QbYsr+7u7QeXV0890XSCEsf/OdCZ
5q3Dton5Dfu6+8yXzuYqNN/YP07qehfN1k9KzYjeMr72+WsQykXQytZegik+
h9HazOKepFUPUvr1/pHqtfrZhY8uUHSn16jtw6680yqRKOXyLqViwNg/H8E4
4ubpPJIzmOfaOlSvOa8wq3ttgTiWLz2sOS6V6mmFaryl3dSiMGiNM3NLu94o
7fLgfOWXJ1gcGnfOfzjyhbK+cOboIjQ0tjI1twNkCqElb0yIpWsxuACl80dH
8U7VcDhNZYRGhnvOUA8g5hBacvswVffokTuQK91NzDpsU04gH5X7ls6WF+wn
g7ZPwQTnj/FAuJ0TQtG9sLIVhIl6DC0Cd0Cs6fldkFqBVOkaroSSN3CmjNK3
605fm8IUS5MoexOACyFIRLJlnL6NQMU3ndaDMz9bvDUPLszMOUnunhKecbY5
OvW51/o+lGT9MRaov3tCq/R2kCfXyVIoLfpCeLdhbm7hKI6Wg4gYTIMiLUWS
eVCGC/azdoU5lcZAHkZhMZqqRzMlmn24DnLyNyaXJ0Tmy0bLzMLSgVj9DZMP
gLzJumoZ/hBO0tF0kSp/2z1jOro/bB+lfGEqnimcX6Ig2ksrXgiveeNcIFUO
w8VgnHZHhOl/9pVaK4bTGCmEID6UqgRTRYJqHB4n25X9QC+E5DX6cfvaaa78
ApNPOPdoGd6wvl3yR/DLKIUX77+cZHqtK9sHwVQmj2VzF36sz2pf/OTxBMgr
iEf5n1j+KZtrRvHKisPXa5pLETzBNyC8wQi/wA+CZCvRRK5L9xbcwHA21903
bV/3YvQjUfgZx1/P9f7jvtsPA3Vgpr5zjpqGlnWmyX7r2NDwW/Pwe6NlEbhb
374C+08vnw5MrFvHlozD/wxPrHxcc4GbJEFWHYcR89BHtX7UaJroNc+OTHxk
CrUknpta2Ok0vJN32eSaSW3/vMmysu+Kui8hEEM0f/d/0eadiA==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
/f8ACv3/Hw==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
f0xb0VM/e/0/mXFtLA==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVIlT2tobBbdWbXFDRQVR626r1fpcW59La7W/2ld3LAU3EGUJayAhgewh
JISwiKC4tb6+zvymf+RLX+a733w5M7ln7sk5t/PIvXFSolAo/I/ltnEYWvD5
DuHNWvllG/Cf2QCrZRUIWG1W39RRqQw2yKtbXr9nddOQquZZZZW2StXa0KCv
q9PV1+mbm7p12uc67WBzc6dG06XV9nboehtqdO2tA/VP1apqtVql1TZ111Q2
qp48VT2peVpdW/X4aXlZZUnpo5KSspLfj+J3U1aUKCoUynKlDJaWK5RNZWXt
clcq6pUKlULxWFlWqSx7qlRWy7OitEpZ8uj3J0rFk0eqCuXj6sqqykdVFaVV
Typra1V1tTXNNSp1o7qlpaWtWdPa2NTarn+m0/W0tbW0trTrO3oGB8fG/5gZ
eTUxPvl6y+A1H4CnjqgDiIBQzB9EAiE0GIwGYRKN8jDKgDCKYDgaRjCUYime
pmmCIGiGj/MSn5RSyWKCzwlCVkykU+mcmCnw4gXHX6Qy6YSYTqUKgpATkvni
7c+b+5/x1IOQ+ptL3vKpWyl7lz5/kDLfUtnvNH8VJTJuH7FrtBlMh1+Nx3t7
1i97tlOHj2IlGBONh27Dvu2LwbVvBra3LFZLgCTSUvre5Y5ubNrW1/d2d/eN
ZuvG1uHO7lkgxErZaxBNQghvsUMnAHzihAAvLuM4dR6L3xJUIQgnAF/UcuY+
PHbbXSgIxSn+HGczoWjK4aM9Ydbjpbw+GoJFTriVS0w9nALRL/s+iw2w2b1e
PyZrFSXOAS/NSZcQkQpGxPHXqxWqNkV5naKkrrJGt/r5gGCvqNj9xq5L3dpb
UlmjLK+rqG7Xd0/aPdG4dHfqolo6J8pVukeVTaVlTY2aoe1dJ5/4JmZ+uEFK
3zNaUV1TUdXYqBnoG5jzw3FviIpLRZmLTRYRKmUDohYHcnwGG8zOts5Rl4+N
EFcvxlb29h1n3oATjJosgb7huc+GY5LP7xjdAy+XICxNxbJIVDQd+AeGF3Cm
kC38EnPf+cwNL2W5RAEMJQaG39rdZCgi8Jm7MJkL4WmUuSDjRU76jjHZfau3
sW3g1IVDkWxHz/SW0UoJSVYqwHiqa2hm+aOBjl0sLBlGRpcpNs+J9xR7abYE
OvunKP6Kil9G2UtGvCe5cy55HYykdN1zhzYCRNKsdA/j2UAkKRdC5iAsg1LZ
/RNIPpcsO+CPa9ontowuLl2gkueyArru8bV1E81m+gcX5uZ3GaFICzeseL9h
8Oj7pxmxgMfyGHeJczkueSXlHvyQoO2aMVuigXCGTnxDuYI3LKCUTJT+TYfn
doxQY9uoF8IdHralfW7HBOPiTTgmBYlsR9esbEWSuejrX373zkal7olkHuNv
F1dOO/sXyUSBiN1EqMtYOktz2Zh46Q6yjbqXFifhRzI4ew2EeQ/M+8MJhDyn
+GsPJKx+crbpp1AiZjT5GppfGw8JmClGYmkASXb3vzs+CiBEenx6d3MnBJKZ
SPIC4YpTC0eD42uMVKT572TsbyGXz+YfZA3PPOSzobljB37qYeTj+yJpZyBu
tkKGfe+6wb64ure6Zp99s0HHkhZruE49KW87u/zlzeL2+zXXq4ltH8j6UWFt
0+UC+ECUj8TzaOzSaMXXtu2seMPEf525skMvl9o7Jjt6ZrsHF/9cPrB6WA8k
cqkHmC4c2bHB0bfKx61yKSqaqmtfrH46QjDSZPY0NE0+qR+UQUWZpqphvHdo
1QexfkxyBoQIdhHEE0gsD9HnNh8biCQ46e7rAaNpe6tqGKhreK7WjL6c+Lx/
gp/6BJubxrkiwtx64SQAcnI25dq3Ilr9/JtFQ4Tg1zaPZW/sHQYAObMQ83bN
Wd88HoRiNoB4PvrJ7mYgKic7AaFz47Of9g4BOnE5MrY58/oIY3IUd0vE7mjh
ByH84wyJBw6MTtzB1LWsoezACH2BkBl3KKHrWpya24FJYWZpS983J//QMJdF
2cyHbVCteRWEGLMl3KybPHUREFOgxVsPIjZpx0w2P8nnegbeTs4aaP4Cwc+j
9BVKF0NkwebjZC4h+w/CXrtADgBjXog7cUXkWdu1OLdsgonkiz8+9I1+DLPX
3qgUotKLH90yVxiOfTHDdc2jDj/uxqQolXe4eRmXI0ZwKTksH/46YhMFlDiX
04TSlzKXPZg48TJc9kcAy3nhhCtAy5uDEe7UQzVopv7a8ThBtm9sZWLeCOIZ
L5ryh/mR6a/1mpcQym0ZQVXTC2cA8+NZjL4y7qO16hEgQKKUIF9on7dPxey3
/zS8gfB8iLhaN4F+JIWwBdkbAVSCMEnmCkbjhq+hevXMlgHc/eqZmNlceG+C
ySweL8i38eL/nD1DSwiVXDOCDa3jgJughO8k+81mj7d3vYExIRhhWvQjKx+t
KHZLx3+y4v9p8RdM36+bQi5YopL3EJU3WsDhiaXe4emuofG+gXmNZqZ3aGV6
fvPP9+Zm/VhX/0TP89fdva86Bt+tfD5GuLTRQas0o1r9WEv7rMzSN7Qy9Wad
jKcDCDP/zqBSD9eqJxtbZ3TPluben/ijV5vmsB/LEYnbfwFqhw2+
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
dtMB6jqaqv4NEmT90g==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
Ct/muQ==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
vX1O3fNmbNq4Z4JNbtoVK2L84/8AbD/mzg==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVPlX4soSDiACLiAI4oI6KOP23NBxGa+O4y7KJosgOwkJEEICSVgCgbAq
Ki5X7/Le/fH9pS/zzqnqU11d3VXd9X2tBwkHIgQAgJLygyNaOCLJKOMc4idu
nErGcThmwmk4DpO7oIh3DvNq4PWXLVeOKpSTSpVhWDOj0o5r1ZMa1YRGrRvV
To9oJlXKMaVyTK3WqVXTCvmIenhMPqgZ0xpUQ1NazYxSMa4a0iiHNHKFuq9/
SCIdlMrkveK+HqGkp0fY2yuV9PaLe/qEApkA6OUF6B0Q9ioBQCUUygFALBL0
ioQSQCAW9UiFIgkg6uVtXoSAWCgSCwSiHpFUAEh7hIMCoO/Xdn6PWCIQSgQ9
MqG4TywdlPUNSKVShXKINwblqiHliFozPqwe04yMn5pt51dOqz3scYPhCBgF
EX8gEoOTkVgciqNYhiLoQjbPZMkCTmTxDEHnCmS2QJKlUrnG1VpcrVGpNmrN
pzLX4ZpdrvFYq7db7Ydqo1lvd2rNTrXeeXj6/bH7+fbxd6HaKtW6pcp7s/3H
c/f99fXfnc5HvfXCcp1CqekNwFdWz6XZfWF2WJ2eo3OT3X1HF+vxVN5svzNZ
XdfXbtO198oSsjngWLzEcu8JtGCxeExmp4UPuPYcHJpPzhxeX7xa66JUCaPr
UagYgehAOBaGiARWxDJske3QpftonLrxQA5vzOaOOu6iYQSjSg2afUjgbDzN
+KKpCIgnUiUYrWDUfZp+4Fp/B8KZO3/c6Yt5gskglEUwNklwtwEsleX4RDDG
rW7YJLIvAMD3cVgAqBaXD3C6xXBvESSv0S0DIjUgGuH94v6xS2uIqX5E4LJx
+0oknQBEfWKZundg/MaL5tjXcv3t56mtT64VyTR8sFA6urR2nCbbfDF8RjDJ
3IVzm9vu/WOf6SZwdu0/OHEOaec9wXTi/6tIuhKCc647zOVD17ZOdn9YC+y7
644Y0iwGIYouVON40RtJ+yCaaXwms9WZxc1r+22KqjG1d5J5RtK88clfB6Pa
8UzdFy2vGG89oRJebPGr/mhWPjJru0WI4kM4UQBTpQzTYcodkq6N6b6ub/wo
sc+mq8CwxoBiDMO9lBt/UuX32whTqP8DpxtyzbzzLs62/6LYl1zlI5ntpKin
IMxmii8gUbu4wXQzp3YfhRXvyXLXE8r2KWbMjghdfQomSmCaS5JNqtAk843R
8Tnj5mGWqh38vFGo9HSxyRdPFF6jWM0RZKjKXyGYE8mmvSGc6/yHKD7S7CeE
tkJIxeXP4fnHJP20cwjpFy2eaClbeobJpv020z+g94WSWLEVSNT8cJV/mUyx
XSi9qFULW9/Oc8WHnX2bSruUZ7tU6QXNvoaTrWDiPpZteKKsaGAyAGbKzfdc
5Qmnu2imAyXrVhde5LtPtNb3QosbTg+YxwsdhGpeWOIDAwZvII6zDx6kiWTf
itVuhmlg2dbo2Or3fQvFPG4dOKYM+yjRzhTf8tX/+pHGmYPE2K4/VhfIdL5I
hm28VtsvXOufOFaLJbmL6xiRq/tT5WMzMbdm/n7sPLUEDk3Og0PXhM7ohzJw
rn1kJ4y77v0f14enl+eXrm/bZxZnNISWdo9Ci6vW46PIuS1jsrM3vvJtqElz
f96F6zLlnH5hb2pm9Yth5bcfN2Ewm85wqXQLJ6u3EHVwGVOMfQN6hgCBHOiR
8Eg2zP3GIxCmHyaWrwTCL4BQwfsBoUwxPHUXxdBCx+Qil9Zd4xN7g8ObY/rz
pU27M1CmuU+rK68aN0rkekCkEkmGZAOTW9/P4GTO68cL5XsXSBj3PJt7Ln+U
CIG4xQfNzB/Mzx+FoHwoVb5wk3wLQrGMLwwfHlkG+0dBhCQK3Rt/NQC28Ow7
nn8OIzXt1OrZVYguv2zvBZc3bSjVIoudNF3dObBodHNhOHtpiVRbHyGMmVu/
Nn6343QtmS46IunFNZPB8BMjGjcB3BllkcxjkqrwJDJb/SKRAopTKPngDLFe
qA5nWvyxvMhUE6dmT4HrLqxYFtZMZPkpnX/I156Or4Ka6UU/TDh86Vz1xQ3n
9EsXez99EFLA0txdkpmaPVqYP8ewVjhWcoWYYLKOENUU2eY/vd4eFZZi0My9
F2z74HosW0fwNoRWBFLVxfVtqfI6O3e2umVj2p8Y/ZjOtxeN55qptVC86AMZ
nnFOiJpeOj8xRRMpNomyXoQaHF5ZW7ciiborQN1Gyj6kGkbyAShnc0BiiZr/
LROZtj1Y8cC1CF5Gs89huCzu117Z3MXyq95wsr7jpLiXVL6Trbx8XbvUzmzz
COcJxXuufOjy9o3ZgcZRhs8FpsgJvXFx5dIPVgOJRoJ6w+hnHuQE2TwxeXhs
RFAaITuu6C8u0Oxbmv49AJaU6lmeM+XKx8ycaXXHlSy08pV3It/Z3HUblk55
coVjDf5lrH5sedumndycnl2bnF79urImV39Z2TRt7LtvgrmFb+apud/081u6
mfUvcxvG3WMwwyC5p5l154j+aGx6Szd7MGnY0Rs2A1CKZt4OjsG+4Q2FbkUz
tTKs+5dcYzy9jts9VBhppuj2/wBBgZsB
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAlX01oX7cAgqEyCFPoYbQErooAKqCCioMikzPIsg7S0dJ4yNU2TNEmT
tmk6D7Slgr6nf/Ndvi9r37tOhnX32Wefk4Hvzs0zhUwm894C2+YJ8tbjOcG2
WsDNjsN7bnIYDcsOn9Fk9Ex/V4KH98DSgHUTq9SaTrVGpRoEUKu13aoHPeqR
vp5HverR7s6R++2DnR2DqvsD/eqBB72arvbujpbO1qaO5jv3Otq7O1U9rS0d
LS1td+82NzY01d2qr6mtV9bWKGqUCoVM/r9LoVAolbUAclmtXH5bprwjr70l
k9fK5Eq5XFkjb5TLGhWyu/W1bTLZLYXsdm3NHYVcVqNQ1tfWKeU1dTX1Dbfu
gsNbmtvb2m7Q3NKm6lK3tHa0q9TqvsHeQa1mSKsdHhrRPRwdezw+OfHk6cTz
F9Nf9Wb9ieXM6nZ6EKcX9kF+lwuFYcrtJlCUxXEOw2g/TlFBmiRpigqF6DDN
CVw4Fk/mwhGJD8e4iCjEk2IiK2UKYqoQiecB4lIylc7GREmMJ6REqly5qlxe
8/HLWOqaj5YT6X9T2T+Zwi8xUY0nb54E6bTZGtAfO7f3DZ/Wttc297d2j4zn
EMFKFg+xe2j9vG9cWd8D2N03GE1ekkkIsZLJgq2s6z+ubC6vbq1/2Qf4+u3U
4faXLv9BiaQHie4fub8bMJOFOLP57V4myOQprohTGauLOTYhf584zyyQyQp7
UDYQTgvpKhMt+cN5PFwUxKIgVaLJalis0HwhWfjDRCsA8VQlmf2RLf6KJUqh
cEp/YpPSl0GuaPfxjybn65tUsroWmaKpsal7beuI5LMkl3n/abehWa1sbJfL
mpQNnRrdS4MVZ8RLwEIIlWCsCuQzQhnGJS8ao4VSLP0vGb7gpWshVgGvpNQV
GUrBmACKw0cvfHgcpOHFw0YbrDfYdr4Znk697R8eh3AeI2OPJl5v7B67UcqL
8VYHMTAy/WnrexCI4ouU+JMQf3BilRN/7Om9c4v7BFcUUj/ZeBXs4VhVyvwG
St8s7pzZAh5USOZ/+wIZjC3ioRzB5gEpyyffL2329j92e0MWGw6Cw2ObIGTD
Qs7rZ9s6NBs7RiF+hdFZMnpF8pUgW4qm/3z8bBwZXyCFCzJWJiIXRKRAC2Wg
DiYS2tG5U0vA5mUS+d9wMOfCU25M8mAi5I8Df9+82/irfxTBwmdm5H6X7sQA
hYQssA8hYl09D78eWUFKPjKFC2WMK7PiNcDkq/XhsXlO+gG4gGpKKpPRipj9
c2zCerVTDoh3IbyQukJCWac/CVFZJJiEUS7A5V+8Xn34eDoQCOsPXV3d0yaH
APIkhCrkl1TdQ4cnFuqmK0oQe4Hx//yfTjfxYWxySYhf05EKEb1E+UpAKIq5
3/tHnj7NS4uT8+ESHS2jTOEcigGuIJ+PxApuVHjxav3J83cEHd3cs3T1zJ+7
RJSTILrggqW/+kbOzl1M5AIKZbxsHuGvvaEcxuZfvt2end+KJ38FwxcBoYoI
JSJaYhI/Tsz42OSy3SN4/XHADjI0uiNr+46llcON9W+rq9vvl/SziwcEn9k+
8t5uefHoyerM7Nzcsn7p06lu+DWCMDdjQiQgLusO5VEu76OSegP8ZdsIGhK0
B8zkPUwB47M4X4CDqV29y+JmXWgM1Bamc/pzumNgSlarktfcq69ram0enls8
gkPJjzvmjp6FhsahmsY6WV1bfcOgbmSOJGMIEQcN4KISULiEC0U4lLb7WLuL
BlOJUhmMu8SiVYRLg2+8uGS0kQZr0IlEgZUOOGZGJBsqWaCIxc0cfDX91TMz
t6BH6Pj0/M748wODmUZwvx3GPy4danpf4hgPOhnU3B3KOoI5P1+yQPyzV+vn
VoqLXiFkHmEu3XQZDWfA4Ws75sXVo1ML4fHHgS47FDUjoj2Qgai0BxfBr+N+
9+TK5zMwUFrd7Mz8NzeWdPtJnBTevP7ar57xYzzJp6FQDhTKCU5mcyYP29U7
brLdcGF0EaIv4PAVzKZQNvt0euXJ1KczB+0LJIB93mDagUvnWMQZEM881KmF
vdf5dGfXgqFhzeDUwruTIFsxw4yfSD6bOND2vb2pIRl1EZKPK1gCSYzLHZmx
VpXO5KDAkOJMyUteeKgyTGeAO0PjH6bn94x21hvM0uIVyNCGiQZ3yEvGrRD9
7ZS42z7896Hdbgv0904urxvAAIJkPL748NDmg8EFkpGwcMJJZe1kxs3mwDhs
622tqhEkKGFUGiLSAQGIqoL2DvDlPt387Ifjo/MQROUBNXAKOIiHsgSVIkhp
58DV3KHdO7Bu7lm1DxdWNiwIkcHoPBYsT704nprew2gRCqUd5IU7VLHRWT+T
PjTBA7oZlEzAZBIJ5XGuirJVjC2BYOL13rP5g+Udp8ufIyM/7YHU8heD7unc
6Ngrzcgz7chUU/vgo4n3M293x55vdA/MDgy/GRpdUA+9VPctrm3Zg9G8i845
6J828tJMpL2BOMCXA2uQy/mZLJCDMRXQHhBZBFwONKM3s5t6DASs9Oc/5Fk7
CA==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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

            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVPlX2loXBbHaamvFAQVHrENbtOrT2lpbp2ptnepcZ0FBQIZAICEJhIwk
JAwBEQHp/H55f+Z3/dY6uevmrJzse+7eZxvPoa3LCpVKFXgIli1LaA6GLfh2
PXjZ9Qacdq/N+sUbtNlt8NtzDUg2gqcXPPd7nf55U0t/c0tva2uvofWZoaWz
Xd/T1dlvMPTqdJ265rZWXVtnexdIdugHutpedBiM+pb2Zm1XQ1279mlTbXVz
4xN9c0NHQ31bzSPtg8qaCk21phKco1KteqDR3EdFRSUITUW1Sq1TVWhVmgaV
6rFK9bDyQY1KXaVWP7qPylqwv69S35+qQv1IU1FzX6V5UKl59LD6SU3N45pH
ddr65sYGQ722GUTd06a6huamVn1Xd29HZzeI7h5jb3/f8xeml6ah9e3L/VOv
zYk4XEHIi0LeIBzAPL6QN4D70QiCkRhOkiRFUpEIyTKMxHAszTIcl+D5ZEwU
RCkuyUlJTmeyeUFKJ5VbKZm7DzktJ5RU+hqsSuYmf3v3/ccfVirxibKklJOZ
cvamlMuVFaWUVIox6SbKpmwOaGNzb2Nzd3Nrb3l5b3vLbLN5GFbEsfjujtVs
dpyeXWxtf1td3Tk1uxkuE5d+uLzM8qpl7+D88Nixs2c7PPJsbF5cucP5wr84
nUHJlAPCrU7IBcEuDw7jXJTPCMkiEhYhlN4/sjrdgTOr3eYIeXwUHUsIiWwA
la48tC9IevwwjOIIQdO8olz/kdJ/T86x4bHV3QPrxSVitROQP46E0uYLVEqW
MTp3don1D72pqtWqKqvVqnpt07PFlSNKuAUtf9290DZ2qyrqVJoaTZW+3zRt
dwXldOH0FG3Rj9TU6dXV1VW1daaR8TAV56R8lL9ZXD7RtQ1X1+rUlY2Pn/bM
zh8EkKQvIAhSMcwVtw7co28WN3ZOzJbL41PP3NJu3+B7p4+mxYKQLkfYNE7G
kQhrucQHRxc2981iuvh57cI08ilA8DE5RfFyNJbKFf7SYjaZ+1fO/hFSvxgx
x0kFt59/OfzR6iSDeFJMlQmmPDm33zc4Da7rvoq/Xtk2txpHLtxhUsgHozId
z1FChpaTLpjtHpj8vLkX5hMjE6um0SUumWeEEghKKJH8LVgjXD4KMtJ3Jl6U
Mn8BOz0vpo4vECSSjCV/QmhmYnq31zQNhfhoLAG6+LR+0Nj23O4nw7FsgJYI
LolSAp/Igg+aOl7tWxwEJ+s7xydnvvHpAiPcRbkSyZUiTIEW7yJ8gYwVCbZA
8YW48uvKzzToTWY77g0JYuYXTKRMY59fji34cJbghTCTmv241Wn8J4BLCKP4
yQRMiJFoIsIlArjYYBjeP3cTjNii/2dm4ZyUcwSbIvkblMxQsTIZu4vEbgEp
Eb5MiyUp8/vQ4td3vba6GQ8a45JlDyr2Dc0PTSwhVJySkwE89vrtkmlwOsxk
PbgYil2zcgGIOUqnnBBVq3t54kQwSuzoervwxY7wEpcoCqnfVOxHlP8eorM4
C9DzYe6O4G7YZBEQ8cw0b3HSPlwOi3k3IpjGPvW9mln6eri0sft5/fj99Nrk
+zXAJsrldsze6U/b7z6szsxvLi6bde0T7gAHhmLAtDA8vjU2+2Vian9lw3cF
KULiP9AXgPt/XyWczZJiFsLE9R33hYsOEDJGpwDi6OTq4+Z+9YN6ddVjYFYt
hhdbu5dhOucnU8ahKU1tK1CvStOk0nR29c2AKjJ2bXZQhu63qie6iuq+qlpT
d9/HK58MVIEx12HuFo3mgqyCCQoh3PiwlM3DOiAqlro7h9jWzvGZTwdumL7y
4lv7jvrG/i8rZqePQ+hrDyb7MRmCOdtV9MPsWXPrG0+AAwQB9RJsCRw1zOa/
nfq7+ifPnWE2cYdS6RAF6CthsTyVKq4dOUamvtpczKk1mFR+Hl0StdqBj8sn
ITIB5gj8SqcfXFo1uwOCC43DpALjCQSTkKgy9na/WT8BY3FwURB+7Q6KAAuj
FLM9VKd7dnTh41KlEK2g0XyE++2jFUzKvf648XxsyeUXzZdoOvt75wx5WNf7
dceB4QnITwPnaWwdXPhy5kUTdlgANwDjSYRI+YnEyNiOwTCBU6kQe+vBFS8h
Q0ERp/JmO1Hb0GtxYJHYDXAhJHKLRX8G6FyQyXabPgyNr7tgMJs8Gy9uHsPa
lqGjE+BqcjDAnduwJw39q1sOmFDcoQTAcsExT1A4c4W6n80PDS2CAQR5KJx1
IhwcksNMee84CLCAz/gJ6V6KTBGnv2P8nT+qGAenB8fWrC4REAEcb3nXBUZg
e9+NhdM4kQRYwM3ml89gMufDFD+eBlwDN/CRwrvZ/Tfv1kKkhDI5mLqOxG+j
sSIe/bm4YmvUD/tCIjAZlMqA1kLULUoDNvOgZOTNzomVCYQznPxjzxLq6pvq
6HndO/DO2DMO1odPjLrOsdkVix0SRifX+1/NGV9Otb8YfT48D5QD/CoQzawc
QrqekZbOUV3bVJtxauDVXITLhfkc0CFCZoA8AsRtVPjhRVNnl9z2YQhgAZX+
DzNnBt8=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
c37TgoAWiyZ+/Rc6qRph
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True]
           ,
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVAdT29oSNqYkJNRgTE8cMJDQEkJIKC+BEK5vKCGEdulgMLjgIkuWZFnN
KpZkuXdjU8K8ee93vsObOfvN7o5mV/vtd87rM8/GpVaj0SBPAWyY8W8wbCY2
m0Cw7UbsVveFZcntu7BewFNnlSDZAswI7NFvbTO2tvXp9H0tANuNrbrejvaB
zo63He1DHe1vQNjY2NXY2NHZ2q1vbgfYoetqb+3u7jC26V92tBtam/SNz5qe
VT9/WllbU1VbXfm0SvukqvJpRUWFRqPVaquA/d/XPGJFk7aisUJTp9E2aDTP
NNpajQZ8Wa/R1GmrmjTa54+hprpaUwOOFjjaWm3Fk6dP6muq6+vrW1/UNzfU
NbY063QAGl/odPqenlddXT29xld9/YbBt8aJyY8zs18mPn4aeze+uWc/PvVY
HYjdiXp9pAt6RBhlML9IMaoPZ/xkMMBwNBkEJ8iKihzjxDDPq5IUF+V4JBKT
JEVVo8BJpjKRaDysRsOxeDiuRpJqOK7IETWazOSKt8XyH0bMCuFcLHUTSxaS
2UI0WY4kykr8jg3l/GTUbEG29yyr63traztra/tLq9uHxw6SjXhxYWvfZlo7
+LGytfRzZ23jYO/oEgnwYiRjdWNL67t/La2aln8C/G5aMS1t2BxYrvjgIyNX
XvrI4tw7PjNbrTan3wNzLJ9T1HuazVqsfusVfulAT86ujsxOGOMoPs6rBVrO
4MEEKedENS8nSpHMnZIsi9FCNP+HDWcCYpxT0pF0KZzMh5NFP6MeW2BaSPjZ
lBsTPn9ZqnreUqGt0Wgba2o7l9bOaD7Py7d/r55UP2/T1DRoKutqnrWOTHw5
vYQJLs7IeTZSJkI5VixSQh6jkw6vGFTKvHrLSNeCeqvEHkS1JMfKjJjm5ILV
RRNsDMJVJfGABaNnTvTY7to5tC2vH3e+mrDYWTSQNL7919rW6RUcsF75dk/s
xuHJ5Y0jKpQlQhlSKQbkAh++keIPl27u09ffoAsXveNj95R8TfFFUJYSU5+/
rh2eYw5IooQchEUxJkPwGUpKB5QULcY3di9ftA1dOBiMTHS9Hv+1c8pK0XA4
R5DyS8Poyq+DkHJN8tmAkCWFPMXlpMj99r77Zf9UgMuSfI6VrsGAdKjIR0oI
HTa8ndozYy40KkTukEDMiUc8VNQdkJBgmJYSq1vmlvbhK0hwQ6FmXf/Wwbmg
poVQCifltq5B0+o+KxUxNomwCVIq0WJejNyafp4YBqdBnlPLtFRglWtaysmp
2yuUazOMn1gZO6SK0QeUjbgDiodWQS8fIyO8PPfXQXvXCOGXzs/pFt3A0ZmN
k3NMMIZRarOub+X3kRz7D8HlUS7lF64JqUCJhZm5zVeDM3SoxEhl8AMBucSG
03KqfGIjdN3jRxbm/IoPp/6LB8MQEybkNJAWEVQgkps3Hb40fqBYZXvb29k1
arbYCSpCMjGrk9d3D20eXgWVe5wvwmwS40uYkA2ECj/Wz0cnl1n5hhCLfrGE
gaZKSowXL1zBvuF5QKDdK/GRG5hSzp3k+p5jeW1/ceGnybQ+v/DP6KcvhKj8
PoQ7DBMDw+9mZ35MzqxNf9ntfTNvgwQ/e4PQeZhNo1wZZuKUUjy2+rePIFYu
YVwG5XO4dA22SYXyPiphtjO7p6jNy0uJO5hUT2x4S/dohaahurKpStvU/GJw
ct6EhZTlHXfv0Fzls6aqmhaNtq22bljf/QkmozhThKkCzGQRtoDxaaD8nRMI
DsQexc9lMCHvE/I4mwbyQMj4lS904aYdCB/O3CNk2uWPOn0Rh4d3Oan9f5z9
/XNDYzNYUJ1eMHf3ze+feVyIYHUGZ+csXb1fgSoI4cZLZr1MCtDIqCV3QB2Z
NFkhDtT3sSmUz8B8GmfzgNIfv8/eTy9bIfbEjnLqtcURdKBhuz+CMgkYFSFI
7Xk583FqEaXVkfHfhv7vbr8YkLIMl/26cNGsn/ASEs5nYSoHOITomF/MWlzM
i66RvTMEDALTCbBBNJTD2SwIx2dWhiYWbN6gHeakxB+MSdlQ6QLmXQHBiZBe
PKbXf/i+uEsFEgO930ferwChetmoGw1NfT3W90yDWw8KQoEMRKVB3kvFjy+J
Bv3bo3MCiBBh0oBD/FGNRcCn8d23wQ+Ll14BjMPH/g0RKmhkgVmrj3YixKWT
b2h5v75u88FKT+f03LddLyG6ccnp48Y+brV2TwXEJMIkPf6cA4u7mRgoeHCO
1ekGzVbaR4FbUAA6RHiAWVzI9I0tjE3/PHMJNjiCBa8hMuGlkhAZwwNhny94
eEoaDItbm8j6L/fY8PKPpWOcUIJCHkz37W+7cXQVZqJuIoGQ9zBdBlvzBwt7
Zr9h4KvVFcIo8DAWfEwBF27B7QuEynPLx9MLJxsH/itfCuduAAkbR56hicWB
N5/7e0df9820tc0a+kyfZ3enZzc6u4f7+8eNrz929L0bGFmdX7JBVBQI3oOX
UebWQ2QxJgfUtbnn9aAxlMwRwRLo5SFzYF5aufOS+UtPfPOQdCBJRnn4Hzxz
Jpg=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
LENsDlfrfwLLuPWc
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
P13y03mIKZ6giR0HYw+ooDuFpKv/AnNKPfE=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
qIM7BOhpd2es56QPz1NS619EGbmM
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVIdX22gStylLKKEsGIwpwaxJILAQlhBC4HGbkJBAQq+hBhtj3LFlq9iS
rOYiybLcC2WTvc39nzfcvTfy0zfPmplfmc9o9m5dVmk0GuQR/GydY2/9/nNi
uxUOux7EbvNYL5Y9AavN6n9troZkOzwmeB7euwyjXfrnXd1D+t5n3f2mnp6h
jo7+7m6jTten1w/0PzHpOnv03f09emN/j0nf9aS1pau5qauhoaOxUQf/1OsH
DQaTvtMIyV9qWmpqmqtqm7W1zY31Tb/U1NZUa2ura6o0tf8PTVWXprpTq2nV
ah9DaDQNmuomTVWzRvNIW/NYU9WoranXVtVpNbXVVXW1NfV1jx7XN7TU1bXU
17c1NXU8bm5vamzrbDf82tLZ1qzr1PV09xq7DE8M3cb+/oHBwcHhZ7+/mJie
fPF6ZHh8ZfPi67H33BywX+FOJ+b1MS4P5bmOuL10EBMg8FAMgiTpcCjCcQIv
JCgmGhESgqjyUjqpZMSEIoupVDKTTuXSal5U0sl0TpZzkqwmFTWTqRQKfxcL
/9zd/eSl+2TmpyjdpdV7Vb1VUv9Oqj/E5Hc+eiPEyzZHeH3Lsr1n2z84gdjd
Ozoz2yOcTHPymcW1d2jZ2j3e2TneWN8/Ob4IIOFkMu/HqIMTy/L60fLGwdLq
9vuVg7Wdiws7qRb+CbE5jFJsDsLpDrm9YaeHRYlkEJcjTD6aqFw5SbMVhTg9
vbRYnNdICLrwUp4SUlhEisSzfDwtKUVFKUHE45l07o6XsiQvh/gslyyKubuo
eovSuUtPlIqVCC4TIMU3CysNTd0gk1bzq6a2fXnzNBLN0UJ2++iy3/RC86hN
U9VS36gfG5+zXmG0kA9zeSZ+Q0fLJJdlhUKYTKGYyAtFOfWdS5R56YaT7nml
wiulAJXy4VkkVMSZnBePc1IJpcVzG7J37Ng/ca5un/UYfzfbkUg0Mz2/tPXV
Yr8OgYInZ57RsYXl9TMmXglxJVKosMkfnHyXzP3H4eUWFvcCRFLO/hSUvyLy
LS3eRzPfKbGwuPbt46bLFcwSQtkTSiCUiNEpmCeu3PNiZe/E3WF4br5CiYhi
fDYNrQWpGJOKBCnDcX5xm5VusUgW50uhaIWMFqXczwsnNTzxFqVUPnlPJso0
4BLvosoN8Dw29eHzhtuHPvAAGIO0gpAKEpJQQgL5vtkIXc+IxRFAyYSud2J1
55IRyxSfAbqMpqm5d1uCfBuIZMj4LR4tkokiq9weX2D9T2fJWJZJ3oQTFTxa
YBM3cu4HzigDT+f3jggfmiP5oo/OXOMyTqVRIkEAQC6/feRv0w9bPQhCRrv6
Zjb2AXclzGbQsNpjnFxZO+TFAskXgkweehFsPizkdo59prG3XLIMU4X5MiuX
6EReKf195eP6TH+eWeNXXpmX/0LZko9I4ZEMqBON5xA6vXUcbDOMuHDcG2J0
vbObhwRQHUlUrE52YOj19r6Zi2UILkeKd0EuSwolnEsdmomJmbVwVGWkIhW9
oWIF6BtL30Dl0cnNc1vc5o2BjoFIwY1LO0dO2IjVzcPlNfOHz9aRl0sIK1z4
iCcj72cXTv+Y+Ty3uLf0xTw2vnhm8XKJPBJSfGQaEwrg5yCtgqX3TjCMVUJC
GmwDk4C9OfnGH1JPLti1nYDdJ4SjKfjkzEUZn89VN3Zq6lu1dV31LSP/WjlF
eXHrzNYztNDSMamp0WuqdDUNA32Dr7xIhIaCbB6hswE2S7BFqHxuZ4JkmYrn
CF6FDKwSeAbQAZ+eQN7hU84dYUbKOYIiUOREEw5EsHmYo3Pv8PjSmz8PcEZe
27O0dr7YPcT8mOwIxtd33Y/bR688NBMvIeEsEIIwGagWpNLToL+ZhF5gMziC
SwGXkCofnPsnX+9YHLFvdlxQCy5MdGHydVgFK4In3Wjk6dj7qdltT0CA66XD
8MLll3A6D5+v7bhaO8chT/I5LFL0kVnwBjCG0pnugTfvli3R1D20eEDK5kFE
Mpae/7BnGv0YCBcuvTSXLPjI1FUw5saT7qB0jSadQXpweGH2zVcipL7/sN8/
MINRBZzNQrsvW64Ow0s/kQzzRTxSQaiih1BAEXcw2do19Wndzop3GJPBmQLO
lIBMOpGdml+deLXhQlQvJoF8hFB0oDEbwnuwxJWXvfLhhoFXcwtn/oA8O7/6
fGIRbGC/5mGMpRVrZ++rIKnCpnjRNPQCYwAKMEazbvLYQgGcB1c84CqHoxlW
Loy+XBybWj21sg9rxWYxoeTFRYJNwbaGacVq94+Mvnv/8XL3KPj209HnDUuY
yjJ8Hn/g0ANcBamHG+M6lIMIMllAYfMkhsaWvl1FAmQGCoa4QoirBFkVLqgv
+/aRP9Y3DzEgHC6Zayr1ecfy+8zbobFXpuGpoZHpdv24vu8NyL2w9LX3t2nj
09nfns70mWZGJpZfzu3C2ChbCND/a4fLAVJFqdLJBe3wiwATOAzxeVK4xfkC
r373U5lzR/zT5vWlLw6Z/wLqUTZR
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
/gAjPzy87ZAGWsDX/wFB7ivi
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
u/D5G+zCkoRw8181QSKE
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
g6v3X905CiA=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
j5YPL8lzNw9qCKzyP4Vf1as=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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

            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
oXJWl7S2Q7lDKmiN/wNgZ7Vz
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
+8IolwWZjPr9P44+aFM=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
5gEGBKeE6/8B3SMcWg==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True]
           ,
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
w/67c/ceLVtdUoSpAIvgzv8LGDw9kA==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
TAQc/g9bWh2R
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
qSNYPwjIMGvGlfJ/AaDRNH8=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
37d1DnX2O4cnlvdOGJyrxJgzSq79D3Wi7/8=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlUwlXE8kWTiCCogMqkIWwSFBZngyKggiyOCKKEIEgi6wBskACgSS9r+kl
3el0ts4GSQjM6Jn3O1/NvHOq6ty6XX2++33fvd2H5w5PjU6nC98Fh+MA/RAK
HeCrD8FlLRA+8QbcrvkA5Pa6Q2OHtSDZDPZTsP+J29r7W01PW1tsRqPNbLaZ
TN2trd0dHf3gNJufNjVZjMbO5mZrm+lJd2evxdjV+rijq73X1NJ1r+7Rb/dM
4Nr62GpqsTb+1nzHcM9QU19rqNPXGO7U1hlqau8Yagw1d2p0dbW6+7W6e3rd
Q72uUacHhTXpdA90+jpd7QM9CGoadboGEOt0htr6BoP+bp2hvr7mbr3hfl1t
Q9OD5n9Xa/Nj86OHxpZmi9FkbTW2tVm7LO3dT3r6emwDtu7nvb29IyNvR0cm
3o6+f/N6bGf/4tANuU/g0wAZDEcQPILTEowKGCEhmEjQEk5xBMMRBMVxAs+L
sqQKYkyOJZKpnCQnlHgikUwnU9lUOhdTM9lCWU0VYmo2kSj+m9TiajKXL1Vv
flVvfvKxopwsJbVqSvszk79N5260wl9qqiopZZbP+c/JlfUdx8bu5rZzY3vv
28q60+0XYimYiKztHC6ubi/YF1cc3xftK7sHLpTgZKVw5IG/rTjtjnW7Y21p
bXVuYcnu2Dw+RTP5KkLFz8LskQ/acfoPPUHXMXQWpCNCnuULJKOFYHF7//jQ
c757eHx0HDgN4ygjick8LSUhTmFjWlLLaIViKnepFa/jqZJ2+XdUrUSiV7ya
jWnFdKms5ks4lzjyY5FYgRbz56g4NbfS8LD9H3fqGvX1ze+m7RibjkjFucXN
xtYO3d37IFn3wNw7OOH0IZxSBH/RUkFIVDgpEVWyJBsPwhwbzanaX9H4DVic
XBXiZTldJvksyedhUqPFIkwkRbVCChnPKQFcc5+Gtg5O+ocmz8ICSqVfDE9t
7rshijkLc24/PvDqw/KGN5qqRoDCaoWJlwU5p6QrRyf4+z+WKT6rZH6yUima
uBUTv+T0T1DM9JcfXx3eMJnllOszOB7EExirUUIhIl/ikfj3LY+546XHz8JE
ytL5an55S4hnRKmAYLKl/T9fl51ysgqqBe+paJGXboXYzfYB+nRgBo/keKUS
iVUE9UaIXSvpW5JL9/RNrG+f40yeFa8gKgdRaYhMokwKeMfFsnaHu8Uy6PaT
Z6GY0Tq0+sPNKzlBLBJ0ytI1uOhwRpNlRi4y8hWtlCLSnyRXcmxemDvfiOoN
IAsKAJ9YqcjHLy+waHvP610XEkSTvHINsTmEzaC0ilEyWASfnJ0/aXsyFsTF
44BktI6tbvlY6Yrh8iieMbUPLW0ecIksxmVI6QqLFhjllhJLM5+3njx7J6k3
JF/g47eYcAmAFO360Idanrx0+WlfUBTjP4noZZhSGSkHGDG8ijDq1AdfT9/c
Bc47PUyzeWxjL0hweSFadvsiVtubbZefTWYwMQ9xeUQqhpkMHb2as+8/G5gU
YhVavMS5IiVXyagWy964A3T/8IdDP3GGyJFYFeXznhD/+dvexIeV2c/r03M/
Bl7sjIxvgUbd3MPauiZHJ5cmZzemPq5/+rrX92rmFKUhRg7SSVSoBOkCwuVY
ubx1EP68uE9xecALZfO4WCaFIugfhNEOfKTrjPFecInCf+FIfnXvwtw9XHPP
qjO06A2mxkfj03NHgOD3rZClc6KhyabTN+sNrSCw2oYRTkYiCsIVwmwJ5kpw
JAuwjs+5MKZyUgkoAHjh4hVAIYUrVr4+hRRfKHqBx4DFfiRxhiW8IekMjp2G
o7uu0xbT2Oz8PsEpdoen+9mM041BeAIi4l+XjlqsgyFKwvhUmMmj/E2YvaTk
UohIvh5f3D2Eab5ACUWEyWFCiY5e88qvzX18dGptx4WHyAQlZV3n0SCV8SNx
gBVAY94AZGwfnfq4AVPi+LSj+9nUBSLRQg4hUwDL3DUMsyoupIloBeYqAAvY
Dcpu636970J5uQywgIbALyxSYOWbt1ObfUPzR34ejBWfuAJVhWjtBJJAAJEp
lw9r63g/82kbY5W+36eG39pRYA2dhIjMZ7v3kWmIELKkmEP5IkJfnhMJOlY+
OKGajH1HxyTgBUYMSAf8AkqSQnn43eqL18vH5ypEaWAWwHsfrASpFIAOYuqe
C2q1jH5ZdAdRwdY7PvPpB0wqEBE7hdSpj87H5mGUzQYJBUxKkMriYhFitR8H
0ENT/0mAIyM5lNHACADWWCRHR8tDo8uDb1acXiGIZ2jp8pzMwXQ+iKZhPHsR
UoE7A78vLCx7ltaOXo58+WI/wJgEI2ZhMje74LXa3ofJFMZlEaZA8CXQhAAO
8LL1TwAsoDPoDYIHwlZAe5PS9R+L3sHR1ZUtNIBpjFI5DEjzK8f9r2af9k8+
75tstw03ND0bGPr4aWEDxJ09o929I89fjNv6poDyM1/2GakEZj9EaCE8B8QP
0WnAdGXTF0QUgPV/vyAWzHiVS/y8IAq7HsHpAy2RJeXL/wH1kjbC
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
SF8f2COHdgFkhBJL/wOzxBgH
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
Qxuz
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAlXE1sShoCiIwIDBDBCZAtieCiMPPAh6iAgiAO4IcsDQvY9nXS60/ua
7nTSnXT2FVDP+EfneqZPdZ3q2/fU952qr2rCAX32GNra2uJ3gPtsx9Zh2E58
6QMfh5G43xtxu95HELfXDb9wdIDDAfBOg/d3PDg8Dsw4MgEMBCbT9MiwZXDA
YhycGTXNjpoeDw1O9PeZ73QbH4zNPHxkHTJZ+gYf9Q9NmsxW4wNLf7+pu3uo
s7PH0H633dDVYegytN8G1mno6jTc6mg3dBjaDO2/DQRtnffb2u78ts777cC3
32rv6G1v62kz9BoM3Z0d99rbbv3fg1S3u7pv3+65c6evq6u3r2/k7t1/9t03
9/eN9dx/ODAwZhx6CKBHHpiHTY8s09ZH5qmpyccWy2PwzM3NLS0tHdu8dl/U
H8XDCA0TAs4kETyZINIhiIURnmJljORwSiJogeYkYIKkZbJlQcqJUiGbb+Qy
dV1vaVpd0+v58rVeutIKNUWvaFo5myuWK818vg58o3lz8/2/glKlRV1MV1LZ
hla8yRSv5ey1mv8lKlecXIXxFIymfH7GHyXPndClB4bQZILOopTmDXHH59HT
U8/Fhc/lgf1BLEHKIA9KKedu+NLtd/oiF47g8ZnX5UNQQs4WruNkNk6q3ghr
8ySCsBhGUiFESbBVQfnBSLUIKvshzhPk7H7EGUxEcZkUirzSIoUyl2rI2R9q
riam8plcI6lWlFxTrfyUsk2Mz0t6QSnU5VwjU/gJLgdhiVeaCbYMkv+1/nV8
9mW/ad44vmyeXf98gmJchZKq2x9PeobH22/1tHX2dvxjcPbpqt0bl7Umzuq8
3KD4sqQ2BKVM8ro3DOpdTWZv+ExLyFxz6byglsXMdYKuhOM5GC+wcgMm8wDO
H0vZvLQjwB1fYrufgi/e/B2AFZzPWZ+vnnuCKJuEKdEZii+ubuwfXaYLVxiX
xVidTpZJqZDMNT0Q++b9IZ+qZUq/BLXJpZucWsiUfyS17y83Tt/t+UGhQBxE
ZAhTvZCIMgU21RTSrYPDoOXJW5efiRPK8Ojkmd3NyxlZryNManT62caH46T6
u4Z0skoKFTZzJeRujl3I/PI2LVcosUQLFUm7Ao2T1BZO1yemN76d4FzyWtau
4mzBBQn+323KYFwJsP10BFnm1gMxIRBle41TdndESOuEmEFZZdA8u3/kAcxD
WCZCaDiAU1qJZOXgLDyzuCGoV4AAl6pRUplPV5PqNYRqQ6PL7qCcYAop/SpM
qg6I90WVYCLLpL+Dw529oHVhN4ILl3783oDVCTGMUqCTGZRJD44+ObT56XQt
RGSjXC0uVqlUA3Rna88xt7gtpr9zSosQy6zaYuRGuvDrzIUZxxZcIQ6msqn8
zxCbdcSkYxcZIfJADzFc2z2A5p/vxWj+2A73DS+deRlEUFlR84aZYfPChQ8h
UxUflvUTBUgsJkAxpfrOR/eL1185+UrIfKeSNUCASrV47ceJG51b2QpiMsLr
dLqBSnVXNLW15wKl2//i3dlzftiHNnbOcE4+tsVM5vWF5Y8rr/e3di/+vXk+
ZlkLwDLCFcN0OcJUYmIJZoqAoTPI2r0MSoG4RIpNTKwRQoUUqwidv/AQdj8N
VCHrP6Jc6YsNnXr69m6v5fY9891749OWze3/ODBWOjyNWKy7RtPKrW6zoWvM
+GD54eRagi2CFoepaoQphVkdT9ZxvnpiR0JxMHplnC8DYSNcGVwT1RuACBQO
GoQwOsDCpPp5gHGEk8GY4oPECxc8YXm7tn6EUMlXm18t1u0zBx3DimFYfrfr
NI2/iBHZGK1HiGqErkWYAq3cxAjd+q8tmwcHwohTOsqUEkIdSFRSfx4chl+8
/nbupGJYDvwNkxrQRhDXAJkYk4sg/OjYX2+2/iZE7dnyzsTsJkwAqkVKKG6+
t/WPPAUMYSbvR/MBsgjxJUxsBOPp3mHrhRsFgvdFk4RQA4eUWGWSzZVXh0+X
9l0BCcZ1sGd8aNoeEdywHMW1EJoCy2p06tWHz644ozxZ2H325yHCVYOJNErn
196eDo4+x/himMj40RxoGSyWUK7hj0ndxpkLT1xU6yBDnCok+CbQIZVsWP7Y
sS7ueyNanKwAiQYSuhNSnBHJA4vBOGtzx0ZGVw6++cF8TT7eXNu4BP2Nkiko
kVlc+TRgWgItCKCKD8kG8FKYyWFC68SeGBx7eulDwZ6JEipCFyn5JyZWgBSn
5ncWV4/sASWUyDPpljuq2wMaxjYILoczvMsXezS+9ulr/PO32Ix1+/2ehxB0
XqmTfO3NO8fssw84XweTGMZrXrgQJasA68iGTP3x0hHAEDoTpzUgFZiuglkA
lXy5dTm/fPjpFIOIEsCyBdTl144p67uJx8+nrbNTM/PjE68Wnn9dWT158scH
0/jypPVP88zixOzq7LP3OwdBIOkQlvPEigGkbg+pl0HBFRJOnTAAAgZTahhV
IbIA0TmIKvoQ/cTFH17SYaII1sv/AL60NYI=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAlTE1sWRlkVrVFkdFQeu8MiiIILouJjERARAoiCr0RAFtkhgSyQtdNJ
r+ktnV6TTmchCUQWlzc1P2+uNVXfvXW7T3d955zvO7dqbnNs8XxOTo6pCGxj
s5Yuo3HWNn4FPExsmJaXNhbmX2/sLCwtGNvncsHLa2DVgvX7XFndUl3VUlXV
XF19r7KyqaK8pqa6vqa6saaqqba6uaqyvqK8trKitr6msaLsd+iPstqy2zXl
5f8uKblVWlr2z5KbVy6XFhVezs+7CJCXfzE378K584W5ubl5eQXnz/3GuZz8
nJz83PNFOecKCi5cyckvyskrzM0ryM0rAl8WFF7Ky7tUVHQlv6A4v+BiQWFx
cfHlCxeKS0uvXy25fuNfZbduV/xRVt3Y0HK3vgXs9XXNjx89a21rf/T4WfvT
zq7e1y9edr7s+rOnt2/g9ZvhkdG3w2MjhrFts23X6thzejw+v8+PwiiBEowL
IiAf5Ud5PCDQnExQIk2zGEaEghIXFANMiJcjghrjxEiQlxVVB5BUPRxNarEU
CIUUTY3qohpWtCiAFj9IZ0+OTr4TbISXErwUU6IHcjgha0lFO1S145CURfGo
w8XPzlv+mt6cnV0F+PrVuGdHiYDsRYIra9bpuY25uTWAL4ub2zsOkJIUPrDs
w7MLG5/nlheXt1Y3LEsrpsVlo8dL6/ETHyEzvG40ezZNdpPZtWXxuHxBKpgO
cBmESEFIxGSl1rZho9Fps/k8XkZQUoyQZMU0r2YBtPgxQDRxIkTSnJyIps5Y
JcFHUpHEdy35Q0/9kqPHECrZXLQQPiKYhMsX6uwdu3G7rrD4xoWr5beq2j59
seHMEUanh8a+ltW0XSypKLp4vaS08t79Fy6I5aQMFQJcx7x6woWSLJ9ACcVs
x0lOFyNZQctK+rEYPgNQoj8xKu7DdZBzSDlDyCjO6BAq2N2kwxMw7vn63n56
3j3p9ms+ItbR9e7LqtWNcTgp2faRxx19S+v7oBxGPsKDSULICOoJwKYZNXxY
5uRsSDsNRk859ZsQ/qHo/6FD2fGpzXUT5ieTQvgXSsfdPgkJRHBGo0OJAKuM
vZ97+GTA41Wc7tCDh/3bOz5eStLBsBdh7rY+n183s2oaIhQ3qRBimhG+ydG/
P86Yuwc/c8opIx3TygkbPmPlEzH6y+FTOro/bFs5mDgQtJ9eMuJBFS8mw7gA
YSwjRj5OLz980ocQonWfrG98ub2DsFKc4nXQqIamF1+WdzkljTAxXEgScooV
T0Pqz96hLz1vZgAXF/lJiMeUfEqGUnL8+7oZufdkYN8reAldTfwXZnQ3ouxD
vI8QEZIhgtqb0dmevgkMY43brobGgX2XwshxOhTz+PSGu90bRgfQCAkkUDZO
SDFaOGTF486eqe7+T7x8ijMpWjyh5V+8klL0k6U11/1HA06v6ICEcOxvmIva
EdUX0FFGJXnBS6qvBqd7+scpml1e3r3/wGCzqwirkHxsZZ1qan5ttsK8cIBT
WT8VQ0Ma4GLEo4G3M8Pji0A4VsqC7mH8USAYiyRON3agzt53QCMXLEmR715G
NzqCUzN7I++Xh9/NjE5tDY+tj00sYiS7ZfRUVfW0tI529k92D00YJoxtTwwu
L+XHwn4iA5MJ0BOcOyC4pMlK7O4TAXAOpjA2hfEZjNVE7QQmIjNLNouT2YdC
UvSHk1BXd6nmJ4ZLpXWFV/8o/EdtefWL2XmTH6OWV+z1DQPXbty/fL2u6NrN
azfbWh+PIJSEUTEYS/sDaZiOEfyBPxAxWlEElwk2hlA6aJGPiWOMDuAjNaCO
zc3Z3EFQspfSLV7Z5ovYEdkKEdPzew0t/ZOfl5BAoG/wfVv7kMVJOWDeibJ/
zTlb2w0EGyXZNExkICLj5zLAA15c6R78YHEQtJgE/vSzCX8wibOJoPJt9uve
+09bW2bSi8V45QegMLlCDizqIlQnwe+5habWwamZRRgj7zZ3//lqEmFkmFA9
hNj3duVRxwcIF4GTHbAObOyhYrR0aHYEGh50glkOhHQPLgMuhD9AKC3Apzq6
xt+MLTjhMOCiQ6cQpVl9kgWSPJjmxiSzXWi4NzQ5s+7w0rV1fa9HFghedflU
0K7ugZXmhwZQCFAKItNuMu5lEmBq5tdcd5o6XX4J1IKxSYTLwEwKYSMYF2t9
NjRgWNjzqG4kwUq/nJj6fy4Ij0KYurYVqLzz6uumx2gja+sMU59tGCdD/qgF
EhpaxlvaJwLyoROLeoikk9BcZIQSstNL1prG5yBPoA5Cx/HQIaWc4cG4n9Yf
d46+eju3aweTe0AGzyx+dQ+O/D4zh+DWWjfS5TU9K0ZsYQXt6jGtmWg/LYG7
0Y3ExqccfYZVjE/t+TU7qkO07iCjwAmrO77OVxNuRCS4ODAeKWZhNokyCUrM
GCbXRyeNm2YG/M6IP7ed7MjHrQdPh5vbesCNBIxxo6zjZf/005efq+68u139
/M69R433++62DXb2Ls6uwkALF3UAMxk7pjhx3Y1GIDyyvoMAFiqUQZkDL5UE
UV8gySnfgVfXd8mlDRTCwdSf/Q9nJLEL
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.926605678897298*^9, 3.9266057248666134`*^9, {3.926605831446455*^9, 
   3.926605844785308*^9}, 3.92660590406386*^9, 3.926605949098161*^9, {
   3.9266061749686112`*^9, 3.9266062152796183`*^9}, 3.9266064384063253`*^9, 
   3.926606607694276*^9, 3.9266069662667575`*^9, 3.9266072778693895`*^9, 
   3.926607401344831*^9, 3.926607654039076*^9, {3.9266079016792283`*^9, 
   3.926607932476842*^9}, {3.926608049864786*^9, 3.9266080606548424`*^9}, 
   3.9266083134358034`*^9, {3.926608408185783*^9, 3.9266084275005465`*^9}, 
   3.926608587256486*^9, 3.9266086877465477`*^9, {3.9266088492362585`*^9, 
   3.9266088590607057`*^9}, {3.9266088911644077`*^9, 3.9266089098784275`*^9}, 
   3.926609135440962*^9, 3.926609178841306*^9, 3.926609214965289*^9, {
   3.926609282677844*^9, 3.9266093326269255`*^9}},
 CellLabel->
  "Out[6135]=",ExpressionUUID->"83ba5ed7-030b-4a3a-91e8-811c97e75ffb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatFlowDataOriginal", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
       "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
        "\"\<\\\\heat_flow.csv\>\""}], "]"}], "&"}], ",", 
     "\[IndentingNewLine]", "loadDayStamps"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.925988919373435*^9, 3.9259890219945683`*^9}, {
  3.925989294842729*^9, 3.9259893310958586`*^9}, {3.9259901842672005`*^9, 
  3.925990185178087*^9}, {3.9259910587689404`*^9, 3.9259910886032476`*^9}, {
  3.9259919301350513`*^9, 3.925991936939896*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"7b3f0fc7-79ba-4ace-80d8-a41ae892ef8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatFlowDataNet", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
       "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
        "\"\<\\\\heat_flow_net.csv\>\""}], "]"}], "&"}], ",", 
     "\[IndentingNewLine]", "loadDayStamps"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.925989335339324*^9, 3.925989341252754*^9}, {
   3.925991091675246*^9, 3.9259910943459015`*^9}, 3.9259912208488703`*^9, 
   3.9259913642529616`*^9, {3.925991939327469*^9, 3.9259919436306667`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"70381266-39e8-4fe1-a509-b155bf8e4c74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"heatFlowDataOriginal", "[", 
              RowBox[{"[", "day", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"heatFlowDataNet", "[", 
              RowBox[{"[", "day", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "->", "All"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"day", ",", "goodDays"}], "}"}]}], "]"}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.9259893529914694`*^9, 3.9259895005415983`*^9}, {
  3.9259895576443224`*^9, 3.925989559020027*^9}, {3.9259901929262886`*^9, 
  3.925990253888524*^9}, {3.9259902976781044`*^9, 3.9259902977413597`*^9}, {
  3.9259908540578456`*^9, 3.925990855813833*^9}, {3.9259919663301735`*^9, 
  3.9259919681667*^9}, {3.925992000322381*^9, 3.925992002017271*^9}, {
  3.9261471355049934`*^9, 3.9261471363126907`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"5d7f7fc8-36e5-42e5-8c90-f182db080696"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"weibullParameters", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "10.3", ",", "0.001"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2.3", ",", "20", ",", "0.001"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "20", ",", "0.001"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "10", ",", "0.001"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"WeibullDistribution", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"weibullParameters", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"weibullParameters", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"weibullParameters", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "power"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"power", ",", "0", ",", "100"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "50"}], "}"}], ",", "All"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "150"}]}], "\[IndentingNewLine]", "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "Row"}]}], "Input",
 CellChangeTimes->{{3.9259926854052496`*^9, 3.925992702320949*^9}, {
  3.9259927611506276`*^9, 3.9259928624334116`*^9}, {3.926147212770434*^9, 
  3.9261472262577868`*^9}, {3.9264151596715803`*^9, 3.926415179166992*^9}, {
  3.9264176342388725`*^9, 3.9264176359279437`*^9}, {3.9264191441500235`*^9, 
  3.9264191649017982`*^9}},
 CellLabel->
  "In[1091]:=",ExpressionUUID->"02535bbc-d905-41e0-933f-ab7e84179df3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$387234#1"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 150, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 50}, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wv8A9XM3Hg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$388612#1"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 150, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 50}, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
pw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$390446#1"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 150, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 50}, All}, PlotRangeClipping -> 
     True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3Gux70HxgQbVJEhvbNuOOVODXbXXOubcQQIL9UPFC3OVmJfgeEZMFwn+2yq/
FphXiTmO+bA86SaBeNZ40ca5SkzXPPfP2hsS0EY6Rb0crcDY9P70Xx/a9Yf8
QS+DiXLsoWTF1ewvJNiw+RxmxvUEu8i5sln3jQTGQRTXreJSTHZL0q9/fnec
du4Nn1op1tpe7k67TALz2J6SWu8S7AO5nOK2QQLl8haatplibF9ombQ8gznU
yIYfPri3COu1Xyo1OWAOMVKrl5krHmIp2hKirkzmYAmqGGb9EBNiKTt8j9Uc
DJeo2nhqCzHFB08YaXjNgbvuWpFFQAHm0l069+aUOVxUKde7L/4AO/Pkh/0X
cXPY7EcCXV/ysLWk0xNUEuawtMJcNfkgDwu3Lh2UkTGHs5Wkr1OCeVj6Uknr
XRVzWPPo1mg7fB97yVmS4WRoDk0hw3PpKdlY3NY8Z5ixOXhaMedfOp6NkT6J
JaYTzMGcdbPsTX0WNln0OOo1yRzKqbzt9n++h22oPPaVsjEHIt3+oTXDTEzU
odj4r6c5jHMf+6B6Lh17maVcvnrJHL59ORXExJiOXRh5xfrV2xzU03V8lxrS
sHzC/LsBP3NwDg+KHOFLw4SQ+NmiUHMQi1J4O/ftDsbF/8SZeNscuqgmjQ5W
J2M1Fni3brw5INFMiqt3MkZK7j2FJ5pD6NGnLfclkrHE/Us/Tt4xh1+vvynl
PUnCGDclfP/dM4eKu3pyKbWJGM1QRfijEnOIsDIoGhqOx+6zqk9nPzEHvWI8
6617PAZGAxop5eawdbGBQ5o6Hgt9sUofVm0ODNoVG0KScdhGpcxtUpM5SJ6W
Gj6RHYstxtfc3XltDszPCw+z193Ebr/W2vWXOaSW2HHcsb2Jie8dsv7+1hy+
K1fUqjLcxFyvrh9+P2gOO8kuUz9so7FZD4XC4jFzeH0uK9qLNwob06uvNJ83
hyk/Gs+Z1khM3SSf4vfDHKzte+yO+UZixaT4fylL5uBb0UgKOxmJBds66b/7
aQ51d6ji3FMiMF4/1mmzbXMwXecLawi8jlFyXVkJTGT4Y6NF2esVjrUWkOou
HSTDJ7lTVswy4djJx8gmnpUMT/j5uL/9CMM2ajgf9XKSIVTXdOYBTRiW9vo5
GAmSYfJOVu86CsWG1g956UuQgXk6YD81XTCGb9NyuUmR4Yr370zJ/CCskHq5
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$391962#1"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 150, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 50}, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.925992690616478*^9, 3.925992702999118*^9}, {
   3.9259927732489214`*^9, 3.92599286406723*^9}, {3.9261472183320394`*^9, 
   3.926147226863081*^9}, {3.9264151612764606`*^9, 3.9264151800226517`*^9}, 
   3.9264176374405885`*^9, {3.9264191466763372`*^9, 3.926419166251113*^9}},
 CellLabel->
  "Out[1092]=",ExpressionUUID->"f2fea14a-9347-4dfd-a03e-887b90a5e82d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Differences", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"heatStockDataOriginal", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", "+", "cycle"}], "]"}], "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"dayN", ",", "goodDays"}], "}"}]}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"0.01", "<", "#", "<", "100"}], "&"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "4"}], "}"}], ",", "All"}], "}"}]}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Differences", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"heatStockDataNet", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", "+", "cycle"}], "]"}], "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"dayN", ",", "goodDays"}], "}"}]}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"0.01", "<", "#", "<", "100"}], "&"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "4"}], "}"}], ",", "All"}], "}"}]}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.925992047687208*^9, 3.9259922271487494`*^9}, {
  3.9259922687225695`*^9, 3.925992349749931*^9}, {3.9259923854596443`*^9, 
  3.925992448282816*^9}, {3.9259927249372835`*^9, 3.9259927464138184`*^9}, {
  3.92614717544269*^9, 3.926147193460128*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"a19b18ab-c0bf-49c5-8458-59e99e4400a1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 449.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 267.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 411.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 560.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 788.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 1719.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 1290.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 1563.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 1187.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 578.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 1001.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 387.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 181.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 33.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 151.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 114.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 16.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 95.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 26.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 10.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 7.},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 4.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 2.},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 2.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 13.},
          RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 8.},
          RoundingRadius->0], RectangleBox[{3.2, 0}, {3.3, 1.},
          RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 18.},
          RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 2.},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 1.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 3.},
          RoundingRadius->0], RectangleBox[{4.2, 0}, {4.3, 1.},
          RoundingRadius->0], RectangleBox[{4.4, 0}, {4.5, 9.},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.7, 1.},
          RoundingRadius->0], RectangleBox[{4.7, 0}, {4.8, 1.},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 3.},
          RoundingRadius->0], RectangleBox[{5.3, 0}, {5.4, 2.},
          RoundingRadius->0], RectangleBox[{6.7, 0}, {6.8, 2.},
          RoundingRadius->0], RectangleBox[{8., 0}, {8.1, 2.},
          RoundingRadius->0], RectangleBox[{40.5, 0}, {40.6, 1.},
          RoundingRadius->0], RectangleBox[{84.4, 0}, {84.5, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 339.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 221.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 206.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 460.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 104.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 555.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 512.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 654.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 596.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 459.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 1356.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 558.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 404.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 323.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 73.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 379.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 198.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 160.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 51.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 47.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 223.},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 40.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 69.},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 42.},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 296.},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 61.},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 10.},
          RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 22.},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 4.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 6.},
          RoundingRadius->0], RectangleBox[{3.2, 0}, {3.3, 1.},
          RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 17.},
          RoundingRadius->0], RectangleBox[{3.4, 0}, {3.5, 6.},
          RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 10.},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 11.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 5.},
          RoundingRadius->0], RectangleBox[{4.3, 0}, {4.4, 22.},
          RoundingRadius->0], RectangleBox[{4.5, 0}, {4.6, 2.},
          RoundingRadius->0], RectangleBox[{4.7, 0}, {4.8, 4.},
          RoundingRadius->0], RectangleBox[{4.9, 0}, {5., 1.},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 2.},
          RoundingRadius->0], RectangleBox[{5.1, 0}, {5.2, 13.},
          RoundingRadius->0], RectangleBox[{5.2, 0}, {5.3, 1.},
          RoundingRadius->0], RectangleBox[{5.3, 0}, {5.4, 15.},
          RoundingRadius->0], RectangleBox[{5.4, 0}, {5.5, 6.},
          RoundingRadius->0], RectangleBox[{5.8, 0}, {5.9, 1.},
          RoundingRadius->0], RectangleBox[{5.9, 0}, {6., 14.},
          RoundingRadius->0], RectangleBox[{6.9, 0}, {7., 15.},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.1, 1.},
          RoundingRadius->0], RectangleBox[{20., 0}, {20.1, 1.},
          RoundingRadius->0], RectangleBox[{37., 0}, {37.1, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 703.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 429.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 871.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 861.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 395.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 1244.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 940.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 636.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 659.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 409.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 702.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 75.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 88.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 141.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 5.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 66.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 42.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 33.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 6.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 35.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 56.},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 6.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 7.},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 11.},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 2.},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 17.},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 140.},
          RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 24.},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 1.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 30.},
          RoundingRadius->0], RectangleBox[{3.8, 0}, {3.9, 1.},
          RoundingRadius->0], RectangleBox[{4.2, 0}, {4.3, 4.},
          RoundingRadius->0], RectangleBox[{4.8, 0}, {4.9, 1.},
          RoundingRadius->0], RectangleBox[{5.9, 0}, {6., 1.},
          RoundingRadius->0], RectangleBox[{6.9, 0}, {7., 54.},
          RoundingRadius->0], RectangleBox[{7.3, 0}, {7.4, 22.},
          RoundingRadius->0], RectangleBox[{14.2, 0}, {14.3, 3.},
          RoundingRadius->0], RectangleBox[{35., 0}, {35.1, 2.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 106.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 71.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 55.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 152.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 13.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 127.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 112.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 63.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 9.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 1.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 39.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 11.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 4.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 4.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 32.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 1.},
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 172.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 647.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 445.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 521.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 493.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 1640.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 1508.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 1199.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 898.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 578.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 1095.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 212.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 239.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 167.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 136.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 285.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 138.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 36.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 33.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 81.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 10.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 21.},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 2.},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 7.},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 16.},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 6.},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 1.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 5.},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 1.},
          RoundingRadius->0], RectangleBox[{3.7, 0}, {3.8, 11.},
          RoundingRadius->0], RectangleBox[{3.9, 0}, {4., 1.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 4.},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.7, 6.},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 2.},
          RoundingRadius->0], RectangleBox[{5.9, 0}, {6., 2.},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.1, 1.},
          RoundingRadius->0], RectangleBox[{8., 0}, {8.1, 1.},
          RoundingRadius->0], RectangleBox[{8.4, 0}, {8.5, 1.},
          RoundingRadius->0], RectangleBox[{9.4, 0}, {9.5, 3.},
          RoundingRadius->0], RectangleBox[{9.9, 0}, {10., 1.},
          RoundingRadius->0], RectangleBox[{35.3, 0}, {35.4, 3.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 182.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 283.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 280.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 271.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 112.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 333.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 257.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 469.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 648.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 380.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 1163.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 578.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 435.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 317.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 74.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 362.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 178.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 143.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 87.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 49.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 168.},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 46.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 150.},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 99.},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 33.},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 88.},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 18.},
          RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 3.},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 4.},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 16.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 26.},
          RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 6.},
          RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 7.},
          RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 2.},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 6.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 1.},
          RoundingRadius->0], RectangleBox[{4.1, 0}, {4.2, 1.},
          RoundingRadius->0], RectangleBox[{4.4, 0}, {4.5, 12.},
          RoundingRadius->0], RectangleBox[{4.5, 0}, {4.6, 1.},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.7, 6.},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 2.},
          RoundingRadius->0], RectangleBox[{5.1, 0}, {5.2, 21.},
          RoundingRadius->0], RectangleBox[{5.4, 0}, {5.5, 4.},
          RoundingRadius->0], RectangleBox[{5.5, 0}, {5.6, 2.},
          RoundingRadius->0], RectangleBox[{6.9, 0}, {7., 4.},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.1, 1.},
          RoundingRadius->0], RectangleBox[{11.3, 0}, {11.4, 1.},
          RoundingRadius->0], RectangleBox[{11.6, 0}, {11.7, 1.},
          RoundingRadius->0], RectangleBox[{15., 0}, {15.1, 2.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0., 0}, {0.2, 1607.}, "RoundingRadius" -> 0]},
              ImageSizeCache->{{27.960139154675037`, 
               35.87025478791544}, {-48.73659972289899, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1607]& ,
            TagBoxNote->"1607"],
           StyleBox["1607", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1607, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0.2, 0}, {0.4, 1617.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{35.37025478791544, 
               43.28037042115585}, {-49.27371686492076, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1617]& ,
            TagBoxNote->"1617"],
           StyleBox["1617", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1617, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0.4, 0}, {0.6, 1652.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{42.78037042115585, 
               50.69048605439626}, {-51.15362686199697, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1652]& ,
            TagBoxNote->"1652"],
           StyleBox["1652", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1652, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0.6, 0}, {0.8, 1496.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{50.19048605439626, 
               58.10060168763667}, {-42.7745994464573, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1496]& ,
            TagBoxNote->"1496"],
           StyleBox["1496", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1496, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0.8, 0}, {1., 863.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{57.60060168763667, 
               65.51071732087708}, {-8.775084356479042, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 863]& ,
            TagBoxNote->"863"],
           StyleBox["863", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[863, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1., 0}, {1.2, 1009.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{65.01071732087708, 
               72.92083295411749}, {-16.61699462999693, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1009]& ,
            TagBoxNote->"1009"],
           StyleBox["1009", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1009, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1.2, 0}, {1.4, 304.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{72.42083295411749, 80.33094858735788}, {
               21.24976388253809, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 304]& ,
            TagBoxNote->"304"],
           StyleBox["304", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[304, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1.4, 0}, {1.6, 203.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{79.83094858735788, 87.7410642205983}, {
               26.674647016957998`, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 203]& ,
            TagBoxNote->"203"],
           StyleBox["203", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[203, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1.6, 0}, {1.8, 144.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{87.2410642205983, 95.1511798538387}, {
               29.843638154886463`, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 144]& ,
            TagBoxNote->"144"],
           StyleBox["144", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[144, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1.8, 0}, {2., 89.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{94.6511798538387, 102.56129548707911`}, {
               32.797782436006216`, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 89]& ,
            TagBoxNote->"89"],
           StyleBox["89", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[89, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2., 0}, {2.2, 104.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{102.06129548707911`, 109.97141112031952`}, {
               31.99210672297356, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 104]& ,
            TagBoxNote->"104"],
           StyleBox["104", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[104, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2.2, 0}, {2.4, 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{109.47141112031952`, 117.38152675355992`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2.4, 0}, {2.6, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{116.88152675355992`, 124.79164238680033`}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2.6, 0}, {2.8, 19.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{124.29164238680033`, 132.20175802004073`}, {
               36.55760243015863, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 19]& ,
            TagBoxNote->"19"],
           StyleBox["19", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[19, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2.8, 0}, {3., 22.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{131.70175802004073`, 139.61187365328115`}, {
               36.3964672875521, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 22]& ,
            TagBoxNote->"22"],
           StyleBox["22", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[22, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3., 0}, {3.2, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{139.11187365328115`, 147.02198928652157`}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.2, 0}, {3.4, 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{146.52198928652157`, 154.43210491976197`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.4, 0}, {3.6, 4.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{153.93210491976197`, 161.84222055300236`}, {
               37.36327814319129, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.6, 0}, {3.8, 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{161.34222055300236`, 169.25233618624276`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.8, 0}, {4., 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{168.75233618624276`, 176.66245181948318`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{4., 0}, {4.2, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{176.16245181948318`, 184.0725674527236}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{4.2, 0}, {4.4, 4.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{183.5725674527236, 191.482683085964}, {
               37.36327814319129, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{4.6, 0}, {4.8, 3.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{198.3927987192044, 206.30291435244482`}, {
               37.41698985739347, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{5., 0}, {5.2, 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{213.2130299856852, 221.12314561892563`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{6., 0}, {6.2, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{250.26360815188727`, 258.17372378512766`}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{10.8, 0}, {11., 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{428.1063833496571, 436.0164989828975}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{15., 0}, {15.2, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{583.7188116477056, 591.628927280946}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.49699999999999994`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.49699999999999994`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.05, 806.},
          RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 40.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 144.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 39.},
          RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 1.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 63.},
          RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 28.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 24.},
          RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 1.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 7.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 52.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9259920589703493`*^9, 3.925992228055667*^9}, {
  3.92599227457625*^9, 3.9259923514224377`*^9}, {3.9259923931934385`*^9, 
  3.9259924493514495`*^9}, {3.925992743343773*^9, 3.9259927471616726`*^9}, {
  3.926147182359342*^9, 3.926147194214856*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"e5411e6f-1057-4e79-a290-45657876472f"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["adatok", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 3.9266096544308543`*^9}, {
  3.926609698670888*^9, 3.92660970001445*^9}, {3.9266098156146207`*^9, 
  3.9266098168798327`*^9}, {3.9266109417756853`*^9, 
  3.9266109423195133`*^9}},ExpressionUUID->"a897956f-ffaa-4728-a7d7-\
6b6d1ba2f5e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "rawDataRoot", "=", 
   "\"\<C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\kazankontroll-\
dashboard\\\\data\\\\raw\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.9264072662174683`*^9, 3.926407266512049*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"5ba8a670-4e9c-4a38-87e1-748e19abe0ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "formattedDataRoot", "=", 
   "\"\<C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\kazankontroll-\
dashboard\\\\data\\\\formatted\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.9259888840241904`*^9, 3.9259889122362614`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"962872a8-cfd6-44ab-be9b-f7824f9496f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"seasonDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266633315472913`*^9, 3.9266633684587975`*^9}, {
  3.9266864509294653`*^9, 3.9266864704119587`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"6fb3b0fd-1234-49fa-8da1-cf051addda4c"],

Cell[CellGroupData[{

Cell["h\[ODoubleAcute]", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 
   3.926617860116063*^9}},ExpressionUUID->"0d1f01c7-6475-4302-bcb4-\
1817d8ba287e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatDataDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", ",", "22"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "3", ",", "29"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.9266162771246805`*^9, {3.9266163075883827`*^9, 3.92661631126453*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"fbdf59dc-a1c7-47b6-924d-e5445b201b94"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockPre", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
         "\"\<\\\\heat_stock_net.csv\>\""}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToStringWithDateCorrection", ",", 
             RowBox[{
              RowBox[{"DateList", "[", "#", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<-\>\""}], "]"}], "&"}], ",", "heatDataDays"}], "]"}]}], "]"}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266110710573893`*^9, 3.9266111312977343`*^9}, 
   3.9266113710905857`*^9, {3.926612050754913*^9, 3.926612058257547*^9}, {
   3.926616227060459*^9, 3.9266162395086555`*^9}, {3.926616270163266*^9, 
   3.926616273252042*^9}, 3.9266163268353047`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"12daf358-da08-4385-a267-746ec928ac38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"heatStockDated", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "dayDateList", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"dayDateList", "=", 
             RowBox[{"DateList", "[", 
              RowBox[{"heatDataDays", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dayDateList", "[", 
                  RowBox[{"[", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
                 RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
                  RowBox[{"heatStockLine", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                    "4"}], "]"}], ",", 
                   RowBox[{"heatStockLine", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "5"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"heatStockLine", ",", 
                 RowBox[{"heatStockPre", "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"dayN", ",", "1", ",", 
           RowBox[{"Length", "[", "heatDataDays", "]"}]}], "}"}]}], "]"}], 
       "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"1", "-", 
    RowBox[{"es", " ", "k\[ODoubleDot]r", " ", 
     RowBox[{"\[AAcute]tfordul\[AAcute]s", ":", " ", 
      RowBox[{
       RowBox[{"jan", " ", "20"}], "-", "21"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "-", 
    RowBox[{"es", " ", "k\[ODoubleDot]r", " ", 
     RowBox[{"\[AAcute]tfordul\[AAcute]s", ":", " ", 
      RowBox[{
       RowBox[{"feb", " ", "4"}], "-", "5"}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9266116112514324`*^9, 3.9266116188654027`*^9}, {
   3.926611743456129*^9, 3.9266117684806967`*^9}, {3.9266118120005856`*^9, 
   3.9266119265780196`*^9}, {3.926611969040595*^9, 3.9266120291735673`*^9}, {
   3.9266120624339485`*^9, 3.9266120724812126`*^9}, {3.9266121172819843`*^9, 
   3.926612122290862*^9}, {3.926613199377989*^9, 3.926613230864958*^9}, 
   3.9266168193009434`*^9, {3.926619639494442*^9, 
   3.9266196541827917`*^9}},ExpressionUUID->"c13ca58b-e763-4bf3-9e44-\
dfaaf192b42d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cycle", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SortBy", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"heatStock", "[", 
        RowBox[{"[", "cycle", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ";;", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "]"}], "]"}], ",", 
      "First"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Differences", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"heatStockDated", "[", 
             RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "#"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"heatStockDated", "[", 
           RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "<", 
         RowBox[{"-", "10"}]}], "&"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.9266122072202215`*^9, 3.9266122163689213`*^9}, {
  3.9266124518430166`*^9, 3.9266127024170876`*^9}, {3.926612738034088*^9, 
  3.9266127455804243`*^9}, {3.9266128223068824`*^9, 3.9266128251533375`*^9}, {
  3.9266131671390133`*^9, 3.9266131672821875`*^9}, {3.9266168157806997`*^9, 
  3.9266168174779644`*^9}},ExpressionUUID->"886786c1-19ad-4d94-9047-\
927fb84d80a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Thu 14 Dec 2023 23:55:00\"", 
           StyleBox[
            RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
              StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
            FontColor -> GrayLevel[0.5]]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2023", ",", "12", ",", "14", ",", "23", ",", "55", ",", 
                 "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
             ",", "2.`"}], "]"}]},
        "DateObject",
        Editable->False], ",", "4247"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Fri 15 Dec 2023 00:00:00\"", 
           StyleBox[
            RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
              StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
            FontColor -> GrayLevel[0.5]]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2023", ",", "12", ",", "15", ",", "0", ",", "0", ",", 
                 "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
             ",", "2.`"}], "]"}]},
        "DateObject",
        Editable->False], ",", "4228.808510638298`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Sun 4 Feb 2024 23:55:00\"", 
           StyleBox[
            RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
              StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
            FontColor -> GrayLevel[0.5]]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2024", ",", "2", ",", "4", ",", "23", ",", "55", ",", 
                 "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
             ",", "2.`"}], "]"}]},
        "DateObject",
        Editable->False], ",", "9937"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Mon 5 Feb 2024 00:00:00\"", 
           StyleBox[
            RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
              StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
            FontColor -> GrayLevel[0.5]]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2024", ",", "2", ",", "5", ",", "0", ",", "0", ",", "0.`"}], 
               "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", "2.`"}], 
           "]"}]},
        "DateObject",
        Editable->False], ",", "125.00000000000182`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9266122179796953`*^9, {3.9266124585001974`*^9, 3.926612480575667*^9}, {
   3.926612515198098*^9, 3.926612519526372*^9}, {3.926612567425124*^9, 
   3.9266125766486893`*^9}, {3.9266126092992077`*^9, 
   3.9266126394891963`*^9}, {3.926612669971921*^9, 3.926612702880772*^9}, {
   3.926612738443687*^9, 3.9266127463465*^9}, 3.9266128274918957`*^9, {
   3.926613140236714*^9, 3.926613167637991*^9}},
 CellLabel->
  "Out[6307]=",ExpressionUUID->"cb03abb9-6aaf-479b-a5e3-0e2a52a21315"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"heatStockDated", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"2024", ",", "1", ",", "20", ",", "23", ",", "59"}], "}"}],
           "]"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", "10000"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "#"}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{"heatStockDated", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266132588860426`*^9, 3.926613267760889*^9}, {
  3.9266133105134697`*^9, 3.9266134409571953`*^9}, {3.926613484225718*^9, 
  3.9266135208830414`*^9}, {3.926616810485431*^9, 
  3.926616811061192*^9}},ExpressionUUID->"aa3deeb4-ae87-40d2-86b7-\
8d1c0bb48cd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"heatStockDated", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"DateObject", "[", 
           RowBox[{"{", 
            RowBox[{"2024", ",", "2", ",", "4", ",", "23", ",", "59"}], "}"}],
            "]"}], "<=", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", "10000"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "#"}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", "&"}], ",", 
      RowBox[{"heatStockDated", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926613410420236*^9, 3.926613426177553*^9}, {
  3.926613463346624*^9, 3.9266134736182923`*^9}, {3.926613509282502*^9, 
  3.926613524018397*^9}, {3.9266168092526135`*^9, 
  3.926616811860566*^9}},ExpressionUUID->"719aee6e-cc9e-4f5c-a6d4-\
3345960462d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockDated.mx\>\""}], ",", "heatStock"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.926616070947394*^9, 3.9266160870272923`*^9}, {
  3.9266167909957237`*^9, 3.9266167924674215`*^9}},
 CellLabel->
  "In[6459]:=",ExpressionUUID->"c1a565ee-0644-42c1-8b5c-090029f6d18a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockSeason", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"heatStockDated", "[", 
           RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"heatStockDated", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"heatStockDated", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926615960739093*^9, 3.926615995122423*^9}, {
  3.9266168238924475`*^9, 
  3.926616845538967*^9}},ExpressionUUID->"278042f6-f663-4163-a89d-\
c34ef6ba649f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "heatStockSeason", "]"}]], "Input",
 CellChangeTimes->{{3.926615912183075*^9, 3.9266159362923145`*^9}, {
   3.926616000435626*^9, 3.9266160021481776`*^9}, 3.926616848005881*^9},
 CellLabel->"In[73]:=",ExpressionUUID->"494308d7-6502-4ef3-95db-2eac161294e9"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
hi63JR58h2lz+ycTwO+Y9g49+kkiePjO+vkdnqWz7FdyeI3Osl8p4X06y36l
hs83PT1N6eG/0sL3m/beN/jzy4zwR6ZzNN3e9UY2eLQuof3r24dHx3LDc5k+
PTdn0+0F4PVNLy7Q6eLqovBBpjteXF1lVin4MtNFet4PHlkOfsR01Ngpi/Ss
DH9p+vKmRlta1IDH6RraoUdnqlEXXtB032dnlxRvBPcyXX5s9ETZmsFd03Ez
VJyctBV8jenQs0WI0h5+yrR/i9Ab7Ax/b9o1N9QDnrib+XheGHoDfeHFTac0
FzwI3sr06yuhFzgcPs70zj6hFzQa7mvaJ17oBfjAL5huvCX0hFPgX01nqRF6
gpnwlN3N4+dl6ILz4GVNHzELLIZ3MD07U+gBK+BTTLc1A2vhAabztA79D5vg
17vL48Ef/ttuJ0MP2yvb7XQnn0W+i/wuecSetme126lF3pd8IfkB8ifk0XvZ
nsdutwH5EPLl5EfJX5HH6217IbudZuQjydeRnyb/SJ6kj+0l7XZbk/uQbya/
RP6NPHVf28vZ7XQin0oeRH6D/C+5Rz/bq9rt9iCfQ76b/D55pP62Z7fbrU3e
n3wR+UHyp+QxB9ie126nEflQ8pXkx8jfkMcfaHsRu93m5KPJ15OfJf9EnmyQ
7aXsdtqSTyDfQn6Z/Ad5msG2V7Db7Uw+nXwb+S1yZ4jtmex2q5H3Ip9Lvpf8
AXmUobbnsNupSz6AfAn5IfLn5LGG2Z7fbrcx+XDyVaa94wd2WbwdfsJ0yn6H
3lXZB39r+vK1C32+HoYnHJ7B/D2eB19Xn4QXNV15yfshdS/AWw6X9a/Dx2jf
hm/Uvg8/p/0Y/ln7OTz5iAz/nv++gnuaDnv+Dm83QuY/wifp/Ge4v85/g1/V
+V/wn9rOcuPpXOnwpt2K2hHhXbUjw2doR4Xv0I4Ov216oXk+FAMefmSGf8+f
YsEzm8bzo9jwGqbxz9viwnuPlPXiw+ePlPUSwPfpeongj3S9xPCoo2S9pPBc
o2S95PB6pvHj2RTwQaYb4vfp4Ut1Pg38iM6nhb/Q+fTwOKNl3gNeQDsj3Es7
E3yEdhb4Gu1s8JOj5X6zw9+PlvvNCU80Ru43F7z4GLnfPHDvMbJePvi4MbJe
fvimMbJeQfgFXa8Q/IuuVwSecqysVwxeRrs4vIN2CfhkabckPEC9NPyauif8
t3pZePpx0uXhlbUrwrtJu5Xgs9SrwHeqV4XfVa8OjzBe3n814FnHy/u3Jrzm
eJmvDe+r83XgC3S+LvyAzteHP9ZuCI/uI90YnlvbC95Auxl8sHYr+HLt9vD/
tLvAX2n3hMed8K+De8ALSbtot6m0Z5iPlHbCfK0e3x1+Wo9Hux/0+DBPMlGO
D/MSE631nNYT7esbr90bvlm7L/yidn/4N+2B8FSTrHbK2e12JJ9KHkh+g/wP
ucdk26vY7fQgn02+m/weeaQp5uPv+vMdTQbBs5l2opdNlnYovLbpfMUXDX46
HN7PdPuuIbd8R8IXmV64pEbJPmPgwVjv7NqlRcfDn06R802Ex5gqPRmeV3sq
vKH2dPhQ7ZnwFdqz4ce058Jfa8+Dx58mPR9eWHshvLn2Yvgo7aXw9drL4We0
V8I/aa+GJ50uvQZeSnstvI32OvgE7fVwP+2N8MvavvDv2n7wNDOk/eHlZ8jn
1wB45xny+TQIPm2GfD7eDt82Qz7/7oTf1PX2wJ2Zst4+eMaZst4BeLWZst5B
eM+Zst5h+NyZst5R+B7p4GPwB9LuCXjkWfLxfQqeQ9o5A68jHXwWPkDaPQ9f
rMdfhB/S4y/Dn2lfgceaLX0Vnk/7Oryx9k34sNlyf7fgq2bL/d+BH58t+3MP
/na27N8DeII5st4jeNE5st5jeIs5st5T+Jg5st5z+IY5st5L+Dld7zU8RPsN
PPlc6bfw0trv4O2038Mnan+A+2t/hF/R/gr/qf0Lnnae9B94RW1nhfEu2uFN
OzO0I8K3a0eG39aOCg83X97f0eCZpZ0Y8OrqMeG91WPD59nt7CN/SB51ge05
7XbqkQ8kX0p+mPwFeeyFthew221CPoJ8NflJ8nfkiRbZXsxux9u0+f7jSgL4
WPG0CeGbTOPX0dHueZnfFuZfdL1E8BSL/81XRTtlFv+bnxPm7Rf/m78f5pNl
Plti+FaZ74d2rsl8cJj/kvnoSeDpl/ybb4B2Ky35N788zLst+Tf/MsxnynzB
pPCdMu+i3TsyfzLMIyz9N58oGTzL0n/z3min5tJ/8xvDvI/Mfw7zBTLvmRy+
X+Ynop3HMn8lzKMtk/1PAc+9TPYf7dZfJvsf5oNl3kkJX2a38x/5S/K4y20v
aLfTlNwlX0t+ivwDeeIVtpew221FPp7cl/wi+VfyVCttL2u305F8Cnkg+XXy
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
wJfqfBD8sOnXsUpu2I92Xqhvh8d+YrVTwG63CfkI8tXkJ8nfkSd6ansxux1v
7WD4WLudTdpH4Oftdr5oH4WneGa1U8Zutz35ZPKt5Ne0T8N/2e2kf257JdN3
Jw/M//AMvJv6efhMu52d5HfII7ywPYvdTk3yPuQLyPeTPyaP9tL23Ha79ckH
ky8j/4/8JXncV7YXtNtpSu6SryU/Rf6BPPFr20vY7bYiH0/uS36R/Ct5qje2
l7Xb6Ug+hTyQ/Dr5H/IMb22vYrfbnXw2+S7ye+QR39mezW63Fnk/8oXkweRP
yGO8tz2P3U5D8iHkK8iPkr8mj/fB9sJ2u83IR5GvIz9D/pE86UfbS9rttCH3
Ifcjv0T+nTz1J9vL2+12Ip9GHkR+k/wvecYQ26va7fQkn0O+h/w+eeTPtme3
26lD3p98MflB8mfkMb/Yns9utxH5MNOVZ/fPEfMCfKXptMkXHy11CX7c9I9l
B717XYG/MX0x47Mfq67BE3w1X+83xZxz9Qa8iOkxefPljnYb3sJ0sx2NThS/
Cx9tukDJYW2634dvMB378Mrfyx/Cz5p+Wvn4vEuP4SGm9599kzfyM3iyb6E9
v36C00VewEub7nmzSPsur+BtTVf2buEsfQOfaDr909ELz7+DbzH9o8uGAhE+
wq+Yvvjh7NmCIfAfpn0HhHTs+AWe9ru5n9/JIiz6Bq9gutno0kvO/IB3MV0o
WrvCzm/4dNOxp028kO8vfLvppwn9u7QLt8r4LdPBC69Emh/BtBPuh7mftD+X
nYwEz2S659q0xX5HgVc3XTVHxcu5o8N7mU4f0KV765jweaZ/FJ4RdU5s+F7T
l/dtX3ksLvyhad9yt0v8iA+P8tPcz4lw13Ikguc03aJW5l4tk8Drmi50pXqM
mcngA03Hbtp7zZEU8CWmn9+fV/prKvhh08Ht993Imhb+3PT81w/7NEsPj/0r
tHv3jhp7mgc8v+mq33KuP5gJ3sR0+uH1yoZkgQ83/SvCoNuZssNXm748YWn/
JjnhJ0z7xTkSd3Ju+DvT4+a82Lg/Lzzhb3M/KeJU+JAfXsx0kRUF7mUoBG9p
Om5mr0ENi8DHmn7uOyLBhGLwjaYP5VuzeU8J+HnTC3eerPS2FPyz6d6l3j9I
Wwae4k9oVz+SaGi9cnBP0x5ViyceVwHe3vSvc97+OyvBJ5m+2mBc1VdV4FtN
+93a9DhVdfhV0+NaXRheuyb8l2nvZ1+Sjq4NT/fX3E+3lIHb6sIrmY77qUyN
5/XhXU2/HNjhWfJG8JmmD/2ZPLJGE/gO0wvHBKRwm8LvmO4b/fq2gObw8I5H
6P1M/13rSUt4FtMeiTO8TNIaXsP0n0WVx1RtC+9j+mq67qmHtYfPN+23btbO
LR3h+0375NxV92Fn+CPT3oF3XyfsBo8WLrSLFI04vlIPeC7T8Q9kTTe4F7y+
6Zfla+3x7QMfZPrQyb4N7vWDLzO9uPbCd/EGwo+Y7nv1wITyg+EvTVdv9iTD
gKHwOOFDO9PD6Ps3DIcXNP2nQ57Gt124l+mrbxp8jD0a7pr27zNkcpmx8DWm
fb4vz9R3PPyUae8RR4PXToC/N10s0muvG5PgiSOY+5kU73OMqfDipl/HLTyt
1HR4K9NH5jbL2msmfJzpxSlHHV41G+5ruv/Kdc2vzoVfMF0zy5mvURfAv5rO
5PdxRvFF8JQRQ9spkDRH9yXwsqav7yp5dPkyeAfT/qXbeF9aAZ9ieuJ/Pj8i
rYYHmG5dzW92kbXw66aLXbiUq8t6+G/TCRt9P75kIzxDJHM/t1O3Oe8Lr2z6
SOvyv8NvgXc3vfR5p3kFt8Jnme7ffVrejoHwXaZrhgSdWrgNftd0lsE3253Z
AY8Y2ePf16vd8Kx2O7XI+5IvJD9gumbGSB6/9sKfqAfDo0ex2sljt9uAfAj5
ctNZqnlfGh7mR9WPwl/Z7cSLanshu51m5CPJ15GfJv9IniSa7SXtdluT+5Bv
Jr9E/o08dfTQjr57U8IEJ+HlTEe802BitPPwTtFl/ip8qt1OEPkN8r/kHjFC
O2rfNktLXYdXjSF+F97DbmcO+W7y++SRYtqe3W63Nnl/8kXkB8mfmr7e8P78
fk/hMWOJv4fntdtpRD6UfCX5MdP+n7sF1/4Af6MeAo8f22qniOn4V4r9TB/m
zU2fTdO1xMIwH23ap/OSYfE+w9ebLr/t7H4ftHNW1/sC/2S3kyyO7aXsdtqS
TyDfQn6Z/Ad5mri2V7Db7Uw+nXwb+S3TaafGrvHxN9yJF9pxK43P9D3SauOZ
4sl8bNNuNbudXuRzyfeavl/5QtwRYf7AdM/VHX1Kx4VHiS/z8eE5tBPD62on
hw+QdlPAl6ingh9STw1/rp4WHivBvw5GO/ml3XTwxtKe6eHDpZ0M8FV6PNo5
ocd7wN/q8RnhCRPK8ZngRbWzwltq54CP0c4J36idC35OOw/8s3Y+ePJE0gXg
ntqF4O20i8AnaReD+2uXgF/VLgX/qe0JT5dYuiy8onZ5eFftivAZ2pXhO7Sr
wm9r14CHTyJdG55Zuy68hnZ9eG/thvD52o3h+7S94I+0m8GjJpVuDs+l3QJe
T9sbPki7NXyptNsWfkS9A/yFeid4nGTiXeEFtLvBvbS7w0fY7awhP0n+Xrs/
PFFy6YHw4tqD4d7aQ+HjtIfDN2m78Avao+BftMfAU6aQHgcvo+0D76A9ET7Z
NF6PnwwPMI3X46fCr+n8DPhvnZ8FT59S5ufAK6eU+fnwbtoL4bO0F8N3ai+F
39VeDo+QSnolPKv2anhN7bXwvtrr4Qu0N8IPaPvCH2v7waOnlvaH59YOgDfQ
DoIP1t4OX669E/6f9m74K+298LhppPfDC2kHw5tqH4KP1D4CX6t9FH5a+zj8
g/ZJeJK00qfhJbTPwltrn4eP174I36x9GX5R+yr8m/Z1eKp00jfh5bRvwztq
34VP1b4PD9R+CL+h/Rj+R/sp3CO99HN4Fe2X8B7ar+Gztd/Cd2u/h9/T/giP
lEE6BJ5N+wu8tvY3eD/tH/BF2r/gwdp/4E+1nTXGY3hIhzPt5NUOD2+oHRE+
VDsyfIV2VPgx7ejw1x7y8RsDHj+jfHzHghfOKPNx4M0zynxc+Cidjw9fr/MJ
4Wfsdj6RJ81keym73TbkE8j9yC+TfydPk9n28nY7ncmnkW8jv0nuZLE9o91O
NfKe5HPJ95A/II+c1fYcdrt1yAeQLyY/RP6MPFY22/PZ7TQmH0a+ivw4+Vvy
BNltL2q324J8DPkG8nPkIeTJc9he2m6nHflEcn/yK+Q/ydPmtL2i3W4X8hnk
28lvk4fLZXtmu93q5L3J55HvI39IHjW37TntduqRDyRfSn6Y/AV57Dy2F7Db
bUI+gnw1+Unyd+SJ8tpezG7Hm3ws+Sby8+RfyFPks72M3W578snkW8mvkf8i
T5/f9kp2O93IZ5LvJL9DHqGA7VnsdmqS9yFfQL6f/DF5tIK257bbrU8+mHwZ
+X/kL8njFrK9oN1OU3KXfC35KfIP5IkL217CbrcV+XhyX/KL5F/JUxWxvazd
TkfyKeSB5NfJ/5BnKGp7Fbvd7uSzyXeR3yOPWMz2bHa7tcj7kS8kDyZ/Qh6j
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
z8MLal+AN9W+CHe1L8HXal+GnzKN54dX4B9M4/njVXjiUTJ/HV5ilMzfgLca
JfM34eN1/jbcV/sO/KL2XfhX7XvwVKOl78PLaj+Ad9R+CJ8i7T6CB6o/gV9X
fwr/o/4cnmGM+At4FWnnFby7+mv4bPW38F2m8frdO/g903i97j084liPf6/3
fYBnM43X9z7Ca42V9ULg/cbKep/hC8fKel/gwbreV/gTXe8bPMY4We8HPI/p
0+8690rwE97Q9Px7Vx5m+gUfYrrtOc/6xX7DV5jOc2DTfzX+wI+a/uWXuHCr
v/DXpo8vHbm+r7POeLzxoT136utkPuFMO4VNtx7eaNKi8PBmpnN1P/TLLwJ8
lOkfzXN2PxQRvs700RqhVxQJfsb0zJIR6ryIDP9oukXo+K8o8KQ+oZ0t1Y38
caPBS5r+ErP8mgzR4W1MHzIXHAPuY9pcXtWYcD/TXrfHfG8eC37JdCazQbHh
302H7AmdiANPPcF8/g/djvlx4eVNT14UukPx4J1MN54U+h/iw6eZ9hgSeeXF
BPAg0+9Dt/9pQvhN03vNBSSC/zXtU7XSl5hJ4Bknhnb9YgEd0iaFVzWd1txw
MnhP0+Z2KiWHzzG9M9qnPV4p4HsmysdnSvj9if8+PrOlgkeeJI+P1PDs0m5a
eB31DPD+6hnhi9WzwA+qZ4U/U88OjzlZPAc8n7STC95IOzd8mHYe+ErtfPDj
2gXgb3T9gvAEU8QLw4tIu0XgLdSLwUerF4dvUC8JP6teCh6i7glPNlW8DLy0
tFMO3la9PHyiekX4FmnPSvArOl8Z/kM6uAo87TQ5vhq8grRndXgXabcGfLp0
cE34dj2+NvyWHl8HHm66HF8Xnkk6uB68urTTAN5L2rMhfJ4e3wi+V49vDH+o
x3vBo8yQbgrPqd0MXle7OXygdgv4Eu2W8MPa3vDn2q3gsWdKt4bn124Db6Ld
Fj5cux18tXZ7+Am7nXfkCWfZXsxutyX5WPKN5OfJP5OnmG27p91Oe/JJ5FvJ
r5L/Ik83x/ZKdrtdyWeS7yC/Qx5+ru1Z7HZrkPchn0++n/wRebR5tuey26lP
Poh8GfkR8pfkcebbXtBu14vcJV9Dfor8PXniBbYXt9tpRT6O3Jf8AvlX8pQL
bS9rt9uBfAp5APl18t/kGRbZXtlupzv5LPJd5HfJIy62PavdTi3yvuQLyQ+Q
PyGPvsT2PHa7DciHkC8nP0r+ijzeUtsL2e00Ix9Jvo78NPlH8iTLbC9pt9ua
3Id8M/kl8m/kqZfbXs5upxP5VPIg8hvkf8k9Vthe1W63B/kc8t3k98kjrbQ9
u91ubfL+5IvID5I/JY+5yva8djuNyIeSryQ/Rv6GPP5q24vY7TYnH02+nvws
+SfT81+e3PW5EzzZGo9//16+G7yUaZ9V5Wb96gVvu0aO7w+fIO0OgG9RHwS/
rD4Y/kN9KDzNWo9/r1cMg1cwjdcjhsM7m8brGy58umm8fjESvs00Xg8ZDb9l
Gq93jIE76+R84+CZ1sn5xsOrrZPz+cB7rZPzTYTPXSfnmwTfu07ONwX+YJ2c
byo8yno533R4Du0Z8LraM+EDtGfBl2jPhh/Sngd/rr0QHmuD9BJ4fu3l8Mam
8XwZ7Qw3jefXK+CrTOP5M9o5YRrPt1fC3+p6q+AJN8p6aLfoRllvNbzlRlkP
7Y7ZKOutgW/cKOuthZ8zjedn6+CfTeP523p48k3y+NkA99z0b37jRni7Tf/m
r2yCT5J5ZzPcX+az+cGvynyDLfCfur4/PJ2vrL8VXtFX1g+Ad/WV9YPgM8Qb
bIPv0OO3w2/r/E54+M0yvwueebPM74bX2Czze+G9Tb83b/vg800/fBD6dgC+
z/RF83YQ/sj0kcPmDR7VL7SDzNt/8Fym164JfTsGr2d6rnk7AR9k2md86Nsp
+FLTA83bGfgR0507hb6dg78w7WXeLsDjbAnt6tVC3y7BC5guYd6uwL1M58oZ
+nYNPsJ0avN2A77GdNw4oW+34Ce3yH7cgb/fIvtxF57IX/bjPry4v+zHQ7i3
v+zHY/g4f9mPp/BN/rIfz+EX/GU/XsK/+Mt+vIan3Cr78RZeZqvsx3t4h62y
Hx/hk7fKfoTAA7bKfnyBX9sq+/EN/nur7McPePoA2Y9f8MoBsh9/4N0CZD/+
wmcFyH6EW298Z4DsRwTTzt0A2Y9I8AiBsh9R4FkDZT+iwWsGyn7EgPcNlP2I
BV8QKPsRB34gUPYjHvxxoOxHAnj0INmPRPDcQbIfSeANgmQ/ksEHB8l+pIAv
D5L9SAX/L0j2Iw38VZDsR1p43G2yH+nhhbbJfnjAm26T/cgEH7lN9iMLfO02
2Y9s8NPbZD9ywD9sk/3IBU+yXfYjD7zEdtmPfPDW22U/CsDHb5f9KATfvF32
owj84nbZj2Lwb9tlP0rAU+2Q/SgFL7dD9sMT3tFuZyp5IPkN8j/kHjttr2K3
04N8Nvlu8nvkkXbZns1upzZ5P/JF5MHkT8lj7LY9r91uQ/Kh5CvIj5G/Jo+/
x/bCdjvNyUeRryc/Q/6JPOle20vZ7bYhn0DuR36Z/Dt5mn22l7fb6Uw+jXwb
+U1yZ7/tGe12qpH3JJ9Lvof8AXnkA7bnsNutQz6AfDH5IfJn5LGCbc9nt9OY
fBj5KvLj5G/JExy0vajdbgvyMeQbyM+Rh5AnP2R7abudduQTyf3Jr5D/JE97
2PaKdrtdyGeQbye/TR7uiO2Z7Xark/cmn0e+j/whedT/bM9pt1OPfCD5UvLD
5C/IYx+1vYDdbhPyEeSryU+SvyNPdMz2YnY73uRjyTeRnyf/Qp7iuO1l7Hbb
k08m30p+jfwXefoTtley2+lGPpN8J/kd8ggnbc9it1OTvA/5AvL95I/Jo52y
Pbfdbn3yweTLyP8jf0ke97TtBe12mpK75GvJT5F/IE98xvYSdrutyMeT+5Jf
JP9Knuqs7WXtdjqSTyEPJL9O/oc8wznbq9jtdiefTb6L/B55xPO2Z7PbrUXe
j3wheTD5E9N7C/xel70MPMaF0B515HpDr7LwPKar1g+KNKEcvKHpuI+nBe0o
Dx9i+mqfLm2eVoCvML04QqX4iSrBj5puPSv9wXKV4a9NZ8nwp0fvKvB4F0P7
bcCN1CuqwgubDiq77cy5avBmpodenD70T3X4KNNlW3fNnrMmfJ3pqB8r3Wxa
C37G9NmRGSZMrA3/aHp2vL+Fd9WBJ70U2l4rbj59Vhde0nTavNvnJK4Pb2P6
afCM8hUawH1M+9Xu9qlPQ7if6b73K69c2Qh+yXSxnh51LjSGf78k++sFT335
X7vN4eWlnVbwTupt4dPUO8KD1LvAb6r3gP9V7w3PeEW8P7yq9gB4T+2B8Dna
g+B7tAfD75vG6yvD4JGvevx7/WUkPPtVmR8Lr3NV5n3g/XV+Mnyxzk+HH5R2
0c4z9RnwmNfE0U4+aWcmvJE62hmmPgu+Uh3tHFefDX+jjnYSXBefAy8i7aKd
Fupz4aPV0c4G9Xnws+poJ0R9PjzZDfEF8NLSziJ4W/XF8InqS+Fb1JfBr6iv
gP9QXwlPe1N8NbyC9lp4F+318OnaG+HbtX3ht7T94OFuSfvDM2kHwKtrB8F7
aW+Dz9PeDt9rGq+H7oA/NI3XT3fBo9z2+Pf66B54TtN4PXUfvO5tWe8AfOBt
WS8YvuS2rHcIfljXOwJ/rusdhce+I+sdh+e/I493tNPkjjzeT8CH6/xJ+Gqd
R7sndP4U/J3On4YnvCt9Fl5M+zy8pfYF+Fjti/CN2pfg57Uvwz9LB1+Bp7gn
j5drcE9pzxvw9tLOLfgk6eDb8K16/F34VT3+PvyXHv8Qnu6+9GN4Je2n8K7a
z+EztV/Cd9yX/XwFv3Nf9vMNPPwDmX8Hz/JA5t/DazyQ+Y/wPjofAp+v/QW+
X/sb/JH2D3i0h9K/4Lm0f8Pra/+BD9L+C1+m7WwwfkQ7nGnnpXZ4eJxHst8R
4AWlnUhwL/XIcFc9KnyNdnT4Ke2Y8PfaseGJH0vHhRfXjg9vpZ0QPk47MdxX
Oyn8gnZy+FftlPCUT6RTw8tqp4V3kHbTwaeoZ4AHqHvAr6tngv/WzgLP8FQ6
G7yydg54d+1c8FnaeeC7tPPB70q7heARn4kXh2eVdkvDa6mXh/d99u/xeQXt
LHwmj98K8AN6fEX4E5lvUAke/fm/+WyV4Xmey/pV4A2ey/poZ4jMb6wKXy7z
bjX4UZlvUB3+StevAY/3QtavCS8k7daCN1OvAx+pXhe+Tr0+/LTplMd6pTyG
dj6aLjL1UZGpDeBJXsr1NISXNN3bHNAI3tq0GX+Ednxeyv01hm82fTx0+V5N
4JdMPzYn8IJ/eynX0xSe+pVcD9ot90qupxm80yu5nubwqa/kelrAg17J9aDd
G6/kelrC/76S6/GGe7yW62kFr/parqc1vIfdzhzy3eT3X8v1tYFHeiPnRzvZ
38h8W3jtNzLfHt5f5zvCF+l8F/hBne8Gf6rzPeAx38p8b3jetzLfF97orcz3
hw/V+UHwlTo/BH5M54fB3+i8C4//TuZHwYu8k/kx8ObvZH48fLTOT4Cv1/lJ
8LM6PxX+yW4n2XvbS9nttCWfQL6F/DL5D/I0H2yvYPps2dIZ402DdzY9u+65
mBmnw6ebbty6ZUiRGfBtplP2fner+kz4LdP3R4447D0L7nwM7dUz4mzqOxue
yXTHFctm+syBVzOdY2vuwYvnwnuZfh98oJX/PPhc00Hna1U5Mh++1/TA+/fy
XF8Af2C6xPseSV8vhEf5JPezGJ7DNH5fAO3UNY3fLwjzAabx+whhvsQ0fp8g
zA+Zxu8fhPlz0/h9hTCPFSLnWwLPHyLnQ7uNQ+R8YT48RM4X5qtC5HxhfiJE
zhfmb0PkfGGe8LOcbym8qN1OS/Ix5BvJz5F/Jk/+RXoZ3FN7Obyd9gr4JO2V
cP8vsh9o5+oX2Y8w//lF9iPM032V/Qjzil9lP8K861fZjzCf8VXOtwq+46uc
D+3e/irnC/Pw3+R8YZ75m5wvzGt8k/OFee9vcr4wn/9Nzrcavs9u5xF51O+2
57LbrUc+iHwp+RHyF+RxfthewG7Hi3wE+Rryk+TvyRP9lF4DL669Fu5ttzOO
fBP5BfIvpvH8KcxT/vL49/wqzMuYxvOvMO9gGs/PwnzyL1lvHTzgl6yHdq/p
emH+W9cL8/S/Zb0wr/xb1lsP72a3M4t8J/ld8gh/bM9qt1uTvC/5AvID5I+1
N8Cj/5XeCM9tt9OAfDD5cvL/yF+Rx3UyWl7Ibrcp+UjyteSnyT+QJwlnewm7
ndbk48k3k18k/0aeKrzt5ex2O5JPJQ8kv0H+h9wjgu1V7HZ6kM82nSv+5fo+
/vDd6rvh96TdPfBIEcX3wbNJu/vhtdWD4f3UD8IXqR+GB6sfgT9VPwqPESnj
v++P0E5e0/j+6Ri8YSSZPw4fqvNod4XOn4Af0/mT8Nd2O/Ej217Ybqc5+Sjy
9eRnyD+RJ41ieym73TbkE8j9yC+TfzftuybTds8wTxM1tGPuHr47zhl4edOd
z17df/ccvLPpkw9zHd58ET7NdLav444NvQLfZtonxr1T1a7Db5p+nqbw+eS3
4E600K5cYNrlF3fgGU2vrfzs+s778GqmIzcvfWf8I3hP0+17zXvQ8Cl8rukj
Y989yfgCvse0x8JKL0NewR+YHuW37O3ht/DI0UP74aGvH2d+gOcwXfZara+t
QuB1TC9/te5nnq/wAdFlf37AF2v/gh/S/gN/pu1sNB4rhnR4024+7QjwxtoR
4cO0I8FXaUeGH9eOAn+rHRWeIKZ8fESDF5V2YsBbqMeEj1GPDd+gHQd+Tjsu
PEQ7Hjx5LOn48NLaCeDttBPCJ2ongvtrJ4Zf0U4C/6mdFJ42tnQyeEXt5PAu
2ingM7RTwrdLu6ngt9XTwMPFEU8LzyztpIdX184A763tAZ+nnRG+TzsT/KF2
ZnjUuNJZ4DnjyuefrPB6ceXzUzb4QJ3PAV+q8znhh3U+F/yFzueBx44nnRde
QDsfvIl2AfgI7ULw1dKeheEnpd0i8HfSwUXhieLL8cXhxaQ9S8C9pd2S8LHS
waXgm/R4T/h57TLwL9pl4SkSSJeDl9EuD29vtzOZfCv5NfJf5OkT2l7Jbqcb
+UzyneR3yCMksj2L3U5N8j7kC8j3kz8mj5bY9tx2u/XJB5MvI/+P/CV53CS2
F7TbaUrukq8lP0X+gTxxUttL2O22Ih9P7kt+Ubsi/KtpfL9fCZ4qWcZ/zw+q
wMuaxvf/VeEdTeP5QnX4lGSyXk14YDJZrxb8uq5XB/5H16sLz5Bc1qsPr5Jc
1msI7263M5t8F/k98ogpbM9mt1uLvB/5QvJg8ifkMVLansdupyH5EPIV5EfJ
X5PHS2V7YbvdZuSjyNeRnyH/SJ40te0l7XbakPuQ+5FfIv9OnjqN7eXtdjuR
TyMPIr9J/pc8Y1rbq9rt9CSfQ76H/D555HS2Z7fbqUPen3wx+UHyZ+Qx09ue
z263Efkw8pXkx8nfkCfIYHsRu50W5KPJN5CfJQ8hT+Zhe2m73bbkE8m3kF8h
/0GeNqPtFex2upBPJ99Ofos8XCbbM9ntVCfvRT6PfC/5Q/IomW3Pabdbl3wg
+RLyw+TPyWNnsT2/3U4T8uHkq8lPkL8jT5jV9mJ2uy3Jx5JvJD9P/pk8RTbb
Pe122pNPIt9KfpX8F3m67LZXstvtSj6TfAf5HfLwOWzPYrdbg7wP+Xzy/eSP
yKPltD2X3U598kHky8iPkL8kj5PL9oJ2u17kLvka8lPk78kT57a9uN1OK/Jx
5L7kF8i/kqfMY3tZu90O5FPIA8ivk/8mz5DX9sp2O93JZ5HvIr9LHjGf7Vnt
dmqR9yVfSH6A/Al59Py257HbbUA+hHw5+VHyV+TxCtheyG6nGflI8nXkp8k/
kicpaHtJu93W5D7km8kvkX8jT10otANOZtvkG+blTD+cmN1vpxe8k+n41XJs
PdICPtV02Rg5g863hgeZ7n0q547b7eE3TK+clGv3887wv6YvVsu9L6Q73KNw
aIePmSfY6QOvarrA6TyHYw6A9zDddnLeo0mHwOeYnl093wmPEfDdpo/EzH86
z2j4/cJyP2PgkYqEdvpl/UZnRTvZTR9K+N03xTh4bdPeE4dejeUD719Ejp8I
X2Qar3+gnYOm8frIJPhTnZ8Mj1lU5tFu3qIyPwXeqKjMT4UP1Xm0s1Lnp8GP
6fx0+BudR7vxi8n8DHiRYjI/E97cbmc0+Xrys+SfyJMVt72U3U5b8gnkW8gv
k/8gT1PC9gp2u53Jp5NvI79F7pS0PZPdbjXyXuRzyfeSPyCPUsr2HHY7dckH
kC8hP0T+nDxWadvz2+02Jh9Ovor8BPlb8oSethe122lJPoZ8I/k58s/kycvY
7mm32458Erk/+VXyn+Tpytpe0W6nK/kM8h3kt8nDl7M9s91ODfLe5PPJ95E/
Io9a3vZcdrv1yAeRLyU/Qv6CPE4F2wvY7XiRjyBfQ36S/D15ooq2F7fb9SYf
R76J/AL5F/KUlWwvY7fTgXwyeQD5NfLf5Okr217Zbreb6fQTLi35Phc+y/Qh
/8Kd1i6G7zTtfX1RgXor4Xf1+PXwCFXk680GeNYq8vVmE7xmFZnfDO+r837w
BTrvDz+g8wHwx9pB8OhVpbfDc2vvhDfQ3g0fbNq8nplsL3y5abyeuR/+n2nz
cmb1YPgr03g98xA8brV/67lH4IWq/VtvwVF402r/1gs8Dh9Z7d96p0/C11b7
t97T0/DTsp5zDv5B1kt2AZ6kulzfJXiJ6nJ9V+Ctq8v1XYOPry7XdwO+ubpc
3y34RVkv8A78m6x3+h48VQ25vgfwcjXk+h7DO0q7T+BT1Z/BA9Wfw2+ov4T/
UX8F96gp/gZeRdp9C++h/h4+WzsEvlv7G/yeHo92ItUS/w7PJu2indrqP+D9
pIN/whfp/G94sLTnX/hTPT7cJuMxasvx4U07eaXdiPCG0p6R4UOlnajwFbXl
8R8Nfqy2fHxEh7/W+Zjw+HVkPha8cB2Zjw1vXkfm48JHSbvx4OvVE8DPqCeE
f1JPDE9aV86XBF6qrpwvKbxNXZlPDp+g8yngfjqfEn5Z51PDv2ungaepJ50W
Xl47Hbyzdnr4NG0P+DbtTPCb0sGZ4U59ud+s8IzSntnh1aSdnPCe0sG54HP1
+DzwPXp8PvgDPb4APHID6YLwHNqF4HW0C8MHaBeBL9YuCj+kXQz+TLs4PFZD
6RLwfNol4Y21S8GHaZeGr9L2hB/XLgN/q10WnqCR3H85eFFptzy8hXRwBfgY
aacSfIMeXxl+To+vAg/R46vCkzeW46vDSzeWx1sNeLvG8nirCZ+o87Xh/jpf
B35F5+vCf+p8fXjaJnI9DeAVpZ1G8C7qjeEz1L3g25vI5/Om8NtN5PN3M3g4
L/l83Rye2Us+P7eAV/eS9bzhvb1kvVbweV6yXmv4Pl2vDfyhrtcWHrWprNce
nrOpfH3pAK/XVI7vCB/YVL4+dIIvbSrn7wI/LOu5XeEvZL3T3eCxm8nXtx7w
As3kenvCmzSTr0+94COayfX1ga9uJtfXF35S1lvQD/5O1nvaH56ouVzfQHix
5nJ9g+DezeX6BsPHNpfrGwrf1Fyubxj8vKwXOBz+RdYL/dbPeIoW8vgZCS/T
Qh5fo+HtW8j8WPhknR8H36rzPvBrOj8R/kt7Ejx9S+nJ8Ep2O93IZ5LvJL9D
HsHb9ix2OzXJ+5AvIN9P/pg8Wivbc9vt1icfTL6M/D/yl+RxW9te0G6nKblL
vpb8FPkH8sRtbC9ht9uKfDy5L/lF8q/kqdraXtZupyP5FPJA8uvkf0wfuboj
XLkZ8AztQrv1q1vuirnwKu1kfjG8u3TwEvhsaXcZfJe05wr4PT1+FTxiezl+
NTybtLsWXkvacz28n7SzEb5Q2xcerO0Hf6LtD4/RQToAnkc7CN5Qezt8iHTw
DvgKaXcX/Ki05x74az1+HzxeRzl+P7ywtBsMbybteQg+Sto5Al9nt3OG/CN5
0k62l7TbaUPuQ+5Hfon8O3nqzraXt9vtRD6NPIj8Jvlf8oxdbK9qt9OTfA75
HvL75JG72p7dbqcOeX/yxeQHyZ+Rx+xmez673Ubkw8hXkh8nf0OeoLvtRex2
WpCPJt9AfpY8hDxZD9tL2+22JZ9IvoX8CvkP8rQ9ba9gt9OFfDr5dvJb5OF6
2Z7Jbqc6eS/yeeR7yR+SR+lte0673brkA8mXkB8mf04eu4/t+e12mpAPJ19N
foL8HXnCvrYXs9ttaTrt90/ZJh2DjzVd81iz9CVOwTeaHjznv2RvzsLPm17b
Jle8pRfhn01fzjsvaq2r8BT9ZP2bcE9p9y68vfoj+CT1Z/Ct6q/hV+12fpGn
6297JbvdruQzyXeQ3zHdOnP/1pnDPPwA8bfwLKaXXp+w5Po7eA3TJbYmKL71
A7yPacMTPsHnm+5vFvwM3286YfHQA77CH5kOCD08wXd4tIFm/18fqfn6BzyX
aZNHfsHrm54YuvySP/BBprOYEzi+xpeZNuM1w5t2jwyU+4kIfzlQ7icyPM4g
uZ8o8IKD5H6iwb0Gyf3EgLuD5H5iwdcMkvuJAz81SO4nHvz9ILmf+PDEg+V+
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
TKCc7zr8Y6Cc7yY8aZCc7za8pPYdeBvtu3Afafce3E/9AfyS+kP4d/XH8NTb
5OvZE3j5bfL17Bm80zb5evYcPm2bfD17CQ/aJuu9ht/U9d7A/+p67+AZt8t6
7+FVt8t6H+E9t8t6IfA52l/ge7S/we9r/4BH3iH9C55d+w+8jrbjZ7y/dnjT
zmLtiPCD2pHhz7SjwmPulI4Oz6cdE95IOzZ8mHZc+Ert+PDj2gnhb3bK4ykR
PMEuebwkgRfZJY+/ZPAWu+TxlRw+epc8XlPCN+ySx2Nq+Nldcr608JBdcr7/
ubjnKLmSKADjFdvGxraNiW3btp1UbNt2NjYntm3b2ZibvjP1zrnf/Pft7756
9VrTPemzicXj7HTnSypecKc7X3Lxpjvd+VKIj9rpzpdKfN1Od7404pd3uvOl
E/++0z0e0osn2uUePxnFi+1yj4/M4m12ucdTVvEJu9x62cW37nLr5RC/6a2X
SzzIbrdeHvEUu916+cTL7nbrFRDv5LWf+HSvC4vv9rqo+AOvi4uH2uO6pHh6
r0uLV3btX0a8p2tbTnyua78K4ge94yuJP/OOryweca87vqp4Vtd+1cVruTY1
xft7XUt8ide1xY97XUf8rdd1xaPvc91YPI/XLcUb6DZD4avg57xuK/7J63bi
8fxdtxf387qDeHOvO4qP9rqT+AavO4tf8bqr+E+vu4sn3u+6p3gJr3uLt/W6
r/gkr/uLb/Pait/2epB40AOuh4in8nqYeDmvR4h38XqU+Ayvx4jv9Xqc+EOv
J4iHOeh6kngGr6eIV/V6mngvr2eIz/d6lvgh1/dmi79w7T9XPNKhwF4wXzy7
a7tQvLbrhovFrWu/peJLXSdaLn7StVkp/s71vVXiMQ+7868Rz+t6wVrxRq7t
evFhrhtuFF/j2m+z+HnXibaKf3FttovHP5I88P9Pv0O8sK/l/dAu8RZH3Pn2
iI9189X2iW9082n2i19z8+ag+C9v/UPiSY+69Y+Ilzzq1j8m3v6oW/+E+GQ3
n+aU+A43b86I33Hzl8+KBz/m1j8vnvqYW/+ieIVjbv3L4l3dfJqr4rPcvLku
vs/NX74h/thb/5Z42ONu/TvimY679e+JVzvu1n8g3sfNm0fiC7x+In7E62fi
L71+IR7lhOtX4jm8fiNe1+t34gO9/iC+3OuP4qdOuN+Xn8Q/nHC/L7+Ixzrp
fl9+E89/0v2+/C7e+KT7fflTfMRJ9/vyt/i/J935zDqfXzzpzhfE1/brSXe+
YOIJTrnzhRAvcsqdL6R4q1PufKHFx51y5wsrvvmUO1948eu+lu+zRBD/42v5
vkok8WSnkwd+HyWyeGlfy/dNoop38LV8Pyaa+FRfy/dfYojv9LV8vyWm+D1f
y/dXYouHOJM88Ps2ccTT+lq+TxNPvKKv5fsy8cW7+1q+D5NAfPYZdz2JxPef
cdeTWPzJGXc9ScXDn3XXk0w881l3PSnEa5x115NSvO9Zdz2pxRedddeTRvzo
WXc96cRfn3XXk1486jl3PRnFc51z15NJvN45dz1ZxAefc9eTTXyFr+X9S3bx
M76W9zc5xP/ztbz/ySke53zywPdHucQLnHfr5RFvet6tl1d85Hm3Xj7xdefd
evnFL3nrFRD/7q3nJ57wgns9LSRezPXfT74+b+3av4j4BNemmPgW7/ji4je9
40uIm4vu+JLiKVyb0uJlXPuVEe/k2pYVn+YdX058t3d8BfH73vEVxUNdcsdX
Ek/n2r+yeGXXpqp4D9d+1cTnesdXFz/gHV9D/Jl3fC3xCJfd8bXFs7q2dcRr
uvavK97ftakvvtg7voH4ce/4huJvvOMbiUe/4o5vIp7btV9T8QaubTPxIa79
m4uv8o5vKX72inv8tBL/dMU9XlqLx73qHm9txf2uusdXO/FmV916HcRHX3Xr
dRRff9Wt10n8irdeF/Ef3npdxRNfc+t1Fy9+za3XQ7ztNbdeT/GJ19x6vcW3
XXPr9RG/5a3XTzzodbdef/GU1916A8TLXXfrDRTvfN2tN0h8xnW33hDxPb7e
+WzR6AxDxR/6uuv5YrHqDRMPfeNvZ/ANDBfP4Gvf+M4R4lV8Lf//lpHivXxd
37fAaPF5vo5d7+9/GCN+yNcX/i7fdaz4c1+P8Z1gnHikm3+7+F8+P1482023
34nitW+6/U4SH3DT7Xey+NKbbr9TxE/cdPudKv7uptvvNPEYt9x+Z4jnveX2
O1O84S2331niw265/c4WX33L7XeO+Plbbr/zxD/72vd+45O0iX87ecD7jRfz
xQvdDpy/t0C8xe3A+csLxce4+ROLxDe6ef/F4lfd/JYl4r/c/Kql4knuBM4v
WCZe8k7g/NTl4u3uBM6PWiE+2c3bleLb3Xy3VeJ33Hzr1eLB7gbON1wjnvpu
4Hy1f8XL3w2cL71WvKub91snPtPNZ18vvs/Np9kg/sjNJ9ooHvZe4HyMTeIZ
7wXOh90sXu2eu/23iPd285+kzQI3/2Kr+GE3f2+b+Es3f3m7eOT77vbfIZ7j
vrv9d4rXue9u/13iA938qt3iy9z8gj3ip9z81L3i7938qH3isR64299fPN8D
d/vvF2/8wN3+B8SHu/mGB8X/dfPVDolfcPOlD4t/dfN+R8T/eehu/6PiRR66
2/+YeMuH7vY/Lj7Ozcc4Ib7JzYc9KX7dzZtT4r91m2SPtJfSbTrAp8B3wu/C
QzzWnka3qej1GfFuru058dmeXxT39/yy+BPPr4mHe+L8hnhm1+a2eHXP74r3
9fyB+ELPH4of9fyx+CvPn4hHfer8mXhO1/a5eD3PX4oP8vyV+ArP34if9vyt
+H+evxeP/cz5B/ECrs1H8Sa6zUj4Wvgl+Dd4wufai+o2reHj4VvgN+Dmhfbk
uk0ZeEf4NPgu+H14yJfa0+m2leA94HPgB+BP4RFeac+i29SE94Mvhh+Dv4FH
e609t25bHz4EvhJ+Fv4RHveN9oK6TTP4KPh6+GX4D3iit9qL67Zt4BPhW+G3
4EHeaU+p25aFd4ZPh++BP4CHfq89vW5TBd4TPg9+EP4cHvGD9my6bS34APgS
+An4W3iM/7Tn0W0awofCV8PPwT/D433UXki3bQ4fA98Avwr/CU/ySXsJ3aYd
fBJ8O/w2PNhn7al0m/LwLvCZ8L3wR/AwX7Rn1G2rwnvD58MPw1/AI3/Vnl23
qQO38GXwk/D38JjftOfTbRvBh8PXwC/Av/i6ea+oM4d9Ev/n+98e9vrvf/ki
XtjXyxrtqjXvq3hLXx+5HClPmu/iY339pFTTuFt/iG/ydci9278X+iV+zdfJ
skS4efq3+G9fJ7m4/nY6s97nSX/8bR9/kDalfF24RIi924OIt/d15YEZ1/YP
Kj7F143/bqdoMPEdvu70afC4sMHF7/raN35O2gb/+bcntrrWfloI8TS+Xrg4
aIO6IcUr+HrD7XQVkoQS7+br/bFqFHwmbWf5+lylvyuGFvf39b3RqxN2DSP+
2NfvDv+9QcKKh/vlbt9w4plcL5A21V37hRfv4/qetFno2kYQP+I6UUTxV679
pW2U34HdMJJ4Ttcmsnhd1wukzSDXflHEl7u+J21Ou7ZRxT+4ThRNPPYfd35p
m991w+jiTVybGOIjXC+QNmtd+8UUv+j6nrT55trGEk9gUgSeP7Z4Udf+0raV
64ZxxMe7NnHFN7teIG1uuPaLJ/7H9T1pkzxIYNv44qVdJ/pHvKNrf2k71XXD
BOK7XJuE4vd87fs4NVXahAz6t1f7Ph8lEk8b1K0nbSoFDZyvlli8u5t/IW3m
uHmbRHy/m4+RVPypm18lbcMHc9ebTDxLsMD5y9K2RrDA+dbJxfu5eZNCfJFr
f2lzzLVNKf7aWz+VeLTg7vjU4rl8LX8/kjb1fS3/PJ5GfLCvT/v+/iRtVvpa
/j6VVvyMt1468Y/eetI2Tgi3XnrxgiHcetK2aQi3XgbxUSHcehnF17m20uay
55nEv3subRKFdJ5ZvFhIdz5p0yak218W8Qkh3fmzim8N6fabTfymt1528SCh
3HrSNkUot14O8bKh3Ho5xTuFcuvlEp8eyq2XW3y3ayttHnieRzxUaOfSJr1r
k1e8suv10qan64b5xOe6jpxf/KBrf2n7zHXHAuIRw7jnU0HxrK7PSZtarq2f
eH/XmQqJL3F9T9oedz2hsPhb135FxKOHDex30iaP6wVFxRu4rlhMfKhrU1x8
ldclxM95XVL8k+t70iZeOHf9pcT9XC8oLd7ctS0jPtp1w7LiG1z7lRO/4jpR
efGfrk0F8cThXVcUL+F1JfG2XlcWn+R1FfFtrv2lzW3Xtqp40AhuP9XEU7k2
1cXLeV1DvIvXNcVneF1LfK/XtcUfel1HPExE13XFM7j2lzZVXdt64r1c+9UX
n+8d30D8kHe8tHnhHd9QPFIkd3wj8eyuTWPx2q79pf8e4I5vIr7UO76p+Env
+Gbi77zjpU3MyO745uJ5Xfu1EG/k2rQUH+Z1K/E1XrcWP+96vbT54rphG/H4
Udzzs614Ydf+0raF647txMe6TtRefKPrc9LmmmvbQfyX60wdxZNGdc8HaVvS
9YRO4u1d+3UWn+z6nbTZ4XpBF/E7rit2FQ8ezV1/N/HUuk0FeFf4LPg++GN4
2OjaM+m21eB94AvgR+Av4VFiaM+h29SFD4Qvh5+Cf4DHiqk9v27bGD4C/i/8
IvwrPEEs7UV0m1bwcfDN8OvwP/BksbWX1m07wKfCd8LvwUPE0Z5Wt60I7w6f
Dd8PfwIPH1d7Zt2mBrwvfBH8KPw1PGo87bl023rwwfAV8DPw/+Bx4msvoNs0
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
hXd8HPHT3vFxxf/zjo8nHvuTO17aFHBt44s3ce33j/hI1yaB+Frd5hL8Gzzh
Z+1FdZvW8PHwLfAbcPNFe3Ldpgy8I3wafBf8PjzkV+3pdNtK8B7wOfAD8Kfw
CN+0Z9FtasL7wRfDj8HfwKN9155bt60PHwJfCT8L/wiP+0N7Qd2mGXwUfD38
MvwHPNFP7cV12zbwifCt8FvwIL+0p9Rty8I7w6fD98AfwEP/1p5et6kC7wmf
Bz8Ifw6P+Ed7Nt22FnwAfAn8BPwtPIZJpTyPbtMQPhS+Gn4O/hkeL4j2Qrpt
c/gY+Ab4VfhPeJKg2kvoNu3gk+Db4bfhwYJpT6XblId3gc+E74U/gocJrj2j
blsV3hs+H34Y/gIeOYT27L6W9xcBXsfX8v4jwK2v5f1JgC/ztbx/SSh+0q1n
pc17t96pAI8ZMnC9OInE84UMXK+5tG0UMnC9TQE+PKTbX2LxNV4nEb/gdVLx
L66ttPknlPNk4oVd+0ublq5tcvGxrv1SiG/yjk8pfs3X8v5e2vz2tbz/D/Ck
od16AV4qdOD8qgBvHzpw/nKAT3HzJpX4Dtf+qcXveuulFQ8exu0vvXga1yaj
eAVf+063Stp083V13wkzic/y5jOL+3vz0vaxN59FPFxYN59VPJNrK22qe55N
vI/X2cUXep1D/IjXOcVfeZ1LPEo4tx9pkzOc209u8brh3Hwe8UHevLRd7s3n
FT/tzecT/+DaX9rEDu+uJ794ftd+BcSbuDYFxUe49pc2a73j/cQvescXEv/m
HV9YPEEE10XEi3pdVLyV18XEx3tdXHyza39pc8O1LSH+x7VfSfHkEd3xpcRL
6zYdI7rbL8Cnel5afFdEd3tK23vefICHjOTmy4injeTmpU2lSG4+wLt782XF
53jz0na/Nx/gT735cuLhI6s2WXTbGvB+8EXwY/DX8GhRtOfSberDB8NXws/A
P8LjRNVeULdtCh8FXwe/DP8OTxRNezHdpg18Anwr/CY8SHTtKXSbsvBO8Onw
3fAH8FAxtKfXbSvDe8Lnwg/Cn8EjxtSeVbepBe8PXwI/Dn8Ljx5Lex7dtgF8
KHwV/Bz8EzxebO1+uk1z+Gj4BvgV+E944jjaS+i2beGT4Nvgt+FB42pPpduW
g3eBz4DvhT+Eh4mnPYNuUxXeCz4ffgj+Ah4pvvbsum1tuIUvhZ+Ev4PH/Ed7
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
1679z4hH7RLYic6J53Jtz4vXc33vgvhg136XxFe4XnBZ/Ixrc1X8P1/L5yVp
E6drqsDPS9fEC3R189fFm3Z189J2pDd/Q3ydN39T/JLXt8S/e31bPGG3VAGf
L19Lm2K+ls+fd8Rb+9r3+fT4XfEJvpbPr/fEt/ja9/l2yX3xm76Wz78PxE13
d3s9FE/RPfB87R6Jl+keeL46j8U7dQ88X6kn4tO6B54vx1Px3d0Dz5fsmfj9
7oHni/pcPFQPd30vxNP5etzDXOMeSpvKvo5/tFP8oy/Fe/Rwt+cr8bm+zuU7
4LX4AV8f+zve6Y34sx7u9n4rHqHn337kO+CdeFZfd/ad4L14zZ5uPx/E+/d0
+5G2i3u6/fwnfryn289H8Tc93X4+iUfv5fbzWTx3L7efL+INern9fBUf0svt
55v4ql5uP9/Fz7rjL0ubT73c+X+Ix+3t7r+f4n693fl+iTfrHTif5rf4aDdv
/oivd/OXpc0VN7/KbPT5D2/9IL42ifu49YOKF+/j1g8m3raPWz+4+EQ3f1na
bHPzq0KI33LzNqR40L5u/VDiKfu69UOLl+vr1g8j3tnNX5Y2M9z8qrDie9y8
DSf+0Fs/vHjofm79COIZ+rn1I4pXcW2lTS/PI4nPc31P2hxy7R9Z/LnrBVHE
I/V360UVz+a6YTTx2q79oosPcJ0ohvhS1yam+AmvY4m/8zq2eIwBruOI5/U6
rnhD11baDPM8nvhqX8vfS6TNeV/L31fii3/2tfz95B/x+DZV4N9bEogXsm69
hOItrFtP2o6xbr1E4hutWy+x+FVvvSTiv7z1koonGej2L21KujbJxNt5nVx8
stcpxLd7nVL8jtepxIMNcp1aPLXXacTLD3Kvv9Km6yD3+ppWfOYg9/qZTnzf
IPf6mF780SD3+i5twg52r98ZxDMOdteXUbzaYPf6m0m892D3+ppZfMFg9/tB
2h4e7F7/s4i/HOxe37OKRx7iXr+ziecY4q4vu3gd1wukzUDXfjnEl7m+J21O
ubY5xd+7TpRLPNZQ9/yQtvlcN8wt3ti1ySM+3Ou84v96nU/8gtf5xb96XUD8
n2GuC4oX8dpPvKVrK23GeV5IfJNrf2lz3ZsvLP7btV8R8WTD3fFFxUt5XUy8
g9fFxad4XUJ8p9clxe96XUo8xAjXpcXTeF1GvKLXZcW7eV1OfLbX5cX9va4g
/sTriuLhRrquJJ7Z68ri1b2uIt7X66riC0e611tpc3Ske30O8FfefDXxqKPc
vLTNOcrNB3i9UW6+uvigUe7xLG1WjHKP/wA/Pco9X2qI/zfKPb+kbezR7vlY
U7zAaPf8lbZNRrvz1RIfOdqdT9quHe3OF+CXRrvz1Rb/NtqdT9okHOPOV0e8
6Bh3PmnTeow7X13x8brNFvgNuBmrPbluUwbeET4Nvgt+Hx5ynPZ0um0leA/4
HPgB+FN4hPHas+g2NeH94Ivhx+Bv4NEmaM+t29aHD4GvhJ+Ff4THnai9oG7T
DD4Kvh5+Gf4DnmiS9uK6bRv4RPhW+C14kMnaU+q2ZeGd4dPhe+AP4KGnaE+v
21SB94TPgx+EP4dHnKo9m25bCz4AvgR+Av4WHmOa9jy6TUP4UPhq+Dn4Z3i8
6doL6bbN4WPgG+BX4T/hSWZoL6HbtINPgm+H34YHm6k9lW5THt4FPhO+F/4I
HmaW9oy6bVV4b/h8+GH4C3jk2dqz6zZ14Ba+DH4S/h4ec472fLptI/hw+Br4
BfgX+D9ztRfWbVrCx8I3wa/Bf8OTztNeSrdtD58C3wG/Cw8+X3sa3bYCvBt8
Ftwf/hgeboH2TLpNdXgf+EL4EfgreJSF2nPqtnXhg+DL4afhH+CxF2nPr9s0
gY+Ar4VfhH+DJ1isvahu2wo+Hr4ZfgP+B558ifbSuk1H+FT4Lvg9eMil2tPq
NpXg3eFz4PvhT+Hhl2nPotvWgPeDL4Ifg7+GR1uuPZduUx8+GL4Sfgb+ER5n
hfaCum1T+Cj4Ovhl+Hd4opXai+k2beAT4FvhN+FBVmlPoduUhXeCT4fvhj+A
h1qtPb1uWxneEz4XfhD+DB5xjfasuk0teH/4Evhx+Ft49H+159FtG8CHwlfB
z8E/weOt1e6n2zSHj4ZvgF+B/4QnXqe9hG7bFj4Jvg1+Gx50vfZUum05eBf4
DPhe+EN4mA3aM+g2VeG94PPhh+Av4JE2as+u29aGW/hS+En4O3jMTdrz6jaN
4MPga+Dn4V/g8TdrL6zbtoCPhW+EX4P/gifdor2kbtMePhm+A34HHnyr9tS6
TQV4V/gs+D74Y3jYbdoz6bbV4H3gC+BH4C/hUbZrz6Hb1IUPhC+Hn4J/gMfa
oT2/btsYPgL+L/wi/Cs8wU7tRXSbVvBx8M3w6/A/8GS7tJfWbTvAp8J3wu/B
Q+zWnla3rQjvDp8N3w9/Ag+/R3tm3aYGvC98Efwo/DU86l7tuXTber7e7N+x
Z/F64oN9HfbQ0FmT64uv8HX9o7N232sgfsbXG0+su5O+kfh/vg595pDp01g8
zr6/Xff89STHmogX8PXGS2+Kxmgm3tTXIa8Fa9G4ufhIX9e+GXvkuhbi63y9
/k761T9bil/ydfAHhU+Xai3+XeYf13g7rY14Qv+/vfZZ2yiP2ooX83XwVwOz
Zm4v3trXNd9Oq9a/g/gEX6/5sLrHyY7iW3wd9LP/zNidxW/6uvq3y7uadRE3
+33zP1/c3thVPMV+d/t1Fy/j+py06eR6QQ/xaa479hTf7dqvl/h915F7i4c6
ENj3pG061+v7iFd2bfuK93BdsZ/4XNeJ+osfcP1O2jxz7T9APMLBwJ5gxbO6
bjhQvKbrTIPE+7s2g8UX+1r+/4jS5riv5d8vh4i/8bXv3yc3DRWPfihV4L9n
DhPPfchdz3DxBocC12s+QnzIocD1yo4UX3UocL2so8TPuvXijBb/5NYzY8Tj
HnY9VtzP63HizbweLz7a6wni672eKH7F60niP3wt//4ibRIfSRX47zOTxYsf
cfNTxNsecfPSdqI3P1V8mzc/TfyWr4v+/TkkbYIe/dsjfD/TxVMedbfPDPFy
vo4a5e/PTPHORwPXvyxtZhx1t/8s8T2+vnP79u16s8Uf+jqJ72eOeOhj7v6V
NhmOuf3PFa/i6zd/f9rPE+91zN0/88Xn+bpnjx49vkibQ77evevvzwLx58fc
/b9QPNLxwOstukg82/HA6w29WLz2cff4krYDjgde78Ql4kuPu9tzqfiJ4+7x
sUz83fHA670tbWOcCLzeRcvF855wj78V4g1PBF5vmpXiw04EXu8babv6hHt8
rxI/fyLwenusFv98IvB6864Rj3/S3b//ihc66W5PadPipNv/WvEx3vw68Y3e
vLS96s2vF//lzW8QT3LKzUubkqfc/Ebxdqfc/Cbxyd68tN3uzW8Wv+PNbxEP
dto9vqRN6tPu+K3i5U+7+3ebeFc3X227+Ew3n2aH+D43b3aKP/LWlzZhz7j1
d4lnPOPW3y1e7Yxbf494bzefZq/4Ajdv9okfdu0vbV566/mLRz7rXq/3i+dw
bQ6I1znr7n9pM/Cse/wcFF921j3+DomfOusev9L2vVvPHhaPdc49f46I5zvn
nn/SpvE59/w9Kj78nHv+HxP/95zb33HxC66ttPnq+Qnxf867/UubIufd/k+K
tzzv9n9KfNx5t39pu+m8W/+0+HW3XtYz4r/dek+kTbILbv9nxUtdcPs/J97h
gtvfefEpF9z9LW12XnD37wXxu978RfEQF928tE1z0c1fEq940c1fFu/meoG0
me3a74q4v+t70uaJa3tVPNwl9/v2mnhm1/7StrrrhtfF+7o2N8QXurbS5qjn
N8VfXXLXI22iXnbXc0s852U3f1u83mU3L20HefN3xFd483fFT3vz0uY/b/6e
eOwrbv6+eIErbl7aNrni5h+Ij/TmH4qvdW2lzSXPH4l/89aTNgmvuvUeixe9
6uafiLe+6ual7Xhv/qn4Fm/+mfgN55el/34Adsc/F09+ze3vhXiZa269l+Id
3XyaV+LT3Lx5Lb7L176vJ4aSNvd97fv6YsQAD3k9cL0YAZ7O1/J9xgCv5Gvf
1yOTBniP6+58AT7H177vS2YO8AO+lu9HBvjT6+7xGuARbgTup0SAZ7kRuJ/y
AV7zhru+AO93I3A/dQN88Y3A/TQJ8GM3AvfTOsDf3AjcT6cAj3YzcD89Azz3
TXd7Bnj9m4H7GR7gQ26mct9PFV95M3A/UwP87M3A/cwJ8I83A/ezOMDj3nL3
X4AXvBW4nw0B3uxW4H62B/ioW+75GODrbwXu52iAX74VuJ8zAf7jlnu8BHii
24H7uRXgxW8H7udhgLe5HbifFwE+8Xbgft4H+Nbbgfv5GuC3brvHzxvxIHdU
m5S6bVl4Z/h0+B74A3jou9rT6zZV4D3h8+AH4c/hEe9pz6bb1oIPgC+Bn4C/
hce4rz2PbtMQPhS+Gn4O/hke74H2Qrptc/gY+Ab4VfhPeJKH2kvoNu3gk+Db
4bfhwR5pT6XblId3gc+E74U/god5rD2jblsV3hs+H34Y/gIe+Yn27LpNHbiF
L4OfhL+Hx3yqPZ9u2wg+HL4GfgH+Bf7PM+2FdZuW8LHwTfBr8N/wpM+1l9Jt
28OnwHfA78KDv9CeRret4OvfcX6m6P1WvJvn78Vnef1B3N/r/8Qfe/1RPNxL
15/EM7m2n8Wre/5VvI/n38QXev5D/IjnP8Vfef5bPMqrVIHvh6VNTl/L++c/
4nV9LW+3pc0gX8v7c7PJ58tfufWC+Nqc9taTth+89YKKx37t1pO2+V+79YKJ
N3nt1gsuPsLrEOJrvQ4pftHrUOLfvA4tnuCNu35pU9S1CSPeyuuw4uO9Die+
2evw4je8jiD+x+uI4v9zdZfRTS1RGIY37u5enBZ3hwDFi1Ncirt74cLg7u7F
obg7BHd3L+5Q3OFmvpw9a83uv5dnnzkSaQhpyfyeOx68CrdCU3fj8eEzTSeA
7zWdEB5mOhE8ajh3Ynh200ngtUwnhfflVmhaYDwZ/JBuvN5A03PdeH2THB77
A2+fAp7vgzMfmBJe/4Mz75cK/h/PU2r4UrM9mk4aTwN/y+tdQ1Oij7z/tPAi
H3n7dPBmH3n/PvDhPO+XHr6G5ykD/LzpjPDPpjPBU3zi/aGp9CdePzO89See
zwIfZ+bRaqOZzwq/ZuazwX9yu9Hk85nPxxdentvlB+/ETdnhU7jdaNphts8B
v2O2zwmP8IW3zwXPwq3QFGA8N7yHcTTNNp4Hvs90Xvgj0/ng0b5y54fnNF0A
Xptboam/8YLwhdxuNB0x84XgL7hdheFxv/H2ReD5uRWaGhovCh9sHE3LjReD
n+J2o+m9mS8OT/yd918CXoybSsKbcys0jTReCh5qujT8omkX/IvZHk2pfrCX
gbu43Whqy63Kwsdzu8rBN5vt/eHXf/DjC02/f/D9tzw8/U9erwK84k++P1eE
d/7Jj69K8Gk8T5XhO832aLpnvAo84i92NGXjpqrwasbR1Mt4AHzOL+d4ZqLp
wC8+nmrwxzzvRlOM33z81eG5fjvzr9BU9zfvrwZ8AM8nqQlfzPOhaHWU5121
4K94/hpaxfvjzHesDS/4h4+/DrwRt0KTMl4XvsJ0IPyM6XrwcLM9mpL+Za8P
L86t0NTCeAP4KONoWme8IfyS6Ubwb6Ybw1P/4+3RVJabmsDbGUfTRONN4VuM
o+mm8WbwP9xuNGUkX2e+ObwStysI3pWbWsCnm3k07TbeEn7fOJoiR2BvBfc1
3Rpew3QbeG9uhaZ5xtvCDxpH01Pj7eAxIzrtRlMebtUeHsjt6gAfyE0d4SFm
Hk3HjXeCv9aNxwOaEkTyde7/Xi8Uibf3epNIznyo14fy/DWvr+J56gw/azd9
FJ4ssu0l7VYthY8Rvl74FeHfhaeNYns5u6mD8EnCtwm/Jfyf8ExRba9it+om
fKbwPcLDhEeJZnt2u1VN4X2Fzxd+SPgz4bGj257XbqovfJDwpcJPCH8rPGEM
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
TbqPHjlypNwH+HXdl/UXWv3S/ejhw4ctPsLTl/R0uP5Cqwol+Xp+gncu6VyP
eJ/hU0s612MRmnaWdK5Hzi/wuyWd67EPTRFLOdej6ld41lLO9biNpmqlnOvR
4Ru8ZynnenxH05xSzvUY/R2+v5RzPZL+gD8u5VyPFWgVvbRzPQr8hOcq7VyP
I2hVp7RzPWr/gg8o7VyPh2i1qLRzPbr/hh8tzfePP/CX3ApN8Vzsf+EFuBWa
Ghn/Bx9iHE0rjNNO7aeNoynceAR4kjLsaCrOTRHhQcbRNMp4JPha42i6ZDwy
/KtxNKUuyx4FXkZ335ZZ+7ZEUzvdb45Wf3PU6xN0a84aFb5F982xC2+ORasb
uqvrDbz+R7fevHo0eIZy+v6zOVHxzWiqpHuLJxNFh3fRnU0fAJqm616kd+D1
XboTe8aLx4Df1z3Os/uFaBXJn88nJtzXn88Hrar78/l4vbc/n08s+Fx/Ph80
HfTn8/H6E38+n9jwmOX5fNAqd3k+nzjwwPJ8PmgVXJ7Px+sh5fl84sKPlefz
QdPr8nw+8eDxK/Dth6ZC3BQf3tg4moYaTwBfaRxNZ40nhH8wjqZkFdkTwUtw
KzS1NJ4YPto4mtYbTwK/zB2Epu/cbq+nqeS0T1J4OW6FVu25w7w+iduVDL6V
OwRNt7gpOfyvWQ9NmSqzp4BX5lZo6mY8JXyGcTTtMZ4K/sA4mqJUYU8N9+NW
aKppPA28j278/gQ0zdeN36+QFu7Wjb9voumZbvx+hnTwWFX9nN/fgKa8uvH3
Tx94Pd34/Q9oGqQbvx8iPXxJVT6eDPATVfl40OpNVT6ejPCEAXw8aFU4gI8n
E7xpAB8PWg0L4OPJDF8dwMeDVucC+HiywD8F8PFkhSevxtcPTaW4KRu8lXE0
jTXuC99gHE1XjfvBfxhHU7rq7Nnh/tX5fNHUsTqfTw74ZDOfE77dzKPVbTOf
C041eD43PDO3QlNV43ng3Y2jaZbxvPC9xtH00Hg+eNSa7GjKwU354bW4u6Op
H3eY1xdw1ywAP8ztRqvn3HkKwuPU4scjWuXjjl8I3oBbodV/3OFeX8YdVBh+
kvsimt5xu4rAE9V2ehOainL7FIU3456CphHcVAy+htuNpgvcqjj8M7erBDxl
Hd6+JLx0Hef2vYamNnX49i8FH8fzqjR8E88HuuDXeN6vDPyXWb8s3Kcuz6Op
Ql1e3+ud6vJ8OfhUM49WO8y81++aeX94hECeR1PWQJ73ekAgz5eH9zTzaDXb
zHt9v5mvAH9k5tEUvR7Pez1nPZ6vCK9Tj+fRqr+Z9/oiM18JfsRueik8bn3b
C9itGgofIny58NPC3wtP0sD2YnZTkPCRwtcKvyj8q/BUDW0vY7dqK3yC8M3C
bwj/LTxDI9sr2k1dhE8Tvkv4PeGRGtuezW6qLryX8LnCDwh/IjxGE9tz263q
Cg8Wvlj4MeGvhMdvantBu6mxcCV8pfAzwj8IT9rM9hJ2qxbCRwtfJ/yy8G/C
0zS3vazd1F74ROFbhd8U/ld4xiDbK9utugqfIXy38AfCI7ew3c9uVUN4H+Hz
hLuFP9W9q1Lsbhu8Hqulp7Pc2fI5bRV4Ht3TujQMnlwVXq8lb18NPrAlPz+i
aUlLfv6sDj9u5mvA35h5tErQiudrwgu34vla8CateB5Nw8x8bfgqM18Hfs7M
o9VHM18Xnrw1zwfCS3K70NSKW3l9DLfb6xvM9vXgV0zXh/8w3QCetg13Q7i/
6UbwDqYbwyebbgLfxq3QdNt4U/g/42jK3Ja9GbyK3dRd+Ezhe4WHCY/azvbs
dlMt4X2FLxB+SPhz4bHb257PblVf+H/Clwo/Kfyt8EQdbC9iNzUTPlz4GuHn
hX8WnqKj7aXtVq2FjxO+Ufg14T+F+3Syvbzd1En4FOE7hN8RHqGz7VnspgDh
PYTPFr5P+CPh0brYntNuVVt4f+ELhR8R/kJ43K6257ebGgofLHy58FPC3wtP
3M32Ynar5sJHCg8VflH4F+GputvuspvaCh8vfLPw68J/627ZtU8FP6+n7+Hp
fDuLZUzSHF6xB88HwTtzKzRNM94CvtM4mu4ZbwmP2JMdTdm4qRW8mnE09TLe
Gj7HeBv4AePt4I+Nt4fH6MXeEZ5LN36+Dk11dePn77w+QDd+Ps/ri3Xj5/c6
wY/qxs/3oemVbvz8n9fj9fZzfj6wM7ygbvz8IFo10o2fL/S60o2fP+wCX9Gb
jx9NZ3o7x3vJ6+G9nePN0BWetI9zvL3Rqngf53iPeb1FH+d4k3WDj+rjHG97
NK3r4xzvHq9f6uMcb6zu8G99nONtilap+zrHu8HrZfvy9e0Bb6cb/58Pmibq
xv/n0xO+Rbf3/xeH39SN/88Hrf7oxv/n0xuesZ+f8//59IFX6sf76wvv2o/3
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
m7oInyZ8l/B7wiN9sD2b3VRdeC/hc4UfEP5EeIyPtue2W9UVHix8sfBjwl8J
j//J9oJ2U2PhSvhK4WeEfxCe9LPtJexWLYSPFr5O+GXh34Sn+WJ7WbupvfCJ
wrcKvyn8r/CMX22vbLfqKnyG8N3CHwiP/M12P7tVDeF9hM8T7hb+VHis77bn
sZvqCR8ofInw48LfCE/ww/bCdqsmwocJXyX8nPCPuvH+hNeT//Rz3o8YAy+p
G+9njIW30o33L8bBx/zk9cbDN/zk9dDqillvAvyHWW8iPO0vXm8S3P8XrzcZ
3oFboWmy8SnwbcbRdNv4VPg/3fj8Bpoy//bjn4eCV/nN20+Hd//tzAfOgM/k
eb+Z8L08T7PgYWZ7NEX9wz4bnp1boamW8TnwvsbRtMD4XPgh42h6bnwePPZf
djTl46b58PrG0fSf8QXwpcbRdNL4Qvhb42hK9I99EbzIP76+aGr2j6/vYvhw
nlch8DU8H7gEfp7n/ZbCP5v1l8FTUHZvx0dTaW4fr7fmzuP1cdwur2/krun1
a9xBXv/J3d3rPhGcVl4vzz3F6524Q7w+hXuT13dwu71+h/ui1yNEdDrM61m4
w70ewE3L4T3sptnC9wl/JDxaJNtz2q1qC+8vfKHwI8JfCI8b2fb8dlND4YOF
Lxd+Svh74Ymj2F7MbtVc+EjhocIvCv+ie1Hd5qd+ez1VVE8nfjzjzp8VcJfu
cT1Ov/27Et42Km+/Gj6eW62Bbza+Fn7dOJp+G18HTx+N709oqsit1sM7c7s2
wKdx00b4Tt34/xrQdE83nn83wSNGz+78fxCb4dl04/kbrapF5/1tgfeK7qyX
fyt8TnRnvWdoOsDrzd0Gf8zrBWyHx4jBx7cDnsv0Tnhd07vgA7jdaFrMrXbD
j3K79sBfme33wuPFzO48H6GpoG48/+yDN4rJ8/vhysyj1QozfwB+xswfhIdz
u9GUNBYfnxtenNt1CN6Cmw7DR5l5NK0zfgR+yTiavhk/Ck8dmx1NZbnpGLxd
bD4fNE2MzedzHL7FzJ+A3zTzaPXHzJ+EZ4zD86fglbjdaOrKrU7Dp3O7zsB3
m+3Pwu+b7dEUOS5vfw7uy+06D6/BTRfgvbndaJpntr8IP2i2vwR/ara/DI8Z
j7dHUx5udQUeyO26Ch/ITdfgIWYeTceNX4e/Nn0DniA+9014IW6FpibGb8GH
GkfTKuO34WdN34F/NH0XniwB9z14SdP34S25FZrGGH8AX28cTVeMh8G/J+D7
C5rSJuT7y0N4uYQ8/wjeISHPo9UkM/8Yvs3MP4Hf4naj6R+3egrPlIhvn2fw
Ktz0HN7N9Av4TNMv4Xu4FZrCjL+CR0nMjqbs3PQaXjMxnw+a+ibm83kDn2/m
38IPmXm0embm38FjJ+H59/C8Sfj5FE31k/Dzbzh8UBJ+vkbT0iT8/P4BfsKs
9xH+1qyHVgmT8nqf4EWS8npo1TQpr/cZPjwpr/cFvjqpc/zX0HQ+KZ/fV/gn
nlff4CmS8fl+h5dK5sz7/YC3Tsbr/4SPZQ9F00az/S/4VTP/G/7TzKNVuuQ8
/wdePjnP/4V3tJumCN/O7fL6HW7ldUrB90+vZ+Gmf/Cq3CFo6sHtot3aZ3GH
oWkft4oAf8jtExEeLSXvD61ycAdFgtfmpsjwfin59kHTwpR8faLAD/O8igp/
wfOB0eBxUvHtEx2ePxWvHwPegFuhabDxmPBlxtF0yngs+Du7KXFq24um5uPx
evPUfPxeH2HmY8NDzTxaXTDzXv9i5uPAU6ZhR5MrDW8fF94mDc/Hg48382i1
yczHh1838wngv7gVmtKnZU8Ir8Ct0NTZeCL4VG43mnaa+cTwu9yuJPCI6Xj7
pPCs3ApN1Ywng/c0jqY5xpPD9xtH02PjKeDRfbhTwnOZTgWvYzo1fIDpNPBF
3ApNR42nhb80jqZ46dnTwQtwKzQ1Mu4DH2IcTSuMp4ef5nahKdzMez1JBr7+
Xi/OTRngQdwuNI3iVl5fa7b3+iWzfUb41wz8fIym1Bn5+TgTvExGfj5GU7uM
/HycGT4hI6+XBb4lI6+HVjfMelnhf8x6aJUhE6+XDV4pE6/nC+/CrdA03bgf
fFcmfn5B0/1M/PjIDo+UmbfPAffNzI+XnPDqmfn5JRe8N89Tbvhcnr+GpoM8
H5oH/sSsnxceMwuvnw+eOwuvnx8emIXXLwAP5lZoCjFeEH7MOJpeGy8Ej5+V
HU2FuKkwvLHxIvChxovBV3K70XTWzBeHf+B2lYAny8bbl4SX4A5CU0tut9dH
c/uUgq/nVmh1mTvM69+5XaXhaXz5+xeaynGTC97ebpokfKvwW8L/Cs/kZ3tl
u6mb8BnC9wh/IDxKdtv97KaawvsIny/cLfyZ8Fg5bM9rt6onfJDwJcJPCH8j
PGFO2wvbTU2FDxO+Wvg54Z+EJ89leym7VSvhY4VvEH5V+A/h6XLb7m83dRQ+
Wfh24beFUx7bM9tNVYV3Fz5L+F7hD4VHzWt7DrtVLeH9hC8Qflj4c+Fx8tme
z25qIPw/3QGdvjfa5/VlukMjn1w8rAz8pO7oi2Y/qVQW/k5328LtfOOVgyfK
7+mjFwt1vYamorozdIy6db4/vJluFen6txbl4SN031+wokS2CvA1uksU6jP0
HZou6J53wf/4torwz7q/t08ca2AleMoC+vk/4pMaZSrDS+veNn/rjGhV4G10
xy84/NY5tBqnu+v52mlnVIVv0n22XYZWjQLg13T7Rfi4yqca/JfuMfMOvXmG
Vj4FPf0s/9S866vDK+j2PxfUt1cNeCfdS9vm2Vu0JnxqQb6+teA7uBWa7hqv
DY9QiB1NWbmpDjyAOwRNPblddeGzucPQtN+sFwh/xO1TDx69MH//QKuc3EH1
4XW4qQG8P3cImhZxuxrCj3CHoeklt2oEj1uE998YXoDbjVYNuYOawIdwU1P4
cu4QNJ3mdjWDv+cOQ1OSorz/5vBi3D5B8CBuN1qN5A5qAV/LTS3hF03/z9Vd
hlW1RHEYX167uwu7sLuPha3YrditWNg6dnc3dnf3sVuxW7G7uy/z33vN88zy
23t/c9bM2WwOwkVoCf9quhU8eRHu1vBSptvA2+jG10/RNF43/n7WFr5ZN75+
2w5+XTf+ftce/pvnqQ7wtEXdeW06wssXdedV6QTvXNSdl7czfGpRd17SLvBd
Rfl8XeF3ef1WNIUvxvMD4ZmL8eO7wasV4/OjVY9ifL7u8DnFeP8e8AM87yma
HvO8OT3hUYvz+XvBcxbn8wXBa+vWv99mF5r66cbvq+kNX6Qbf//rAz+mG/++
F61e6ta/P2d+X3icEtncvz/2g+fXrX99Tqz+8Ea68ftz0EqV4Oc3AL6ihHue
QgPhZ0q45/mApg8l3POsGQRPVNI9T8vB8GIl3fOkUPDmJd3zXEXTqJLueSYO
ga8r6Z6n/FD4pZJ8fYbBv7GPQlNKDz+f4fDSHnf+DDS18/D+I+ATPO75lqJp
q4ev50j4DY/7/Daj6a+Hn/8oeLpS/P6Epoql+Lyj4V1Kuec5j6bppfj6j4Hv
LuWe5w6a7pfi6zUWHqG0e56XaMpamt/+4+DVS7vn+Y6mXqX57TUePre0e57I
E+De0nx90epJafc8CSfCo5fh+wWtcpVxz5NuErxuGX77olX/Mu55ck+GLy7D
9ytaHS/Dr1dT4K/L8P2FVnHLuuepNhVesCzfD2jVuKx7nsbT4EPL8v2NVivL
uufpMB1+rizfj2j1sax7nj4z4EnK8f0zE168HN8/aGpZju+fWfDR5fj+QdOG
cnz/zIZfLsf3D5p+lOP7Zw48lR/fP2gq68f3z1x4ez++f9A0yY/vn3nwbX58
/6Dplh/fP/Ph//z4/kFThvJ8/yyAVyrP9w+aAsvz/bMQPqM83z9o2lue759F
8NDyfP8EwyNV4PsHrbJV4PtnMbxGBb5/0CqoAt8/S+DzK/D9g1aHKvD9sxT+
rALfP2gVoyLfP8vgeSry/YNW9Sry/bMcPrAi3z9otaQi3z8r4Ccr8v2DVm8q
8v2zEh6/Et8/aFWoEt8/q+BNK/H9sxo+TLf+9tYxaFqtG/+eaQ38vG79/bDz
0PRZN74fdi08aeVszvfDrkdTSd3491br4K0q8/2BprGV3f0qrodvrOzudwlN
Vyu7+zXaAP9Z2d3vMZp8qrj7dd4IL1fF3e8rmjpW4bf/JvjkKu5+UTfDd1Rx
95uKVreruPsl3wIPV9XdbxlaZazq7pd9K7xKVXe/HWjVrSq/fbfBZ1V19zuF
VvuquvvV3A5/WNXd7zZaRa7m7tdqBzx7NXe/N2hVs5q7X9BOeJ9q/PbbBV9Q
jZ8Pmo7wvPS74c/58TvQFKs6X/898LzV+TxoalCdr+9e+KDqvN8++LLqvB9a
narO++2Hv6vO+6FVAn/e7wC8iD/vh1bN/Hm/g/AR/ryfF77GbgoR/kV48hq2
e+ymNsLHCd8s/Jrw36aPwtPUtJrK2606CZ8qfKfwu8L/q2V7ZrtVVd3eXBcL
hTjeQ/fXZVnqHT4Gn607R9KhvbYdhx/Q3WbCrWkrTsAf6V4YLu+W2SfhUWuH
9ZVe40LGnoLn0B3j5aO3A07Da+su27RYzK5n4H11D7g0PVvzs/BFurf4valY
6xz8qO6Xe8q1K3ce/lJ32pwLRxa8AI9dJ6wbLg07cQg8v+7JiasfSX4R3lD3
yXErH8S8BFd1+Plfhi/nVmg6Y/wK/H0dfr1GU6K6/PHnKrxoXV5/Dd68Lq9H
q5Fm/XX4OrP+BvyiWY+mb2b9TXiKerz+Frx0PV6PVm3r8frb8Alm/R34Ft34
+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
2730flL4iu28f3L4Gd379ob9QdMH3X16h/1JAU+0w9f9+2FKeDHd79+G/UGr
5rrx949U8FG68ffF1PB1utPqPz7wS7rv3Q37g1bfdOPvo2ngKXf68u9jgZfW
HSdu2J908Ha68fdTtJqge7T+kx6+VXdZ/ScD/MZOfr4Z4X938vNFq3S7+Plm
glfcxc83M7zLLn6+aJq+i59vFvjuXfx8s8Lv7+Lnmw0eYTc/XzRl3c3P1xde
fTc/3+zwXrv5+eaAz93NzxdN3t38fHPCn+zm55sLHn0PP9/c8FzcCk11jeeB
9zeOpsXG88KP69a/X2c+ml7rxu/TyQePu9c9/1U0FdSN35eTH95Yt14eqwB8
6F6+fmi1Urf+fTzlC8LP6cbv30Grj3v5fIXgSfa550lRGF58n3ueXWhquY+v
ZxH46H3ueT6gacM+9zwTi8Iv73PPk7UY/Mc+9zwn0CrVfvc8LYvDy+7n61MC
3l43/v8tmibpxv/fLQnfphv//xdNt3Tj/w974P904/8foynDAV/3/y+Xglc6
wPuVhgce4P3QasYB3q8MfO8B3g+tQg/wfmXhkQ7yfmiV7SDvVw5e4yDv5wcP
Osj7oWn+Qd6vPPzQQd4PTc8O8n4V4DG8vB+a8nh5v4rwel7erxJ8oJf3Q6sl
Xt6vMvykl/dDqzde3q8KPP4h3g+tCh3i/arCmx7i/arBhx3i90c0rT7E7//V
4ecP8fsfmj4f4vd3f3jSwzyvBrzkYZ6HVq0O87ya8LGHeR5abTzM82rBr5p5
teE/zTw0+RzheXXg5Y7wPDR1PMLz6sInH+F59eA7jvA8tLpt5tWHhzvK89Aq
41Ge1wBe5SjPawjvdpTnoWnWUZ7XCL7PzEPTQzOvMTzyMZ7XBJ79GM9Dq5rH
eF5TeJ9jPA+tFhzjec3gR8y8APhzboWmWMfZm8Pzcis0NTDeAj7IOJqWGW8J
P2UcTe+Mt4InOMGOpiLc1BrezDiaRhhvA19jHE0hxtvCvxhHU/KT7O3gHm6F
pjbG28PHGUfTZuMd4NeMo+m38Y7wNKfY0VSemzrBOxlH01TjneE7jaPprvEu
8P9Oc3eFZzYdCK96ml8f0NTjNL8eOD77NL//O37gNL++OP7oNL+eOB71DL9+
OJ7jDO/XDV77DO+HVn3P8H6OLzrD+zl+9Azv5/jLM7yf47HP8n6O5z/L+3WH
NzzL+6FJneX9HF9+lvdz/MxZ3s/x92d5P8cTneP9HC96jvfrAW9+jvdDq5Hn
eD/H153j/Ry/eI73c/zbOd7P8RTneT/HS5/n/XrC257n/dA04Tzv5/iW87yf
4zfO836O/znP+zme7gLv53iFC7xfL3iXC7wfWk27wPs5vvsC7+f4vQu8n+MR
Qng/x7OE8H6OVw/h/YLgPUN4PzTNDeH9HD8Ywvs5/iSE93M82kXez/FcF3k/
x+tc5P16w/tf5P3QKvgi7+f48Yu8n+OvLvJ+jse9xPs5XuAS7+d440u8Xx/4
ELtppfCzwj8KT3zZ9uJ2qxbCRwtfL/yy8O/CU12xvYzd1F74ROHbhN8U/k94
+qu2V7JbdRU+Q/ge4aHCI16zPZvdyl94kPB5wg8Jfyo8xnXbc9tN9YQPEL5E
+Anhb4THu2F7IbtVE+HDhK8Sfl74J+FJb9pewm5qJXyM8I3Crwj/KTz1LdvL
2a06CJ8sfLvw28Lptu0Z7VaVhXcTPlP4PuEPhEe+Y7uv3VRTeG/hC4QfFv5c
eMy7tue1W9UXPkj4UuGnhL8VnuCe7YXtpmbChwtfI/yC8C/Ck9233WO3ai18
nPBNwq8J/yU8TajtfnZTJ+FThO8Ufkf4fw9sz2Q3VRXeXfhs4fuFPxIe5aHt
OexWtXR3KPvs/R7H++p+e/bl6v594Qt1B9Z526JYP/hR3Z/vfkj+B61e6A5q
8+XK/v7w2I/C+ufb7xMGDYDn0z2g92+/kgPhDR/x/oPgg3Xj8xc0LdeNz28c
P60bn/8Mhr/Xjc+P0CrhY56n4EUf8zy0CnjM8xwf+ZjnDYGvfczz0HTRzBsK
/8qt0JTiCfsweCluhaa2xofDxxtH0xbjI+DXjaPpj/GR8LRP2dFUgZtGwTsb
R9M046Phu4yj6Z7xMfDwz9jRlIWbxsKrGUdTT+Pj4HOMo+mg8fHwx8bRFO05
+wR4Tm6FpjrGJ8L7GUdTsPFJ8GPG0fTK+GR4nBfsaCrATVPgjYyjaYjxqfAV
xtF01vg0+AfjaEr8kn06vBi3QlML4zPgo4yjab3xmfBLxtH03fgseMpX7Ggq
w02z4e2Mo2mi8TnwrdweNN006x3/y+11PP1rfvxceEVuhaauxufBpxtH0x7j
8+H3jaMp4hv2BfCs3B40+XMrx3txex2fZx6/EO41vQj+1HQwPPpbno+m3NzK
8brcXscHcNNi+GLzeDSdMI93/LV5vOPx3vHjl8ALcis0NTG+FD7UOJpWGV8G
P6cbP88LTZ90L9M/X8zxJO993Z/HtRxeQjd+PhhatdSNn1e2Aj5GN36+F1pt
0I2fN7YSfkU3fv4ZWv3Q3VhvsAqe+oOv+/PL0KrsBz7vaniHD3xetJr0gc/r
+PYPfN418Fsf+LzosE+g+Lxr4Rk+8nnRVPkjn3cdPPAjnxdNMz/yedfD937k
86LpwUc+7wZ4pE9uB6DJl9vreA1un43w3twKreZzhzp+mNuzCf6MOxhNMT/z
/pvhebgVmuob3wIfqBtf70fTUt34/wuOnzTrt8LfmvVoFf8Lr3e88Bdevw3e
9At/PEXT8C/88dTx1V/44+l2+IUv/PEUrT6beTvgyb7yPLQq+ZXnOd76K8/b
CR/7leehadNXnrcLftX0bvgv03vgPt+498L9TO+Dd/zmyz/fGD7lG18fx3fw
euX4HV6/xvFw3931Vx3P9J3n74dXMX0A3t30QfgsfnwdNO3/zvMdf2jWe+FR
fvB6tMr+g9c7XusHrz8E78MdjKaF3J7D8CPcoWh6wa2OwGP95Pv7KDwftxet
GnAHHIMP5qbj8GXcwWg6ze05AX/HHYqmhL94/5PwItw+p+AB3F60GsEdcBq+
lpvOwEN04/9noemrbvz/r7Pw5L/5ep6Dl9KN/792Ht5GN/5/HJrG/+brfQG+
WTf+f18I/Lpu/P/Bi/Dfv/k8l+Bp//B50Kr8Hz7PZXjnP3yeK/Cpf/g8V+G7
/vB50OruHz7PNXj4v3ye6/DMf/k8N+DV/vJ5bsJ72E1zhB8Q/lh41H+257Rb
1RbeT/gi4ceEvxQeh7K7fQue325qJFwJXyH8jPAPwhOFs72Y3aq58FHC1wm/
JPyb8JT/2V7abmonfILwrcJvCP8rPF142yvarboIny58t/D7wiNEsD2r3aq6
8F7C5wr3Cn8iPHpE23PZTXWF9xe+WPhx4a+Fx41ke0G7VWPhQ4WvFH5O+Efh
SSLbXtxuail8tPANwi8L/yE8VRTby9qt2gufJHyb8FvC/wnPENX2SnZToPAZ
wvcKDxUeKZrt2eymGsKDhM8Xfkj4M+Exotuex25VT/hA4UuEnxT+Rnj8GLYX
spuaCh8mfLXw88I/C08a0/aSdqtWwscK3yj8qvCfwn1i2V7ObuoofLLwHcJv
Cw8X2/aMdlMV4d2EzxK+T/hD4ZHj2J7dblVTeB/hC4QfEf5ceKy4tue1mxoI
HyR8mfBTwt8JTxDP9iJ2q2bCRwhfIzxE+BfhyePb7rGb2ggfJ3yz8GvCfwtP
k8D28narTsKnCt8p/K7w/xLantluVVV4D+GzhR8Q/kh41ES257CbagvvK3yR
8KPCXwqPndj2/HarhsKV8OXCzwh/LzxREtuL2k3NhY8Uvk74ReHfhKdIantp
u1Vb4ROEbxF+Q/gf4emS2V7BbuoifJrw3cLvCY+Q3PYsdlN14T2FzxV+UPgT
4dFS2J7LblVHeH/hwcKPC38lPG5K2wvYTY2FDxG+UvhZ4R+FJ05le3G7VQvh
o4WvF35Z+HfhqVLbXsZuai98ovBtwm8K/yc8vY/tlexWXYXPEL5HeKjwiGls
z2a38hceJHye8EPCnwqPkdb23HZTPeEDhC8RfkL4G+Hx0tleyG7VRPgw4auE
nxf+SXjS9LaXsJtaCR8jfKPwK8J/Ck+dwfZydqsOwicL3y78tnDKaHtGu1Vl
4d2EzxS+T/gD4ZEz2e5rN9UU3lv4AuGHhT8XHjOz7XntVvWFDxK+VPgp4W+F
J8hie2G7qZnw4cLXCL8g/IvwZFlt9+gupv/cgbfWXaVy5cpn0DROd0P95y58
k+4O7du3f4Gma7r76D/34L90jx41alTk+/A02cJ6pv6DVn66VyxfvjxDKLyT
7m36D1pN0X30yJEjZR7Ad+q+pP+g1R3dDx88eND8Ifw/37B+r/+gVSZf9/mp
R/CquuPEDvvzGN5dd6qwPwvRNFt3juxhf57A9/u612Mfmh75utej8lN4lOzu
9biFphzZ3evR/hm8Vnb3enxHU9/s7vUY9Ry+MLt7PRK9gB/N7l6P5Wj1Irt7
PfK9hMfO4V6PI2iVL4d7PWq+gjfM4V6PB2g1OId7PQJfw5fn4Lf3G/hpu+m9
8IQ5bS9qtwoQPlL4WuEXhX8VniKX7aXsprbCxwvfIvy68D/C0+a2vYLdqrPw
acJ3Cb8nPHwe27PYraoJ7yl8jvCDwh8Lj5bX9px2Ux3h/YQHCz8m/JXwOPls
L2C3aiR8iPAVws8K/yA8cX7bi9lNLYSPEr5e+CXh34WnLGB7GbtVO+EThW8V
flP35zH95/u+hf/VHbSyca/m7+DpC4b1z6PFq818D6+oe8DDVJnOfIB3Lcjz
PsGncys07TH+GX7fOJoiFmL/As9q+ivc3/Q3eC/T3+HzTP+Ae7kVmp4a/wmP
XthtL5pyc6tf8Lrcnt/wAdz0B77YPB5NJ8zj/8Jfm8f/g8crwo+nA9oL2k1N
hA8Vvkr4OeGfhCcpansJu1VL4WOEbxB+RfgP4amL2V7WbuogfJLw7cJvCafi
tmewmyoLDxQ+U/he4Q+ERyphu6/dqobw3sLnCz8s/JnwmCVtz2M31Rc+UPhS
4SeFvxUe32N7YbtVU+HDha8WfkH4Z+HJStle0m5qLXys8E3Crwr/JdyntO1+
dquOwqcI3yH8jvBwZWzPZLeqIry78FnC9wt/KDxKWduz2021hPcRvlD4EeEv
hMcqZ3s+u1UD4YOFLxN+Wvg74Qn9bC9iNwUIHyF8rfAQ4V+FJy9veym7VRvh
44VvFn5d+G/haSvYXt5u6ix8qvBdwu8KD1/R9sx2UzXhPYTPEX5A+GPhUSvZ
ntNuVVt4P+GLhB8T/lJ4nMq257ebGglXwlcIPyP8g/BEVWwvZrdqLnyU8HXC
Lwn/JjxlVdtL203thE8QvlX4DeF/haerZntFu1UX4dOF7xZ+X3iE6rZntVtV
F95L+FzhXuFPhEf3tz2X3VRXeH/hi4UfF/5aeNwathe0WzUWPlT4SuHnhH8U
nqRmWNeslGX5dMeL6866fHrN0+HgLWvy+vDw0brx/W0R4Bt04/uLIsIv83oV
Cf6D16+JDE9Vy11/NQq8bC2eHw3evhbPjw6fxOvrxIBv4/UqJvwWr18TC/7P
zI8Nz1Cb58eFV7KbAk3Hg8+wm/YKDxUeqY7t2eymGsKDhM8Xfkj4M+Ex6tqe
x25VT/hA4UuEnxT+Rnj8erYXspuaCh8mfLXw88I/C09a3/aSdqtWwscK3yj8
qvCfwn0a2F7ObuoofLLwHcJvCw/X0PaMdlMV4d2EzxK+T/hD4ZEb2Z7dblVT
eB/hC3R3+dY78KbjR3QnutImYE98+HPd+zbV8Z+XAB6rcVi3mlDWMyAhPK/u
aB3y5mqSCN5A9xa/tD4lEsMH6a6fLm6c1Engyxrz/knhp3Tj38+i6Z1u/Pvb
ZPAETbK7/54WTUV049/jJoc3041/X4umEbrx73NTwNc04f1SwkOa8H5o9aUJ
75cKnrwp74dWnqa8X2p4m6a8H1qNa8r7+cA3N+X90sCvmU4L/206HTxNM7c9
aCrPrRzvxO11fCo3pYfv5A5E013uUMf/C3DbPwM8M7cXrapy58oI78EdjFaz
ueNkgh/gVmj1iPu941Gbux2QGZ6DOwRNtbk9WeB9uTehaRG3T1b4Ue7JaHrJ
TdngsVvwfmjKz+11vCG3jy9ccSu0Ws4d6vgZbk92+HvuYDQlasn754AXNZ0T
3tx0LvhIbn80reMOdvwi93vHv3F7csNTtOLnj6bS3KGOt+XOlQc+gVuh1Rbu
EMdvcPvkhf/hDkRTutZ8/RyvwB0nH7wLdwBaTePe5PhubsoPv8et0BShDXsB
eBZuhabqxgvCe7ZxP77XQdPcNvzx3/GDZn0h+BOzHq2iteX1judqy+sLw+tw
KzT1N14EHmy6KPy46WLwV6aLw+O24y4BL9DO3T8rmhq34/M5PoTXK8dX8vo1
jp/l9Vcd/2jml4Qnbs/z0VS8Pc93vEV7nu/4aF6/xvH1vP6q45d5PXng383j
0ZSqA3speBnd+H1OaGqvG//ewvGJuvH7khzfphv/PqM0/CbPU2j6x/POOp6+
ozsvaRl4pY7uvDZo1bWjO2+r4zM68vnKwvd05OuBptCO/Pwdj9iJ15eDZ+vE
69HKvxOvdzzIrPeDzzPr0XTIrHf8qVlfHh6jM69Hq9ydeb3j9Trz+grwAaYr
wpeYrgQ/we1B0xtu5Xi8Lvz+7HghbqoMb8LtQdMwbuX4KvN4x8+bx1eBf+ri
nr8DmpJ25fvJ8RJdeX5VeKuu/HzRagyvT1gNvpHXK7S6wutfOv6T19epDk8d
yOdDU7lAfn/wh3cIdNfPQNNkXk814Nu5A9B028xznLrx62VNeEZuhVaVuUMd
78btqQWfyR2Mpn3cVBv+wMxDU+Tu7HXgvtwKTTWN14X3No6mBcbrwQ8bR9Nz
4/XhMXuwoykvNzWA1+f2ommQWd8QvpTb0wh+yjy+MfwtdwCaEvTkeY4X5vZp
Am/GrdBqOHeo42u4PU3hF7iD0fSFm5rBk/Wymjx2q9bCxwnfJPya8F/C0wTZ
7mc3dRI+RfhO4XeE/9fb9kx2U1Xh3YXPFr5f+CPhUfrYnsNuVUt4X+ELhR8V
/kJ47L6257ObGgofLHy58NPC3wtP2M/2onarAOEjha8VflH4V+Ep+tteym5q
K3y88C3Crwv/IzztANsr2K06C58mfJfwe8LDD7Q9i92qmvCewucIPyj8sfBo
g2zPaTfVEd5PeLDwY8JfCY8z2PYCdqtGwocIXyH8rPAPwhMr24vZTS2EjxK+
Xvgl4d+Fpxxiexm7VTvhE4VvFX5T+F/h6YfaXtFu6ip8uvA9wu8LjzjM9qx2
k7/wXsLnCfcKfyo8+nDbc9ut6gofIHyx8BPCXwuPN8L2gnZTE+FDha8Sfk74
J+FJRtpewm7VUvgY4RuEXxH+Q3jqUbaXtZs6CJ+k+2u2iB3+OL7deHP4Ld34
+yg67BOg7O7fP1vAM4x216uW8Mqj3fV1WsEDeX3W1vCZvJ7awPeax7eFPzDe
Hh5pDM9Dk+8Y3t/xGmN4fQd4b7Mereab9Y4fNus7wp/x+qtoijmW13eC5xnL
5+sMrz+W53eBD+T1WbvCl/J6CoSfNI9H01vj3eDxx/F+aCo8jud3hzcdx+t7
wIeb9Wi12qzvCb9g1veCfzbr0ZRsPK8Pgpccz+t7w1uP5/VoNdas7wPfZNb3
hV/l9qDpF7dy3GeC217H/bipH7zjBN4PTVMm8H794TvM+gHwO2Y9WoWbyOsH
wjNN5PWD4FUm8no0dTfrB8NnmfUKvt+sR6uHZv0QeJRJvH4oPDu3QlMt48Pg
fYyjaaHx4fAjpkfAX5geCY81mR+PpnzcNArewDiaBhsfDV9mHE2njY+BvzOO
poRT2MfCi3AHoymA2zMOPoI7FE1rudV4eAi3zwT4V24vWiWf6nbARHgpbpoE
b8Ot0DTe+GT4ZrvpuvDfwtNOs7283dRZ+FThu4TfFR5+uu2Z7aZquoN2VUg4
3/EeutstXjR19BT4HN31x36N3Wsq/IDuSj2qTmg+Df5Yd7HGy6JVmw6POiOs
fcv9GlVkBjyn7lQ5akbMNBNeW3esxKuHxp8F7zeDzzMbvojbg6Zj3Mrxl9xe
x+PM5MfPgee3mxoJV8JXCD8j/IPwRLNsL2a3ai58lPB1wi8J/yY85WzbS+ue
+i/3wYGOt9PdYk3Q4L+OT9Cdq87ekoPnwreax8+D3+AORdNfbu98eLo5/P61
AF6RWy2Ed+EOWASfzu0Jhu/m9lkMv89NS+AR5rKjKSu3x/Hq3AGO9+JWjs/l
Dnbcy+11/Al3qOPR5/H+S+G5uBWa6hpfBu9vHE2LjS+HH+cOQNNrbq/jcefz
81sBL8it0Koxd6jjQ7k9K+EruYPRdI6bVsE/ml4NT7KAew28uOm1/3N11+FR
HV0cxwd3CO40uLv74q4tXkoKFGuhSKGUF8pQ3N2lwYq7++JOcZfg7i6Flznn
nvs855f/vs9nZu7cSbLp0k2WvJXfS8mHzPR+nuSgNstnys8T9lMy3rK/l/GL
2dPN8safYa84S9ZfRt5eOkBtRktb9rXSQfaL/vzl5F/88dQm89/iK8ir+72S
vLPfq8gnSltqs8X31eQRuk30cO05dZt64D3AZ4DvBL8LHne29gK6bSPwPuBz
wA+APwZPPEd7Md3mB/D+4IvAj4G/Ak85V3tZ3bY1+DDwFeBnwD+Ah87TXkm3
+Rl8DPh68EvgkeZrz6Lb1ATvAj4ZfCv4DfAY/2jPrdvWB+8JPhN8N/g98PgL
tBfUbZqA/wk+D/wg+FPwJAu1l9BtW4APBF8Mfhz8NXjqRdoDuk0b8OHgq8DP
gn8CT79YexXd9hfwceAbwK+AR16iPZtuWwu8G/gU8O3gN8FjLdWeR7f5DvwP
8L/B94A/AE+wTHth3bYpuAWfD34Y/Bl4suXaS+o2P4IPAl8KfgL8LXiaFdrL
67ZtwUeCrwY/D/4feMaV2qvqNp3Ax4NvAr8KHnWV9uy6TR3w38Cnge9w3TLn
yzu72G+77lSnw6ARa8hjr/7avbpdz9xwLXk+14MmN977zTryBq7Hbfm39X1q
8z/Xs65VjrpmPXm468VRts/tvYF8n+v1WQtXqLyR/KHrPTWW3kiwiTzhmq99
/NeMf12gtkVcXx4/Lf3czeTfu763IeHOX7aQ93P96tKQsCJbyReskfvbRn5E
2lKbF75vJ0++VpzalJY2O8hb+k5thvgeJF/mO7U55ftO8nd+7yJPt056N3kF
6TBq0146yD5KOnQP+VppS20vSEewf5EO7CXPtN7rcGpTXdrsI/9V2lKbib7v
J9/sO7WJ8P0AebQNub3/nqU2OV3Tf7+y190g4w+S9/DHU9vp/nj2nf74Q+R3
/D5MHnej9BHy/K7p9QzUppFrev0De2/X9HqJo+RzXNPrK6jtfn+9Y+SP/fWo
baJNsh57sU2y3r/kzTfJetSm/yZZ7zj5Qtfu76u2ozbHXNPfU2V/6dr9udQS
J8hTbs7t/b1UalvGtcs4J8lbu6a/30pth7p2f071CvsK1/T3WU+Rn3bt/rzq
cmrzwTX9/dXT5N9skc8vtam0xdvvPfYOW7z91jtDPmaLt9/N1HbdFm+/Gc6S
X9ri7Xc4tTVbvf2+Ys+y1dtv83PkNbZ6+91Lbbps9fab5zz5pK3efidTm61b
5XwvkF/f6n0+ulGbGNu8z98d9lzbvM9Pk4vk9bfJ55Pa/r5Nvl8ukc/c5q23
htrukvWyXCa/J+tNpbbxtnvrxb1CXnC7nCe1bbzdW+8l+5/b5evrKvnc7d56
F6i/fpd469W8Rv5E1gtSmyQ75Osvgrz4Dm+9f6hNix3eeimvkw/Y4a03gtos
3iHnd4P8X9fu9ZjNqM1r1/T6TfZUwdz8es9EN8kDrun1mtT2J9fu9Z0H2Ye7
pteD3iJfGZTzoDZng971LrF/DHrXK3KbPP1O73rjqG3lnd71HrP/stO7XrU7
5GN3etebR2027JT7u0t+eac83lCbyLvk8YY96y4Zf4+81i4ZT227+uPZp/jj
75Nvk7bU5qbvD8hj7hanNnmkzUPyb32nNn/4/oh81m7v+h2ozZ7d3v7OsN+X
8YHH5An2yH6pbaE93vikT8ib7pHrUdu+Mv4B+3wZ3+Ap+SEZH6Q2z2R8jmfk
Sfd64ydSm5J7Zf/PycP2yv6pzSAZf4Z9iYwPvCA/IeMXU9s3Mj7pS/I0+2T/
1LbcPtk/e9t9sv9X5CNkfJDarJbxOV6Tn5PxE6nNfzLevCHPsF++H6lN1f3y
/c/ecb883rCP3y/fn2/JN+6X/VKbq7LeEfYoB+T79R159gPy+EBtax+QxyP2
3w7I/t6TTz0gj4/UZscBefz8QH7rgDy+UpvYB+Xx9yN53oPy+ExtGhyUx+9P
5L0OyuP7f+ThB+Xxn9ruPSg/Hz6TPzwoPz+obcghuf8v5EUOyc8fs8N5s0Py
84na9DskP78ikf9zSH6+UZsjh+TnX2Ty54fk52MU8uSH5ecntS11WH6+RiVv
eVh+/lLbwYfl53M08mWH5Xyjk5/Ubd6Bpz2ivYJu2w58FPga8Avgn8EzHdVe
Tbf5FXwC+Gbwa+DRjmnPodvUBe8OPh08CH4HPM6/2vPrtg3Be4PPBt8P/gg8
0XHtRXWb5uB/gS8EPwr+EjzFCe1ldNtW4EPBl4OfBn8P/s1J7RV1mw7go8HX
gV8EN6e0Z9ZtaoB3Bp8EvgX8Onj009pz6bb1wH8HnwG+C/wueLwz2gvoNo3B
+4DPBT8A/gQ88VntxXXbH8AHgC8C/xf8FXiqc9rL6jY/gQ8DXwl+BvwjeOh5
7ZV125/Bx4KvB78MHumC9qy6bU3wruCTwbeB3wCPeVF7bt3mW/Ce4LPAd4Pf
B49/SXsh3bYJeF/weeCHwJ+CJ72svYRuEwY+EHwJ+HHwN+Cpr2gvp9u2AR8B
vsp1zx+XhBeJQX7O9YhvO739PSb5J9fhlfLX3hSLPMPVr7226Kt5H2KTV3G9
L/uGjyXjknd0fTF1r/p94pGPc/0oXulF2+OTb7wq1w8hv+Kang9RmyjXcnvP
b9izuabnKwnJa7um51fUtptrer6UiHyqa3r+Q223X5PrJSa/dU2uR21jRcj1
2PNGyPWSkH8XIdejNr0i5HpJyf+OkOtRm70Rcr1k5A+kLbUJuS6enLywtKU2
zXxPQW79Tkn+j9+pyA9LB6jNc3899mQ3vA6yl5I2qcl/lA6kIR8sbdOSL/Xn
pyM/6c8PJX/rj6c2aW+KpycvL22pTTvfM5CP9J3arPE9I/l536nNZ98zkWe8
ldt7PkJtqrmm5y/snW7JfPYJMn4x+yYZf4b9mow3mcmj3pb51CaHtMlCXsd3
atPd96zk03ynNkHfs5Hf9p3axLkjnp08n7SlNg19z0H+P9+pzWzfc5Lv853a
PPI9F3nCu+LUpqi0yU3+ve/U5i/f85Av8J3aHPU9L/kL36lNinvi+chLu6bn
c9SmlWt6fpiffIhrej5XgHy5a3p+WJD8lL9eIfL3/nrUNt19Wa8wecX7sl4R
8vb3Zb2i5KPvy3rFyNdKB6nNRWlbnPyLdKAEeeYHMr8keXXpILXpLG1LkU+U
DpQm3+LPL0Me4c+nNtEfyvyy5DmlAwHyetKmHHkP6SC1meHPL0++059fgfyu
P78iedxH8nhHbQo8ksdH9kaP5PGUvc8jeTxkn/NIHj/ZDzySx1v2x4/kepXI
Ez+W61HbYo/leuw/PJbrsfd/LNdjX/RYrsd+7LFcj/3VY7leZfKUT+Q8qE1Z
aVOFvLXv1GaY71XJVzzxHj8mUpszT+TxqBr5BxkfpDahT+XxqTp5pafe+AfU
5uencr0a5GNkfNKa5Otl/GJqe0nGB2qRR3omj2fUNsszb3yH2uQ1n8n+65B3
EV9MbSbL/AZ1ybf64+uR3/DHU9sYz2V8ffLcz2X8t+T1n8t4atPTH/8d+Ux/
fAPy3f54anvPH9+QPP4LGd+IvKB0KLVpIh1g/1M6jH2etGU/KB3O/lQ6yJ7k
pdcR7CWkTWPyFrrNQPDF4MfBX4OnfqU9oNu0AR8Ovgr8LPgn8PSvtVfRbX8B
Hwe+AfwKeOQ32rPptrXAu4FPAd8OfhM81lvteXSb78D/AP8bfA/4A/AE77QX
1m2bglvw+eCHwZ+BJ3uvvaRu8yP4IPCl4CfA34Kn+aC9vG7bFnwk+Grw8+D/
gWf8qL2qbtMJfDz4JvCr4FE/ac+u29QB/w18GvgO8Nvgsf/Tnk+3bQD+P/Bw
8H3gD8ETftZeRLf5Hrwf+ALwI+AvwJN/0V5at20JPgR8Gfgp8Hfg6Uwe5RV0
m/bgo8DXgl8A/wKeKZL26rrtr+ATwTeDR4BHi6w9p25bF7wH+HTwneB3wONG
0Z5ft2kE3ht8Dvh+8MfgiaJqL6bbNgfvD74Q/Bj4S/CU0bSX0W1agw8FXwF+
GvwD+DfRtVfSbTuAjwFfB34J3MTQnkW3rQHeBXwS+Fbw6+AxYmrPpdvUB/8d
fCb4LvB74PFiaS+o2zYG/xN8LvhB8CfgSWJrL67btAAfAL4Y/F/w1+Cp4mgP
6LY/uS6VvkeRNuzDXSf7GD9wiX2l6yenF1Sr24T8rOt9ywPf7qW2H12HD7nw
fYmm5Onjfu2eLbu2WUFtK7uuWypO50zNyH9xnS3ZvD+mUtuxriM/K9U//vfk
G1xfPHhmRH9qe9n16rmdJr1jjxzvaw/rEyO8Y3PyrK5bNwpfdIPa1HJdKn/x
NY1+IO/qOkmck1uPUJsprh/d6rCvXAvyba73bY9yfD21uel61pQZF3KGkceM
/7V7dC18M5za5HFdt+axR0l/JP/WdbYsbd8MozZ/xJfzbUk+y7V7v9FW1GaP
a3r/Uvb7run5WivyBAnyeO9nSm0LuXbvR/qcvalr/v1M8r6u3fuTbqQ2813T
+53+RH4ogbcfS22eJfD2c5M9aYi3nyptyEuGePtZTG3DQrz9xG9LPijE208X
arskxNvPGfYTId5+irUjfxPi7WcGtUmTUM6nPXk51/R8mtq0dU3Pl9lHuKbn
3x3IV7um59fU9pxrer7+M/l/run5OLXNkEiu9wt51URyPWrbMZFcj318Irle
R/KNieR61OZqIrleJ/IoieV61CZ7Yrner+S1pQPU5jdpyz5VOsi+w5/fmfyW
P57axE4i3oU8r7TtSt7A99/Ie0kHu5GH++Op7V7pAPtDfz57SFLvfJqxF0kq
58HeLKl3/4noeqZfUjlfvv4/Sb3zPMh+JKmcX3fy50llP9QmeTL5fLCXSuZd
r0gP8pbJ5Lyp7eBk3vUesy9LJp+/38lPJvOuN4/avEsm99eTPG1yuT61qSBt
/iBv5zu1GeV7L/I1vlObC77/j/xzcvl+pTaZUsj3F3u1FDK+N/mvKWQ8tZ3g
j2ff7I/vQ34thXx/UZtoKeX770/yHCnl+5Pa1E0p3799ybunlO9vSz49pVyP
2gZTyuNDP/I7KeXxg9rGSSX3/xd5/lTy+NOfvGEqeXyiNr1Tyf0NIJ+dSh7f
qM3+VPL4N5D8USp5fBxEnii1PH5S26Kp5fF1MHnz1HI+Q8j/ck3/vkptFrqm
f39lP+qa/n2W/aVr+vdb9hRpZL2h5GXSyHrUtlUaWY99aBpZj315GlmP/bS/
3jDy99KW2nyTVnw4eUVpS206+D6CfLRusw78IrhJpz2zblMDvDP4JPAt4NfB
o3+jPZduWw/8d/AZ4LvA74LHC9VeQLdpDN4HfC74AfAn4InTay+u2/4APgB8
Efi/4K/AU2XQXla3+Ql8GPhK8DPgH8FDM2qvrNv+DD4WfD34ZfBImbRn1W1r
gncFnwy+DfwGeMzM2nPrNt+C9wSfBb4b/D54/CzaC+m2TcD7gs8DPwT+FDxp
Vu0ldJsw8IHgS8CPg78BT51Nezndtg34CPBV4OfAP4FnyK69im7TEXwc+Ebw
K+BRcmjPptvUBu8GPhV8O/gt8Fg5tefVbb8D7wX+N/he8AfgIbm0F9ZtmoFb
8H/AD4M/B0+WW3sp3fZH8MHgS8FPgr8FT5tHe3ndph34SPA14OfBP4NnzKu9
mm7bCXwC+Cbwa+BR82nPodvWAe8OPg08CH4bPE5+7fl0m4bg/wOfDb4P/BF4
wgLai+q234P/Bb4A/Cj4C/AUBbWX1m1agQ8BXw5+Cvw9eLpC2ivqtu3BR4Ov
Bb8I/gU8c2Ht1XWbzuATwbeAR4BHL6I9p25TD7wH+AzwneB3weMW1V5At20E
3gd8DvgB8MfgiYtpL6bb/ADeH3wR+DHwV+Api2svq9u2Bh8GvgL8DPgH8NAS
2ivpNj+DjwFfD34JPFJJ7Vl0m5rgXcAng28FvwEeo5T23LptffCe4DPBd4Pf
A49fWntB3aYJ+J/g88APgj8FT1JGewndtgX4QPDF4MfBX4OnLqs9oNu0AR8O
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
JuPlr50i/tZ129irug6P1+tTSDzyTq6zxitWoTW1He96Rdw3Qzewb3JdNO7a
47Hjk191vT1O1+Q/UJuoV7525Tj5fljFnt31sdhP5kVNQF7HdcPYSx82ora/
ub4aq0OBJezTXP8UK9sfn9l3uH4c886OeiHkt113jzkv+nxqG/vq1/4Uo2Wt
d+z5XA+IETqhRkLyBq7jxrh6cRa1+Z/rCdFnpH/BHu46dfSm7SolIt/nem60
FCumUNuHrnNGO/v6IXvCa197TdQJpcomJi/iukTU+v3HUZvvXe+KEnLoNns/
19WjHAspnoR8geuTkUc0GkFtj7huErn6rGvsL1xfjxTzdoGk5Mkjvnb7SPty
DqI2pV0/MwO6XmBv6bqnKb8pVzLyIRHy9Udtl0kH2U9Jm+Tk76QD1CbddZnP
XkE6yN5e2qQgHyUdoDZr/fnsF/z57F/8+SnJM92Q+dSmurRl/1U6yD5R2qQi
3+zPpzYR/nz2aDdlPntOaZOavK50gNr0kLbs0/357Dv9+WnI7/jzqU3cWzKf
Pb90IC15I2mTjry3dCi1meOPZ98vHcb+2F+fPdFtr8PZi0kH2ZtLR7D3lzbf
kC90Tc/HqM0x1/T8i/2lPz6UPOUdGU9ty9yR8eyt78j49ORDpQPUZoW0ZT8t
HWT/4M/PQP7NXZlPbSpJW/YO0kH2MdImI/k6fz61ueTPZzf3ZD57FmmTibyG
dIDadJG27JP8+exb/fmZya/786lNjPsynz2Xa/d+0WvZ67ue696fmv131+79
pdNmIZ/pmt7Pmtrucu3eLnog+z3X9937X7PHe5CH37/6CXtB1/R+2VnJG7t2
b2fdiNr86ZreX5t97gO5P/aDD7z9vmJ/8sDbb7Zs5EkeevttTm2LP/T2O5a9
xUNvv3vZBzz09vuBffFDb795spP/+9Dbb0tq8/qht9/J7Kkeefs9zB54JOef
g/wn6QC1GS5t2VdKB9nP+vNzkn/051Ob9I9lPntl6SD7L9ImF/nYx973S2Fq
s+Gx9/3Sgf2yjA9nj/zEG3+GPesTb3zs3OS1nsh+qG1XGd+dfYqMX8y+TcZH
sN+U8UnzkMd86o2vTm3yPJX7Y//WNb2+iv0P1/R6N/ZZrte515flJd/j+rl7
PRe1ve/avZxsGXuCZ3m817OxF3JNrx/LR97UNb1ei9r2dU2vn2Of75per8Z+
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
HuG6R/a9j4+xR1/2tf9MmyZyrInkOV0PTNgtWQVqU8/1iGiHcvRh7+F6wvvQ
shvYZ7ie/vj3b5+z73Q95/qxtjknkd91vehM5t4/Udu4y7/2yoO9x/zNXsD1
xm2n5l1gb+R6x6ocmxJPJu/jet/8fkdrUds5ro9NPX99MPsB12dG5n2zk/2x
68v9BsX+xJ54xde+1f1KuiJTyIu5fti+UMHO1OYH1y+aD6+ymL2/6w/1bjS7
xb7IdaTKxTunm0p+zHXMEmMGNKY2r1yH5Lk7ZRx7ypXu6yVDmWVH2Mu6Tpds
4s7o08hbu84S+9GZALUZ5jr35/IPerGvcF3oxdTPa9nPuC5551mip+wfXJe/
WCVr9unkoavc18uxWSVbUdtKruvtel1nJvvPrhuvr9n6HPsY12GL5/ZMOIN8
veu2sz6MqEFtL7nuNK7e7IHskVa7r5dBC9ftYM/iuk+vLwffs9d0PaBTw6sF
Z5J3cT2i5bIXHanNZNfjG0aNsZB9q+tp1ZulvsF+w/WcMqvzpplFHmON+3op
EKtiQ2qT2/XKLGGNx7DXd70x1YZfDrH3dL0jfvx+Uf8mn+l6X+SfJpahNrtd
H32zZVFP9nuuzzxItH01e/y17uvlavuTj9gLur55MngnSzh5E9cP9iX/GEZt
/3T9YnOnBNPZ57l+v3xvxjPsB12buWmKJZhN/tR1zMndalajtknWfe0Eww+F
9Wcv4TpZ3/Tdt7G3cJ2uW8+hb9kHus7c9t+Z+eeQL3adq1mW1T9Tm+OuC9Xp
s28++2vXJSucvniNPfV69/VSNOfTlHPJA66r5/wrynfUpo3ret9cSD6Kfbjr
xonz5TrAvsp1ixiDA5HnkZ913fbjle9KUZtPrjs9LdS+B3v6DV+7+83hfVay
V3Hd+9yNsQ/Yf3E94HDxfzLNJx/neviOMZt/oLYbXI9bc/fYFPYrrqctKHPz
JHvkjV979vSJb+P+Q57N9cLRj+JUoba1XK/sXyG0H3s31xt+n1ZoC/sU19t/
fl71Nft21/taVG2edwH5TddHv/27S3tqE2vT1z5d5c3Auex5XF8uWWvaFfbv
XN/MO2958oXkf7h+kPHjrnrU5m/XL5LXPzecfY/r93EWPdzL/mCT9/PLLCJP
sNk9XhUbdTMFtSnsen+XNPvzszd1Tb8fxm5dj7pZbFQr9vmuu6bZ36U3+2HX
7uncRPZnrot/nbCcPdmWr53GXYC95BZvPxHsP27x9vOOfdAWbz8JF5Mv3eLt
Jwe1PbHF208F9rdbvP18z55mq7ef7uzlt3r7GcXedqu3nwXsI7d6+wmyr97q
7ec8+/mt3n6es/+31dtP7CXkGbd5+8lIbatu8/ZTir3TNm8/DdjHb/P204l9
0zZvP4PZr27z9hPOHnW7t5+N7Nm3e/s5wV5nu7efB+y/bff2E2Up+bTt3n7S
UNsd2739FGa/vd3bT2322Du8/bRlz7fD249lbyAdXE7+P2mzijxcOkBt9vnz
2R/689kTBmX+avIi0gFq8720Ze8nHWRf4M9fQ37En09tXvjz2ZPvlPnspaXN
WvKW0gFqM0Tasi/z57Of8uevI3/nz6c26XbJfPYK0kH29tJmPfko6QC1WevP
Z7/gz2f/4s/fQJ5pt3z/Upvqu+X7k/3X3fL9xz5RxufYSL5ZxnenNhEyPsge
bY98/W8iz7lHvr6pbd098vXL3kPGP2CfLuMLbybfKeMttb2j28Tdqz2/btMI
vDf4HPD94I/BE+3TXky3bQ7eH3wh+DHwl+Ap92svo9u0Bh8KvgL8NPgH8G8O
aK+k23YAHwO+DvwSuDmoPYtuWwO8C/gk8K3g18FjHNKeS7epD/47+EzwXeD3
wOMd1l5Qt20M/if4XPCD4E/AkxzRXly3aQE+AHwx+L/gr8FTHdUe0G1/Ah8O
vhL8LPhH8PTHtFfWbX4BHwu+AfwyeOR/tWfVbWqBdwWfAr4N/CZ4zOPa8+i2
34L/AT4LfA/4ffAEJ7QX0m2agvcFnw9+CPwZeNKT2kvqtmHgg8CXgJ8AfwOe
5pT2crpNW/AR4KvBz4H/B57htPaqum1H8PHgG8Gvgkc5oz27blsb/DfwqeA7
wG+Bxz6rPa/rdbdHX825hbyB65GbMofcoLa9XLcZuaXclK3k4a7L/FivW+1t
5HtdJyt8d17U7eQPXT+J2efsZmobcu5r77+cKGaXHeRFXP+9cmHxrEHyZq5/
H1Dm5yvUpp/ruo1Pzxi/k/wf19lydThWbRf5kXPe/s1u8ufS+ahN8vNeh7GX
kh7D3lI6yD5Y+hn7MunQPeQnpetSm3fSlj3tBdnPXvIK0pbatvN9H/ko36nt
Gtfu/STOsl9w7d6/Ivd+8s+u3ftD9Kc2mS7m9d6Pgr2aa/f+F/kOkP/q2r2/
xGBqO8G1ez+Lq+ybXdP7Zxwkv+bavT/FcGoT7VJefj+M6+w5XLv33yh2iLyu
a3p/C2rb3bV7P43b7NNdu/fvKHWYPOjavT/GOGpzxzW9Hwd7nMveeQSOkOe/
7J3HJGrb8LJ3Ho/Ze1/2zqPCUfLZl73zmEZt9l/2zuMZ+6PL3nlUOUae6Ip3
HrOobdEr3nm8Ym9+xTuPGv+S/3XFO4/Z1GbhFe883rEfveKdR53j5C+veOcx
n9qmuOqdxyf2Mle986h/grzVVe88FlGboVfl6+Uk+XJpS21O+36K/L1r+nvb
1Oaba3m9v8/NXtE1/f1t9g6u6e91s4++JuudJl93Tdajthf99dhNhKzHnjlC
1mOvESHrnSHvHCHrUZtJEbIe+xZ/Pfbr/nrs0a/LemfJc12X9ahtveuyHvvv
12U99hnXZT32Xf5658jvuqbnO9Qm3o283vMX9gI35PzZG9/wxi9m7yPjz7DP
lfHmPPkB6c7U5ol0BHvim/L4coG8uHSQ2v4gne8i+QDpcGq7SDrkEvm/0pba
vvLXY091S/Z3mbysdCi1+Uk6wD5MOox9pbRlPyMdzv5ROsgeelvul72ytLlC
/rN0KLUZKx1gXy8dxn5Z2rJHuiPXZ88qHWSvKR3B3lXaXCWfLB1KbbZJB9hv
SIexx7wr12fP7Zr+Hi77t67p79uy93RNf6+WfZZr9/duE10j3+3a/f3aItTm
vmv392+bsce/J9djL3RPrsfe5J5cj73vPbke+7x7cr0I8kP35HrU9uk9uR57
0vtyPfYS0kH2MGlznXygdIDaLPHnsx/357O/8effIE/9QOZTm3LSlr2NdJB9
hLS5Sb5KOozanPPHs3+SDr1FnuGhrE9tq0hHsHeUDtwmHycdTm02Sps75Fek
w6hNlEdyffZs0qF3yWtLW2rbTTqCfap04B75dulwanNL2twnj/VYrk9t8koH
2b+TDn1A3kvaUtu/pSPY90oHHpI/kA6nNiFP5PqPyAtLh1GbZtJBdisd+pj8
H2lLbQ/76z0hf+47tU32VPwpeSlpS21/lF7JPlg6gn2pdMgz8pPSAWr7Vroz
e9pncr/s5aWPs7eTNs/JR+o2a8DPg38Gz/hcezXdthP4BPBN4NfAo77QnkO3
rQPeHXwaeBD8Nnicl9rz6TYNwf8HPht8H/gj8ISvtBfVbb8H/wt8AfhR8Bfg
KV5rL63btAIfAr4c/BT4e/B0b7RX1G3bg48GXwt+EfwLeOa32qvrNp3BJ4Jv
AY8Aj/5Oe07dph54D/AZ4DvB74LHfa+9gG7bCLwP+BzwA+CPwRN/0F5Mt/kB
vD/4IvBj4K/AU37UXla3bQ0+DHwF+BnwD+Chn7RX0m1+Bh8Dvh78Enik/7Rn
0W1qgncBnwy+FfwGeIzP2nPrtvXBe4LPBN8Nfg88/hftBXWbJuB/gs8DPwj+
FDyJyae8hG7bAnwg+GLw4+CvwVNH0h7QbdqADwdfBX4W/BN4+sjaq+i2v4CP
A98AfgU8chTt2XTbWuDdwKeAbwe/6bpum6khvdljRf3aF+slufiJPY/r1qVH
z+3zgvw714+zxe74mdr+4bpHkoFF+r4k/zuqrP+KfI9r+nux1OaBa3q+y54g
mjc+wF44mje+AXvTaN74DuxWxlv2+dLmNflh36ntM9/fkCeLLk5tS0qvZP9R
OoJ9kHTIW/Kl0gFqe0K6M/tb6XD2NDG8Ps5eXtq8I28rbanNSN/fk6+OIedF
bc7HkPNh/8+fz54xpjd+MXvVmN74M+ydYsr6H8jHy/gc1GaTjG/AflXGW/ao
sWR99uyxZH32OrFk/Y/kv0kHqM00acu+QzrIftuf/4k8dmyvQ6lNPukAewPp
MPb/SVv2cOlw9n3SQfaH0hHsCePI9f8jLyIdoDbfS1v2ftJB9gX+/M/kR6RD
qc0Lfz325HFl/+ylpS17S+kg+xBp84V8me/U5pQ/3+x0/k46nNqkiyfj2StI
R7C3lzaRyEdJh1KbtdIB9gvSYexfpC17pviyXmTy6tKW2v4qPYZ9onQ4+2bp
lewR0kH2aAnk+4s9p3QEe13pZ+w9pE0U8unSQWqzU9pGJb/jO7WJGyLzo5Hn
lw5Qm0bSlr23dJB9jj8/Ovl+fz61eezPZ0+UUOazF5M2McibSweoTX9py77Q
n89+zJ8fk/yldAi1SZlIPt/sZaTzsbeWDrAPla7LvkI6jP20dGf2D9KW/ZvE
sl4s8krSJjZ5B9+pzRhpy75OOpz9knSQ3SSRrwf2LNImDnkNaUttuvgel3yS
79Rmq+/xyK/7Tm1iJBWPT55L2lKb+r4nIP89qTz+UpuZSeXxl32XP5/9noxf
zB4vmTz+shdMJuuHkDdOJutTmz9lfAP2uTLesh+U8YvZn/jrsydJLusnJC+e
XNanNi2Sy/rsA2S8ZV8s4xez/yvjz7C/9tdPRJ4qhaxPbQIpZH32n1LI+uzD
Zfxi9pUy/gz7WRlvEpN/9NenNulTyvrslVPK+uy/pJT12cfK+DPsG2S8SUJ+
WTpAbSKnkvXYs0oH2WtJm6TkXaUD1GaKP599mz+f/aY/Pxl5zNSqTR7d9lvw
P8Bnge8Bvw+eII32QrpNU/C+4PPBD4E/A0+aVntJ3TYMfBD4EvAT4G/A06TT
Xk63aQs+Anw1+Dnw/8AzfKO9qm7bEXw8+Ebwq+BRQrVn121rg/8GPhV8B/gt
8NjptefVbRqA9wIPB98L/hA8JIP2IrptM/B+4P+AHwF/Dp48o/ZSuk1L8MHg
y8BPgr8DT5tJewXdth34KPA14BfAP4Nnyqy9mm7zK/gE8M3g18CjZdGeQ7ep
C94dfDp4EPwOeJys2vPrtg3Be4PPBt8P/gg8UTbtRXWb5uB/gS8EPwr+EjxF
du1ldNtW4EPBl4OfBn8P/k0O7RV1mw7go8HXgV8ENzm1Z9ZtaoB3Bp8EvgX8
Onj0XNpz6bb1XEfteWjLNvbfxW1y8hnSoSnId0kHqe1d6bCU5PFyy/qpyAu4
dv+/NRO1aezaZTX2Pq7d/2/tyD7XNb1/KvsB1/R+qOxPXNP7m7InziPXS01e
PI9cj9r+kEeuxz4gj1yPfVEeuR77v3nkeuyv8sj12FPlleulIS8rHaA2P0lb
9mHSQfaV/vy05Gf8+dTmoz+fPTSfzGevLG3Skf8sHaA2Y6Ut+3p/Pvtlf/43
5JHyy3xqk1XasteUDrJ3lTah5JP9+dRmmz+f/YY/nz1mAZmfnjy3a/rvV2rz
rWv671f2njLess+S8YvZd8v4M+z3/fUzkMcvKPujNoWkLXsT6XD2vtJB9nnS
EeyHpE1G8qf+eGqTtJCsn4m8hHSQ2oRJm8zkA6UD1GaJP5/9uD+f/Y0/Pwt5
6sIyn9qUk7bsbaSD7COkTVbyVf58anPOn8/+yZ/PnqGIzM9GXkU6QG06Slv2
cdJB9o3+/OzkV/z51CZKUZnPnk06yF5b2uQg7yadj9pMlQ5j3y49hv2Wvx57
rGJeP2PPKx2ak/w76brUppe0Zf/btft9n2Pse13T7wflIn9QzPt67UBtQorn
837/iL2wazc8Rm7yZsXl65/aWtfu94/msv/jmn5/iv1wcTm/POTPi3v7GUVt
k5Xw9nOZvVQJ+X7LS/5jCW8/PanN4BLefvazLy3h7SdpPvKTJbz9tKK2b0t4
+1nFnrakfH7yk5cv6Xl+atOupMxnH1nSW38i+5qScn328yW9/b1j/1xS9l+A
PGMp7/6+pzbVSsn9s3cqJZ9v9gml5PzYN5Xy9pOxIPm1UnL+1DZqaW8/g9lz
lJbPH3ud0t5+HrB3Ly2f/0Lk00p7+6lNbYKl5euH/bZ0kD1OGTm/wuT5pAPU
pqG0Zf+fdJB9tj+/CPk+fz61eeTPZ09Y1usD7EWlQ4qSfy/dmNr8JR3OvkD6
HvtR6XzFyF9I96Q2KQKyX/bS0jGLk7eSrktth0hPYV8uHcF+SjpbCfL30p2p
bbpyXm9kryhtSpK3lw5Qm9HSln2tdJD9oj+/FPkXfz61yVxe5rNXlw6yd5Y2
pcknSgeozRZ/PnuEP74MefQK4tQ2p25TD7wH+AzwneB3weNW1F5At20E3gd8
DvgB8MfgiStpL6bb/ADeH3wR+DHwV+ApK2svq9u2Bh8GvgL8DPgH8NAq2ivp
Nj+DjwFfD34JPFJV7Vl0m5rgXcAng28FvwEeo5r23LptffCe4DPBd4PfA49f
XXtB3aYJ+J/g88APgj8FT1JDewndtgX4QPDF4MfBX4Onrqk9oNu0AR8Ovgr8
LPin/3N11+FVHGsAxgcr7u7u7g7BXYo7wd3dB3d3Le7uTqC4FffibheKFO/N
zuzkeb43/733N7szszmc3J7knIWnrCK9nGzdET4Nvgv+Nzx0VekZZOsq8B7w
OfCD8EfwiNWkZ5OtasH7wf+AH4W/hEevLj2vbN0AruEr4Gfg7+DxfpdeWLZq
Bh8FXw+/CP8XnqSG9JKydRv4RPhW+A34T3jqmtLLy1ad4dPhe+B34WFrSc8o
W1WD94TPgx+CP4FHqi09h2xdGz4Avhh+HP4KHrOO9HyyVSP4UPgq+Fn4P/D4
daUXla2bw8fAN8Avw7/Ak9WTXkq2agefBN8Ovwn/D56mvvSKsnUX+Ez4Xvh9
eLgGwd26yZyJj61n9rpB19EZKhU3Xt3rasN6/7nFtOrtdekZrZokCDA+3+sC
K2t9HWxaHfY66+5SM55Yf+p1qtO5slcuYTxKw+COdyfl6a2mdU6vI7+N0Sph
SeN1G7r1mdYDvfb+c2iH9aVem//esX7CjU9RyvgbN762aR2rkT9+nPUCjfzx
QdYbN/LHf7I+3I3PVNr4ajc+0LQ678bPtP7BjT9tPWFjf7wqY7yY197rfVlN
q5Zem/drWB/rtff64Fjrm7w2r/9Zv+K19/LgY+vfvDbvBylrPHkTf74A06pM
E3++TtbbN/Hnm299ShN/vlPWdzTx5/ts/XYTf7405Yyrpv58NUyrdE3d98d6
JddB1ru5VuWNz3IdYFrtDzne+oOQ462HD3THVzCexXWAaVXDtbbex3WQ9YUh
x1c0fiTkeNPqecjx1qM2c8dbz+1aVTJez3WAaTXYtba+LOR466dCjq9s/G3I
eNMqTnPnVYwXdK1Nq6YhXtX4iObu8WharW3uHt/W/wo53vonN36t9UQt/PFX
rQe0cOevZrxVC3d+02q8G1/b+mY3Xlu/5savtf495PzWU7Z0569uvGxLN960
6tjSnf9341NDxtcwvitkvGl9J2R8TeOhW7nxtYynd53AtKriOof17q7LW5/j
OtD6Add9rT9yPcV6hNZ+r7aezXWQ9Zqub1jv5/qd9UWuI9Q2ftR1CtP6hesC
1qO38bu69Tyu21pv4FpbH+Ja1TG+IsRN69MhXtf4uxA3reO2dV7PeGHX2rQO
dB1kfVTI+PrG17kOMK0uhhxv/XPI8daTtHPHNzBewnWAadXGtbY+wfVm61td
37d+3XWMhsZ/hpzPtE7V3u+u1su7Xmy9k+sL1qe7Vo2M73adw7S66zrQepgO
7vFiPaPrIOtVXb+z3tN1isbG57qublodcq2tP+7gPx8ftR6po//8HbGJ8ewd
/ef7KqZV7Y7+8/U06/07+s/v16wv7uj/PEjc1Pixjm4/ptWrjv58y63H6OTP
98J6vk7u51mg8Yad/Pm6m1ZDO7mfX9ZXdvLn+279bCf3/Wlm/H0nf74RplX8
zu7nk/Uinf35ojY33ryz+3lkWo/u7M83y/qGzv58t61f6uyudwvjXzr787U0
rZN28edbY71UF3++N9bbdvHny9XS+KQu/ny9TettXfz59lm/2cU9floZ/+U6
wLRK09V9f61XcH3fehfXAa2Nz3C92LTa61q1MX7Pa+/t02VNq3Ddctj3S0+w
nslr8/Zy69W99t5fnbCt8V7d3PfftJrfzT/fSutB7nyvrT9158vdznjk7v75
+plWObu7x7/1Ot398/3W3vjA7v75KpvWS7r755tu/YQ7303rr935UnQwHquH
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
ttcDsoybEKaL8VB3g3vrkJ/nm5jW6bx+calrzL3WK3udIt3jmnG7Gu/mdb1+
dWd1Na1mez3p7OkbZ6zv9/p48mKJ03cz/tDrn923NB5mWoe/F9x5jqdZ/Lf1
rF53SDjnYYHuxmt4vbRj5LQzTKu+Xt88NLjN/6wv9DpG7H/WVOxh/E+vy7Vu
9XqFaf3c68F7bmQL1dN4tPvBvTNK5W6NTOvcXr9uemjbLuv1vU6zLdfnWL2M
D/a64W8rC3Q2rZZ7Pa1+wgGnrJ/y+tT6CQfS9Db+v/vu+2Nax3mQw38/lPVC
Xpv3W1lv+sAfr/oYH+nGZzKt17rxta1fcOO19U8h57ee+KE7v/WAh+78fY23
fujOb1qPd+NrW9/ixmvr11wHWf8Rcr5+xlM+8jvAtCrnWlvv6DrI+jTXqr/x
XSHHm1Z/hxxvPfRjf307rGd47K//pfUqj/3xKQYY7+HG1zat57jx46wfdOOD
rD9y4z9Zj/jEXZ+BxrM98ccHmla1nvjjZ1rv58aftv6HG68GGT/qxuc1rV66
8e2tR3/qj19sPe9T9/2z3uCpPz7SYOPajQ8wrVe48b2sn3Hj11p/58bftx7v
mT8+7hDjhZ/54yuaVs2euetvfZQbv8P6ejf+pfWLbnwKbfxfN762aZ3kubv+
1ks+d9ffepvn7vpbn+jGZxpqfKsbH2ha3XDjZ1r/6caftp76hbv+w4yXdx1g
WnV2ra1Pdx1kfU/I8cON3/XavN/FtAr7Mod/f0PrGb323s7y1Ho1r837a0YY
7/nSzWdazXvpn++s9UPufAlHGn/iztfatI70yj/fNus5Xrn1jTJe2+v+i571
S2ZaDfD6Y5G/PhSxvthr835l68e9ft4v+ADrr9z5tPWYr0XrfLJVI/hQ+Cr4
Wfg/8PhvpBeVrZvDx8A3wC/Dv8CTvZVeSrZqB58E3w6/Cf8PnuZ/0ivK1l3g
M+F74ffh4d5JzyxbV4f3hs+HH4Y/hUd5Lz2nbFUXPhC+FH4C/gYe6x/pBWTr
xvDh8NXw8/AP8IQfpBeTrVrCx8I3wa/Av8GTf5ReRrZuD58C3wG/DVefpKeT
rSvBu8FnwffDH8DDf5aeRbaqAe8DXwg/An8Oj/qv9NyydT34YPgy+Cn4W3ic
L9ILylZN4SPga+F/wT/BE32VHiBbt4KPh2+GX4N/h6f8Jr2sbNURPhW+C34H
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
w7QakM9dD+uL87nr8Zfx4/nc9TCtX+Vz18N6zPzuelwwni+/ux6mVaP87npc
ND7Ua/P6s2m1ymvz35/Wz7rx2vo/bvxa6/EL+OOvWi9awJ3/kvHmXnuvl4U1
rcZ47b3cFtH6Bq+91/OiWb/stXk9zfoXr73X5xJYT1Ywp329L6n1Ul57r7el
st7Oa/P6nfVJXnuvB2axvt1r7/W4nNZveu29vpfP+n9em9cLracp5P79Wa9Y
yN9PaetdCvn7qWB9ZiF/P1Wt7y3k76em9fuF/P3Usx6usL+fxtYzF/b309x6
9cL+ftpY713Y309H6/ML+/vpZv1wYX8/va0/LezvZ4D1KEXc99N6TtmqLnwg
fCn8BPwNPFZR6QVk68bw4fDV8PNeN6qW8P5p6x+87hM/box2l40nLBbc0+7F
CAh/xXgxrzeuitJ1hWnV0utTXSIsLnXV+FivH+cPe+GBabWpmJvvmvErXpu/
DzKtvnlt/p7ouvHkxXP6f99jWpXx2vw90A3j7Yu785lWU4q781nfUdyd76bx
2yHnM61VgDvfLePpAtz5TOtKXk/Itvf5MOvdvI7fuOfFkdZneb1sfLa9Y6zv
9zp4+NLx1h947eUk6+FLBHfZ4BNMtZ7F60tl4jeeYb2G18GnLzPbeh+vXywd
n22e9YVeB3P8hdaPlHA/760/L+Gvd6n1qCX99a6wnrukv97V1uuV9Ne7zvrg
kv56N1pfVtJf7xbrp0r6691u/W1Jf727rMcp5a93r/WCpfz1HrDetJT7eWp9
RCl/vUesry3lr/eY9b9K+es9af1TKX+9Z6wnKu2v97z1gNL+ei9ab1XaX+8V
6+NL++u9bn1zaX+9t6xfK+2v92/r30v7671vPWUZf70PrZct46/3ifWOZfz1
Prc+tYy/3lfWd5Xx1/vW+p0y/nrfWw9d1l/vR+vpy/rr/dd6lbL+er9Z717W
X+9P63PKup8Pt40fkK0ewSOUk55Ntq4J7wdfBD8KfwGPXl56HtmqAXwIfAX8
NPwdPG4F6YVl60D4KPg6+EX4Z3iSitJLyFZt4BPgW+HX4T/hqSpJLy9bd4JP
h++G34WHqSw9o2xdFd4TPhd+CP4YHqmK9OyyVW14f/hi+DH4K3iMqtLzydYN
4UPhK+Fn4e/h8atJLyJbNYePhm+AX4J/gSetLr2UbN0WPgm+DX4T/gue5nfp
FWSrLvAZ8L3we/BwNaRnkq2qw3vB58OD4E/hkWtKzylb14EPhC+Bn4C/hseq
JT2/bNUYPgy+Gn4O/gGeoLb0YrJ1C/hY+Eb4FfhXePI60kvLVu3hk+E74Lfg
qq70tLJVJXhX+Cz4PvgD+G/1pGeRrX+H94EvgB+BP4NHrS89l2xVDz4Ivgx+
Ev4WHruB9IKydRP4CPgar0NN3NermPW/vO5RetySwdY/ev34e71zB60nahjc
dbal//rLenGvT7b/nKb4HeOtvC6U6lj1Iab1OK/X3Zw+8JD1zV4nndp89X/W
r3o9qXzOK8X/Nv69ob8+bVqnaBTcowKTdrprvazXUQ4XulXkrvEOXk9PWa/c
fNNqqtcJh/Xa/tX6Tq8XP5yWst4943e8Tldq86SdpnWoxsG9ftm573HuG0/v
da6wr9r2MK0re72nZYRrF61397r4sbSlcjwwPtvr4Nw8ybQ64HXl4AW/sf7Q
6yZVD5/J+NB4hCbBXetd90hNTOusXpv75Viv6XXxPNdGH7fe12svv1lf5HWm
vgXDZX9k/E+vkyd6VaqFafXC67j7FwybbT1a0+CO5C3Aep6m7vv/2Hh91wGm
1RDX2vpy2eq015MP7Gh2y/r/vK7cI/6PvE+Mxw305svYb9ZU07qQ1yfu3srx
xnqg1yNnFDlT/qnxkV6XrLio1XLTal2gW98z4xdkq8/wxM2kl5CtW8MnwLfA
r8N/wFM1l15OtuoEnwbfDf8bHqaF9AyyVVV4D/hc+EH4Y3jEltKzy9a14P3h
f8CPwV/CY7SSnle2agjX8JXwM/D38HitpReRrZvBR8PXwy/B/4UnbSO9pGzV
Fj4Rvg1+A/4Lnrqt9AqydWf4DPge+D142HbSM8nW1eC94PPgQfAn8MjtpeeQ
rerAB8CXwI/DX8NjdpCeX7ZuBB8GXwU/B/8HnqCj9KKyVQv4GPhG+GX4V3iy
TtJLy9bt4JPh2+G34P/B03aWXlG26gqfCd8Hvw//rYv0zLLV7/De8AXww/Bn
8ChdpeeSrevCB8GXwk/C38Bjd5NeQLZqAh8OXwM/D/8IT9hdenHZuiV8HHwT
/Cr8GzxFD+llZKsO8CnwnfDb8FA9paeTrSrDu8Fnw/fDH8LD95KeVbauAe8L
Xwj/E/4cHq239NyyVX34YPhy+Cn4/+Bx+kgvJFs3hY+Er4VfgH+CJ+4rPUC2
ag0fD98Cvwb/AU/ZT3o52bojfBp8F/xveOj+0jPI1lXgPeBz4Afhj+ARB0jP
JlvVgveD/wE/Cn8Jjz5Qel7ZugFcw1fAz8DfweMNkl5YtmoGHwVfD78I/xee
ZLD0krJ1G/hE+Fb4DfhPeOoh0svLVp3h0+F74HfhYbX0jLJVNXhP+Dz4IfgT
eKSh0nPI1rXhA+CL4cfhr+Axh0nPJ1s1gg+Fr4Kfhf8Djz9celHZujl8DHwD
/LLXa2K9jxzD+heva439Eq689WQj/PHaeinZqh18Enw7/Cb8P3iakdIrytZd
4DPhe+H34eFGSc8sW1eH94bP9/pNxVCLJlk/7PXWHkWTPLf+1Os+C/rNK/Hc
eJTRwV3k2I4E803rnF6rt+9nfbRe1+vj8bLFrfrC+ECvxxVvP32VabXU62pt
V8YM9dL4Ca/jTH04uYFp9cbrm3uSRdtuPdaY4F70sMGEqK+MF/C6ReTZkdqY
1o29zpDn8pgg68O9ft0oevhEr42v9nrLyEoje5hW573uvXF0mHPWP3hd+Pqf
Q9O9MZ5wrLs+pnUx15utt3R93/pY1zHeGt/kOsC0vuK6q/VvrhdbTz7O7wvW
y7hW/zPe3mvv96uVTKspXpvfn1vf4bX5fa312157v3/N9s64Gp/T/j61v2mV
zmvz+2frlbz2fj8b873xbl57v29tbFrP8tr8Pt36fq/N72+tPxjv9vuP8fAT
/PWON62zTPDXe916jQn+elN9MN5ngr/ezqbVwgn+evdaPzLBX2+4j8afT/DX
+7tpHXWiv96F1nNP9Nf73Hq9if5683wyPnii+/6a1stcn7R+ynWMz8bfuq5n
WsWZ5L5/1gu6fm69qesc/xof4bqvabXWdZD1v1xH+GL8k+vqpnWiyX7PsR7g
+r71Vq4zfDU+3nVX03qz693Wr7lW34x/99r7e6xCplXKKTn9zxOyXnaKe/xb
7zjFH//S+lQ3Pu1347vc+EDT+o4bP8966Kn++KvW00911/uH8SpT/fEVTevu
bvxI63Pc+CDrB9z4b9YfufF5fxqPMM1dD9Mq2zR//FrrNaf5459Y7+fGp/hl
fJEb38C0OurGz7T+wo2/YD36dH98pP+M55nujy9jWjWY7h5/1oe4vm99hesA
dcTz064Xm1bvXKtQxuPOcONNq8KutfVA10HWR7lWoY2vCznetLoYcrz1zyHH
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
9ca7mXs9sN7L60jrfiT9x/p8r1v2OXc8dCzjQV4HlVrUJbZp9dTrxDG6JEhj
PXKe4O59p/jhPNZzen1xdYz2ZazX8TpLrwex6lgf6PXoElv3tba+xOuHUYe3
7GP9hNdFb9WMOsb6a6/nrEyzc471WHmD+0P3T03WWM/vddXix8Pvtd7Y6zWR
Z28+bX2Y12FvtKl/2/pqrwOXFwj92vo5r/d2jbjuh/UPef3rr2IbT5BPtCom
W7fw+sXUtO8HWh8b4nGMb3StTasrIR7X+FfXAaZV8vxuvPXSroOst3et4hmf
7LV3//MKptUOr83nmVu/5bV3//Tb1lWBXP791eMbT+u1ud+7aVXJa3P/eetd
C7j5EhifVcDNZ1rvK+Dms/6ggJvP+m8F3XwJjWcp6OYzrX8v6Oaz3qegmy+R
8QWuE5hWR1znsP7MdXnrUQv5HWg9l+u+1uu5nmJ9kOvV1pe5DrJ+0vUN629d
v7Meu7DfERIbL+g6hWndxHUB6yNcV7e+xnVb63+51tY/ylaJikgvLlu1go+D
b4ZfhX+Hpygqvaxs3QE+Fb4Tfgceqpj09LJ1ZXh3+Gz4AfhDeITi0rPKVjXh
feGL4H/CX8CjBUjPI1vXhw+BL4efhv8PHreE9EKyVSB8JHwd/AL8MzxxSekl
ZOvW8AnwLfDr8B/wVKWkl5OtOsGnwXfD/4aHKS09g2xVFd4DPhd+EP4YHrGM
9OyydS14f/gf8GPwl/AYZaXnla0awjV8JfwM/D08XjnpRWTrZvDR8PXwS/B/
4UnLSy8pW7WFT4Rvg9+A/4KnriC9gmzdGT4Dvgd+Dx62ovRMsnU1eC/4PHgQ
/Ak8ciXpOWSrOvAB8CXw4/DX8JiVpeeXrRvBh8FXwc/B/4EnqCK9qGzVAj4G
vhF+Gf4Vnqyq9NKydTv4ZPh2+C34f/C01aRXlK26wmfC98Hvw3+rLj2zbPU7
vDd8Afyw1/u2dzn+zvozr+9lW1CsZRLjUX4P7jBrTu68blrl8jpD6k/ZKiU1
XtfrygtTrjpoWg3yumv8qslzJTO+1OsZU/vPXmFanfR6d+RV0RMmN/7G6zsj
L4+eYFrFruGvT6UwXsBrc79d06qJ1979dsdaH+61d7/d89bXeG3uH5zS+Hmv
zf12TauPXnv3211oPWHNXPZ+uw+tF/fa3D84lfGWXpv77ZpW47z27re7xfom
r7377X62ftVrc//g1Ma/1XTX27RKUcvfz1HrZWr5+4mYxniHWv5+qprWU2r5
+5lufWctfz83rN+u5e8naVrjoWr7+2luWqer7e9nlfXKtf39vLberba/n5zp
jM+u7e+nt2m9v7a/n33WH9Z235/0xsPXCe6Ckx4VmGRaZfXafJ5dBuM1XFc2
rfq6nmB9oeuz1v8MOT6j8echx5tW0eoGd8oRMUqOsZ7b6+MJWkzYYr2+1x02
7Lh2y/pgr2OUjJAybCbjy73eea1Bh6ym9SmvGwYfUMf6/+q675f1OPWCe8ST
RWVvWC/kdcQzRSfmyGy8qdcTN9+5PMa0Gul1rFkDEj2wvtbr4GxWMIvxC/Xc
+k3rT/Xc+q0nru/Wbz2gvlt/VuOt67v1m9bj67v1W99S363f+jXXQdZ/uFbZ
jKds4HeAaVXOtbbe0XWQ9WmuVXbju0LGm1Z/h3gO46Eb+p3CtMrgOsB6FdeB
1nu41tbneO19/uFN6we9Np+PmNP4o4bu8WRaRWyUy/98RevZGrn5chmv1cg/
31zTul8j/3wfrP/RyD3echs/6s630rR66c6n8hiP3tid37TK61pbb+A6yLp2
rfIaXxFyvGl1JuR46+9Cjrcer4k7Pp/xwq4DTKtmrrX1Ua6DrK8POT6/8Ysh
x5tW/4Ycbz1JU3e89ZKuVQHjbZq65yvTamJT9/xqfWtT93xj/UZT9/xY0PjP
pu753LRKHeie36yXD3TPx4WMdw50z0+m9fRA93xqfU+ge/4vbPxuoHs+NK3C
NnPP39YzNnP7KWK8WjO3H9O6ZzO3H+vzmrn9WD/UzO2nqPEnzdx+TOtIzd1+
rOdo7vZTzHjt5m4/ptWA5m4/1hc3d/spbvx4c7cf0/pVc7cf6zFbuP0EGM8n
WzWCD4Wvgp+F/wOP31J6Udm6OXwMfAP8MvwLPFkr6aVkq3bwSfDt8Jvw/+Bp
WkuvKFt3gc+E74Xfh4drIz2zbF0d3hs+H34Y/hQepa30nLJVXfhA+FL4Cfgb
eKx20gvI1o3hw+Gr4efhH+AJ20svJlu1hI+Fb4JfgX/z+nrBi/fjWk/eIbgX
xNqVppT1Ml43e7WgbVfr7b1Od3TY+oXWp3j9ekHbd6et7/B6c6+qeb5Yv+11
76p5+qYtYVx19P59p0+0v4Zpla6je362Xkm26gafBd8PfwAP30l6FtmqBrwP
fCH8CPw5PGpn6bll63rwwfBl8FPwt/A4XaQXlK2awkfA18L/gn+CJ+oqPUC2
bgUfD98Mvwb/Dk/ZTXpZ2aojfCp8F/wOPHR36ellqyrw7vA58APwR/AIPaRn
k61rwvvBF8GPwl/Ao/eUnke2agAfAl8BPw1/B4/bS3ph2ToQPgq+Dn4R/hme
pLf0ErJVG/gE+Fb4dfhPeKo+0svL1p3g0+G74XfhYfpKzyhbV4X3hM+FH4I/
hkfqJz27bFUb3h++GH4M/goeo7/0fLJ1Q/hQ+Er4Wfh7r9e1HB+zSEnj8QcE
97TnNZb8MK2LeN2/Y6KcB0oZb+5183cPggaVNj7a6wo911QvVsb4Bq9zful6
/5dpfcnrBAMLdD1U1viXAW7+csaTDnQ/X8sbL+Vam9ZtQ7yC8UkhblpvC/GK
xm+GuGn9K8QrGU8zyLlpXcFr7+WLR9a7eJ3kRLck5Sobn+G1ud+IabXXa+/1
jmhVjN/zOnj4iW6mVbjBufz7o1jP5PXj4NMXqGq8utfdg4cvMK17DXbrq2Z8
/mB/PS1M66DB/npOWH862F9PpurGIw/x1zPJtMo5xF/Pe+t1hvjrqf278YFD
/PXsNq2XDPHXk6SG8RND3PUxrV+7VjWNx9LOTev8roOsN3atahkf5jrAtFod
crz1cyHHW/8Qcnxt4wmGilbFZOsW8LHwjfAr8K/w5MOkl5at2sMnw3fAb8HV
cOlpZatK8K7wWfB98Afw30ZIzyJb/w7vA18APwJ/Bo86Unou2aoefBB8Gfwk
/C089ijpBWXrJvAR8DXwv+Af4YlGSy8uW7WCj4Nvhl+Ff4enGCO9rGzdAT4V
vhN+Bx5qrPT0snVleHf4bPgB+EN4hHHSs8pWNeF94Yvgf8JfwKONl55Htq4P
HwJfDj8N/x887gTphWSrQPhI+Dr4BfhneOKJ0kvI1q3hE+Bb4NfhP+CpJkkv
J1t1gk+D74b/DQ8zWXoG2aoqvAd8Lvwg/DE84hTp2WXrWvD+8D/gx+Av4TGm
Ss8rWzWEa/hK+Bn4e3i8adKLyNbN4KPh6+GX4P/Ck06XXlK2agufCN8GvwH/
BU89Q3oF2bozfAZ8D/wePOxM6Zlk62rwXvB58CD4E3jkWdJzyFZ14APgS+DH
4a/hMWdLzy9bN4IPg6+Cn4P/A08wR3pR2aoFfAx8I/wy/Cs82VzppWXrdvDJ
8O3wW/D/4GnnSa8oW3WFz4Tvg9+H/zZfembZ6nd4b/gC+GH4M3iUBdJzydZ1
4YPgS+En4W/gsRdKLyBbNYEPh6+Bn4d/hCdcJL24bN0SPg6+CX4V/g2e4g/p
ZWSrDvAp8J3w2/BQi6Wnk60qw7vBZ8P3wx/Cwy+RnlW2rgHvC18I/xP+HB5t
qfTcslV9+GD4cvgp+P/gcZZJLyRbN4WPhK+FX4B/gideLj1AtmoNHw/fAr8G
/wFPuUJ6Odm6I3wafBf8b3joldIzyNZV4D3gc+AH4Y/gEVdJzyZb1YL3g/8B
Pwp/CY++Wnpe2boBXMNXwM/A38HjrZFeWLZqBh8FXw+/CP8XnmSt9JKydRuv
x00aFWeB9YleD04T1KVIHeNbve629+vpO6bVDa9bVs+dblBd4z+9rve049Ck
9YynXhfclQauvHPAtC7vdfFY9/M3qW+8s9e5Viec/su0nu51umI13y5qYHyP
1wmvTKhQvKHxu15HaX98+T3TKux6f/26kfGMXpu/LzGtqnlt/r6ksfGeXpu/
LzGt5nlt/r7E+iF3voAmxp+48801rSNt8M/3wXqODf75Kjc1XnuDf76VptWA
De76Bhpf7LqraXXc9X3rr1xXb2Y85ka/g0zrfK5zNDfeyPVi03qo6xgtjK9y
rU3rs16b1wut/+O1eX3RevxNufzXI1saL+q1ef3StG7utXm90/oYr83ro9Y3
eG1eT21l/LLX5vVX0/rLJrce68k2u/VYL7XZrcd6u81uPa2NT9rs1mNabd/s
1mP95ma3Huv/bXbraWM8zRa3HtOq4ha3Hutdtrj1WJ+5xa3H+t4tbj1tjd/f
4tZjWofb6tZjPfNWtx7r1be69bQz3nurW49pPX+rW4/1w1vdeqw/3erWYz3K
Nree9sZzbnPrMa3qbnPrsT5wm1uP9aXb3Ho6GD+xza3HtHqzza3Heqztufz7
t3c0XsBrc39307qx1+b+752MD/fa3B++s/HVXpv7x3cxft5rc3950/qD1+b+
812NJ9yRy78/fTfjxbw29683rVp6be5v39342B3u328P45t2+Ov9aFpf2eGv
d3VP4992+Ott3Mt48p3+emP2Nl5mp7/eY6Z1+53+evv3MT5lp7/ebH2N79jp
r/ehaXV7p7/e2f2Mq13+eiv1N55ul3t+GGC8kmttWnUL8YHGZ4W4abU/xAcZ
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
+AH4Q3iEFNKzylY14X3hi+B/wl/Ao6WUnke2rg8fAl8OPw3/HzxuKumFZKtA
+Ej4OvgF+Gd44tTSS8jWreET4Fvg1+E/4KnSSC8nW3WCT4Pvhv8ND5NWegbZ
qiq8B3wu/CD8MTxiOunZZeta8P7wP+DH4C/hMdJLzytbNYRr+Er4Gfh7eLwM
0ovI1s3go+Hr4Zfg/8KTZpReUrZqC58I3wa/Af8FT51JegXZurPXCSoceDXP
+gyvM+QuGD3COON7vM6fdEeuXqbVPa/Lhc9Z56H1sJmDu8779f2qjTeeyevW
tzMs3G9aV/O617HlQRknGO/l9YhNKR7PMq3neT1j7oLwYScaD/J62fAEmbuZ
1k+83tZpRtW71iNnCe4jdWN0rzTJeA6vL5WYMHO3aVXH6weZI+xJO9n4AK/f
xR1xZ5pptSSLv381xfhx10Gm1WvXeqrxmFlz++9XMK3ye23e/zDNeKOsbrxp
NSxkvPVVIeOnGz8XMt60/sdrcz8i6wmy5fbfHzDDeFGvzf2LTKsWXpv3F1gf
47W539FM4xu9Nu9PMK0vZ3P7nWX8azZ/voamdbLs/nw7rZfO7s8Xa7bxdtn9
+TqZVpOz+/Odsr49uz9fmjnGb2V3+zOt/3MdZD1tDreeucYruq5nWnV1vdn6
TNcR5hnf5zrQtL7verf133L6HWO+8cyu25pWv7sOst7bdYIFxhe47mpaH3Z9
0voz1ykWGo+Sy+++plUu1xes13WdYZHxQa61ab3UdZD1k67VH8bfuK5nWsXO
7a6P9QKuIyw23sR1oGk93PVu62tcx1hi/LzrtqbVR9dB1hPmcddnqfHirrua
1i1dn7Q+znWKZcY3ue5rWl11fcH6N9cZlhtPkdddH9O6TF73eLPeIa97fK4w
PiWvezybVjvzuse/9dt53b8X66HyuX9fK42ny+fmM60q53PzWe+Wz823yvjs
fG4+03p/Pjef9Yf53HzWw+d38602njW/m8+0riFb9YUvhP8Jfw6PVkB6btmq
PnwwfDn8FPx/8DgFpReSrZvCR8LXwi/AP8ETF5IeIFu1ho+Hb4Ffg/+Apyws
vZxs3RE+Db4L/jc8dBHpGWTrKvAe8Dnwg/BH8IhFpWeTrWrB+8H/gB+Fv4RH
LyY9r2zdAK7hK+Bn4O/g8YpLLyxbNYOPgq+HX4T/C08SIL2kbN0GPhG+FX4D
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
fDb4AfBH4FEua8+u29QE7+t6+unys+KkJl/keuGYbllXUdujrleVnXuocBry
l643Rzpc+zK1/etKaO89/uLfNmnJ87o+NiL2kN/Utr7rCyULJJiejty6vhmu
6dpM6cmXu354eLT/QWpzxvWrIZuu1sxA/s71F/8b7V5SmwRXZf8ZyQtKB1Ob
ptJ+mchHSnehNuukg9gvSsfKTP5VOoDaJrvm9Sb24tImC3lr11VeHa2cldpM
cL3wxpgFddm3uA7lV8PZb7guuDluwc3s/7keu+DGmLvsaa6HdujhN6JkJS/r
OmOvZhnyUZtOrkOzVzP2aa6PVX51dCL7btfxQhfYy37PtRv+jD38Dff4hS4f
Nxt5phve+fhTmyo3vPPpwN7jhnc+s9nn3vDO5yj7wRve+bxnf3LDO5/k2cmj
3vTOpxy1yXHTO59e7LVueuezhL3/Te98zrMH3vTO5yf78Zve+WT4m/zfm975
1KA2sW/J/cGeT7dpCD4EfCX4WfAP4Alvay+s2zYDHw2+Hvwy+DfwFHe0l9Bt
2oJPBN8GfhP8D3jau9rL67adwWeA7wEP8XVu8gj3QjvZia7JRlGbLK4LTHyU
fyJ7Vdf0/lT2Xq67hR4wn32eazd8Kfsh1/R+LfanrkOnP7GZPfr90H6cf+Kj
Xew578vzAXud+95+TrAPuO/t5zz7kvvefq6yn7jv7ecO++v73n4esccJ8fbz
kj1/iLef9+yNQrz9fGMfFiLPL3nIV4V4+4lEbc6HePuJyf4xxNtPfPbED7z9
JGMv8sDbTxr2Fg+8/WRmH/PA209O9o0PvP3kZ7/yQJ4f2H888PZThj3lQ28/
ldlLPfT2U4u93UNvPw3ZJz/09tOcfftDbz/t2G8/9PbTld088vbThz39I7l/
2CvoNl3BZ4LvA38AHumx9qy6TXXw3uALwA+DPweP8UR7bt22Lvgg8KXgp8Df
gMd7qr2AbtMEfDj4GvAL4J/BkzyTn5/s/tIh7C2lY+UlHyftT203SXdhvyYd
yP5TOpg91XP5/slHXlo6B7XpIB3APkV6MvtO6SD2O9Lv2MO+8NrvH/IM0lWp
TSVpy95N2uQnn+1zarvf5wXIH/mc2kZ+qdpk121rgPcFXwh+FPwF+F//as+j
29QHHwy+HPw0+Lt/5fu/MHn8V/J8TW0KvpLnR/aAV/J8VIR85CuZj9qu1W0u
gn8BT/ZaezHdpjX4ePAt4NfB/wNP/UZ7Wd22I/g08F3g98DDvc3N75dax57J
tXu/1E32yq7d+6UiFiXv4ZreL0Vt57yV7wf2gzLfePbHMt9u9qjvvPmesv/9
zpsvrj95rXfy/Utt+73z5uvAHvjOm28O+zGZ7zj7vzLfR/ZY7+X7rRh5vvfe
fBWpbYP33nx92Ye89+Zbwb7ivTffZfazMp8pTv5et0n4QXsh3aYZ+Cjw9eCX
wL+BJ/+ovYRu2wZ8IvhW8Jvgv8HTftJeTrfpDD4dfA/4ffAIn7Vndv30fZi6
Mdmruq5+8eDK9Ow9XR/YNPBrEfZ5rrNMLlimDnuQ61mdv8/szP7UdbgqO5+O
Yo/2JbQ7Z++ZL5A9p+s7MXKP3MVe23XZ1++uBrMPcL3t7IZ0L9gXu/Zb16Fn
mBLkJ1yPH5f5WGJq+8r1t3bP4+Vij/M1tFuWX9GiPPs/ri9marGtGXsj14Wj
pA7fn32o69XP79eYxr7KdYKTC5auZT/neujKBh+PsH90/WZk4hJ32BN9C+36
ra5P/cRexPXxUjMeRi9J3tx1rnQ1cqWjNmNcLwwfe2hh9g2uoz0+f7EW+xXX
vY+MT9WJ/bvrR0vKdx3JnvJ7aFcZGvnQQvaSrvc1PR5rJ3s71xmLDQ+4wD7J
9XS/4puesW//Lo9/KfJbukP/AKk9nW5TAbwL+EzwveAPwCP+1J5Vt60G3ht8
Pvhh8GfgMX5pz6Xb1AUfCL4U/CT4G/C4/2kvoNs2Bh8Ovhr8Avgn8CS/tRfV
bVqCjwXfBH4V/Ce435/Qftglf7KY7KVdP//4fcAB9vau3/Tae7dTafIprj99
H1AkZRnyHa5/DCiy6AK1ufNHfn6WJQ9j8nj/f5DaZHBNr6fKkVd07cYHUJtu
Mn4N+ywZ/5l9v4z3L0/+UMaPpTaRw3jjr7JnC+ON96tAXiOMN74dte0j47ez
L5TxpiL5EfFa1OaFHL+GPWZYGV+JPE9YGU9t64WV8eyDfeMrky+TrkptTksH
sr+VfsceP5ycfxXy/0lPpjYB0iHsI6RzVCVfK22pbbBr9/669exfXNP7AdmT
hs/D77eLUo28mGt6fyC1beXavf+uBft41/R+QfbN4b31gtivh/fWe83+K7y3
XtLq5KkjeOuVo7ZlInjr9WLvGMFbbxn71AjeepfYd0WQ61uD/K7rbO6L2oSL
GNr13Rd7RtejR4V+sVd2vX1b6Bd7d9cPH4R+sc9x/Zf7qkl+wHUh90VtHrt2
7xdtyx4lUh7v/aLsf7t27xc9wl7TtXu/6Dv2fq7d+0VT1CJf5Nq9X7QCtTnm
2r1ftA/7S9fu/aLL2WNFzsPvF73EnjeyXI/a5A0iy/WgtjayXA/2FZHlerCf
iSzXg/19ZLke7AmiyPWoQ14oilwPats0ilwP9lFR5Hqwr4si14P9UhS5Huxf
o8j1qEuePKpcD2pbPKpcD/Y2UeV6sE+IKteDfWtUuR71yG+4pj/vUpvfrunP
z+xpouXx/jzOXs41/fm+PnmnaPL9RG2mR/PmO8u+O5o3X+IG5PdlvlbUNnx0
b76t7Jmjy/4akleR9qc2PaUt+1zpIPYg3/GNyJ/4jqc20WLI8ew5pAPZa0sH
sfeXDmFfLG0akx+XrkptXvnmY48dU56/2P+R9m9C3lB6MrUZKh3CvlI6RwD5
OWlLbT9IB7Mn+kue75uSF5buQm2aSwexj5aO1Yx8g3QAtb0svYn9u7RpTp4i
lpw/tSkpHcjeVvod+yRp/xbk26QnU5tb0iHsf6RztCRPF1vOn9qWlw5m7yLt
14p8hnQXarNXOog9RDpWa/KIceT8qW0W6U3s1aRNG/Je0lWpzXzpQPZD0u/Y
n0n7tyWPHlfOn9rkkg5hryOdox35QGlLbZdIB7OflPZrT/5augu1iRtPzp89
v3SsDuSNpQOo7TDpTeyrpU1H8vPSVanNJ+lA9sTx5fzZi0r7dyJvIT2Z2oyV
DmHfKJ2jM/lVaUttf+g2fgmku5CXck1/HqI27V3T3093JZ/sG09tdvjGs9/2
je9GHiahjKe26aWD2StK+3Un7yrdhdrMkg5i3ycdqwf5Q+kAahspkVx/9mzS
pid5demq1KaPdCD7Aul37Eek/XuRP5eeTG1iJpbrz55bOkdv8nrSltoOkg5m
Xybt14f8lHQXavNWOog9XhI5/77k/5MOoLZNpDexj5A2/cjXJPEer1rUJjiJ
93itYf/sG9+fPGlSGU9t/ZPKePZWSWX8APJx4v+jNpvl+J7s12T8JvZfMv4l
e6pk3vh0A8nLJJPzo7Ydknnj57JPlfFX2XfK+FiDyO/K+PLUNmxyb/wI9ozJ
5fqyV0rujf/B3l3G5x1MPlvGd6E2B2T8GvZHMv4Je5QU8vha8uwpvPH1qU3N
FN74Gex9ZXww+yIZH3UI+VEZX4ravJTxlv2vlPJ4DCXPK22pbX3pIHbrGz+M
fLm0P7U54zue/Z3vePYEfnL8cPKC0v7Upqm0ZR8pvYl9nXQI+0XpWCPIv/rm
o7bJUsn1Zy8uHcjeWjqYfYK0GUm+RToHtbkhHcD+n/Rk9jSp5XzZy0q/Y+8k
7TeKfJp0VWqzW9qy30st9yt7+DTyfDmaPFMaGU9tqqSR8ew9fOPHkM/1jae2
B8XXsD/xHc8eNa1cj7HkOdLKfNS2Vlr5fmfvL+Mte6CMX8N+XMZfZf/XN/84
8tjpZH5qmy+dzM/eMJ3Mzz5Exq9hXynjr7KflfFmPPkH3/zUNmF6mZ+9cHqZ
n72Z+FX20enl+Ank633jqc1l33j2b77xE8lTZJDx1LaEdBB7W2kziXyibzy1
2ebzyeQ3pf2pzR/fePa0GWV+9vLSZgp5Z2l/ajND2rLv8R3PHuI7fip5hExy
PLXJIm3Zq0oHsfeSNtPI5/mOpzaHfMezP/Udzx49sxw/nTyntD+1qSNt2QdI
B7Ev8R0/g/yE73hq89p3PHucLHI8e35pM5O8kbQ/tRkmbdlX+Y5nP+87fhb5
R9/x1CZxVjmevYh0EHsLaTObfIy0P7XZ6Due/YrvePYfvuPnkKfMJsdTm1LS
lr1dNrmf2Sdnk/t5Lvl233hqc9s3nt1kl/HzyNNnl/HUtkJ2Gc/e1Td+PvlM
33hqs883nv2Bb/wC8kh/y3hqm9U1/XsSe3XX9PqZvbdr+vcq9gWu6fX0QvLD
Mp8/tXku87Vij5HDm288e+4c3nxb2evm8Oa7yT4oh1z/ReRLc3j7L09tTuWQ
n+/sb2R8CHu8nHK+geQFcnrje1KbJjnl8WYfLuOjLiZfI+NrUdsLMj6Q/bOM
f8meJJc3Pu8Scv9ccn2pbUvpTezjpEPYN0nHWkp+Tdqf2v6U7sKeKrfsh720
dDB7B2mzjHxKbu/xSE9tdub2Ho+K7Hdye49Hd/awebzHYw57hjxyvdgr5fHm
e8reLY83X/Tl5LPzePPlprb7Zb567I9kPsseOa88/uzZ88rxK8hr5JX7h9r0
zSvrsy/MK9drJflRmW8OtX0h831k/yufnP8q8jz55P6nNvXzyfVbTT5YOoDa
LJcOYj8t7beG/J20pbbx/5Hx7AWlzVryAGl/ajNS2rKv9R3PftF3/DryL9J+
1CZZfpmPvZh0AHtracs+XtqsJ9/ic2p7XTqI/T/f+A3kqQvI/Uttykr7sXeU
zsE+TdqffZd0VfZ70gHs4f4n9z97JmnLXll6MnsP6UD2OdKb2A9KB7E/lg5m
j1pQvj/Z/5Z+x15L2mwk76fbBIIfA/8XPFYh7fl02wbgQ8BXgJ8Ffw+esLD2
QrpNM/BR4OvBL4F/A09eRHsJ3bYN+ETwreA3wX+Dpy2qvZxu0xl8Ovge8Pvg
Efy1Z9ZtqoL3BJ8HHgT+FDxaMe05ddva4APAF4OfAH8FHqe49n90m0bgQ8FX
gZ8D/wieqIT2Irptc/Ax4BvAr4B/B09ZUntJ3aYd+CTw7eC3wE0p7el0mwrg
XcBngu8FfwAesbT2rLptNfDe4PPBD4M/A49RRnsu3aYu+EDwpeAnwd+Axy2r
vYBu2xh8OPhq8Avgn8CTlNNeVLdpCT4WfBP4VfCf4H7ltZfWbduDTwHfAX4H
PEwF7Rl024rg3cBnge8HfwgeuaL2bLpNDfA+4AvBj4C/AI9ZSXse3bYe+GDw
ZeCnwd+Cx6+s/X+6TQD4CNe/l30cUYl9reunxV8FzmcPdn0h5PHef9m/uN41
6O61/20iT1oltBcnu/Z+DLUp5nrsnvPRb7K3ct2t7okMGTeTj3fd4MvB4r2p
7WbXJafvanSc/brrbLk294m/hfyX6wTBq6e1oDapq7r9dlyyYSt7GdfPos07
FXYreUfXocMfV6O2U13vLjP+TyD7LtdLngxP8o79ruuxwwbmLbqNPFy10O6e
qlfVidQ2o+uGBzu1v8te2XWpRq1HZt1O3t119p9NFvenNnNcJ5hTd99p9gOu
/+Srdj3xDvLHrp9fKfehDbWNUj20L3YrHmMX+9+u98QqmDHSTvKarpdsyF2i
NrXp53pcxayNl7Mvct3jZdq+n9iPuW40Ovn0ErvIX7ounT7BxqnUJlYNt9+j
MU8/YM/rOmGzSE9y7CZvUMO7Pyy1ta7p/RPsK1zT5yntIT/jmt5/QW3eu6bP
X2JPUDOP9/6NveSFXNPnNVHbpjW99YLYR9X01ouzj3xdTW+9FtTmUk1vvR3s
X2t660XZT568lrdeA2pbvJa33nr2NrXk/j9APkE8G7XZ6jue/UYtb/4x7L9r
yfrsaWp7+3vMXq627P8geafa3nr+1GZ6bTl/9t21vfXmsd+vLdePPXwdb70v
7JnryPUPIq9Sx1uvOrXpWUceP/a5run9VIfIg1zT37dS2ycy3v8webS63vir
1DZHXW98uyPktevK9TtK3l+3WQx+HPwVeOx62v/RbRuCDwVfCX4O/AN4ovra
C+s2zcFHg28Avwz+HTxFA+0lddu24JPAt4HfAv8Dnq6h9vK6TRfwGeB7wUPA
IzbSnkW3qQbeC3w++CHwZ+DRG2vPpdvWAR8IvgT8JPhr8LhNtOfXbRqDDwNf
DX4e/BN44gDtRXXbFuBjwTeCXwX/Ae7XVHsp3aY9+GTwHeC3wcM0055et6kI
3hV8Fvg+8IfgkZprz6bbVgfvA74A/Aj4c/CYLbTn1m3qgQ8CXwZ+CvwteLyW
2v+n2zYBHwG+BjwY/DN40lba/XWbVuDjwDeDXwP/BZ6qtfYyum0H8KngO8Hv
godtoz2jblsJvDv4bPAD4I/Ao7TVnl23qQneF3wR+FHwl+B/tdOeV7etD27B
l4OfAX8HnqC99oK6TVPwkeDrwC+CfwVP1kF7cd22NfgE8C3gN8D/A0/TUXtZ
3aYT+DTw3eD3wMN30p5Jt6kC3gN8LvhB8CfgUTtrz6Hb1gLvDx4Ifhz8X/DY
XbTn020agg8BXwl+FvwDeMKu2gvrts3AR4OvB78M/g08RTftJXSbtuATwbeB
3wT/A562u/byum1n8Bnge8BDwCP00J5Ft60K3gt8Hvgh8Kfg0Xtqz6nb1AEf
AL4E/AT4a/A4vbTn120bgQ8DXwV+HvwjeOLe2ovoNi3Ax4BvBL8C/gM8ZR/t
pXTbduCTwbeD3wY3fbWn120rgHcFnwm+D/wBeKR+2rPqNtXBe4MvAD8M/hw8
Rn/tuXXbuuCDwJeCnwJ/Ax5vgPYCuk0T8OHga8AvgH8GTzJQu79u2xJ8HPgm
8GvgP8FTDdJeWrfpAD4FfCf4HfCwg7Vn0G0qgXcDnw2+H/wReGSrPbtuWwO8
L/hC8KPgL8D/GqI9j25TH3ww+HLw065DFn8a6sf+zvW2Q9UnLmCPPzS0xzzY
NCfJMfKCrhuF+Wv5LGob4DpXqo6b4h0nH+k6YrEze6dQ27WubwVkOhHzBPlF
1xvsqEvjqO0X18MCn9yNfJI82bDQrhNU4sUIalvMddbQDYY9Rd56mLd/S23H
Swexb5E2p8mvS/tTm/98x7OnHp7H+/su9rKu6e+32DsOl/nOkE+T8Zmp7S4Z
X4v9noy37OFGqDaZdNvK4D3A54AfBH8MHnWk9r91m1rg/cADwY+B/wsea5T2
fLptA/Ah4CvAz4K/B084Wnsh3aYZ+Cjw9eCXwL+BJx+jvYRu2wZ8IvhW8Jvg
v8HTjtVeTrfpDD4dfA/4ffAI47Rn1m2qgvcEnwceBP4UPNp47Tl129rgA8AX
g58AfwUeZ4L2f1wfnV41QfSz5I18fo58qHQItVkl7X+e/Jx0ILX5KG0ukCea
qNoU0W2bg48B3wB+Bfw7eMpJ2kvqNu3AJ4FvB78FbiZrT6fbVADvAj4TfC/4
A/CIU7Rn1W2rgfcGnw9+GPwZeIyp2nPpNnXBB4IvBT8J/gY87jTtBXTbxuDD
wVeDXwD/BJ5kuvaiuk1L8LHgm8Cvgv8E95uhvbRu2x58CvgO8DvgYWZqz6Db
VgTvBj4LfD/4Q/DIs7Rn021qgPcBXwh+BPwFeMzZ2vPotvXAB4MvAz8N/hY8
/hzt/9NtAsBHgK8FDwb/Ap50rvZium0r8PHgm8Gvg/8CTz1PexndpiP4VPBd
4HfBw83XnlG3qQzeHXwO+AHwx+BRFmj/W7etCd4PfBH4MfCX4LEWas+r2zQA
t+ArwM+AvwdPsEh7Id22Kfgo8HXgl8C/gicP1F5ct2kDPgF8K/gN8N/gaRZr
L6fbdgKfDr4b/D54+CXaM+u2VcB7gs8FDwJ/Ah5tqfYcuk1t8P7gi8GPg78C
j71M+z+6bUPwoeArwc+BfwBPtFx7Yd2mOfho8A3gl8G/g6dYkcf7fE72kq7p
81PZ27qm/6/BPsk1fd5eMPk21/T5rNTmlmt6/cr+xzV9vuhF8nQr83if30lt
y6/09hPE3mWlt5+Yl8hnrPT205Da7F3p7WcNe8hKbz/f2COu8vZT5jJ5llXe
fmZQm2qrvP08Yu+1yttPzivk81d5+7HU9tAqbz/n2Z+t8vaT7Cp59NXeftpR
m1yrvf3sYq+z2ttPpGvkA1d7+6lFbZes9vazlP3kam8/79lfr/b243+dPO4a
bz8TqW3+Nd5+7rA3XuPtJ/MN8mFrvP30oTar13j7OcF+fo23n/g3yT+t8fbT
nNomXuvtZzN70bVy/9wib7FW7h9qM3at3D/sG9fK/cN+da3cP7fJf6yV+4fa
+K2T+4e91Dq5f+6Qt18n9w+1nbxO7h/2Hevk/rlLfnud3D/UJsx6uX/Y06+X
+4e94nq5f+6Rd10v9w+1mbVe7h/2fevl/rlP/nC93D/UNtIG1SabblsdvA/4
AvAj4M/BY27Unlu3qQc+CHwZ+Cnwt+DxNmn/n27bBHwE+BrwYPDP4Ek3a/fX
bVqBjwPfDH4N/Bd4qi3ay+i2HcCngu8Evwsedqv2jK7PzszWIF8IeSXXiXI2
Oxr5AXl3163OzMx2m9rOdr215ZmZ6x+SH/DN94j8kXQItYmyTZ5PHpNnlw6k
NjWlzRPyvr7x1GaRtGU/Kh3E/tJ3/FPyv7bL8dQmr7Rlry8dxG6lzTPy5b7j
qc0Z3/Hs73SbBDu0F3TtPu9pMXtT1/R5TewjXdPvK2Vf59p9flSk5+QXXbvP
f8pEbb66ps9vYk+2Mw9/HlVH9uKu3cdJTWJv7Zp+nyr7BNf0eU7sW1y7z6f6
xH7Dtft4qQQvyP9z7T4eKj+1SbMrj/d5V+xlXbuPqxrA3sm1+7iphezTdsn1
Zd+9y7seD9jv7fKuR7iX5OF3e9cjHbXNtNu7HmXYq+z2rkdb9h67vesxjn3u
bu96rGc/uNu7HhfYn+z2rsc79qh7vOsR51/yHHu865GH2tba412P2uz993jX
ow974B7vesxlP77Hux772P/d412Pe+yx98r99Yo8n3QAtWkoHcQ+RNrvNflK
aUttz/rme0P+wefUNuE++fnHXnif/Px/S95sn6xHbUbL+MzvyNfL+BnU5rKM
N+/Jv0kHUJsU+2U+9hLSfh/I20pbajtROoR9m7T/R/Kb0oHU5o+0+USe9oCs
T23KSwexd5b2+0w+Q9pS2z26TYivv5BHOJjHe/8ytcnimj5f7yt5Vdf0/mlq
08s1vb/5G/k81/T+b2pzyDV9PiD704Nyvt/Jowd56y2jtjmDvPWi/CCvE+St
15HaDgjy1rvEviTIWy/fT/ITQd5686jN6yC5fr/I4xzyugu1yS8dwt5Iuup/
5MOkg6jtKukcv8nPSwdS24/Ssf6QJz4s15faFnG9dFz2PavYW7gunbBRj4vs
Y1y/WDIu+w/2ja7HZ9/zPLU56vyK69BcUoHa/HB9qVToBOwpj4R2j4ulEi5g
L+XaTX+MvZ3r0MPHvWGf7LqROyAM+fYj8vhQm9tHvP22YTdHvf1OYU9/1Nvv
HvYKR739PmTvetTbb7Sw5DOPevvNQ232HfX224j9wVFvvyPYIx3z9ruBPesx
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
9ylvftuPvKa06U/ez+fUdpF0EPsx3/gB5C+l/alNrNNyPHte6SD2BtJmILmV
9qc2K3zHs5/xHc/+3nf8IPIEZ2Q8tSkkHXqnO2/q2r3+bEFtRrmm15vs61y7
15fZLPkl1/T6ldp+dU2ft8qe/Gxe7/XwEPLiZ2V/1KbNWW+9tEPJJ5z11htD
bbae9dZ7zX7jrLde9WHkv8966+2gtmnOeeslHU5e7pycL7XtJB3IPl06iH23
dAj7fWkzgjz8ebn+1CaztGWvIh3E3lPajCSf6zue2gT5jmd/4pp+vzl7tAt5
vd8fPoo8h2t6fwS1qe2afn86e3/X9PvJR5Mvdk3vP6C2x13T72cfQ/7KNf3+
c2obO1j2z/5PsLefZGPJGwZ7++lDbYYGe/u5yr4y2NtPznHk54K9/Uykth+C
vf28ZE900dtPmfHkhS96+1lKbZpflOs3gXy0dCxqs0Haj/2ydA7279L+7Cku
eV2VvaR0AHtb6S7sk6Qt+zbpyey3pAPZ/0hvYk93Wa4ne3npYPYu0iHsM6Tf
se+VNhPJQ6RjUZuIV+T82bNI52CvJu3P3ku6Kvt86QD2Q9Jd2J9JW/boV+X8
2XNJB7LXkd7EPlA6iH2JdDD7SekQ9tfS79jjXpPzn0SeX7dpDD4MfDX4efBP
4Imvay+q27YAHwu+Efwq+A9wvxvaS+k27cEng+8Avw0e5qb29LpNRfCu4LPA
94E/BI90S3s23bY6eB/wBeBHwJ+Dx7ytPbduUw98EPgy8FPgb8Hj3dH+P922
CfgI8DXgweCfwZPe1e6v27QCHwe+Gfwa+C/wVPe0l9FtO4BPBd8Jfhc87H3t
GXXbSuDdwWeDHwB/BB4lRHt23aYmeF/wReBHwV+C//VAe17dtj64BV8Ofgb8
HXiCh9oL6jZNwUeCrwO/CP4VPNkj7cV129bgE8C3gN8A/w88zWPtZXWbTuDT
wHeD3wMP/0R7Jt2mCngP8LngB8GfgEd9qj2HblsLvD94IPhx8H/BYz/Tnk+3
aQg+BHwl+FnwD+AJn2svrNs2Ax8Nvh78Mvg38BQvtJfQbdqCTwTfBn4T/A94
2pfay+u2ncFngO8BDwGP8K/2LLptVfBe4PPAD4E/BY/+SntO3aYO+ADwJeAn
wF+Dx3mtPb9u2wh8GPgq8PPgH8ETv9FeRLdpAT4GfCP4FfAf4Cnfai+l27YD
nwy+Hfw2uHmnPb1uWwG8K/hM8H3gD8AjvdeeVbepDt4bfAH4YfDn4DE+aM+t
29YFHwS+1PWqU8WeLmc/5dqvU5gR1SaTv3E9O86hNP9Rm3gfQzvWTnt41RTy
Aq5HN/BvWnMqeZOPMv808uHSeajNGuk27Bek57N/lg5mT/LJ6/DTyf2l81Pb
ltId2MdJB7Jvkr7Cfk068gzyn9KFqE2qz153YS8tvYy9g/QN9inS0WeS75T2
p7Z3pHuwh/3i9Sr2DNJ32CtJx5pF3k26JLWZLd2Hfb/0OvZH0iHskb96HW82
eXbpstS2hvQA9r7Sm9gXSj9mPyqdaA75C+mK1Oavb15b9jy6TX3wweDLwU+D
vwOP/117Qd02AHwk+Frwi+BfwJP90F5Mt2kNPh58C/h18P/AU//UXla37Qg+
DXwX+D3wcL+0Z9JtK4P3AJ8DfhD8MXjU/7T/rdvUAu8HHgh+DPxf8Fi/tefT
bRuADwFfAX4W/D14wj/aC+k2zcBHga8HvwT+DTy5yae8hG7bBnwi+Fbwm+C/
wdOG0V5Ot+kMPh18D/h98AhhtWfWbaqC9wSfBx4E/hQ8WjjtOXXb2uADwBeD
nwB/BR4nvPZ/dJtG4EPBV4GfA/8IniiC9iK6bXPwMeAbwK+AfwdPGVF7Sd2m
Hfgk8O3gt8BNJO3pdJsK4F3AZ4LvBX8AHjGy9qy6bTXw3uDzwQ+DPwOPEUV7
Lt2mLvhA8KXgJ8HfgMeNqr2AbtsYfDj4avAL4J/Ak0TTXlS3aQk+FnwT+FXw
n+B+0bWX1m3bg08B3wF+BzxMDO0ZdNuK4N3AZ4HvB38IHjmm9my6TQ3wPuAL
wY+AvwCP+Zf2PLptPfDB4MvAT4O/BY8fS/v/dJsA8BHga8GDwb+AJ42tvZhu
2wp8PPhm8Ovgv8BTx9FeRrfpCD4VfBf4XfBwcbVn1G0qg3cHnwN+APwxeJR4
2v/WbWuC9wNfBH4M/CV4rPja8+o2DcAt+ArwM+DvwRMk0F5It20KPgp8Hfgl
8K/gyRNqL67btAGfAL4V/Ab4b/A0ibSX0207gU8H3w1+Hzx8Yu2Zddsq4D3B
54IHgT8Bj5ZEew7dpjZ4f/DF4MfBX4HHTqr9H922IfhQ8JXg58A/gCdKpr2w
btMcfDT4BvDL4N/BUyTXXlK3bQs+CXwb+C3wP+DpUmgvr9t0AZ8Bvhc8BDxi
Su1ZdJtq4L3A54MfAn8GHt1Pey7dtg74QPAl4CfBX4PHTaU9v27TGHwY+Grw
8+CfwBOnDu0Fn6JVeshe1PWWxpnelJpL3sL1iZOlJ62mNmNd38nVIkeMeeQb
Xb+bP+RiF2pz1XXESIu6XWH/4TpJ131x888n90sT2jlu39w2j9qWcl2y1Nda
f9jb/7+Lew+tOYzjOP4QiRbRouVEMsfOOdvsYrMz0YlcEk1Ya3LJ0kRr0iSa
9GhZLk2ylkWzYzabNS2SWy5nLpMsES2XaE0ks9zSEOH5fp/nl+/nz3evvp8/
fv8/P9OF7fEDRXXkh0yXJmTUdlKrC6YrKvLCwePkL0zX9pc8r6JWgxL/dVvB
/vLP7H7TNzuaffn15ItNd4fuXLtErbeY7qvpXeOLkh9JdN+HWl91HWPvda1O
kA+bYjtCrVJca/ZlrmPs212rBvI6755a3fLu2d959+wj/e7+JHmm6wi1KnSt
2Xe5jrE3eveN5Pe8e2r10btnj5/q7tlzXasm8rWuI9Rqj2vN3urdsz/07k+R
f/PuqdX4JHfPHnEdYy92rZrJD5g27/mSqdVZ0/T/I/Zu0+Y5XyX7L9P0no99
UsDu9bAvCNi9uBbykoDdC1OrwwG7V8x+MWD3qtlfur0Y++Cg3fvAnhS0ewmn
yZcE7d58alUWtHtl7LVBuxdlv+72uthfu70f7MNDds/fSp4asnvLqdWKkPu+
7Dtkq3rw2+DvwUclS8+SrVeCa/Am8Pvgn8DHpkifKVutA68EbwN/BD4A7kuV
Pke23gBeBX4O/Cn4b/DJ06QvlK1KwavBL4O/Ah+SJj0gW+WBbwU/Cn4D/A34
iHTpabJ1Png5eBS8E7wPfHSG9GzZahX4bvBm8C7wL+DjMqXPkq2LwPeCnwF/
DP4dfMJ06XNlq43gB8HPgz8D/wOemCV9kWy9GbwG/Ap4D/jQbOkh2Xop+Dbw
Y+Ad4G/B42ZIT5etCsB3gjeA3wXvBx+TIz1Htl4NXgHeAv4A/Ct4Qlj6bNlq
Pfg+8HbwJ+A/wSfmSp8nW2/6v/8C6hu/cg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxc3Xdczf3/x/G3UCFkb7K3skPI3rvMJITIyA7hTUZ2FEII2StkhyJkh+yQ
vcnO/p3X6/p+Pr/b63muP763x/f+Op/1Pp2uc25d5xTvN6LzACullMNipeh/
LTevNId3jZR50zNlq+3gieDfwAv9kN5Ith4IPh98D/gt8N/gJX5KbyFbDQNf
An4I/D54+l/Sy8lW7cFHg68APw7+FDzTb+mOsrUb+ETwteCnwV+D2/+RXlO2
6gWuwTeBXwD/CJ73r3QX2bov+GzwHeDXwL+DF/knvbFs5QO+AHwf+G3wv+Al
VXHhrWTr4eCh4IfBH4JnSCe9gmzdAXws+ErwWPBn4FmspDvJVl3BJ4GvAz8D
/hY8R3rptWVrD/Dp4JvBL4F/As+fQXp92ao/eBD4LvDr3MnTrc7bfm5o+T9+
cJeyDshTLb2rxYtmpL59/tvph3aWVk25z551Pto8F/lg7hIVxoUUyU++iDtg
/j7fL4XJo6m17/i0dc8cyO+yryiXL1unkuT/uM/cqTkxpjR5aWua/zzX7XnZ
cuStqVVxl9GdQyqQ+7G3f7f4+N9K5Eu5J62JqjDEkfwod9LmQRdeO5GnULv6
qvHTHKqRW9tYOjZdj1m1u1Ynr0itw/YsfTevBnknalfHzBs3xNUkH8fzp/tF
9/heizyc5z2Onspe2Zk8juc/57p+ul8d8hc8P2fo40lhdcntbGne4fTHqpfr
kVejdj1YJN3L9PXJu1HHthtnv6ZOA/LJPP/0cjG3EQ3J11NHHAvJN7OzK3kC
dYqtazGvd9T6HW/P7W2ZekGNyHNlovm1YVXylmxM7pzJWO9YauVJHTvs3oFh
hZqQB/J8qVZLSrWiVlupvSx8bxz7ZfP+mv2LbF0gs/SGsrU3+Fzw3eA3wH+C
O2SR3ky28gUPBj8Afg88nZ30MrJVW/CR4MvBY8Afg9tklV5Ztu4M7g++GvwU
+EvwbNmkV5eteoBPAY8EPwf+ATx3dul1Zes+4DPBt4Engn8FL2Qv3VW2Ggg+
D3wP+E3w3+DFc0hvIVsPBV8CfhD8PrhVTunlZOt24KPBw8CPgz8Bz5SLnh+u
b7qa5wR7FeqIwXnWJzVsSu5Grf8FjgqJpdYTqL2WfmrcuVEz8rXUrhX75spx
klrHUzvEXXlypXFz8tfUqluD6IWnqHX23PR89nbHjHZNW5DXpI6dXsjd7jS1
7kkdkX9u6QvNWpJrar0r7eucM9R6I3fTQWdatmhFfoHa6+6NZTYJ1DqV2tWP
BlqT581Dx2O9r/bMc9S6HrUKL27btHUb8r7UKVWDb1tdoNazqGPP/t0S16Yt
+Q7qiN7DJuiL1PpqHvP3aTvy77J14bzSG8vWg8AXgO8Fvw3+B7xkPuktZavh
4CHgh8EfgGfIL728bNUBfAz4SvAT4M/AMxeQ7iRbu4NPAo8APwP+BjxHQem1
ZCsP8Gngm8Evgn8Cz1dIen3Zuh94EPhO8OvgaeBFC0tvIlsNBl8IHg1+B/wf
eKki0lvL1iPAl4IfAU8Bz1hUekXZuiP4OPBV4HHgz8HtikmvKlt1Aw8AXw9+
FvwdeE4H6c6ydW/wQPAt4JfBP4MXKC69gWzlDT4HfDd4EvhP8GIlpDeTrYeA
B4PvB78HrkpKLyNbtwEfCb4MPAb8EbhNKemVZKvO4OPBV4OfBH8JnrW09Oqy
dXfwKeAbwM+BvwfPXUZ6HdmqD/gM8G3gV8C/ghcsK91Vth4APg88Cvwm+C/w
4uWkN5ethoIvBj8IngxuVV56WdmqHfgo8DDwY+BPwG0rSK8iW3cBnwC+Bjwe
/BV49orSa8hWPcGngm8EPw+eCp6nkvR6srUX+Czw7eBXwb+BF64svZFsNQh8
Pvhe8Fvgf8BLVJHeUrYeBh4Cfgj8AXh6R0t7DbTcnrOX//9uT97+/7sD+Rhq
p+qW2+iO5Cscze11Ij9hdgS1fkodtS5m1qeCnckzO1k6pWborY6e1NqR2uG8
b7nd69jdqTt6NpmQ9Rn7RCdj/2W6kEeYPZBan6aOWGG5HWZ/Y3YBN3L7qsbx
+FGrWmbHsveijtpmuWV2J59muiu13kTtRIcbyH6R2s9ytDFn2D9SR9DpZe5K
nq+asb3W1NqlmrE9zd6PuqO75baffbbpsew7Zetr4GngRapLbyJb+4AvBN8H
fgf8L3ipGtJbme3VjXyE2SnUOtRsp+7kR6i9aHnHUuuH1MGWy9vkMHvGmpZO
pIfDb/YKNc316EHesaZx/cZS67HcS0q1WhLJvoragd7OusYea95f9SR/brY/
tc5Sy/Re5FXNdqDWXc12ZQ8w24d9HXUUvZ+2iv2s6Snsb2sZx1fKgzxnbTpf
ysHUujZ1ygHLBnay965tHP8n9uk8f7Zrhqxle5NvobZvdKrV/W7U+hL7EcdF
O4PYP7PXCE+afJg9vzP5TtuC7V+zN6C2Lzu2T9FCnuT92SMeRb5vQ63msFum
jwew76LWIbQD9iRqldWygQfsP9hnWQay9yEvVse8XtS6qWw1BHwR+H7wu+Cq
rvTSslUbcD/wZeBHwR+BW9eTXkm27gQ+Hjwc/CT4C/CsLtKryVbdwSeDbwBP
AH8Pnqu+9DqytSf4DPCt4FfAv1D7rXS12+bNXrABPd4WqmK5QtgbUkdNj60a
EMc+gDpxnG767AP7XGr/mhEVy2b3Io+iDnJU+3uVodY3qMPKezUIrs/+i3pL
ydiz8W7sDg1p+0UcOv3wZW9OHZtP360cyO5LnZgjpX+/leyLqVOyuL5btof9
AHVqxohxFxLYkxuaP9/s6VxFq7KydVvwUeDLwY+Z7dCX/LHZXtTKtpH5+5W9
stmJ7F3MVv3I/c12pVZrzNbsp/5/e+yvzI5lz9bY3D57DbNT2HtQd6fn46/s
U6m38O/T/uSR5rwDtTpvztdk/2DOt2bP08Q8X/a6spUX+Ezw7eCJ4N/ACzWV
3ki2Hgg+H3wP+C3w3+AlmklvIVsNA18Cfgj8Pnj65tLLyVbtwUeDrwA/Dv4U
PFML6Y6ytRv4RPC14KfBX4Pbt5ReU7bqBa7BN4FfAP8InreVdBfZui/4bPAd
4NfAv4MXaS29sWzlA74AfB/4bfC/4CXbSG8lWw8HDwU/DP4QPENb6RVk6w7g
Y8FXgseCPwPP0k66k2zVFXwS+DrwM+BvwXO0l15btvYAnw6+GfwS+Cfw/B2k
15et+oMHge8Cvw7+A7xoR+lNZevB4IvAo8Hvgv8DL91JemvZyg98KfhR8BRw
687SK8pWncDHgYeDx4G/ALfrIr2abN0NfDL4evAE8HfgudykO8tWnuCB4FvB
L4N/AS/gLr2hbO0NPhd8N/gN8J/gDl2lN5OtfMGDwQ+A3wNP1016GdmqLfhI
8OXgMeCPwW26S68sW3cG9wdfDX4K/CV4th7Sq8tWPcCngEeCnwP/AJ67p/S6
snUf8Jng28ATwb9Sd/z0sFJcJHuhXpb27/W8ZI3X7K7UYfFvC2529CYfSH2o
8uccBcdS63nUKct+2C44wr6nl7F9NYD8JjX/+2ppavWb+r9/X2Uv7mHM+7G3
8DDml7IP9TDmj7AvMedT2A+ancp+32w1kNyqt9FO1Kqc2V7s7czW7KPNjmAP
MzuW/bjZKexPzFaDyDN5Gu1ArauY7cXuZnYE+wRP8/zY13oa53+DPd6cT2V/
bc5n9iHP3se8vtSqZh9j3pW9p9maXZsdy77R7ET2C2ansKeancqe18s838Hk
9cy2p1Z9zXZgn2W2K/sOs73Yr5odxP7d7Cj2wn2Nvs3e2Gw1hHyQ2U7UaoHZ
Xux7zfZjv222Zv9jdjB7yX7m+rC3NDuWfbjZKewhZtv7kh8225VaP+hnrFdP
9gz9jfUay16+v7l/9g79jflt7GPM+dPsK835FPYTZquh5M/MdqDWmb3N68Pu
ZLYru7vZHdknme3FHmF2MPsZs2PZ35idyp5jgLn/YeS1zHaiVh5mu7JPM7s7
+2az/dgvmh3E/snsCPZ8A83rwV7fbIfh5P3MdqJWQWa7su80uyP7dbO92NPM
1uxFB5n7Z29idiz7YLNT2BearUaQR5vtQK3vmO3K/s9sL/ZSPub+2VubHcE+
wuxY9qVmp7AfMVv5kaeYbU+tMw42j4e9otlO7B3NdmUfZ3ZH9lVme7HHme3H
/txsf3a7Ieb5sFc1O5i9m9kR7AFmb2Jfb/YO9rNm72V/Z/Yh9py+Rh9ndzY7
nr232efZA81OZN8iW10G/wxeYKj0BrKVN/gc8N3gSeA/wYsNk95Mth4CHgy+
H/weuBouvYxs3QZ8JPgy8BjwR+A2I6RXkq06g48HXw1+EvwleFY/6dVl6+7g
U8A3gJ8Dfw+ee6T0OrJVH/AZ4NvAr4B/BS84SrqrbD0AfB54FPhN8F/gxUdL
by5bDQVfDH4QPBncaoz0srJVO/BR4GHgx8CfgNuOlV5Ftu4CPgF8DXg8+Cvw
7OOk15CteoJPBd8Ifh48FTzPeOn1ZGsv8Fng28Gvgn8DL+wvvZFsNQh8Pvhe
8Fvgf8BLTJDeUrYeBh4Cfgj8AXj6idLLy9btwceArwA/Af4UPPMk6Y6ylTv4
RPAI8NPgb8DtA6TXkq17gU8D3wR+EfwjeL7J0l1kq37gs8F3gl8DTwMvMkV6
E9naB3wh+D7wO+B/wUtNld5KthoBHgp+BPwheEYtvYJs1RF8LPgq8Fjw5+BZ
pkmvKlt3BQ8AXwd+FvwteM7p0mvLVr3Bp4NvAb8E/hk8f6D0BrJ1f/A54LvA
k8B/gBebIb2pbDUEfBH4fvC74Gqm9NKyVRtwP/Bl4EfBH4Fbz5JeSbbuBD4e
PBz8JPgL8KyzpVeTrbqDTwbfAJ4A/h48V5D0OrK1J/gM8K3gV8C/gBecI72h
bDUAfC54FPgN8F/gDnOlN5etfcEXgx8ATwZPN096Wdm6Lfgo8OXgx8Afg9vO
l15ZtuoC7g++BvwU+CvwbAuk15Cte4BPBY8EPw/+ATzPQul1ZSsv8Jng28ET
wb+BF1okvZFsPRB8Pvge8Fvgv8FLBEtvIVsNA18Cfgj8Pnj6xdLLyVbtwUeD
rwA/Dv4UPNMS6Y6ytRv4RPC14KfBX4Pbh0ivKVv1Atfgm8AvgH8Ezxsq3UW2
7gs+G3wH+DXw7+BFlkpvLFv5gC8A3wd+G/wveMll0lvJ1sPBQ8EPgz8Ez7Bc
egXZugP4WPCV4LHgz8CzhEl3kq26gk8CXwd+BvwteI4V0mvL1h7g08E3g18C
/wSef6X0+rJVf/Ag8F3g18F/gBddJb2pbD0YfBF4NPhd8H/gpcOlt5at/MCX
gh8FTwG3Xi29omzVCXwceDh4HPgLcLs10qvJ1t3AJ4OvB08Afweea610Z9nK
EzwQfCv4ZfAv4AUipDeUrb3B54LvBr8B/hPcYZ30ZrKVL3gw+AHwe+Dp1ksv
I1u1BR8Jvhw8BvwxuM0G6ZVl687g/uCrwU+BvwTPFim9umzVA3wKeCT4OfAP
4Lk3Sq8rW/cBnwm+DTwR/Ct4oU3SXWWrgeDzwPeA3wT/DV58s/QWsvVQ8CXg
B8Hvg1ttkV5Otm4HPho8DPw4+BPwTFulV5Gt3MAngK8Fjwd/DZ59m/SasnVP
cA2+EfwCeCp43u3S68lWfcFnge8Avwr+HbzwDumNZetB4AvA94LfBv8DXnKn
9Jay1XDwEPDD4A/AM+ySXl626gA+Bnwl+AnwZ+CZd0t3kq3dwSeBR4CfAX8D
niNKei3ZygN8Gvhm8Ivgn8Dz7ZFeX7buBx4EvhP8OngaeNG90pvIVoPBF4JH
g98B/wdeap/01rL1CPCl4EfAU8AzRkuvKFt3BB8Hvgo8Dvw5uN1+6VVlq27g
AeDrwc+CvwPPeUC6s2zdGzwQfAv4ZfDP4AUOSm8gW3mDzwHfDZ4E/hO82CHp
zWTrIeDB4PvB74Grw9LLyNZtwEeCLwOPAX8EbnNEeiXZqjP4ePDV4CfBX4Jn
PSq9umzdHXwK+Abwc+DvwXPHSK8jW/UBnwG+DfwK+Ffwgseku8rWA8DngUeB
3wT/BV78uPTmstVQ8MXgB8GTwa1OSC8rW7UDHwUeBn4M/Am4baz0KrJ1F/AJ
1BFvU9dMesa+hjp4y8DqB/6wx1Nr7+SzqXlGkr+iHuPQ2aNiFWqVPc7SxAOa
s9eg7h5Wf2aEJ3tP6pZu+wrcG8c+ldrZvvyuPIvYN1JXurimccfN7OepCwfl
vjX3BHsqtX3Tub6nb7HnOWkcfyp7PdnaC3wW+Hbwq+DfwAufkt5IthoEPh98
L/gt8D/gJeKlt5Sth4GHgB8CfwCe/rT08rJ1e/Ax4CvAT4A/Bc98RrqjbOUO
PhE8Avw0+Btw+7PSa8nWvcCngW8Cvwj+ETxfgnQX2aof+GzwneDXwNPAi5yT
3kS29gFfCL4P/A74X/BS56W3kq1GgIeCHwF/CJ7xgvQKslVH8LHgq8BjwZ+D
Z7kovaps3RU8AHwd+Fnwt+A5L0mvLVv1Bp8OvgX8Evhn8PyXpTeQrfuDzwHf
BZ4E/oO6RkDtuj0zjSIvdsXSTQc2SP+tBLVuSu3WsdnFxS7sQ6i967ZdWrkr
+yLqMaW6eJ4bwb6feka2nmUHzGG/Sx2a5pWqNrCrREtHPh50ODyGvTR19MXh
051vsrehjj8wtk3SB3Y/6qSIgNx+mUaTL6N+OjfwfpaS1Poo9ZcxczdtdmF/
RJ2hz+IRTbqyW1+l3zetwpwfjmCvRO1QfW26SXPYO1E7Fdl0Pu8G9vHUrjY7
Q/bGsIdTd/y4z6P9TfaT1F73jpR+/YH9BbXf6bj3MzONIc96jX6/7k44WLwk
ta5GHbziij7mwt6dOiLwZqseXdknU0cNu5/z6wj2DdSx3Z7eC57DnkCd2OhN
ZKUN7O+pUyp+GpYQw57ruqVT8/yo5X2Tvc51c33ZPal30J/zW48ln0HtRn/P
X4RabzXna7BfMedbs38x5/uyF0wy5v3ZGyYZ8wvZByQZ8xvZ55rzMexR5vw1
9hvm/Cv2X+a8GkfucMPwrNSq+Q3j/gXZfW8Y8+XYF5vzNdkPmPON2ZPN+Y7s
6W7S9bszo9/TfuxlqVP2ZTqdMJa9LXXigoVldwaxj6KOHZRr7uJV7MupdzQK
ezt2F/sx6vBCRTr0jGN/TD3/67o9DZLYbW9ZOuBKmdwlX7BXph66dfs4m5/s
Xag9Ap3uvLEbT+5P3bb3/nqJxajVGmqX2nXXRFdjP0VdKccJtaIZ+yvqwm+a
9J/cnT3bbUvbnk443deXvQZ12pp25ZpPYe9B/dL/2twKi9mnUt/u3O1dtkj2
SOqESskdPh9gP099yLrv3lvn2D9Qb0l5ljsmmT3PHUuHHRkyPuIDe13qoNAP
d2ZY+ZN7UY8ZPsZlcB5qPZPau+UPyxGxb6d2KzElXbV67InUTX9beedtz/6N
usbN2Wd+erEXumvpUlF25R+OZm9EnXvu4nmnZrEPpM7gnff95hXs86m/1F/V
cf4O9j3UT/M57PM7wX6LOvFjZB73a+y/qWMvlPev84y9xD36ed24626RNPYW
1BFTq9e3yjKBfBh1cI9Da58XodZLqLWFLzixH6L2y3rSe3cT9vvUXi+anw3p
yp4+mZ5v4iw7HMxejtrVcrgeAeztqSuNvfHedRH7aOrCHXp2Kr2efQW15Wrs
y7Sf/Tg1Xb73Z9mfUr9Ntqz4XfZM9y2dTJ9f847dkfpi8Kf6q9REcjfqGMty
Ts1FrSZS76AFKcO+ljqs6LQBLeuwn6YOSsuYUKkt+2tqenjl6MNu/8DSPjuy
L/g6kr0mdfdZ9ABh70Xd0qtA5+PL2TW1s+Xhvn4b+ybqcrlL5pt9jP0Cdf73
myf4JrJ/pLalB+wT9rwPab0tP341vrG7UD+dVGtd/kyTyPtSJ7kfTf+nELWa
TR3v6DrwURX2HdTRlqeD043Yr1FHPmlVcZsb+/eHxvPJEPYiKUYHsjc2O5zd
x+z97AvMvsy+z+wX7LfNVgHkf83OTa1LPjKf/9hbme3CPtzsjuyhZnuzHzbb
n/2h2fPZMzw2OoK9gtnR7B3MTmAfa3Yy+0qzU9ljZetn4FmeSHeSrbqCTwJf
B34G/C14jqfSa8vWHuDTwTeDXwL/BJ7/mfT6slV/8CDwXeDXwX+AF30uvals
PRh8EXVaugjHnz/Yo6lvlx3z93zmyeR3qaPatby0qhC1/kcdNLpw+NBK7KVf
0PPZitQh9euzt6Z2PRFfJ1t7dj/q/M/CbB96si+lTs087NbuEexHqROdGm3S
mj2FekvXPGM7LWa3fknPpwGvmpRYz16Ruvv6Yzk/72XvRO2csPjRqVPs46jt
3w+ICk1iD6d+mavu1AHP2OOoEyxHV+sb+wvqiD6PC9vYTCG3e0XPXzMPvLmV
j1pVo+64fe6RLeXYu1E7XfWcM6EO+2Rq2+/Vurduzb6eOqWwTdlCvdgTqGMb
3/v6xpf9HXWYz+74mAD2XK/p98PCwJAFC9idqVtGd+vnuYbdk7rc3YpVHXez
B7421i+WfatsfRn8C3iBN9Ibytbe4HPBd4PfAP8J7vBWejPZyhc8GPwA+D3w
dO+kl5Gt2oKPBF8OHgP+GNzmvfTKsnVncH/w1eCnwF+CZ/sgvbps1QN8Cngk
+DnwD+C5U6XXla37gM8E3waeCP4VvNBH6a6y1UDweeB7wG+C/wYv/kl6C9l6
KPgS8IPg98GtPksvJ1u3Ax8NHgZ+HPwJeKYv0qvIVm7gE8DXgseDvwbP/lV6
Tdm6J7gG3wh+ATwVPO836fVkq77gs8B3gF8F/w5e+Lv0xrL1IPAF4HvBb4P/
AS+ZJr2lbDUcPAT8MPgD8Aw/pJeXrTqAjwFfCX4C/Bl45p/SnWRrd/BJ4BHg
Z8DfgOf4Jb2WbOUBPg18M/hF8E/g+X5Lry9b9wMPAt8Jfh08DbzoH+lNZKvB
4AvBo8HvgP8DL/VXemvZegT4UvAj4CngGf9JryhbdwQfB74KPA78ObidKiG8
qmzVDTwAfD34WfB34DnTSXeWrXuDB4JvAb8M/hm8gJX0BrKVN/gc8N3gSeA/
wYull95Mth4CHgy+nzr/pc4betxlv0ftP/rl8Gxf2VUGSycWmFL3VPap5GWo
nWJzWftXoNZtqIMHbr1aqRn7SOqXdg1XP+rDvoy65b4kn2UT2WOoI3oMqdFm
KfujDMbxRLHbZCzxv887ucReiZo/D+U1e+eMxnwGTT6emt9fzEmtVlPz+4/F
2U+a807sL02vw57V2rh/Y/bq1sZ8W/bu1sa8O/sUc96TfYM578N+zvRR7O/N
+09mz21jzAex17Ex5pew97Ex5lezzzDnt7BvMzuK/YrZh9i/mh3LXtDW6AR2
V7MT2QeYfZt9HnVKYPYGaSnsUdSxNsUCUl+x36SOnFflyMtP7L+oZ9D4L/bi
mSztHdKu1p0M08ibUzfN13vM1azUaih1uVVD957Ly76Y2tay+bhi7AepX663
7KAcezJ1QhnLHaqyW2U2rldd9rLU8y2Hs74Jeztqy9bLrGrLPoq6ba073iHu
7GHUTpbxeZ7sx6jtLYcfOIj9CXVqnOWE/dhts9Djv5nlBCawV6GOtmx+6HT2
LtShltP1nsc+gXrMVcsdQtnXZDHXkz2e2tlyOO02sb+izm+5PM12s2e3s3Qa
LcAh9hrUt+mCxrH3pI6hC3SefSp1OJ3wdfaN1AF0Asns56k96ICesadSu9IO
3rPnyWppB7rDd/Z6WY3Hg5pO7kX91HnhE2drajWLOmFk4bMj7di3ZzV//tiv
Ugc/sdwhP/s3aj/LeOFi7IWzGdejNHsjatr8worsg6hp/GxV9vnZjONxZt8r
W98C/wNeIrv0lrL1MPAQ8EPgD8DT20svL1u3Bx8DvgL8BPhT8Mw5pDvKVu7g
E8EjwE+DvwG3zym9lmzdC3wa+Cbwi+AfwfPlku4iW/UDnw2+E/waeBp4kdzS
m8jWPuALwfeB3wH/C14qj/RWstUI8FDwI+APwTPmlV5BtuoIPhZ8FXgs+HPw
LPmkV5Wtu4IHgK8DPwv+Fjxnfum1Zave4NPBt4BfAv8Mnr+A9AaydX/wOeC7
wJPAf4AXKyi9qWw1BHwR+H7wu+CqkPTSslUbcD/wZeBHwR+BWxeWXkm27gQ+
Hjwc/CT4C/CsRaRXk626g08G3wCeAP4ePFdR6XVka0/wGeBbwa+AfwEvWEx6
Q9lqAPhc8CjwG+C/wB0cpDeXrX3BF4MfAE8GT1dcelnZui34KPDl4MfAH4Pb
lpBeWbbqAu4Pvgb8FPgr8GwlpdeQrXuATwWPBD8P/gE8TynpdWUrL/CZ4NvB
E8G/gRcqLb2RbD0QfD74HvBb4L/BS5SR3kK2Gga+BPwQ+H3w9GWll5Ot2oOP
Bl8Bfhz8KXimctIdZWs38Inga8FPg78Gty8vvaZs1Qtcg28CvwD+ETxvBeku
snVf6tstrH6facM+m7qpdc3+1/qw76COjh90/v5o9mvUpQJXVn01m/07dXCj
S2FfVrEXqWhsP4q9sdnR7D5mH2JfYHYM+z6zY9lvmx3P/tfsBPaSlYy+yN7K
7ET24WYnsYeafZv9sNnJ7A/NTmHPUFm0qiBbd6BO3pv8u8lb9rHUv9ekbD7/
i30ldeF5Tzt3yhJIHkvtMv7ln1sFqfUzao/+b7d4VmDPUsXSukNql2d12J2o
I+p9+evbir0rdWzZtK2furNPok7J9dttgg/7uirG8fmzn6Hm14fT2d9S8+u/
Bew5HI35MPbajoavY/dwNO6/jX26OR/NvtmcP8Z+yZw/w/7JnE9kz+9kXn/2
+mansPc3+yV7kJOxvVT2XU7G/n6wXzfnrWaQ/zDnM1ProlWN+VzsTasa84XZ
B1c15kuxLzLnK7NHm/O12O+a8w3Y/5nzLdhLVzPmO7K3pubX713Z/aj59bsH
+9Jqxvb6sR+l5tfvPuwp1Pz6fQS7dXVjf2PZK1Lz6/dJ7J2o+fX7NPZx1Y3j
CWIPp7Z9Vzp6eTB7HHXuu218HFewvzDvv47drgb9vEcvT/Tcxl6N2mndsRnf
9rJ3q2Hs/yj7ZOqmkzK9Kx3Pvp66rY/jumMX2RNqGMd/g/0dtVdjyx3us+eq
aWkan/Gc3bmmcf4f2D2pAyybj/7OHkg941vOu23UTPKtNY3rZ0utL1OHJXo2
npSD/Qt1hOXwcxZkL1DLuP4l2BtS0+k2rsjuTR1DO6jOPreWsX4u7LupafOZ
mrHfoE62XM517dh/1jLXn92htqXflqY9sDejTrMcvs8gdt/axnr5sQfLVgfA
74Gnc5ZeRrZqCz4SfDl4DPhjcJs60ivL1p3B/cFXg58Cfwmera706rJVD/Ap
4JHg58A/gOeuJ72ubN2HOsDu8tmUAPaZ1AmV1yQ/nsO+jTp/h+Efny5jT6T2
9mtg/WID+1fqqMXZCr2KYi/kQtvf98DxzTF2V+q2SbuavjvPPpA67OuUHh9u
sc+jfpqXdsC+h9rJuVjg54/sN6l1jw/Lv/5l/019ceKJHd+zzCIvXp+OL3xR
3I/81KoFtc+xPjd/lWYfSh1tOZw/1diX1DfO35X9oGx1H9yqgfRysnU78NHg
YeDHwZ+AZ2oovYps5QY+AXwteDz4a/DsrtJrytY9wTX4RvAL4KngeRtJrydb
9QWfBb4D/Cr4d/DCjaU3lq0HgS8A3wt+G/wPeMkm0lvKVsPBQ8APgz8Az9BU
ennZqgP4GPCV4CfAn4FnbibdSbZ2B58EHgF+BvwNeI7m0mvJVh7g08A3g18E
/wSer4X0+rJ1P/Ag8J3g18HTwIu2lN5EthoMvhA8GvwO+D/wUq2kt5atR4Av
BT8CngKesbX0irJ1R/Bx4KvA48Cfg9u1kV5VtuoGHgC+Hvws+DvwnG2lO8vW
vcEDwbeAXwb/DF6gnfQGspU3+Bzw3eBJ4D/Bi7WX3ky2HgIeDL4f/B646iC9
jGzdBnwk+DLwGPBH4DYdpVeSrTqDjwdfDX4S/CV41k7Sq8vW3cGngG8APwf+
Hjx3Z+l1ZKs+4DPAt4FfAf8KXrCLdFfZegD4PPAo8Jvgv8CLu0lvLlsNBV9M
HRM0P9/iTuwHqSO/r/zi2Z89mXo+/X3JWHYrd0uPuXFw189Z7GWpvZqemZcQ
xt6Omv/eZBv7KGqnEk+aecewh1HnX/yxRLXL7MfcjeNJYX8iW9t2lV5Ftu4C
PgF8DXg8+Cvw7N2k15CteoJPpZ5fzulV0lP2jdR+b6tMdP7Ifp7aLapylvA/
7KnUNcZUCv+XaTZ5nu50PZwrVu6fl1rVo077Vf74mRLsXtTJJ8p1qODIPos6
JrBsyoJ67NupI1qUGfmxBftVap2ltJW7G/s3au8rJUMOebEX7mHppiElShUe
xt6Iuly34vunTmAfRG1byKH5k5ns86nfPih6q/kS9r3UF9cX8dm2hv0WddTA
wj+ybmf/Qx1codDckQfZS/Skx8v7AoVunGJvSe22N/8O50T2YdTO4/LVD09m
D6EuXDfv5X8v2Q9R//6Tu0//r+wPqFPicqWeSRdEnr6XpWNn5pxWIRu1Kk8d
2SpHzoUF2dtTz8hqv+FjGfYx1D5Xs9Vwr86+grrl0qynDzVkP0FdqYdd18Jt
2Z9S2xXJ8mJqd/bMHpZOTcnk/8Sb3ZE6MdI2U4uR7O7U0T42K7dNZp9IHVrJ
umK2uewR1P6pGWJGLmM/Td09On27G+vZ31C7+Fs9cN7Nbt+brodLuhHhR9lr
9TYefwnsvWSraeCbwC+CfwTP5yndRbbqBz4bfCf4Neot0Vt6/bjMnkadO6T0
pxr32Yv0sXTAyPVBfm/Ym1A/7VCs2I4f7D7UbauE739hM4d8IfUhuwJtS+al
1vuoHd4sfexZiv0OddC5nBNWVmP/S/1l86LsN13ZS3lZ2mOW3aYcHdhbUcd7
z3Fp15t9BHWlJtbXg3zZQ6nDigcOjp/AfsTLOL8g9oeyVca+0ivIVh3Bx4Kv
Ao8Ffw6epZ/0qrJ1V/AA8HXgZ8HfgufsL722bNUbfDr4Furorz9tis5jv0Tt
0vdX1Vmr2D9Tx1/81ev9dvb83vTz6fx7ZtcY9gbUiRt+7z5+kb0/tVv2P3fK
3GefQ5088U/6Re/Yd1F7Pf9T+fsf9iTql53+duuTbS75D+qhx/5OO1uUWhUb
QI+Xcv+2OzqyN6X2D/13Y3lD9iEDjPPpyL6I2meg5daVfT/1Rbp5sN+lrlHd
cuvPrgbS42mF5TaYvfRAY3t+7G0GGtsbx+430NheAPuygcb2AtmPmtubw/7I
3F4wu/Ug0aqSbN0JfDx4OPhJ8BfgWX2kV5OtuoNPBt8AngD+HjzXYOl1ZGtP
8BngW8GvgH8BLzhEekPZagD4XGqnHRsfLlzCHkXtt7Dj9+/L2G9QR/n9ytZ3
Ffsv6tTOm8qcX8vu4EvrXbNTg+qR7M2px+T77R6+hd2XOvrHpmEZd7Ivpv5y
r9PM4XvYD/D9j/8Ov7WfPZnaP2JztOsR9nRD6fl0eueLW4+zl6VO8/7zJOcp
9rbUzi22/Jp0ln0UtX/5LrmeXWBfzvfP8rdC+0T2Y9S/321pfDCJ/TG1S2KX
ng532G2H0fP93r8j59xnr0wdE7p1zqdH7F2of49zW9frObs/tUuPf4fiX7Ov
odb1tiVW/sB+ijq2iPvLZZ/ZXw0zrn8ae7bholUN2boH+FTwSPDz4B/A84yQ
Xle28gKfCb4dPBH8G3ghP+mNZOuB4PPB94DfAv8NXmKk9Bay1TDwJeCHwO+D
px8lvZxs1R58NPgK8OPgT8EzjZbuKFu7gU8EXwt+Gvw1uP0Y6TVlq17gGnwT
+AXwj+B5x0p3ka37gs8G3wF+Dfw7eJFx0hvLVj7gC8D3gd8G/wtecrz0VrL1
cPBQ8MPgD8Ez+EuvIFt3AB8LvhI8FvwZeJYJ0p1kq67gk8DXgZ8BfwueY6L0
2rK1B/h08M3gl8A/geefJL2+bNUfPAh8F/h18B/gRQOkN5WtB4MvAo8Gvwv+
D7z0ZOmtZSs/8KXgR8FTwK2nSK8oW3UCHwceDh4H/gLcbqr0arJ1N/DJ4OvB
E8DfgefS0p1lK0/wQGr7nhdX1cg4j3wrdYY2fXrPy0mtL1On1ftU9HEx9i/U
byvNTHGuzF5gmqVTiuRfv6gue0PqpGzb+z9vwe5NnfCvfun67uxzqWNSE5+H
9GPfTR31qP+W1yPYb1BHXvs2uNFk9p/UYafmVAyby+4w3dLB0YXfvV/O3ox6
xsbdu5ptZPel9l/W2C98L3sw9dDZN6p+PsF+gNrL3+dzq0vs96jdBv+KjrjL
ni7Q0i17Lhz3/QV7GWqXNsWd239lb0vt5BL9I9JqPvlI6lKVWxz9lZ1aLafO
X/RuQOci7DHUdtmHNdhagf1xoHH9ndltZlj6S6u1X1o1ZK9M/TKkwauQ5uyd
qZPvW27t2P2pk8pOvlbWnX019X9/D8N+ijrmqOXWn/0ldVTGXlEZfdmzzaTr
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
72P2gq/o+ap03wxln7O7UrfOHzfn8Sv2AdTzsxTPvuYd+zzqy391aI+P7FHU
9p9SCuT5yn6T2u2Z69rENPZf1MtuR5Sa/5u9+Gv6ebqgtrVQi8mbUxc84eWY
PgO1GkrtuTc2+rgN+2LqiI0OdSdmYT9I/ThMn6iZnT2ZutT8lKYfc7JbvaHn
z6mu53fkZS9LvW1URAefguztqN8OUDdKFmUfRV2lh1fPh8XZw6hHtY19uLI0
+zHq6IYOA7qWZ39C/a2afp2jMrvtW0s7l0kZccmJvQp1QAHXr0E12LtQH7eL
mNjUmX3CW/P3O/sa2Soe/BV49nfSa8hWPcGngm8EPw+eCp7nvfR6srUX+Czw
7eBXwb+BF/4gvZFsNQh8Pvhe8Fvgf8BLpEpvKVsPAw8BPwT+ADz9R+nlZev2
4GPAV4CfAH8KnvmTdEfZyh18IngE+GnwN+D2n6XXkq17gU8D3wR+EfwjeL4v
0l1kq37gs6mnHMqYu3kj9p3UDZKtMm9ozn7NnG/LnmZ2R/YiX412Y29idnd2
H7M92Bea7cW+z2xv9jtm+7D/NXsoe6lvRvuxt5KtRoCHgh8Bfwie8bv0CrJV
R/Cx4KvAY6nvTvB26RTA/pw6pcna17eC2LOkWfp51rthnkvZq1K/vpW7xbN1
7F2pU9d1+Oq7iz2A+pvv3A2fjrCvo/5Z83SnCWfZz6YZ+09ifytb5fwhvbZs
1Rt8OvgW8Evgn8Hz/5TeQLbuDz4HfBd4EvgP8GK/pDeVrYaALwLfD34XXP0u
8b+/P7/BXpqa/hw+6il7m9/G/Bd2P2r++N2f7Muou9J/j5JuCflRc96WWj0y
57OxW/8x5vOwV/pjzBdm7/THmC/BPt6cL88ebs47sZ+UrV+AZ/0rvZps1R18
MvgG8ATqywXzZSlVnf09dVEv5/FN6rHn+mfp4Rt7POnXhL0O9fHXEztMb8Pu
SZ3NKfzoui7sM6i9xh4rG9eLfSt11JEHISn92a/8M58v2L/8M67HSPaCquT/
rtc49obUPB/APoCa56exzzXnZ7FHmfPz2W+Y80vZf5nza9gd0hnzW9ibpzPm
97D7pjPmj7AvNufj2Q+YnciebHYyezoro1+yl7Uytv+Wva2Vsf1U9lHm/Ff2
5eb8D/Zj5vwf9sfmvFUIuW16Y96aWldOb8xnZu+S3pjPzu5vzudiX2PO52M/
Zc4XZn9lzjuwZ8tgzJdir5HBmC/P3iODMV+Zfao5X5U90pyvxX7enK/L/sGc
b8CeJ6Mx34S9bkZjvgW7V0Zjvg37THO+I/t2c96dPdGc78n+zZz3Yi9kbcwP
YG9kbcwPYR9obcz7sc8358ey7zHnJ7LfMuc1+29zfiZ7CRtjfi57CxtjPph9
mI35eGZfYs6vZD9kzkew3zfnN7KntzXmt7GXszXmo9jbmx3NPtrsQ+wrzI5h
P252LPtTs+PZM2UyOoHd0eyL7G5mJ7JPNDuJfa3Zt9lPm53M/trsFHb7zEY/
Za9p9kv2Xma/Zddmp7JvMvsL+wWz09g/mv2bPW8Wo1UouYvZGah1X7Nt2Web
bce+w2x79mtm52b/bnZ+9iJ25s8je2M7Y31Ls/vYGetbhX2BOe/Mvs+cb8R+
25xvzf7XnHdjL5nVmO/G3iqr+fPCPjyrMe/JHmrO92U/bM57sz80533YM2Qz
5n3ZK2Qz5oezd8hmzI9iH2vOj2Vfac77s8ea8wHsz2SrLNmlO8lWXcEnga8D
PwP+FjyHvfTasrUH+HTwzeCXwD+B588hvb5s1R88iDqi+ZNG6aew76K2v3Mm
3ZcZ7Nepp/hui3s6j/0H9fs/C6bdWMJeNKelPYJHNjqzgr0p9cUS7ukORrAP
pq673zlu82b2RdTbWhSeFraLPZo6/91/rnP2s9+lDhr6RE2MYf9H/e3vmdgh
p9hL57L0wMXbdK/z7K2pk0oudG17ld2PuumBkar+bfal1HtbusdWfsh+lLrE
PWdd9Dl7CnXwsMKu2d+xW+c2f/7ZK8pWncDHgYeDx4G/ALfLI72abN0NfDL4
evAE8HfgufJKd5atPMEDwbeCXwb/Al4gn/SGsrU3+Fzw3eA3wH+CO+SX3ky2
8gUPBj8Afg88XQHpZWSrtuAjwZeDx4A/BrcpKL2ybN0Z3B98Nfgp8Jfg2QpJ
ry5b9QCfAh4Jfg78A3juwtLrytZ9wGeCbwNPNDuN/atsVaiIdFfZaiD4PPA9
4DfBf4MXLyq9hWw9FHwJ+EHw++BWxaSXk63bgY8GDwM/Dv4EPJOD9CqylRv4
BPC14PHgr8GzF5deU7buCa7BN4JfAE8Fz1tCej3Zqi/4LPAd4FfBv4MXLim9
sWw9CHwB+F7w2+B/wEuWkt5SthoOHgJ+GPwBeIbS0svLVh3Ax4CvBD9BPXf7
0YcHf7E/o/Zesu7R1H/smctY2mXC7Cct0i8ld6LO6zXsWXYbau1Ondq8y4tb
mdknUZ+vXOfV2mzsEdSRuYu9GZST/Qz1lF8Z3jnmZX9D3f3x6/ffC7DnKGvp
aucSU08UYa9FbRd14NPs4uwe1M+XhX/pUJp9GnXs5Onf8pVn30wd5u2T9rAS
+0XqUW3a/9zsxP6Jum21Gr9H1GDPV87SZQoU/Fvbmb1+OeP6uLD3k62CwHdS
n2kX9vBGA/br1ImubnX3NmFPo75b3X7pwpbsRctb+nGZix+GtGNvQv22QFDr
Fp3ZB1N/s2u6sWQ39oXljf15sEdT//d6mf0O9X//Ps/+z5z3Zy9VwZifxt66
gjE/l31EBWM+lH2pOb+c/Yg5v5I9xZxfw56xojG/jr1iRWM+kr1jRWN+C/s4
c34/+ypz/iR7nDmfyP6cmr+f6Aa7XSVLr6fvP7rLXpV6FH0+y0P2btT0dUyl
n7IHUNPXEzm+Yl9P/d/nzbCfpebvS/rM/o6av48pjT1nZeN4/7A7U5ehO1gt
I+9NTeM+NtQqkPq/77dm30L93/c3sV+m5u+Hysv+mZo/D6YQe4Eqls5M32/l
wN6Amg5/XWl27yrG9arAPoeav0/KkX03NX9fVQ32JGr+vJ467D+p39P3NzVg
L+Zo6eN0wk3Ym1HT4TxpyT6Emi7/u3bswdT8/Vmd2fc7GuvVnf2ebK2cpJeR
rduAjwRfBh4D/gjcpqr0SrJVZ/Dx4KvBT4K/BM9aTXp12bo7+BTwDeDnwN+D
564uvY5s1Qd8Bvg28CvgX8EL1pDuKlsPAJ8HHgV+E/wXePGalg79XbuN02D2
5tQPlv2wXTCRfSh1mapHz7yax76YeviFgBnNV7MfpD40oEHjDbvYk2sa249l
t6pl/PyfZC9by/h5jWdvV8v4+TrDPqqW8fOQwB5Wy3i+ucB+rJbx/HCJ/Ukt
4+f5CrttbePn7yp7ldrG8SSxd5GtJoCvAY8HfwWe3Vl6DdmqJ/hU8I3g58FT
wfPUkV5PtvYCnwW+HfwqNX/ez032b9Qvw0dfrnOPvXBden63LT7DPoW9ETXx
i6fsg6jTHkz6cOwV+3zqzq3Lbwx9z76Xetf+mz19P7PfoqbNNU5j/0PtTQfw
h71EPXp+/G7ZYLrl5C2p6eOHzlhT62HUYyy7D8/CHkJNOdqe/RB1hY2hnVvn
YX9AbdmbbfGC7Old6PFtOdzvRdnLU9e13P1ySfb21KF0AuXYx1CnHrMcUGX2
FdR0ep2rsZ+g3kR3qM3+1MW4vi7smeuL1o6ylTv4RPAI8NPgb8DtG0ivJVv3
Ap8Gvgn8IvhH8HwNpbvIVv3AZ4PvBL8GngZexFV6E9naB3wh+D7wO+B/wUs1
kt5KthoBHgp+BPwheMbG0ivIVh3Bx4KvAo8Ffw6epYn0qrJ1V/AA8HXgZ8Hf
gudsKr22bNUbfDr4FvBL4J/B8zeT3kC27g8+B3wXeBL4D/BizaU3la2GgC8C
3w9+F1y1MNqLvbRs1QbcD3wZ+FHwR+DWLaVXkq07gY8HDwc/Cf4CPGsr6dVk
q+7gk8E3gCeAvwfP1Vp6HdnaE3wG+FbwK+BfwAu2kd5QthoAPhc8CvwG+C9w
h7bSm8vWvuCLwQ+AJ4Onaye9rGzdFnwU+HLwY+CPwW3bS68sW3UB9wdfA34K
/BV4tg7Sa8jWPcCngkeCnwf/AJ6no/S6spUX+Ezw7eCJ4N/AC3WS3ki2Hgg+
H3wP9bfMXzN/Hch+izuT5Z9h7L+p02y/234fw16iM7WN5Z9J7C2of1r/sP4x
nX0Yd0bLP3PYl1D/zvArw69g9kPc6S3/LGe/T/3X6o/VnzXs6btQp7P8s5G9
HLVK90/928Hevotx/NHso6n/+/sX9hXU/Hoijv24OZ/A/pSaX19cYs/kVvJ/
r0euszu6Gdu7ze5Gza93HrBPpObXI0/Y17oZ+3vFfpqaX++8Z39Nza+PvrDb
uxvH85O9prtxPP/Ye7kbx5MxjFy7G8eTmVptcjeOx579grtxPHnYP7obx1OI
PW9X43gc2F26GsdThr1vV+N4KrHP7mrsrwr7jq7G9qqyXzPna7B/N9uZvUg3
8/cde2OzXdl9qPn9oibsC6j5/Zzm7Pu6GefTiv02Nb9/1Y79LzW/v9SRvWR3
4/p1YW9Fze/PdGUfTs3vd/VkD+1unE9v9sPU/H6RF/tDan4/pz97hh7Gegxi
r0DN718NYe9Aze8vDWMf28O43n7sK6n5/bQx7LHU/H7XePZnPYzrPZE9S8+S
/3u/aDK7EzW//zaNvWtPY/1msE+i5vevZrOvo+b3l+ayn+lpPF4Wsr+l5vfT
FrPn6FXyf+93hbLX7mWsVxi7Ry9jvVaxT+9lrNca9s29jPVax36pl7FeG9k/
9TLWawt7fg9jvbaz1/cw1msXe38PY732sgd5GOu1n32Xh7Feh9ivexjrdZT9
h4exXifYi/Y21uske9PexnqdZh/c21ivBPZFvY31usge3dtYryvsd3sb63WN
/V9vY71usJf2NNbrDntrT2O9ktn9PI31esi+1NNYr8fsRz2N9XrOnuJprNcr
dus+xnq9Za/Yx1ivVPZO1C/rNh+56zP7OOqhs47sG5jGHk6derXKt6J/2OOo
xxTZ4Hwr3QryF9RpPvkmLbKm1nZedLzR8461yMJezcvYnz17Ny9jffKwT/Yy
rk9B9vXmvAN7gjlfmv2dOV+BPVdfY96J3dlsZ3ZPs13ZA81uzr7V7Lbsl2Wr
L+AF+klvKFt7g88F3w1+A/wnuEN/6c1kK1/wYPAD4PfA03lLLyNbtaXeMm9B
62Lt2EdSRw3Z0cOmC/ty6gOtLvh86M4eQ3283OvxtzzZH1Ofsck0+4Q3u80A
S198XnbZ5iHslamTTjffuMiPvTN1cuSA6PHj2P2pHwfOONUngH019et+G661
mM5+ivpTo5OPHIPYX1KnOTxKzbeQPdtA43xC2aubvZK9h9kR7FPM3sQeafYO
9nNmR7F/MDuaPfcgow+x1zU7hr0PNX/+PbeaSZ2TPs//GPs26pX0/QTcKpGa
Pp6+xHH2r4OMxz+3KuRT8n/fH3CC3ZWavw+BWw2k5s/Dj2WfR82f78+t9vgY
P19x7DepH9D3L3Cr39T08fsDT7IXH0zPv3TjVi2o+fsRTrEPHWycbzz7ksHG
+XLrg4ON8z3Nfn+wcb7c2mqIcb5n2MsNMc6XW7cbYpzvWfbRQ4zz5dZhQ4zz
TWA/PsQ4X279ZIhxvufYM/ka58utq/ga53ue3c3XOF9uPcHXON8L7Gt9jfO9
yB4vW70Gzz5Uek3Zuie4Bt8IfgE8FTzvMOn1ZKu+4LPAd4BfBf8OXni4pSMb
FYxs9J83pm4ZWKNl4H8+iPptfPu38f/5Aupg68HB1pfY91LXoDtwq9vUt+es
vj3nP/9DHXDhYMCF/7zkCEs7ZL3mkPUye0tq2nx7bjWcegjt4D8Poc5mGb/2
nx+m3pur3p5cV9gfjDAeH9wqg5+lfy4b8WPZf16eeg0d0H/ewc84/0T2MbLV
SvAT4M/AM4+U7iRbu4NPAo8APwP+BjzHKOm1ZCsP8Gngm8Evgn8Czzdaen3Z
uh94EPhO8OvgaeBFx0hvIlsNBl8IHg1+B/wfeKmx0lvL1iPAl4IfAU8BzzhO
ekXZuiP4OPBV4HHgz8HtxkuvKlt1Aw8AXw9+FvwdeE5/6c6ydW/wQPAt4JfB
P4MXmCC9gWzlDT4HfDd4EvhP8GITpTeTrYeAB4PvB78HriZJ/z+u7jqsqiwK
4/Cxu7sTRFTsLizs7sZuRcWuYxd2F2IrIio2FurYiYqJio3dhYhz94d7P8/6
mL9+866zzr4M6vUCg7Nsuz75YPKl5EdUB9Vr/7hoGPyx6v7ffTNtD4cnGuto
l/VPGjo/gxdW7agp697Am6n2/dUnOPsX+AjVbTbt+LgsCr5Gdfqmn5zTxV2p
/KTqK9GlOs5NotqKVD1r68hFSdLAU4xTf763OHJ+SmZ4yXH6vLnhbWRb48k3
kJ8nf6+6VUi7OP0KwtOP114KXt50eXhn01XgU0zXgPubrgO/qhrPRxrAv6nG
85+m8KwT8v17/tEK7q4az3faw3tM0Ps84bMn6H3d4bsm6H194LfMvoHw32bf
UHgeW+8bCfcwPR7e3/QU+ALTM+AHTPvAw3XbC+BxJ2pfBi+g214Nb2h8PXyI
8S3w5cZ3wI8aD4I/NX4QnnhSvn/PF4/A3SbpP89PwJtP0vNn4KPM/AW4r5m/
Cv/PzN+Ev5qk39934Kkm6/f3A3ipyfr9/QTebrJ+f7+ET5is972Fb5qs932E
XzD7vsE/mn1R8AxT9L6/8IpT9L74q5R7mk6s2ppmOjl8u+nU8FDT6eHfTWeF
Z59qfn3Aq03V7x8neK+p+v3nCvcx88XgQWa+NPy2ma8A/2Pm3eF5p+muCa9j
ug58gOmG8EWmm8EPmm4Nf2i6AzzedN1d4AVN94Q3Mt0P7m3aC77C9DD4cdOj
4c9MT4AnnWF+/cCLmp4Gb2l6Bnz0DP3x4AP3m6E/HhbAT8/QHw9L4W9m6I+H
VfDUM/U+P3iZmXrfRnj7mXrfNvjEmXpfIHzzTL1vD/yS2XcQ/sn0YXimWbqP
wSuZPgHvavo/+HTT5+A7TF+CXzd9Df7T9E14jtm678BrmA6H9zYdAZ9r+hl8
j+lI+F3Tb+Expj/C8/vo/gqvK9saRL6YPJj8EXmCOdJdZVtNyIeRrzL9Ex5i
Ou5q5S9MJ1dtJ5urOyO8uOnc8FamneBjTbvC15kuCj9ruhT8reny8LTzzJ+P
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
AF5Yt+0Fb6rbcyh8hG734fDVunOPgp/UbY2Fv1SNv6+Oh6dwdbT662rJifAS
qi+rv69OhrdRjb+vToOPc9X7ZsI3uOp9s+HnzL658Pdm33x4ukJ63yJ4+UJ6
31J4p0J6fjl8SiG9fxV8m7neF361kL7fOvhXs28jPGthvW8zvGphvW8bvEdh
vS8APquw3rcTvquw3hcED9Nt74X/Nn4AnruI9kNwD93WEXg/48fgC4yfgO83
fgoebvwMPI6bPv85eAE3fd6L8AZu+vFehg9x04/vGnyZm953A37U7AuDPzH7
7sATF9X77sGLFNX7HsCbF9X7IuAjTT+B+5p+Bj9l+iX8lenX8JTFdL+DlzL9
Ed7W9Gf4BNNf4RtNf4dfMP0T/kE1vj0vCp6huKO3q6/vjoZXKK7n/8I9i+v5
OOuUTzXz8VRb2818Qvg13SGJ4d9128ng2UroX68p4dV0W2ngPXWHpIP76LYz
wneb67PAb5vrs8OjzXxOeN6S2vPAa+u288EHGHeGLzRdEH7QdGH4A9lWvFLS
XWRbjciHkq8gP0b+jDxJaelFZdstyEeTr1WdrENE3EzF4KeNe8Bf67brwFOX
0V4fXlq33RDe3ngTuG28GXyz8Zbwi8Zbwz8ZbwfPWFZ3B3gl053gXUx7wqeb
7goPMN0dft10T/iPsv8+nsN6w3OU0x/P/eDVy+nzDYT3Lqc//gfD5+h5V2/4
Hj1vjYDf0fNho+AxZv9YeL7yev8EeN3yev8k+MDyev9U+GI9b82AH9LzYbPg
j/S8/xx4/Ap6/3y4awW9fxG8cQW9fyl8mJ63VsBX6vmwVfAQPe/vC39u9q+D
J6uo92+EF6uo92+Bt6qo9/vDxxhHW+vM9bF+Rs/bsf5Wz/vHeppK+nyxXraS
3r8d3qGS3o+2Jun5lrG+Rc/bsX5Zz/vH+mezP9YzV9b7A+CVZVvdyGeQB5Lf
IP9FnrOK9Jqy7T7k88j3kt8j/0vuVFV6PdmWF/kS8sPkEeQJ3aUXkm01JR9O
vpr8BPlL8uTVpJeQbbcmH0e+nvwc+TvydNWll5NtdSKfTL6N/Ar5V/IsNaRX
lW13J59FvpM8jDyKPHdN6bVkW/3I55PvJ79PHqeWdGfZVgPyweTLyI+QPyFP
5CG9iGy7GflI8jXkp8gjyVPWll5SttWWfDz5RvLz5B/I09eRXkG23Zl8Krk/
+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
XzPzI+HfZFvZHkl3l231JJ9Nvpv8Fnk0eZ4I6bVl2/3JF5IfIH9AHvexdBfZ
dkPyoeTLyY+RPyVP8kS6m+oqafYc8h4Nb6E6xn3e4vnj4KNUh3j1GxRgw9eq
tv1q1zs3Gf6favdr+ZyeTYO/NvtnwVM91e0DL216Lryd6flw2/RC+CbTi+EX
TS+FfzS9HJ7xme6V8IqmV8O7mPaFTzPtBw8wvR4eanoj/IfpzfDsz0Vb1WXb
vcjnkAeR3yH/Q57vhfQ6sq2B5IvID5E/JI//UnpB2VZjcm/yleTHyZ+TJ42U
Xky23ZJ8DLkf+RnyN+RpXkkvI9vqQD6RfAv5JfLP5JleS68s2+5KPoN8B/kN
8p/kOd9IryHb6kM+l3wv+V3yv+T530qvJ9seRL6EPJg8gjzBO+mFZNtNyIeT
ryI/Qf6CPPl76cVlW63Jx5KvJz9L/o487Qfp5WTbHcknk28lv0L+hTzLR+lV
ZFvdyWeS7yS/SR5FnuuT9Fqy7b7k88n3kd8ntz5Ld5Zt1ycfTL6U/Aj5Y/JE
X6QXlm01Ix9Bvob8JHkkeYqv0kvKttuQjyffQH6e/D15+m/Sy8u2OpNPIfcn
v0r+jTzrd+nusu0e5LPJd5HfIv9NnueHdA/ZVn/yBeQHyMPJ4/6UXkC21ZB8
CPly8qPkT8kT/5LuJttuTj6K3Jf8P/JX5KmipJeSbbUjn0C+ifwC+UfyDL+l
V5Rte5JPI99OHkr+nTx7tPRqsq1e5D7kQeS3yf+Q5/0jvY5sewD5IvKD5A/J
48VILyjbbkTuTb6C/Dj5M/Kkf6UXlW21JB9N7kd+mvwNeWrLSXgZ2XZ78onk
m8kvkX8izxRHeiXZVlfy6eQ7yK+T/yTPEVd6Ddl2b/K55HvI75LHkOePJ72u
bGsQ+WLyYPJH5AniS3eVbTUhH0a+ijyE/AV5sgTSi8u2W5GPJV9Hfpb8LXna
hNLLyrY6kk8i30p+mfwLeeZE0qvItruRzyQPJL9J/os8V2LpNWVbfcnnke8j
v0duJZHuJNuqT+5FvpT8MPlj8oRJpReWbTclH0G+mvwk+UvyFMmkl5BttSEf
R76B/Bz5e/J0yaWXl213Ip9Cvo38KvlX8qwppFeVbfUgn0W+izyM/Dd57pTS
PWTb/cgXkO8nDyePk0p6Adl2A/Ih5MvIj5I/IU+cWnoR1SX2PwottA3eXHXP
Y39vdQ6Aj1S98kyu8EU74b6qL12p+vhsEPwU9t3u/OL3Pvgr1aUeTXhT9BA8
ZRq17+Xaj92OwEupXvnh+Ldlx+FtVV/68Sjq4kn4hDT6fGfgG02fh18wfQn+
wfQVeIa0uq/BK5i+Dvc0fRM+1fQt+HbTd+DXTN+DfzcdDs+W7l+7P4RX021H
wHvqDnkC99FtPYfvNte/hN8217+CR5vr38DzptfXv4fXNv0JPsD0V/hC09/h
B03/hD8wHQWPl0F3NNzFdAy8kWlrs/KhpuOqtlaYjg8/Zjoh/JnpxPAkGXUn
gxc1nRLewnRq+GjTaeFrTaeHnzadEf5atpU6k9O/zz9lgJdWrT6/tAdttVeN
z0fFup1J//eI9c2q8fmpWL+o9zWI9U96X8lYz5j5374ssV4psz5PrHfJ/G/f
i9jzT8+sz4e2AzLr88X6db1vRaz/0PvsWM+RRZ8v1qtn0eeL9d5Z9PlifU4W
fb5Y35NFvD/tO7KtGPJ8WaXXlW0PJF9Mfoj8EXn8bNJdZduNyYeRryQPIX9O
niy79GKyrVbkY8jXkZ8hf0ueJof0srLtDuSTyLeQXyb/TJ45p/TKsq1u5DPI
A8lvkP8iz5lLek3Zdh/yeeR7ye+R/yV3yi29nmzLi3wJ+WHyCPKEeaQXkm01
JR9Ovpr8BPlL8uR5pZeQbbcmH0e+nvwc+TvydPmkl5NtdSKfTL6N/Ar5V/Is
+aVXlW13J59FvpM8jDyKPLeT9FqyrX7k88n3k98nj+Ms3Vm21UD1+oEfQupm
hg9WHbVwT5MDOeDLVDc5MCIifz74EdVb71f0WugCf2L2ucETFXD69/ntYvAi
qvH575LwZgX0fBn4SDNfDr7GzFeEnzLzVeCRqpeqN7SV0sXRbkUcb1XhJVX/
d8rxhrbaqm6n3tzh41V/VG9oa6PqGdMdb9Xg51XnVG/V4R9U71VvaDt9QUc3
qO94qwGvoPrJY8cb2u6seqR6qwmfqjp1KsdbLbi/6s2bHG9o65rqTt6htTLV
hn9T7ZGpo3doXXg2V/X4giPXz24Ad1ed2cG1GsN7uur3TzP4bNWRq4deKd8S
vlv1lfIvVw9tA7+lev+tdv12tIdHq1bjLzvB8xRy9JTU1RPn6Qqvrbr/jn23
2vWA91ed/ezg7Gd7wRcW0vfvCz+gGt9f1g/+QDW+n6w/PG5hp3/fPzYA7qIa
3582EN5QNb4fbRB8qGp8/5kXfHlhfb8h8GOF9f2Gwp8W1vfzhicpou83DO5W
RN9vOLxFEX2/EfBRRfT9RsLXFtH3Gw3/T7b1mjyVm/TSqu+827103Rh4O9UJ
s+a7EDMObqsu5bH4T3sbvkl11yEJih+aBL+oer7v8O4Zp8I/qj524eWyodPh
GYs6+u33NhevzYRXVK3WF/GBd1Fdp3HFErPnwqepHj4moEfkfHiA6o1bcqyo
tQgeqvr6jbmX1i+B/yiqH89yePZi/9p9Jby6bns1vJfuEF/4HN3WOniQuX4D
/I65fhP8j7l+CzxfcX29P7yObGsg+SLyQ+QPyeOXkF5QttWY3Jt8Jflx8ufk
SUtKLybbbkk+htyP/Az5G/I0paSXkW11IJ9IvoX8Evln8kylpVeWbXdV/blT
ePXqAfAZqpuVefMoLBC+Q3VQiqixfXbDb6hO/Txx1j974D9Vex3JdGD+fnjO
Mo6+tsi5Rf5D8Bqqi/Ur/enAYXgf1fOr15xb/xh8ruqPWZoXehQC36u6yacu
54acgt9VHXjOq0fCM/C/qlP6TYi78hw8f1n1+8OIuWuLXITXU32l0ZpKJy7D
B6l2cw642+IafInquX+Ch0dehwerfnvzfLqxYfCIsvr3r9vwBOX070934IXK
6fffPXgT2dZw8lXkJ8hfkCcvL724bKs1+Vjy9eRnyd+Rp60gvZxsuyP5ZPKt
5FfIv5BnqSi9imyrO/lM8p3kN8mjVB9xj3OoS6znquRon48h9c4/hNdS3cnP
Di/2FN5XtVsT94HLX8LnV9L73sL3mf4Av2/6M9yqrPsr3Nn0d3h90z/hg01H
wZeqxvMrtHVENZ5/xfpjM/8bnqiKnkfbhavo+VhvVkXPR8NHmHm0tcbMx/pJ
M/8HHmnm0XaKqno+1ktW1fMx8DZV9TzaGm/mY32Dmf8LP2/m0fZ7Mx/r6d31
vLVFeXl3PY+2Orvr+VifYubjwP3NPNq+auZj/ZuZjwvPWk205S7b7kE+m3wX
+S3y3+R5qkv3kG31J19AfoA8nDxuDekFZFsNyYeQLyc/Sv6UPHFN6W6y7ebk
o8h9yf8jf0Weqpb0UrKtduQTyDeRXyD/SJ7BQ3pF2bYn+TTy7eSh5N/Js9eW
Xk221YvchzyI/Db5H/K8daTXkW0PIF9EfpD8IXm8utILyrYbkXuTryA/Tv6M
PGk96UVlWy3JR5P7kZ8mf0Oeur70MrLt9uQTyTeTXyL/pPptid/bqyWAZ2rg
6JpFMhcISAyvpHp1gdLrMyaHd1X9NU+zHBNTwaerrpd90PI3aeE7VK/P6JOu
VUb4ddVRqbfNDckC/6m6WbIzSQrlgOdo6OitCZ5OWZIbXqOhPl9+eG/Z1lzy
PeR3yWNUN6sbdDSrMzx/I/Xn9/EXk8Nd4HVVO5fJVs+3EHyQ6vkBjVN7usEX
q47KO+VWnuLwYNXdVxxc/bQk/JHqK6nedd1UBp6gsaPLTMtTsFd5uKtqv+iW
H1wqwZuoTjp01r7XVeDDVHu/OjYmoBp8leqHnb9UG1gTHqK6zq0CiYvVhr9Q
HdSgw5VPdeHJmjg6+6n5i/c0gBdXPa386XbDGsNbqf6481fuss3gY1W3cXZ7
+bMFfJ3qk6u77ghuDT+runC6ZUPHtoO/Vb105sXyVTrC0zbV719PeFnTXeEd
TXeHTzLdE77VdG/4ZdN94V9M94dnbqZ7ILyKaS94N9ND4DNNe8MDTQ+H3zQ9
Ev7L9Gh4rua6x8Jrmh4P72vahs9rrv/8nwjfpxrPDybD75n5qXCrhZ6fBndq
oednwOu30POz4F6mfeBLTc+FHzY9H/7Y9EJ4wpa6F8MLm14Kb2p6OXyE6ZXw
1aZXw0+a9oW/bPnv/GFr4Sla6ce3Dl6i1b95ewO8TSv9eDfBx+l51y3wDXre
2gY/p+fD/OHvzf4AeLrWen8gvHxrvX8XvFNrvT8IPkXPW3vh27T774NfNdcf
gH8184fgWdvo+WB41TZ6/gi8Rxs9fww+S7cdAt9l/BQ8zPhp+G/j5+C52+r7
nYd7tNX3uwjv11bPX4YvMPNX4PvN/DV4uJm/Do/Tzunf5/tuwAuoxuf3wuAN
VOPzebfhQ1Tj83d34cva6X334UfNvnD4E7PvITxxe70vAl6kvd73BN68vd73
DD7S9Au4r+lI+CnTr+GvTL+Fp+yg+z28lOmP8LamP8EnmP4M32j6G/yC6Z/w
D6aj4Bk66o6GVzAdA/c0bW1VPtV0XNXWdtPx4ddMJ4R/N50Ynq2T7qTwaqaT
w3uaTgn3MZ0avtt0Wvht0+nh0aYzwvN21p0ZXtt0VvgA09nhCzvrj7+c8IOd
9cdnbvgDM58PHs9TzzvBXTz1fAF4I0897wofaroQfIXpwvBjpovAn5l2gyfp
orsovKjpYvAWpovDR5suAV+rev1st+BItHVaNV7PLwl/rTpSDZSCp+7qaB/1
An9peGnVeL2/DLy96uu1HAvKwm3V6tMFHcvBN6vG5wPKwy+qVpe7VYB/Uo3P
L1SEZ+ymz1sJXqmbPi/a7tJNn7cyfHo3fd4q8IBu+rxV4de76fO6w3900+et
Bs/RXZ+3Orx6d33eGvDe3fV5a8LndNfnrQXf012f1wN+R7YVQ56vh/S6su2B
5IvJD5E/Io/fU7qrbLsx+TDyleQh5M/Jk/WSXky21Yp8DPk68jPkb8nT9JZe
VrbdgXwS+Rbyy+SfyTP3kV5ZttWNfAZ5IPkN8l/kOftKrynb7kM+j3wv+T3y
v+RO/aTXk215kS8hP0weQZ6wv/RCsq2m5MPJV5OfIH9JnnyA9BKy7dbk48jX
k58jf0eebqD0crKtTuSTybeRXyH/Sp5lkPSqsu3u5LPId5KHkUeR5/aSXku2
1Y98Pvl+8vvkcQZLd5ZtNSAfTL6M/Aj5E/JEQ6QXkW03Ix9Jvob8FHkkecqh
0kvKttqSjyffSH6e/AN5em/pFWTbncmnkvuTXyP/Rp5tmHR32VZP8tnku8lv
kUeT5xkuvbZsuz/5QvID5A/I446Q7iLbbkg+lHw5+THyp+RJRkp3k221IB9F
vpb8P9VN1i5L+Lo+/LXqiPQ94q9uBk81ytFes0rEbdQWXnqUvt4T3k41nh91
hduq8fyrO3yTajxf6gW/qBrPx/rAP6rG86f+8Iyjnf49PxsIr6gaz6cGw7uo
xvO1ofBpqvH8ajg8QDWev42Eh47W5x0D/zFan3ccPPsYfd4J8Opj9HknwXuN
0eedAp8zRp93OjxojD7vTPidMfq8PvA/Y/R558LzjdXnXQCvM1afdxF84Fh9
3qXwRarx94UV8EOq8feF1fCHZt4PHn+cnt8ALzhOz2+GNx6n5/3h3qYD4CtN
B8KPq8bXm+yCP1eNrycJgicd7/Tv61P2wYupxtefHIC3VI3PBwfDx6jG54OP
wP3G6/sdh58Zr+93Av5mvL7fKXiaCfp+Z+BlJuj7nYN3mKDvdxE+cYK+32X4
lgn6ftfgl3S7h8I/67avwzPZ/zrkBryybisM3lW3+y34DN32bfgOc/0d+A1z
/T34T9lWzonSa8i2+pDPJd9Lfpf8L3n+SdLrybYHkS8hDyaPIE8wWXoh2XYT
8uHkq8hPkL8gTz5FenHZVmvyseTryc+SvyNPO1V6Odl2R9XX07Tr2TTWJ6uO
GfvIL/oBfKtql8ju97c8hl9R3aL56wzNn8O/qB5/bFCTmEh4lmnq13PBb7O2
vYVXUX1z8ejTLT7Cu0/T9/8Kn6nb/gHfafw3/KbxGHiU8bjblOearn8/iafa
qjVd/34SH953up5PCJ9v5hPB95n5xPD7Zj4p3Jqh59GW8ww9H+v1Z+j5ZPDB
Zh5tLzXzsX7EzCeHP5ZtJZopvbBsqxn5CPI15CfJI8lTzJJeUrbdhnw8+Qby
8+TvydPPll5ettVZtfOVuTP3pIBPUZ2+19n/7qaD+5v5rPCrqvF6Znb4N9V4
/TMnPKuP07/XN/PA3VXj9dB88B4+ep8zfLaP3ucC3+Wj97nCb5l9ReC/zb6i
8Dxz9L4ScA/ZVn/yBeQHyMPJ486VXkC21ZB8CPly8qPkT8kTz5PuJttuTj6K
3Jf8P/JX5KnmSy8l22pHPoF8E/kF8o/kGRZIryjb9iSfRr6dPJT8O3n2hdKr
ybZ6kfuQB5HfJv9DnneR9Dqy7QHki8gPkj8kj7dYekHZdiNyb/IV5MfJn5En
XSK9qGyrJflocj/y0+RvyFMvlV5Gtt2efCL5ZvJL5J/IMy2TXkm21ZV8OvkO
8uvkP8lzLJdeQ7bdm3wu+R7yu+Qx5PlXSK8r2xpEvpg8mPwReYKV0l1lW03I
h5GvIg8hf0GebJX04rLtVuRjydeRnyV/S552tfSysq2O5JPIt5JfJv9CnnmN
9Cqy7W7kM8kDyW+S/yLP5Su9pmyrL/k88n3k98ittdKdZFv1yb3Il5IfJn9M
ntBPemHZdlPyEeSryU+SvyRPsU56CdlWG/Jx5BvIz5G/J0+33tEed/943C0L
L6+62IvmRV9UhndSnfnLtkxfasCnrNfX14Nv0203gF813hj+1XhTeNYN2lvA
q+q2W8F7GG8Ln2W8PXyX8U7wMOOe8N/Gu8Fzb9TeA+6h2+oN72e8L3yB8QHw
/cYHwcOND4HH2aTdG15AtzUC3sD4KPgQ42Phy4yPhx81PhH+xPhkeOLN2qfB
i+i2Z8CbG58NH2l8DtzX+Hz4KdXqrzd9F8JfqcbXiyyGp9zyb959GbzUln/z
/ivgbbf8m8+wGj5Bz9u+8I16/rUf/IKeb7kB/kHPh2yCZ9j6b951K7zC1n/z
S/zhnlv1+XfAp+r5vjvh2/V82G74NT3vvhf+Xc/774dn26bPfwhebZs+/2F4
z236/EfhPnq+ZQh8t54POQm/reddT8Oj9fySs/C8/vr8F+C1/fW+S/AB/vp8
V+ALzXwo/KCZvwF/YObD4PG26/k7cBfT9+CNTIfDh5p+CF9hOgJ+TLX6cdkF
nsCfqVY/T7vRM3iSAKfYn589/AW8qGr187LXRMJbqFY/H/u/1/DRqtXlb9/C
16oOSldxd7oP8NOq8fO7P8Ffq8bP6/4CT73D6d/P5/4GL60aP4/7B7y9avz8
7V9we4d+PNHwzTv044mBX9yhH4/lr/zTDv144qq2MwbqxxMfXilQP56E8C6B
+vEkhk8P1I8nGTwgUD+eFPDrgfrxpIL/CNSPJw08x079eNLBq+/UjycDvPdO
/Xgyw+fods8K36Pbzg6/ozskJzzGXJ8Hnm+Xvj4fvK5u2wk+UHdIAfhi3ZYr
/JC5vjD8kbneDR5/t76+GNxVt1US3li3e2n4MN12WfhKc315eIi5vhL8ubm+
CjxZkL7eHV5Md0h1eCvdVi34GN3uteHrzPV14WfM9fXhb831jeBp9ujrm8DL
6rabwTvoDmkBn6Tbag3fYq5vC79srm8P/2yu7wjPvFdf7wmvrNu9K7ybbrs7
fIbukJ7wQHN9H/gNc30/+C9z/QB4zn36+kHwmrqtIfA+ut3R1jzddqzvNdfH
+j1z/VD4X3M92nLar6+P9Xq6Q2LdS7flDV+i2x1tHTbXx3qEuT7WEx7Q1w+D
F9Ltjraa6rZjfbjukFhfba4fDj8h23pJnvyg9BKy7dbk48jXk58jf0ee7pD0
crKtTuSTybeRXyH/Sp4lWHpV2XZ38lnkO8nDyKPIcx+WXku21Y98Pvl+8vvk
cY5Id5ZtNSAfTL6M/Aj5E/JER6UXkW03Ix9Jvob8FHkkecpj0kvKttqSjyff
SH6e/AN5+uPSK8i2O5NPJfcnv2Z6PPybbhttZQvRPgHurttGWz2N2/DZxtHW
buMT4beMo61o45PgeU5oR1u1dVuT4f2No62FxqfAD8i2HpDHPSndRbbdkHwo
+XLyY+RPyZOcku4m22pBPop8Lfl/5K/JU/0nvbRsux25Tb6J/CL5R/KMp6VX
lG11IZ9GHkAeSv6DPPsZ6dVl273I55AHkd8h/0Oe76z0OrKtgeSLyA+RPySP
f056QdlWY3Jv8pXkx8mfkyc9L72YbLsl+RhyP/Iz5G/I01yQXka21YF8IvkW
8kvkn8kzXZReWbbdlXwG+Q7yG+Q/yXNekl5D9cayY8d8nwbvo/rFtcgyP2bC
56p26dvy8w8f+F7VfeOd3PFzHvyu6oDVbn1+LYT/Vf2+9Kr8UUvg+S87usTV
RBFRy+H1VHv39l71exV8kOr9cR63ivaFL1H9c2XDtH/WwYNVVygVfPnPRniE
6rGXnWfGbIEnuOLoYz0X1fzrDy90RT++QHgT2dZw8lXkJ8hfkCe/Kr24bKu1
6grbm5UtH+tjVfe3xr9yDYKvV+3bctuq7PvhZ1Vf8b/ZMGUw/J3Zdwye9pqj
5z4tN/fpcXg51fj/yZyAd1SNv/+fgk9WXU5dcBq+VfU5x/jgs/ArqvH6wXn4
F9XP1AUX4VlCHT1E3eAyvEqoPs9VePdQfZ5r8Jmh+jzX4TtD9Xluwm+G6vPc
gkeF6vPcgee6rs9zD17ruj5POLzvdX2eh/D51/V5IuD7TL+A3zf9Fm7d0P0e
7mz6I7y+7pBP8MG67S/wpbrdv8GPmOt/wB+b63/CE93U10fBC+t2j4Y3023F
wEfoDvkLX2Ouj7Nd+UlzfTzVVqS5PgE8RZi+PiG8pG47MbyNbvek8PG6reTw
Darx9Usp4edV4+ub0sDfq8bXP6WDp7/l9O/rozLCy6vG109lhndWja+vygaf
ckvfLyfc/5a+X2741Vv6fvng327p+znBs97W93OBu9/W93OF97it71cEPvu2
vl8x+C7ddnH4LeMl4b+Nl4LnuaO9DNxDt10W3t94efgC4xXgB4xXgocbrwyP
e1d7VXgB3bY7vKHx6vAhsq3l5EfJn5InvifdTbbdnHwUuS/5f+SvyFPdl15K
ttWOfAL5JvIL5B/JM4Q7+nPWC/1casMrqp6m/kUDuKdqxTubwqep3rXuyLTP
reDbVdccleJ56Q7wUNV3mnSqMaoL/Lvq/i471x3pCc/+QN+/P7ya6QHwXqYH
wn1MD4IHmfaC3zY9GP7H9BB43oe6h8LrmPaGDzA9DL7I9HD4QdMj4A9Nj4TH
e6R7FLyg6dHwRqbHwL1Nj4WvMD0Oftz0ePgz0xPgSSN02/Cisq2W5KPJ/chP
k78hT/1YehnZdnvyieSbyS+RfyLP9ER6JdlWV/Lp5DvIr5P/JM/xVHoN2XZv
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
fgGdDc9R0NKWr/4JL8Orq1Zfbh/DfVSry/EzfLrqdVMtOzZ8u2p3dcCGX1et
vr0GGv5dtTq+oYbnL2RpxSMMr6s6Sk1oeG/V6tt5nOGzVKsvl7/h+1Sr7QQY
flt1h3eWGQz/rfqH5a/PDMOLFrb0MnVghjdWXd1y+XMMH6j6gavlO8jwENWT
1BfI8EOqi1i+HZca/lB1hOW4Vxguili6p/qGMLyUalvLy8M6w1uq3mr59t9o
+AjVzdQ3oOHLVL9XB2D4SdVzV1u+ooY/U11BfcMbnr6opW+oAze8nOqRluM6
ZHgH1bnUXzDDx6k+rL7Ahq9V3cXy7XvG8HNF9eud4W+L6tc7w7M46Nc7w10d
9Oud4V0c9Oud4QEO+vXO8E0O+vXO8MsO+vXO8M8O+vXO8FzF9Oud4TWK6dc7
w3sU0693hs8opl/vDN9ZTL/eGR5TTL/eGZ5YTL/eGV6guH69M9y9uH69M7xP
cf16Z/ic4vr17iR5GG9xB/wPeLES3JvwFoPBF4IfAX8EntaRe2neojX4SPAV
4KfAX4D/V5J7Bd6yI/gE8HXgF8DfgWcrxb0Kb+EFPgV8C/gV8ATw3KW51+It
fcEDwXeB3wRPAi/kxL0+b9EPfC74AfC74Kngxctwb8ZbDgFfDH4U/Am4jTP3
MrxlG/DR4CvBz4C/BM9YlntF3sITfCJ4KPhF8A/g9uW4V+MtvcGngm8Fjwb/
Cp63PPfavEVP8CDwPeCx4D/BC1fg3pC37A8+H/wg+H3wv+COFbk35y2GgS8B
Pw7+FNzOhbszb9EOfAz4avAI8NfgmSpxr8RbdgKfBL4B/BL4R/Aclbm78RY+
4NPAt4NfA/8Ons+Ve13eshf4LPC94LfBf6mWqwZt8YsgL1pF/ff+mvzz6gJ5
I9WbxbL2Ay+TD1R92HXXts/XyBeovtI3InVkLPkh1Y9WxnVMvkP+QPXn6Pc7
/B+Si6p6/XjykqqN/72BvKVqej/7Jflw1fR++BvyZarp/e935CfM+T6SPzPn
+0yerpqeL4G8XDU933fy9tX0fInk46rp+X6Sr6mm5/tNfs6cL4X8jTnfP/Is
bnq+NHuUV3bT89mqFl3c9HzpyCe76fn+I9/kpufLRB5lzpeF/LM5nz15zuql
rL9fm4O8hmr6/dtc5N1V0/vVechnqKbf381HvkM1/X5vAfIY1fT+eCHyH6rp
94OLkBeoUcr6+8MO5PVq6P2UIO9TQ++nJPnsGno/pcnDauj9lCGPq6H3U5b8
Tw29n/LkDjX1fiqSN6mp91OJfFBNvR9X8oU19X6qkR82n+9G/qimXr8GeZpa
enwt8tK19Pja5K1q6fF1yUea493Jl/MWp8Cfg/9Xm3t53qIj+HjwdeDnwd+B
Z63DvQpv2RV8Cvhm8CvgX8Bz1+Vek7fwBZ8Jvgv8BngSeMF63Ovzln3B54Lv
B78LngJe3J17U95iCPgi8KPgj8Ft6nN34i3agI8CXwl+GvwleIYG3Cvylh7g
E8HXg18Efw9u35B7Vd7CG1yCbwW/Cv4VPE8j7rV5Sz/wIPDd4LHgyeCFG3Nv
wFv0B58HfhD8Hvhf8BJNuDfnLYeCLwE/Bv4U3LYpd2fesi34GPBV4BHgr8Az
NePuwlt0AvcH3wAeCf4RPHtz7m68ZTfwaeDbwK+BfwPP14J7Hd6iF3gw+F7w
W+C/wIu05N6ItxwAvgA8HPwB+D/wkq24t+AthoMvBT8BHg+erjX3srxFe/Cx
4GvAz4K/Ac/chntl3rIz+GTwjeBR4J/Ac7blXp236A4+HXwH+HXwH+D523Gv
Z3YD8t68xWyzW5Hv4y3iwH+DO7Tn3pi3GAQeAn7YbF/yh7xFmg7cS/EWrcBH
gC8HPwn+HDx9R+7lecsO4OPB14KfB38LntWDuytv0RU8AHwz+GXwL+C5PLnX
5C17gM8E3wl+AzwRvGAn7u68RV/wOeD7we+Ap4AX68y9KW85GHwR+BHwx+Bp
u3B34i1bg48CXwF+GvwFeIau3CvwFh7gE8DXg18Afw+ezYt7Vd7SC1yCbwG/
Cp4Ansebey3ewg88EHw3+E3wZPBC3bg34C37gc8DPwB+DzwVvIQP92a8xVDw
xeDHwJ+A23bnXoa3aAs+GnwV+BnwV+AZe3B34S09wf3BQ8EjwT+AZ/flXo23
6AY+FXwbeDT4N/C8ftzr8JY9wYPB94DfAv8JXqQn94a8xQDw+eDh4PfB/4E7
9uLegrccBr4U/Dh4PLhdb+5lect24GPBV4OfBX8NnrkP90q8RWfwSeAbwS+B
fwLP0Zd7dd7SB3w6+Hbw6+DfwfP3416Xt+gNPgt8H/ht8N/gRftzb8xbDgQP
AT8E/hBcDOBeirdsCT4CfBn4SfBn4OkHci/HW3QAHwe+Fvwc+FvwLIO4u/KW
XcADwDeBXwb/DJ5rMPcavEUP8BngO8FjwBPBCwzh7s5b9gGfAx4Gfgf8D3ix
odyb8BaDwReCHwF/BJ52GPfSvEVr8JHgK8BPgb8A/2849wq8ZUfwCeDrwC+A
vwPPNoJ7Fd7CC3wK+BbwK+AJ4LlHcq/FW/qCB4LvAr8JngReaBT3+rxFP/C5
4AfA74Knghcfzb0ZbzkEfDH4UfAn4DZjuJfhLduAjwZfCX4G/CV4xrHcK/IW
nuATwUPBL4J/ALcfx70ab+kNPhV8K3g0+FfwvOO51+YteoIHge8BjwX/CV54
AveGvGV/8PngB8Hvg/8Fd5zIvTlvMQx8Cfhx8Kfgdv7cnXmLduBjwFeDR4C/
Bs80iXsl3rIT+CTwDeCXwD+C55jM3Y238AGfBr4d/Br4d/B8Adzr8pa9wGeB
7wW/Df4LvOgU7o14i4HgC8APgT8AF5J7Sd6iJfhw8GXgJ8Cfgaebyr0cb9ke
fBz4GvBz4G/As0zjXpm36AI+GXwTeBT4Z/Cc07nX4C27g88A3wEeA/4DvMAM
7vV4iz7gs8HDwOPA/4A7zOTehLccBL4Q/DD4I/A0gdxL85atwEeCLwc/Bf4c
/L8g7uV5i47g48HXgZ8HfweeNZh7Fd6yK/gU8M3gV8C/gOeexb0mb+ELPhN8
F/gN8CTwgrO51+ct+4LPBd8Pfhc8Bbz4HO5NeYsh4IvAj4I/BreZy92Jt2gD
Pgp8Jfhp8JfgGeZxr8hbeoBPBF8PfhH8Pbj9fO5VeQtvcAm+Ffwq+FfwPAu4
1+Yt/cCDwHeDx4IngxcO4d6At+gPPg/8IPg98L/gJRZyb85bDgVfAn4M/Cm4
7SLuzrxlW/Ax4KvAI8BfgWdazN2Ft+gE7g++ATwS/CN49iXc3XjLbuDTwLeB
XwP/Bp5vKfc6vEUv8GDwveC3wH+BF1nGvRFvOQB8AXg4+APwf+All3NvwVsM
B18KfgI8HjzdCu5leYv24GPB14CfBX8Dnnkl98q8ZWfwyeAbwaPAP4HnXMW9
Om/RHXw6+A7w6+A/wPOv5l6Pt+wNPht8H3gc+G9whzXcG/MWg8BDwA+DPwRP
s5Z7Kd6iFfgI8OXgJ8Gfg6dfx708b9kBfDz4WvDz4G/Bs67n7spbdAUPAN8M
fhn8C3iuUO41ecse4DPBd4LfAE8EL7iBuztv0Rd8Dvh+8DvgKeDFNnJvylsO
Bl8EfgT8MXjaTdydeMvW4KPAV4CfBn8BnmEz9wq8hQf4BPD14BfA34Nn28K9
Km/pBS7Bt4BfBU8Az7OVey3ewg88EHw3+E3wZPBC27g34C37gc8DPwB+DzwV
vMR27s14i6Hgi8GPgT8Bt93BvQxv0RZ8NPgq8DPgr8Az7uTuwlt6gvuDh4JH
gn8Az76LezXeohv4VPBt4NHg38Dz7uZeh7fsCR4Mvgf8FvhP8CJ7uDfkLQaA
zwcPB78P/g/ccS/3FrzlMPCl4MfB48Ht9nEvy1u2Ax8Lvhr8LPhr8Mxh3Cvx
Fp3BJ4FvBL8E/gk8x37u1XlLH/Dp4NvBr4N/B89/gHtd3qI3+CzwfeC3wX+D
Fz3IvTFvORA8BPwQ+ENwEc69FG/ZEnwE+DLwk+DPwNMf4l6Ot+gAPg58Lfg5
8LfgWQ5zd+Utu4AHgG8Cvwz+GTzXEe41eIse4DPAd4LHgCeCFzjK3Z237AM+
BzwM/A74H/Bix7g34S0Ggy8EPwL+CDztce6leYvW4CPBV4CfAn8B/t8J7hV4
y47gE8DXgV8Afwee7ST3KryFF/gU8C3gV8ATwHOf4l6Lt/QFDwTfBX4TPAm8
0Gnu9XmLfuBzwQ+A3wVPBS9+hnsz3nII+GLwo+BPwG0iuJfhLduAjwZfCX4G
/CV4xrPcK/IWnuATwUPBL4J/ALc/x70ab+kNPhV8K3g0+FfwvOe51+YteoIH
ge8BjwX/CV74AveGvGV/8PngB8Hvg/8Fd7zIvTlvMQx8Cfhx8KfgdpHcnXmL
duBjwFeDR4C/Bs90iXsl3rIT+CTwDeCXwD+C54ji7sZb+IBPA98Ofg38O3i+
y9zr8pa9wGeB7wW/Df4LvOgV7o14i4HgC8APgT8AF1e5l+QtWoIPB18GfgL8
GXi6aO7leMv24OPA14CfA38DnuUa98q8RRfwyeCbwKPAP4PnvM69Bm/ZHXwG
+A7wGPAf4AViuNfjLfqAzwYPA48D/wPucIN7E95yEPhC8MPgj8DT3ORemrds
BT4SfDn4KfDn4P/Fci/PW3QEHw++Dvw8+DvwrLe4V+Etu4JPAd8MfgX8C3ju
29xr8ha+4DPBd4HfAE8CLxjHvT5v2Rd8Lvh+8LvgKeDF73BvylsMAV8EfhT8
MbjNXe5OvEUb8FHgK8FPg78Ez3CPe0Xe0gN8Ivh68Ivg78Ht73Ovylt4g0vw
reBXwb+C53nAvTZv6QceBL4bPBY8GbzwQ+4NeIv+4PPAD4LfA/8LXuIR9+a8
5VDwJeDHwJ+C2z7m7sxbtgUfA74KPAL8FXimJ9xdeItO4P7gG8AjwT+CZ3/K
3Y237AY+DXwb+DXwb+D54rnX4S16gQeD7wW/Bf4LvMgz7o14ywHgC8DDwR+A
/wMv+Zx7C95iOPhS8BPg8eDpXnAvy1u0Bx8Lvgb8LPgb8MwvuVfmLTuDTwbf
CB4F/gk85yvu1XmL7uDTwXeAXwf/AZ7/Nfd6vGVv8Nng+8DjwH+DO7zh3pi3
GAQeAn4Y/CF4mrfcS/EWrcBHgC8HPwn+HDz9O+7lecsO4OPB14KfB38LnvU9
d1feoit4APhm8MvgX8BzfeBek7fsAT4TfCf4DfBE8IIfubvzFn3B54DvB78D
ngJe7BP3przlYPBF4EfAH4On/czdibdsDT4KfAX4afAX4Bm+cK/AW3iATwBf
D34B/D14tgTuVXlLL3AJvgX8KngCeJ6v3GvxFn7ggeC7wW+CJ4MX+sa9AW/Z
D3we+AHwe+Cp4CW+c2/GWwwFXwx+DPwJuO0P7mV4i7bgo8FXgZ8BfwWeMZG7
C2/pCe4PHgoeCf4BPHsS92q8RTfwqeDbwKPBv4HnTeZeh7fsCR4Mvgf8FvhP
8CI/uTfkLQaAzwcPB78P/g/c8Rf3FrzlMPCl4MfB48HtfnMvy1u2Ax8Lvhr8
LPhr8Mx/uFfiLTqDTwLfCH4J/BN4jhTu1XlLH/Dp4NvBr4N/B8+fyr0ub9Eb
fBb4PvDb4L/Bi/7l3pi3HAgeAn4I/CG4+Me9FG/ZEnwE+DLwk+DPwNOL0szL
8RYdwMeBrwU/B/4WPEsa7q68ZRfwAPBN4JfBP4PnSsu9Bm/RA3wG+E7wGPBE
8AI23N15yz7gc8DDwO+A/wEvZsu9CW8xGHwh+BHwR+Bp7biX5i1ag48EXwF+
CvwF+H/puFfgLTuCTwBfB34B/B14tvTcq/AWXuBTwLeAXwFPAM/9H/davKUv
eCD4LvCb4EnghTJwr89b9AOfC34A/C54KnjxjNyb8ZZDwBeDHwV/Am6TiXsZ
3rIN+GjwleBnwF+CZ8zMvSJv4Qk+ETwU/CL4B3D7LNyr8Zbe4FPBt4JHg38F
z5uVe23eoid4EPge8Fjwn+CFs3FvyFv2B58PfhD8PvhfcEd77s15i2HgS8CP
gz8Ft8vO3Zm3aAc+Bnw1eAT4a/BMObhX4i07gU8C3wB+CfwjeI6c3N14Cx/w
aeDbwa+BfwfPl4t7Xd6yF/gs8L3gt8F/gRfNzb0RbzEQfAH4IfAH4CIP95K8
RUvw4eDLwE+APwNPl5d7Od6yPfg48DXg58DfgGfJx70yb9EFfDL4JvAo8M/g
OfNzr8FbdgefAb4DPAb8B3iBAtzr8RZ9wGeDh4HHgf8BdyjIvQlvOQh8Ifhh
8EfgaQpxL81btgIfCb4c/BT4c/D/CnMvz1t0BB8Pvg78PPg78KxFuFfhLbuC
TwHfDH4F/At47qLca/IWvuAzwXeB3wBPAi/owL0+b9kXfC74fvC74CngxYtx
b8pbDAFfBH4U/DG4TXHuTrxFG/BR4CvBT4O/BM9QgntF3tIDfCL4evCL4O/B
7R25V+UtvMEl+Fbwq+BfwfOU5F6bt/QDDwLfDR4LngxeuBT3BrxFf/B54AfB
74H/BS9Rmntz3nIo+BLwY+BPwW2duDvzlm3Bx4CvAo8AfwWeqQx3F96iE7g/
+AbwSPCP4Nmdubvxlt3Ap4FvA78G/g08X1nudXiLXuDB4HvBb4H/Ai9Sjnsj
3nIA+ALwcPAH4P/AS5bn3oK3GA6+FPwEeDx4ugrcy/IW7cHHgq8BPwv+Bjxz
Re6VecvO4JPBN4JHgX8Cz+nCvTpv0R18OvgO8OvgP8DzV+Jej7fsDT4bfB94
HPhvcIfK3BvzFoPAQ8APgz8ET+PKvRRv0Qp8BPhy8JPgz8HTV+FenrfsAD4e
fC34efC34FmrcnflLbqCB4BvBr8M/gU8VzXuNXnLHuAzwXeC3wBPBC/oxt2d
t+gLPgd8P/gd8BTwYtW5N+UtB4MvAj8C/hg8bQ3uTrxla/BR4CvAT4O/AM9Q
k3sF3sIDfAL4evAL4O/Bs9XiXpW39AKX4FvAr4IngOepzb0Wb+EHHgi+G/wm
eDJ4oTrcG/CW/cDngR8AvweeCl6iLvdmvMVQ8MXgx8CfgNvW416Gt2gLPhp8
FfgZ8FfgGd25u/CWnuD+4KHgkeAfwLPX516Nt+gGPhV8G3g0+DfwvA241+Et
e4IHg+8BvwX+E7xIQ+4NeYsB4PPBw8Hvg/8Dd2zEvQVvOQx8Kfhx8Hhwu8bc
y/KW7cDHgq8GPwv+GjxzE+6VeIvO4JPAN4JfAv8EnqMp9+q8pQ/4dPDt4NfB
v4Pnb8a9Lm/RG3wW+D7w2+C/wYs2596YtxwIHgJ+CPwhuGjBvRRv2RJ8BPgy
8JPgz8DTt+RejrfoAD4OfC34OfC34FlacXflLbuAB4BvAr8M/hk8V2vuNXiL
HuAzwHeCx4Anghdow92dt+wDPgc8DPwO+B/wYm25N+EtBoMvBD8C/gg8bTvu
pXmL1uAjwVeAnwJ/Af5fe+4VeMuO4BPA14FfAH8Hnq0D9yq8hRf4FPAt4FfA
E8Bzd+Rei7f0BQ8E3wV+EzwJvJAH9/q8RT/wueAHwO+Cp4IX97R05ikjv0s/
8maqK9dMf+1ib/Ihqr0SV2/N2J98sWoZ5iLbDiI/qnrroItdlwwlf6I6upSX
6/0R5DadLP3j2efMRcaQl1FdYO301z3Hk7dR7d4lX8Q2f/LRqvvm3LPyYwD5
StVzr9cfVWka+RnV4bPutBo7k/yl6geNBpU6EUyesbO+vrnkFXkLT/CJ4KHg
F8E/gNt34V6Nt/QGnwq+FTwa/Ct43q7ca/MWPcGDVN8Y3iH51ULyPaavII9V
fXjIw8NDVpH/VD3Ukg/XkBf2srRj80WOzdeTN1T9SD1hA3l/1YvUgM3k81W3
UH+wlfygl15vB/l9L73eLvK/Xnq9PeSO3nq9MPLm3nq9A+TDvPV6h8iXeOv1
jpAf99brHSd/6q3XO0lu102vd5rcuZte7yx5u256vfPkY7rp9SLJV3fT60WR
R3TT610lf91Nr3eNPJOPXi+GvJKPXi+WvJOPXu82+SQfvd5d8g0+er375Jd8
9HqPyD+qrnD87cY5T8hzdLd099E3G+d9Ru6meq4a8ILcR7UaXuE1+TTVKo+/
Jd+uOp+PZYIP5NdUN8lr+YNP5N9Vq+l9Esjz9bA0Pf0beV3VsRYenUjeq4fe
70/yWT30fn+T7+2h95tKfruH3u8/8l899H7T7lVe1Ffv11a1bOSr95uefKCv
3m8G8gW+er+ZyQ/56v1mJX/gq/ebnVz46f3mIi/JW7QEHw6+DPwE+DPwdD25
l+Mt24OPA1+j+uRIx1Pt85OfU+2UfM7pWRHyN6qX+PstGe5InqWXfr4zeWXV
9P8nX5a8i2r6/5MvTz7ZHF+RfJM53oU8yhxfmfyzOb4Kec7euquR1zC7Onl3
s2uSzzC7NvkOs+uSx5jtTv7D7AbkBfrobkRez+wm5H3MbkY+m7cIM7sleZxu
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
NuCjwFeCnwZ/CZ7hGPeKvKUH+ETw9eAXwd+D2x/nXpW38AaX4FvBr4J/Bc9z
gntt3tIPPAh8N3gseDJ44ZPcG/AW/cHngR8Evwf+F7zEKe7Necuh4EvAj4E/
Bbc9zd2Zt2wLPgZ8FXgE+CvwTGe4u/AWncD9wTeAR4J/BM8ewd2Nt+wGPg18
G/g18G/g+c5yr8Nb9AIPBt8Lfgv8F3iRc9wb8ZYDwBeAh4M/AP8HXvI89xa8
xXDwpeAnwOPB013gXpa3aA8+FnwN+FnwN+CZL3KvzFt2Bp8MvhE8CvwTeM5I
7tV5i+7g08F3gF8H/wGe/xL3erxlb/DZ4PvA48B/gztEcW/MWwwCDwE/DP4Q
PM1l7qV4i1bgI8CXg58Efw6e/gr38rxlB/Dx4GvBz4O/Bc96lbsrb9EVPAB8
M/hl8C/guaK51+Qte4DPBN8JfgM8EbzgNe7uvEVf8Dng+8HvgKeAF7vOvSlv
ORh8EfgR8MfgaWO4O/GWrcFHga8APw3+AjzDDe4VeAsP8Ang68EvgL8Hz3aT
e1Xe0gtcgm8BvwqeAJ4nlnst3sIPPBB8N/hN8GTwQre4N+At+4HPAz+gelHM
8bO5qpLfU30ny9aofl3JU1UXarUw5vhk8hK3Le07e9KdLBvJm6m2jH7sG0k+
VPXHdB1fHnxPvlj1iuLrx0xPH6b8mOoTZ3P92p1ftXyi+rGasCy5bZzeX13y
MmbXI29rtjv5aLPrk68yuwH5GbMbkr8yuxF5xjuWVr9O40ktXFTvUr9QY7jn
HT2+Mbm/OZ5ahprjDY80xzch/2COpxbZ7+rxhle7q8c3Je92V4+nllPN8YZv
M8c3I482x1OLb+Z4w/Pe0+Obk9e5p8dTy5739HjDg83xLcj36PFxrchvmePb
kv/U42UH8iL39fye5A3vW8c7dyEfcF/P700+X7fsRh5uenfy++bze5D/M+f3
JXd8oJ/vR97igd5fT/JhD/T+e5Ev1eNFH/LjvEU8uN1D7mV5y3bgY8FXg58F
fw2e+RH3SrxFZ/BJ4BvBL4F/As/xmHt13tIHfDr4dvDr4N/B8z/hXpe36A0+
C3wf+G3w3+BFn3JvzFsOBA8BPwT+EFzEcy/FW7YEHwG+DPwk+DPw9M+4l+Mt
OoCPA18Lfg78LXiW59xdecsu4AHgm8Avg38Gz/WCew3eogf4DPCd4DHgieAF
XnJ3V73kbrvu50eR91E92GnfhhRqMUd1wwlZXlUdTR6muuCVQU7DqMUd1d8L
XBm03fA/qi2875nhxV5ZeuPJwG8FxpA3Ua2m86AWg1W3795wwjzDF6q2LH8y
0vAjr/R+x5I/4i3SvuZemrdoDT4SfAX4KfAX4P+94V5B9YQ2Je0cDe+oeuGv
2At+hk9QvXOznLHe8HWqz7Wt0Oix4RdUP/z90KbgOPJ3qr9vmXW+C7XI9tbS
mdu7TV9meBXVjikvG9w23Et17W2L0uYYTz5FtWcH93NtqcUW1UNSP02dZ/gV
1YHbV9e/aniC6nUdm6fJMIE89ztLH/mbFNGEWtRSHbPDcgGG+6p+62FZwPDA
d/o8JpLv4i1ugieBF3rPvT5v0Q98LvgB8LvgqeDFP3BvxlsOAV8MfhT8CbjN
R+5leMs24KPBV4KfAX8JnvET94q8hSf4RPBQ8IvgH8DtP3Ovxlt6g08F3woe
Df4VPO8X7rV5i57gQeB7wGPBf4IXTuDekLfsDz4f/KDqofZrrjTyJ7+vOqFX
Vf9Fk8j/qh555HrZ+Mnkjl8t/SNj/0flp5A3Vz22e5p5/pJ8mOqf+1fVuTyV
fInqiXZVPueZTn5cdUqXa+t6zyB/qjpgd9+2B2aS233T+wsid1ZNP08Gk7dT
TT8/ziIfY46fQ77aHD+XPMIcP4/8tTl+AXmm76WNz8/kDyGvpFp9vMZ1IXkn
1deio6NbLSKfpJo+n7OYfMN363xyCfklPd/KpeQf9XwHl5Hn+GGdL3o5udsP
63yvV5D7/ND7W0U+TXXJ5oscM6wm365a3Z4gxxrya6rV/QsKriX/rpruT7CO
PF+ien0c8vBw+fXkdVWr2x1UCyXvlWhdz30D+axE63rNN5LvTbSu12ET+e1E
63rem8l/JVrX672FvGiSdb0hW8kbJVnXG7uNfGCSPq/t5AuSrOvN2kF+KMm6
3qKd5A+SrOut3kUukq3rbd5NXjLZut6ePeQtk63rHd5LPjzZul7EPvJlydb1
LoeRn0i2rhe7n/xZsnW9hwfI0/20rvfyIHm5n9b1PoWTt/9pXS/pEPm4n/rr
d4R8jWr1cYN31OKc6lvq8wBHyd+oVh9fOHmMPMuv0tbPFxwnr6xafRxiwQny
Lqrp8wonySerVp8n8DtFvkm1+vhDy9PkUaoPhYeHVzlD/lk1fZ4igjzn79LG
5x3SnyWvofqr+jwCteyuWn184sE58hmq6fMN58l3qFYfx9hzgTxG9XL1eYmL
5D9+6693JHmBP9bzGHCJvN4f63l0iCLv88d6HrUvk8/+Yz2PklfIw/5YzyPb
VfK4P9bz+Ekt/vyxnsezaHKHFOt5XL1G3iTFeh7h18kHpVjPY10M+cIU63kE
3SA/nGI9j+E3yR+lWM/DK5Y8Tar1PBreIi+daj2P8rfJW6VazyNPHPnIVP39
cYd8udl3yU+ZfY/8udn3yf/7q/sBeXmzH5J3NPsR+XizH5OvM/sJ+Xmzn5K/
MzuePOs/3c/Iq5j9nLyrarqfB7WYotq4nwn5ZtXq9h6jX5JfUa2GN35F/kW1
yryvyXMLp0/1N6n7f1DLmqrfqRuCvCH3VV1R3XDkLflM1XT/kHfku1TT/Uje
k99QTfv9QJ6kmvZLLQumcbLu9yN5fdW030/kfVXTfj+Tz1VN+/1Cvj+N3i+1
uJtG7zeBPCWN3u9X8uJp9X6/kTdNq/f7nXxIWr3fH+SL0ur9UoujafV+E8kf
p9X7TSK3sdH7TSZ3stH7/Unexkbvl1qOstH7/UW+0kbv9zf5aRu93z/kL230
flPIM9jq/aaSV7TV+6WWHrZ6v3/JJ9rq/f4jX2+r9yv2K79oq/ebRrV8b6v3
Sy3s7fR+05JXtdP7tSH3ttP7tSWXdnq/duRb7fR+05Ff5S2+gudJx702b+kH
HgS+GzwWPBm8cHruDXiL/uDzwA+C3wP/C17iP+7Necuh4EvAj4E/BbfNwN2Z
t2wLPgZ8FXgE+CvwTBm5u/AWncD9wTeAR4J/BM+eibsbb9kNfBr4NvBr4N/A
82XmXoe36AUeDL4X/Bb4L/AiWbg34i0HgC8ADwd/AP4PvGRW7i14i+HgS8FP
gMeDp8vGvSxv0R58LPga8LPgb8Az23OvzFt2Bp8MvhE8CvwTeM7s3KvzFt3B
p4PvAL8O/gM8fw7u9XjL3uCzwfeBx4H/BnfIyb0xbzEIPAT8MPhD8DS5uJfi
LVqBjwBfDn4S/Dl4+tzcy/OWHcDHg68FPw/+FjxrHu6uvEVX8ADwzeCXwb+A
58rLvSZv2QN8JvhO8BvgieAF83F35y36gs8B3w9+BzwFvFh+7k15y8Hgi8CP
gD8GT1uAuxNv2Rp8FPgK8NPgL1QvtK93+NB/5BkKWjqy8pQK4zKRV1D92+PM
1upZyT1UVxz3r8hve/IJqnutrLf8RE7y9aqXn5iSbXIe8guqox+fCaqbn/x9
Qb1+IfJshZys//thYfKqqun9myLkXoWs42VRcqnH73Qg36LHxxUjv6rHixLk
CWY7kucprLskeS2zS5H7mV2aPNBsJ/LdZpchv2m2M3my2WXJCxXRXY68gdnl
yfuZXYF8ntkVyQ+Y7UJ+z+xK5KlmVyYvUVS3K3kzs6uQDzW7Kvlis6uRHzPb
jfyJ2dXJbR101yAvY3ZN8rZm1yIfbXZt8lVm1yE/Y3Zd8ldm1yPPWMzaCdTC
RXe8O7mn7hv1yf11RzQgD9Ud1pA8UndoI/IPukMak2cvrr/fmpBX0z28KXk3
3b7NyKfqbtecfJtu9xbk0bpdWpJ/0+3QijxvCWvbtyavo1u0Ie9pdnvyYLM9
yPeY3Zn8ltle5D9V0/t11KKIo5P1/THDG6qm9xO9yQeopvfvqOV81fR+meHh
qun9xW7k9x31eVGLf47W9R4a7ljSul41H/IWJa3rLaKWw0pa1/tk+NKS1vWa
dyc/XtK63mZqEV9SX18PcrtSun3Jy5rtR97O7J7kY83uRb7a7N7kZ83uQ/7a
7L7kmUvr7kdeyez+5J3NHkA+yexB5BvNHkJ+SXcEtfikWw4lz+Gkv5+GkVfX
LYaT+zjp1z9qMd1Jvz6OIN+ux8uR5Nf1eM9R5N/1eOfR5PnL6PnHkNcto+en
Fr3L6PnHks/S4+U48n16vOd48tt6vPME8t/m/BPJizrr+alFY2c9vz/5QGc9
/yTyED3eczL5IT3eOYD8oR4vppCLsroleSmzp5K3NHsa+Qizp5MvM3sG+Umz
Z5I/MzuQPH053UHk5XQ7BJN30O0+i3ycbt/Z5Gt1yznk53SHziV/qztiHnmW
8vr1cD65q24RQt5FdwS1CNAtF5Jv0u2+iPyy+fzF5J/NXkKeq4LupeQ1dEtq
0cP0ZeQzTKcWO01fTh5jOrVINH0FeYGK2qmFu26xkryP6dRijumryMNMpxZ3
TF9N/sd0alHMRfsa8ia6JbUYbPpa8oWmU4sjpq8jf2Q6tUhbSft68tK8RWvw
keArwE+BvwD/rzL3CrxlR/AJ4OvAL4C/A8/myr0Kb+EFPgV8C/gV8ATw3FW4
1+ItfcEDwXeB3wRPAi9UlXt93qIf+FzwA+B3wVPBi1fj3oy3HAK+GPwo+BNw
GzfuZXjLNuCjwVeCnwF/CZ6xOveKvIUn+ETwUPCL4B/A7Wtwr8ZbeoNPBd8K
Hg3+FTxvTe61eYue4EHge8BjwX+CF67FvSFv2R98PvhB8Pvgf8Eda3NvzlsM
A18Cfhz8KbhdHe7OvEU78DHgq8EjwF+DZ6rLvRJv2Ql8EvgG8EvgH8Fz1OPu
xlv4gE8D3w5+Dfw7eD537nV5y17gs8D3gt8G/wVetD73RrzFQPAF4IfAH4CL
BtxL8hYtwYeDLwM/Af4MPF1D7uV4y/bg48DXgJ8DfwOepRH3yrxFF/DJ4JvA
o8A/g+dsbG37UPIauh02kHfX7bKRfIZu903kO3S320weo9t3C/kP3cO3khdo
Ym25jbye7pDt5H10h+4gn607bCd5mO6IXeRxum/sJv+jO34PuUNTayfsJW+i
W4SRD9Jtv598oW6HA+SHdbscJH+k2z2cPE0zff2HyEvr9j1M3kr38CPkI3XL
o+TLdYccIz+lO/Q4+XPdYSfI/2uur/8keXndN06Rd9Qdf5p8vO6EM+TrdIuz
5Od1258jf6fb4Tx51hb6+i+QV9HtfpG8q+52keRTdPteIt+se3gU+RXd8jL5
F90hV8hzt9TXf5W8pu6waHJf3RHXyGfqvnGdfJfu+BjyG7oTbpAn6Rax5AVb
6eu/RV5ft8Nt8r66XeLI5+p2v0O+X3e7u+R3dfveI0/RPfw+efHW+vofkDfV
HfKQfIju0Efki3SHPSY/qjviCflj3Teektu00dcfT+6kO+EZeRvd4gX5KN32
L8lX6nZ4RX5at8tr8pe63d+QZ2irr/8teUXdvu/IPXQPf08+Ubf8QL5ed8hH
8ou6Qz+Rv9cd9pncvp2+/i/kVXXfSCD31h3/lVzqTvhGvlW3+EF+VXVbdf9n
avFVNd2vOZE8T3sn6/2ik8hrq1a3g96fTO6nmu4v/ZM8SPV9dT/oX+S7Vavb
VY/9TR6rmu4f/Yc8WfVFdQPqFPLCHZys95tOJW+gmu53/Ze8v2q1fM5/5PM6
6OsRB5Qf7KCvh1re66CvJw353w76etKSl+ior8eGvHlHfT225EM76uuxI1/S
UV9POvJjHfX1pCd/2lFfz3/kth76ejKQO3vo68lI3tZDX08m8jEe+noyk68y
Owt5hNlZyV+ZnY08k6due3IXs7OTdzI7B7m/2TnJN5idizzS7NzkH83OQ569
k+685G5m5yPvZnZ+8mlmFyDfZnZB8mtmFyL/pltSi3ydtRcmr6M7nlr00h1R
hDxYd2hR8r26pQP5Ld2+xch/6XYvTl6ki349KEHeSLdwJB+gO55aLNAdUZI8
XHdoKfIHumVp8n+6fZ3IS3bV65chb6HbwZl8uG5Rlnyp2eXIT5hdnjyet0jn
xb0sb9EefCz4GvCz4G/AM3tzr8xbdgafDL4RPAr8E3jObtyr8xbdwaeD7wC/
Dv4DPL8P93q8ZW/w2eD7wOPAf4M7dOfemLcYBB4Cfhj8IXiaHtxL8RatwEeA
Lwc/Cf4cPL0v9/K8ZQfw8eBrwc+DvwXP6sfdlbfoCh4Avhn8MvgX8Fw9udfk
LXuAzwTfCX7DbBfyRN6iYC/u7rxFX/A54PvB74CngBfrzb0pbzkYfBH4EfDH
4Gn7cHfiLVuDjwJfAX4a/AV4hr7cK/AWHuATwNeDXwB/D56tH/eqvKUXuATf
An4VPAE8T3/utXgLP/BA8N3gN8GTwQsN4N6At+wHPg/8APg98FTwEgO5N+Mt
hoIvBj8G/gTcdhD3MrxFW/DR4KvAz4C/As84mLsLb+kJ7g8eCh4J/gE8+xDu
1XiLbuBTwbeBR4N/A887lHsd3rIneDD4HvBb4D/Biwzj3pC3GAA+Hzwc/D74
P3DH4dxb8JbDwJeCHwePB7cbwb0sb9kOfCz4avCz4K/BM4/kXom36Aw+CXwj
+CXwT+A5RnGvzlv6gE8H3w5+Hfw7eP7R3OvyFr3BZ4HvA78N/hu86BjujXnL
geAh4IfAH4KLsdxL8ZYtwUeALwM/Cf4MPP047uV4iw7g48DXgp8DfwueZTx3
V96yC3gA+Cbwy+CfwXNN4F6Dt+gBPgN8J3gMeCJ4gYnc3XnLPuBzwMPA74D/
AS/mz70JbzEYfCH4EfBH4GkncS/NW7QGHwm+AvwU+Avw/yZzr8BbdgSfAL4O
/AL4O/BsAdyr8BZe4FPAt4BfAU8Azz2Fey3e0hc8EHwX+E3wJPBCknt93qIf
+FzwA+B3wVPBi0/l3oy3HAK+GPwo+BNwm2ncy/CWbcBHg68EPwP+EjzjdO4V
eQtP8IngoeAXwT+A28/gXo239AafCr4VPBr8K3jemdxr8xY9wYPA94DHgv8E
LxzIvSFv2R98PvhB8Pvgf8Edg7g35y2GgS8BPw7+FNwumLszb9EOfAz4avAI
8NfgmWZxr8RbdgKfBL4B/BL4R/Acs7m78RY+4NPAt4NfA/8Onm8O97q8ZS/w
WeB7wW+D/wIvOpd7I95iIPgC8EPgD8DFPO4leYuW4MPBl4GfAH8Gnm4+93K8
ZXvwceBrwM+BvwHPsoB7Zd6iC/hk8E3gUeCfwXOGcK/BW3YHnwG+AzwG/Ad4
gYXc6/EWfcBng4eBx4H/AXdYxL0JbzkIfCH4YfBH4GkWcy/NW7YCHwm+HPwU
+HPw/5ZwL89bdAQfD74O/Dz4O/CsS7lX4S27gk8B3wx+BfwLeO5l3GvyFr7g
M8F3gd8ATwIvuJx7fd6yL/hc8P3gd8FTwIuv4N6UtxgCvgj8KPhjcJuV3J14
izbgo8BXgp8GfwmeYRX3irylB/hE8PXgF8Hfg9uv5l6Vt/AGl+Bbwa+CfwXP
s4Z7bd7SDzwIfDd4LHgyeOG13BvwFv3B54EfBL8H/he8xDruzXnLoeBLwI+p
bv3pfk2/SuRPVRfNM/9NTGVy2/WW/la3wZK6VcidVV/sl+S+pyp5W9UrQnZ+
KuhGPkb1wGPdV82uTr5KdZ3nOZr+qkEeodo+06Xv/WqRv1L93NU/9E5t8kyh
lj7UrWLrxnXJXVQHz3zx62A98k6qvfcu31q8Prm/6vJ3W3Zc2IB8Q6i+vkbk
karp8ynU4qNq436y5Nk3WMfLJuRuG5z0/WHJu22wjnduRj5NjxfNybfpdm9B
fs2cryX5N90RrcjzbdTPb0NeR7d7W/JeumU78mDdEe3J95rP70h+SzXdf4pa
/FJN96fyIC+yycl6/ypP8kaq6f5WncgHbNLrdSZfsMk6X98u5OGbrPO16kr+
QM/n6kX+T8+X35u85Ga9v27kLXiL4eBLwU+Ax4On28K9LG/RHnws+Brws+Bv
wDNv5V6Zt+wMPhl8I3gU+CfwnNu4V+ctuoNPB98Bfh38B3j+7dzr8Za9wWeD
7wOPA/8N7rCDe2PeYhB4CPhh8IfgaXZyL8VbtAIfAb4c/CT4c/D0u7iX5y07
gI8HXwt+HvwteNbd3F15i67gAeCbwS+DfwHPtYd7Td6yB/hM8J3gN8ATwQvu
5e7OW/QFnwO+H/wOeAp4sX3cm/KWg8EXgR8BfwyeNoy7E2/ZGnwU+Arw0+Av
wDPs516Bt/AAnwC+HvwC+HvwbAe4V+UtvcAl+Bbwq+AJ4HkOcq/FW/iBB4Lv
Br8JngxeKJx7A96yH/g88APg98BTwUsc4t6MtxgKvhj8GPgTcNvD3MvwFm3B
R4OvAj8D/go84xHuLrylJ7g/eCh4JPgH8OxHuVfjLbqBTwXfBh4N/g087zHu
dVT/sln52N2HvKfqzFXbBIZ3Jw9W7dDXpqKTL/ke1VWWH7272o/8lupmUUNk
tl7kP1V3+1W8zPTe5EWOW3q4872bSX3IG6qe4T1v4sB+5ANUr5jboMST/uTz
Ve8+lXy1/UDycNURn3ePvjiI/L7q20V7Fq4xhPyf6rft8kbuHkrueMLSKVOj
hzoMJ2+h2v7g1LxLRpAPU+34slpE+lHkS1VXz/2xv/9o8uOqWzXZkP3LGPJ4
1b7jOh3vOY7c7qSlR2/P1OvOePKyqoPvR2RqMZG8neo1GceGn/InH6s6rFZZ
n0qTyVervjA43m5LAPlZ1ffWLt2bT5K/Vv3xeovOc6eSZz6lv17TySuppp+P
qUVn1fTz7wzySarp59uZ5BtV08/X1PKSnk8Gkn/S87kGkec4bZ3vNbWofto6
38pgcp/T1vlazSKfflrvbzb5dt7iOvh38PxnuNflLXqDzwLfB34b/Dd40Qju
jXnLgeAh4IfAH4KLs9xL8ZYtdUfMIR+hW84jX6bbfQH5SfP5C8mfmc9fRJ7+
nH7+EvJyut2XkXfQLVaQj9MdsZJ8rfn81eTnzOevJX9rPn89eZbzls5zIGRm
uVByV9XlexfL1HUDeRfVDdWAjeQBqrtGNchzYBP5JtXDJt5a/WQz+WXVgeUs
E2wl/6x6zZMfW922kee6YGm1XO/t5DVUq+lCdpD3UP3UMvzUTvIZqhMt+W4X
+U7VmdQG9pDHqC6m/mAveaLq6qfetR62j7zARUu3URsMI3dXrS4vaj95H9Vq
+z8OkM9RvdCyvWLh5GGqt1mWb32I/I5qNf3Ew+R/VKunbz1CXizS0u8tfOso
eZNIfd7HyQdH6vM+Qb4wUp/3SfIjkfq8T5E/itTnfZo87SV93mfIS1/S532W
vPUlfd7nyEde0ud9nnzFJX3eF8hPXdLnfZH8xSV93pHk/0Xp844irxClz/sy
eccofd5XyCdE6fO+Sr4uSp93NPmFKH3e18jfRenzjiHPdlmf9w3yKpf1ed8k
97qszzuWfMplfd63yLdc1ucdR35Ft7xDnmD6PfLcV7TfJ6+lWzwk9zX7EXmg
2Y/Jd+l2pxY3zfkMT9IdYXihq/r5T8jrq6b701CLfqrp/jVPyeeqpvvbUIsD
qun+N/Hkd1XT/XGekaeqpvvnUMvi0Xo/z8mbRVvXc3xBPiTaut5larE42rre
kJfkR6Ot6+V4Rf4k2rreYWppc826nvdr8jLX9PW9IW+jmt7/eks+WjW9//We
fKUeLz+Sn9HjPT+Tv9TjnRPIM17X838jr3hdz/+d3PO6nj+RfKIeL5PJQ/V4
z1/kF/V45z/kH8z5U8ntY/Tz/5JX0y3EQeXepqdRLaaabkO+1XRb8mjT05F/
NT09ed4b2jOQ19YtM5L3ND0zeZDpWcj3mJ6NPFb1pRGFLo2gFj9Vz39Rff4L
wwvf1OdhT95QdSH1BGrZX/VLy/Dq2cnn39TnSy0Pqh6pnpCD/L7qGmoBavn3
pt5PTnLHWL0fatk8Vu/H8GGxej+5yJfE6v1Qi+Oxej+5yZ/G6v1QC7tbej95
yJ1v6f1Qi3a39H7yko9RTT8v5SNfrZp+/spPHqGafl4qQP5aNf38VZA80209
X2HySrf1fEXIO93W8xUln3Rbz+dAvuG2nq8Y+SVzvhLkH2/r729H8hxx+npL
kbvF6a+/E7lPnD4/Z/JperxzOfLteryoQH5N9wpq8V23S0XyfHesHUUt6ur2
dSHvpfsntZilO6QS+V7dTpXJb+uOoJa/dHdxJS9619oJ1LKR7uAq5AN1O1Ql
X6D7KLU4pLtdNfIHut9SW1729Xm5kZfUna86eUvdYdRyuO5mNciX6Y6nlid0
j69J/ky3fS3ydPetvZ1alNPtXpu8ve571GKc7uF1yNfo/q8u+TndodTyje7q
9cizPLD2DWpZWXd/d/IuukV98sm8xSbwKPDP4Dkfcq/BW3YHnwG+AzwG/Ad4
gUfc6/EWfcBng4eBx4H/AXd4zL0JbzkIfCH4YfBH4GmecC/NW7YCHwm+HPwU
+HPw/55yL89bdAQfD74O/Dz4O/Cs8dyr8JZdwaeAbwa/Av4FPPcz7jV5C1/w
meC7wG+AJ4EXfM69Pm/ZF3wu+H7wu+Ap4MVfcG/KWwwBXwR+FPwxuM1L7k68
RRvwUeArwU+DvwTP8Ip7Rd7SA3wi+Hrwi+Dvwe1fc6/KW3iDS/Ct4FfBv4Ln
ecO9Nm/pBx4Evhs8FjwZvPBb7g14i/7g88APgt8D/wte4h335rzlUPAl4MfA
n4LbvufuzFu2Vd0ldF7fOg3Ix6gefSvl9MyG5KtUL0w3OO/1RuQRqvfWeDgs
TxPyV6qvDm4R1b0peaYPln6z/pjDtmbkLqptbzlN+NKcvJPqYulW3HRrSe6v
um6N9M6yFfkG1d6Dx06Lak0eqXrc+lcP7NuSf1S9JNbDtWs78uwfLb3f7sKc
De3J3VRfr+768l0H8m6qPwzaWLuyB/k01enXZ1860ZN8m2rHWPnpXCfya6rr
2yU0ztSF/Jvq7tV7rOvYlTzfJ0tPHHQ9abUXeR3Vy9fVafvSm7yX6vCbu7eV
8yEPVn3TtpAY0518r+rPbnO6nOpBfkt1xkG/w+z8yH+pLr1uQIY2PcmLfLZ0
o5v3/Jb1Im+k2s+22fEnvckHqA5wO5KjdF/yBapXDSw1aFg/8nDVR9YuPX+k
P/kD1bdvWDY0kPyf6q82o0c3G0Re8ouls7i9iA4ZTN5CtfPADiXvDyEfrrrp
2rOTiw0jX6q69w2XOwOGk59QPdUmtMKBEeTxqtdWyxb0eyR5ugRLHx8Q8LTB
aPKyqu+u+eQ2Zwx5e9U/YrqF3BpLPlZ1dpvotwXHk69RXb5arfq9J5CfVd1i
wM6VuyeSv1Hdb03+bz/8yTN/tfSMmOAWdSaTV1YdmvbnxpkB5J1Vn6ra78+1
KeSTVT/of6djnqnkG1Unr268u/s08ijVuWLCbbdNJ/+k2iWto8+XGeQ5v1m6
ddXFh9wCyaurHtg/bVYZRN5dddDqEX2jgsmnq958Pf60/WzyHaoj0rTL23UO
+XXVj6ucGbZhLvkP1b/7VYh6N488/3dL51291qHyAvJ6ql2vZ54wMYS8t+p2
aSbdPLeQfLbqIVU+lMm0mHyf6tn9vKZ1XEIep3rbqssPVi8l/636/DXLX6hl
5A4/LB0vts8pt4K8sepU17wvR68kH6S6QL/A2qdWkYeorrYqcYndGvLDqjte
6/2p9Vryh6qHi9uNl60jT5No6XmuDdc9WU9eSvXOvgeSSm0gb6U6cmWxtsM2
ko9Qbflu3XZkE/nyRP36toX8pGr69yG1eK6a/v24lTx9kpP135fbyMurpn9/
bifvkKTn20E+PknPRy3XJun5dpKfN+fbRf7WnG83edZkPd8eclfV6p+bufeS
d1VN/97cRx6gx7uHkW/W4z33k1/W4wceIP+ix8uD5Ll+WscvDSev+dM6fuch
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
/ps8XU7bK9qtupBPJd9Jfpc8Qi7bs9itapD3IJ9Dvp/8MXm03LbnstupR96P
fCH5UfKX5HHz2F7AbtWY3CFfTn6a/AN54ry2F7fbaUE+inwt+SXyb+Sp8tle
xm7VnnwC+RbyG+R/ydPnt72y3U5X8unku8jvk0csYLu33U5N8p7k/5GHkD8h
j1HQ9tx2q/rk/ckXkR8jf00er5Dthex2mpAPJV9Bfpb8I3nSwraXsFu1Ih9N
vp78MvkP8tRFbC9nt9OBfBL5VvJb5P/IMxa1vYrdKpB8Bvke8lDyyMVsz2a3
qk3ei3we+UHyZ+Qxi9ue126nAflA8sXkJ8jfkCcoYXthu1Uz8mHkq8jPkX8m
T1bS9lJ2O63Jx5Jv0N2qYPHMN1fAr+pOO6b8wkOr4D91379dI8naNXCvUmG9
IKffpBnr4OV1NxnSIsrgDfBOupNf6Ti4/Sb4ZN03MwV9q70Fvl33rL4DA4pt
g9/W7Xtm5LMMO+DhfMI6YZrJzWPvgmfSfanbnOvfdsOr6Z5yZHHNB3vh3XTX
TLL2+Kn98Fm6Y3XcVmprCHyv7jN79++Yfwj+UPfYOCdyjToCj1I6rCu1vLgi
8Bg8h+4o226laXQCXkf30SiPZ5U9Be+je1ijN3FynIHP111m3ddRic/BD5eW
x/cC/Lnpi/DYZaQvwfPZrRqSDyJfSn6S/J3uO/lyLva7DE9YNqzX5Tzc7MUV
eFHdA7P6peh3Dd5cd/UMb65HvwEfoTt1mqHT596Er9b9NlmS2tlvwy/o3p9w
bax9d+BfdE+KU/pU9XvwFOXCunn0ayPv3Yf76M4dqVPZgAfwtuVkv4/g43Q3
DbpYPslj+Cbdu58vHpfzCfya7iR64Cn8t2493vQZPG35sNYZ9BxeUXcuvcAL
eGfd43OG/YeX8Km6X4Qtv/sVfIfuCvoEr+F3dS8J4+dv4OEryH7fwbNUkP2+
h1evIPv9AO9RQfb7ET67guz3E3x/BdnvZ/ijCrLfL/BoFWW/X+E5K8p+v8Hr
VZT9fof3rSj7/QFfWFH2+wt+RDe+/vIb/lI3vr7zBx6nkmfe5y+8QCXPvO8/
eKNKnvmOapt2R+adcLqdZTI/Izz8tMyvjgB/L/MhEeGJK3vmr0aCF6vsmX8Z
Gd6isuw/KnykzCeKBl8r897R4Rdl3icG/JvM+8aEp6wi+48FL1NF9h8b3q6K
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
LPkn8qQ7bC9pt9OKfAz5evIr5D/I0+y0vZzdqiP5JPJt5LfI1S7bM9qtqpIH
ks8k30P+gDzybtuz2+3UJu9NPo/8EPkz8lh7bM9rt/IjH0i+hPwE+VvyBHtt
L2K304x8OPkq8vPkn8mT77O9lN2qDflY8o3kV8l/kXvtt72C3U4n8ink28nv
kIc7YHtmu51q5N3JZ5HvI39IHjXE9hx2q7rkfcgXkB8mf0Ee+2BYrw8K8EmW
CZ5f9+MNN2uPywxvqDv5q7Kt/mSBD9ZdK1PYEd7wpbpHtkg68kE2+Cnde+cN
nVU3B/yd7o/XX688mhOe6FBYZ0nQYHeh3PCiupvVOHh6VR64v+7pY7LdTZEP
PkL3qSMz3k7ID19zSPZfEH7BbvWVPMVh20vb7bQlH0++ifw6+W/ydEdsr2i3
6kI+lXwn+V3yCEdtz2K3qkHeg3wO+X7yx+TRjoV17ZvFywUUgec6Jl4CXk83
/l4QWvXTjb8X5PpC3Xi9Tkn4Ud34e0Fo56Vu/L2gUvC4x7N6Xv+Ddgroxt8L
8oE31o2/F4R2nOOyn9Lw5cdlP2jn9HHZj+sfjst+ysATn5D9oFXxE7KfsvAW
J2Q/aDXqhOynHHztCdkPWl06IfspD/9mt0p10vYydqv25BPIt5DfIP9Lnv6U
7ZXtdrqSTyffRX6fPOJp273tdmqS9yT/jzyE/Al5jDO257Zb1SfvT76I/Bj5
a/J4Z20vZLfThHwo+Qrys+QfyZOes72E3aqV7tPViwWUqgAfrTv+47pDklSC
r9ft16/ztHeV4Zd1L4w7YtnxqvAfup8un79jYXV46vNhnb3E9pO9a8LL6e5x
+dztmrXhHXTv6vDsTea68EnnZT++8K3SXvXht6R9GsD/Sfv7wTNe8LTTEF5F
OrgRPFA6pDF8hnRoE/geadUMHnrB8/GcqDk88kXPx6u3PzzbRdlPC3jti/Lx
3xLeS+Y7toLPk3mnNfygzM9oA38m86vbwmNekv22g+e95Jm/2h7e4JJn/mUH
+ECZV53gi013hp8w3QX+RtpBqwSXxbvCC0s7aNXMeAB8mHG0WmU8EH7OOFp9
Nt4NnuyKOFqVklbd4a2No9VY4z3gG4yj1VXjQfCfxtHK66p4T3h5aQetOhnv
BZ9st9pOfps83DXbM9mtqpF3I59Fvpf8IXmU67bnsNupQ96HfD75YfLn5LFv
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
Bfko8rXkl8i/kadKaHsZu1V78gnkW8hvkP8lT5/I9sp2O13Jp5PvIr9PHjGx
7d52OzXJe5L/Rx5C/oQ8RhLbc9ut6pP3J19Efoz8NXm8pLYXsttpQj6UfAX5
WfKP5EmT2V7CbtWKfDT5evLL5D/IUye3vZzdTgfySbo7BQ6pMtIfvlX3v6Yt
/Me3hN/SPa1q6V5TW8P/6c5cJO342W3hGVOE9d5M4RYvaA+vortWwgc7lnaE
B+p+HO7g2dWd4TN093kX/GhjV/ge3bHuOj+2B8JDdS865R9nX3d45JRhXWCn
T8bDQfBsuk8t8yp2she8tu5m01Tt833gvXR/dELbXu0Hn6d7ZNeQAbcHwA/q
TtEkeOqDQfBnujdUdlY+c+AxU4V12UL++98MhefVfT2Dz5VPw+ENdHeO7/Xy
x0j4wFTyeI6BLzY9Fn7C9Dj4G9Pj4QlSS0+AFzY9Ed7M9CT4MNOT4atMT4Gf
Mz0V/tn0NHiyNNLT4aVMz4C3Nj0TPtb0LPgG07PhV03Pgf80/R/cy0t6Lry8
6XnwTqbnwyebXgDfbnoh/LbpYHi4tNKL4JlML4ZXM70E3s30Uvgs08vge3Xj
62Vo9VA3vr62HB4lncyvgOdIJ/Nop046mV8J72PmV8HnSzur4YeNr4U/N74O
Hju9+AZ4vvRyPrRqmF7OtxE+yMxvgi8182jnpJnfDH9n5rfAE2aQ+a3wohlk
fju8eQaZ3wkfYeZ3wVeb+T3wC2Z+H/yLtM9+eIqMcr0H4D7SISHwttLqEHxc
Rs/5vA/DN2WU8x2BXzPrHYX/lvnVx+BpM3nmrx6HV8wk65+Ed84k65+CT5V5
39PwHTLvnIHflfnVZ+HhM8v65+BZMsv6F+DVM8v6F+E9ZN73Eny2zDuX4ftl
fvUV+COz/lV4tCyy/nV4TmmvG/B60j434X2l/W/BF0o7t+FHpIPvwF9Kh9yF
x8nq6dB78ALSKhTeSNrnAdyRdh7Cl0mHPIKfNsc/gb/XjddfolVib2/P6zOf
wot5y+OBVi104/Wdz+AjdeP1n2i11lvWfw6/aLf6Rp4ym+1l7HbakU8g30x+
g/wPefrstleyW3Uln0a+i/weecQctme1W9UkDyL/j/wA+RPy6Dltz22340ve
nzyY/Bj5K/J4uWwvaLdqQj6EfAX5GfKP5Ely217Cbqcl+WjydeSXyb+Tp85j
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
bz083lFZD+0UPCrrud7kqKzn+pCjsp7rK47KehvgZ8x6aPXRrOd6kmOynusl
jsl6rrc8JutthI8+JuuhnXXHZD3XL5v1XP9u1nM99XFZbxO8rN2qA/lE8q3k
N8n/kWc4YXsVu50A8hnku8lDySOdtD2b3U4t8l7kc8kPkj8lj3nK9jx2qwbk
A8gXkx8nf0Me/7Tthe12mpIPI19Jfo78E3myM7aXtFu1Jh9DvoH8CvlP8jRn
bS9vt9ORfDL5NvLb5Oqc7ZnsdqqSdyOfSb6X/AF5lPO2Z7db1SHvTT6f/BD5
c/JYF2zPZ7fjRz6IfAn5SfK35Akv2l7EbtWcfDj5avLz5F/Ik1+y3cdupw35
OPKN5NfIf5GnvWx7BbtVZ/Ip5DvI75CHv2J7ZrtVdfLu5LPJ95E/Io961fac
djt1yfuSLyA/Qv6CPM412/PbrRqRDyZfRn6K/D15ouu2F7Pb8ScfSb6G/CL5
V/KUN2wvbbdqRz6efDP5dfI/5Olu2l7JbqcL+TTyneT3yCPcsj2r3U4N8iDy
OeQHyB+TR79tey67lS95P/Jg8qPkr8jj3rG9oN1OY/Ih5MvJz5B/IE9y1/bi
dquW5KPI15FfIv9Onuqe7WXtdtqTTyTfQn6T/C95hvu2V7ZbBZBPJ99Nfp88
Uqjt3narWuQ9yeeSh5A/JY/xwPY8djv1yQeQLyI/Tv6aPP5D2wvZrZqSDyVf
SX6W/BN50ke2l7TbaUU+hnw9+RXyH+RpHttezm7VkXwS+TbyW+Tqie0Z7VZV
yQPJZ5LvIX9AHvmp7dntdmqT9yafR36I/Bl5rGe257Vb+ZEPJF9CfoL8LXmC
57YXsdtpRj6cfBX5efLP5Mlf2F7KbtWGfCz5RvKr5L/IvV7aXsFupxP5FPLt
5HfIw72yPbPdTjXy7uSzdN99+y5082b4Pt3ZVp4NCdoKf6i7b4s1wQW3w6O+
Duvjycc433fAc+hOdKWt/+5d8Lq6W08o5zNgD7yP7s0V0nmV3Adf8FrOfwB+
WNoJgb8wfgge+43VKr/dTkPyweRLyU+RvyNP9Nb2onYrf/IR5GvIL5B/JU/x
Lqz7n2hz1OcwvLTu2n0bPZ94BN5Wd2bvmjHuHoWP1/3nVtmc2Y7DN+m+PK5w
7b4n4Nd1ryqeI+j4Sfhv3YPepJ2V6DQ83fuwrrcg8e5WZ+AVdevlN52Fd3kv
+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
suvrpINdvyS90fXv0iGup8rq6Quul5UOdb299HvXJ0qrffAtdqub5H/JM3jb
XtluFUA+nXw3+X3ySNls97Zb1SLvqTuhfnN9ru6dLWPtbLkfHqK7yabITTYd
gD81xx+Ex8gufQiex/RheH3TR+ADTB+FLzJ9DH7c9HH4a9Mn4PFzSJ+EF7Jb
NSUfSr6S/Cz5J/KkOW0vabfTinwM+XryK+Q/yNPksr2c3aoj+STybeS3yFVu
2zParaqSB5LPJN9D/oA8ch7bs9vt1CbvTT6P/BD5M/JYeW3Pa7fyIx9IvoT8
BPlb8gT5bC9it9OMfDj5KvLz5J/Jk+e3vZTdqg35WPKN5FfJf5F7FbC9gt1O
J/Ip5NvJ75CHK2h7ZrudauTdyWeR7yN/SB61kO057FZ1yfuQL9B9Z+zKvzVd
P6w7+8ZZpxOehr/QPeDqyNk3z8BjFw7rcz97tllwDp5fd2qvNnlbXYA31N21
fL1/mS/BB+ve37HsmdeX4Ut1x56cd86mq/BTuv23pW3b6zr8ne6Nt+LmK3YT
nqiI7Pc2vGgRz//fr6KVfxH5//8d+AiZd+7C18i87z34BZn3vg//atYPhaco
arUqbbfTlnw8+SbdK5tkrvLR9eu6vxb/0m3mQ/hv3eVSHZ5T9DE8XbGwnvpn
8sF7T+AVdYfebfZi6DN4F93Z92ePl/kFfKrufgt+Fj79Er5T94lBJ/wDXsPv
6k7cfOboBG/hEYqHdetSrTfueAfPontzmrw3Gn+A1ygu+/8E76EbXz9Eqzm6
8Xz8M3y/bnz98Qv8sW48f/8Kj1ZCHv9v8FwlPOu1/Q6vV8KzXrUf8H4lPOvl
+wlfWMKzXrJf8KOynvoNfynt8wcet6Sc7y+8gHTIP3hjaRVuj3ZH2ie8brXc
HB8BftocHxH+wRwfGZ64lBwfBV5c2okKbyEdEg0+SlrFgK81x8eEXzLHx4J/
M8fHhqfykePjwstI+8SDt5d24sMnSIckgG8xxyeC3/CRjwe0+usjHz+upy8t
84nhlUvLPNrpWlrmXZ9u5pPAd5l5tLpv5l2PWEbmk8K9y8g82qlZRuZd72nm
k8H/092nd+/e39AqRPdb/ZYc/qSMvP+mgMcoG9b37oa9pYTnLiufP1LB65eV
9+/U8P66y4W9HUkDX6R7756wNy/4sbLy/p8W/rqs7DcdPF65sE4X9rY4PbxQ
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
+IMgd972meERDrvz7ssCz3zYnTdaNniNw+68TbPD+xx2592UA77gsFzfXPAg
03h/A62emcb7H7nh0Y7I+jzwXEdkPVrXOyLr88IHe9fngy+V9aFodVLWX8sP
fy3rgwrA4x6V/QvCCxx1188qBG96VK53YfgIWd+xCHyNrK9bFH5O1vsWg3+S
9ZmLwxMdc9cnKAEvfkzm94W3ktYl4eO9Xhq+yetl4Fe9Xg7+w+vl4SmPi1eE
l5HWleAdvV4FPsXrVeE7vV4dfls6CO35Bk7W14Cnk/atCa8srWrBu3u9Nny2
9/F14Pulg+rCH3ofXx8e8aQ8n2iV9aQ8fw3gNU/Kfg3h/WR93UbwhbI+c2P4
EVmvmsCfy/oETeExTsn6ZvDcp2T+5vAGp2R/P/gQWd+xBXy5rNct4adk/axW
8Leyfl1reLzTcv5t4IVOy/m2hTc7Lfd3O/goWa86wNdKh6DVBe9+HeGfpQM6
wZOckfk6w0tI+3WBt5H27QqfIO3TDb5FWnWHX5MOQatf0kE94D5n5fg94eWk
dS94J2m/3vBp0r594LukffrC70qrfvAwwfJ6i1YZguX1sT+8SrC8ng2A9wyW
1/eB8DnB8no8CH4wWF4/B8MfBcvr3RB45HPy+j8Unu2cvF4Pg9c+J6+vGt7/
nMw7HL74nMyL1kfPybwj4C/Pybwj4THPy7yj4HnPy7yj4Q3Py7xj4MPOy7xj
4SvOy7zj4GfOy7zj4e/Oy7wT4AkuyLwT4YXtVn7ko8nXk18k/0qe9KLtJe3W
bcknkW8lv0H+mzz1JdvL2626kE8n30N+jzzcZdsz2q2qkfcin0ceSP6EPMoV
23PYreuQDyRfQn6cPJQ89lXb89mtGpNr8lXkZ8k/kP93zfaidusW5GPJN5Bf
Jv9Gnvy67aXsVu3JJ5NvJ79J/pc8zQ3bK9qtu5LPJN9L/oA8/E3bM9utq5P3
IZ9PHmS6wt04/Y45/tR0/2PJe5x0PNotT6/akKnTGcdzmr4+M1+bc47XMx1x
SMnmFx0fZDp/m6oNrzi+1HTbqg1rX3f8hGnPw6vecvy1ac/hyt91PM5tT3+O
MKTkA8cLmE77dlyRR443MV3HM8BTx0eYHhEYkOOF46tNb/MM/Mrxc6Yf+e9J
89bxj6bj9juW/IPjie54ulTziwk/O17MdM/yd+N8c7yVac/u0X46Ps60Z3WE
P45vuiPXcxL8it3qB3mKu7aXsVt3IJ9CvoP8Nvk/8nT3bK9kt+pOPot8P3kI
ecT7tmexW9Uk70u+kPww+XPy6A9sz223rk8+hHwZ+SnyN+TxQmwvaLdqRj6S
fC35efLP5Ikf2l7Cbt2afAL5ZvJr5D/JfR7ZXtZu1Yl8Kvku8jvkYR7bnt5u
VYW8B/kc8gPkj8gjPbE9m926Fnl/8kXkR8lfkMd8anseu1VD8qHkK8hPk78j
j//M9sJ26+bko8nXkV8k/0Ke9LntvnartuQTybeSXyf/TZ7qhe3l7dadyaeT
7ya/Rx72pe0Z7dZVyXuRzyUPJH9MHiXU9ux2qzrkA8iXkB8jDyWP9cr2fHbr
RuSafCX5WfL35P+9tr2I3aoF+RjyDeSXyL+RJ3tjeym7dTvyyeTbyG+S/yFP
89b2CnarruQzyPeS3ycP/872THar6uS9yeeTHyJ/Sh71ve057dZ1yQeRB5Cf
IH9FHueD7fntVk3Ih5OvJg8m/0ie8KPtxezWLcnHkW8kv0L+nTzFJ9tL2606
kPuT7yC/Rf6PPO1n2yvZrbuRzyLfRx5CHuGL7Vns1jXI+5IvID9M/ow8+lfb
c9mt6pMPJl9GfpL8DXncb7YXtFs3JR9Jvob8PPkn8sTfbS9uumWDsSOqOd7a
dKmpm8M8cHy8aZ9TN3S3yfDN3sf7w69Kh6DVT+mgKfCUP9wOmAovK62nwTtK
+02HT5X2nQHfKe0zE35HWs2Cq59Wq/R268rkPchnkx8gf0ge6ZftWe1Wtcj7
kS8iP0L+gjzGb9vz2K0bkA8lX05+mvwtefw/theyWzUnH0W+jvwC+RfyJH9t
97VbtyGfSL6F/Dr5L/JU/2wvZ7fqTD6NfDf5XfKwKqvlGexWVcl7ks8lP0j+
mDxyGNuz261rkw8gX0x+jPwleaywtue1WzUiH0a+kvwM+XvyBOFsL2K39iMf
Q76e/BL5V/Jk4W0vabdqRz6JfBv5DfI/5Kkj2F7Bbt2FfAb5HvL75OEi2p7J
bl2NvDf5PPJD5E/Io0ayPYfdqi75QPIA8uPkr8hjR7Y9v926Mflw8lXkweQf
yBNGsb2o3aol+VjyjeSXyb+TJ49qe2m7dXtyf/Lt5LfI/5KnjWZ7RbtVN/KZ
5PvIH5BHiG57ZrtVDfI+5AvIg8ifkUeLYXsuu3U98sHkS8lPkr8mjxvT9gJ2
q6bkI8jXkJ8j/0SeKJbtxe3WrcjHk28iv0r+gzxlbNvL2K06kk8h30l+m1zF
sT2d3aoyeXfy2eT7yR+SR4xre1a7dU3yfuQLyY+QPyePEc/23HarBuRDyJeT
nyJ/Sx4vvu2F7NbNyEeRrzWdxG9sjFyz4RdM/6fSXNk7B/7ZdPyAwLml5sGT
JPB0bN9Gzc7Oh5cwHTPkS5o6C+FtTEfX017eXQSfYDqyT7bNbZbAt5iOGHSq
99sA+DXTYf1aF+63DP4rgcy3Au7zn9u+K+HlpPUqeCfpoNXwadJqLXyXaXx+
zTr4XdP4fJv18DAJs7qff7MBnsE0Ph9nI7yKaXx+ziZ4T9P4fJ3N8DkJZZ4t
8IMJ3eNN3wp/lNA93opt8MiJ3OPt2g7Plsg93ukd8NqJ3OPd2Qnvn8g93ptd
8MWJ5Pz2wI96ey/8pbf3wWMmlt4Pz+vtA/CGpvH7Img1zDR+v+QgfIWs14Hw
M7K+7iH4O1mfOQieIInsfxheWNr3CNxPWh+Fj5YOOgZf7338CfhFb5+Ef/X2
KXjSpNKn4SW9fQbeVjoIrSZJ67PwrdK+wfAb3sefg/9OKueHVqmTyfk7Xj6Z
7Od4l2Ry/RyfLuuvOb5H1qvz8Ht2q3DJbc9ot6pG3ot8Hnkg+RPyKClsz2G3
rkM+kHwJ+XHyUPLYKW3PZ7dqTK7JV5GfJf9A/p+P7UXt1i3Ix5JvIL9M/o08
eSrbS9mt2pNPJt9OfpP8L3ma1LZXtFt3JZ9Jvpf8AXn4NLZntltXJ+9DPp88
iPwpebS0tue0W9UjH0S+lPwE+WvyOOlsL2C3bkI+gnw1+Tnyj+SJ0ttezG7V
inwc+SbyK+Q/yFNksL2M3boD+RTyHeS3yf+Rp8toeyW7VXfyWeT7yUPII2ay
PYvdqiZ5X/KF5IfJn5NHz2x7brt1ffIh5MvIT5G/IY+XxfaCdqtm5CPJ15Kf
J/9Mnjir7SXs1q3JJ5BvJr9G/pPcJ5vtZe1Wncinku8iv0MeJrvt6e1WVch7
kM8hP0D+iDxSDtuz2a1rkfcnX0R+lPwFecyctuexWzUkH0q+gvy06dRFM1X4
6/g7r1+Ex8/ltt8leGHpoMvw5tI+V+GjpfU1+DrpkOvwi9K+N+FfpANuwZPm
luPfgfuaxu+folVb0/j9Vccnmsbvvzq+1TR+H/Uu/Lpp/D4rWv02jd+HdTxV
nqzu79M6Xt40fr/1Hryzafx+LFpNN43fr3V8dx6Z9z78Xh6ZF63D5pV5Hc+Y
V+Z1vGpemfcBvFdemRet5+aVeR0PzCvzOv44r8wbAo+ST+ZF6+z5ZF7H6+ST
eR/CB9itlpAfIw8lj5Xf0wGXU8wc8Aiez3SVPk/v/nwMb2T6Z8IN6QY/hWvT
q/b17PrnGXyl6TpNC+0e+gJ+Nr/sHwp/b3rCopvjk7+C/1fA0/GLbI1X5DW8
iOnFN8cvavAG3sJ0xr4tM/R9Cx9jelu8IltnvINvMF3U8/Ct7+GXTB+r9vrY
+Q/wb6Y9We31R3iygp72bH8zymd4KdOe3Vtm+AJvZ9osL/MVPtm0OXzLb/Bt
BeXr4Tv8ZkH3fBb9gP8p6J7P/p/wNIXc87n5C16hkHs+X3/DuxZyzyfeX/iM
Qu755PoH31vIPZ9qKtD4/ULu+XQOY1qFL+yez/iw8EyF3fNZHQ5evbB7PsfC
w3sXds/nUQT4/MLy/ESCH5LWkeFPvR4VHrWIeDR4TmkVA15XOgStBkkHxYQH
SAfEgp/w7hcb/kraLw48TlF5fYkLzy/tEw/eRFrFhw83je/vEsBXm3b+/Sx4
sKzXCeEfZf26RPCExdz11xLDixWT/ZPCWxaT/ZPBx8n6usnhG2W9TgG/IuvX
pYR/9+7vA09RXPZPDS9d3H19SJ0G3qG4vP6khfsXd18v2qeD7ygur0fp4beK
u68fmzLA/xWX16eM8LQl3NeTz5nglUrI61UWeLcS7utL4azwWSXk9SsbfF8J
Ob/s8JAS8nqWAx7B1533eE54Fl95fcsFr+HrzhstD7yvr7ze5YUv8HXnrZkP
fthXXv/yw5/5uvPOKQCPXlJeDwvCc5V0571XCF6/pFzfIvDB0kFotUxaF4Wf
lPYtBn/jfXxxeNxSWd33c9CqoGm8/1MC3tQ03i/yhY80jfeXSsLXmMb7UaXg
503j/avS8E+l5Hhl4IlLy/HQunhpOV5ZeOvScrxy8PGl5Xjl4ZtLy/EqwK+W
luNVhP8sLcerBE9ZRo6HVmXLyPEqwzuWkeNVgU8tI8erCt9ZRo5XDX6njByv
OlyVlePVgKcvK8dD68pl5Xg14T3KyvFqwWeXlePVhh8oK8erA39YVo5XFx6p
nByvHjyraXzeDVrVMo3Pr3G8n2l8Xo7ji0zj828cP+Ldrz78hXc/tI5RXvZz
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
ePq6uQCOF97iPt+fHPfb4j7fuZ7CR29xn+9uaLV+i/t8b3T84hb3+X7l+Nct
7vOd6Rk86Vb3+W6HViW3us/3SsfbbnWf78eOT9rqPt+pnsO3bnWf72ZodWOr
+3wvdPz3Vvf5vu146m3u853oBbz8Nvf5rodWXba5z/dMx6dvc5/vy47v2eY+
37Ffwu9tc5/vamgVbrv7fE9yPON29/k+43i17e7zHTkU3mu7+3yXQ6t5293n
e5Tjgdvd5/uI40+2y9fjK3iUHVarHHbrOuQDyZeQHycPJY+90/Z8dqvG5Jp8
FflZ8g/k/+2yvajdugX5WPIN5JdNj1tfJcwnx7+Z/ujf8fqSN/Dku8390NOz
4h28lOljdVfpH+/h7U1nL+T5Xz7CJ5uenexR5tqf4dt3y/G+wm9K+3yD/5X2
/Q5Ps8dtvx/witL6J7yrdMAv+EzpoN/wvdIhf+APpNU/ePi9WZ3vTyOqIOOZ
TZ8z7wehdXXT5tvZeGHgfUzj+1e0nr9X5g8LD5L9VqH1U9kvazh4tH3uftvR
Ouc+d79C4eH19sn8aD1on7tfuQjwpfvc/YLR+oTsVzsi/LXsdwut4+yX6xcJ
XmC/u98ztG6y392vc2T4iP3ufp/QevV+d78BUeDnZD8VFf5R9huDVokOuPtF
jwYvdsDdbwZatTrg7pc4OnzcAXn+0GrTAXe/9DHgV2S/DWj1Q/bLExOe4qC7
3160KnNQ7p9Y8A4H3f1OoNWUg+5+VWLDdxx097uCVrdlv4Zx4P9kvxC0Shfo
7tc2LrxSoLvfa7TqHuju1ysefFagu98PtNofKPdvfHiItEoAj3hIHK2zSKv/
4DW9jtZ9vZ4QvtDraH3Y64ngz72O1tGD5P5NDM8tHYTW9aX9ksCHSKuk8GVB
cj3Q6lSQ3J+OvwmS5ysZPN5h+fpB64KHZb/k8GaHZT+0HnlY9nN87WHZLwX8
vHc/tPrs3S8lPPEROV+0KiGtfOCtvY5WE7yeCr7Z62h1zeup4T+9jlY+R8XT
wMtKa7Tq5PW08KleR6tdXk8Hv+N1tApzTDw9PL20RqsqXs8A7+F1tJrj9Yzw
A15Hq0dezwSPdNzT5u2OWWiVzfR6835HZnit43K/oFV/WV83C3yRrA9Fq6Oy
XmeFv5D1X9Aq5gl3fcds8Dwn5OsPrRqekP2zw4fK+jNotULW++aAn5b1O9Hq
nazPnBMe/6S8/qBV4ZPu+gS54M1PuusnoNVoWe/5SjG+TtoXrS5Ka8e/mL7V
ekbVXY4nPeXpbafTL3jtuK9p/P3WPPC2ptvMqJq/IVpPNF38e8jIKY5vNW1+
feO449dNvz8cKeVvx3+bPpN+QefceeGpTnt6ufn7sWhV3vRgzwOWON75tHu+
1xyfbjqH+fuo+eC7TUdOOfh9SbS6Z/rhyFjF+zse9kxW9+/XOp7RtGf8W08c
r2q6i+eEk+aH9zKNv8+K1nNNe7Y/PNbxQNOe040V6Phj0+bXXT47HuWsPH8F
4NlNj4pV/LsfWtUx3RR/HxY+wHR+zxNwzvElpmN7Lmi4gvBjpl+av9+LVqGm
j0RKObi747GCPb2g87bTqxzPZxp/n9bxRqareQ4QrxBcm87geUBFtF4ZLPeD
42eD5X5w/H2w3A+O/3dO7ofC8CLn5H5Aqxbn5H5wfMw5uR8c33BO7gfHL52T
+6EI/Ns5uR/QOtl5uR8cL3Ve7gfH252X+6EofPJ5uR/Qett5uR8cv3le7gfH
/5yX+8HxNBfkfigGr3BB7ge06npB7gfHZ1yQ+8HxvRfkfnD8/gW5H4rDw1+U
+wGtM12U+8Hx6hflfnC890W5H0rA51+U+wGtD12U+8HxpxflfnA86iW5HxzP
eUnuB1943UtyP6DVoEtyPzgeYLc6Qf6KPM5l2/PbrZqQDydfTR5M/pE84RXb
i9mtW5KPI99IfoX8O3mKq7aXtlt1IPcn30F+i/wfedprtleyW3cjn0W+jzyE
PMJ127PYrWuQ9yVfQH6Y/Bl59Bu257Jb1ScfTL6M/CT5G/K4N20vaLduSj6S
fA35efJP5Ilv2V7cbtWafDz5ZvKr5D/JU962vazduiP5VPKd5HfI1R3b09ut
K5P3IJ9NfoD8IXmku7ZntVvVIu9Hvoj8CPkL8hj3bM9jt25APpR8Oflp8rfk
8e/bXshu1Zx8FPk68gumV8dvNDl5SfgX04Wf1DxxEK2TPPD0+e0V/zUtBfc1
3XJkyYJ/0bqN6a+1CvVYXBo+0fT41LnWFS8D32I6+ceMj++j1XXTWw/7JBtW
Fv7LdNlpieqmLAdPFeLpm36x/Q+hdTnTnXNGPtm8PLxziDu/qgCfZrfaTX6X
POxD2zPYraqS9ySfS36Q/DF55Ee2Z7db1zbdJ8/61oMdH2C6cKtCy347vtj0
v+knHwyuCD9m+tiRusn/oPVL0+M/Pm40pBI81mPz3+fUPef+Qeu8puPVUteH
VIY3Mn1zuH+8v2g9zPSirclqDq0CX2m65cN1/n/R+ozpDHEKBQ+tCn9v+rXv
ySj/0DrBE/N8dq9bflg1eBHTfQMej/qH1n6mi1zscWRYdfiYJ3L+NeDr7VaX
yL+SJ3tqe0m7VTvySeTbyG+Q/yFP/cz2CnbrLuQzyPeQ3ycP99z2THbrauS9
yeeRHyJ/Qh71he057FZ1yQeSB5AfJ39FHvul7fnt1o3Jh5OvIg8m/0CeMNT2
onarluRjyTeSXyb/Tp78le2l7dbtyf3Jt5PfIv9Lnva17RXtVt3IZ5LvI39A
HuGN7ZntVjXI+5AvIA8if0Ye7a3tuezW9cgHky8lP0n+mjzuO9sL2K2ako8g
X0N+jvwTeaL3the3W7ciH0++ifwq+Q/ylB9sL2O36kg+hXwn+W1y9dH2dHar
yuTdyWeT7yd/SB7xk+1Z7dY1yfuRLyQ/Qv6cPMZn23PbrRqQDyFfTn6K/C15
vC+2F7JbNyMfRb6W/AL5Z/IkX20vYbdqQz6BfAv5NfJf5D7fbC9nt+5EPo18
F/ld8jDfbc9gt65C3pN8DvlB8kfkkX/Yns1uVZu8P/li8qPkL8lj/rQ9r926
Ifkw8hXkZ8jfkSf4ZXthu5Uf+Wjy9eQXyb+SJ/1te0m7dVvySeRbyW+Q/yZP
/cf28narLuTTyfeQ3yMP99f2jHarauS9yOeRB5I/IY/yz/Ycdus65APJl5Af
Jw8lj62yWZ7PbtWYXJOvIj9L/oH8vzC2F7VbtyAfS76B/DL5N/LkYW0vZbdq
Tz6ZfDv5TfK/5GnC2V7Rbt2VfCb5XvIH5OHD257Zbl2dvA/5fPIg8qfk0SLY
ntNuVY98EPlS8hPkr8njRLS9gN26CfkI8tXk58g/kieKZHsxu1Ur8nHkm8iv
kP8gTxHZ9jJ26w7kU8h3kN8m/0eeLortlexW3clnke8nDyGPGNX2LHarmuR9
yReSHyZ/Th49mu257db1yYeQLyM/Rf6GPF502wvarZqRjyRfS36e/DN54hi2
l7BbtyafQL6Z/Br5T3KfmLaXtVt1Ip9Kvov8DnmYWLant1tVIe9BPof8APkj
8kixbc9mt65F3p98EflR8hfkMePYnsdu1ZB8KPkK8tPk78jjx7W9sN26Oflo
8nXkF8m/kCeNZ7uv3aot+UTyreTXyX+Tp4pve3m7dWfy6eS7ye+Rh01ge0a7
dVXyXuRzyQPJH5NH+c/27HarOuQDyJeQHyMPJY+V0PZ8dutG5Jp8JflZ8vfk
/yWyvYjdqgX5GPIN5JfIv5EnS2x7Kbt1O/LJ5NvIb5L/IU+TxPYKdquu5DPI
95LfJw+f1PZMdqvq5L3J55MfIn9KHjWZ7Tnt1nXJB5EHkJ8gf0UeJ7nt+e1W
TciHk68mDyb/SJ4whe3F7NYtyceRbyS/Qv6dPEVK20vbrTqQ+5PvIL9F/o88
rY/tlezW3chnke8jDyGPkMr2LHbrGuR9yReQHyZ/Rh49te257Fb1yQeTLyM/
Sf6GPG4a2wvarZuSjyRfQ36e/BN54rS2F7dbtSYfT76Z/Cr5T/KU6Wwva7fu
SD6VfCf5HXKV3vb0duvK5D3IZ5MfIH9IHimD7VntVrXI+5EvIj9C/oI8Rkbb
89itG5APJV9Ofpr8LXn8TLYXsls1Jx9Fvo78AvkX8iSZbfe1W7chn0i+hfw6
+S/yVFlsL2e36kw+jXw3+V3ysFltz2C3qkrek3wu+UHyx+SRs9me3W5dm3wA
+WLyY+QvyWNltz2v3aoR+TDyleRnyN+TJ8hhexG7tR/5GPL15JfIv5Iny2l7
SbtVO/JJ5NvIb5D/IU+dy/YKdusu5DPI95DfJw+X2/ZMdutq5L3J55EfIn9C
HjWP7TnsVnXJB5IHkB8nf0UeO6/t+e3WjcmHk68iDyb/QJ4wn+1F7VYtyceS
byS/TP6dPHl+20vbrduT+5NvJ79F/pc8bQHbK9qtupHPJN9H/oA8QkHbM9ut
apD3IV9AHkT+jDxaIdtz2a3rkQ8mX0p+kvw1edzCthewWzUlH0G+hvwc+Sfy
REVsL263bkU+nnwT+VXyH+Qpi9pexm7VkXwK+U7y2+SqmO3p7FaVybuTzybf
T/6QPGJx27ParWuS9yNfSH6E/Dl5jBK257ZbNSAfQr6c/BT5W/J4vrYXsls3
Ix9Fvpb8Avln8iQlbS9ht2pDPoF8C/k18l/kPqVsL2e37kQ+jXwX+V3yMKVt
z2C3rkLek3wO+UHyR+SRy9iezW5Vm7w/+WLyo+QvyWOWtT2v3boh+TDyFeRn
yN+RJyhne2G7lR/5aPL15BfJv5InLW97Sbt1W/JJ5FvJb5D/Jk9dwfbydqsu
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
3Yp8PPkm8qvkP8hTjrW9jN2qI/kU8p3kt8nVONvT2a0qk3cnn02+n/whecTx
tme1W9ck70e+kPwI+XPyGBNsz223akA+hHw5+Snyt+TxJnr6Uo+UO2Y5Xsj0
+gMFR+T4Bm9menSkWjVOo9Uo081rdUrR6jt8relCi0a9/o1WF0zHe7Fo3+wf
8M+m3+TePS7nT3iSSZ4+OeRivTNoXcL00lMv07b+BW9jelC8cJ/+oPUE03Wb
JTs85zd8i+mca/NNyfUHfs101M/Vmp5Fq1+mnxRvn6XNX7jPZE8Hjh/+4y9a
lTM99+r8k3P/wTuZ7uk5/dzqsPFppqt0PNcqGK13mU6/81mutmHgdyfL9QsL
D+PvdhBaZZDW4eBVTOPzV9Gqp2l8vxEePkfWh6DVQVlfNwL8kaw/g1aRp7jr
fSPCs01x1+9Eq9pT3PWZI8H7y/oAtFos6xNEhh+V9RPQ6qWsV1HgMae67YdW
eaWDHG8o7RMVPkxao/UK73rHz0iraPB30r5olWCaPN7xwtI+0eF+0kFoPVra
LwZ8vbSKCb8oHYBWX6V9Y8GTTpfrj1YlpXVseFtpnzjwSdJBaL1V2i8u/Ia0
igf/bbdKPcP28narLuTTyfeQ3yMPN9P2jHaraqZXnf0+fbbjvUwnGDVg98D4
8HmmRxf9eadZAnig6c+fB6rS/8GfmG618VfaDAnhUWZ5+kqbwRWjJYLnMF0q
xZ8u79C6jult14dMv5IYPtB0qil/d+1OAl9ielr5YXcWJIUfnyXXPxk81G4V
e7bt+exWjck1+Srys+QfyP+bY3tRu3UL8rHkG8gvk38jTz7X9lKmH5/pdW2t
4+1N74p8dN1VxyebHlcurv7n+HbTjUe1qJs5Ofym6WxHtmSui1Z/vfs7nmae
3P+OV5T2TQHvKh2AVjOlVUr4Xmk/tHogHeR4+Pny9eMDzyyt0bq6dIjjfaR9
U8HnSwegVZC0Sg1/Ku2HVtEWyPEdzyntkwZeT1qj9SDveseXSqu08BPSvmj1
2vt4x+MslMc7XkBapYM3kfZFqxHS2vHV3sc7fs77+PTwj97Ho1WiRfJ4x4tJ
+2aAt5JWGeHjpP3QapN0kONXpH0ywX9490frFItlv8zwMtIarTuYxvuvjk8x
jfdfs8B3mMb7r2h12zTef3X8n2m8/5oVnm5JNvf9V7SutETmdbz7Evd4cbPB
Zy1xj9carfYvcY+3y/GQJe7xomSHRwxwj9cYrbMEuMfb6HjNADnfHPC+dquF
5IfJn5NHX2p7brt1ffIh5MvIT5G/IY+3zPaCdqtm5CPJ15KfJ/9Mnni57SXs
1q3JJ5BvJr9G/pPcZ4XtZe1Wncinku8iv0MeZqXt6e1WVch7kM8hP0D+iDzS
Ktuz2a1rkfcnX0R+lPwFeczVtuexWzUkH0q+gvw0+Tvy+GtsL2y3bk4+mnwd
+UXyL+RJ19rua7dqSz6RfCv5dfLf5KnW2V7ebt2ZfDr5bvJ75GHX257Rbl2V
vBf5XPJA8sfkUTbYnt1uVYd8APkS8mPkoeSxNtqez27diFyTryQ/S/6e/L9N
thexW7UgH0O+gfwS+TfyZJttL2W3bkc+mXwb+U3yP+RptthewW7VlXwG+V7y
++Tht9qeyW5Vnbw3+XzyQ+RPyaNusz2n3bou+SDyAPIT5K/I42y3Pb/dqgn5
cPLV5MHkH8kT7rC9mN26Jfk48o3kV8i/k6fYaXtp05duq9xdHO9gOvG6+y3u
Oe5v2m/AgWlVc8J3mF5TYf7hg2h9y/S7hP0/ZMsF/2c6//O6qRajddpdnh66
K0/NmLnhlUwfHx1n+FC07mY6et13W946Pst0nbTnQprlge8zveDTutgX0CrE
9KMj43xL5IVH2O3pzNPbdt+MVllM92hRJiBlPngN03tzpr44Ba367pbzzw9f
YBr/HhVaHTaN3y9y/Jlp/HtbBeDR92Rzf18QrXPtcfcLcrz+Hne/xAXhg/e4
+/VCq2V73P2CHT8p+6UvBH8j+2m0jrs3m/t+TWF4QdP4+TNaN93rrvctAh8p
66+h9RpZ37Eo/LysV8Xgn7z7o1Xife76zI4X3yf7O956n7u+ruPjZX1HxzfL
eu34Ve/ji8N/SqsS8JT73d6CVmWl/XzhHaVjl4RPlQ5C653S3UvB70j7lIar
A25fRKv00roMvLJp/LwVrXqYxr834vhs0/h5bln4AdP490vQ+qFp/LzY8UgH
s7n/HorjWU3j59GO1zKNf1/F8X6m8fPucvBFpvHvtaD1kYMyr+MvDsq8jscI
lHkdzxMo85aHNwiUedFqaKDM6/jyQJnX8dOBMq/jbwNlXsfjH5J5K8ALHZJ5
0ar5IZnX8VHSIY6vk/atCL8gHYBWX6RVJXiSILkf0MpXOsjxNtI+leETpTVa
b5EOcfy6tG8V+C/pALRKdViOXxVeTtoPrTpLBzk+TdqnGny3tEbru979qsPD
HhFH6wzSqga8qtfRuucR9+ttluNzj8jXv+MHZX2Q449l/TXHIx9114c6nv2o
HK8mvLZ0AFoNkPatBV8sHYJWx6R1bfhLaZ868FjHZB60zivtVxfeSFrVgw+T
DkCrldK+9eFnpEPQ6r20bgBPcNx9vZ2HVkWOy+u3437H5fXW8THH3dfbZ46v
Py7zNIRfkv0So/VX2S+P48lOuPtVcbzkCfnvgePtTsh8jk+S9cGObzsh+zeC
3/A+Hq3+nJD5HU99UuZrDK9wUo6P1l1Oyvk7PuOknJ/je07K/E3g92U/jdbh
Tsnz5XgmadUUXk3aF616S2vH53nXN4Mf8jpaP/Hu73jU07K+OTzHaTkftKp7
Ws7H8YGn5XwcDzgt5+MHPy77abR6JfsFOx77jFzvFvD8Z+R6o3XjM3K9HR9+
RuZrCV9ltwom/0Ce8KztRe1WLcnHkm8kv0z+nTx5sO2l7dbtyf3Jt5PfIv9L
nvac7RXtVt3IZ5LvI39AHuG87ZntVjXI+5AvIA8if0Ye7YLtuezW9cgHky8l
P0n+mjzuRdsL2K2ako8gX0N+jvwTeaJLthe3W7ciH0++ifwq+Q/ylJdtL2O3
6kg+hXwn+W1ydcX2dHaryuTdyWeT7yd/SB7xqu1Z7dY1yfuRLyQ/Qv6cPMY1
23PbrRqQDyFfTn6K/C15vOu2F7JbNyMfRb6W/AL5Z/IkN2wvYbdqQz6BfAv5
NfJf5D43bS9nt+5EPo18F/ld8jC3bM9gt65C3pN8DvlB8kfkkW/bns1uVZu8
P/li8qPkL8lj3rE9r926Ifkw8hXkZ8jfkSe4a3thu5Uf+Wjy9eQXyb+SJ71n
e0m7dVvySeRbyW+Q/yZPfd/28narLuTTyfeQ3yMP98D2jHarauS9TFc92ST1
Acfnmc57u1jnIa3ggaaTvEmxq3hr+BPv49vAo4S4rdEqh7RqC69jupD/44Jd
0Wqg6Z7JTva46/gS0+b7k0rt4MdNPyno/3gPWoea9ixPlqE9PPbDbO73Q2id
z7Rne/9wHeCNTXuWn+yB1vqhO0+I46seuvNU6wg/+9Cd5wBafXjozpO5E/y/
R+48c9Gq6CN3nkid4S0eufP0Qauxj9x5Hju+4ZE7T80u8MuP3HmC0PrbI3ee
7F3hyR+78yxE61KP3XmidoO3f+zO0x+tJz9253nu+PbH7jx1u8NvPnbnOYpW
fx+78+TqAU/zxJ0nAK0qPnHnidkT3vWJO89gtJr5xJ0n1PG9T9x5GvSCP3ji
znMSrcM/defJ1xue+ak7z3K0rv7UnSdOH3ifp3I/ofV80+b9iheOB5nG+w19
4U9N4/fx0Sras2zu+xP94DlNm/dDJqJVPdN4P8PxQabx+/j94UtN4/0PtD5h
2jw8+wD4a9N4vwSt4zyX+30gvMBzd972aN3kuTvvJcdHPHfnLTwIvvq5O+8y
tDr33J032mD4x+fuvL3RKtELd957jhd74c5bdgi81Qt33k1oPe6FO2/CofBN
L+T6ovUVaZ9h8B/SQWid4qXbfhpeRloNh3cwjZ/vo9UU0+bn6W8c32EaP58f
Ab9t2vz8/Q5a/zNtfp5fayQ8XWg29/cD0LpSqHs831Hw7qHu8Xah9axQ93jZ
RsP3h7rHW4HWIaHu8ZKOgUd85R5vOlpneeUeL8pYeM1Xcn3Quq9p8/3hJ8cX
msb3j+Pgh02b7y9vodVz0/h+djw8+mu5nmiV+7W7X54J8Pqv3f1WodWQ1+5+
iSfCl71295uEVqdkPzUJ/kbaD63ivZHjOV5Q2mcyvJm0RuuRb+T1zB++9o37
9e+P1uffuF+/CabAP7+R1ye0TvzW/XpOMxVe4q37+rAOrVu/ldebafAJb+X1
Ha03v5Xndzr82lt5/UDrn2/l9XoG3OedO881tC77zp2nyUx4p3fy+ovWU9+5
83ScBd/1zp3nA1rfeSevp7PhYd7L9Z0DTy/ti1ZVpLXjPaSDHJ/jffxc+AHv
49Hqkffxjkf6II93PJu0mgevJe2LVv2lteOLvI93/Kj38fPhL7yPR6uYH+Xx
juexWzUkH0q+gvw0+Tvy+J9sL2y3bk4+mnwd+UXyL+RJP9vua7dqSz6RfCv5
dfLf5Km+2F7ebt2ZfDr5bvJ75GG/2p7Rbl2VvBf5XPJA8sfkUb7Znt1uVYd8
APkS8mPkoeSxvtuez27diFyTryQ/S/6e/L8fthexW7UgH0O+gfwS+Tfy/7m6
y/Aolm4Nw4W7BffgDsEdBnd3DxCCu8uGwt01aHB39+Du7sGCu/ueWtWrr2u9
nF/PuVdX9fRMpjfzJSHFT+mlZeu24BPBt4DfBP8Dnu6X9IqyVRfw6eC7we+D
R/wtPYtsVQO8F/hc8IPgT8Gj/5HuJ1vXAx8IHgx+HPwVeLy/0gvIVk3Bh4Kv
BD8L/hE88T/pxWXrVuBjwNeDXwH/Dp5K5RReRrZqDz4JfBv4LfB/4OnDSa8s
W3cFnwm+BzwUPFJ46dlk65rgfcDngR8CDwOPGUF6btmqAfgg8CXgJ8DfgPtE
lF5Itm4GPhx8Ffh58E/gSSNJLyFbBYCPBd8IfhX8J3jqyNLLydYdwKeAbwe/
A66iSM8oW1cB7w4+C3wf+EPwKFGlZ5etaoP3BV8Afhj8OXisaNLzytYNwQeD
LwU/Bf4WPEF06YVlqxbgI8DXgF8A/wKeLIZ0j+mFN8cumGO9jek+rTL1yTOP
fLzpGq+PVj9LrTeZzuQdCJxPfp3XUwvIf7nrU6s0MdkXkpfn1tSqk+uLyKdy
16RWO7mDrd/lfm89fCynPcHkmbinUKtq3KHWe3D7LSafw62p9X7uEOuPudUS
8qixeT9qlZNbW6/DHWK9P7daSr7QPZ5aHXWPt/7CPd56nDh8/DLyfKbN378a
U6vGpunn1awP4fm4y8mX83wHan2a549Zf8/zvivIE8Z15gdQq6Jxnflr1v3j
8vVbST6K58dR67U8/9T6JZ73rCL/yvNzqVWKeM78F+ul4vHzv5q8bTxnfg21
nsDzkdaQb+F5f2p9g+f3WP/D8wnXkqf1cea7UauKPs78aeudfZz5DOvIp/O8
pta7uDdZv88daj1CfL7+68mzcHuodXXubtZ7cQdbD+K+aP0gt9pA/iQ+P5/U
KnoCfn6s50rA+20kr5eArx+1HsDzCTeRB/O8ptbHeP6l9Vc8X28zedyE/Pqk
VgUSOvNZt5A3SejMz6RWQ3lebSVfwX6NWp3l49dsI//A83o7eeJEvP8O8mKJ
eL+d5K0S8fq7yEebps+nqNV60+bzrQLWL5umz8esfzdNPx9jPWXinPbzq7HW
y5imz7+st0vMj9/6pMTOfnesb03s7PfV+q3Ezn4+u8n/Jnb2y0Gt0idx9qtk
vVISZ78A612T8PWwPoM7xPoebrWH/AG3h1pFSsrHW8/KHWK9JrfaS96b20Ot
5rnHWw9xj7ce5h6/jzxGMj6eWuXm1tbrc4dYH8St9pMvdo+nVifc462/ducP
kPskZ6fWBbk9B8mbcasQ8mHJ+fVPrVYl59eT9XPu8dY/8Xw960lS8Nef9RIp
eH/rrdmzHiIfm4Jf79R6gzt/mPyqO3+E/Ic7T61Sp+T5o+RludUx8g6uU+vJ
rh8n3+46tb7t+glylYqdWmfgVifJq7hOrbtxB1ufxR1ifS93qPWH7nqnyCOn
5vsNtcrO7bFei9vfel9ubX2+bHUY/Bl4LF/peWSrhuD/gS8FPwn+Fjx+GumF
Zevm4CPAV4NfAP8Mniyt9JKyVRvwceCbwK+B/wL3TSe9vGzdEXwq+A7wu+Dh
0kvPJFtXBe8BPht8P/gj8KgZpOeQreqA9wNfCH4E/AV47IzS88nWjcCHgC8D
Pw3+DjxhJulFZCt/8JHga8Evgn8FT55ZeinZOhB8Avhm8Bvgv8HTZpFeQbbq
DD4NfBf4PfAIWaVnlq2qg/cEDwI/AP4EPFo26blk67rgA8AXgR8DfwkeN7v0
/LJVE3ANvgL8DPgH8EQ5pBeTrVuCjwZfB34Z/Bt4ypzSS8tW7cAngm8Fvwn+
FzxdLumVZOsu4DPAd4M/AI/oJz2rbF0DvDf4XPAQ8KfgMXJL95Ot6oMPBF8M
fhz8NXi8PNILytZNwYeBrwQ/B/4RPEle6cVlq9bgY8A3gF8B/wGeKp/0srJ1
e/DJ4NvAb4P/A8+QX3pl2aob+EzwveCh4JELSM8mW9UC7wM+H/wQ+DPwmAWl
55GtG4D/B74E/CT4G/D4haQXkq2agw8HXw1+HvwzeNLC0kvK1gHg48A3gl8D
/wnuW0R6OdmqI/gU8B3gd8DDFZWeUbaqCt4dfDb4PvBH4FGKSc8hW9cG7we+
APwI+HPw2MWl55WtGoEPBl8Gfgr8HXiCEtKLyNYtwEeCrwG/CP4FPHlJ6R7Z
KhB8PPhm8Ovgv8HTeKRXkK07gU8D3wl+Dzx8KemZZetq4D3B54AfAH8MHq20
9JyyVV3w/uCLwI+CvwSPU0Z6ftm6MbgGXw5+Bvw9eKKy0ovKVi3BR4GvA78E
/g08RTnppWXrtuATwbeA3wT/A56uvPSKslUX8Ongu8Hvg0esID2LbFUDvBf4
XPCD4E/Bo1eU7idb1wMfCB4Mfhz8FXi8StILyFZNwYeCrwQ/C/4RPHFl6cVl
61bgY8DXg18B/w6eqor0MrJVe/BJ4NvAb4H/A09fVXpl2bor+EzwPeCh4JGq
Sc8mW9cE7wM+D/wQeBh4zOrSc8tWDcAHgS8BPwH+BtynhvRCsnUz8OHgq8DP
g38CT1pTegnZKgB8LPhG8KvgP8FT15JeTrbuAD4FfDv4HXBVW3pG2boKeHfw
WeD7wB+CR6kjPbtsVRu8L/gC8MPgz8Fj1ZWeV7ZuCD4YfCn4KfC34AnqSS8s
W7UAHwG+BvwC+BfwZPWle2TrNuDjwTeBXwf/BZ6mgfTyslUn8KngO8Hvgodv
KD2TbFUNvAf4HPD94I/BozaSnlO2rgPeH3wh+FHwF+BxGkvPJ1s1Bh8Cvhz8
NPh78IRNpBeVrf3BR4GvBb8E/hU8RVPppWSrtuATwLeA3wD/A562mfSKsnVn
8Ongu8Dvg0doLj2LbF0dvBd4EPhB8Cfg0VtIzyVb1QMfAB4Mfgz8FXhcf+kF
ZOsm4EPBV4CfBf8Anril9GKyVSvw0eDrwS+DfwdP2Up6Gdm6Hfgk8K3gt8D/
gqdvLb2SbNUVfAb4HvAH4JECpGeVrWqC9wafBx4CHgYeo4303LJ1ffBB4IvB
T4C/BvcJlF5QtmoGPgx8Ffg58E/gSdpKLyFbtwYfC74B/Cr4D/DU7aSXla06
gE8G3w5+G1y1l55BtqoC3g18Fvhe8IfgkTtIzy5b1wLvCz4f/DD4M/BYHaXn
ka0agv8HvhT8JPhb8PidpBeWrZuDjwBfDX4B/DN4ss7SS8pWbcDHgW8Cvwb+
C9y3i/TysnVH8KngO8DvgofrKj2TbF0VvAf4bPD94I/Ao3aTnkO2qgPeD3wh
+BHwF+Cxu0vPJ1s3Ah8Cvgz8NPg78IQ9pBeRrfzBR4KvBb8I/hU8eU/ppWTr
QPAJ4JvBb4D/Bk/bS3oF2aoz+DTwXeD3wCP0lp5ZtqoO3hM8CPwA+BPwaH2k
55Kt64IPAF8Efgz8JXjcvtLzy1ZNwDX4CvAz4B/AE/WTXky2bgk+Gnwd+GXw
b+Ap+0svLVu1A58IvhX8Jvhf8HQDpFeSrbuAzwDfDf4APOJA6Vll6xrgvcHn
goeAPwWPMUi6n2xVH3wg+GLw4+CvweP9J72gbN0UfBj4SvBz4B/BkwyWXly2
ag0+BnwD+BXwH+CphkgvK1u3B58Mvg38Nvg/8AxaemXZqhv4TPC94KHgkYdK
zyZb1QLvAz4f/BD4M/CYw6Tnka0bgP8HvgT8JPgb8PjDpReSrZqDDwdfDX4e
/DN40hHSS8rWAeDjwDea7l/03ubX1q+Zflrg7KDGp8l/mq6dZ2+Fk9TKd6S3
D+ZY41PgDHk509mzBN1bSq06mg5KP2ZVvLPkU0xH9u3bcwi12mG6Z/LAEm+s
3zEdmqhetCbnyMON8nZVn7JXT1LrjKZ3x8q7qMB58qqmM0ZL22EZte5uenrE
ePl9LpDPHsWPj1rv4/ZcJH/ErS6RRxnNTq1ycGvrtbkvWu/H7XuZfAF3N2p1
hDvE+nPuuFfIY49x2p9a5+XeZL0Rt7pKPpg7LrVaxu1r/RS3n/V33B7rCcY6
XdN6EW5/6y24u1kfya2tr+FW18gvuk6tv3B7rpMnH8fzN8g93L7UKpDbY308
t7/1zdza+nXT9PMe1n+bpu93t55mPO93k7zCeGc+K7XuNN6Zr2d9Gs9r6zu5
Q63f4/bcIg8/welgapWZW90mr8btT616codYn8Pte4f8ALem1o+5494ljzaR
96PWObn97pHX5Q6h1v25a94nX8QdSq2Pcnd7QP6SW4WSx5nk9BRqlZ/b9yF5
Y+5N1Epzex6RL+e+SK3OcPs/Jn/P/Z5aJZrMj/8JeVHT9PtVqFVL0/T7R62P
Mk2/n8X6OtP0+0KtX+L1Qqx/4/XOWk8xxVnvlvXSU5z1wqy3neKs98n6xCl8
fZ6Sb5nirFeVWt3k9YKs/3HXs55uqrNe3jDyilP58VKrLlP5/KxPn+qsl/QZ
+e6pznqB1Po+r7fVesRpfH7PybNM4/OjVjWm8flZ7zWNz8/63Gl8fi/ID/J6
mlo95fXOWo8+nc/vJbnfdD4/al1vOp+f9YHT+fxekQdP5/OjVsd5vSDrr3i9
MOvxZvD5vSYvMIPPj1o1ncHnZ33oDD6/N+QrZ/D5UeuzvN5W6x95PfWWPPFM
Pj9qVXwmn5/1VjP5/KyPmcnn9458/Uw+P2p1hdc7a/07r5f0PXmqWXx+1LrM
LD4/6+1n8fl9IJ/EranVNtc/kt+axedPrf7N4vO3nn42n7/1yrP5/D+Rd53N
61OrmbP5/K3vmc3n/5k8lNcLpNaR5vD5W882h8/vC3lN9jrUqs8c/nq2Pm+O
s/4P64fm8OP5Sh7G6wVTq5hB/PVqPXeQs175b+QNgvjxU+tBQc56r60vCeL3
r+/kJ3i96dTqDa8XZt1nrrNe4R/kheby+xW1bjaX32+tD5/L1/cn+aq5znqj
qNV5Xu+W9U+8XvZf5Enn8fNBrUvMc+5fCX+TB8zj+yG1Hsvznj/kG3n+GrW+
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
qXUBblWWvKnr1Hqo6+XIV7pOrc+6Xp78o+vUOnGo074VyItzh1DrVtz+FcnH
cKtK5OtN03+PU6srpunfR7L+3TT993tl8lQPczr/+ye1LmOa/nvfenvT5r/n
01chn/SQz5dabXvo7HfH+q2Hzn4FqpL/e+jsN41ap3/k7PfGeuVHzn6VqpF3
feTst4xazXzEj686+R7uEGoVyq1rkEd67LSnJnk2blWLvCZ3CLXqw61rk8/j
nkKtDnEHWw/j3mQ95hNez3pu7ovWG3CHWh/E/d76Em5Vh/wEdzdq9cY93rrP
U6dr1iUvxB1CrZtx+9UjH84dTK1XccetT36eW1PrT6bp8zzrScNyOp8PNiAv
Ecb7UauAMGc+a0PysTw/k1pt5HnViPwqz3egVj95/pr11M/4+WtMXu6ZM7+G
Wnd45swnbEI+hec1td7O8y+t3+H5ek3J1XM+f2qV8TmffzPyKs/5/KlVd55X
zclncXuo1T5ubf2hu771KC/4+Bbk2bk91Ko2t7belzvE+gL3eH/yw+7x1Oq5
e7z1WC/569F63pf89diSvOFL/nqkVoNf8tej9aUv+euxFfmpl/z1SK3fvuTz
aU2e4BW/31Drwq/4/cZ6i1f8fhNAPuIVv99QqzWv+P3G+oVX/H7ThvzLK358
1DrZa+f5ih5I7nnNzxe1bvOa3z/bko/n+TXUehPP529Hfp3nQ6j1L56v3J48
zRt+fVLr8m/4/bcDeac3/Hqj1lN5vndH8p08rzqR3+WOS63Cv+XztZ6J2896
NW6P9R7cNa3P4fa3vp+7m/XH3Np61Hf8/mY9J3ew9Trcm6z35w6xvpD7ovWj
3KHWX3C/tx7nPT/+zuT53vPzRa0av+evvy7kQ3g+hFot5/l6XclP8/xLavWe
53U38oQf+HhqVZRbdSf35/ZQq1Hc2vpa2eoS+FfwFB+ll5Kt2oJPAN8CfgP8
D3jaT9IrytadwaeD7wK/Dx7hs/QssnV18F7gQeAHwZ+AR/8iPZdsVQ98AHgw
+DHwV+Bxv0ovIFs3AR8KvgL8LPgH8MTfpBeTrVqBjwZfD34Z/Dt4yu/Sy8jW
7cAngW8FvwX+Fzz9D+mVZKuu4DPA94A/AI/0U3pW2aomeG/weeAh4GHgMX5J
zy1b1wcfBL4Y/AT4a3Cf39ILylbNwIeBrwI/B/4JPMkf6SVk69bgY8E3gF8F
/wGe+q/0srJVB/DJ4NvBb4Orf9IzyFZVwLuBzwLfC/4QPLLKJTy7bF0LvC/4
fPDD4M/AY4WTnke2agj+H/hS8JPgb8Hjh5deWLZuDj4CfDX4BfDP4MkiSC8p
W7UBHwe+Cfwa+C9w34jSy8vWHcGngu8AvwseLpL0TLJ1VfAe4LPB94M/Ao8a
WXoO2aoOeD/wheBHTK96OGXeBOsvTL9Keb1zkPXYUbydo3Fyzwrr+Ux3m+Xv
s9V6I9NbLy9/ctD6ENNfYr/acdb6MtOFqviNvWX9tOmBo3s3CbP+zvT+I3ty
fLKeMKpzfqoHeRFuTa38Xe9JPtJ1arXW9V7kF12nVl9d702ePBo7tSrFrfqQ
B7pOrSa43pd8s+vU6obr/ch/u06t0kZn709egVtTq86uDyCf5jq12uX6QPJ7
rlOrCDHYB5Fn5tbUqrrr/5H3dJ1aBbk+mPyA69TqietDyKPFZKdWubi9f3U1
Xtd1ajXA9aHki1ynVsdcH0b+0nVqFTcW+3Dy/NweatWEW1vX3CHWV7jHjyA/
4x5PrT64x1tPFJuPt16MW40kb8ntoVajubX1de7x1i+7x48i/8btT61SxuF5
66W5fUeTt+PW1Hoit2cM+VZuNZb8Jrc/tfrrrm89XVxefxx5JW5NrbuYps8X
rM8wTZ8vjCffbZo+X6BWD0zT5wvWI8bL5Xy+MIE8q2n6fIFa14jH5zuRvHc8
Z78m1HpuPGe/HdZD4jn7+UwifxrP2a8ztYrh4+x3yrqfj7Nf+snk9X348VHr
gdzvrS/m9p9Cfpz7IrV6ze2ZSh4vvtObqFVBbt9p5E25p1CrYdxqOvlK0/T5
A7U6Z5r+vmz9I8+HWk+SwJnPOoO8eAJnvje1ap2An1/rY3g++kzyDTxfj1pf
4flg6z94/qX1VAmd+fyzyMsm5OtHrdubfrFkfM6f1iebvlwucbNes8m3md7z
fMn4t9Tqtuml43PuaTeH/J/pCTn3PH9ErTIk8navS94Fgsgrm27m/X/coFbd
TJf3Ll9rLvlM097Dl5yhVntNJzYHzCMPTcTXg1pFTuycb5H55NkSO+e7jVrV
Suycb84F5H0SO+e7ilrNT+ycb9qF5IcSO+e7gFo9S+ycb+JF5DGTOOc7lVrl
SeKcb4xg8gZJnPMdSa3+S8Kvj8XkS7j9qdVJ7hDrb7h9l5DHT8rPD7UuxB1q
vTm3Zyn5cO5garWaWy0jP+/OU6vP7vrWkybj+eXkJbk1tQ5wfQX5ONep9UbX
V5Jfc51a/+QOte6bnM9nFXk57mBq1ZFbrSafwu1PrXZwh1i/w+27hjxcCt6f
WmeUraqCdwefDb4P/BF4lJTSc8jWtcH7gS8APwL+HDx2Kul5ZatG4IPBl4Gf
An8HniC19CKydQvwkeBrwC+CfwFP7ivdI1sFgo8H3wx+Hfw3eJo00ivI1p3A
p4HvBL8HHj6t9MyydTXwnuBzwA+APwaPlk56TtmqLnh/8EXgR8FfgsdJLz2/
bN0YXIMvBz8D/h48UQbpRWWrluCjwNeBXwL/Bp4io/TSsnVb8IngW8Bvgv8B
T5dJekXZqgv4dPDd4PfBI2aWnkW2qgHeC3wu+EHwp+DRs0j3k63rgQ8EDwY/
Dv4KPF5W6QVkq6bgQ8FXgp8F/wieOJv04rJ1K/Ax4OvBr4B/B0+VXXoZ2ao9
+CTwbeC3wP+Bp88hvbJs3RV8Jvge8FDwSDmlZ5Ota4L3AZ8Hfgg8DDxmLum5
ZasG4IPAl4CfAH8D7uMnvZBs3Qx8OPgq8PPgn8CT5pZeQrYKAB8LvhH8KvhP
8NR5pJeTrTuATwHfbjpPk3BrHli/Y3rwrCQLSq0lV3m9ffpSrilLqVVG04li
VRgeaR15FdOtKjbv05ZadTe9YXjv9qeszzL988CEptnWk+8zXf7n0hoTqfVD
09Py7y39znqUfN6+3+1y/lobyLObzrruReat1Kq26T7PVIqEG8n7mj6cNkmc
vtRqgenYzXOFv2X9sOkmQeW/FNlE/tz0yqvNns+n1rHye/tTnN53/lrPa7pk
lQnn/TeTNzQ9ftTSQ4ep1WDTNw7t2ZZ+C/lS0+n+XFo5ilqdMt210Iu5z62/
Nb23p5pUeSt5ggLejrIx8dB11Lqw6Tovc/aKvY28helFGcq37UatR5h+7d+s
8WXra0wXmt+rWr7t5BdMj7gx3jOLWn0xfdFnad7v1pMV9HaK6nsyNt5B7jHd
buylpPuodRvT244+j5lqJ/n4gvz6oNabTNPvE7F+3TR9//4u8l+m6feJUKs0
hXI53/9vvXwhZz21m7xTIWe9qtR6aiFnvSDrOws564VZv8vr5d1DHr4wnx+1
zlSYz896tcJ8fnvJexTm86NWcwrz+Vnfz+upfeSPeb2q1DpqET4/6zmL8PlZ
r1OEz28/ef8ifH7UeiF3iPWj3OoA+QtuD7WKU5SPt56PO8R6Y251kHwIt4da
LXePt37aPd76e/f4EPKExfh4alWUW1v35w6xPopbHSJfy12IWl3i7mb9K/cq
6ymKOx1qvRR3ksPkbblrUusJ3GOsb+EOsX6D+7v1P9x+R8jTlnC6HbWqyB1s
vTP3TevTueMeJd/FXZFa3efW1iOU5POxnoVbHSOvzu2hVr24tfUg93jrB93j
j5M/cY+nVtE9fLz1XNwh1utxqxPkA7g91CrYPd76MXf+JPkr16l13FLsp8gL
cGtq3cT10+RDXafWK1w/Q37WdWr9wfWz5IlLs1PrYtzqHHkr16n1aNfPk693
nVpfdv0C+XfXqXXKMs7X8wrrZcrw+4n1dmWcr+9P1ieV4feXi+Rby/D1pVa3
eL1A6395vQnW05fl9x/rlco6692y3rUsn+8l8hncmlrtcf0y+QPXqVWkcuxX
yLNya2pV0/Wr5L25/anVPO4Q6yHcvtfIw9z1qHWM8qJVbtm6Pvgg8MXgJ8Bf
g/tUkF5QtmoGPgx8Ffg58E/gSSpKLyFbtwYfC74B/Cr4D/DUlaSXla06gE8G
3w5+G1xVlp5BtqoC3g18Fvhe8IfgkatIzy5b1wLvCz4f/DD4M/BYVaXnka0a
gv8HvhT8JPhb8PjVpBeWrZuDjwBfDX4B/DN4surSS8pWbcDHgW8y/bFRwTlL
rF8zvePBpWxLrf8yPaBNp4O2tW8Nb5d4FbnOMuvlTYfvvjjMtu5o+vjXogOW
W59qetyg67FWWN9hurr3ANvqrmmfMTHyr7Qerqa3vdMnbatMpudO9zRdZb2q
6eZJ77yzrXqYTreo9/DV1mebfpY+buI11vebpu9ftf7IdFe/ciXWWo9ay7z/
eh+wbZ3D9LeiA9qss17H9N5DCX7Y1v1MD6mwccJ66wtNlzlXyXeD9SOmo9R5
stW2emH6zM3BFTZaj13b25O9D8C2ymfaO95lk/VGphN3qB5+s/Uhpu+8ez7T
tl5m2vtws2yxftp0618p99vW70xnGrqr5lbrCet42/t0PbGti5jeOOFN323W
/U339D4B262PNF1wTtpFttVa097l8+ywftH0waUNjttWX02PyPKx0U7ryet6
u6J3A9uqlOmY+b1nZD3Q9MU9hxLstj7B9Azv02tbbzbd0PsC2mP9hukUVade
sK1/mw69lK31Xutp63l7WYPjX23rCqbb3fMft896Z9PZzQWyPs30e+/ltK12
md7Wxa/cAev3TPf7fPqmbRWhvreLmS8A65nr8/3QenXTR0fOnW5b9zTtfTln
OmQ9yLQ5fdv6gOm43if4sPUnpq/Oj/jIto7WwNvey9/7iPVcppuuKhztqPW6
pn1zXp1vWw0w7X35+B2zvsi0GbetjpnuZJ4w6y9Ne1/+r2yruA297X24g09Y
z296V82ePietNzFtvnxta23anNAp6ytMR3pU+pxtfcb0qbb3/E9b/2B64pu+
n23rRI28Xcv7gjtjvZjphD/WJT9rvaXpW94vF9tqtOkFEb0bWF9nuqX3DcW2
umw6g/eCnrf+zfSLmZv/2FYpG3t7fXLvM2C9tGnv21X6i9bbmTYvT9t6omnv
6VS9ZH2rae+r/4FtfdO098ur52Xrf017L2fkK9bTNfF2NO8LwraqZNr79pDz
qvUups3LwbaaYZq+P976btPet7fnttUD096X86Dr1iM29faSsPRxb1jPajrQ
+wTb1jVMZ/W+od+03tv0W+/lt63nmt7yZ1LzW9ZDTPcZnuWjbf3UdBHvA7ht
PUYzb/+d5H3Dsu5n+rD37dC2qm96lPcN+q71gaYrex+ubbXYdOwVJ9ves37c
9OVsrX/ZVq9Nz9r8Z9J96/Gae7ux9w3ogfWCplOZJ8B6U9PeV0OlUOvDTJvl
beuVpr1vn90fWj9nOqf5ArP+sblzv7OtkrRw7nePrRdv4dzvbKvWLZz73RPr
Y1o49zvbakML53731PqVFs79Lsz6jxbO/c62TuXv3O+eWS/r79zvbOv2/s79
7rn1yf7O/c623ubv3O9eWL/t79zvXlr/5+/c72yrDC2d+90r65VbOvc726pb
S+d+99r6zJbO/c622tvSud+9sR7a0rnfvbUeuZVzv7Ots7Vy7nfvrNdq5dzv
bOs+rZz73Xvr81s597sP1g+1cu53ttWzVs797qP1mK2d+51tlae1c7/7ZL1B
a+d+Z1v919q53322vqS1c7/7Yv1ka+d+Z1u/ae3c775ajx/g3O9s60IBzv3u
m/XmAc79zrYeHuDc775bXx3g3O9+WD8f4NzvbKvPAc797qf1pG2c+51tVbKN
c7/7ZT2gjXO/s63GtXHud7+tb2zj3O/+WL/Wxrnf2dY/2zj3u7/WfQOd+51t
XS7Qud/9s94x0LnfqevkU2SrHeB3wMO1lZ5RtqoK3h18Nvg+8EfgUdpJzyFb
1wbvB74A/Aj4c/DY7aXnla0agQ8GXwZ+CvwdeIIO0ovI1i3AR4KvAb8I/gU8
eUfpHtkqEHw8+Gbw6+C/wdN0kl5Btu4EPg18J/g98PCdpWeWrauB9wSfA34A
/DF4tC7Sc8pWdcH7gy8CPwr+EjxOV+n5ZevG4Bp8OfgZ8PfgibpJLypbtQQf
Bb4O/BL4N/AU3aWXlq3bgk8E3wJ+E/wPeLoe0ivKVl3Ap4PvBr8PHrGn9Cyy
VQ3wXuBzwQ+CPwWP3ku6n2xdD3wgeDD4cfBX4PF6Sy8gWzUFHwq+Evws+Efw
xH2kF5etW4GPAV8PfgX8O3iqvtLLyFbtwSeBbwO/Bf4PPH0/6ZVl667gM8H3
gIeCR+ovPZtsXRO8D/g88EPgYeAxB0jPLVs1AB8EvgT8BPgbcJ+B0gvJ1s3A
h4OvAj8P/gk86SDpJWSrAPCx4BvBr4L/BE/9n/RysnUH8Cng28HvgKvB0jPK
1lXAu4PPAt8H/hA8yhDp2WWr2uB9wReAHwZ/Dh5LS88rWzcEHwy+FPwU+Fvw
BEOlF5atWoCPAF8DfgH8C3iyYdI9snUb8PHgm8Cvg/8CTzNcennZqhP4VPCd
4HfBw4+Qnkm2qgbeA3wO+H7wx+BRR0rPKVvXAe8PvhD8KPgL8DijpOeTrRqD
DwFfDn4a/D14wtHSi8rW/uCjwNeCXwL/Cp5ijPRSslVb8AngW8BvgP8BTztW
ekXZujP4dPBd4PfBI4yTnkW2rg7eCzwI/CD4E/Do46Xnkq3qgQ8ADwY/Bv4K
PO4E6QVk6ybgQ8FXgJ8F/wCeeKL0YrJVK/DR4OvBL4N/B085SXoZ2bod+CTw
reC3wP+Cp58svZJs1RV8Bvge8AfgkaZIzypb1QTvDT4PPAQ8DDzGVOm5Zev6
4IPAF4OfAH8N7jNNekHZqhn4MPBVpgMn3gwqZf2c6ckRi+rl1j+Z3j1wQWC0
G+RJpnv70cd/VTtTqxKmY3ZolfeS9damCzw8mjT/TfKxpv0bZlJB1HqD6bEX
xob9tn7V9Nbyr8/63yL/Yfru/upbj1Kr1DO8HTn/5qDMt8nLmvZbF19PoFYd
TDdK1yfwvfXJpofPvVm17h3y7abXxyuadxe1vm36+pgFSVPcJVczneuhqXUG
0/S/R1ivYpp+Pu4eeTd3nlrNcuet73Xn75M/dOepdeRZPG89+yyef0BeaxbP
U6u+7rz1+e58KPlhd55aP3PnrceazfMPyfPM5nlq1XA2z1v/z51/RL7UnafW
J91562/d+cfk8efwPLUqPIfnrTefw/NPyEe489R6tTtv/YI7/5T8sztPrZIF
8bz1kkE8H0beJojnqfU40/T9i9Y3mabvP7J+zbT99wzJf5mm72+07juXv36e
kZefm4v/vUPyjnOd9fJanzrXWa+q9R1zc/G/h0h+l9fT1sPNE60yydZVwXuA
zwbfD/4IPOp86Tlkqzrg/cAXgh8BfwEee4H0fLJ1I/Ah4MvAT4O/A0+4UHoR
2coffCT4WvCL4F/Bky+SXkq2DgSfAL4Z/Ab4b/C0wdIryFadwaeB7wK/Bx5h
sfTMslV18J7gQeAHwJ+AR1siPZdsXRd8APgi8GPgL8HjLpWeX7ZqAq7BV4Cf
Af8AnmiZ9GKydUvw0eDrwC+DfwNPuVx6admqHfhE8K3gN8H/gqdbIb2SbN0F
fAb4bvAH4BFXSs8qW9cA7w0+FzwE/Cl4jFXS/WSr+uADwReDHwd/DR5vtfSC
snVT8GHgK8HPgX8ET7JGenHZqjX4GPAN4FfAf4CnWiu9rGzdHnwy+Dbw2+D/
TD9sm/XneesZ1nm73b4JkVI/J69s+l3cd3G7Uqtupvu0qZXioPWZpv/s3pop
zgvyvaZHxE6UtwW1DjUdo3W/EhutR17v7Wk7b1f6Zz2b6SQxi9er8ZK8lulF
/t7/o9Z9TGfcHq7TO+vzTa+PFtC35CvyQ6bzNT8+bDK1emZ675bMkx5Yj7nB
26WjjA/K9Zo8j+lTTd4sG0KtG5iuuanGpgvW/zN9I+KWvanfkC8x3bxRghNd
qdVJ00/W97l80Pob0x3D37oX5y15/I3e/li/6IsW1LqQ6f5rF3zeaL35Ruf6
q3fkw7n9qdVq7hDr57l935N/5tbUOummXPb3cVy2XtI0/b6ND+QBps3v7+hD
rcaZpt/PYX2jafr3Wz+SXzNNv8+DWv/cxOdj3Xezs5/PJ/Jym539AqhVx83O
fjusT9ns7BftM/mOzc5+Taj1nc3Ofuuth9vC1+cLeUbT9PsyqFVV0/T9mda7
u/NfyWe789R6nztv/ZE7/408ylaep1Y5tvK89dpbef47eT93nlovcOetH3Hn
f5A/d+epVextPG897zae/0neaBvPU+vB7rz1Ze78L/JT7jy1eufOW0+wned/
kxfZzvPUusV2nrc+0p3/Q77GnadWF91561/c+b/kyXfwPLX27OB564E7eP4f
+Xh3nlptduetX3fn1RHjv915ap1mJ89br7CT58ORd9rJ89Rqmjtvfac7H578
njtPrcPv4nnrmXfxfATyatyaWvV0PSL5HNep1QHXI5E/dp1aRdvNHpk8J7em
VnVdj0Le33Vqtcj1qORHXadWL12PRh5nDzu1ys+topM33sPXg1rpPXw9rC93
52OQn3HnqfV7d956or08H5O86F6ep1Yt9/K89VHufCzyde48tb7kzlv/5s7H
Jk+xz/HK1Kr0Puf4mdbb7nPmQ61P5Pmscci38HxvanWT50Os/+H56HHJ0+3n
86PWFfc788HWu+x35l9an87z+eOR7+Z5Ta3vc4daj3jAaY8PeRbuYGpVg1vF
J+/F7U+t5nKHWD/I7ZuA/Cm3ptbRD/L+1v24PQnJ63EHU6uB3CoReTC3P7U6
zh1i/RW3b2LyeCG8P7UuwB1qvSm3Jwn5UO5garWSWyUlP8vtT60+codYT3yI
909GXpxbU+tW3KHWx3B7kpOv5w6mVle4VQry79z+1CrVYd7fehlu35Tk7bk1
tZ5kmj5Psb7NNH0+kor8lmn6PIba+66ay/l8JTV5+iO8HrWqfITXs971CK/n
Sz7zCK9Hrfcc4fXSkIe661HrSEf58VjPxq3Sktfk9lCrPtza+jz3eOuH3OPT
kYe5x1OrmMf4eOu5ZasG4IPAl4CfAH8D7nNceiHZuhn4cPBV4OfBP4EnPSG9
hGwVAD4WfCP4VfCf4KlPSi8nW3cAnwK+HfwOuDolPaNsXQW8O/gs8H3gD8Gj
nJaeXbaqDd4XfAH4YfDn4LHOSM8rWzcEHwy+FPwU+FvwBGelF5atWoCPAF8D
fgH8C3iyc9I9snUb8PHgm8Cvg/8CT3NeennZqhP4VPCd4HfBw1+Qnkm2qgbe
A3wO+H7wx+BRL0rPKVvXAe8PvhD8KPgL8DiXpOeTrRqDDwFfDn4a/D14wsvS
i8rW/uCjwNeCXwL/Cp7iivRSslVb8AngW8BvgP8BT3tVekXZujP4dPBd4PfB
I1yTnkW2rg7eCzwI/CD4E/Do16Xnkq3qgQ8ADwY/Bv4KPO4N6QVk6ybgQ8FX
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
Wo90fQn5Wtep9UXXl5J/dZ1aJ8/Pvoy8FLem1oGuLyef4Dq13uz6CvIbrlPr
366vJE9bgJ1aVyjgPL8vrXcuwM//KvJpPB9CrXbxfNbV5Pd4fia1ilCQ91tD
nrmgM9+BWlUvyK9H6z153rOWPIjn11DrAzyfcB35E57X1DpaId5vPXkubk2t
67q+gXyA69R6kesbyY+5Tq1fur6JPG5hdmqdvzBfP+tNCvP120yueT6EWq3g
+axbyM/w/Exq9YHn1VbyREX4+lGrYkX4+llvWYSv3zby0Ty/hlqv4/mE28kv
87ym1t+4g62nLMrna700d6j1dtxqB/lEbl9qtZXbY/0mt7/1v9zaerpiPL+T
vBK32kXehTuEWs3g1rvJd3OHUqsH7np7yCMW58dHrbJyq73kNbj9qVVv7hDr
c7l995GHcGtq/ZQ71HqMErz/fnI/7mBqVZ9bHSAfWIJfL9RqcQl+/qwfd+cP
kr9256l1vJI8b71gSZ4PIW/K3oFaDSvJrx/rK3nec4j8nLsetf7I8wkPkyfx
8OOn1sW51RHy1q5T6zHcIdY3uPNHya9we6jVD/d466lK8fHWy3KrY+TtuT3U
ajK3tr7NnT9Oftt1av3P9RPkGUqzU+vKpfnxnyTvVpqvD7WeyfOeU+R7ef4a
tQ7l+Q6nySOX4f3OkGeTrWqB9wGfD34I/Bl4zLLS88jWDcD/A18CfhL8DXj8
ctILyVbNwYeDrwY/D/4ZPGl56SVl6wDwceAbwa+B/wT3rSC9nGzVEXwK+A7w
O+DhKkrPKFtVBe8OPht8H/gj8CiVpOeQrWuD9wNfAH4E/Dl47MrS88pWjcAH
gy8DPwX+DjxBFelFZOsW4CPB14BfBP8CnryqdI9sFQg+Hnwz+HXw3+Bpqkmv
IFt3Ap8GvhP8Hnj46tIzy9bVwHuCzwE/AP4YPFoN6Tllq7rg/cEXgR8Ffwke
p6b0/LJ1Y3ANvhz8DPh78ES1pBeVrVqCjwJfB34J/Bt4itrSS8vWbcEngm8B
vwn+BzxdHekVZasu4NPBd4PfB49YV3oW2aoGeC/wueAHwZ+CR68n3U+2rgc+
EDwY/Dj4K/B49aUXkK2agg8FXwl+FvwjeOIG0ovL1q3Ax4CvB78C/h08VUPp
ZWSr9uCTwLeB3wL/B56+kfTKsnVX8Jnge8BDwSM19nbDzL+ftbeezfSqueV/
XLNe0/T3mFOjlz5L3sd0xSF3km+g1vNMz/6QIUeyc+SHTD9r3a3EKGodZrrg
9T01PlqP2cTboypGatn8PHlu017ucZpaNTCdMcfc4QUukA8y3WfRkxlLqNUS
08fi5VoR+yL5CdMJR/TfOYBavTHd5uuRk2HWfZp6e3u72LdrXyIvZDrinYav
DlDrZqbrVlv6O+tl8uGmlx18E2s2tV5l+nPuQqkjXCE/b7rMsmF+Xan1J9PT
E50rdcd60mbefjwmcZ0KV8lLmM7zq2XAVmoVYHpY53W9U18jH2v68oOvo8ZT
q42m09YuNeeb9aumux8dv7r1dfKfpg8VuL7nArVO3dzb8Vb7ni16g7ycaf/k
He+tpNYdTG+auP1t/JvkU5o7z7+m1ttNm2/nP279jmnz/f8xb5GrFn72+/vr
UKuMpun3iVqv0sJZL9R69xbOehlvk89q4azXiVrt4/W2Wn/I6/2wHsXfWc9z
hzy7v7PeKGpV299Z76z1vv7OevHvki/wd9ZrRK0P83rB1p/zemHWY7V01st+
jzxvS2e9ntS6YUtnvd3WB7fkr5/75Eu5g6nVKW7PA/K33KHUKkErvv6h5IW5
Q6lVC27PQ/IR3MHUag23ekR+wXVq9cU9/jF5sta8PrXycOsn5G1Mm59XOket
xpum3yf2lHyTafPzSu2p1XXT9PNR1n+ZNj+vFDGMPE2An/PzStS6fACfn/VO
Ac5+b6xPDXD2K/qMfGeAs99Yan03wNnvuvXwbZz90j8nz9TG2a8HtarWxtkv
xHqPNs5+sV6Qz2nj7NeEWu9v4+y32vrjNs5+X61HDXT2K/uSPGegs980al0n
kK+v9f6Bzn45XpEvDHT2G0itjgY6+52y/iLQ2S/Ra/I4bZ39Aqh1vrbOflus
N27Lz/8b8iHcwdRqObfnLflp7lBq9Z5bvyNP2M5p3/fkRblDqLU/t/8H8lHc
6iP5Wu5u1OoSd6j1r9w1P5GnaM/rU+tS3H6fydtyB1PrCdxxv5Bv4dbU+oa7
nvU/3OoredoOfD2oVUVubb0zd4j16dzqG/ku93hqdd893nqEjny89Szc6jt5
dW4PterFra0HucdbP+ge/4P8iXs8tYreiY+3nss0fV5jvZ5p+nz2J/kAd55a
Bbvz1o+587/IX7nz1DpuZ34+rBfgDrHehDvU+lBu9Zt8BbcvtTrL7bH+gdvf
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
8B/g+W9z9+Ite4GHg+8Cvwv+D7xoLPeGvEV/8HngB8HjwFPe4V6Kt2gOPhR8
Kfgx8Jfg6e9yd+Ut24CPAV8FfhY8ETzrPe6VeYsO4BPBN4JfBv8Mnus+91q8
ZVfwUPBt4DHgP8EdH3CvozpNvv5zc2nvrTr3+RL1x2ufqbr0sMe/Xmnfo7pG
kcXbmv0lv6fa+1qLLvuoRZKHtu44Nl0Ox3/kxVT3L3Xy/BRq0Vj1hNjRY99p
H6B6zqQKrm3ESeULVK9xffv8CLU8pHr3o3WLiiUhf6L69PSOTcKoZapHto6t
kjPJV+1lVL9+cXVX+6TkLVT/nBPS8xS1GK46nYdn3jLJyJepzvv255W51OKE
6rJLoib+1v5Kda36fSp1TU6eIc7Wzb4UeXOBWrqp7rTqwXK3FOS+qgc2nd9i
CbUcqzr4t3fKZCnJ16ietzHVgUBqeU71utbRQde1v1O9N9mIglVTkWd7bOuz
211iVlKLqqrvto+fmiY1eUfVb9Kurj6AWkxS/Xuv//tY7ZGq/+uWbY17GvKr
qvNnudRmA7X8otr56KR0mdKS53lia48+NY8Oo5buqlvk+jbwkfbuqruc3las
XjryaaoHD+p5dyu12KF6smPBsOzpyW+pXnDpjsdYavFb9YaRs788117wqa33
F2+0scl/5PVUn7+ZrP1uatlH9f3xhzLly0A+W3Vi2SEng6nlXtV/75UZnqD9
geqMIS9K+WQkT/rM1o4VVzw6SC1KqHZ92mZO4UzkTVTXnpmp3jRqMUi1T41z
Pz9qX6i6W/z4rX6ZyY+oHrqgaufj1PKp6qlenxycspCneW7rRR82nZtFLcuq
jlzedcwP7T6qDzbK59IpK/kI1Re/xzw7Sy1WqH64Nmyhczbyk6rftajXeCG1
iH9uvn8dyDO+cLb+3hu1qKCa/v6Ydj/V9PfetEvV9PfetK9VTX/PLDv5BdX0
996o5fsX1n5Se/aX1n57tFd7ae2XqL3TS2u/IjnIJ7+09vOnFptfWvvN1n7t
pbXfOe3fXprz5STP+8qcj1p4vjLn097jlTmf9hmvzPm073xlzpeLPPaVOR+1
/PPKnE974dfmfNrrvzbn0973tTlfbvI5r835qMX+1+Z82h++NufTnjzenC8P
ecl4cz5q0TTenE/74HhzPu2L4835tB+NN+fLS/483pyPWqZ9Y86n3fmNOZ/2
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
yd+b3k4tsruaz+cg8mqmZ1KLTqbFYPLJqun1MGqxWTW9fqb9mpl3H0L+zcxH
Usu8bta8w1ByTzdzPmrZw7T7MPIZpsVw8p2mo6lFrP36EeR/7PMjyQuXN04t
65sWo8j72p1azrH7aPL9dqeWD+0+hjx5BePUsqRpMZa8qd2p5WC7jyNfbHdq
edR0tPbn9nlJnraieT7Uwtm01N7KtBhPPsru1DLC7hPIT9udWr6x+0TyzJWM
U8uKpkUweTu7U8vxpt0nka+3z08mv2g6mlp8tF8/hTxHZXP9VPIapkUIeWe7
U4uppqX2LbzFDfDv4PmrcK/NW/QCDwPfBX4H/B94karcG/KW/cDngR8AjwNP
UY17Kd6yGfhQ8CXgx8BfgKevzt2Ft2gDPhp8FfgZ8ETwLDW4V+Yt24NPBN8A
fll1mm9Fm73X/km16+oCCx+Ekueqaet2TXPFnZ9GXlN18K8sJfZNJ++qeuv6
9P3XziAPUX27Zcp9s8PIt9U0+4WT31RdYmjn4vOpxU/VTRNOem/WXqCWrW08
9Lj2OqqXx4Ysi9UeqPqUd8LJt9pnqrZdnpB8Jvlu1dmq7ciah1rcU23Lai7a
hbutbct3rqe9mOrQZbEh7bU3Um0b3zFI+wDVavsQ7fPdzf/+1n7I3TrPHu2P
3a3zXNSeysM6zxPtpT2s83zX3sLDOk+GWeTDPKzzFKEWyzys81TTftzDOk9z
7a88rPP00P6fp3WeMdrdPK3zzNHe1tM6z0btYz3Nv0faV3ta57ml/ZyndZ4E
7W89rfMknU2erbZ1npzUskpt6zxltXesbZ3HS3twbes8/toja1vnGaD9Sm3r
PFO0f6ltnWeZ9txe1nmitLt7Wec5p72bl3WeOO3TvKzzfNW+3cs6T/o55Le8
rPMUopa/vKzzVNZesI51Hm/tdetY5+mqvU8d6zyjtM+qY51nlva9dazzrNd+
v451nsPak9a1znNDe/G61nlea29S1/z7P5d8IG+xEPww+FPw1PW4l+UtW4KP
AF8OfhL8NXjG+tzL8xZ+4OPA14KfB38P7tCAezXeMgB8Mvgm8GvgX8HzNuTu
wVv0AJ8OvhP8Nvgf8EKNuNfnLYPA54DvA38Inqwx95K8pTf4YPBF4EfBn4Gn
bcK9HG/RCnwkeAT4KfA34Jm8uVfkLf3Bx4OvA78I/gE8R1Pu1XmLzuBTwLeA
Xwf/Dp6vGffavGVP8DDwKPA74H/BizTn3oC36Ac+F/wA+CPwFC24O/EWzcCH
gC8BjwZ/AZ6uJXcX3rI1+GjwleBnwBPAs/hwr8RbtAefAL4B/BL4J/CcrbjX
5C27gIeAbwW/Cf4DvEBr7l68RSB4OPhu8Lvgog33oqq/hBRPvl97I9VO1fb3
GjmPvL/qgISGV6rNJ5+vet6y++X/UMuDqs979118ZAH5Y7O+XEiesq2L/nni
M2pRWrX69esGi8ibq1Y/T9xCLYappp8nLiZfqvr+nqB7Q6nFcdX0++HaX7a1
9nNfQv6fr7XfGmrp6mvtl2YpeVtfa78gajnG19rvuvbVvtZ+FZeRn/W19ltC
Ld76mue3nDyrn7VfV2pRxc/a75z2Dn7WfmVWkAf7WfvNppYb/az9vmq/4mft
5x9B/tnP2i+aWuT2t/YrspK8lr+1Xwi16OZv7ZeoPdTf2q/FKvLt/tZ+e6hl
jL+1X57V5L/8zeePWjq2s3WpPhmK3NVeV3Xr2Lz1y68h7616glepPmHUYpbq
LdurzHylfY9q2/guz7Xk91UnD2kdu5RaJmlv63Jfuv7+qr24ar9OgxybryNv
rHrypfFem6jFQNU7qszsmWI9+QLV99cun96RWhxWnSrLlu37tT9R7Tr24M2s
G8hTd7B1h/hz34OoZZkO5rzaW/KWw8GXg58Afw2eoSP38rylL/g48DXg51X/
vf29eYL2d6rPd9+c228juUOArRd86fj0DLWsqrprcNbNFSLJA1S7ZD0zeDW1
nKT678qRNTJvIt+k+oJz2ZTjqOVV1QuPPr6coP2r6m7e8xb4bSbP00k93wf1
A85SCw/V/3r/LlFxC3l31Rd/bvuwmlpMV70wpMuBzFvJd6junjPHxHHU4jat
t/58o0Ttv2m9CmOz+W8jL9RZrXfS5cFZallP9aKWz9dW3E4epLr7k4V911DL
2ardBjSulGUH+b7O5nlSywe8RbIu3EvwFt7gg8AXgR8Bfwaepiv3crylD/hI
8BXgp8DjwTN1416Bt/AHl+DrVN9Mn6tG+Z3kF1TvCK019Q21+KA6LHX3G6ui
yLN3t3Xg5On5/XaRV1ddL3lUr8y7yTupLjLhzq6z1GJKd7PfHvLNpqOpxXXT
Yi/5N9Pu1CJfD3O9dk/T0dp7mhb7yGeYdqcWUfbrtceqVq/f39H+V7V6fd9t
P3nhni769f/p1KKBavr5gPa+Pc36B8jn9rTWW0Qt9/e01vuk/ZFZr/FB8uS9
rPXWUQunXub+D5E3Ne1OLYaYltoXm47WHm2//jD5c/v11CJdoLleu7PpOO2t
TbsfIR9lOoJarDQtjpKf5i0SwDP35l6Jt2wHPgF8Pfgl8I/gOftwr8FbdAGf
Cr4V/Ab4D/D8Qdy9eMte4OHgu8Dvgv8DL9qXe0Peoj/4PPCD4HHgKftxL8Vb
NAcfCr4U/Bj4S/D0/bm78pZtwMeArwI/C54InnUA98q8RQfwieAbwS+DfwbP
NZB7Ld6yK3go+DbwGPCf4I6DuNfhLXqDzwTfA34PPMlg7sV4i8bgA8AXgB8C
fwKeagj3MrxlC/Dh4MvAT4C/As8wlLsbb+ELPhZ8Dfg58Hfg2YZxr8pbdgSf
BB4JfhX8C3ie4dzdeYvu4NPAd4DfAv8NXnAE93q8ZR/w2eB7wR+AJx3JvQRv
2QR8EPhC8CPgT8HTjOJelrfwAR8BvgL8JHg8eMbR3Cvwln7gEnwt+AXw9+DZ
x3Cvxlt0Ap8Mvhn8Gvg38LxjuXvylj3AZ4DvBI8F/wNeeBz3+rxFX/A54PvB
H4Inl9xL8hZNwQeDLwY/Cv4cPO147s68ZSvwUeAR4KfB34BnnsC9Im/RDnw8
+Hrwi+AfwXNM5F6Dt+wMPhV8C/gN1Tn7Js5opf276vR7v56O154/2JqX0eS1
Tb+nFr1MBxwjDzN9lVrsMu1+nPyO6e3U4p9pxxPkRSZZPZNaNDQtTpL3U03/
fRa1mKeaft9G+wEzH6E9zszHaE8x2ZpPe4q81GRzf9Sy2WRrfoj2oWY+UvsS
Mx+n/ZiZdzhN/sLMN6QW6aeY56fdRXWNPYV6Vj5D3kb1yD51rr6nlqNVK954
lnyV6k+xoRGdzpGfUe0cviV17vPkiaptl/e/Ti2zTLX1xl8fY0MvkFdW/WKH
g0fti+TtVRe2Lf+LWkxUHZDfP/OuS+QbVC+9OWZEn8vkl1W7ns7ZJf0V8k+q
S66d26IhtcgVYuuCwZk8p2qvqTpXl+kup7V3VZ3JM3XB5FfJQ1SnVhdQi20h
5vlovxliPb947T9DrOfb6hp5gVBrPppa1Am15p2ukweGWvPzqMVMMy9ukO82
7Ugt7pl21y6mma9n7cVMS+2Nppn70z5gmrm/m+TzzXw0tThk5p1iyB+b+XnU
ItV0c3+3yEtPN1/P1KLFdPP1q32YmXe/Tb7MzEdSy+Nm3iGW/JWZl9Tyvxlm
Pe1uM8z93SFvO8PMU4ux9nntq+3zd8nP2eep5Vvj8dqzhZnnc4+8Sph5PtSi
Y5hZ7z55sJmfRy0izbx4QH7FzAdSiy9mPkZ77nDzfB6Su4eb50Mtu4Wb5/OI
fJqZl9Ryu+lo7bdMizjyX/b1qUXBmeZ67XVNi8fkfexOLWfZ/Qn5XrtTy/uq
1eshF7UnneVi/T7lU/LiqtXrI92pRRPV9PuX2gfOMus/I184y1qvMbU8bNZb
pP2pWe+F9tSzrfXcnpOXnW3uj1q2NC1ekI+wO7VcbveX5CftTi1fm47WnnGO
mX9FXt60O7XwMy21jzMdrX2t/frX5Oft11OL9/brtTvMNV8v2qvNNV9/8eQB
c808tZhsn9e+yT7/hvyafZ5afuUt8s7j7sFb9ACfDr4T/Db4H/BC87nX5y2D
wOeA7wN/CJ5sAfeSvKU3+GDwReBHwZ+Bp13IvRxv0Qp8JHgE+CnwN+CZFnGv
yFv6g48HXwd+EfwDeI7F3KvzFp3Bp4BvAb8O/h083xLutXnLnuBh4FHgd8D/
ghdZyr0Bb9EPfC74AfBH4CmWcXfiLZqBDwFfAh4N/gI83XLuLrxla/DR4CvB
z4AngGdZwb0Sb9EefAL4BvBL4J/Ac0Zwr8lbdgEPAd8KfhP8B3iBldy9eItA
8HDw3eB3wcUq7kV5i0bg/cHngx8EfwyecjX30rxlc/Bh4EvBj4O/BP9vDXdX
3qIt+Bjw1eBnwd+CZ13LvQpv2QE8GHwj+BXwz+C513GvxVt0Aw8F3w4eA/4L
3HE997q8ZW/wWeB7wO+DJ9nAvThv2Rh8IPgC8MPgT8BTb+RehrdoCT4cfDn4
CfDX4BkiuZfnLX3Bx4GvAT8P/g7cYRP3qrxFAPgk8E3gV8G/gufZzN2Dt+wO
Ph18B/ht8N/ghbZwr8dbBIHPBt8H/gA82VbuJXgLb/BB4IvAj4A/A0+zjXs5
3tIHfCT4CvBT4PHgmbZzr8Bb+INL8HXgF8A/gGffwb06b9kJfAr4ZvDr4N/A
8+3k7slb9ASfAR4FHgv+F7xwFPcGvGVf8Lng+8EfgSffxd2Jt2wKPgR8MXg0
+HPwdLu5O/MWrcFHga8EPw2eAJ55D/dKvGU78Ang68EvgX8Ez7mXew3eogv4
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
nwa+HfwW+C/wgsW41+Ut+oDPAt8Lfh88aXHuxXmLJuADwReCHwZ/Cp66BPey
vGVL8BHgy8FPgr8Gz1iSe3newg98HPha8PPg78EdnLhX4y0DwCeDbwK/Bv4V
PG8p7h68RQ/w6eA7wW+D/wEvVJp7fd4yCHwO+D7wh+DJynAvyVt6gw8GXwR+
FPwZeNqy3MvxFq3AR4JHgJ8CfwOeqRz3irylP/h48HXgF8E/gOdw5l6dt+gM
PgV8C/h18O/g+Vy41+Yte4KHgUeB3wH/C17ElXsD3qIf+FzV717MWLBG+wHV
3nUXXrmi/ZHqzWtXpfqlPYWbrdOl2FKrWAK5k+rArnuHNacWzVSfPXFs22jt
Q1QXL3zx5XrtS1RPnnCrwA3t0aqfPY5r81f7C9W1Pd6El0wkT1fe1isjvpzx
oRYu5c39a2/NW4wGXwl+BjwBPEsF7pV4i/bgE8A3gF8C/wSesyL3mrxlF9Xx
X+MCCrwlD1E98p4IP00tt6pOF+14OOgd+U3VS9e4v8n2nvyH6tIhAbkOUYsC
lWx9OEjW6/KB3Eu1d4uIIWk/kgeqflgxevUOahmuul+euGttP5HvrmTdn/hM
ftd0NLXt/wA29/+FvKjpaGrRyLT4St7ftDu1mG+/XvtB+/XaH9uv/0aesoqZ
pxalTYvv5M3tTi2G2f0H+VK7U4vjdv9J/tLu1OK/qsZ/kbualtSird1/k4+x
O7VYbfc/5GdVD7d9VKYWb1V/eP/+fX/tWaup769evXpt1F5F9ZPHtg/tHVT7
2T5y/yUPVn3j+vXrLajlRtWNbB/TtF9RffKE7UP7Z9XVbR+/teeubuvdu3bt
Kv+PvJbqMraPIGrRTfW6tbYP7aGq89s+Hmrfrnq+7SO7OKU8RnVG20dTavFL
9dQptg/tjjXM51d73RrW8/iuvXcN63k4JyGfVcN6Hr2o5Z4a1vNYqf1+Det5
3NWepKb1PLIkJS9e03oejahl45rW85iofWBN63kc0r6gpvU8Pms/XNN6HmWS
kT+paT2PbtQidS3reSzXXqaW9TxuaW9Zy3oeGZOTD69lPY961GJ5LfP1ov0E
b/EaPIM79/K8pS/4OPA14OfB34E7eHCvylsEgE8C3wR+FfwreB5P7h68ZXfw
6eA7wG+D/wYvVJt7Pd4iCHw2+D7wB+DJvLiX4C28wQeBLwI/Av4MPE0d7uV4
Sx/wkeArwE+Bx4Nnqsu9Am/hDy7B14FfAP8Anr0e9+q8ZSfwKeCbwa+DfwPP
V5+7J2/RE3wGeBR4LPhf8MINuDfgLfuCzwXfD/4IPHlD7k68ZVPwIeCLwaPB
n4Ona8TdmbdoDT4KfCX4afAE8MyNuVfiLduBTwBfD34J/CN4zibca/AWXcCn
gm8FvwH+Azy/N3cv3rIXeDj4LvC74P/Aizbl3pC36A8+D/wgeBx4ymbcS/EW
zcGHgi8FPwb+Ejx9c+6uvGUb8DHgq8DPgieCZ23BvTJv0QF8IvhG8Mvgn8Fz
teReS/Wkr1nuNkpB3lX1s8phTyunJA9V7TkqTWLRVOTbVK88HPw1S2ryGLOe
SEP+UzW93yi1cPRxtd7/U3sdHzOflry3j5mnljPt89r32OfTkd8zLalFklbG
05MXMy2pRWO7/0c+oJW1fiC1WNDK2j9G+yEz756B/ImZj6SWqVpb8w4Zycu0
NvtRyxam47QPN+2eiXyZ6QhqccK0yEz+yj5PLTK0MetrdzMdrd3XtMhCPla1
evvQQdRijWp6f1Ht51Sr9x/1zUr+TjW93ym1zNbW7J+NvGpba70oatmxrbVe
MQfySW2t9RZRy8i21nrps5NfNetJavlFNf09Ne15fF2tv3+Wg9xdNf29MmrR
XTX9fTHt01TT33PLSb5DNf39NWp5y9c8j1zkv32t/fypZUE/a7892uv5Wftl
yU3ex8/aL4hazPaz9junfa+ftV+RPOQP/Mz5qGVSf9aiBG/ZRPWwcX/L5stL
Pkj1Tx+fAkeo5ULVY5wiM3bMR37EXC/ykz81HU0t0rQz6xcgL2s6glr4mI7W
PsJ0nPYVpoUj+UnTAdQi3n699oztrXYsSF7BtKSWfqbdC5FL06Iw+Vq7U4sL
9uu1vzcdrT17B3N9EfJqHazvv3nUolMH6/vTqSj5ZDMfTS02m/lWxcivmfl4
avHNzMvi5Hk7muuphadpUYK8h92pxQzTsiT5TtNx1CLWtLsT+R/TEdSicIBZ
vxR5fdMB1KKv6Wjtc0w7libfb1pSy4cB5t8z7ck7medThrxkJzNPLZp2MvPa
B9vny5Ivts9Ty6O8xXPwtJ25O/OWrcBHgUeAnwZ/A565C/eKvEU78PHg68Ev
gn8Ez9GVew3esjP4VPAt4DfAv4Pn78a9Nm/RCzwMfBf4HfB/4EW6c2/IW/YD
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
yMer9l1YOInPQPL1qkus73H/L7W8qPrr7k17Nw4i/6j61Ml3s30Gk+fYZuu5
N9z6/qMWNVR3fjKsQeQQ8s6qXT4cLNJqKPnUbeb5DyPfolr9PtIoanFDtfp9
pK/av6tWv480cDh5/u2u1u8/UcvaqtWvH/UaQd5Ltfp9pGfUMmy7tV/ASPJd
26397lHLO9ut/VqPIv+33drvOrUsssPar8lo8oY7rP3OUct+O6z9vMaQz9th
7RdNLQ/ssParNpY8boe13x5qmWKntZ/rOPJSO639tlDLZjut/UpK8qE7rf3W
UMslO639HMeTH9tp7beEWr7Yae2XfQJ5+ihrv9nU0iXK2u+/ieRtoqz9Qqjl
6Chrv+TB5KuirP0ktTxjWkwiT7Q7tcyyy1W//rZOe2XV9Pqc9vaq1et3n7RP
VE2v700m37DLWs+dWlw263XX/smsN117rt3WelHaa+621rujvetuc79TyEN4
i23gN8F/ghfYw70ObxkIPhN8N/g9cLGXezHeshH4APD54IfAH4On2se9NG/R
AnwY+DLw4+CvwP/bz92Nt2wLPhZ8Nfg58Lfg2Q5wr8JbdAQPBo8EvwL+xbTU
nvug+fqdSu5uWoSQdzMdTS2mmZah5Nvt108jv2W/fjr5L/v11KLgIXP9DPK6
vEUf8Fnge8Hvgyc9zL04b9EEfCD4QvDD4E/BUx/hXpa3bAk+Anw5+Enw1+AZ
j3Ivz1v4gY8DXwt+Hvw9uEM092q8ZQD4ZPBN4NfAv4LnPcbdg7foAT4dfCf4
bfA/4IWOc6/PWwaBzwHfB/4QPNkJ7iV5S2/wweCLwI+CPwNPe5J7Od6iFfhI
8AjwU+BvwDOd4l6Rt/QHHw++Dvwi+AfwHKe5V+ctOoNPAd8Cfh38O3i+M9xr
85Y9wcPAo8DvgP8FL3KWewPeoh/4XPAD4I/AU5zj7sRbNAMfAr4EPBr8BXi6
89xdeMvW4KPBV4KfAU8Az3KBeyXeoj34BPAN4JfAP4HnvMi9Jm/ZBTwEfCv4
TfAf4AUucffiLQLBw8F3g98FF5e5F+UtGoH3B58PfhD8MXjKK9xL85bNwYeB
LwU/Dv4S/L+r3F15i7bgY8BXg58Ffwue9Rr3KrxlB/Bg8I3gV8A/g+e+zr0W
b9ENPBR8O3gM+C9wxxvc6/KWvcFnge8Bvw+e5Cb34rxlY/CB4AvAD4M/AU8d
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
2hPMfIz2LJ3M+nHklXiL9uATwDeAXwL/BJ6zM/eavGUX8BDwreA3wX+AF+jC
3Yu3CAQPB98NfhdcdOVelLdoBN4ffD74QfDH4Cm7cS/NWzYHHwa+FPw4+Evw
/7pzd+Ut2oKPAV8Nfhb8LXjWHtyr8JYdwIPBN4JfAf8Mnrsn91q8RTfwUPDt
4DHgv8Ade3Gvy1v2Bp8Fvgf8PniSQO7FecvG4APBF4AfBn8Cnro39zK8RUvw
4eDLwU+AvwbP0Id7ed7SF3wc+Brw8+DvwB2CuFflLQLAJ4FvAr8K/hU8T1/u
Hrxld/Dp4DvAb4P/Bi/Uj3s93iIIfDb4PvAH4Mn6cy/BW3iDDwJfBH4E/Bl4
mgHcy/GWPuAjwVeAnwKPB880kHsF3sIfXIKvA78A/gE8+yDu1XnLTuBTwDeD
Xwf/Bp5vMHdP3qIn+AzwKPBY8L/ghYdwb8Bb9gWfC74f/BF48qHcnXjLpuBD
wBeDR4M/B083jLszb9EafBT4SvDT4AngmYdzr8RbtgOfAL4e/BL4R/CcI7jX
4C26gE8F3wp+A/wHeP6R3L14y17g4eC7wO+C/wMvOop7Q96iP/g81X62j7va
D6qubvs49Jg8TnV+28fyJ+QpR1vXy6fkpUw7PiNvbjqaWg41HfCcfKlp8YL8
mH09avHS7i/J048xTi1cTYtX5G1U0/uxUosxqunn39pXqVY/73Z7TX5WNf18
m1om2teLJ8861qxHLSuPNetp7zDWrPeGfOJYsx612DjWrJdAftl0f2rx2XSc
9lzjrG6WSF7LdDS17Gra+S15qOkIarnNdKZ35DGmJbX8aV9Pu6M09/eevI7p
CGrR27T7B/KZpuOoxR7T8iP5PdXq/z/7Qi2SjHezfp/hE3mx8eZ6atF4vDXf
6jP5ADN/nlosMPPuX8gPmfnd1OKJmXf6Sp5qgrl/alFmgjXv8I28xQRrPpRa
DDfz4jv5MjM/j1qcMPNOP8hfmfloapFhorn/n+RuE635eGrhO9E8n1/kY01H
U4s1psVv8nP29ajFO7NepPZswWb+D3nVYDNPLTsGm3ntk+zzf8kjzbwDtbhq
5p20fzHz7trzTDLra3efZD6f2rtPMufTPo232AF+C/w3eMHJ3Ovxln3AZ4Pv
BX8AnnQK9xK8ZRPwQeALwY+APwVPM5V7Wd7CB3wE+Arwk+Dx4BlDuFfgLf3A
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
wa/CTWnt6XSb/8E7wyfDd8DvwL8toz2rblsN3gs+E74X/hAeraz23LpNXXh/
+AL4YfhzeJxy2gvpto3hQ+DL4Kfgb+CJy2svodu0go+Cr4VfgP8HT1lBexnd
9mf4H17fyVs/9j3fN3s9NUe1Rseril/3unLmcks3VRP/5n9hHSFdidezq4tn
8Hp7ivzFR9QQr+h158TZRnapKd7V6wzx0p6vX0t8itc3YiRJUaq2+J9eT4wS
u122OuJ3va4QMfKm+HXFI1V091tPPJvrudKmhuuQ+uK9Xd+WNrNd2wbi+4Lz
NRR/HHRpG72S80bieV1baVsv6I3Ffw26tF0Y9CbiR4MubV+4DvU9XmU3vql4
Ya/Lj09bvqu0aep1WI6/7/tQr69v7nCtdjPxFV6Hcdoj0va01x2vbe5QpLn4
O6+3dLi2eZW0TVIlsF7KFuI/VAmsN17atq4SWC9CS/HRVQLr9ZS266oE1nvs
+6UqgfUatBL/VCWw3glpk7qqO5/W4mWrBtZbL206VA2sl/Yn8fFVA+tNljZb
qwbWi9xG/EbVwHp9pU34aoH1nvmesVpgvaZtxStXC6x3Vtp2qxZYr1Q78WnV
Auttlra7qgXWy/Sz+P1qgfVmSNvI1QPrRWsvnqO6O19pW9PrQ12SHvrH9z5e
j71XcGyLDuJzvJb3a0ibA14nDbugbEfxJ17fLzj23lZpE7NG3sD7nzqJ5/O6
a9gFM6VNA68LhS0QvbO4reHuR9osruHux/djNdz9dBH/p4a7H2kbv6a7n67i
RWu6+5G2zWq6++kmPrymux9pu7Kmu5/u4mdruvuRtv96nbFn8wzvfE9WK6yr
PN1fuX0P8ZJeh3HPu9KmjdezL4+cVben+BivD1R+uv+ktNngddjlT0v1Er/s
ddwi6+LskDZfvA7LIrl6i6epHdZh0zdfIm3Kez1q1uWRyX4R7+h12PB1E6TN
RK/Dlr8cuY/4ttpuP9LmVm23H98j1HH76SueuY7bj7StUsftp594jzpuP9J2
eh23n/7ioXXcfqTtX3XcfgaIR63r9iNtc9Z1+/lVvHZdtx9p27eu248Vn1fX
7UfaHqzrng++P63rznugeKx6bry0KVDPjfe9YT03fpD4oOB4abskON73E8Hx
g8VfBcdLm4T13Xjfi9V344eIt6jvxkvbEa5DfV/t2gwVP1c/8HhXljYf6gce
r1m+J28QOL+nvpdqEHj8iwwTb9sg8PiNlDa/Nwic52XfNzYInEeG4eJXGwSe
Hz2l7dcGgfPd73u6hoHziTNCvELDwPOlubTp3DBw3ut8n9TQ7Wek+I6Gbj/S
9nZDtx/fv23k9uN7lkZuP6PEqzVy+5G2PRu5/fg+s5Hbz2/iexq5/Uibh43c
fnz/vrHbz2jx3I3dfqRtncZuP773b+z2M0Z8vm5zGP4MHqeJ9oK6TWP4YPgy
+En4G3iiptpL6LYt4aPga+AX4B+9nhz2Fd/3lM3CutezKr06+F7a67qlItfd
7/vPXheasbdgkrHi47xO/Kpvoq7SZrPXH8vl+3jY92teX5vz/GqK38W/aR7W
O98t2dFT2qb3emalZjNP+F7R6/4LE/dPO068i9eN/zvXqK+0meJ18epjip/1
fafXKZaVSZHpD/G7zd33p7T9roVqk023rQ7vDZ8F3wd/BI/eUnse3aYefAB8
IfwI/AU8bivthXXbJvCh8OXw0/C38CSttYfoNq3hv8HXwS/CP8FT/aS9rG7b
Hj4evgV+Ax6ujfaMum0leDf4VPgu+D145Lbas+s2NeG/wOfA98OfwGO0055P
t60Pt/BF8GPwl/D4P2svots0gw+Dr4Sfgf8LT9pee0nd9if4GPh6+GX4Z3ia
DtrL6TYd4RPg2+A34RE6as+k21SBd4dPh++G/wWP0kl7Tt22FrwvfC78IPxv
eKzO2vPrNg3hA+FL4Mfhr+AJumgvpts2h4+Ar4Kfg7+HJ++q/Ufdpi18LHwj
/Ar8KzxtN+0VdNtO8Enw7fDb8IjdtWfRbavCe8JnwPfAH8C/76E9l25TB94P
Ph9+CP4MHrun9oK6bSP4YPhS+En4a3iiXtqL6zYt4SPha+Dn4R/hKXprL63b
toOPg2+CX4ObX7Sn123/B+8CnwzfCb8D/66P9qy6TXV4L/gs+F74I3i0vtrz
6LZ14QPgC+BH4M/hcftpL6TbNIEPgS+Hn4K/hSfurz1Et20F/w2+Fn4R/h88
1QDtZXSb9vA/4Fvg1+HhftWeQbepBO8Knwr/E34PHslqz67b1oD/Ap8N3w9/
DI8xUHte3aY+/Ff4IvhRr7eHS15hje8vva5YLknWVuPF4w0K65tjEkZPMkG8
iNedz8V7eVraNvU6XKI4Z4dNFB/m9cTGMTcWnSS+wuv0C6NNfiVtzni99XGU
3ksni7/zukKOSPUbTxFPOjisr3ePWDTuVPEfvO4YdoNHpc1Pg939TxMf7fq2
tFnvOmS6+CXXc6XNZ9dmhnjqIYFuKm3KuQ71vYPrlDPFJ7i20nar69u+33Qd
Mks8/FC3vrTJ5NrMFq+s23SHT4Pvht+HRxmmPYduUwveBz4XfgD+NzzmcO35
ddsGXn/Zm/ntWd8Hej01X+r9S+eIL/Y699JEEwbMFT/u9fHEsZrXnCf+j9et
x0TKlXm+eIIRbv4F4kVdW2nTPOgLxYcHXdqsCvoi8bNBlzbvg75YPNlI9/yQ
Nj+6DvW9jeuUS8THurbSdoNucwX+BZ52lPbyuk0n+ET4dvgteMTftGfWbarC
e8BnwEPhD+BRR2vPpdvWhveDz4Mfgj+Fxx6jvYBu0wg+CL4UfgL+Gp5wrPbi
um0L+Ej4avh5+Ad4it+1l9Jt2sF/h2+CX4WbcdrT6Tb/g3eGT4bvgN+Bf/uH
9qy6bTV4L/hM+F74Q3i08dpz6zZ14f3hC+CH4c/hcSZoL6TbNoYPgS+Dn4K/
gSeeqL2EbtMKPgq+Fn4B/h885STtZXTbn+F/wDfDr8O/maw9g25bEd4VPgX+
J/wuPNIU7dl0mxrw3vDZ8H3wx/DoU7Xn1W3rwX+FL4Qfhb+Ax5umvbBu0xQ+
FL4Cfhr+Dp5kuvYfdNvW8NHwdfBL8E/w1DO0l9VtOsDHw7fCb8DDz9SeUbep
DO8GnwbfBb8PjzxLew7dtia8D3wO/AD8CTzmbO35dJsGcAtfDD8G/wcef472
orptM/hw+Er4Wfi/8GRztZfUbdrAx8A3wC/Dv8DTzNNeXrftCJ8I3wa/BY8w
X3tm3bYKvAd8OjwU/hc86gLtOXWb2vC+8Hnwg/Cn8FgLtRfQbRvCB8GXwE/A
X8ETLtJeTLdpAR8BXw0/B/8AT744b+Dn376X8lp+32KpeFuv5efl0uZ3r+X3
O3zf6LX8fH2Z+FWv5fcvpO1Xr+Xn8b6nW5I38Psey8UreC0/v5c2nb2W3y/x
fZLX8vP+FeI7vJbf/5C2t5cE9mNWin+7NLCfutI2y9LAftb5Xm1pYD+RV4n3
XBrYT3NpM3NpYD87fN+zNLCfOKvFHy4N7Ke9tP1+WWA/+33PvSywn2RrxOss
C+ynp7Tpvyywn5O+z18W2E+GteKHl7nzkbbPlrnz8T3Ocnc+68QLLnfnI20a
L3fn4/vg5e581osvW+7OR9qeXO7Ox/c3y935bBBPtMKdj7QpscKdj+8tV7jz
2Sg+aoU7H2m7ZoU7n03iF1a485G2H1e48/E95Up3PpvFS6905yNtfl7pzsf3
cSvd+WwR37zSnY+0vbbSnY/v36xy57NVPP0qdz7SpuIqdz6+d1nlzmeb+JRV
7nyk7c5V7nx8v7vKnc928e9Wu/ORNtlWu/Pxvfpqdz47xHuvducjbWetdufj
+77V7nx2ij9a7c5H2kRf487H9zxr3Pn8KV5vjTsfaTtgjTufXeIL17jzkbZH
1rjz8f3FGnc+u8XjrnXnI20Kr3Xn43uTte58QsWHrnXnI22Xr3Xn4/vpte58
9oi/XevOR9okWefOx/eQde589oq3XufOR9r+ptusg1+Ef4KnWq+9rG7bHj4e
vgV+w+sFbzou/mWfeLgNYV29T4FzRQ+IZ9zgzuOQeCXXVtp0C/ph8alBlza7
gn5E/F7QpU3kjc6Pimd3XVXa1HQ91/dfXL/0fY7rkGPi+12PkzZPXN/2Pcam
QOc8Lp7PtZW29XUbC18EPwZ/CY+/WXsR3aYZfBh8JfwM/F940i3aS+q2P8HH
wNfDL8M/w9Ns1V5Ot+kInwDfBr8Jj7BNeybdpgq8O3w6fDf8L3iU7dpz6ra1
4H3hc+EH4X/DY+3Qnl+3aQgfCF8CPw5/BU+wU3sx3bY5fAR8Ffwc/D08+Z/a
f9Rt2sLHwjfCr8C/wtPu0l5Bt+0EnwTfDr8Nj7hbexbdtiq8J3wGfA/8Afz7
UO25dJs68H7w+fBD8Gfw2Hu0F9RtG8EHw5fCT8JfwxPt1V5ct2kJHwlfAz8P
/whPsU97ad22HXwcfBP8Gtzs155et/0fvAt8Mnwn/A78uwPas+o21eG94LPg
e+GP4NEOas+j29aFD4AvgB+BP4fHPaS9kG7TBD4Evhx+Cv4Wnviw9hDdthX8
N/ha+EX4f/BUR7SX0W3aw/+Ab4Ffh4c7qj2DblMJ3hU+Ff4n/B480jHt2XXb
GvBf4LPh++GP4TGOa8+r29SH/wpfBD8KfwmPdyKsT+yNNSPxCfEiXjc6PCPh
Dmnb1OtnJ9JNbnBSfJjXA86tifNJ2q7wOvqVQn/MPCV+xuvZN/dFL3Za/J3X
2e9XGn1D2iQ9Gda7H1+KPOCM+A9eV3nRbHjys+I/eX37zd8Rdkvb0V53/thj
UJNz4utPBu7fnBe/5LqptPnsOtT31KcCnfKCeDnXVtp2cH3b9wmuQy6Kb3U9
V9rcdG0uiYc/7eaTNplcm8vilYMubboH/Yr4tKBLm91Bvyp+P+jSJsoZ59fE
c7i20qZW0K+L9wm6tJkb9BviB7x+8fz58+zS5m+vb964caOR7zHP5g18Prvv
+b3euSPsy/cGXsvnb/k+0Gv5PLCb4ou9HhH2VU7aHPe6d6+wL9//8Vo+H973
BOfyBt6f43tRr0uFfUW4Jd7ca/l8eWk73OvUYV/NfV/ldaywrz98P3vOPR98
f38usN/nvic7H9hvstviP54P7LeitG1zPrDfvr6PPR/Y73LfN5wP7PeK71fO
B/Yb6Y74l/OB/RaQNmkvBPbb2vfyFwL7neR7pwuB/e73feKFwH5f+779QmC/
qe+K37oQ2G81aRPxojtv3zPrNlXhPeAz4KHwB/Col7Tn0m1rw/t5Hb3fuFn3
fJ/ndfOknar2vSd+yOvNOyuFj3Nf/KnXURtl3bxc2sS+HNZNPkdpW/Iv8QJe
b5j1OMlVadPI6++KHz7Z5YH4IK8b3Fw8MPJD8aVerx0wNO88aXvC6wgpWj4s
+Ej8tdd1d5ecflraJrwS1iubpKrU5rF48Svu++eJeAvXIdJmpGvr+2rXob6f
D17/t/iH4PXSJsVVd73vpXSbdvDf4ZvgV+HmmvZ0us3/4J3hk+E74Hfg317X
nlW3rQbvBZ8J3wt/CI92Q3tu3aau10M2d090y/f+Xv+4cFDOTk/FF3gdfvy4
sl+l7WGv9/46u/Hvz8Sfez2ow8oeKZ6Lx7kZ1iUbbB+9RtoU8jpc+cMLSrwQ
b+z1nvwXt5+SNkO8Hpj2/pkmL8WXeR0S+9WjF9Lm1E13v/+Iv7npXl+kTeJb
7vXvlXiJW+71Wdq0uhV4fXng+6hb7vn1WnztrcB806TtBTffa9//c/NVfCOe
8rZ7fZY2ZW675+9b8Z91mz/gm+HX4d/c0Z5Bt60I7wqfAv8Tfhce6a72bLpN
DXhv+Gz4PvhjePR72vPqtvXgv8IXwo/CX8Dj3ddeWLdpCh8KXwE/DX8HT/KX
9h9029bw0fB18EvwT/DUD7SX1W06wMfDt8JvwMM/1J5Rt6kM7wafBt8Fvw+P
/Eh7Dt22JrwPfA78APwJPOZj7fl0mwZwC18MPwb/Bx7/ifaium0z+HD4SvhZ
+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
//62WtImr9fy/jff6/3ixucU/zU4XtouDI73/WhwfC7xF66ttInXx3lu8cKu
Q6RNU9fW96F9AuvFyyO+oo9bT9qeDl6fV/ydG39B2ibpGxjfLp/4D33d+vnF
W7tuKm1Guw71fZ3rlAXEL7m20vZTcL6C4qn7OZe2ZV2bQuIdgi5txwe9sPjW
oEvbG0EvIh6+v3Npm9G1KSpeOejStlv/wP6f+D6tvzu/YuK73PhQaXPfjc9c
XDzygMD4SdImxwC3Xgnxmq5DpU0f1zZEfE7Qpc2B4PU/iD9xHSJtYv7qrvc9
n+uQkuINXJsfxa3rUGmzOHh9KfFjus0/8PhWe1Hdthl8OHwl/Cz8X3iygdpL
6jZt4GPgG+CX4V/gaQZpL6/bdoRPhG+D34JHGKw9s25bBd4DPh0eCv8LHnWI
9py6TW14X/g8+EH4U3isodoL6LYN4YPgS+An4K/gCYdpL6bbtICPgK+Gn4N/
gCcfrr2UbtsW/jt8I/wq/Cs83QjtFXSbzvBJXi8/eHbKRN93eN1lyOjt0UqL
3/a6YMkyN4ZJm29HuteHMuJZXN+WNtVch5YV7+l6bjnxma5tefE9us1D+Pej
tOfWbevA+8Pnww/Dn8Hj/Ka9oG7TGD4Yvgx+Ev4Gnmi09hK6bUv4KPga+AX4
R3jKMdpL6zY/w8fBN8Ovwb8Zqz29blMR3gU+Bb4Tfhf+3e/as+m21eG94bPg
++CP4NHHac+j29SDD4AvhB+Bv4DH/UN7Yd22CXwofDn8NPwtPMl47SG6TWv4
b/B18IvwT/BUE7SX1W3bw8fDt8BvwMNN1J5Rt60E7wafCt8FvwePPEl7dt2m
JvwX+Bz4fvgTeIzJ2vPptvXhFr4Ifgz+Eh5/ivYiuk0z+DD4SvgZ+L/wpFO1
l9Rtf4KPga+HX4Z/hqeZpr2cbtMRPgG+DX4THmG69ky6TRV4d/h0+G74X/Ao
M7Tn1G1rwfvC58IPwv+Gx5qpPb9u0xA+EL4Efhz+Cp5glvZium1z+Aj4Kvg5
+Ht48tnaf9Rt2sLHwjfCr8C/wtPO0V5Bt+0EnwTfDr8Njzg3rGOeLZs9awXx
LF63bJUm021pW9XrLe+/pJn4P/GeXkcdfTV5uYriM7xunGJzok/SZo/X69f/
EXdtJfEHXkcs0yFGy8ri388L63pXykVJWEU8l9cr26eNeFza1Jnn7q+qeD+v
vT8vj5I2872WPy/7fsiNn+v7Mzd+ue+x5wfGb/K94PzA+FDfG80PjD/q+2A3
/oLvS934276fdOOf+P7ajX/re6IFgfGmmnhx3aYlfKTXn/LnHzzR9zVe5x82
dFX26uLnve504fylw9Lmo9dL06YN16KGeIqFYX23W7esn6VNaa+T7Ntbe0pN
8XZe14wde2CuWuLjvB7brNmKY9J2k9eH1q690Kq2+LWF7v7qiJtFgf31kDbp
F7n9+/6/RYHxTeuKd3HjL0jbyW58hXriO934UGl7x43PV1/8u8Xu/KRt1sWB
8SkbiFdf7M5f2vZy46M0FJ/lxltpu9eNf+v7Ize+XSPxaEvc+UqbPEsC42s1
Fq+7xD0/pM0ANz6kifgCN36TtDnixmduKv7cjZ8rbeIuDYyP10y80FL3/JY2
TZa6x7+5+BCvt3S4trmDtFnudcewvOb7Ka/Tlh+ftnwL8bdeXw/jzdI28bKw
Hu8NaCke4rU3fLy0bbXMrddK/Ldlbj1pu3aZW8/3i8vceq3F/1vm1pM2qZa7
9X4SL7PcrSdt2i9367UR/2O5Ow9ps2W5e/74ft2ND2krHm6Fe35I2wwr3OPZ
TrzSCnf+0rarG//E96lufK2fxf9040OlzT03PnN78Ugr3fNN2mRf6e6/g3gN
3eYX+Gz4fvhjeIxV2vPqNvXhv8IXwY/CX8LjrdZeRLdtCh8GXwE/A38HT7pG
+w+6zU/w0fD18Evwz/DUa7WX0207wCfAt8JvwsOv055Jt60M7w6fBt8Nvw+P
sl57Dt2mFrwPfC78APxveMwN2vPrtg3gA+GLXcf0/bjrlL7/4zqn7wk2uu93
34u6rup7c9dNfR/uurPvq1xb38/qNu/hyTZp/1G3bQMfC98AvwL/Ak+7WXt5
3aYTfCJ8O/wWPOIW7Zl1m6rwHvAZ8FD4A3jUrdpz6ba14f3g8+CH4E/hsbdp
L6DbNIIPgi+Fn4C/hifcrr24btsCPhK+Gn4e/gGeYof2UrpNO/jv8E3wq3Cz
U3s63eZ/8M7wyfAd8Dvwb//UnlW3rQbvBZ8J3wt/CI+2S3tu3aYuvD98Afww
/Dk8zm7thXTbxvAh8GXwU/A38MSh2kvoNq3go+Br4Rfg/8FT7tFeRrf9Gf4H
fDP8Ovybvdoz6LYV4V3hU+B/wu/CI+3Tnk23qQHvDZ8N3wd/DI++X3te3bYe
/Ff4QvhR+At4vAPaC+s2TeFD4Svgp+Hv4EkOav9Bt20NHw1fB78E/wRPfUh7
Wd2mA3w8fCv8Bjz8Ye0ZdZvK8G7wafBd8PvwyEe059Bta8L7wOfAD8CfwGMe
1Z5Pt2kAt/DF8GPwf+Dxj2kvqts2gw+Hr4Sfhf8LT3Zce0ndpg18DHwD/DL8
CzzNCe3ldduO8Ilex9ubM9uAjuLbvL59Z0XGY53Eb3m9/JsMaRN2EY9wMqx7
pJqfolVX8cxeh/yQLMn6buJVvI7SbGr8r93Fe3h9wcaJXbGn+HSv584dG21a
L/FQr9uFRo78oLf4X17nuz0kQp4+4lFPufvtK57TdcJ+4rVdr5W2fV2X6y8+
z/VtaXvQde8B4k9dx/xVPNbpQC+VNgVch1jxhq4vS5tBrjsPFF/iOtIg8ROu
50rbV64LDhZPeCbQp6VtMddthoi3cG2Gio9wHSJtVru2vp9zHer7h+D1w8ST
n3XXS5tSrq3vbV2H+v67azNcfGPwemlzNXi9719dz/U93Tk3n+8VXN/2vbNr
M0J8ktfdz5RO0Eja7PD68fzfsm/3/bbXjbwBI8W/PR/WZ8OGd5e2WbwuE5Zn
fK/m9fZHYROMEu/pdXbvf5A2M71eEDb9I9/3eO1dXvo38Ydej5YLxL+/4O53
tHjuC+5+pW2dC+5+fe9/wd3vGPH5F9z9SpvDF9z9+v7sgrvfseJxLrr7lbYF
L7r79b3xRXe/v4sPvujuV9osu+jud5z4Sdeh0uaNa/uHeKJL7nzHi5dwbSaI
t3QdKm1GubYTxdcEr58kfiF4/WTxj8HrpU3Ky+76KeKlXYdMFf/ZtZkmPs5r
+Tw/abPZa/n8Kd+veS2fF+X7N1fyBT7fzvf0V9x6vle8Ephvmu9drgTm2+D7
lCuB+Y77vtPN98D3u24+M138u6v5An+fJ22yeS1/P+h79atu/Azx3sHx0nZW
cLzv+4LjZ4o/ch0ibaJfc/vxPY/rUN/ruTazxAe4DpE2C4PX+34keL3vL4LX
zxaPe121KazbNoEPhS+Hn4a/hSe5oT1Et2kN/w2+Dn4R/gme6qb2srpte/h4
+Bb4DXi4W9oz6raV4N3gU+G74PfgkW9rz67b1IT/Ap8D3w9/Ao9xR3s+3bY+
3MIXwY/BX8Lj39VeRLdpBh8GXwk/A/8XnvSe9pK67U/wMfD18Mvwz/A097WX
0206wifAt8FvwiP8pT2TblMF3h0+Hb4b/hc8ygPtOXXbWvC+8Lnwg/C/4bEe
as+v2zSED4QvgR+Hv4IneKS9mG7bHD4Cvgp+Dv4envyx9h91m7bwsfCN8Cvw
r/C0T7RX0G07wSfBt8NvwyP+rT2LblsV3hM+A74H/gD+/VPtuXSbOvB+8Pnw
Q/Bn8NjPtBfUbRvBB8OXwk/CX8MTPddeXLdpCR8JXwM/D/8IT/FCe2ndth18
HHwT/BrcvNSeXrf9H7wLfDJ8J/wO/Lt/tGfVbarDe8FnwffCH8GjvdKeR7et
Cx8AXwA/An8Oj/taeyHdpgl8CHw5/BT8LTzxG+0hum0r+G/wtfCL8P/gqd5q
L6PbtIf/Ad8Cvw4P9057Bq9bxGmc5LTvlbz+NLTWk0VzxLt6Pfl9xW1954pP
9Trnz6VGVJsn/qfXR28UqZNhvvg9r1tWzZP+s7SN9G9Yf9mb+e3ZBeLZvZ6a
L/X+pQvFa3ide2miCQMWif/i9fHEsZrXXCw+2+vWYyLlyrxEfP+/7v6Xij/W
bWK8155Xt6kP/xW+CH4U/hIe74P2IrptU/gw+Ar4Gfg7eNKP2n/QbX6Cj4av
h1+Cf4an/k97Od22A3wCfCv8Jjz8J+2ZdNvK8O7wafDd8PvwKJ+159BtasH7
wOfCD8D/hsf8oj2/btsAPhC+GH4c/g88wVftRXWb5vDh8FXws/D38GQmv/If
dds28LHwDfAr8C9eNy1bfneNZeJpv3G+Qry865zSppPrpr5PdD3O9+2uQ32/
5fql7xHDBTrlSvHMrqtKm6qure89dJsZ8FD4A3jU8Npz6ba14f3g8+CH4E/h
sSNoL6DbNIIPgi+Fn4C/hieMqL24btsCPhK+Gn4e/gGe4lvtpXSbdvDf4Zvg
V+HmO+3pdJv/wTvDJ8N3wO/Av42kPatuWw3eCz4Tvhf+EB4tsvbcuk1deH/4
Avhh+HN4nCjaC+m2jeFD4Mvgp+Bv4Imjai+h27SCj4KvhV+A/wdP+b32Mrrt
z/A/4Jvh1+HfRNOeQbetCO8KnwL/E34XHim69my6TQ14b/hs+D74Y3j0GNrz
6rb14L/CF8KPwl/A48XUXli3aQofCl8BPw1/B08SS/sPum1r+Gj4Ovgl+Cd4
6tjay+o2HeDj4VvhN+Dh42jPqNtUhneDT4Pvgt+HR46rPYduWxPeBz4HfgD+
BB4znvZ8uk0DuIUvhh+D/wOPH197Ud22GXw4fCX8LPxfeLIE2kvqNm3gY+Ab
4JfhX+BpEmovr9t2hE+Eb4PfgkdIpD2zblsF3gM+HR4K/wseNbH2nLpNbXhf
+Dz4QfhTeKwk2gvotg3hg+BL4Cfgr+AJk2ovptu0gI+Ar4afg3+AJ0+mvZRu
2xb+O3wj/Cr8Kzxdcu0VdJvO8EnwHfDb8G9TaM+i21SD94TPhO+BP4R/n1J7
bt22jtflB+54UXCVeH+v55xNPvGDtJ3v9bs0gwpuXy1+2OuKPf663meN+DOv
FxwsN7DIWvE4qcL6Q4KV6T5J24JeV20b4+jOdeKNvV68vWvH/uvFB3v9KerF
2MU3iC/zukajQlu+SNuTXi9fPbPB7o3ib1K5+98knih1/sC/RyVtSngt//6U
7y29ln9vyvdRXsvPz31fkzow31zfL7j5Fvv+0c230veUaQLzbfC9dJrAfNt8
/zlNYL5Q38elCcx30PfNaQLzHff9mpvvnO/fpA3Md8X39GkD8932vWLawHwP
fO+SNjDfU9+npA3M99r3nW6+D77fdfOZzeLfpQuMjyNtsqULzJ/e9+rpAtcX
8r13usB6FX2flS4wX1Pf97n5uvn+yM03zPfo6d3j73ue9O7x9b1eevf4+T4g
vXt8fF+Y3u3f9yNuvg++v3Dzfb9FPG6GwHwppU3hDIH58vjeJENgvjK+D80Q
mK+e78szBOZr7/tpN5/1/a3X8v6rreJJMuYP/H7ENvGQjIHxIdvFW2cMjM+8
Q/w3Nz7eTvF1brz5U/yiG/9E2nxy4y/sEk+VyT1eu8XLZgqMXx4q3j5TYPyk
PeLj3Xi7V3yLG99un/gNN77WfvFwmd39HxDPmNnd/0HxSpnd/R8S7+bGm8Pi
U934J9Jmlxt/4Yj4PTc+9Kh45Czu/o+JZ8/i7v+4eM0s7v5PiP/ixrc7KT7H
ja91Sny/Gx9yWvyJG5/5jHiMrO7+z4rny+ru/5x4fddW2tignxdfFHRpcyzo
F8RfBl3axM/m/KJ4EddW2jQL+iXxYUGXNiuDfln8TNClzb9BvyKeNLtzaVPS
tbkq/lPQpc2YoF8TXx90aXM56NfFPwdd2qTJ4fyGeDnXVtp0DPpN8Qlee+9/
zC9ttnkt75/0/abX3tsfF/oeIWf+wPspfc/ktff+yNi3xKt4Le+vlLbdc7r1
fZ+eM7DeZt935wys98z3v3IG1kt7WzxKrsB6DaRNzlyB9cb7XitXYL0jvvfN
5fZ3R3yubnMQ/jc8Vm7t+XWbhvCB8CXw4/BX8AR5tBfTbZvDR8BXwc/B38OT
59X+o27TFj4WvhF+Bf4Vnjaf9gq6bSf4JPh2+G14xPzas+i2VeE94TPge+AP
4N8X0J5Lt6kD7wefDz8EfwaPXVB7Qd22EXwwfCn8JPw1PFEh7cV1m5bwkfA1
8PPwj/AUhbWX1m3b/f/+P+zfa28=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
1qF0cKuS1Fky2w4P9hbUi+nrza2GUvPHH+uwL+mp1+dWx3rq66cu+3PqQwdt
B7ey62Xrenywl+ulrx9u1a6XPv/67CHUD+7bDm61ipoux+4N2E9Rv6eDW72j
Hk4fx2zInqW33q8ne9Xeer/cVsfeer+N2Cf01vvltqJ66/02Zr/YW++X2/rc
W++3CXuuPnq/3JZbH71fL/ZuffR+ua2pffR+m7Jv66P3y21d66P324z9Vx+9
X26rQF+93+bs9fua5zN7r756v9wqvK/eb0v23X31frnV3b56v97sqp/eL7cq
2k/vtxV7k356v9xqQD+939bsC/rp/XKrQ/30ftuwP+qn98ut0vTX+23LXqq/
3i+38u6v99uOfVh/vd/27Mv66/1yW8f76/36sL/sr/fLbWUM1vv1Za8QrPfL
bbUP1vvtwD4mWO+X21odrPfrx34mWO+X23ofrPfbkT3bAL1fbqvaAL1ff/ZO
A/R+ua2JA/R+O7FvHGBeL9gvyVZfwXMPlO4u2woEnw4eDX4D/Dd4wUHSG8hW
fcBng+8FvweefLD0YrJVU/CB4BHgh8GfgKcdIr2MbKsV+Ajw5eCx4K/AMw2V
XlG28gUfC74W/Cx4IrjjMOk1ZFsB4JPBN4FfBv8Gnne4dA/Zqgd4GPgO8Jvg
f8ALjZDuKdvqCz4XfB/4A/AUI6WXkG01Ax8Mvgj8KPhT8PSjpJeVrdqAjwSP
BD8J/gbcIUR6ZdlWB/Bx4OvAz4N/BM8xWnpN2aoL+BTwLeBXwH+A5xsjva5s
Kwh8JvhO8Nvgf8ELj5XeSLbqDz4P/AD4Q/BUlnQX2aoF+BDwJeAx4M/BM4yT
Xk621RY8BHwl+Cnwt+BZxkuvIlt1BB8PHgV+AfwzeM4J0t1kW13Bp4JvBb8G
/hO8wETp9WSrXuCzwHeD3wFXk6QXka2agAeDLwA/CP4IPPVk6aVkWy3Bh4Ev
BT8O/gI84xTp5WWr9uCjwVeDnwZ/D541VHo12ZY/+ETwDeCXwL+A554qvbZs
FQg+DTwa/Dr4b3CnadIbyLZ6g88G3wN+DzzZdOnFZFte4APBF4IfBn8MnjZM
emnZqhX4cPDl4CfAX4Hbz5BeUbblAz4WfA34WfAP4I4zpVeXrQLAJ4FvAo8H
/waeZ5Z0D9lWd/Aw8O3UCV0W1V44iv0mtfeICZXXLWRPoo6d1bf07p3shcJt
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
yVbtwEPAV4GfAn8HniWZ9KqyrY7gE8CjwC+CfwbPlVy6m2zVDXwq+Dbwa+C/
wAukkF5fttULPBx8N/hdcJVSelHZVhPwAeALwA+BPwJPk0p6KdnKG3wYdaOo
qWddkgWTL6N+17DLz3FZqK3j1OEvqhe/7cz+krrilKztXCuxZ0xt61tF306a
0oC9AnVIXOyuB+3Y21M7dV/2pFJP9jHUJ1INzTJjJPtq6h5rm3k8nc5+hjpD
/WLBNZaxv6fe9vTf8jlb2bOlsbX3xFsXXh1lr0b9zXl7kvtl9k7Ui09MLRnx
mH0itVvXLr4fPrNvpH6cvMbUBqkGkF+inrQq675l2anVV+oSdd4+/1KMPXda
W194FOvoVY3dnXrAuGX1VjdmD6R2LDh00K8O7NOp98U0W9WyL3s0tV9AsctR
Y9hvpNWPfzj7b+rtWWtsz7qEvWA6W9Nvly62jr0BdTb6/dPb2ftQn2z2NrbZ
IfbZ1PzrqE+x76Wmmw+9wn6P+vbUZbem3mdPnt7W02y57CV7MWpe/jN7U2rb
6m9j/7IPpF5uG7+VbiB5BHVzGshGbR1Or/fjxP6EegftpyR72gx6P5XZy2TQ
+/Fgb0VNd9fMi31EBr2fduzLqf/7fdvssdR0OlP7sr/KoPcznD2Tna1r0n4m
sFe00/uZye5rp/eziH0sNd392zXsa+30fqLZz9rp/RxkT7TT+4ljd8yo93OZ
vUZGvZ977AEZ9X5esE/OqPfziX1TRr2fP+yXM+r9pB1E/i2j3k9WapXXXu8n
P7uHvd5PCfYe9no/FdnD7PV+3Nl3yLZugv8BL5RJuqdsqy/4XGr3ys5TDvix
76N2WjK7bsfJ7A/MfDR7CodC//t8xE72EtT8+Ym97M0c9PxB9sFm/gj7IjN/
nP2omY9jf2rmz7Cnz6znL7CXzaznL7O3yaznr7GPNPO32CPN/D32k2b+Ifsb
M/+E3SGLnn/BXjmLnn/N3iGLnn/PPs7Mf2JfZ+a/sp838z/ZP5r5P+w5sup5
NZi8ZlY9n5Jadcmq59OyTzHzGdi3mPlM7FfMfFb2H2Y+O3u+bHo+N3vdbHo+
P3tQNj1fkH2mmS/CvtPMl2C/beZLsf81867shR31fEX2Ro56vgp7f0c9X4N9
npmvzX7AzNdhf2jmG7Cnyq7nG7O7ZNfzTdlbZNfzLdmHmPk27EvMfHv2GDPv
x/7czAewZ8ghWpWTbbUFDwFfCX4K/C14lpzSq8hWHcHHg0eBXwD/DJ4zl3Q3
2VZX8KngW8Gvgf8EL5Bbej3Zqhf4LPDd4HfAVR7pRWSrJuDB4AvAD4I/Ak+d
V3op2VZL8GHgS8GPg78Az5hPennZqj34aPDV4KfB34NnzS+9mmzLH3wi+Abw
S+BfwHMXkF5btgoEnwYeDX4d/De4k5P0BrKt3uCzwfeA3wNPVlB6MdmWF/hA
8IXgh8Efg6ctJL20bNUKfDj4cvAT4K/A7Z2lV5Rt+YCPBV8Dfhb8A7hjYenV
ZasA8Engm8Djwb+B5yki3UO21R08DHw7+E3wJPBCRaU3lK36gs8B3wd+HzxF
MenFZatm4IPAF4EfAX8Knq649LKyrdbgI8FXgJ8Efw3uUEJ6JdmqA7gFvg78
HPhH8Owu0mvKtjqDTwHfDH4F/Dt4vpLS68hWQeAzwHeC3wL/C+5cSnoj2VY/
8Hng+8EfgqcsLd1FttUcfAj4YvAY8GfUE32c64SNZM9QxtbHN2cu2GA+u2sZ
PR/N3pb6v8+fs4+i5veLB9hXmvkY9jgzf5L9rZk/y565rJ6PZ69SVs9fZ/cr
q+fvsI838wns66krvp74cO5r9gvUsQWr5Kr7lf0TtbfPK+9P/9hzutr6cfiS
sJXph5DXog4+3TSuhSO16uqq13diD3XV91+UfaurPr/S7FfNfEX2n2a+Onv+
cnreg71eOT3vyd6znJ5vxj7LzLdh32Xm/djvmPku7P/MfE/2IuX1fDB7Y9PD
2YNNW+zzTYeyHzQdzp5gOoI9dQXdkewlTUextzQdzT7U9D72paZj2I+ZPs3+
wnQ8u11F3bfYy5tOYG9n+iX7aNOJ7KtM/2A/bVoNJX9nOi21ylpJtwN7VdM5
2f1NO7FPMF2cfYNpV/aLpquyfzHtzp6rsrke2GubbsHezXR79mmmA9i3mQ5i
v246mP2X6eHsTlXM15+9vulQ9t6mw9nDq+jrbQ77nir6epvPftfMR7Anq6rn
F7MXrarnl7F7VTXXD/sAM7+KfaGZX8t+yMxHsT828xvZ01TT81vYS1cz1x+7
dzU9v4N9uJnfzb7MzO9jP2HmD7C/NPOH2e2rm+uXvQJ1XJvLPX8dZ/eh7pXZ
433nK+xjqB0uRA8884h9DfWeUKfvrh/Zz1D71gsfFaGGkX8w6ztQW9lq2Drv
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
2elDyJdRn826835NR2p1gtq+StrcLwuwv6Ru4dux7VwXdvtJtp4zescct0rs
FahvRKa59Ko2uw91zli/DPMbs4+h9n2xvaF7G/Y11MvTp5n4phP7GeqE0n4x
C3qxf6Au3HJ7kscQ9myTbd19cOpq78ayV6eOWthhSMQ09k7Ubw9Eb687n30S
dZkHqd6/X8G+kTo4WQeXxRvZ46l3FY7uXn83+1fqbw1TrU48yp5niq2r9vZ9
uOQsuzt1yMxteRpeZ+9OfWR7yvafHrJPp05+3Wfestfs26nr/dga7/mV/Qb1
5DwpM375x55EfdbNp9GK9KPJC4ba2q7L1kmNHalVQ+pmk1Ic/1qAvQ/1nKj2
fyNd2OdQXzu3pbpXJfa91Dk/JB/2vTb7fWrfLO13rmrMnnyqrZdW2vKhaRv2
4tQJ7ZOX+tmJvSl1oZB2QWt6sQ+i7rZi85rmQ9gjqKOOJ3v0ayz7EerXz9rm
WzeN/Ql1qXSbfVrOZ083jR7vUskWJK1gL0O9o3nbK+s3srem/jZwk32r3ewj
qKsuUE3+HmVfQT1yf5spG86yx1IfubfxROvr7K+nmeufPdP0Qv/7fssT9krU
/P2Z5+y+1Pz9l1fsFjV/u+Yt+9rper1E9nNmvc/siWa9b+zZw/R6P9lrhOn1
ktg7h+n11BjyyWF6vRTUanOYXi81+2WzXjr272Y9O/a8M/R6Dux1qF9+7Fg1
ND97D+prY3akrFyafQb1kQxpLj+pwb6DemNEh2WzG7Pfop5XJLpnbR/2P9R0
83c92J1n2rpXbZ/kS4aye1K3Pr/louck9n7U7jb+Npd9LrXL87Y91qxi30+d
fdCmCt7b2R/M1Ocfw55yVqH/fT7lKnsJav48ygv25tT/fX+FfTA1f97Efiz5
Yur/Pn9DbR2l/u/zLezPqPnzLJ7s6cML/e/zK37sruH6fILZ28hWo8AjwePA
34Bnni29smzlBz4OfD34efBP4DnmSK8l2+oCHgq+Bfwq+A/w/HOl15WteoLP
BN8Ffhv8H3jhedIby7b6g88HPwCeAJ5qvvSS1PfSVu4aPoO9BXW/lEvKnd7K
PtTMx7Mvka2OgT8Ht1sgvZxs1Q48BHwV+Cnwd+BZFkqvKtvqCD4BPAr8Ivhn
8FwR0t1kq27gU8G3gV8D/wVeYJH0+rKtXuDh4LvB74KrxdKLyraagA8AXwB+
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
z8/E/o26wOPqj7dlZc+T2taOby8vOJuD3YM6/begJs/ysHdPra83J/Yw6knf
stxpUpx9O3W6d0V2LXRlv0n93+9jZU+iznqnSVBZD/ZCaWwdEe9fZ1Qj9obU
/H6tJXtf6pWHJ37L4ss+h7roroXx/l3Y91H/9/6Q/T51WbrBQPYUaW1N43VG
sRen5vd/E9ibUR+xLX9nOvsg6jqjbDuYx76Imt/fLWU/Qu0VZLuHNexPqS/b
Vk+3hT1dOmf99zH2stS0Xdspkbem7kR3cJJ9JDW/X7zIvoKap2+wn6SmhzP+
Aftr6v9+vojdIT09H2wPf9AH9krUdPq7vrN3SK+/XmoSuWU6LbVaZ9qB/Zzp
nOwfTTuxZ8+guzh7TdOu7J1lqyngm8GvgH8Hz2cnvY5sFQQ+A3wn+C3q/fmT
wqtVY/9L7b57W6Xc9dmdM9LXu0nXO79asDeibvY4+9i7fuz9qK8PP+t8KIh9
HnXHTGNOLx3Mvp/66dpyfUdb7A+pe9d8ltk/jD2lva0/XYnY4xbB7kI9oqdX
hwJr2Jvb6/ONZh9iehf7YtP72GNMH2J/ZjqGPUMm3bHsrqZPs7eVbY0CXwke
B/4WPLOD9CqyLT/w8eDrwS+AfwLPmVl6LdmqK3go+Fbwq+A/wfNnkV5PttUT
fBb4LvA74P/Ai2SV3li2CgafD34QPAE8dTbpJaknr6txq/8F9pbUe8pVvH/s
BvtQ6meHSj3OmsC+lJo/H/aK/Rh13av53u79xP6CeqB/9o/pktjtHG296pX9
tw6pJpOXp748OM3vLfbUVjtH8/rDPlq2tQr8NPg78KzZpVeVrfzBJ4BvAL8I
/gU8Vw7ptWVb3cCngW8Dvw7+C9wpp/T6slVv8HDwPeB3wZPlkl5UtvICHwC+
kNou9YRjAcXZDxl3Z39MzZ+nqcueJrfz/z6/04C9NDV/fqYRuzc1f17Hi314
br1eC/ZlufV6rdhPmPXasr806/mw2+fR6/mxV8ij1wtg98mj1+vKPiaPXq87
+5o8er2e7GfMen3YP5j1gtmz5RWtqsu2OoFPAt8IHg/+FTxPPunuslV38Ong
28FvgCeBF8wvvaFsqw/4HPC94PfBkxeQXly21RR8EHgE+BHwJ+DpnKSXka1a
g48AXwEeC/4aPFNB6ZVkW77gFvha8HPgieDZC0mvIVt1Bp8Mvhn8Mvh38LzO
0uvItnqAzwDfAX4L/A+4c2HpnrJVP/C54PvBH4CnLCK9hGzVHHww+GLwo+DP
wNMXle4q22oDPgo8EjwO/A145mLSK8tWfuDjwNeDnwf/BJ6juPRasq0u4KHg
W8Cvgv8Az19Cel3Zqif4TPBd4LfB/4EXdpHeWLbVH3w++AHwBPBUJaWXlG21
AB8KvgT8GPhzcLtS0svJVu3AQ8BXgZ+i/nivSe9WS9nfUQ9/v3Z3iSvsWUrr
+bRTyKuatqO2Opp2YJ9gOht7lOmc7BdN52X/bNqJPVcZ5//9/b8Uuxv1f9/P
YO9GzX/fr88+lfq/71+wb6Pmv9/7s1+j/u/7Fey/qP/79yb2AmWd9fcn2OuX
1ecTzt6LevSNjOtOL2QPp/65OY/X7BXsu6mHTijxyWc9+13qTz5VIgptY1eu
tu7vWt/tzR72otRvUrd6uvMIexPqoPsB00Li2AdQP93Zz7X+RfYF1J2nhdzI
eIP9EDWN37jP/oja13Z3K56xpylnazrdHu/YS1G3ogW/sntTxx84lu1nEvsw
aq/Zlw4cSxlKvoz6TA/bPdhRW8epbWefulU29pfUx7PZHoG87BnL25r4qTN7
BeqDtuU3l2RvT02nN6QC+xjqXbbtudVgX01ND0/quuxnqLfYHt5LjdnfU7vQ
A+rNnq2CrW27ux/gy16N2nnFkAklurB3oqb81JN9InVe2uAA9o3UdDoTRrBf
onakL+g49q/U9HBkm8qeu6Kt7ekOw9ndqenLsS6CPZA6DT3AkezTqelyqBLF
Hl1RX0/R7DdkW7/BC1aS3kC26gM+G3wv+D3qkNyd96/fzp68sq0PuRc9mSGW
vRj1n+5v4vvfYG9K7TYj+t7Vl+wDqcfuHPKyym/2COqjt6t/WZJxKvnhyub5
S62emC7OnraKblf2Mqarsrcy7c4+wrQn+3LTLdhjqf/77/uxv6L+7/dHs2eq
qucD2CvKVr7gY8HXgp8FTwR3rCa9hmwrAHwy+Cbwy+DfwPNWl+4hW/UADwPf
AX4T/A94oRrSPWVbfcHngu8Df0A9cWb6kAGB7Clqah/OXsJ0CHsz0xb7YNMT
2ReZDmU/ajqM/anpcPb0tXTPYy9rOoK9jeml7CNNR7JHml7DftJ0FPsb05vZ
HdzM85G9suld7B1M72MfZ/oQ+zrTMeznZVsfwXPUll6TuujVVNfan2HvQn08
56T9pa+zT6H280+5Ivkj9i3UP1ZPmHjzLfsV6nmvkvfa/IP9B3WZsuObj0s5
jTyfu63PDk5Wqa0DtapL3e2AlbtkXvYgd/N6wD7TtCv7TtNV2W+bdmf/667/
PG/AXtjD+X+/j8uLvZGHfv57s/en5vcL7dnneeg/7zuxH/DQrx+B7A+p+feJ
9WZPVcdZf36F3aWOuT7ZW9TR9zeGfUgdvd4k9iVmPow9xszPYX9u5hexZ6hr
ri/2cnX1/Dr2tnX1/Bb2EDO/i32lmT/AfsrMH2N/a+ZPs2epp/06e5V6+vaP
2TvW0/OJ7OOp+ee9vrBHUdOPd4X+YL9A/d/vr2P/TJ2Ffn4r2XTynPX1/aWi
Vm7U//2+Ovau1PzzWBnZp1Lzz5tlYd9Kzd/+yc5+rb4+39zsP6npx8fe52cv
0MD5f78vz5m9HvVw+vmwYuy9qPnnwUqyz2pgrkf23bKtO+CqofQislUT8GDw
BeAHwR+Bp/aUXkq21RJ8GPhS8OPgL8AzNpJeXrZqDz4afDX4afD34FkbS68m
2/IHnwi+AfwS+Bfw3E2k15atAsGngUeDXwf/De7kJb2BbKs3+GzwPeD3wJM1
lV5MtuUFPhB8Ifhh8MfgaZtJLy1btQIfDr4c/AT4K3D75tIryrZ8wMeCrwE/
C/4B3LGF9OqyVQD4JPBN4PHg38DztJTuIdvqDh4Gvh38JngSeCFv6Q1lq77g
c8D3gd8HT9FKenHZqhn4IPBF4EfAn4Knay29rGyrNfhI8BXgJ8Ffgzu0kV6J
+trNy4O+V2DvQL1x8+ASP6uwW9RjxuV4+KsG+zrq1m0PzEuqzX6O2qVkx8Z/
67J/NOt7smdvq/+8a8xes63+87Qpe+e2er4F+xQz782+2cy3Yb9i5tuzfzfz
vuz52un5jux12un5APYg453ZZ7TTt+/CvtPMd2O/ZeYD2f+a+e7szu31fBB7
I9N92PuZDmafZ3ow+37Tw9kfmg5hT+mj22J3kW01Bx8Cvpia3x9OYI+h5veT
U9if+ej9TGPP4Ov8v/erM9ldqfn95Gz2tr768ZjPPoqa369GsK+k5ve3S9nj
fPX5RLK/Nbdfz565g77/rexVOuj5Pex+HfT8YfbxZj6Wfb2ZP89+wcxfZf9k
5u+w5/TT84/Za/np+VfsXf30fCJ7qJn/wb7VzCcLI79q5tNTq59mPht7/o56
Ph97vY56vih7z47m+cg+y3h19l3m9vXZ75j5Fuz/zLwvexF/c72yN/Y31x97
sL+eH8g+38wPYT9o5oezJ1Dz+9eR7Kk7Of/v/XIIe0lqfr86lr0lNb8/Hsc+
tJNebyL70k56vcnsx8x6oewvzHrT2e0C9Hoz2MsH6PXC2dtR53cdFfN2Efto
6pizSS6fV7Ovog4IHDP/5xb20+b2+9jfBejH4zh71s768bjAXrWznr/F7t9Z
zz9mn2Dm37FvMPM/2C9S5+w4+HL9f+xfqMsceLlqeuoZ5Lm66OdnBmpVu4u+
vQN7N+oxo22HI/s06l905GbfRj2cDif269TfvtqOIuy/qAcPsh0l2Z262jqR
Dlf2+tT96KjM3pv67RvbUYM9nLpXT9vhwb6H+jkdDdjvdjWv9+zJuom2ispW
XuADwBeCHwJ/DJ4mUHpp2ZY3+HDwZeAnwF+C23eXXkG28qFOHzLg64Rm7GOo
d9Wc6nWiLfsaar8/kauTd2I/Q536yL5fHj3YP1BvHRPfclx/9mw9bN2+9suo
mGHs1XuY13f2Tj3+d/1d51aTeujrcxz7Rj1vjWeP1/NtJrB/1fMuE9nzBOn1
J7G7B+n1uVX3IL3+ZPbpet6awr5dz7cJZb+h512msieZ9aexF+yp1+dWDXvq
9aez9+mp1w9jn6Pn28xg36vnXWay39fzahZ78l56fW5VvJdeP5y9aS+9/mz2
QXq+zRz2CD3vMpf9iJ5X89ifmPW5Vbreev357GV66/UXsLfurddfyD5Cz7tE
sK/Q82oRe6yev86tXpv1F7Nn6qPXX8JeqY9efym7bx+9/jJ2S8+r5exr9fx1
bnVOz29cwZ5o1o9kz95Xr7+SvUZfvf4q9s599fqr2Sfr+evcarOe37iG/bKe
t9ayfzfrr2PP20+vv569Tj+9fhR7D9lqBvgO8Fvgf8Cd+0v3lK36gc8F3w/+
ADxlsPQSslVz8MHgi8GPgj8DTz9Auqtsqw34KPBI8DjwN+CZB0qvLFv5gY8D
Xw9+HvwTeI5B0mvJtrqAh4JvAb8K/gM8/2DpdWWrnuAzwXeB3wb/B154iPTG
sq3+4PPBD4AngKcaKr2kbKsF+FDwJeDHwJ+D2w2TXk62agceAr4K/BT4O/As
w6VXlW11BJ8AHgV+EfwzeK4R0t1kq27gU8G3gV8D/wVeYKT0+rKtXuDh4LvB
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
geSLyY+bHvrmxJA39+FvrL+Cx96V/t+fN30NL2ga34/3Bt5ol/z7+Q7umsb3
872HrzSN7/f7CD+3S/79/gT/ZBrfL/gFnmh3+n9/3vQrvPhuuZ7v8Ja75Xp+
wEfvluv5Cd+wW67nF/zKbrme3/Cfu+V6/sBT7JHrCYZ775Hr+Qtvv0eux5lq
fNIeuZ7wpt1te+R6IsBv75HriQgP3iPX4wFPv1euJzK84l65nqjwbnvleqLB
p++V64kB37NXricm/MFeuZ7Y8Ij75HriwLPuk+uJC6+xT64nPrzPPrmeBPB5
++R6EsEP7ZPrSQx/vk+uJyk82n65nmTwPPvlelLA6+p2BpMvIT9J/pY87gHt
hXQ7TchHkK8mP0/+hTzxQe0ldLutyMeSbyS/Rh5InuqQ9jK6nY7kk8n9ye+Q
/yXPcFh7Zd1ud/KZ5HvJH5FHOqI9u263Jnk/8vnkR8hfkMc4qj2vbqc++RDy
ZeSnyN+TxzumvYhutyn5KPI15BfJv5InPa69pG6nDfk48s3k18l/k6c+ob2c
brcTuR/5DvK75M5J7Zl0u1XIe5LPIt9P/pg88intOXQ7/5H3J19IfpT8FXnM
09rz63YbkA8jX05+hvwDeYIz2ovqdpqT+5CvI79E/p082VntXrrdtuQTyLeQ
3yQPIk97Tnt53U4X8qnku8jvkYc/rz2zbqcaeS/yOeQHyJ+SR7mgPZdutzb5
QPJF5MfJX5PHvqi9gG6nEflw8pXkZ8k/kSe8pL24brcF+Wjy9eRXyH+Qp7is
vbRupz35RPJt5LfIg8nTXdFeUbfblXw6+W7yB+QRrmrPqtutTt6HfC75IfJn
5NGuac+t26lLPoh8CfkJ8rfkca5rL6TbbUw+gnwV+Xnyz+SJb2j31O20Ih9D
vpH8Knkgecqb2svodjuQTybfTn6HPIQ8wy3tlXQ73clnkO8lf0ge6bb2bLqd
muR9yeeTHyZ/QR79jva8ut165EPIl5KfIn9HHi9Ae2HdTlPykeRryC+QfyVP
cld7Sd1ua/Jx5JvIr5P/Ik99T3tZ3U4n8inkO8gDyJ372jPqdqqQ9yCfRb6P
/DG5xwPtOXS7tUwPz/Rn7qf08P6m/3YL3vc9O3yBaXdXyP3f+eFH7fM94S9t
e8FjPpQuC89nOuzvi4c3MI3315XgQ+36qvDldn11+Gm7vhb8g11fBx7/kWqn
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
O1p3ZhqfYj2CadffeiR4gPUo8L/Wo8EzjhePCa8s7caG97AeDz7TegL4PuuJ
4Y+sJ4V7TBBPAc+u26lF3o98AfkR8pfkMSZqz6fbrU8+lHwZ+Wny9+TxJ2kv
ottpRj6KfC35RfJv5Eknay+l221DPp58M/kN8t/kaaZoL6fb6UzuR76T/C55
OD/tmXQ7Vcl7ks8m30/+hDzyVO05dbv/kQ8gX0h+jPwVeaxp2vPrdhqSDyNf
QX6G/CN5gunai+l2m5P7kq8jv0z+nTz5DO1eup125BPIt5LfJP9Dnnam9gq6
3S7k08h3kd8nDz9LexbdbjXy3uRzyA+SPyWPOlt7Lt1OHfKB5IvJj5O/IY89
R3tB3W4jcpd8Jfk58k/kieZqL67baUk+mnwD+RXyn+Qp5mn31u22J59Evo38
Nnkwefr52ivqdrqRTyffQ/6APOIC7Vl1OzXI+5DPIz9E/pw82kLteXS7dckH
ky8hP0n+ljzuIu2FdDtNyEeQryY/T/6FPPFi7SV0u63Ix5JvJL9GHkieaon2
MrqdjuSTyf3J75D/Jc+wVHtl3W538pnke8kfkUdapj27brcmeT/y+eRHyF+Q
x1iuPa9upz75EPJl5KfI35PHW6G9iG63Kfko8jXkF8m/kiddqb2kbqcN+Tjy
zeTXyX+Tp16lvZxutxO5H/kO8rvkzmrtmXS7Vch7ks8i30/+mDzyGu05dDv/
kfc3vbBytIqBaeELrWeBH7WdDf7Kdg54zLXSeeH5bReCN7BdHD7Mthd8ue1y
8DO2K8M/2K4BT7BOug68qLSLdppbrwv3sY521lmvB79kHe18t14fnmy9ONrx
knYawNtaRzsTrDeEb7GOdm5abwQPso520m4QbwwvL+2inS7Wm8CnmsbXj5rB
d5nG9wu1hN+z69vAw2+U9e3gmTfK+o7wahtlfRd4L9OpzKMrfI5pT/PoBj9g
upF5dIc/NT3APHrAo2wK7dmzQh894blM7/APffSC1zZ97Wroozd8oOnPn0If
feCLTMc2j37w46Zzmkd/+GvTVcxjADz25tDuaB4D4QVMjx0T+hgEb2R61crQ
x2D4cNPHj4U+hsBXmn7yOPQxFH52s8xjOPzTZpmHC0+4ReYxAl58i8xjJLzF
FpnHKPjoLTIPH/j6LTIPX/iVLTKP0fAfW2QeY+Aptso8xsFLb5V5jIe33yrz
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
vj2pnFcdfjupnFcDHpJUzqsJT59MzqsFr5RMzvsP3i2Z/f0VPiOZnFcXvieZ
nFcP/jCZnFcfHjG5nNcAni25nNcQXiO5nNcI3je5/f0aPk+3c5j8OXn0FNrz
6HbqkQ8mX0p+kvwdedyU2gvrdpuQjyRfTX6B/At5klTaS+h2WpOPJd9Efo38
F3mq1NrL6nY7kk8h9ycPIP9LnjGN9sq6nR7kM8n3kT8i90irPbtupxZ5P/IF
5EfIX5LHSKc9n263PvlQ8mXkp8nfk8dPr72IbqcZ+SjyteQXyb+RJ82gvZRu
tw35ePLN5DfIf5Onyai9nG6nM7kf+U7yu+ThMmnPpNupSt6TfDb5fvIn5JEz
a8+p2/2PfAD5QvJj5K/IY2XRnl+305B8GPkK8jPkH8kTZNVeTLfbnNyXfB35
ZfLv5MmzaffS7bQjn0C+lfwm+R/ytNm1V9DtdiGfRr6L/D55+Bzas+h2q5H3
Jp9DfpD8KXnUnNpz6XbqkA8kX0x+nPwNeexc2gvqdhuRu+Qryc+RfyJPlFt7
cd1OS/LR5BvIr5h+97VaQNqm8J+m20xLs6x8M3iKPKF9L8/Xjp2bw71N1750
Iq9fC3h70+e6zvnl3xI+yXSZGJ2P3GkF32Z677oS40Jaw2+bzlcpTq30beHB
pte9fJKkYjt4+ryhnXb0jkdd2sMrmp6bYeyaqR3g3UzHPdaox86O8Ommx7bM
WeRuJ/ievPL6usAf6HYi5tOeVbdTg7wP+TzyQ+TPyaPl155Ht1uXfDD5EvKT
5G/J4xbQXki304R8BPlq8vPkX8gTF9ReQrfbinws+Ubya+SB5KkKaS+j2+lI
Ppncn/yOaf+yMQae7wb/a9qze5HpG3rCMxQO7WNz22yc2Ade2XSV436nuvSH
dzddI32OnwUGwWea7m3+wRD4XtOzBidruWc4/JHpPavjzho8Eh6pSGjfvxbl
XAlfePYicn1j4TVtj4f3sz0RPt/2FPgR29PgL2zPhMcoKj0Hntc03o+jnfqm
8X58LnyIXT8PvsyuR7un7Pr58Pd2/QJ4vGKqnSK63abko8jXkF8k/0qetLj2
krqdNuTjyDeTXyf/TZ7aU3s53W4ncj/yHeR3yZ0S2jPpdquQ9ySfRb6f/DF5
5JLac+h2/iPvT76Q/Cj5K/KYpbTn1+02IB9Gvpz8DPkH8gRe2ovqdpqT+5Cv
I79E/p08WWntXrrdtuQTyLeQ3yQPIk/rrb28bqcL+VTyXeT3yMOX0Z5Zt1ON
vBf5HPID5E/Jo5TVnku3W5t8IPki8uPkr8ljl9NeQLfTiHw4+Urys+SfyBOW
115ct9uCfDT5evIr5D/IU1TQXlq30558Ivk28lvkweTpKmqvqNvtSj6dfDf5
A/IIlbRn1e1WJ+9DPpf8EPkz8miVtefW7dQlH0S+hPwE+VvyOFW0F9LtNiYf
Qb6K/Dz5Z/LEVbV76nZakY8h30h+lTyQPGU17WV0ux3IJ5NvJ79DHkKeobr2
Srqd7uQzyPeSPySPVEN7Nt1OTfK+5PPJD5O/II9eU3te3W498iHkS8lPkb8j
j1dLe2HTO/K0G5NqEbyp6e6fK96stgQ+0nS2bdkzDl0GX2P6Wa9YfTasgF8w
vTj/56N3V8G/mm747Vrc6GvhSf7LaP78184WxdbDS5q+2Hfu5o4b4a1Njy00
JGTOZvg402V+Nqt2eit8k+ngXaUX/NwOv25694AMbzPthP8y3ato5GL1dsNT
1w7tnL9fj/XdCy9r+uXe87f898M7mV46eHOmZwfhU0w38ZzWN/4R+A7TiYL7
HPc+Bg8wfeVA/fi9TsCdOqE9YVixVktPwTOaLl8q5dbLZ+BV6sh8z8N72L4I
n2X7Mnyf7avwx7avwz3qhnbuva+WTUA7OUw37XOlXOIb8FqmJ+YKXYB2+ps2
y3PdhC8w/To096Kdo6YTmw1uwV+aLm/+AdqJWS+0zfZNb8PzmV4e+vRXaKeB
acN97sCH1pPrDYAvryfXi3ZP15PrvQv/UE+uF+3Gry/Xew9etL5cL9ptVl+u
9z7cp75cL9pdW1+u9wH8Un25XrT7rb5c70N4sgZyvY/gpUzn8IzQ+MFTeFvT
KbOEn/b6JXy86dgJwp359ha+xT7/E/yG7S/wINvf4GkaSv+Al7cdCO9sOuzr
p/CppvH+LAS+064PP9f4Pbs+kmk3XCNZHwWeuZGsjwGvKp4tJrxXI3l+LPhs
We/Ghh+w+8WBP5H1N+LCozSW/ePDczaW/RPAazeW/RPCB8h6NxF8kaxflxh+
TNbfSAJ/bfdPBo/VRPZPDi/QRPZPAW/YRPZPCR8u69elgq+Q9TdSw8/Keict
/KPdPx08YVPZPz28WFPZPwO8RVPZPyPcV9bfyARfL+udLPDLsj5bVvgPu382
ePJmsn92eOlmsn8OeLtmsn9O+ERZ7+SGb5X12fLAb8n6unnhf+z++eDpmsv+
+eEVmsv+BeBdm8v+heDTZH22wvDdsr5uEfh9We8WhUdoIfsXg2dpIfsXh1dv
IfuXgPeW9dlKwufK+rql4AdlvesFf2b3Lw2P2lL294bnbin7l4XX0e0MIl9M
foL8DXmcVtoL6nYak7vkq8jPkX8mT9Rau6dutyX5GPIN5FfJf5KnbKPdW7fT
gXwS+Xby2+Qh5Onbaq+k2+1GPoN8D/lD8ojttGfT7dYg70s+j/ww+XPy6O21
59Ht1CMfTL6U/CT5O/K4HbQX1u02IR9Jvpr8AvkX8iQdtZfQ7bQmH0u+ifwa
+S/yVJ20l9XtdiSfQu5PHkD+lzxjZ+2VdTs9yGeS7yN/RO7RRXt23U4t8n7k
C8iPkL8kj9FVez7dbn3yoeTLyE+TvyeP3017Ed1OM/JR5GvJL5J/I0/aXXsp
3W4b8vHkm8lvkP8mT9NDezndTmdyP/Kd5HfJw/XUnkm3U5W8J/ls8v3kT8gj
99KeU7f7H/kA8oXkx8hfkcfqrT2/bqch+TDyFeRnyD+SJ+ijvZhutzm5L/k6
8svk38mT99XupdtpRz6BfCv5TfI/5Gn7aa+g2+1CPo18F/l98vD9tWfR7VYj
700+h/wg+VPyqAO059Lt1CEfSL6Y/Dj5G/LYA7UX1O02InfJV5KfI/9EnmiQ
9uK6nZbko8k3kF8h/0meYrB2b91ue/JJ5NvIb5MHk6cfEto9S0S7tTzMK5oO
+3kg8G6mf2RpMuVoJfh007tT+b6tVRW+x/TgBJsqPK4Of2DabNejFjziUDmv
DjyrtBfaqSHthnkf6cNhPs8+vy78kH0+2nlunx/m0YbJ88M8j7RTD15X2gvt
DJZ2w3yJfX6Yn7TPrw9/a5+PduIOl+eHeSHpw2HeRNppAB9h1zeCr7beFH7e
enP4F+ut4Ild8TbwEtJOe3gr6x3hY613gW+03Q1+zXYPeKDtXvBUI6T7wMvY
7gfvaHsAfLLtQXB/20Pgd2wPg/+17cIzjJQeCa9s2wfe3fZo+EzbY+F7TeP9
6AT4I9N4/zkZHmmUrJ8Gzz5K1s+E1xwl6+fA+9n1C+DzTeP7jxfBj5gO+/vU
4C9M4/uXV8Bj+GT89/3Nq+F5TeP7n9fB65sO+/vT4EN85Lwt8GU+ct42+Ckf
OW8H/L2PnLcbHs9XztsHL+Ir5x2EN/WV847AR/nKecfha3zlvJPwi75y3hn4
V1857zw86Wg57xK85Gg57yq8zWg57wZ83Gg57zZ882g5LwB+fbScdx/+e7Sc
9wieeoyc9xReboyc9wLeaYyc9xruN0bOewffMUZ+vdHO3THy6x3mzlhZ/x6e
aaysR7tVxsr6MO9p13+Az7Lr0c5+uz7MH9v1H+GRx8l6tJtjnKwP8//GyfpP
8P66nYXkR8lfkcccrz2/brcB+TDy5eRnyD+QJ5igvahupzm5D/k68kvk38mT
TdTupdttSz6BfAv5TfIg02WaB1e58QWedpK5/3yX9P70A17edJT1ZeZHD4J3
Mf328oujmf7Cp5q+8GPcm9IR5hnfZXpLipzxmkY27d4zPd37ctEB0eHhJ4d2
3w69W06PDc9susHkROM2xYdXM13cf8+WM4nhvUynDGhy+1ly+JzJcv1p4Ad0
O0/Jo0zRnku3W5t8IPki8uPkr8lj+2kvoNtpRD6cfCX5WfJP5Amnai+u221B
Ptr09CGDSvXMAl9vulLJA4uL5INfses94T9sl4anmCZdHl7adhV4e9s14RN1
O9vIb5EHk6ebrr2ibrcr+XTy3eQPyCPM0J5Vt1udvA/5XPJD5M/Io83Unlu3
U5d8EPkS8hPkb8njzNJeSLfbmHwE+Sry8+SfyRPP1u6p22lFPoZ8I/lV8kDy
lHO0l9HtdiCfTL6d/A55CHmGudor6Xa6k88g30v+kDzSPO3ZdIf+r/a+5PPJ
D5O/II8+X3te3W498iHkS8lPkb8jj7dAe2HdTlPykeRryC+QfyVPslB7Sd1u
a/Jx5JvIr5P/Ik+9SHtZ3U4n8inkO8gDyJ3F2jPqdqqQ9yCfRb6P/DG5xxLt
OXS7tcj7ky8gP0r+kjzmUu35dDsNyIeSLyc/Tf6BPP4y7UV1u83IfcjXkl8i
/0aebLn2UrqdtuTjybeQ3zBt3i+8rg0PMm3eT7yvD0+zImPY+40vjeHlTZv3
Iz+awzubNu9XglrDp66Q/TvAd9ruBL9nuws83Mp/7XaDZ5Z2esKrWu8N72W9
H3y29QHwA9YHw59YHwqPskrchee0PRJe27YPfIDt0fBFtsfCj5nG+5Px8Nem
8f5lEjzWalnvBy+wWtZPgzdcLetnwofb9XPgK0zj58XOg581jZ8vuxD+0TR+
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
f0eS+yUrPI2H3C/Z4eU85H7JCe/sIfdLLrifh9wveeA7PeR+yQe/6yH3S354
uMhyvxSEZ4os90theNXIcr8UgfeMLPdLMfjsyHK/eML3R5b7pQT8SWS5X0rB
I0eR+6U0PGcUuV+84f9FkfulLHxAFLlfysMXRpH7pQL8WBS5XyrBX0WR+6UK
PFZUuV+qwvNHlfulOrxhVLlfasKH6XZWkJ8h/0ieIJr2Yrrd5uS+5OvIL5N/
J08eXbuXbqcd+QTyreQ3yf+Qp42hvYJutwv5NPJd5PfJw8fUnkW3W428N/kc
8oPkT8mjxtKeS7dTh3wg+WLy4+RvyGPH1l5Qt9uI3CVfSX6O/BN5ojjai+t2
WpKPJt9AfoX8J3mKuNq9dbvtySeRbyO/TR5Mnj6e9oq6nW7k08n3kD8gjxhf
e1bdTg3yPuTzyA+RPyePlkB7Ht1uXfLB5EvIT5K/JY+bUHsh3U4T8hHkq8nP
k38hT5xIewndbivyseQbya+RB5KnSqy9jG6nI/lkcn/yO+R/yTMk0V5Zt9ud
fCb5XvJH5JGSas+u261J3o98PvkR8hfkMZJpz6vbqU8+hHwZ+Sny9+Txkmsv
otttSj6KfA35RfKv5ElTaC+p22lDPo58M/l18t/kqVNqL6fb7UTuR76D/C65
k0p7Jt1uFfKe5LPI95M/Jo+cWnsO3c5/5P3JF5IfJX9FHjON9vy63Qbkw8iX
k58h/0CeIK32orqd5uQ+5OvIL5F/J0+WTruXbrct+QTyLeQ3yYPI06bXXl63
04V8Kvku8nvk4TNoz6zbqUbei3wO+QHyp+RRMmrPpdutTT6QfBH5cfLX5LEz
aS+g22lEPpx8JflZ8k/kCTNrL67bbUE+mnw9+RXyH+QpsmgvrdtpTz6RfBv5
LfJg8nRZtVfU7XYln06+m/wBeYRs2rPqdquT9yGfS36I/Bl5tOzac+t26pIP
Il9CfoL8LXmcHNoL6XYbk48gX0V+nvyz6fJtv8Y50BSeOKd4F7intNsD3sp6
X/gY6wPhG60Pg1+1PhIeaH0MPGUu8QnwMtKOH7yD9RnwydbnwrdbXwi/Y30Z
PMT6KniG3OLr4ZWk3c3w7tb94TOs74bvtX4A/tD6EXikPOIn4dmk3bPwmtYv
wftavwafb/02/LBu5wV59Lza8+p265EPIV9Kfor8HXm8fNoL63aako80vW5W
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
Xly324Z8IvlW8hvkf8lT99NeVrfTmXw6+R7ye+Rh+mv31e1UIe9JPo88gPwp
eaQB2rPpdmuRDyBfTH6c/DV5zIHa8+h2GpIPJV9Ffpb8E3n8QdoL63abk48h
30B+hfwHebLB2kvodtqRTyLfTn6T3HG1p9HtlCfvQj6TfC/5A/KwQ7Rn1O1W
Je9NPp/8EPkz8ihDtWfX7dQhH0i+lPwE+VvyWMO059PtNiIfTr6a/Dz5Z/KE
w7UX0e20JB9Lvok8kPwXefIR2kvpdtuTTyHfQX6bPMRI7el0uxXIu5HPIt9P
/pA8/CjtmXQ71cn7kC8kP0z+gjzqaO05dbt1yQeTLyM/Rf6OPM4Y7fl1O03I
R5CvJb9A/pU80VjtRXW7rcjHk28mv0b+mzzlOO2ldTsdyaeS7zLd6nup2LM9
v2P6/uiQ0yr5w0OND+o6CQ7ECLMM7mP60uq+k/euhFcyXSF/rmjd1sK7mz52
6v0En43wOab96q+LfG8L/IDpPa9aj5uxA/7YdPYBqSJW2AOPMCGog0aPDnkA
nsV02gVzw+3+D17DtH+mWiM7H4X3M50w6PbSnoQvMj290tlht8/Aj5o20027
AH9pemTnEkPKXoFHnyjP4zo8l+mxC66PWXATXt907AKbYxW4A3dNLwzi6/fg
K0z79GqWrtdD+GnTW2IFXfAE/sF0waDLNz+Dx50U1EcqvT5S6SW8oGmTr1/D
m5o20495Bx9lOmj2Zuk+wteZNsOPfIZfMm2Wb/YN/m2S7OcnPMlk2c9veLHJ
sp9/8DaTZT8hFhmfMFn2E9q0s3Wy7Ccc/Ppk2U8E+N/Jsp/I8FRTZD9R4WWn
yH5iwDtNkf3Ehk+fIvuJC989RfaTAH5viuwnMTz0VOlkcF/bKeGVbaeB97Tt
A5+r2wmwnRH+xHZmeKRp0lnhWU2bf15uTXZ4LdO1zL9Plwve347PC19sx+eH
H7PjC8Ff2/F+8BjTZXwxeJ7pMr4kvMF0GV8GPtSOLwdfacdXhJ+146vAP5rG
1++rwePPSBv89foa8EKm8fX5WvDmpvH1/7rw0abx9f768A2m8fX9hvDLM2S9
JvAfM2S9ZvCkM2W9FvASM2W9VvC2M2W9tvBJM2W99vBtM2W9jvCbM2W9LvB/
0n7d4WlmBbfbC15OOqAvvIu0MxA+Q9rPhe+11w+D37fXj4SHnS3Xj4VnkPab
AK8q7U6G95IOmAafb6+fBf/PXj8X/sxevwAeeY5c7w/PLu0sg9c2jffrrYAP
NI33662CLzGN9+uthZ8wjffrrYe/sfNtgseaK/NtgeedK/NtgzeaK/PthA+b
K/Pthq+eK/Ptg5+z4w/CP9v5D8ETzJPrj8KLzJP1TsBbzJP5zsDHzpP5zsM3
zpP5LsED7XyB8J92vuvw5PNlvtvwkrbvwNvbvgufbPsefIft+/Bbth/AQyyQ
fghPa/sRvILtx/Cutp/AZ9l+Ct9n+xn8oe3n8HALpV/AM9l+Ca9m+xW8j+3X
8AW6ncPkz8mjLtKeQ7dTl3wQ+TLyk+TvyGP7a8+v221MPoJ8DfkF8i/kiRZr
99PttCIfR76Z/Cr5b/IUS7SX1u12IJ9KvpP8DnnIpdp9dLsVybuTzyY/QP6I
PMIy7Zl1OzXI+5IvIj9C/pI82nLtuXS79chd8uXkp8nfk8ddob2Abqcp+Ujy
deQXyb+RJ16pvZhutzX5BPIt5NfJ/5CnWqW9jG6nE/k08t3kd8lDr9aeXrdT
mbwH+Vzyg+RPyCOu0Z5Vt1uTvD+5P/kx8lfkMdZqz63baUA+hHwl+Rnyj+Tx
1mkvpNttRj6afD35ZfLv5EnXay+u22lLPpF8G/kN8n/kqTdoL6fb7Uw+g3wP
+X3yMBu1Z9DtViHvRT6P/D/yp+SRN2nPptupTT6AfAn5cfI35DE3a8+r221I
Pox8Ffk58k/kCbZoL6zbaUE+hnwj+RXyn+TJtmovqdttRz6ZfDv5LXJnm/a0
ut3y5F3JZ5LvI39AHm679oy6nWrkvckXkB8if04eZYf2HLrdOuSDyJeSnyR/
Sx57p/Z8up3G5MPJ15CfJ/9CnnCXdj/dbkvyceSbyK+S/yJPsVt7Kd1OB/Ip
5DvJb5OH3KM9nW6nInk38tnk+8kfkYffqz2zbrc6eV/yheRHyF+QR9unPadu
px75YPLl5KfI35PH2a+9gG63CflI8rXkF8m/kic+oL2obqc1+XjyLeTXyP+Q
pzyovYxutyP5NPJd5HfJQwVoT6/brUTeg3wO+UHyx+QR/9OeRbdTk7wfuT/5
UfJX5NEPac+t261PPoR8BfkZ8g/k8Q5rL6jbaUY+inw9+SXy7+RJjmgvrttt
Qz6RfCv5DfK/5KmPai+r2+lMPp18D/k98jDHtPvqdqqQ9ySfRx5A/pQ80nHt
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
+QXyr+SJ2msvqtttRT6efDP5NfLf5Ck7aC+t2+lIPpV8F/kd8lAdtfvodiqR
dyefQ36A/DF5hE7as+h2a5D3I19EfpT8JXn0ztpz6Xbqk7vkK8hPk38gj9tF
e0HdblPyUeTryC+RfyNP0lV7Md1OG/IJ5FvJr5P/JU/VTXtZ3W4n8unku8nv
kYfurt1Xt1uZvCf5XPIA8ifkkXpoz6rbqUXen3wx+THy1+QxemrPo9ttQD6U
fCX5WfKP5PF7aS+k22lOPpp8A/ll8h/kSXtrL6HbbUs+iXwb+U3yf+Rp+mgv
p9vpQj6DfC/5ffKwfbVn0O1UJe9FPp/8P/Jn5JH7ac+u261NPpB8CfkJ8jfk
sfprz6vbaUQ+jHw1+Tnyz+QJBmgvotttQT6WfCN5IPlP8uQDtZfU7bQnn0y+
g/wWeYhB2tPqdiqQdzWdzTf3g+2r4bNM932VKsSgtfB9pg+ti5Gi1Hr4Q9MR
O/3zi7oRHm5wUFfP8qbJ1U3wTKbnvb/pLtwCr2b60eYT/q22wfuYzth9R0Dm
HfAFpnvkXHb/6074YdP7v0xxDu6GPzcdZufg5KP2wqO6QV2pT0e/yvvhOUzP
zFe/SbyD8Lqm7/4s494LgA8ynW5fbv+Vh+DLTHcemDqg8xH4SdO7Cse8n+cY
/J0rz+cEPPYQ6ZPw/LZPwRvbPg0fYfsMfI1u5wL5F/JEQ7X76XZakY8j30x+
lfw3eYph2kvrdjuQTyXfSX6HPORw7T663Yrk3clnkx8gf0QeYYT2zLqdGuR9
yReRHyF/SR5tpPZcut165C75cvLT5O/J447SXkC305R8JPk68ovk38gTj9Ze
TLfbmnwC+Rby6+R/yFON0V5Gt9OJfBr5bvK75KHHak+v26lM3oN8LvlB8ifk
Ecdpz6rbrUnen9yf/Bj5K/IY47Xn1u00IB9CvpL8DPlH8ngTtBfS7TYjH02+
nvwy+XfypBO1F9fttCWfSL6N/Ab5P/LUk7SX0+12Jp9Bvof8PnmYydoz6Har
kPcin0f+H/lT8shTtGfT7dQmH0C+hPw4+RvymFO159XtNiQfRr6K/Bz5J/IE
07QX1u20IB9DvpH8CvlP8mTTtZfU7bYjn0y+nfwWuTNDe1rdbnnyruQzyfeR
PyAPN1N7Rt1ONfLe5AvID5E/J48yS3sO3W4d8kHkS8lPkr8ljz1bez7dTmPy
4eRryM+TfyFPOEe7n263Jfk48k3kV8l/kaeYq72UbqcD+RTyneS3yUPO055O
t1ORvBv5bPL95I/Iw8/Xnlm3W528L/lC8iPkL8ijLdCeU7dTj3ww+XLyU+Tv
yeMs1F5At9uEfCT5WvKL5F/JEy/SXlS305p8PPkW8mvkf8hT+msvo9vtSD6N
fBf5XfJQi7Wn1+1WIu9BPof8IPlj8ohLtGfR7dQk70fuT36U/BV59KXac+t2
65MPIV9Bfob8A3m8ZdoL6naakY8iX09+ifw7eZLl2ovrdtuQTyTfSn6D/C95
6hXay+p2OpNPJ99Dfo88zErtvrqdKuQ9yeeRB5A/JY+0Sns23W4t8gHki8mP
k78mj7laex7dTkPyoeSryM+SfyKPv0Z7Yd1uc/Ix5BvIr5D/IE+2VnsJ3U47
8knk28lvkjvrtKfR7ZQn70I+k3wv+QPysOu1Z9TtViXvTT6f/BD5M/IoG7Rn
1+3UIR9IvpT8BPlb8lgbtefT7TYiH06+mvw8+WfyhJu0F9HttCQfS76JPJD8
F3nyzdpL6Xbbk08h30F+mzzEFu3pdLsVyLuRzyLfT/6QPPxW7Zl0O9XJ+5Av
JD9M/oI86jbtOXW7dckHky8jP0X+jjzOdu35dTtNyEeQryW/QP6VPNEO7UV1
u63Ix5NvJr9G/ps85U7tpXU7Hcmnku8iv0Meapd2H91OJfLu5HPID5A/Jo+w
W3sW3W4N8n7ki8iPkr8kj75Hey7dTn1yl3wF+WnyD+Rx92ovqNttSj6KfB35
JfJv5En2aS+m22lDPoF8K/l18r/kqfZrL6vb7UQ+nXw3+T3y0Ae0++p2K5P3
JJ9LHkD+hDzSQe1ZdTu1yPuTLyY/Rv6aPEaA9jy63QbkQ8lXkp8l/0ge/z/t
hXQ7zclHk28gv0z+gzzpIe0ldLttySeRbyO/Sf6PPM1h7eV0O13IZ5DvJb9P
HvaI9gy6narkvcjnk/9H/ow88lHt2XW7tckHki8hP0H+hjzWMe15dTuNyIeR
ryY/R/6ZPMFx7UV0uy3Ix5JvJA8k/0me/IT2krqd9uSTyXeQ3yIPcVJ7Wt1O
BfKu5LPI95E/JA93Snsm3W418j7kC8gPkz8nj3paew7dTl3yQeTLyE+SvyOP
fUZ7ft1uY/IR5GvIL5B/IU90VrufbqcV+TjyzeRXyX+TpzinvbRutwP5VPKd
5HfIQ57X7qPbrUjenXw2+QHyR+QRLmjPrNupQd6XfBH5EfKX5NEuas+l261H
7pIvJz9N/p487iXtBXQ7TclHkq8jv0j+jTzx5aBeHKPpe5+z8GKmjxQq9NA9
B29t+nnbBFeun4dPMB155pejWS/Ct5jOcujiztGX4NdNV3+7fvX9y/A/pnsn
HDsvbyA81ZWgnleq1YTJV+FlTB/oVmzw82vwTqYfLkza1e8GfJrpsKd/Npt9
E77btO+3qzXe34LfNV0x1dZSZe7AQwcGddfKk/L634WnNz2jf3vf7/fglU3v
Xlk6cZUH8B6mb19OFXXVQ/jcQHk+j+EHTeP7xZ7An5jG94s9hUe8mi74+8We
wbOaxveLPYfXvCrzvYT3vyrzvYL7X5X5XsOP2fnewF/Z+d7CY1yT+d7Dc5vG
9yd9gDcwje9f+ggfYsd/hq+047/Az9jxX+Ef7fjv8HjXg933B7zQdbn+J7zZ
9eDx7i/4aBm/5jd8vYwP/AO/LOOdf/Dvdn5nqfGkN2T+EKbd4jdk/pDwtjdk
/lDwiTI+MDR8m4x3wsJv2A4H/2c7PDz1TekI8HK2I8I7244En2E7MnyP7Sjw
+7ajwsPcko4Gz2A7OryKtF8MeC9pNyZ8nnRALPh/9vo48Kf2+rjwyLfl+njw
bNIB8eG1pZ2E8AHSfongS+z1ieHH7fVJ4G/s9cngMe/I9cnheaXdFPCG0gEp
4cOkndTwVfb6NPBz9vq08E/2+nTwBHfl+vTwwtJ+vvAW0m4G+BjpgIzwjfb6
zPAr9vos8J/2+qzwZPfk+mzwktJODng7ab+c8MnSbi74dnt9bvgte31euHNf
rs8HTyvt5oeXlw4oAO8q7RSCz7TXF4bvs9cXgT+w1/vBwz2Q64vBM9ouDq9m
uwS8t+2S8AW2S8EP2S4Nf267DDzKQ+my8By2y8HrPJTPZ7Qz6KF8/peHL7Xj
K8BP2vFo960dXxEe+5GMrwTPp9tpTD6cfA35efIv5Akfa/fT7bYkH0e+ifwq
+S/yFE+0l9LtdCCfQr6T/DZ5yKfa0+l2KpJ3I59Nvp/8EXn4Z9oz63ark/cl
X0h+hPwFebTn2nPqduqRDyZfTn6K/D15nBfaC+h2m5CPJF9LfpH8K3nil9qL
6nZak48n30J+jfwPecpX2svodjuSTyPfRX6XPNRr7el1u5XIe5DPIT9I/pg8
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
CzLfU8+/yHyvPU8UX86f537x5fx53iq+nL/38HG6nc3kV8l/k6dIoL20brcD
+VTyneR3yEMm1O6j261I3p18NvkB8kfkERJpz6zbqUHel3wR+RHyl+TREmvP
pdutR+6SLyc/Tf6ePG4S7QV0O03JR5KvI79I/o08cVLtxXS7rU1HWZbyVqMP
8Ammd55KGv/YR/gW000+JKyZ6TP8uukI8eNNnf4F/sf0lsKxzv/6Ck+VLKjr
t4wWufl3eBnTocdHKnvqB7yT6Q1bwo3M9gs+zXTtG6EOz/4N351M7u8v/K50
ANoJnVx+//kHTy/t5ywzXlnaCWHa7SEdgHbm2utDwg/a60PBn9jrQ8MjppDr
0U5WaTcMvKa0X1h4f2knHNzfXo92jtnrw8Nf2esjwGOklOsjwnObfvc26Bfa
aWD67p2gX5HgQ1LK72eR4StN79sb9CsK/IxpvF6JCv+YUn7/jQaPlyqox4wO
+hUdXsh0b/MrBrxZKvn/RUz4aNN4PRILvt50CfMrNvxyKvn/Wxz4d9Mpza+4
8KSpgzqG+RUPXjy17Dc+vG1q2S/anZha9psAvi217Dch/EZq2W8i+L/Ust/E
8NRpZL9J4OXSyH6Twjunkf0mg89II/tNDt+TRvabAn4/jew3JTxMWtlvKniG
tLLf1PAqaWW/aeC90sp+08LnpZX50c5/aeX+PX9qx6eDR04n49FutnQy3vPa
6WS8D3yAbmcJ+XHyN+QxfbTn1e02JB9m2xe+ynYG+DnbGeGfbGeCJ0gvnRle
2HYWeAvbWeFjbGeDb7SdHX7Fdg74T9s54cl8pXPBS9rODW9nOw98su288O22
88Fv2c4PdzJIF4CntV0QXt52IXhX24XhM20Xge+z7Qd/YLsoPFxG6WLwjLaL
w6vZLgHvbbskfIHtUvBDtkvDn9suA4+SSbosPIftcvA60i7aGWS9PHypdbRz
0noF+NtMwec9EO3EziznvSI8X2a5vhK8cWb5/KgMHy7jfavA18h4pyr8vIwP
RDtf7PzV4AmzyPzV4X5ZZP4a8JZZZP6a8HEy3qkF3yQdgHau2vlqw39J+9WB
p8gq19eFl5IOQDsdpN168CnSfvXhO+31DeC3s8p+0E7IbHL/DeHpssn4RvCK
2WQ82u1mxzeGz7bjm8D3224Kf2S7GTx8dunm8My2W8Cr224J72u7FXyh7dbw
I7bbwF/YbguPlkO6HTyn7fbwerY7wAdLu2hnufWO8FPW0c57653gcXJKd4YX
sN0F3sR2V/hI293ga213h1+03QP+NaecT7STOJd8fHrCi+aS++sFb51LPl69
4eNlvG8f+BYZ7/SFX5PxgWjnj52/Hzxlbpm/P7xMbpl/ALxjbpl/IHyajHcG
wXfZHgy/a9uFh8ojPQSe3vZQeCXbw+A9bA+Hz9HtHCR/TB4xr/Ysup2a5P3I
/U3jzxMj4EdN488jaOeVHT8SHj2faie3brc++RDyFeRnyD+Qx8uvvaBupxn5
KPL15JfIv5MnKaC9uG63DflE8q3kN8j/kqcuqL2sbqcz+XTyPeT3yMMU0u6r
26lC3pN8HnkA+VPySIW1Z9Pt1iIfQL6Y/Dj5a/KYRbTn0e00JB9Kvor8LPkn
8vh+2gvrdpuTjyHfQH6F/Ad5sqLaS+h22pFPIt9OfpPcKaY9jW6nPHkX8pnk
e8kfkIctrj2jbrcqeW/y+eSHyJ+RRymhPbtupw75QPKl5CfI35LHKqk9n263
Eflw8tXk58k/kycspb2Ibqcl+VjyTeSB5L/Ik5fWXkq32558CvkO8tvkIcpo
T6fbrUDejXwW+X7yh+Thy2rPpNupTt6HfCH5YfIX5FHLac+p261LPph8Gfkp
8nfkccprz296avb1aeaNgjcxXfTL+5dlxsBHmP6wM+emr2Pha00v7ten57Lx
8AumqxTal7/aRPhXO/9keKIKPvL+DXhR0977N+CtTHvv34CPN+29fwO+2bT3
/g34NdPe+zfgvyvIejPhKSvKemi3dEVZbxa8Y0VZbzZ8akVZbw58V0VZby78
TkVZbx48VCVZbz7cxzT+fIR2KpnGn58WwLubxt+3LITPMY2/T1kEP2Dn84c/
tvOh3QiVZb7F8CyVZb4l8BqVZb6l8H6VZb5l8EWmzY+Ln4V2jprGz6dfDn9p
2vx4+KNoJ3oVn+CfV78Cnsu0yc9op75p/Pz6lXDXtPl58ylXwVeYxs+zR7un
TZufP191NfyDafx8e7Qbt2rw/bpr4AWrBt9vvLXwplWD73cD2hlVNfh+S66D
r6safL930M6lqsH322M9/FvV4PuNtAGepFrw/S5Bu8WqBd9v/o3wNtWC7/ci
2p1QLfh+22yCb60mz3cz/Ho1eb5o5281eb5b4Kmqy/NFO2Wry/PdCu9UXZ4v
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
hO0M8Ha2M8In2c4E3247M/ym7qAXyObz4+HEXak8T2O6bvWr03N5Xt507yNJ
upb2vIvpGblaVqzr+UzTW1esS9/e872mL8T7HGag5w9Mvx1d4OFEz8NODOrI
P4ce8Pc8o2nf9qfmbvG8qunSt2P0PuJ5b9NBq1W/6vl808MO+Gd57vkh04uz
PI/00/Nnpg8GcaQs8CiTgtpMlwTtZjdtls/ieR3T8YNut6jnA03nNgt6vtS0
eRwtPT9huqu5Qc/fmp60K9Xb0Z7HmhzU69MHbcjzfKaDdrdineeNTAfd7dAD
ng83HXZg0cYXPF9tOrV5YJ6fNx2k8T57/tm0yTBZ4QmnBLW5PB7aLWJ6XtBy
6T1vaXp30O0V8HysabOdip5vMm2239jzQNMxzQfc81+ms5ob9jz51KA2H47p
npcybT58Kzxvb3pM0Id7l+dTTK8MOh6nPN9h2hyn257fNm2O31vPQ0yT85kN
ns50UvPA0W6FaXJePe82Tc6r57OmyXn1fP80Oa+eP5wm59Xz8NPlvHqeabqc
V8+rT5fz6nmf6XJePV84Xc6r54eny3n1/MV0Oa+eR50h59XznDPkvGaH150h
5xXtDJ4h59XzZTPkvHp+aoacV8/fzZDz6nmcmXJePc8/U86r501mynn1fMRM
Oa+er50p59XzCzPlvHr+daacV88TzZLz6nnRWXJec8BbzZLzinbGz5Lz6vnm
WXJePb82S86r579nyXn1POVsOa+el54t59XzjrPlvHo+dbacV893zZbz6vmd
2XJePQ81R86r5z5z5Lx6XmmOnNec8O5z5LyinTlz5Lx6fmCOnFfPH8+R8+p5
hLlyXj3PMlfOq+c15sp59bzfXDmvni+aK+fV86Nz5bx6/nKunFfPo8+T8+p5
rnlyXj2vP0/Oq+fuPDmvueAr5sl5Rbun58l59fzDPDmvnsedL+fV84Lz5bx6
3nS+nFfPR82X8+r5uvlyXj2/NF/Oq+ff5st59TzJAjmvnhdbIOfV8zYL5Lx6
PmGBnNfc8K0L5Lyi3esL5Lx6/neBnFfPUy2U8+p52YVyXj3vtFDOq+fTF8p5
9Xz3Qjmvnt9bKOfV89CL5Lx67rtIzqvnlRfJefW85yI5r57PXSTnNQ88YJGc
V7T7ZJGcV88j+ct59Tyrv5xXz2v5y3n1vL+/nFfPF/vLefX8mL+cV89f+8t5
9TzGYjmvnudZLOfV8waL5bx6PnSxnFfPVy6W8+r52cVyXvPCPy6W84p24i+R
8+p5oSVyXj1vvkTOq+ejl8h59XzDEjmvnl9eIufV8x9L5Lx6nnSpnFfPSyyV
8+p526VyXj2ftFTOq+fblsp59fzmUjmv+eD/lsp5RTtplsl59bzcMjmvnndZ
JufV8xnL5Lx6vneZnFfP7y+T8+p52OVyXj3PsFzOq+dVl8t59bzXcjmvns9f
LufV8/+Wy3n1/NlyOa/54ZFX+AS/P78APLtpvH+/ILz2iuDxbiH4QBm/pjB8
iYwPLAI/IeOdovA3dv5i8FgrZf7i8LwrZf4S8EYrZf6S8GEyPrAUfLWMd8rA
z8l437Lwz3b+cvAEq2T+8vAiq2T+CvAWq2T+ivCxMt6pDN8o432rwANlfM2q
8J92/mrw5Ktl/urwkqtl/hrw9qtl/lrwyTLetzZ8h4yvWQd+S8a7deEh1sj8
9eBp18j89eEV1sj8DeFdZbxvI/gsGV+zMXyfjHebwB/a+ZvCw62V+ZvBM62V
+VvAq62V+VvC+8j4mq3gC2S82xp+WMavaQN/budvC4+6TuZvD8+xTubvAK+7
TubvCB8k491O8GUyfk1n+EkZH9gF/s7O3w0ee71P8L9n1h2e3zT+/bMe8Mbr
Zb6e8BGm8e+r9YKvMY1//6wP/MJ6ub++8C+m8e+r9YMn2uAT/O+x9Yf7bZD7
GQhvtUHuZxB83Aa5n8HwzRvkflz41Q1yP0PgvzfI/QyDp9go9zMcXnqj3M8I
eIeNcj8j4VM3yv2Mhu80jfdboJ07pvH+jTHwkJt8gt8PgnZ8TOP9F2PhFU3j
/Rxop7tpvD9kHHz2JllvPPzAJlkP7T7aJOtNgEfYLOuh3cybZb2J8BqbZT20
23ezrDcJvmizrDcZfkS385I82hbtuXS79chd8uWmnw5b2y/OFPhp07vmv8sc
Yzr8vemx23M8ijwLHndrUDc413tW+LnwAqYzP9tbPvQCeNOtMr8/fKTtxfB1
tpfAL9peCv9mexk88Taf4Pe/op1ipvH+WM9bm8b7Zz2fYBrvr/V8yzaZbzn8
up0P7f6x83mearvM53mZ7TKf5522y3wr4NN0O7vJ75KH3qE9vW6nMnkP8rnk
B8mfkEfcqT2rbrem6WjVAj72WQnvb/pe0zszf6yC+5ve2PVn/n5r4MdMDx4S
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
gHc86hp/oyN8Co1XneHbubvAb3N3hf/h7gbPfoy6O7zqMVoPWvU4Rud3+iwe
3wO+j8ej9UMe7/TYx2l8T7i3afNyridoVdM0Xk/WC97PtHk92dre8IWm8fq4
PvAjps3r47r1hT83jdfH9YMnPOHjfH1c/v7wfKbx+rhgeH3T5uVq39FqiGm8
nmwAPMS0eT3ZgYHwU6bxerJB8Lcn6PEZDE9x0nU9bYbAi5x0XU/FofBmJ13X
4zkMPvKk63oSDIevPem6nki0vnDSdT3hI+CfT7quJ1TD051yXc+skfDSp1zX
EzwK3uaU63oajYaPP+W6npJj4JtPua4ny3/wa6fo8RkL/8E9Dp71NPV4eAXu
CfDO3BPhU7knwXdyT4bf4Z4C/8c9FZ7jjI/r9VtoFWgaf19hGrynafN0m3nT
4XNM4+/VzoDvN43Xh82ER5jG83VmweOc9XH+vdpEs+G5TePvO6B1LdPm6TYn
58CDTeP5OXPhi87S4z8PfvSsa73N58NfnHWtt8QCeOJzrvWmWwjPf8613q9o
1fCca71XFsGHnnOtd8ti+IpzrvVOWgI/fc613k5L4e/OudZbaRk85XnXej1C
4MXO0/4uhzen1ivgo9lXwdexr4aHs6+FfzlPn99oleECff6vg5e5QOPXw9td
oPFoPYHHb4Bv5fEb4ddN434NWkWbxv2NTfBsF+nr32Z4JdO4/7IF3sU07lds
hU+/SOffBt9lGvdTQuH3TOP+1Xa4Cqfr3wHPFe5aT++d8GrhrvW03QXvHU7X
sxs+N9y1nip74AfDXespthf+OJy+/u+Dx7vkWk/m/XDfS671JD0Ar3OJ9ucg
fIBpvD4ErZaYxt/PPQQ/Zto8XW/HYfgr03h+3hF4kst0fWHwgpdd83U4Cm90
2TVf0DH48Muu+Qoeh6+87Jovwwn4WZpPnYS/5z4FT32F+jS8OPcZeEvus/Ax
3OfgG7jPwy9xX4B/474Iz3iVOhzuz30J3p77MnwS9xX4Nu6r8Jvc1+C/qEPQ
yv2aq/2vwytTR6BVN2p9Az6D2u0mfA91GFrfp251Cx7zOp3/NtyTOgStqlP7
34H3oY5Aq/nU+i78ELXbPfhT6jC0jn+Dzn8f7ketHsDrUoeh1SBq/RC+lNr/
EfwEHx8Bf83Ho1Wym3T8Y3ghav8n8CbU6il8BHUYWq3m45/Bz/Hxz+Ef+fgX
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
h3vnJXkIHzJcvr6j9fLh3nnbHD8t89Qj+Du7VYIRtheyWwWQjyRfRx5C/pU8
2UjbS9itW5NPIN9Cfp38N3maUbaXs1t1Ip9Gvpv8Lnm40bZnsltVJe9BPpf8
IPlj8ihjbM9ht65N3p98Mfkx8pfkscfans9u1ZBck68kP0P+gTzhONuL2K2b
kY8mX09+ifwbeYrxtpe0W7Uln0i+jfwG+V/ytBNsr2C37kw+g3wP+X3y8BNt
z2K3rkbei3weeRD5E/Jok2zPabeqQz6AfAn5cfLX5HEm2/6f3boR+TDyVeTn
yD+SJ55ie1G7VQvyMeQbyS+T/yBPOdX20nbrduSTybeT3yL/R55+mu0V7VZd
yWeS7yMPJY843fasdqsa5L3JF5AfJn9GHn2G7bnt1nVN4/kfxweZxvM/j+FL
TeP5nyfwk+7jn8LfSAehVbyZ8v36GbyAtN9zeBNp9QI+XDoArdZIBzl+Xtrn
JfyzOx+tk8zydqjjxaX9XsFbSgei1Thp9Rq+ye038Ktuv4X/lNZo5TNb/B28
jLQfWnWQ1o5PkQ5yfKf7+Pfw26bx8yBahZmT1fvz4wd4hjmy/iO88hxZj9bd
3PWf4LPd9Z/h+6WD0OqhtP4CjzRX9v8Vnk1afYPXlA5Cq77S+jt8ofv4H/Cj
7uN/wp+769Eq5jzxX/A80hqt6rv+Gz7YdbRa7vof+CnX0eqd63/h8eeLo1Uh
afUP3tR1tBrputpmfK3raBXiehj4F9fRKtkC8bBwP2mNVq1dDwcf7zpabXE9
PPyatB9a/XbXO556oXx+HC8nrSLAO7qOVtOkdUT4Lmm/SPC77uMjw8Muksej
VSZpHQVeRdovKryHtIoGn+OuR6uDrkeHPzJ9LfrDMlvRKspiT69PEjy+ZQx4
dtPDMqy8mDAmvLbpennGJDqF1v1MZ/dr33hALPhi0+GrVF6WLTY82PTN+tlf
3Eerl6Y3tY6dY1oceKxAT4/s8bFn6bjwfKYb6it7v6J1A9O5Ju5Ua+LBtelI
8+aUbRgfvsL03ZX9J8RIAD9jetu2RpcOofV702ODiiXunhCecImnm57zaZIu
Ebyw6Xy3wi6/hlbNTEd79vjFmMTwUaYffDqeo3AS+HrTu9SaXm/Q+qLpCTHG
71ucFP7NdPOkncLUTAZPvtTTBTJWKxc+Obyk6Zh5PWeE1m1MP/aLd7ltCvhE
03urfEmcLCV8q+kpDa43OYdWN0y3brNn+ZBU8D+mi/Sc/zKXDzztMk/HHToo
52O0Lm/6+cSmvWelhnc2fXBeif3l08Cnm56xKm3YX2i1x3T77RHKb0gLv2e6
+OFnE5umg4df7ukE509djpMentn0q1vrkgSjVTXTZnnvDPCepmd/7rIiU0b4
PNOeq/PqFlofMl3KXJBM8CemkyRL2Kd4ZnjUFZ5+l/H7/g9oldP0sbyeT1gW
uL/p+Z7TqZMVPsB0t6qLJkX2hQeaLmduKLQ6bjpFW89nKBv8lWnP3ReQKjs8
zkpPnxzqueHROr9pz7TXw3PAG5k2lzt/TvhQ0xVXn+3zHK1WmfbZsfHAvFzw
s6a/Hp4Srkpu+EfTZ893r/APrROt8vTS27Unb8kDL2q67/P8V1vkhTc3XdVz
OyTMBx9jOl3YXwEn0XqD6Z8xPX8C8sMvmw5Jdui173/w76ZXZFqS+z5apVzt
6QH5hvedWgBeynSNkq0OlioIb2fa3K5f0XqS6T8NM1dcXQi+3fTlttGmNCgM
v2na86fhavQi8H+mhwy7kOwQWqdbY74/Tt7SrFtReMU18vWnGLyL3Wom+V7y
UPIIa23PareuTt6bfD75YfKn5NHX2Z7LblWXfCD5UvIT5G/I4663vYDdujH5
cPLV5OfJP5En2WB7MbtVS/Kx5JvIr5D/JE+10fYyduv25FPId5DfJlebbM9g
t65E3o18Fvl+8gfkkTbb7mu3qkneh3wh+RHy5+Qxttiex25dj3ww+TLyU+Rv
yeNvtb2g3aop+QjyteQXyL+QJ91mu5/duhX5ePLN5NfIf5Gn3m57WbtVR/Kp
5LvI75CH3WF7RrtVFfLu5HPID5A/Io+80/bsduta5P3IF5EHk78gj7XL9rx2
qwbkQ8hXkJ8mf0+eYLfthe3WAeSjyNeRXyT/Sp58j+0l7FZtyCeQbyW/Tv6H
PM1e28vbrTuRTyffTX6PPNw+2zPbrauS9ySfS36I/DF51P2257Bb+ZP3Jw8k
P0b+ijz2Advz260bkg8lX0l+lvwDeaKDthexWzUnH206XwFdeqDjG1wvDr9k
+nm/Rc/6odV30xc+FbnwyfEUh7J6X+/rBy9l2rN60TO0bmt6VLPEo5qVgE8y
jdf3ovU2087rw+E3TRc1B0Drv6bxet5S8HRBno5+NGf0o2hdwfRnz3aKlIZ3
MY3XJ6P1DNNmec4y8L2m8fwJWt83jdcjl4VHOOzp/uYE0DqL6eae7ScuB69u
Gq8/RutepnOZDZWHzzdtlo9C66DDcj0rwJ8eluuJ1tGOyPV0PNcRuZ4V4XWO
yPVEq4FH5HpWgi85ItcTrU4cketZGf76iFxPtIp7VK5nFfh/R+V6olXjo3I9
q8KHHZXriVarj8r1rAY/d1SuJ1p9OirXszo8cbBcT7QqFizXswa8RbBcT7Qa
GyzXsyZ8Y7BcT7S6EizXsxb8h7RGq1THxGvDS0trtGrvuj98sutotcP1OvBb
rqM9v8CJ14Wnl9ZoVcn1evCudqtZ5PvIH5BHPGG7r926Bnkf8gXkR8ifkcc4
aXtuu1U98kGm8X7Bji9zvQH8pOto9dY03r+3ITzeqaze9yNGq4Km8f6/jeBN
TOP9jBvDR5jG+wej9RrTeD/kJvALpvH+w03hn03j/ZTRKunprN73Lw6AFz8t
+20Gb3Va9ovW407LfpvDN5+W/aL11dOy3xbwX6dlvy3hPmdkv2hV9ozstxW8
wxnZb2v41DOyX7TeeUb22wZ+54zsty08zFnZL1plPCv7bQevfFb2i1bdz8p+
28Nnn5X9doAfOCv7ReuHZ2W/HeGRz8l+O8GznZP9olWtc7LfzvC+52S/XeCL
zsl+0froOdlvV/iLc7JftI55XvbbDZ73vOy3O7z+edkvWg05L/vtAV9+Xvbb
E376vOwXrd+dl/32gie4IPvtDS90Qb6+oVXABfn62gc+0l3fF77OXY/WIe76
fvCv7vr+8GQh8vUDrUpIqwHw1q6j1QTXB8K32K2uk/8mT3PR9nJ2q07k08h3
k98lD3fJ9kx2q6rkPcjnkh8kf0we5bLtOezWtcn7ky8mP0b+kjz2Fdvz2a0a
kmvyleRnyD+QJ7xqexG7dTPy0eTryS+RfyNPcc32knartuQTybeR3yD/S572
uu0V7NadyWeQ7yG/Tx7+hu1Z7NbVyHuRzyMPIn9CHu2m7TntVnXIB5AvIT9O
/po8zi3b/7NbNyIfRr6K/Bz5R/LEt20vardqQT6GfCP5ZfIf5Cnv2F7abt2O
fDL5dvJb5P/I09+1vaLdqiv5TPJ95KHkEe/ZntVuVYO8N/kC8sPkz8ij37c9
t926Lvkg8qXkJ8nfkMcLtb2A3aoJ+XDyNeTnyT+TJ3lge3G7dUvyceSbyK+S
/yT3eWh7GbtVB/Ip5DvJb5OHeWR7BrtVZfJu5LPJ95M/JI/02PZsduua5H3J
F5IfJX9OHvOJ7XnsVvXJB5MvJz9F/o48/lPbC9mtm5KPJF9LHkL+hTzZM9v9
7FatyceTbyG/Rv6bPPVz28vZrTuSTyPfRX6XPOwL2zPZrauQ9yCfQ36Q/BF5
lJe2Z7db1SbvR76YPJj8JXmsV7bns1s3INfkK8jPkL8nT/ja9sJ2q2bko8jX
k18k/0ae/I3tJe3Wbcgnkm8lv0H+hzztW9vL2606k08n30N+jzz8O9sz262q
kfckn0d+iPwJedT3tue0W/uTDyAPJD9O/oo8zgfb89utGpEPNV2z96EavQfB
V5me8OPK+B+D4WdNHx/48thADf/oPn4YPNFHb+vh8KLSaiS8uduj4GPcHg3f
4PYY+GW3x8K/m8br+9Eq5aes3tfvj4OXMo3X54+HtzONvx8wAT7pk+xvInz7
J++81pPgN2Ve5cnwfzIvzxR4us/eeUmmwit+lv1Ng3dxezp8ptsz4HvdngkP
dXsWPMIX6dnwrG7PgVd3ey68t9vz4POlNVoddn0+/Klp/P0QtIr+Nav3+YUF
8Fxf5fEL4XW/etf7L4IPlPVZFsOXynoVCD/hPn4J/I3ry+Bxv8nx0arANzn+
cnjjb/L4FfDhst5/JXy1rM+yCn5e1qvV8E+m8fwyWiX5ntX7/PcaeDHTeD55
LbylaTzfjdZjTeP543XwTabx/PZ6+JXvcrwN8J/f5XhoneqHHG8jvMwPOd4m
ePsfcjy0mvJDjrcZvuOHHG8L/PYPOd5WuPop12cbPIO02gGv9FPuZ7Tq9lP+
fDg+66fczzvh+3/Knw+0fuDO2wWP9EvmobXvL5nneM1fMm83vM8vmYdWC3/J
vD3wI7/k849Wz3/J538vPMZvOb998Dy/5fO/H17vt3z+D8AHy3p1EL5Mujpa
nZIOdPyt9HvH4//xtt8heEHpKWjVVDrU8RHSOYPga6U1Wl+QDnH8i7TPYXjS
v97uilZ+0kGOt5KOfQQ+XjoArTdLb3b8mrQ6Cv9lt0r9z/aydquO5FPJd5Hf
IQ+rfC3PaLeqQt6dfA75AfJH5JHD2J7dbl2LvB/5IvJg8hfkscLantdu1YB8
CPkK8tPk78kThLO9sOk+GeOumut4gOlHPpMDrgbDR5muljR60jjH4etM7483
9nLlE/CLpjPFiDhxzEn4V9MzIg4vG3wKnjy8HO8MvITbZ+Ft3D4Hn+D2efhW
ty/Ar0trtPrjegg8TQSrVXm7dSfy6eS7ye+Rh4toe2a7dVXynuRzyQ+RPyaP
Gsn2HHYrf/L+5IHkx8hfkceObHt+u3VD8qHkK8nPkn8gTxTF9iJ2q+bko8k3
kF8i/06eIqrtpezWbcknkW8jv0n+lzxdNNsr2K26kM8g30t+nzxCdNuz2K2q
k/cin08eRP6UPFoM23PZreuQDyRfQn6C/DV53Ji2/2e3akw+jHw1+TnyT+SJ
Y9lezG7dgnws+UbyK+Q/yFPFtr203ao9+WTyHeS3yFUc29PbrSqRdyWfRb6P
/AF5xLi2+9qta5D3IV9AfoT8GXmMeLbntlvVIx9Evoz8JPlb8njxbS9ot25C
PoJ8DfkF8s/kSRPYXtxu1Yp8HPlm8qvkv8h9Etpe1m7dgXwq+U7yO+RhEtme
0W5dmbw7+WzyA+QPySMntj2b3aoWeV/yReRHyV+Qx0xie167dX3yIeTLyU+T
vzP9qFWywGoX4QmSenrniE1JVl6CFzI9Zlmp6b8vwwNMNzxyPXqtq/CRprM9
6DBqzTX4uqQy/wY8RNoPrb5Ka8eTJfN2kOMlpNVNeGu71QTyLaar/HwUcMfx
66ZnvMrZMOgW/LfpW3cG+S+/DU+T3NOpz5+uNuYOvJzptocSVex4F97J9KbN
LUtXvwefZvrrki3F8t6H7zZdZPrfAolD4XdNDx9RKc9vtAqXwtOne83JFvoA
nsl0nDZPMgY/hFc1Xbde7jSrH8F7mF5UYUjyCY/hc00/KXQ2Ydcn8IOmfX2T
xKn9FP7YdPcUraMVeAaPktLTe2Jui5D8OTxHSrk+L+C1TeP325fw/qbx++9r
+GLT+P34DfyYafz+/A7+0p33AR47lcz7CM+XSuZ9hjdMJfO+wHUqmfcNvjKV
zPsBP2O3+kCe0Mf2InbrZuSjydeTXyL/Rp4ite0l7VZtySeSbyO/Qf6XPG0a
2yvYrTuTzyDfQ36fPHxa27PYrauR9yKfRx5E/oQ8Wjrbc9qt6pAPIF9Cfpz8
NXmc9Lb/Z7duRD6MfBX5OfKP5Ikz2F7UbtWCfAz5RvLL5D/IU2a0vbTduh35
ZPLt5LfI/5Gnz+TpAL+3fZM6XtF07PNh7q11vKvpoIYJShX+CZ9puuuLTKvP
oNU+0z59isRo9AseajokfPXur9EqYmZP62ktrg/8Dc9qOqd5wB94DdOhG8Yt
WYjWvU1PKbwoYva/8AWm/U5t6XAQrQ+bfl/nWEjVf/BnpgMf38h3H62jZ/G0
5+jzuqjtxnNnkfMNY1rXNW3+vbcWaDXINP59OMeXmsbzd2HhJ03j359D6zem
zfIPjsfL6ut9/i8cvIBp8+/P7UarJqbx79WFhw/PKt8P0WpNVu9+Hjl+Pqt3
P+UiwD9n9e5nLVon8fXuJ2ZEeHFf7366oXVLX+9+rjo+zte7nwKR4Jt8vftZ
gFZXfeX6RIb/tFv5ZLO9jN2qA/kU8p3kt8nDZLc9g92qMnk38tnk+8kfkkfK
YXs2u3VN8r7kC8mPkj8nj5nT9jx2q/rkg8mXk58if0ceP5fthezWTclHkq8l
DyH/Qp4st+1+dqvW5OPJt5BfI/9NnjqP7eXs1h3Jp5HvIr9LHjav7Zns1lXI
e5DPIT9I/og8Sj7bs9utapP3I19MHkz+kjxWftvz2a0bkGvyFeRnyN+TJ/zP
9sJ2q2bko8jXk18k/0aevIDtJe3Wbcgnkm8lv0H+hzxtQdvL2606k08n30N+
jzx8Idsz262qkfckn0d+iPwJedTCtue0W/uTDyAPJD9O/oo8ThHb89utGpEP
JV9Ffpb8I3miop6eVeVD7+2OFzV9oNb17l2jwJubflz/QGffqPAxpqMFLGv/
HK03mM7demzr5dHgl03X79ileUB0+HfTurt/k+Qx4CmLeXpV38INbqB1KdPn
B6euMyMmvJ3pLyMi1aweCz7JdPLxb6pEjw3fbrrU1MsVTqL1TdPtZ+8pMyIO
/J/pqQsXl/CLC09X3NO7l40s+hutKpq+v6ZDwd3x4F1MR9hcI1/P+PCZpn13
/pcrZwL4XtO19qfI9hqtQk33PxIu8+qE8Ah+nl5y8kW6longWU2fPH/Bxycx
vLrpd1d2JL+DVr1NJ7w9P/GcJPD5pos+GBq/dlL4YdMtn7WJHTsZ/Klpc/pn
0Sp6CU9v/ZQn8pjk8Fymb/5IEr50CnjdEvL5TQkfKK3RaqnrqeAnXEerN677
wOOWFEerAtIqNbyx62g13PU08NXSfmh13l3v+CfpIMeTlJLHp4UXczsdvKXb
6eFjpQPRapO0Xwb4FelQtPoprTPCU5X2tk8meBnpILRuLx2QGT5FWmWB75DW
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
PL3l6u6zGVbD/UzPbzmwZKU18NamR30qvrvLWvh4012Hhcs+Yx18i+kGcU4s
270efs10mcBxSe5ugP82nSNH1clhNsFTD/Z0koNxImTYDC9nOnyVq/0rboF3
NP329pz3nbfCp5m+0b5R6+nb4LtMH/2R6s6u7fC7pjeMeVTjzg542CGenpNo
1Qm1C57J9LCV7Yum3w2vYrpjvuzbKuyB9zBdN/hDps574XNMl6i1Y9G0ffCD
prM+7Bt/1374I9MJuxUZd/sAPIqW63sInt1uVZu8H/li8mDyl+Sxhtqez27d
gFyTryA/Q/6ePOEw2wvbrZqRjyJfT36R/Bt58uG2l7RbtyGfSL6V/Ab5H/K0
I2wvb7fqTD6dfA/5PfLwI23PbLeqRt6TfB75IfIn5FFH2Z7Tbu1PPoA8kPw4
+SvyOKNtz2+3akQ+lHwV+Vnyj+SJxthe1G7dnHwM+Qbyy+TfyVOOtb2U3aod
+STy7eQ3yf+Rpxtne0W7dRfymeR7yUPJI4y3Pavdujp5b/L55IfJn5JHn2B7
LrtVXfKB5EvJT5C/IY870fYCduvG5MPJV5OfJ/9EnmSS7cXsVi3Jx5JvIr9C
/pM81WTby9it25NPId9hOkWPse+XO37b9JYvnYKqB8HVFPP9u2/NKb/RKoPp
Gz/zB6w+DK9kuuOgZDlrH4F3myLzj8JnSWu02u96MPyB62gVaar4MbivtEar
mq4fh/dxHa0Wun4CfsR1tHru+kl4jGniaJVHWp2C13MdrQa7fhq+zHW0OuX6
Gfhb6a5oFX+6t0MdLyhd/Sy8qXQQWo+QznkOvlY6EK0vSMc+D/8irdE66Qxv
v3fcTzrgAryVdAhajZf2C4Fvlt6MVtekfS7Cf0lPQavUM+X8L8HLmg5J9DnC
ILTqaHpJjufRfjo+1XS3cnfi9LkM32W6RFPPI9D6jum4fYJTdLsCDzvL0w8n
7U77Fq0zmt62cn3mDlfhVUwPPxiY4zladzdd69qMfK2uweeYTvd2TOGHaH3A
tGd3JZpehz8y7TlauTtoHXm2p2fma1Wl/g14dtOeqnUNrWuZzm/+w014P9MR
PeNC0HqRaXP4KrfgwaZXebZ7Gq1fmDanV+42PNYcT5vLEYzWeU0nNhu8A29g
2nP1hh1E6yGm96T1nNBd+ArTYwt7rhBanzZd31yAe/D3prN0OD1vK1onmOtp
z7TAHPfhhU17dOV6tA4wPd+TmUPho0ybh69E63Wmi5hPyAP4RdPRzUC0/mra
nE6Kh/Dk8zy9wXP689C6hGlzuRI9grcxbS7vDLSeYDqluUEew7eaNp++SWh9
3fQhz6c72hP4H9OTPbfHGLROM9/T5naK8BRe3nROcwHRutN8uV+fwafPl/sV
rXfPl/vV8Xvz5X59Dg+3QO5XtMq8QO7XF/CqC+R+RaueC+R+fQmfu0DuV7Q6
tEDu11fwxwvkfkWrqAvlfn0Nz7FQ7le08l8o9+sbeP+Fcr+iVeBCuV/fwo8t
lPsVrV4tlPv1HTz2Irlf0Sr/Irlf38MbLpL7Fa2GLpL79QN85SK5X9Hq7CK5
Xz/CPyyS+xWtEi2W+/UTvMhiuV/RqvliuV8/w0cvlvsVrTYslvv1C/zSYrlf
0er7Yrlfv8JTBMr9ilalAuV+/QZvGyj3K1pNCpT79Tt8W6Dcr2h1M1Du1x/w
v4Fyv6JVuiVyv/6EV1gi9ytadVki9+sv+Iwlcr+i1d4lcr/+ht+XDkKrCEvl
6/8feBZpv7/w6tLqH7yXdBBazXcfr3YYD3IfH8a0euo+Piw82jJ5PFrlktbh
4HWk/cLDB0qrCPAl7uPR6oT7+Ijw1+7jI8HjLpfHR4b/J63RqrHrUeDDXEer
1a5HhZ9zHa0+uR4NnniFOFoVk1bR4S1cR6uxrseAb3Qdra64HhP+w7R5fm0m
WqVa6et9vi4WvPRKuT5o1X6ld71/bPhkWf8SrXbIeh0HfkvWJ4gLV6u869ei
dfpVcn3jwSut8q6/itZdZX37+PBZsl4lgO+T1mj1wPWE8IirZb9o5btaju94
jdWyPhG8j7serRe46x0/4q5PDH8mHYRWMdbIfpLAc0v7JYXXk1bJ4IOkg9Bq
mfv45PCT7uNTwN+6j08Jj7fWalXQbt2EfAT5GvIL5J/Jk66zvbjdqhX5OPLN
5FfJf5H7rLe9rN26A/lU8p3kd8jDbLA9o926Mnl38tnkB8gfkkfeaHs2u1Ut
8r7ki8iPkr8gj7nJ9rx26/rkQ8iXk58mf0eeYLPthexWAeQjydeRh5B/JU+2
xfYSduvW5BPIt5BfJ/9Nnmar7eXsVp3Ip5HvJr9LHm6b7ZnsVlXJe5DPJT9I
/pg8ynbbc9ita5P3J19Mfoz8JXnsHbbns1s1JNfkK8nPkH8gT7jT9iJ262bk
o8nXk18i/0aeYpftJe1Wbcknkm8jv0H+lzztbtsr2K07k88g30N+nzz8Htuz
2K2rkfcin0ceRP6EPNpe23PareqQDyBfQn6c/DV5nH22/2e3bkQ+jHyV6c41
h9Tb7fg50+8rLo3aLxX8o+nupY7tL+gDT7zf058KP+/8E62Lmu6VN1rqfanh
LUx/9c1+eUAa+BjTfdPXGFkkLXyj6Z8pev73B60vmx6QcPaLA+ngP0z/ibl3
/uD08JQHPD040t0qxTPASx+Q/WeEt5PWaDXZ9Uzw7a6j1S3XM8P/SXdFq/QH
vR3qeEXp6lngXaWD0HqmdM6s8H3SgWgdKh3bFx7xkOwHrbNKv3e8hnRANnhv
6RC0WiDtlx1+WHozWj2T9skBjx7k7SlolVta5YTXNY3//45Wg0zj/6/ngi81
jf9/nht+0jT+/30e+BuZp/PC4x32zmudD17gsHde5fzwJoe98/L8Bx9+2Dsv
SQH4msOyv4Lw86aPVX0dXBWtPpset/DG2IWOJzni6Woefu14cdPxC2+JV7gQ
vKXpm2M9D0CrcaYXeR5+w/FNpptn7N08Y2H4VdMme6P1T9NmfLDjPkc97Zm+
JV4ReBnTZnlztOpg2hx+i+NTjsr5FIXvPCrng9a3j8r5OB4mWM7H8QzBcj7F
4JWD5XzQuluwnI/js4PlfIrD9wfL+aDVw2A5H8cjHZPz8YNnOybng9Y1j8n5
ON73mJxPCfhCt0vCj7pdCv7c7dLwmMely8DzSAeiVX1pv7LwwdKhaLVcWpeD
n5L2KQ9/Jx2E1vFPyJ+nCvBC0qoivKnbleAj3a4MXyut0SrE9SrwL6bx+xVa
JTvp6/39qyrc76SsrwZvfVLWo/V4d311+BZ3fQ34NXc9Wv1219eEpz4l62vB
y52S9Wjd8ZSsrw2f5q73h+9y16PVXXd9HXjY07K+LjzTaVmP1lVOy/p68B7u
+vrwOdIarQ663gD+yHW0inJGvCE8u7RGq9quN4L3cx2tFrveGB7sOlq9dL0J
PNZZcbTKJ62awhtIh6KVlg4KgK+QDmwGP+POaw5/Lx3QAp7wnNzfLeGFpX1a
wZtJq9bwUefk6ylarT8nX58dv3hOvp62gX87J1+f0Tr5eZnXFl7yvMxD6zbn
ZZ7jE8/LvHbwredlHlrdcOe1h/8xjdc3olXaC77e10d2gJc3jddXdoR3No3X
Z3aCTzeN1z92hu8xjddPdoHfuyDXsys8fIj3eJ26wTOHeI/XsDu8Woj3eBV6
wHuGeI+Xvyd8Xoj3eOl6wQ+FeI8Xtzf8SYicXx941ItyfLTKKa36wv1dR6sB
rveDB7qOVsdd7w9/5TpaxbkkPgCe327ViHwo+Srys+QfyRNdtr2o3bo5+Rjy
DeSXyb+Tp7xieym7VTvySeTbyW+S/yNPd9X2inbrLuQzyfeSh5JHuGZ7Vrt1
dfLe5PPJD5M/JY9+3fZcdqu65APJl5KfIH9DHveG7QXs1o3Jh5OvJj9P/ok8
yU3bi9mtWpKPJd9EfoX8J3mqW7aXsVu3J59CvoP8Nrm6bXsGu3Ul8m7ks8j3
kz8gj3THdl+7VU3yPuQLyY+QPyePcdf2PHbreuSDyZeRnyJ/Sx7/nu0F7VZN
yUeQryW/QP6FPOl92/3s1q3Ix5NvJr9G/os8dajtZe1WHcmnku8iv0Me9oHt
Ge1WVci7k88hP0D+iDzyQ9uz261rkfcjX0QeTP6CPNYj2/ParRqQDyFfQX6a
/D15gse2F7ZbB5CPIl9HfpH8K3nyJ7aXsFu1IZ9AvpX8uunk7Qreuuv4H9O1
Vvl8PDAQnuapp8c+iRR10SB4edNBad+lHjwY3sn012bXCjYZAp9u2jfwQI1i
Gr7bdIt7y9ulHAq/Z3pu8glD/6J1uGeeDmnQY+69YfDMpiPObbDl4HB4VdNF
r5c4tWgEvKfpHgkyPxg8Ej7X9JpasX80GQU/ZDp06rfYxUfDH5tOGHIvU6ox
8KjPPV0l5nG/f2idw/Twyhvq3R8L9ze9Z9yMrofGwfubfn9ywJjF4+GBpjNE
ahE4ZAL8mOnGZSrubjoR/sr09OG5QopPgsd+4enThxM/TzUZnv+FXP8p8Iam
8f8L0Wqoafx+NRW+UtbrafCzst5/OvyDrM8yA57opcyfCS/yUuajVfOXMn8W
fLSs17PhG2S9/xz4JVmfZS78uzt/HjzFK5mPVqVeyfz58LavZP4C+CRZ778Q
vk3WZ1kEvynr1WL4X3c+WqV7LfMD4RVey/wl8C6vZf5S+AxZn2UZfK+sV8vh
903j9yG0ivDG1/v7kONZTOP3oRXw6qbx+xBa93oj81bC57+ReWgd5M5z/Kk7
bxU82luZh1a53sq81fA60hqtBrq+Br7EdbQ64fpa+GvX0SruO/F18P/eefez
Da0av5P9r4cPe+fdX5IN8NXv5HzQ+pzM0xvhn2Renk3wxO+9856iVbH3cr6b
4S3ee+dV3gIf+172txW+8b338zkTra68l8/nNvgPWR+EVqk+yOd/O7z0B+/6
l2jV/oPsdwd8sqxPsBO+Q9avRetbst5vF1x9lPsRrdN/9K5vvxte6aPsfw+8
60c5X7Sa9VGuz174vo9yPdHqwUe5/vvgET/JvP1w308yD61rfJJ5B+B9Psk8
tF7wSeYdhB9x5x2CP3PnoVWMzzIvCJ77s8xDq3qfZd5h+KDPMu8IfNlnmYfW
J915R+Fv3XloHe+LzAuGF/wi847Bm0hrtBrh+nH4GrdPwC+4fRL+WdoPrZJ+
lXmOF5cOcryVtDoFH+euR6vNrp+GX3UdrX65fgbu800crcpKq7PwDq6j1VTX
z8F3fvNerwlodeeb/Hk8Dw/z3Xv9VqJVxu9yvS/AK3+X80Or7t/lz1sIfPZ3
77ybaHVA5rW+CH8o8z6hVeQfst9L8Gw/vPOiX4bX+iGff7Tu+8M7L8MV+KIf
8vUGrY/KPL+r8Bcy7yxax/zpnVf/GjzvT/l6gtb1f3rn9bgOH/JTrt8N+HK7
1Wnyd+QJftleyG4VQD6SfB15CPlX8mS/bS9ht25NPoF8C/l18t/kaf7YXs5u
1Yl8Gvlu8rvk4f7ansluVZW8B/lc8oPkj8mj/LM9h926Nnl/8sXkx8hfksdW
2SzPZ7dqSK7JV5KfIf9AnjCM7UXs1s3IR5OvJ79E/o08RVjbS9qt2pJPJN9G
foP8L3nacLZXsFt3Jp9Bvof8Pnn48LZnsVtXI+9FPo88iPwJebQItue0W9Uh
H0C+hPw4+WvyOBFt/89u3Yh8GPkq8nPkH8kTR7K9qN2qBfkY8o3kl8l/kKeM
bHtpu3U78snk28lvkf8jTx/F9op2q67kM8n3kYeSR4xqe1a7VQ3y3uQLyA+T
PyOPHs323HbruuSDyJeSnyR/Qx4vuu0F7FZNyIeTryE/T/6ZPEkM24vbrVuS
jyPfRH6V/Ce5T0zby9itOpBPId9Jfps8TCzbM9itKpN3I59Nvp/8IXmk2LZn
s1vXJO9LvpD8KPlz8phxbM9jt6pPPph8Ofkp8nfk8ePaXshu3ZR8JPla8hDy
L+TJ4tnuZ7dqTT6efAv5NfLf5Knj217Obt2RfBr5LvK75GET2J7Jbl2FvAf5
HPKD5I/IoyS0PbvdqjZ5P/LF5MHkL8ljJbI9n926AbkmX0F+hvw9ecLEthe2
WzUjH0W+nvyiafx7745/M73t18Stv27Ckyfx9M0/ZW/+uQUvmUQefwfeRlqj
1UTX78K3uo5WN1y/B//jOlqlTSp+H15eWqNVZ9dD4dNdR6s9rj+A35P2Q6vw
yWS945mlgxyvJq0ewnu669FqnuuP4IdcR6snrj+GR00ujlY5pdUTuL9pvH8S
Wg0wjfc3egoPNI3nq57Bj5vG+yeh9SvTeH+j5/A4KbJ5n796Ac9vGu+f9BLe
yDTe/wmth6aQ/b2Cr0rh3U+B1/CzKbz7+YBWH1N497P2DTxRSu9+WryFF03p
3U/yd/DmKb37uYpWY1J69zPpPXxDSu9+yn2AX04p1+cj/Lt0V7RKmcrboY6X
kq7+Cd5OOgitJ0nn/AzfLh2I1jelY3+B/5PWaJ3Ox9vvHa8oHfAV3kU6BK1m
Svt9g++V3oxWodI+3+ERUnt7ClpllVY/4NVTy/VGq96p5fP7Ez7fXf8Lfthd
j9ZP3fW/4dHTyPo/8Fx2q7rkA8mXkp8gf0MeN63tBezWjcmHk68mP0/+iTxJ
OtuL2a1ako8l30R+hfwnear0tpexW7cnn0K+g/w2ucpgewa7dSXybuSzyPeT
PyCPlNF2X7tVTfI+5AvJj5A/J4+RyfY8dut65IPJl5GfIn9LHj+z7QXtVk3J
R5CvJb9A/oU8aRbb/ezWrcjHk28mv0b+izx1VtvL2q06kk8l30V+hzysr+0Z
7VZVyLuTzyE/QP6IPHI227PbrWuR9yNfRB5M/oI8Vnbb89qtGpAPIV9Bfpr8
PXmCHLYXtlsHkI8iX0d+kfwrefKctpewW7Uhn0C+lfw6+R/yNLlsL2+37kQ+
nXw3+T3ycLltz2y3rkrek3wu+SHyx+RR89iew27lT96fPJD8GPkr8th5bc9v
t25IPpR8JflZ8g/kifLZXsRu1Zx8NPkG8kvk38lT5Le9lN26Lfkk8m3kN8n/
kqf7z/YKdqsu5DPI95LfJ49QwPYsdqvq5L3I55MHkT8lj1bQ9lx26zrkA8mX
kJ8gf00et5Dt/9mtGpMPI19Nfo78E3niwrYXs1u3IB9LvpH8CvkP8lRFbC9t
t2pPPpl8B/ktclXU9vR2q0rkXclnke8jf0AesZjtvnbrGuR9yBeQHyF/Rh6j
uO257Vb1yAeRLyM/Sf6WPJ6f7QXt1k3IR5CvIb9A/pk8aQnbi9utWpGPI99M
fpX8F7lPSdvL2q07kE8l30l+hzxMKU/riWuXPHI8o+kTg0LqnP4Lr2w6Zuev
0bb8g3c37d8k+eHZaqfx2aYXVi3Ze3AY0+qA6cfF2mZtFRb+0HTWHJNCK4WD
Ry7t6e6pts/MHR6ezfSeWLcqJokAr1Va9hcR3tc0Xm+AVotM4/UBjh81jf+f
7/gL03j9QiR4zDLeeRqt8pbxzjvreP0y3nlJIsOHlPHOa43Wy8t4521z/LTM
U1Hg72ReZbRKUFb253ihsrI/xwPKyv6iwkeWlf2h1bqysj/HQ2RekmjwrzKv
NVonKyf7c7xEOdlfdHhraY1WE1yPAd/iOlpddz0m/Ld0AFqlKe/tIMfLSfvE
gneS1mg9TTrU8d3SfrHhd6UD0SpcBTl+HHgmaY1WVV2PC+/hOlrNdT0e/KBp
/H0ftHpsGn+/yPEoFbN5/75PfHgO0/j7RWhd2zT+vk8CeH/T+PtFaL24ohwv
IfxYRTkeWr+sKMdzPHYlOV4ieL5Kcjy0alhJjpcYrivJ8dBqZSU5XhL4GbvV
B/KElW0vYrduRj6afD35JfJv5Cmq2F7SbtWWfCL5NvIb5H/J01a1vYLdujP5
DPI95PfJw1ezPYvduhp5L/J55EHkT8ijVbc9p92qDvkA8iXkx8lfk8epYft/
dutG5MPIV5GfI/9Inrim7UXtVi3Ix5BvJL9M/oM8ZS3bS9ut25FPJt9Ofov8
H3n62rZXtFt1JZ9Jvo88lDyiv+1Z7VY1yHuTLyA/TP6MPHod23PbreuSDyJf
Sn6S/A15vLq2F7BbNSEfTr6G/Dz5Z/Ik9WwvbrduST6OfBP5VfKf5D71bS9j
t+pAPoV8J/lt8jANbM9gt6pM3o18Nvl+8ofkkRrans1uXZO8L/lC8qPkz8lj
NrI9j92qPvlg8uXkp8jfkcdvbHshu3VT8pHka8lDyL+QJ2tiu5/dqjX5ePIt
5NfIf5Onbmp7Obt1R/Jp5LvI75KHDbA9k926CnkP8jnkB8kfkUdpZnt2u1Vt
8n7ki8mDyV+Sx2puez67dQNyTb6C/Az5e/KELWwvbLdqRj6KfD35RfJv5Mlb
2l7Sbt3GdD2fP/vrOj7RdMILTXtsc3yr6SuDjmSOlRR+w/Q03/Sh7dH6j+ka
t0fPOu542laejjXuZeU0yeDlTZ8rUCXcYLTqbHr8s017bjo+3XSFWXG75ksO
32M6UpleGaai9T3Txz9dv/Pa8fCtPT1iaaHp5VPAM5suWWNhheVoVa21nF9K
eE9pjVbzXE8FP+Q6Wj1x3QcetY04WuWUVqnh/q6j1QDX08ADXUer466nhb9y
Ha3itBVPB88vrdGqkevp4UNdR6tVrmeAn3UdrT66nhGeqJ04WhWVVpngzV1H
qzGuZ4ZvkM6JVpelAxz/Lj3F8ZTtvR3keCnp9463k/bJAp8kXR2ttktrx29K
b3b8n3So4+k6eDt2VnhFaT+07iLd1fGZ0oGO75UOcTxUWvnCI3SU/aFVVulA
x6tLv3e8t7RfNvh86SlodVg61PGn0jmzw6N3kvNH61zSIY7XlfbJAR8o3RWt
lkoHOX5COnZO+BvpALSO21mur+MFpFUueGNpjVbDXc8NX+06Wp13PQ/8k2m8
HxJaJemSzft+SI4XM433Q3K8pWm8H1Je+FjTeD8ktNpkGu+H5PgV03g/pHzw
n6bxfkhonaprNu/7ITlexjTeDyk/vL1pvB8SWk0xjfdDcnxHVzmf/+C3u8r5
oLXqJufjeIZucj6OV+om51MA3q2bnA9az+om5+P4/m5yPgXhD7rJ+aBVpO5y
Po77dpfzKQSv2V3OB637dJfzcXxhdzmfwvAjdqvn5DF62J7Hbl2PfDD5MvJT
5G/J4/e0vaDdqin5CPK15BfIv5An7WW7n926Ffl48s3k18h/kafu7ekkE7o2
Kup4WdOzb786N8/xjqYTZm1T/LvjU03P7P9ws38R+C7T8U83TrMNre+Ynp7k
5vTYReFh+3g6brvaETqjdUbTU3df6H3G8SqmY0eu9DxTMXh305PrHq8/Cq3m
mI65qsSZR44fMD3x6/4iJYrDH5mOXrbAxkVoHbmv+X4/c1uq345nNx31Sfap
9f3gtUyPzbs27C606mc68oj0PeOXgC8yPfpy4JNuaBVsOmLa5HUvOP7C9Mju
s0/6loTH6ufp8EfiFhqH1nlND48zad0zxxuYDtssSooypeBDTA/dPGLSUrRa
0U8+H6Xhp+1W78kT9Le9sN06gHwU+Tryi+RfyZMPsL2E3aoN+QTyreTXyf+Q
pxloe3m7dSfy6eS7ye+Rhxtke2a7dVXynuRzyQ+RPyaPOtj2HHYrf/L+5IHk
x8hfkcceYnt+u3VD8qHkK8nPkn8gT6RtL2K3ak4+mnwD+SXy7+Qphtpeym7d
lnwS+Tbym+R/ydMNs72C3aoL+QzyveT3ySMMtz2L3ao6eS/y+eRB5E/Jo42w
PZfdug75QPIl5CfIX5PHHWn7f3arxuTDyFeTnyP/RJ54lO3F7NYtyMeSbyS/
Qv6DPNVo20vbrdqTTybfQX6LXI2xPb3dqhJ5V/JZ5PvIH5BHHGu7r926Bnkf
8gXkR8ifkccYZ3tuu1U98kHky8hPkr8ljzfe9oJ26ybkI8jXkF8g/0yedILt
xe1WrcjHkW8mv0r+i9xnou1l7dYdyKeS7yS/Qx5mku0Z7daVybuTzzZd8/BO
9cvxA6ZL5p2mfpeBPzSda1Un9acsPPJkT6dOWkH9LQfPZjr2xHTqX3l4rcky
vyK8r2n8/Qe0WmQar2d3/Kis146/kPVrHY85xbv+quN5p8j8SvD6U2Q+Wg2R
9f6OL5f12vHTsn6t4+/c+Y4nmCrzK8ML2a0CyEeSryMPIf9Knmya7SXs1q3J
J5BvIb9O/ps8zXTby9mtOpFPI99Nfpc83AzbM9mtqpoOGVE83l/He5hue2Rx
lCFV4XPd9dXhB6UD0eqxtF8NeJSZ3g5FqxzSuia8trRPLXh/6SC0XiwdUBt+
TFr5w1/arWLPsj2f3aohuSZfSX6G/AN5wtm2F7FbNyMfTb6e/BL5N/IUc2wv
afruzzglFjje1nT1drFOF6kDn2j6yPXote6i1TbT+cpGvTOoLvyG6dXbI7VK
WQ/+13SytBHeHkTrtHM9PXFq2D5N68MrzJXjN4B3No3XT6DVDNN4fUVD+B7T
eP0FWt03jddnNIKHn5fN+/oNtMpiGq/vaAyvNk+O1wTea54cD63nzZPjNYUH
zZPjofWTeXK8AHi0+XI8tM45X47XDF5nvhyvOXyAdABaLZEOcvy4tE8L+Gtp
jdZxFsj97/h/0n4t4Y2kA9FqmLRqBV9ltzpH/pE88ULbi9qtWpCPMZ25x7zS
ixzfaPro2eLh67aGXzbdJMOTo7HawH+Y/j5k3PCTaJ1ykaen38xRamhbeGnT
2fJcDVuoHbyd6RMT+h/5iFaTTTd/mmrYuvbw7aZ/Fz9WomUH+C3Ts+a2D5Oi
I/yf6VyfYh2+ilbpF3v6TOUdelIneEXTrVc28CvXGd51sZxfF/hMu9U+8lDy
iIG2Z7Vb1SDvTb6A/DD5M/LoS2zPbbeuSz6IfCn5SfI3potE3L+ls+Pxlnr6
T/ick+p1hRcwfTDc8vYlu8GbmB4SNnE53+7w4aaLh5mQNmEP+JqlMr8n/Lzp
lOYDrT6bLmI+HE+yzNMNzIfjxU33NR+OtzQ9e5bnw/Fxpnds93w4vsn05Uue
D8evmv7w3vPh+E/TscxHL7jPcnP/mQ+0LmO6kvlwvIPpdubD8Smmx4z2fDi+
0/TKFZ4Px2+bDj7q+XA8zApPP3zg+XA8wwq5Hr3hlVfI9UDrbivkejg+e4Vc
D8f3r5Dr4fjDFXI9HI+0Uq6H49lWyvVwvOZKuR6O910p16MPfOFKuR5odXSl
XA/Hn6+U6+F4zFVyPRzPs0quh+P1V8n1cHzwKrkeji9fJdejL/yU3eodefzV
theyWzclH0m+ljyE/At5sjW2+9mtWpOPJ99Cfo38N3nqtbaXs1t3JJ9Gvov8
LnnYdbZnsltXIe9BPof8IPkj8ijrbc9ut6pN3o98MXkw+UvyWBtsz2e3bkCu
yVeQnyF/T55wo+2F7VbNyEeRrye/SP6NPPkm20varduQTyTfSn6D/A952s22
l7dbdSafTr6H/B55+C22Z7ZbVSPvST6P/BD5E/KoW23Pabf2Jx9AHkh+nPwV
eZxttue3WzUiH0q+ivws+UfyRNttL2q3bk4+hnwD+WXy7+Qpd9heym7VjnwS
+Xbym+T/yNPttL2i3boL+UzyveSh5BF22Z7Vbl2dvDf5fPLD5E/Jo++2PZfd
qi75QPKl5CdMV5h7bdo5x9+YXtK/b6/l/eBx93j6R8Ok9Qb0hxcwXb3o/kI1
B8Abm16dskmKzAPhw/fI/EHw1dIarc67Phj+yXW0SrJXfAi8mGn8fQm0amka
f7/C8bGm8fcxNHyTafz9DbS+4s4bCv/pzkPrVPtknuNl9sm8YfD2+2QeWk3Z
J/OGw3fsk3loddud57jaL/NGwDPsl3loXWm/zBsJ77Zf5qH1rP0yz/H97rxR
8AfuPLSKdEDmjYb7HpB5aFXzgMxzvM8BmTcGvvCAzEPrI+68sfDn7jy0jnFQ
5jme56DMGwevd1DmodXggzJvPHyZdABanZIOcvyttM8EePxDcr+gdUHpUMeb
SvtNhI+QDkSrtdJqEvyCaTxfiFZfTOP5QceTBsn6yXC/IFmP1q2CZL3j4931
U+CbpTVaXXN9KvyX62iV+rD4NHhZaY1WHV2fDp962Hv8LGi167Dsz/E77uMd
D3tE9ut4xiPe9Vcdr3JE5s+Ad5fWaDXH9ZnwA66j1SPXZ8EjHxVHq+zSaja8
luto1c/1OfBFrqNVsOtz4S+OyvmjVaxgOX/H8wbL4x1vECzn7/gQWX/V8RWy
Xs2Dn3Yfj1bvXZ8PT3DMalXYbh1APop8HflF8q/kyY/bXsJu1YZ8AvlW8uvk
f8jTnLC9vN26E/l08t3k98jDnbQ9s926KnlP8rnkh8gfk0c9ZXsOu5U/eX/y
QPJj5K/IY5+2Pb/duiH5UPKV5GfJP5AnOmN7EbtVc/LR5BvIL5F/J09x1vZS
duu25JPIt5HfJP9Lnu6c7RXsVl3IZ5DvJb9PHuG87VnsVtXJe5HPJw8if0oe
7YLtuezWdcgHki8hP0H+mjxuiO3/2a0akw8jX01+jvwTeeKLthezW7cgH0u+
kfwK+Q/yVJdsL223ak8+mXwH+S1yddn29HarSuRdyWeR7yN/QB7xiu2+dusa
5H3IF5AfIX9GHuOq7bntVvXIB5EvIz9J/pY83jXbC9qtm5CPIF9DfoH8M3nS
67YXt1u1Ih9Hvpn8Kvkvcp8btpe1W3cgn0q+k/wOeZibtme0W1cm704+m/wA
+UPyyLdsz2a3qkXel3wR+VHyF+Qxb9ue125dn3wI+XLy0+TvyBPcsb2Q3SqA
fCT5OvIQ8q/kye7aXsJu3Zp8AvkW8uvkv8nT3LO9nN2qE/k08t3k/3N111FR
bVEcx4+t2Aq22K3YLYrd3Y3d3fmO3d2BYnc3Fipidze2qCh265uz9z2z1v7x
33d9zux77r0DD3jj8AA82iPp2WWrWuD9wBeBHwF/Bh4nTHpe2boB+FDw5eAn
wV+DJ3osvbBs1Rxcg68FPwf+ATzZE+mlZOs24BPAN4NfBf9melVolVEH2dM+
dfWP5JuzDF9KXs40/f/+APLOptcG9e35h1pPM/0n7s0kR5aR7zJdv2XxfSOX
k982vXHr0uZlAsn/PrXHX0Ge6ZmrKyVv2b8utapqeqpP0KuV7D1NX6mYvOVn
9rmmXcuvVFxJfsC0yQXU6pHpVVPMAPLoz10dvnKKT4lV5DlN53XpFGpd27Tr
4ckfsA8wbdhnNfni585+NbUKfu7s9wr78+fOfjOuIY/7wtlvf2qd74Wz35Ps
jV44+02+lnzYC2e/nanVihfOfoPYQ184+427jvztC2e/Lal14pfOfreyF31p
r+968hbu3kA+2t0bydfZ1tTqgts3kX80TX/fiFqleJXH+XmZ3feVs95vM3m7
V876jdR6ol3vtYV8q12vqfU1u/41+w+7vuFWcu9wZ30wtaoQ7qzPuY28S7iz
fh61mmHXq+3ku21ranXX7TvI/7mdWmV5bX0neTXbmlr1dvsu8nlup1YH3b6b
PMzt1CrmG+t7yHPZ1tSqrtv3kg90O7Va6vZ95MfcTq1eun0/eby31qlVAdvq
AHljt1OrEW4PIl8pW50GjwBPGiG9mGzVCnwM+Abwi+CfwVO+k15Gtm4PPhl8
G/gN8J/g6d9LryhbdQOfCb4X/B54lEjpWWWrGuB9wBeAHwJ/Ah7rg/Q8snU9
8MHgAeAnwF+BJ/govaBs1RR8JPhq8DPg78E9P0kvIVu3Bh8HvhH8MvgX8NSf
pfvJVh3Bp4DvAL8J/hs8wxfplWXr7uCzwfeBPwCP+lV6dtm6Jng/8IXgR8Cf
gsf5Jt1HtmoAPgR8OXgI+GvwhN+lF5atm4Fr8DXg58AjwZP9kF5StmoDPh58
M/gV8G/gaX5KLydbdwKfBr4T/Db4H/BMv6RXka16gs8BPwD+EDz6b+k5ZKva
4P3BF4MfBX8O7vFHej7TX7O3mHGcvaHpCq6PEPZhpue0zv3jJHug6cdDPbee
Yg81nW/+77Zn2N+YHrnjWfJz7In/5rF/D5K8iOnUr3aPusjewnTXaAFFLrOP
Mr3fe9ybK+zrTMcq0SPwGvt50/T9GvtH06t7+3rcYk/+z9Ufp2Q5epvd13TZ
dfH732Vva3rG8S/Z77NPNP3wgeuDfYtp19nOfsR+zfQwz62VH7N/N30m7/zf
T9i9lU9E2RTVXWfMXt40vb8eexfTe0bVSv2Kfbppc7rh7LtN1zMnzH7HdOC1
mCUi2P+Zfv/O9cGeOYqrXWe7KpK9mumpWY42+cjey/Rdv3XxP7PPM53DdXu/
sAeZHuT6+MYeZjp0tusGs8eI6mpzuj/Zc5luZ06YvY5p1+2t/pd9oGl6Ph0k
XyJbHQN/AR4vmvT8slVj8OHgK8FPgUeAJ4kuvZhs3RJ8DPh68Ivgn8BTxpBe
WrZqDz4JfBv4dfCf4OliSq8oW3cFnwm+B/weuIolPatsXR28D/h88EPgj8Fj
xZaeW7aqBz4IPAD8OPgr8PhxpBeUrZuAjwRfBX4G/B24p4f04rJVa/Cx4BvB
L4F/AU8VV7qfbN0BfAr4dvCb4L/AM8STXkm26g4+C3wf+H3wqPGlZzNd6OaE
0J/sNd1+mLyvbU2tFrr9CPlht1Orp24/Sh47gY/zehBq5ZPA+Xrfkb2+af77
w+RDTNN//9iXJbDzgslD3POodbh7HnvChHYee6GEdh57s4R23jHy/2z7Uas1
tjX7WdvB7JHuxx8n90pk11OrkrbVCXJ/237Uarx7Pfsm28HsV9yPDyH/6n48
tUqT2D6evaztYPZOttVJ8qm2/ajVTvfj2W+5H8/+x/34UPKMSezjqVUV25q9
h+1g9jm21Sny/bbTU6uH7nns0ZI67c+ew7Zmr2U7kL2/7WD2RbbD2I/aVqfJ
nyV1nh9rqZWHp/N8qHGGPK+n83z6RK0aetrnz1nyoZ52v+fIAz2deS+o9Uk7
b+p58jd2XsEL5Im8nHl3qFURL3t+F8mbeznzsl4iH+Vln6/Ueq2XM6/fZfLz
dl7KK+Qf7LxgapU8mf18uEpeKpmP/fvM5G2TOfN2UesJyZx5Ta+Tb0lmr98N
8quy1XfwtMmll5etO4NPB98Ffgf8L3jmFNKryla9wOeCB4E/Ao+RUnpO2aoO
+ADwJeDB4C/A46aSnl+2bgQ+HHwF+Cnwt+BJUksvKlu1BB8Nvh78Avgn8BRp
pJeWrduBTwLfCn4d/Ad4urTSK8hWXcFngO8BvwuuvKVnka2qg/cGnw9+EPwx
eMx00nPL1nXBB4EvBT8O/hI8fnrpBWSrJuAjwFeBnwZ/B540g/TisnUr8LHg
G8AvgX8GT5VRehnZqgP4ZPDt4DfAf4GnzyS9kmzdDXwW+F7w++BRMkvPJlvX
AO8LvgD8MPgT8NhZpOeRreqDDwZfBn4CPBw8QVbphWTrpuD/ga8GPwv+Htwr
m/QSspU/+DjwTeCXwb+Cp84uvaxs3RF8KvgO8Fvgv8Ez5pBeWbbqAT4bfD/4
A/BoOaVnl61qgfcDXwR+BPwZeJxc0vPK1g3Ah4IvBz8J/ho8UW7phWWr5uAa
fC34OfAP4MnySC8lW7cBnwC+Gfwq+DfwtD7Sy8lWncGnge8Cvw3+FzxTXulV
Zeue4HPBD4A/Ao+eT3pO2bo2+ADwxeDB4M/B4+aXnk+2agQ+DHwFeCj4W/DE
BaQXla1bgI8GXwd+AfwjeIqC0n1lq3bgE8G3gl8D/wHuXUh6Bdm6C/gM8N3g
d8H/gWcpLL2abNUbfB74QfAw8JhFpOeSreqCDwRfCn4M/CV4vKLSC8jWjcFH
gK8EPw0eAZ60mPRislUr8DHgG8Avgn8GT1lcehnZuj34ZPBt4DfAf4KnLyG9
omzVDXwm+F7we+BRSkrPKlvVAO8DvgD8EPgT8FilpOeRreuBDwYPAD8B/go8
ga/0grJVU/CR4KvBz4C/B/csLb2EbN0afBz4RvDL4F/AU5eR7idbdQSfAr4D
/Cb4b/AMftIry9bdwWeD7wN/AB61rPTssnVN8H7gC8GPgD8Fj1NOuo9s1QB8
CPhy8BDw1+AJy0svLFs3A9fga8DPgUeCJ6sgvaRs1QZ8PPhm8Cvg38DTVJRe
TrbuBD4NfCf4bfA/4JkqSa8iW/UEnwN+APwhePTK0nPIVrXB+4MvBj8K/hzc
o4r0fLJ1Q/Bh4IHgoeBvwBNXlV5EtmoBPgp8Hfh58I/gyatJ95Wt24JPBN8C
fg38O7h3denlZasu4NPBd4PfAf8HnrmG9GqydS/weeBB4GHgMWpKzyVb1wEf
CL4E/Bj4C/B4taTnl60agw8HXwl+CjwCPElt6cVk65bgY8DXg18E/wSeso70
0rJVe/BJ4NvAr4P/BE9XV3pF2bor+EzTawaPqjH5Jvke0x5/F1WeQq3ume41
Zme5qeyqnquvxz7nO409q+ni058Wm85e3fSypL8LzmDvYzraIs+8M9nnm+7s
nSfnLPZDpi+sqphlNvtj0wVytEo/hz1WfVcv2Dow9Vz23KZd05PNY69nus2B
dYnnsw8yHVo6ON4C9gDTuUJux1rIftz0zKofoi5if2X6y8U4f7l1/AaubtYg
44/F7AVNH71T4vMS9iamM7eu/34p+0jTk551ex3Avsr0uy5jny9jP2PatTps
Ofs70/v777kXyO7Z0NVpf164uYK9uOnR/724spK9temX0f+dX8U+1nTNyclP
r2bfaHpnwnwn1rBfMp18XpUja9m/mB6eynWF2FM1cvXj5UN2r2f3M10py+xt
G9g7mKbXu7NPMZ3INX4T+3bTA1zb38x+0/Rd1+XZwv7LdBnX5d/KnqGxq1e7
bu829kqm47iePtvZu5vuWafRxB3ss0xfu9FzzE72faaLNZ8wchf7fdMBYa4T
YI/axNVRO7quKHs2053eXO61l72m6fO9w7vuY+9rOv/XKB33sy80PX+Y6wKx
Hzb9SxVsEcT+1LT/+OqND7LHburqk3Hb1zvE7mM656zhNQ+z1zftenZWOcI+
xLTr6pQ/yr7MdNMMrmcoe4jpI2sfFj/GHm46U+5vhY6zJ2zm6ok7XDeYvZDp
iCLZc4WwNzNd75Bf1pPs/5neZ47AvsZ0mlN90pxiP2va9dme/DR7pGnXsy3J
GXav5q6u0fhg/LPsJU3vuH8t9jl2f9PJ2r6Ndp59vOlh5gnKvsl0WHfzjCa/
Yrrix8JfLrJ/Nb1xUK3IS+xpWrg64Z+Oby6zlzXd33wCsHcyfSfWwsdX2aea
Lj1t+/1r7DtNr0py5tZ19lumY7uW32D/Y7qH2Q57xpauvuo63VvsVUwXdV3O
2+w9TC913a477HNMR3E9He6y7zdtnm732B+aNk/n++zRWrnafLo8YM9h2nw6
PmSvZdp8uj9i72/afDkJY19k2ny5esx+1LT5cviE/Zlp8+X2KbtHa1d/6lx3
0jP2vKabmC9A7A1NH+7nuqDsQ027vroNfckeaNr12TXgFftJ06672zuc/Y3p
uuYLHHsif1fvTeC6YexFTKee69X2LXtz0zqlT8sI9lGmXyyr1OQd+1rT1c0X
UPbzprdvcD0h2D+Y9srr+grNnryNq4fuXl/hI3sp04+KHyvzib2t6QrmCzT7
BNMbKriecOxbTCc465H/K/tV0/1quz7D2L+bvn29ZLbv7GnbutrX/AeAvbzp
lY9cT2j2zqZjdRiX4hf7dNPdXwck/c2+y/SVXq4rxH7HdBHzHxj2v6aXDHV9
wrBnbmf/e3yLvKps1Qt8LngQ+CPwGO2l55St6oAPAF8CHgz+AjxuB+n5ZetG
4MPBV4CfAn8LnqSj9KKyVUvw0eDrwS+AfwJP0Ul6adm6Hfgk8K3g18F/gKfr
LL2CbNUVfAb4HvC74KqL9CyyVXXw3uDzwQ+CPwaP2VV6btm6rumnk3Nt3c8+
yPTLPPcPDLlNvtT0m8tTT5a4Q37c9Pt+vld+UeuXpj8le3f/0F3y+N1c/f3A
slcj7pEXMP27Re3Ppe+TN+lmj/+AfIRper0TtVplml5/xH7aNL2eiv2daXp9
E3vS7nbeQ/Li3e08at2qu53HPra7nce+obudx37JPe8R+Wf3PGqVqoedx16m
h53H3qGHncc+uYedF0a+vYedR61vuOex/3LPY0/f085jr9TTzntM3k22mgW+
F/w+eJRe0rPJ1jXA+4IvAD8M/gQ8dm/peWSr+uCDwZeBnwAPB0/QR3oh2bop
+H/gq8HPgr8H9+orvYRs5Q8+DnwT+GXwr+Cp+0kvK1t3BJ8KvgP8Fvhv8Iz9
pVeWrXqAzwbfD/7A9Jxf16v0Z482wNXny9ZcHu8JeXbT0See/LKaWtUyXeqi
bw3fp+T9TA/w3LvyBrVaZHpLM58fPZ6RHzH9InBt7ZjPyZ+Z9n7pvXYZtY4z
0NWN8yz4XeQFeV7TM/olrH+JWjcwffrAhA2dXpIPHWj3/4p8uWx1Evw1eKJB
0gvLVs3BNfha8HPgH8CTDZZeSrZuAz4BfDP4VfBv4GmHSC8nW3UGnwa+C/w2
+F/wTEOlV5Wte4LPBT8A/gg8+jDpOWXr2uADwBeDB4M/B487XHo+2aoR+DDw
FeCh4G/BE4+QXlS2bgE+Gnwd+AXwj+ApRkr3la3agU8E3wp+DfwHuPd/0ivI
1l3AZ4DvBr8L/g88i5ZeTbbqDT4P/CB4GHjMUdJzyVZ1wQeCLwU/Bv4SPN5o
6QVk68bgI8BXgp8GjwBPOkZ6MdmqFfgY8A3gF8E/g6ccK72MbN0efDL4NvAb
4D/B04+TXlG26gY+E3wv+D3wKOOlZ5WtaoD3AV8Afgj8CXisCdLzyNb1wAeD
B4CfAH8FnmCi9IKyVVPwkeCrwc+Avwf3nCS9hGzdGnwc+Ebwy+BfwFNPlu4n
W3UEnwK+A/wm+G/wDFOkV5atu4PPBt9n+mSGtvPmsD8w/aqR99084eRRp7o6
7tS73qepVXbTPsfmt2v7mrym6bpf663/Ta36me6fK2HE/DfkC00v8D+XP/9b
8iOmg+ZNGHiOWj81/eBs+YMdIsjjTLP7e0fuI1s1AB8Cvhw8BPw1eMLp0gvL
1s3ANfga8HPgkeDJZkgvabpBqZp/M7O3MR1850rfTuzjTecZ1OjlBvbNphd7
3mv+lv2K6Vg7W1/2eU/+zXS/2s8q9KHWaWa6Ouxt5wO72MuZrjk5Is9X9k6m
g7L1XVksknya6awnvyYbRq13mp7TdtiUw+y3Z9r9fyD/4+6P5Jlm2f5EXsU0
/XsratXTNP18zD7HNP17KvYDpunn68/kD+08Ta2iz3bmnWfPMduZl/ILee3Z
zryO1Lr/bGfeLvbFs+3+vpIftfNqUKvndt4ido85dn/s+ebY/X0jbzjH7o9a
DZtj98ceOMfu7zt5qJ3XkVq/sfN2sSeea/f3g7zIXLs/atVirt0f+6i5dn/s
6+ba/f0kP2/naWr10c47z558nt3fL3LfeXZ/1LrtPLs/9onz7P5+k28xTe/H
RK2umab3b2L/btdrdu/5zvqN7OXnO+tvsHeZb+f/IZ9u259a7bYdzH7Hdvq/
5P9sa2qdeYHTYezVbPv9I+9lO5BazbOt1D7jQQvs+VGrsAX2/NhjLLTHY8+1
0J4fe52F9vzYB9r1Kgr5EtnqGPgL8HiLpOeXrRqDDwdfCX4KPAI8yWLpxWTr
luBjwNeDXwT/BJ5yifTSslV78Eng28Cvg/8ET7dUekXZuiv4TPA94PfAVYD0
rLJ1dfA+4PPBD4E/Bo+1THpu2aoe+CDwAPDj4K/A4y+XXlC2bgI+EnwV+Bnw
d+CegdKLy1atwceCbwS/BP4FPNUK6X6ydQfwKeDbwW+C/wLPsFJ6JdmqO/gs
8H3g98GjrpKeTbaqCd4XfCH4YfCn4LFXS/eRreuDDwFfBh4CHg6ecI30QrJV
M/D/wNeAnwWPBPdaK72kbO0PPh58E/gV8K/gadZJLytbdQKfCr4T/Bb4H/CM
66VXka17gM8B3w/+EDzaBuk5ZOta4P3BF4EfBX8G7rFRel7ZqiH4UPBA8JPg
b8ATbZJeRLZuDj4KfC34efAP4Mk3Sy8lW7UFnwC+Bfwq+HfwtFukl5etO4NP
B98Ffgf8L3jmrdKryla9wOeCB4E/Ao+xTXpO2aoO+ADwJeDB4C/A426Xnl+2
bgQ+HHwF+Cnwt+BJdkgvKlu1BB8Nvh78Avgn8BQ7pZeWrduBTwLfCn4d/Ad4
ul3SK8hWXcFngO8BvwuudkvPIltVB+8NPh/8IPhj8Jh7pOeWreuCDwJfCn4c
/KXpO+3n1CwSlTz+Xle/iIg3aUg08gKmPw0cH3IoOnmTvfbxMclH2A6kVqts
+8UiP207jFq9s61jkyfd53T6OOTFbQdT61a2/T3Ix9pWcck32A6kVpds+8Uj
/2w7jFql2m+PH5+8jO30Ccg72A6m1pNt+yck325bJSK/YZreT5pa/TJN7++c
mDz9AR/n/aypVSXT9P7SSci7mab3e6ZWs0zT+1snJd9rmt5vmlrdN03v/+xJ
HiXIx3m/a2qVzTS9/7QXeY0gu99k5H2D7H6p9YIgu9/k5IeD7H6p9ZMgu98U
5LEP2v1S6zwH7X5Tktc/aPdLrQcftPtNRb7soN0vtT5x0O43NXn4QbvfNOQJ
Dvk4P29Tq0Km6edr9qaH7Pq05P+511Pr1e717Gfd673J37vXUyuvw3Y9e4nD
dn06cv/Ddj21Hudez77JvT49+WX3emr11b2ePfURuz4Dedkjdj217njErmef
6l6fkXyH7TrU6pbtQPbftiPZMx61nx+ZyCvbnkmtetgOY59tO19m8v22NbV+
YPsye7Rg+/mUhTy77d7UqpbtYPZ+thNlJV9k259aH7G9nf2ZbZWNPM4xH+fv
s1OrvKbp77GzNzBNf3+dfahp+vvu7MtN099zZz9pmv5+O/vrY/Z42ckTHbfH
o9aFj9vjsTc/bo/Hro/b47GvPW6Px37uuD0e+4fj9ng5yJOdsMejVqVO2OOx
tzlhj8c+4YQ9HvvmE/Z47FdP2OOxfzthj5eTPG2IPR61Lhdij8feOcQej31a
iD0e+64Qezz22yH2eOx/Q+zxcpFnOmmPR62qnrTHY+950h6Pfe5Jezz2Ayft
8dgfnbTHY48eao+XmzxnqD0eta4dao/HPiDUHo99cag9HntwqD0e+/NQezz2
uKfs8fKQ55OtGoEPA18BHgr+FjzxaelFZesW4KPB14FfAP8InuKMdF/Zqh34
RPCt4NfAf4B7n5VeQbbuAj4DfDf4XfB/4FnOSa8mW/UGnwd+EDwMPOZ56blk
q7rgA8GXgh8Dfwke74L0ArJ1Y/AR4CvBT4NHgCe9KL2YbNUKfAz4BvCL4J/B
U16SXka2bg8+GXwb+A3wn+DpL0uvKFt1A58Jvhf8HniUK9KzylY1wPuALwA/
BP4EPNZV6Xlk63rgg8EDwE+AvwJPcE16QdmqKfhI8NXgZ8Dfg3tel15Ctm4N
Pg58I/hl8C/gqW9I95OtOoJPAd8BfhP8N3iGm9Iry9bdwWeD7wN/AB71lvTs
snVN8H7gC8GPgD8Fj3Nbuo9s1QB8CPhy8BDw1+AJ70gvLFs3A9fga8DPgUeC
J7srvaRs1QZ8PPhm8Cvg38DT3JNeTrbuBD4NfCf4bfA/4JnuS68iW/UEnwN+
APwhePQH0nPIVrXB+4MvBj8K/hzc46H0fLJ1Q/Bh4IHgoeBvwBM/kl5EtmoB
Pgp8Hfh58I/gycNcPXru4cM12H1Nb1nS/MtS9ramb638kTuCfaLpqBsXtPf1
Id9iOveOwkunUatrphvvv3btAft306OO9onrk5fc+7GrN4cmLD+SWpc3ffPC
lqEX2buYjnKj+k7vfOTTTee6Hx7ek1rtNt3o6YQMR9nvmNavszRNmJ/8n+lN
H07MbE2tMz9x9Y3vbU5vY6/2xJ5/AfJetgOp1TzbfgXJg2yHUasw27oQeYyn
TqcvTJ7LdjC1rmPbvwj5QNuqKPkS237U6phtzf7CPY893jP7+GLk+W37UavG
tjX7cNvB7Cvdjy9Ofsr9eGoV4X48e5Ln9vHsxWyrEuQtbftRqzG2Nft69+PZ
L7ofX5L8k/vx1CrlC/t49tK2g9nb21alyCfZ9qNW29yPZ7/ufjz7T/fjfcnT
vbSPp1YVbWv2rraD2WfaVqXJ99j2p1b33OvZ1Sv7/ChDntW2ptbVbYex97Ht
50c+33YgtTpkW5Ulf2zbn1rFCrfHZ89tO3058nq2NbUeZDuMPcC2X3ny47YD
qdUr26oCefzXPs7vq6hVQdP0+yr2Jq/t+orkI93rqfUq93r2M+71lcjf2faj
Vp5v7P7Zi9sOZm9tW1UmH+teT602ur0K+SW3U6svbq9Knuqtj/P6K2rlZ5pe
f8XewTS9/op9iml6/VU18u1v7XxqddPOO8/+y85LWZ08Q4QzryO1rhThzNvF
3j3C7q8G+awIez2p1b4Iez3Z77vX1ySP+s6up9bZ3tn17DXf2fW1yPta96BW
C+3jvdgP2/Xp2Z/a9TnZY7931hdm93lv7yd7/ffO+mrsQ+z6huzL7Hp/9hC7
vit7uF0/gD1hpL3e7IUinfWT2ZtFOuvnsf9n1weyr7HrN7Kftev3sEfa9cHs
Xh+c9WfZS35w1t9g9/9gP7/Yx9v1r9k32fVf2K/Y9ao2+VfZKs1H6WVlq07g
U8F3gt8C/wOe8ZP0KrJ1D/A54PvBH4JH+yw9h2xdC7w/+CLwo+DPwD2+SM8r
WzUEHwoeCH4S/A14oq/Si8jWzcFHga8FPw/+ATz5N+mlZKu24BPAt4BfBf8O
nva79PKydWfw6eC7wO+A/wXP/EN6VdmqF/hc8CDwR+AxfkrPKVvVcTd//g6Q
rZaAB4O/AI/7S3p+2boR+HDwFeCnwN+CJ/ktvahs1RJ8NPh68Avgn8BT/JFe
WrZuBz4JfCv4dfAf4On+Sq8gW3UFnwG+B/wuuPonPYtsVR28N/h88IPgj8Fj
qrzCc8vWdcEHgS8FPw7+Ejx+FOkFZKsm4CPAV4GfBn8HnjSq9OKydSvwseAb
wC+BfwZPFU16GdmqA/hk8O3gN8B/gaePLr2SbN0NfBb4XvD74FFiSM8mW9cA
7wu+APww+BPw2DGl55Gt6oMPBl8GfgI8HDxBLOmFZOum4P+BrwY/C/4e3Cu2
9BKylT/4OPBN4JfBv4KnjiO9rGzdEXwq+A7wW+C/wTN6SK9suvq9V83Hsfcw
va1JrnHx+L9/s0173uyxdQ7/92+/6cH1t99KVYf8gen7lz+qldQqWlxX+9Uq
nDNHXfLsptecG1R/O7WqZTpO1aDhReuR9zPdI/T3miPUapHpK+XLXKpYn/yI
6SLHRn0/T62emV5cOiRDgwbkceK5+u/BmNXvUau8ptsWr9q/bUPyBqZP7Z0S
EE6thprOVehiaO9G5MtNz9iRKPIbtTpp+pNP/ZT/NSZ/bbrJ5nnlYjYhTxTf
1Ydy3O42jVoXNp1+Xap5nk3Jm5sem7nlkSXUWpsOX7H8ZcZm5GtN10z3JNFG
an3O9I6lmUvkb07+wbRXqk7t9lPrZAlcPXTBhqllWpCXMv3Q8+2eUGrdxnS5
2T6ParYkn2B6bcI+sW9Q682m407blb9FK/Krpnt5fG32lFp/M31tQrGxXVuT
p03o6qIxhm35QK3LmV46+vDNwf7knRPa508b8mmmB7bNNrAttdpl+m1Irbch
7LdNG87Wlvyv6TuTAm5PotaZErm6tnkAe1XTJ10Pr9WOvKfpkjuSltxBreaa
Npm0PfkB02b8QGr1yPSy264DsEdPbJ6/ZkAH8pymJ7sOH0Ctaye259ORfEBi
ez7UenFiez7swYnt+XQif57Yng+1ipvEng97viT2fDqTN0piz4daD0tiz6cL
+Yok9nyodWgSez7sb5PY8+lKnjipPR9qVTSpPZ9u5C1M0+urqNVo0/T6K/Z1
pun1Wd3JL5im129R64+m6fVdPchTeOZ1Xv9FrX1N0+vDepK3M02vH6PWE03T
68t6kW81Ta8/o9bXPO1+e5P/8LT7pdbeXna/7BW87H77kHfxsvulVjO87H77
ku/2svulVne97H77kf/zsvulVlmS2f32J6+WzO6XWvVOZvc7gHyeaXo9CbU6
aJpeT8IeZppeT8IeM3le5/Uk7LlM0+tJ2OuapteTsA9Mbo83kHxpcns8an0s
uT0e+8vk9njs8VLY47EXSGGPx944hT0e+4gU9niDyFfa1tTqtNsHk0e4nVol
TWl9CHkx25patXL7UPIxps2vu2JSqw2m6e/VsV80bX7/lZT9s2n6fRl7ylTO
vPTsZVI587Kyt0/lzMvNPjmVM68g+7ZUzrzi7DfsPD/2n3ZeJfb0qZ15Ndgr
pnbm1WfvltqZ15R9Zmpnnj/73tTOvI7s9+y87uxR0jjz+rFnTePMG8JeI429
nux90jjzxrMvSOPMm8p+yM6bw/7EzlvEHiutMy+QPU9aZ95a9nppnXmb2Qen
debtYg9I68w7wH7Czgtmf2XnhbIn8HbmnWcv6O3Mu8be1NuZd4d9pLczL4x9
tbcz7wX7GTvvLft7O+8Tu2c6Z94P9hLp7PNvGHlr2Woc+Ebwy+BfwFOnl+4n
W3UEnwK+A/wm+G/wDBmkV5atu4PPBt8H/gA8akbp2WXrmuD9wBeCHwF/Ch4n
k3Qf2aoB+BDw5eAh4K/BE2aWXli2bgauwdeAnwOPBE+WRXpJ2aoN+HjwzeBX
wL+Bp8kqvZxs3Ql8GvhO8Nvgf8AzZZNeRbbqCT4H/AD4Q/Do2aXnkK1qg/cH
Xwx+FPw5uEcO6flk64bgw8ADwUPB34Anzim9iGzVAnwU+Drw8+AfwZPnku4r
W7cFnwi+Bfwa+Hdw79zSy8tWXcCng+8GvwP+DzxzHunVZOte4PPAg8DDwGP4
SM8lW9cBHwi+BPwY+AvweHml55etGoMPB18Jfgo8AjxJPunFZOuW4GPA14Nf
BP8EnjK/9NKyVXvwSeDbwK+D/wRPV0B6Rdm6K/hM8D3g98BVQelZZevq4H3A
54MfAn8MHquQ9NyyVT3wQaYrXu5d79tw8gC3/0d+3N2a/JW7R5HHL2x7NHlB
d48hb+LuseQj3T2OfJW7x5OfcfcE8nfunkjuWcT2JPLipun7eWrV2jR9f80+
1jR9v8u+0TR9/8l+yT1vMvkX9zxqnaqoncfuV9TOY+9Q1M5jn1LUzptCvr2o
nUetbrrnsf9yz2PPUMzOY69UzM6bSt69mJ1HrWcVs/PY9xWz89jvu+exRy1u
500jz1bczqNWNYvbeex9i9t57AuL23nsh93zppM/dc+j1rFL2HnsPiXsPPb6
Jew89iEl7LwZ5MtK2HnUKsQ9jz3cPY89YUk7j71QSTtvJnmzknYetf6vpJ3H
vqakncd+1j2PPdI9bxa5Vyk7j1qVLGXnsfuXsvPYx5ey89g3lbLzZpNfcc+j
1l/d89jT+Np57GV97Tz2Tr523hzyqbLVTvBb4H/AM5aWXkW27gE+B3w/+EPw
aGWk55Cta4H3B18EfhT8GbiHn/S8slVD8KHggeAnwd+AJyorvYhs3Rx8FPha
8PPgH8CTl5NeSrZqCz4BfAv4VfDv4GnLSy8vW3cGnw6+C/wO+F/wzBWkV5Wt
eoHPBQ8CfwQeo6L0nLJVHfAB4EvAg8FfgMetJD2/bN0IfDj4CvBT4G/Bk1SW
XlS2agk+Gnw9+AXwT+ApqkgvLVu3A58EvhX8OvgP8HRVpVeQrbqCzwDfA34X
XFWTnkW2qg7eG3w++EHwx+Axq0vPLVvXBR8EvhT8OPhL8Pg1pBeQrZqAjwBf
BX4a/B140prSi8vWrcDHgm8AvwT+GTxVLellZKsO4JPBt5t+vW75yJ+LyG+Y
zra488o4i8l/mW43NX9oCmqdvrarA0f+DM/GXsn0/d4n4hdl72Y6pesBldhn
mabXP7LvNT27sveQ9uz3TV8s/nJpP/YodVwdN/f24NHs2UxX8R7ybBZ7DdNj
E5WLvYK9r+ljUV2PYF9g+s/na7WPsh82XcI1/iL7E9MD73RY8IA9dl1X7zrn
c/Atex7T7w9/e/iLvb5p13aixl1CPth0l5WTsqaiVstMr5lbr1oO9hOmn4xP
3bMYe7hps/3K7Anqubp5ty17GrEXMr2gpWtH7E1NX69d5k9/9v9MJy4XO8NY
9tWmaxa6UmEO+1nTk7O6bhj7e9OhKdpN3cHuVd/V0cwFZS9huozrAl1i9zc9
3Jww+zjT+x+PT/2OfZPpL9dcG2K/bLqA6wDxlpJ/Nd3TPIBap26Q13m9LHtZ
0+byF2fvaDrzjFIfq7BPNe0/KkayJuw7TAe4lndiv2XadbtaDmT/bTpZE/9R
49gzNnR1/Wo51sxlr2zaNf70KvYeps+7bu9O9tmmXVcz0XH2/aYrJnVdUfYH
ps12wtijNXL1kW8Ph71nz276Z/i65X/Za5kuaj4BAsj7me7vekKnoVaLTJun
T272I6Yjdp7zKcn+zHQO8wRij9PY1R1dp9uUPa9p19NtcWf2BqYfDXt/eBD7
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
f+Sn3evVfuPv3OupddKndn0U8uJP7fqo5K1sa2o11u3RyDe4nVpdcnt08s9u
p1apnlmPQV7GNP1+hlp1ME2/v2GfbJp+v8O+3TT9/of9hmn6/VBM8l+m6fdH
1Dr9c3t89krPnePtZe/23DleBPus587xMsci3/vcOV5zanX/uXO82exRXjjH
O8Oe7YU9v9jkNUzT+1lTq76m6f2s2ReYpvezjkN+2DS9nzW1fmKa3s+aPfbL
vM77WXuQ5zFN72dNreqbpvezjks+2DS9nzW1Wmaa3s+a/YRpej/reOThpun9
rKl1glf2fOKTF3plz4daN31lz4f9v1f2fBKQr35lz4danX1lz4f9/St7PgnJ
vcLt+VDrEuH2fBKR+4fb86HW48Lt+bBvCrfnk5j8crg9H2r1NdyeTxLy1K9F
q7KydUfwqeA7wG+B/wbP+EZ6ZdmqB/hs8P3gD8CjvZWeXbaqBd4PfBH4EfBn
4HEipOeVrRuADwVfDn4S/DV4onfSC8tWzcE1+Frwc+AfwJO9l15Ktm4DPgF8
M/hV8G/gaSOll5OtOoNPA98Ffhv8L3imD9KrytY9weeCHwB/BB79o/ScsnVt
8AHgi8GDwZ+Dx/0kPZ9s1Qh8GPgK8FDwt+CJP0svKlu3AB8Nvg78AvhH8BRf
pPvKVu3AJ4JvBb8G/gPc+6v0CrJ1F/AZ4LvB74L/A8/yTXo12ao3+Dzwg+Bh
4DG/S88lW9UFHwi+FPwY+EvweD+kF5CtG4OPAF8Jfho8AjzpT+nFZKtW4GPA
N4BfBP8MnvKX9DKydXvwyeDbwG+A/wRP/1t6RdmqG/hM8L3g98Cj/JGeVbaq
Ad4HfAH4IfAn4LH+Ss8jW9cDHwweAH4C/BV4gn/SC8pWTcFHgq8GPwP+HtxT
5RNeQrZuDT4OfCP4ZfAv4KmjSPeTrTqCTwHfAX4T/Dd4hqj5+PvbOOyVTdP3
q+zdTZvvP9OyzzZN3x+z7zNtvl3Nz/7ANH3/yh41Wj7+/roCe3bT9P0ye03T
5vvfJuz9TNP35+wLTZvvt7uzHzFN3z+zP43mnI9mjxPdOZ9J7D7RnfOZw94g
unM+AexDojvns459eXTnfHawh0R3zucg++vozvmEsCeM4ZzPRfbCMZzzuc3e
LIZzPk/YdQznfN6yr4nhnM9X9nMx7P1JSh4pWyWLKb2kbNUGfDz4ZvAr4N/A
08SSXk627mS60F3f7iM8yae5PRn5TtP093Kp1W3T9H5lycn/2PXB1CpTbGd9
wxTkVWI7619Tq56x7f1OST7HrvdKRX7Art9IrR/a9X6pyaPHcdbfoNY54jjr
u6Yhrx3H7j8teX/T9PM4tVpsmn5+Zj9qmn6eZ39umn7+9ib38Mjn/D6AWuUz
TT+/szf0sMdLRz7Mwx6PWgd62OOxh3rY47G/8bDHS0+eOK49HrUuEtcej71F
XHu8DOSjbGtqtc7tGcnPu51afXR7JvLk8axTK1/bKjN5W7dTq4luz0K+Rba6
Bv7dNP37AXbv+Pmcfz/BXt40/fsR9i6m6d8HZCWfHt8en1rtju/MO89+x85L
mY38n53XkVpnTuDM28VeLYHdX3byXrZ1TvJ5bs9DHpTAzqNWYQns8dljJLT7
9SHPldCeH7Wuk9DOy0s+MKGdR62XJLTz2I+55+Ujf+GeR63iJbLz8pPnl60a
gw8HXwl+CjwCPEli6cVk65bgY8DXg18E/wSeMon00rJVe/BJ4NvAr4P/BE+X
VHpF2bor+EzwPeD3wJWn9KyydXXwPuDzwQ+BPwaP5SU9t2xVD3wQeAD4cfBX
4PGTSS8oWzcBHwm+CvwM+Dtwz+TSi8tWrcHHgm8EvwT+BTxVinz89+DKsPuZ
Nn8v7gl7B9Pmz8ONL0A+xbT5e3M5C5JvN23+Ht0FanXTtPl7dX0Kkf8ybf7c
nFdh8gwp8/Hfu9tPrSuZNn/urkUR8u4p7f6Kks+SrfaB3wePmkp6NtmqJnhf
8IXgh8GfgsdOLd1Htq4PPgR8GXgIeDh4wjTSC8lWzcD/A18DfhY8EtwrrfSS
srU/+HjwTeBXwL+Cp/GWXla26gQ+FXwn+C3wP+AZ00mvIlv3AJ8Dvh/8IXi0
9NJzyNa1wPuDLwI/Cv4M3COD9LyyVUPwoeCB4CfB34Anyii9iGzdHHwU+Frw
8+AfwJNnkl5KtmoLPgF8C/hV8O/gaTNLLy9bdwafDr4L/A74X/DMWaRXla16
gc8FDwJ/BB4jq/ScslUd8AHgS8CDwV+Ax80mPb9s3Qh8OPgK8FPgb8GTZJde
VLZqCT4afD34BfBP4ClySC8tW7cDnwS+Ffw6+A/wdDmlV5CtuoLPAN8Dfhdc
5ZKeRbaqDt4bfD74QfDH4DFzS88tW9cFHwS+FPw4+Evw+HmkF5CtmoCPAF8F
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
D74I/Cj4M3CPfdLzylYNwYeCB4KfBH8Dnmi/9CKydXPwUeBrwc+DfzA9fWTV
A0vZkx9w9dDuqfL7tiQvZbpjszfrH1CrtqbrVjmUfmQr8gn/c3WPUXYsawCG
Kye2bdv2xLZt204qtm3bdjKxbdu2kzNVtXvW+t6+v97zfN1dXWdyc5O1727T
+XOMnZGggfW1plMnqx9pv2190XS0KBlHNGho/ftO7/6NrMfflcn3/0eyrYqY
tp83c95yl29eOx/nza9yvtmbv+L8hjevGlv/G3i+bZVst+dNrJfa7d3ftuqw
27u/8ynevHa+y5tf5fyeN3/FefA93vWbWk8T2M2tVwzslta7me4V/kn2aLbV
bNOf4pxsk8q5v+m2qdYvzOf8qekn2adcq+g87N6Arl+kV/hmzjObvl4x4J84
r266UkCOdd7XdMDV1y90vtB0wOlPtjo/ZnrvsI9xTjp/bTpHwO3uOo+yL6DX
L9wz7KPznKYDrrYnRCvr9UwvCuA4tvUg03EDbpjR+QrTAZerX8T5GdMBjz+l
hvNPpocH3L6N81j7vf13XmC/b7+mOG+y37dfK5yP3O/brz3O1+337dd555f3
+/brifMf+3379cN5Qn/ffoVvbb2ov2+/EttWrf19+5Xd+Xh/336Vdr7V37df
9Z3f9PftV2fn6oBvv4Y5T37At1+znJc54Nuv9c47HvDt1yHn0w749uua890H
fPv1yvmDA97PVxvrIQ6KVulk60rwHvA58IPwZ/Dwh6Rnka1qwvvBF8OPw9/C
ox6Wnlu2rg8fAl8JPwf/DI9zRHpB2aoZfBR8A/wK/Bc80VHpxWXrNvCJ8G3w
2/Agx6SnlK3LwjvDp8P3wh/CQx2Xnl62qgLvCZ8HPwR/AY9wQno22boWfAB8
Cfwk/B08+knpeWSrhvCh8NXw8/Cv8LinpBeSrZvDx8A3wq/Bf8OTnJZeQrZq
B58E3wG/Aw96Rnoq2ao8vAt8Jnwf/DE89FnpGWXrqvDe8PnwI/CX8EjnpGeX
rerANXwZ/BT8AzzGeen5ZOtG8OHwNfCL8G/w+BekF5atWsLHwjfDr8P/wpNe
lF5Ktm4PnwLfCb8HD3ZJehrZugK8G3wW3B/+BB72svRMslV1eB/4QvhR+Gt4
5CvSc8rWdeGD4MvhZ+Af4bGuSs8vWzWBj4Cvg1+C/4AnuCa9qGzdCj4evgV+
E/4Pnvy69NKyVUf4VPhu+H14iBvS08pWleDd4XPgB+DP4OFuSs8iW9eA94Mv
gh+Hv4FHvSU9l2xVHz4YvhJ+Fv4ZHvu29IKydVP4KPh6+BX4T3iiO9KLme63
J/3seM7bmM70uX2aSc4nmH6cdsPOkG2tbzM9vcmHkv1s61umS8/Ocv2j8yB3
A/rvxS4tWraznsL0xjBbv96xrcqablb469Aq7a13Mh2rd87oJ2yr6aZPbey5
pEAH63tMD3ixM+sW2+qh6SyJfx1M3dF6yHsB/bRmvsrzbav0pmdO6PcgWifr
lU2XO76v4yjbquc97/k7W5/rtZ9tdchr7fy51/7OI9z3zu9iPavXfrZVLa+1
8/5e+ztfEnh+V+snAs+3rd4Fnu882gPvfOd5vFbdrDfw2s+2Guq1dr4q8Hzn
5wPP7279i2n7/jDbKu7DTL7v73buZ9q+P8x5c9P2+7+djzZt3x/Ww/pG0/b7
w23rqw+99Tj//dB3v23OEz/y3e+N8xKPfPdL1tN620e++9WxrSY98t1vkvPt
j3z3O+H8ziPv+XpZ/+9xQMffcKtJetsqlek8Dbcfq+28nOkakSanHeG8i+mu
/u3Hb3U+w/TEjqU/PXS+z/S6RClqROpt/ZHpU+eD7M5vW4V+EtDP9Z0EbZxn
MB08885BM5xXNZ3kwZSnR5z3Mu1nbuB8vul6hcquS9TH+mHTvT+kjFLetnpp
evrCoN37OI/4NKC3VLp3Y4Xz7KYvBCznqvPapt9unLYwaF/r2nTYxp2DZ7at
l5pOFaV8q/rOT5kudjD1mdHO35s24zudx3hmfj2aB3Ce1/Sci3u+R+1nvZHp
gKetW8i2Hmb6apaAHXW+xvSnhxWSzXF+wbTZ/hPOv5lOXyTk66/O4z33/n32
t15Ytm4BHwvfBL8O/wNP+kJ6SdmqPXwyfCf8LjzYS+mpZasK8K7wWfD98Cfw
MK+kZ5Ktq8H7wBfAj8JfwSO/lp5DtqoLHwhfDj8N/wiP+UZ6ftm6MXwEfC38
Evw7PMFb6UVkq1bwcfAt8Bvwf/Bk76SXlq07wKfCd8Hvw4O/l55Wtq4I7w6f
DT8AfwoP90F6ZtmqBrwvfBH8GPwNPMpH6blk63rwwfAV8LPwT/DYn6QXkK2a
wkfC18Mvw3/CE36WXky2bg2fAN8KvwVXX6SnkK3LwDvBp8H3wB/AQ36Vnk62
qgzvAZ8LPwh/Dg//TXpW2bomvD98MfwE/C082nfpuWWrBvAh8FXwc/Av8Dg/
pPvJ1s3go+Eb4Ffhv+CJf0ovLlu1hU+Eb4ffhv/3S3pK2aocvDN8Bnwv/BE8
1G/pGWTrKvBe8Hnww/AX8Ih/pGeTrWrDB8CXwk/C38Oj/5WeV7ZuCB8GXw2/
AP8Kj/dPeiHZqgV8DHwT/Br8DzyJyiy8pGzdDj4ZvgN+Fx40iPTUsnV5eFf4
TPh++GN4mP+kZ5StqsF7wxfAj8BfwSMFlZ5Dtq4DHwhfBj8N/wCPGUx6Ptmq
MXy46d2hGxco53yt6bkT27ab6/yiaR27x5w3zr+bbrxw4Kn8A6zHDx7QxVKP
+TnWtipiOuXGaanvOm9pOkzuhTUzaOvjTL/2Xz28v2292fS5ktu2nXV+w/TG
8/5PEgy0/tf0lJqnonWwrZKFCOju968U2e+8lOlaLe93jjjIegfTed+/XNjA
tp5iOkHPL+fXO98Vwnv+wdbvBfYQ68FDej3UeprAHma9YmAPt94tsEdYnx3Y
I637B/Yo608De7T1sKEyu/fHZLCtMps274Op57y66YxmwHlf0+b9MrucLzRt
3hfz3Pkx0+Z9NTHHWH9t2rx/pphtFSV0Zvc+ma7Oc5o277NZ5LyeafN+mgvO
B4X21jvW+orQ3npt6zOhvfU6/xTaW6/zWGG89TovEMZbr/MmYbz1jrM+Moy3
Xtt6XRhvvc4vh/HW6/xHGG+9zhOG9dY73npR0/b7jmyr1qbt9yNNsD7etP08
iG211bT9/qWJ1m+att+PZDvgf4Bn9n2+ZJL15Kbt9y/ZVmVM2+9rmmy9Yzhv
PVOsTwvnrce23h3OW89U6w/CeeuxrUOE99YzzXq68N56bOtK4b31TLfeI7y3
Htt6TnhvPTOsHwzvrWem9Wde+9tW4SP4Ws+ynsVrv9nWa3qt5ljv57W/bbU4
8Py51o8Hnj/P+tvA8+dbjxpRtMotW9eHD4GvhJ+Df4bHiSS9oGzVDD4KvgF+
Bf4Lniiy9OKydRv4RPg2+G14kCjSU8rWZeGd4dPhe+EP4aGiSk8vW1WB94TP
gx+Cv4BHiCY9m2xdCz4AvgR+Ev4OHj269DyyVUP4UPhq+Hn4V3jcGNILydbN
4WPgG+HX4L/hSWJKLyFbtYNPgu+A34EHjSU9lWxVHt4FPhO+D/4YHjq29Iyy
dVV4b/h8+BH4S3ikONKzy1Z14Bq+DH4K/gEeI670fLJ1I/hw+Br4Rfg3ePx4
0gvLVi3hY+Gb4dfhf+FJ40svJVu3h0+B74TfgwdLID2NbF0B3g0+C+4PfwIP
m1B6JtmqOrwPfCH8KPw1PHIi6Tll67rwQfDl8DPwj/BYiaXnl62awEfA18Ev
wX/AEySRXlS2bgUfD98Cvwn/B0+eVHpp2aojfCp8N/w+PEQy6Wllq0rw7vA5
8APwZ/BwyaVnka1rwPvBF8GPw9/Ao6aQnku2qg8fDF8JPwv/DI+dUnpB2bop
fBR8PfwK/Cc8USrpxWSrNvAJ8G3wW/AgqaWnkK3KwjvBp8P3wB/CQ6aRnl62
rgzvCZ8LPwR/Do+QVnpW2aoWvD98CfwE/B08WjrpeWTrBvCh8FXw8/Av8Ljp
pfvJVs3ho+Eb4Vfhv+GJM0gvIVu3hU+Cb4ffgf+XUXoq2bocvAt8Bnwf/BE8
dCbpGWSrqvBepkekbP8hk/P5pitfyBKhifPDpuP1+ZZmqvOXpp8m21PimPOI
mQN6w1nd9Ifz7KZ79Sw2MO0C67VNF0kSZl4920qbDn/67K7xzpeavtZt8rUD
zk+ZXpCw5udPzt+bbn0iXuQUC63HyBLQ2bo8SF/Tts5r+m+8ZaVHOW9k+tjR
1i32OB9memLHjEPeOl9juk6czwsSLbJ+wXTywzv2Vratvpl+167fzSHO42UN
6B0xC3/b5ryw6UEHQkR74byF6bJtTmWKu9j6WNMxok8oV8623mT63r6qrQc4
v256ZcvYwzc6/2O6S5S7ix85T5otoPPvWeQffYn1kqZDNG9xp4Rt1d70+Yjp
fvZyPtn0rJ3vY6xxvtN00yZbs951ftd0+vC9K0Zaaj1Y9oD+tq1Au8K2dWrT
BxoGHdXVeQXTo8McX7bMeVfT1baMOXTd+SzTCepXuh9mmfX9pp+HjPEnn231
xPSmjTdjd3AeJkdA960zP8dC55lMFwvetMol59VMR1yfqmPw5db7mL5R882Y
nLb1AtOL/9u0spXzo6bbrul+dLbzV6ZzVM/76IzzyDm9n+8V1nPIVnXhA+HL
4afhH+Exc0nPL1s3ho+Ar4Vfgn+HJ8gtvYhs1Qo+Dr4FfgP+D54sj/TSsnUH
+FT4Lvh9ePC80tPK1hXh3eGz4QfgT+Hh8knPLFvVgPeFL4Ifg7+BR8kvPZds
XQ8+GL4Cfhb+CR67gPQCslVT+Ej4evhl+E94woLSi8nWreET4Fvht+DKT3oK
2boMvBN8GnwP/AE8ZCHp6WSryvAe8Lnwg/Dn8PCFpWeVrWvC+8MXw0/A38Kj
FZGeW7ZqAB8CXwU/B/8Cj1NUup9s3Qw+Gr4BfhX+C564mPTislVb+ET4dvht
+H/FpaeUrcrBO8NnwPfCH8FDlZCeQbauAu8Fnwc/DH8Bj1hSejbZqjZ8AHwp
/CT8PTx6Kel5ZeuG8GHw1fAL8K/weKWlF5KtWsDHwDfBr8H/wJOUkV5Stm4H
nwzfAb8LD1pWemrZujy8K3wmfD/8MTxMOekZZatq8N7wBfAj8FfwSOWl55Ct
68AHwpfBT8M/wGNWkJ5PtmoMHw5fC78I/w6PX1F6Edm6JXwcfDP8BvwvPFkl
6aVkqw7wKfBd8Hvw4JWlp5GtKsK7wWfD/eFP4WGrSM8sW1eH94UvhB+Dv4ZH
qSo9p2xVDz4IvgJ+Bv4JHqua9AKydRP4SPg6+GX4D3jC6tKLylat4ePhW+E3
4aqG9OSyVRl4R/g0+G74A3iImtLTydaV4D3gc+AH4c/g4WtJzyJb1YT3gy+G
HzdtPt8wx/lb0/bzDCutR62d2ff9G7ZVbtP28wqrrNc3bT4vEWG19SGm7ecj
bOuVps3nIUqssX7OtP38g239ubZvPXqt9Th1fOuJt856wTq+9eywrZrV8a2n
2nrro+r41vPBttpQx7eecRusX6njW0+ajdZ/1fGt55htnaiubz1NNlkvXtfb
n83W25juZw7baqLpXz8DDufbTPc0xxbrt01//RJw2NZB6gV0F3NstZ7S9If3
AYdtXdZ0e3Nss97Z9OtXAYdtPd10K3Nst77X9LOnAYdt/dD0kfKvD5ffYT1U
/YDOuzFq3o22dXrTJqPutF7FdMrujVN2t617mp53feTc687nmY5mLrDL+iHT
o+YGDNhWL+p7+7PbeoQGolU22boWfAB8Cfwk/B08ekPpeWSrhvCh8NXw8/Cv
8LiNpBeSrZvDx8A3wq/Bf8OTNJZeQrZqB58E3wG/Aw/aRHoq2ao8vAt8Jnwf
/DE8dFPpGWXrqvDe8PnwI/CX8EjNpGeXrerANXwZ/BT8AzxGc+n5ZOtG8OHw
NfCL8G/w+C2kF5atWsLHwjfDr8P/wpO2lF5Ktm4PnwLfCb8HD9ZKehrZugK8
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
8FfwyGek55Ct6sIHwpfDT8M/wmOelZ5ftm4MHwFfC78E/w5PcE56EdmqFXwc
fAv8BvwfPNl56aVl6w7wqfBd8Pvw4Bekp5WtK8K7w2fDD8CfwsNdlJ5ZtqoB
7wtfBD8GfwOPckl6Ltm6HnwwfAX8LPwTPPZl6QVkq6bwkfD18Mvwn/CEV6QX
k61bwyfAt8JvwdVV6Slk6zLwTvBp8D3wB/CQ16Snk60qw3vA58IPwp/Dw1+X
nlW2rgnvD18MPwF/C492Q3pu2aoBfAh8Ffwc/As8zk3pfrJ1M/ho+Ab4Vfgv
eOJb0ovLVm3hE+Hb4bfh/92WnlK2KgfvDJ8B3wt/BA91R3oG2boKvBd8Hvww
/AU84l3p2WSr2vAB8KXwk/D38Oj3pOeVrRvCh8FXwy/Av8Lj3ZdeSLZqAR8D
3wS/Bv8DT/JAeknZuh18MnwH/C486EPpqWXr8vCu8Jnw/fDH8DCPpGeUrarB
e8MXwI/AX8EjPZaeQ7auAx8IXwY/Df8Aj/lEej7ZqjF8OHwt/CL8Ozz+U+lF
ZOuW8HHwzfAb8L/wZM+kl5KtOsCnwHfB78GDP5eeRraqCO8Gnw33hz+Fh30h
PbNsXR3eF74Qfgz+Gh7lpfScslU9+CD4CvgZ+Cd4rFfSC8jWTeAj4evgl+E/
4AlfSy8qW7WGj4dvhd+EqzfSk8tWZeAd4dPgu+EP4CHeSk8nW1eC94DPgR+E
P4OHfyc9i2xVE94Pvhh+HP4WHvW99NyydX34EPhK+Dn4Z3icD9ILylbN4KPg
G+BX4L/giT5KLy5bt4FPhG+D34YH+SQ9pWxdFt4ZPh2+F/4QHuqz9PSyVRV4
T/g8+CH4C3iEL9Kzyda14APgS+An4e/g0b9KzyNbNYQPha+Gn4d/hcf9Jr2Q
bN0cPga+EX4N/hue5Lv0ErJVO/gk+A74HXjQH9JTyVbl4V3gM+H74I/hoX9K
zyhbV4X3hs+HH4G/hEf6JT27bFUHruHL4KfgH+AxfkvPJ1s3gg+Hr4FfhH+D
x/8jvbBs1RI+Fr4Zfh3+F570r/RSsnV7+BT4Tvg9eLB/0tPI1hXg3eCz4P7w
J/CwKovwTLJVdXgf+EL4UfhreOQg0nPK1nXhg+DL4WfgH+Gx/pOeX7ZqAh8B
Xwe/BP8BTxBUelHZuhV8PHwL/Cb8Hzx5MOmlZauO8Knw3fD78BDBpaeVrSrB
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
T2NbdR7p3d/5dG9eO9/rza9y/tCbv+I81Cjv+l+tp5etqsB7wufBD8FfwCOM
lp5Ntq4FH2D6WZllXz47X2L6c/JLvX9+t34ycP6X9XeyVfQx0vPIVg3hQ+Gr
4efhX+Fxx0ovJFs3h4+Bb4Rfg/82PX3UrFc7nScZF9ARQ7b42Oev9RKmRwzO
+iN/kJ3G243zzg9mWk8y3TzgeGpb7TB95nTAEdz6HdNZA47NIawHHR/Qs2YG
HCGtpxrv/XyFsl5+vO96zUNb7zLed72yYazPHO+7Xtaw1vd514sdzvpj73oq
vPXQE7yff9sqo9faeVWv/Z339lpFsD5ftjoCfwmPNFF6dtmqDlzDl8FPwT/A
Y0ySnk+2bgQfDl8Dvwj/Bo8/WXph2aolfCx8M/w6/C886RTppWTr9vAp8J3w
e/BgU6Wnka0rwLvBZ8H94U/gYadJzyRbVYf3gS+EH4W/hkeeLj2nbF0XPgi+
HH4G/hEea4b0/LJVE/gI+Dr4pRne70cRrf+Y4f3+E8l6gpnefBTrRWd681Gt
t5rpzUezPj5wPob1LYEd0/rNwI5l/V9gx7aefJbXcayXlq06mp6UrNSkZM6n
mr61rd2tHM53m04ewKWc3zfdPmCgjvMQswN6e7uAf+A87Wzvv6+cVzJtTp/k
vPts3/2WOJ8z23e/bc4PzPbd74TzZ7N997vlPNwc3/3eOM8yx3ueuNZrzPHd
L4pt1W+O93zOF83xns/58Tne8zl/M8d7PudR53rP5zzXXO/5nNef6z2f88Fz
vedzvnKu93zOz871ns/557ne8zmPPc97PucF53nPF89603ne89lWo+Z5z+d8
/Tzv+Zxfmec9n/Of87znc55ovvd8zovN957PeZv53vM5nzDfez7n2+Z7z+f8
1nzv+ZwHWeA9n/MUC7znc152gfd88a13kq2mw/fAH8JDLpSeXrauDO8Jnws/
BH8Oj7BIelbZqha8P3wJ/AT8HTzaYul5ZOsG8KHwVfDz8C/wuEuk+8lWzeGj
4RvhV+G/4YmXSi8hW7eFT4Jvh9+B/7dMeirZuhy8C3wGfB/8ETz0cukZZKuq
8F7w+fDD8JfwiCukZ5eta8M1fCn8FPw9PMZK6Xllq0bwYfA18Avwb/B4q6QX
lq1bmL508eLFKAmsjzWd3hwJrW8yPWL48OElElm/bvrhgwcPGiW2/sd0voCj
bxLrSVcH9PRpAUdS6yVNf3j//v2GZNbbmy4TcJxKbn2y6WVLly59ksL6ztXe
+lJZv2va/nnBtgq2Jovvzx/OU5u2f15Ibb2CafvnD9u66xrvemmsz1rjXc+2
3h94PedPAq+X1nqYtd71bKtMa73rpbNeLbAzWO8T2JmsLzBt399tWx01bf88
ntn6K2/e37aKvM43Xy2L9RzrfPMvbau667zfb7JaH+jNR89mfbk3v8q2Pu3N
+2W3/tGbv2Jbx1zvm2+dw3r+9d76c1pvvN5bv201wptPk8v6Wm/e37a65M1X
y239uzf/0rZKsMFbfx7rRTZ4689rvdUGb/229Thv3i+f9S3e/BXb+oY33zq/
9X/evCpgPdlG73q2VemN3voKWu+w0Zv3sz41cN623hU4X8j6/cD5wtaDb/Ke
x7ZK67UqYr1ioNtW3QO9qPXZgW5bHQj0YtafBrptFW6z58WtZ/Za21Y1Ar2E
9b6BblstCvSS1o8Fum31JtBLWY+yxXPbKpfXqrT1eoFuWw0O9DLWVwS6bXU2
0Mta/xTotlXsrZ6Xs17Aa21bNQ308tZHBrpttT7QK1i/7LWfbfUzcN55wm3e
z6/zYl6ritZbe61tqwmBXsn61kC3rW4FemXrarvntlUKr1UV62Vkq07wafA9
8AfwkDukp5OtKsN7wOfCD8Kfw8PvlJ5Vtq4J7w9fDD8BfwuPtkt6btmqAXwI
fBX8HPwLPM5u6X6ydTP4aPgG+FX4L3jiPdKLy1Zt4RPh2+G34f/tlZ5StioH
7wyfAd8LfwQPtU96Btm6CrwXfB78MPwFPOJ+6dlkq9rwAfCl8JPw9/Do/tLz
ytYN4cPgq+EX4F/h8Q5ILyRbtYCPgW+CX4P/gSc5KL2kbN0OPhm+A34XHvSQ
9NSydXl4V/hM+H74Y3iYw9IzylbV4L3hC+BH4K/gkY5IzyFb14EPhC+Dn4Z/
gMc8Kj2fbNUYPhy+Fn4R/h0e/5j0IrJ1S/g4+Gb4DfhfeLLj0kvJVh3gU+C7
4PfgwU9ITyNbVYR3g8+G+8OfwsOelJ5Ztq4O7wtfCD8Gfw2Pckp6TtmqHnwQ
fAX8DPwTPNZp6QVk6ybwkfB18MvwH/CEZ6QXla1aw8fDt8JvwtVZ6cllqzLw
jvBp8N3wB/AQ56Snk60rwXvA58APwp/Bw5+XnkW2qgnvB18MPw5/C496QXpu
2bo+fAh8Jfwc/DM8zkXpBWWrZvBR8A3wK/Bf8ESXpBeXrdvAJ8K3wW/Dg1yW
nlK2LgvvDJ8O3wt/CA91RXp62aoKvCd8HvwQ/AU8wlXp2WTrWvAB8CXwk/B3
8OjXpOeRrRrCh8JXw8/Dv8LjXpdeSLZuDh8D3wi/Bv8NT3JDegnZqh18EnwH
/A486E3pqWSr8vAu8JnwffDH8NC3pGeUravCe8Pnw4/AX8Ij3ZaeXbaqA9fw
ZfBT8A/wGHek55OtG8GHw9fAL8K/wePflV5YtmoJHwvfDL8O/wtPek96Kdm6
PXwKfCf8HjzYfelpZOsKpkN+HbdyoPNupnOnLZj4bFXrs0y3bvhuRpzq1v1N
z5k6P1KLGtafmD57ssKIzTWth33gXb+29UyyVXV4H/hC+FH4a3jkh9JzytZ1
4YPgy+Fn4B/hsR5Jzy9bNYGPgK+DX4L/gCd4LL2obN0KPh6+BX4T/g+e/In0
0rJVR/hU+G74fXiIp9LTylaV4N3hc+AH4M/g4Z5JzyJb14D3gy+CH4e/gUd9
Lj2XbFUfPhi+En4W/hke+4X0grJ1U/go+Hr4FfhPeKKX0ovJVm3gE+Db4Lfg
QV5JTyFblYV3gk+H74E/hId8LT29bF0Z3hM+F34I/hwe4Y30rLJVLXh/+BL4
Cfg7eLS30vPI1g3gQ+Gr4OfhX+Bx30n3k62aw0fDN8Kvwn/DE7+XXkK2bguf
BN8OvwP/74P0VLJ1OXgX+Az4PvgjeOiP0jPIVlXhveDz4YfhL+ERP0nPLlvX
hmv4Uvgp+Ht4jM/S88pWjeDD4GvgF+Df4PG+SC8sW7eAj4Vvgl+H/4En/Sq9
pGzVHj4ZvhN+Fx7sm/TUslUFeFf4LPh++BN4mO/SM8nW1eB94AvgR+Gv4JF/
SM8hW9WFD4Qvh5+Gf4TH/Ck9v2zdGD4CvhZ+Cf4dnuCX9CKyVSv4OPgW+A34
P3iy39JLy9Yd4FPhu+D34cH/SE8rW1eEd4fPhh+AP4WH+ys9s2xVA94Xvgh+
DP4GHuWf9FyydT34YPgK+Fn4J3hslVV4AdmqKXwkfD38MvwnPGEQ6cVk69bw
CfCt8Ftw9Z/0FLJ1GXgn+DT4HvgDeMig0tPJVpXhPeBz4Qfhz+Hhg0nPKlvX
hPeHL4afgL+FRwsuPbds1QA+BL4Kfg7+BR4nhHQ/2boZfDR8A/wq/Bc8cUjp
xWWrtvCJ8O3w2/D/QklPKVuVg3eGz4DvhT+ChwotPYNsXQXeCz4Pfhj+Ah4x
jPRsslVt+AD4UvhJ+Ht49LDS88rWDeHD4KvhF+Bf4fHCSS8kW7WAj4Fvgl+D
/4EnCS+9pGzdDj4ZvgN+Fx40gvTUsnV5eFf4TPh++GN4mIjSM8pW1eC94Qvg
R+Cv4JEiSc8hW9eBD4Qvg5+Gf4DHjCw9n2zVGD4cvhZ+Ef4dHj+K9CKydUv4
OPhm+A34X3iyqNJLyVYd4FPgu+D34MGjSU8jW1WEd4PPhvvDn8LDRpeeWbau
Du8LXwg/Bn8NjxJDek7Zqh58EHwF/Az8EzxWTOkFZOsm8JHwdfDL8B/whLGk
F5WtWsPHw7fCb8JVbOnJZasy8I7wafDd8AfwEHGkp5OtK8F7wOfAD8KfwcPH
lZ5FtqoJ7wdfDD8OfwuPGk96btm6PnwIfCX8HPwzPE586QVlq2bwUfAN8Cvw
X/BECaQXl63bwCfCt8Fvw4MklJ5Sti4L7wyfDt8LfwgPlUh6etmqCrwnfB78
EPwFPEJi6dlk61rwAfAl8JPwd/DoSaTnka0awofCV8PPw7/C4yaVXki2bg4f
A98Ivwb/DU+STHoJ2aodfBJ8B/wOPGhy6alkq/LwLvCZ8H3wx/DQKaRnlK2r
wnvD58OPwF/CI6WUnl22qgPX8GXwU/AP8BippOeTrRvBh8PXwC/Cv8Hjp5Ze
WLZqCR8L3wy/Dv8LT5pGeinZuj18Cnyn6aprksWMXMf6PdMr5+Q6l6Ku9WBp
A/rfmLLD89WznsZ01X4NC1aub72C6VXtun5r0cB6Nztfb8T6fg2tzzJdrfyc
FpMbWfe38wU2JFzZ2PoT0yrj4Wv7mlgPm87MJ7w+/nJT65lMr474usTLZtar
p/PW38J6H6/9bKuFXmvnR732d/468PyW1iOn9863rXJ6rZ3X9drf+SCvVSvr
y2WrM/CP8FgZpOeXrZrAR8DXwS/Bf8ATZJReVLZuBR8P3wK/Cf8HT55JemnZ
qiN8Knw3/D48RGbpaWWrSvDu8DnwA/Bn8HBZpGeRrWvA+8EXwY/D38CjZpWe
S7aqDx8MXwk/C/8Mj51NekHZuil8FHw9/Ar8JzxRdunFZKs28AnwbfBb8CA5
pKeQrcrCO8Gnw/fAH8JD5pSeXrauDO8Jnws/BH8Oj5BLelbZqha8P3wJ/AT8
HTxabul5ZOsG8KHwVfDz8C/wuHmk+8lWzeGj4RvhV+G/4YnzSi8hW7eFT4Jv
h9+B/5dPeirZuhy8C3wGfB/8ETx0fukZZKuq8F7w+fDD8JfwiAWkZ5eta8M1
fCn8FPw9PEZB6Xllq0bwYfA18Avwb/B4ftILy9Yt4GPhm+DX4X/gSQtJLylb
tYdPhu+E34UHKyw9tWxVAd4VPgu+H/4EHqaI9EyydTV4H/gC+FH4K3jkotJz
yFZ14QPhy+Gn4R/hMYtJzy9bN4aPgK+FX4J/hycoLr2IbNUKPg6+BX4D/g+e
rIT00rJ1B/hU+C74fXjwktLTytYV4d3hs+EH4E/h4UpJzyxb1YD3hS+CH4O/
gUcpLT2XbF0PPhi+An4W/gkeu4z0ArJVU/hI+Hr4ZfhPeMKy0ovJ1q3hE+Bb
4bfgqpz0FLJ1GXgn+DT4HvgDeMjy0tPJVpXhPeBz4Qfhz+HhK0jPKlvXhPeH
L4afgL+FR6soPbds1QA+BL4Kfg7+BR6nknQ/2boZfDR8A/wq/Bc8cWXpxWWr
tvCJ8O3w2/D/qkhPKVuVg3eGz4DvhT+Ch6oqPYNsXQXeCz7PdPGY9bpWcn7Y
9JgMu54vcv7C9IViMet9dh6xWkAHjF8o1tp6NtMmp9tWtU0vHh1wAecDTL9Y
NDpDnjbWl5rOGHD50bb1SdMBp8e84/y9acMZ2lqPXt23Xm1b5a3uW+8F5w2r
+9abpJ31YdV96+1qW6+u7lvvEecXqvvWG7O99a/VfettaVvFq+Fb7y7nhWr4
1hu2g/UWNXzrrWdbj6nhW+8655tqePvb0fo12eoPPElN6SVl63bwyfAd8Lvw
oLWkp5aty8O7wmfC98Mfw8PUlp5RtqoG7216xdp/Jzs6X2B6Wq/CXT84P2J6
cLGh8Tt3sv7KdKfIx49+tK0j1Qno+nfCdOzS2XoO02VXlov92bauYzpPtwkH
u3axPtB0ykKX2nyxrZeZjh4+RvTuXa2fNv3fjZr7vtrWH0y/XzK7RY9u1mPW
Deg7He9G+m5b5zN9Kl/iXT27W29sekeopk1+2NbDTS+7vCxc7x7W15qesuDF
1p+29UXTA9uma9Cnp/Xvpjvk6hDqt20dv15A1w22aWPfXtaLmC59/nPtP7Z1
S9M55+QM1r+39XGmk7fsvfavbb3ZdJRse6sP6GP9Rj1v//ta/ytbJasvvZRs
1QE+Bb7L9PryDY6udn7P9KQDS3o37Wc9eIOA7pbtZYb4/a2nMV1zecZHV2yr
iqbzxOk2fdwA691Mxx+7q0wJbX12A+9+A637y1ZP4WEbSs8sW1eH94UvhB+D
v4ZHaSQ9p2xVDz4IvgJ+Bv4JHqux9AKydRP4SPg6+GX4D3jCJtKLylat4ePh
W+E34aqp9OSyVRl4R/g0+G74A3iIZtLTydaV4D3gc+AH4c/g4ZtLzyJb1YT3
gy+GH4e/hUdtIT23bF0fPgS+En4O/hkep6X0grJVM/go+Ab4FfgveKJW0ovL
1m3gE+Hb4LfhQVpLTylbl4V3hk+H74U/hIdqIz29bFUF3hM+D34I/gIeoa30
bLJ1LfgA+BL4Sfg7ePR20vPIVg3hQ+Gr4efhX+Fx20svJFs3h4+Bb4Rfg/+G
J+kgvYRs1Q4+Cb4DfgcetKP0VLJVeXgX+Ez4PvhjeOhO0jPK1lXhveHz4Ufg
L+GROkvPLlvVgWv4Mvgp+Ad4jC7S88nWjeDD4WvgF+Hf4PG7Si8sW7WEj4Vv
hl+H/4Un7Sa9lGzdHj4FvhN+Dx6su/Q0snUFeDf4LLg//Ak8bA/pmWSr6vA+
8IXwo/DX8Mg9peeUrevCB8GXw8/AP8Jj9ZKeX7ZqAh8BXwe/BP8BT9BbelHZ
uhV8PHwL/Cb8Hzx5H+mlZauO8Knw3fD78BB9paeVrSrBu8PnwA/An8HD9ZOe
RbauYTpyrton+zvvZ3pb8om3/zpfZLp21ONv+w+yftz0PxXwH9v6jeklb7NH
HTDYetT+AV3ydtvk/2zrXKbfnFicc8AQ6/VNT9p+s9Q/23qw6RxLI9cdMNT6
StO3JpVs/8+2Pmta6wF6wDDrn00na79t0j/bOvaAgD5R582SAcOtFzTdrlSy
7f9s66amo+Ssc2LACOujTG9PNunWP9t6vek6UU68GTDS+pUB3v6Msv7Taz/b
KpH2tXZezGt/5228VqOtT/Daz7baFni+81uB5zsPMtA7f4z1FKbt+3Fsq7Km
7fdRO+9k2r6fx/l00/b7q8da3+NdT9tWD73rnXYecpDverHHWU8/yHe95rZ1
5UG+62123nOQt77x1ufKVofgz+ERBkvPKlvVgveHL4GfgL+DRxsiPY9s3QA+
FL4Kfh7+BR53qHQ/2ao5fDR8I/wq/Dc88TDpJWTrtvBJ8O3wO/D/hgd0xVMj
62Z3nmq45xOslzPde96zXglsqy6mP+c79ymf8xmm7fsznO8z/bxXwAnOH5lu
HGtYoxnOQ4/I6ns/hvMMpu33fTuvajrg6uc+Oe9l2r7fY6L1+aYPZQp3KJNt
fdh0/oATKjh/adq+v8N5xJEBnTlgfIzz7Kbt9387r23avp/DuTYdsPp5z5wv
NR2w/FghJlk/Zdq+X8S2fm864PLhijiPMSqgA8aHNXKed5T369N5o1G+/Zzn
fNgo337ucb5mlG8/bzm/MMq3nz+cfxvl289Yk63HG+3bzxy2VeHRvv2s5rzF
aN9+dnE+drRvPyc53zTat58bnF8f7dvPc87/jPbt5xvnScf49jPcFOslx/j2
M41t1X6Mbz9LOZ88xrefLZzvHOPbz2HO747x7ecS58HG+vbzkPPUY337+cB5
hbHez+dU611lq1nw/fAn8DDjpGeSravB+8AXwI/CX8Ejj5eeQ7aqCx8IXw4/
Df8IjzlBen7ZujF8BHwt/BL8OzzBROlFZKtW8HHwLfAb8H/wZJOkl5atO8Cn
wnfB78ODT5aeVrauCO8Onw0/AH8KDzdFembZqga8L3wR/Bj8DTzKVOm5ZOt6
8MHwFfCz8E/w2NOkF5CtmsJHwtfDL8N/whNOl15Mtm4NnwDfCr8FVzOkp5Ct
y8A7wafB98AfwEPOlJ5OtqoM7wGfCz8Ifw4PP0t6Vtm6Jrw/fDH8BPwtPNps
6bllqwbwIfBV8HPwL/A4c6T7ydbN4KPhG+BX4b/giedKLy5btYVPhG+H34b/
N096StmqHLwzfAZ8L/wRPNR86Rlk6yrwXvB58MPwF/CIC6Rnk61qwwfAl8JP
wt/Doy+Unle2bggfBl8NvwD/Co+3SHoh2aoFfAx8E/wa/A88yWLpJWXrdvDJ
8B3wu/CgS6Snlq3Lw7vCZ8L3wx/DwyyVnlG2qgbvDV8APwJ/BY+0THoO2boO
fCB8Gfw0/AM85nLp+WSrxvDhpqttDDWnn/O1gT7N+kXZ6js8/grpRWTrlvBx
8M3wG/C/8GQrpZeSrTrAp8B3we/Bg6+Snka2qgjvBp8N94c/hYddLT2zbF0d
3he+EH4M/hoeZY30nLJVPfgg+Ar4GfgneKy10gvI1k3gI+Hr4JfhP+AJ10kv
Klu1ho+Hb4XfhKv10pPLVmXgHeHT4LvhD+AhNkhPJ1tXgveAz4EfhD+Dh98o
PYtsVRPeD74Yfhz+Fh51U0BvOdk9RGjnuU2XH5UiXRTn9U2/KHW1UlznQ0wP
Dj2sRzLnK00nOJF9bnrn50zvGPHkYA7nn01XKTn1eUHncTYH9JuQxSKUcl7Q
9Ihjn7NWdt7MdNLhS2rVcT7K9N7iVQc0db7BdM0QwZa2c37F9Mcjm092d/7L
9NihTd4PcJ5oS0CnLBY1xkjnxU0fDHYo7yTnbUzXPdy50WznE01/G5xk+BLn
20xPLHJxzVrnt02nCzro4jbnQbYG9NGDmb/vd57SdKNBD+KfcF7W9C9zBeed
TU8LUqjVLefTTWc68H7cY+d7TZ/SC7a8cf7QdDO/ije/Og+1zfv3N916etmq
CrwnfB78EPwFPMJ26dlk61rwAfAl8JPwd/DoO6Tnka0awofCV8PPw7/C4+6U
Xki2bg4fA98Ivwb/DU+yS3oJ2aodfBJ8B/wOPOhu6alkq/LwLvCZ8H3wx/DQ
e6RnlK2rwnvD58OPwF/CI+2Vnl22qgPX8GXwU/AP8Bj7pOeTrRvBh8PXwC/C
v8Hj75deWLZqCR8L3wy/Dv8LT+ovvZRs3R4+Bb4Tfg8e7ID0NLJ1BXg3+Cy4
P/wJPOxB6Zlkq+rwPvCF8KPw1/DIh6TnlK3rwgfBl8PPwD/CYx2Wnl+2agIf
AV8HvwT/AU9wRHpR2boVfDx8C/wm/B88+VHppWWrjvCp8N3w+/AQx6Snla0q
wbvD58APwJ/Bwx2XnkW2rgHvB18EPw5/A496Qnou2ao+fDB8Jfws/DM89knp
BWXrpvBR8PXwK/Cf8ESnpBeTrdrAJ8C3wW/Bg5yWnkK2KgvvBJ8O3wN/CA95
Rnp62boyvCd8LvwQ/Dk8wlnpWWWrWvD+8CXwE/B38GjnpOeRrRvAh8JXwc/D
v8DjnpfuJ1s1h4+Gb4Rfhf+GJ74gvYRs3RY+Cb4dfgf+30XpqWTrcvAu8Bnw
ffBH8NCXpGeQrarCe8Hnww/DX8IjXpaeXbauDdfwpfBT8PfwGFek55WtGsGH
wdfAL8C/weNdlV5Ytm4BHwvfBL8O/wNPek16SdmqPXwyfCf8LjzYdempZasK
8K7wWfD98CfwMDekZ5Ktq8H7wBfAj8JfwSPflJ5DtqoLHwhfDj8N/wiPeUt6
ftm6MXwEfC38Evw7PMFt6UVkq1bwcfAt8Bvwf/Bkd6SXlq07wKfCd8Hvw4Pf
lZ5Wtq4I7w6fDT8AfwoPd096ZtmqBrwvfBH8GPwNPMp96blk63rwwfAV8LPw
T/DYD6QXkK2awkfC18Mvw3/CEz6UXky2bg2fAN8KvwVXj6SnkK3LwDvBp8H3
wB/AQz6Wnk62qgzvAZ8LPwh/Dg//RHpW2bomvD98MfwE/C082lPpuWWrBvAh
8FXwc/Av8DjPpPvJ1s3go+Eb4Ffhv+CJn0svLlu1hU+Eb4ffhv/3QnpK2aoc
vDN8Bnwv/BE81EvpGWTrKvBe8Hnww/AX8IivpGeTrWrDB8CXwk/C38Ojv5ae
V7ZuCB8GXw2/AP8Kj/dGeiHZqgV8DHwT/Br8DzzJW+klZet28MnwHfC78KDv
pKeWrcvDu8JnwvfDH8PDvJeeUbaqBu8NXwA/An8Fj/RBeg7Zug58IHwZ/DT8
AzzmR+n5ZKvG8OHwtfCL8O/w+J+kF5GtW8LHwTfDb8D/wpN9ll5KtuoAnwLf
Bb8HD/5FehrZqiK8G3w23B/+FB72q/TMsnV1eF/4Qvgx+Gt4lG/Sc8pW9eCD
4CvgZ+Cf4LG+Sy8gWzeBj4Svg1+G/4An/CG9qGzVGj4evhV+E65+Sk8uW5WB
d4RPg++GP4CH+CU9nWxdCd4DPgd+EP4MHv639CyyVU14P/hi+HH4W3jUP9Jz
y9b14UPgK+Hn4J/hcf5KLyhbNYOPgm+AX4H/gif6J724bN0GPhG+DX4bHkRl
E55Sti4L7wyfDt8LfwgPFUR6etmqCrwnfB78EPwFPMJ/0rPJ1rXgA+BL4Cfh
7+D/d3FPYZI0WxiFY2zbtm3btm3bMbZt27Zt255/bON0ZXb2c75Vd6vfqF1Z
WbtvM1oQ9dzapiF8KHw1/AL8KzxOUPVC2rY5fAx8I/w6/Dc8cTD1EtqmHXwS
fAf8LjxIcPWU2qY8vAt8Jnwf/Ak8VAj1DNq2Krw3fD78KPwlPGJI9Wzapg7c
wpfBT8M/wKOHUs+rbRvBh8PXwC/Bv8HjhVYvrG1awsfCN8NvwP/Ck4RRL6Vt
28OnwHfC78ODhlVPrW0rwLvBZ8EPwJ/Cw4RTz6htqsP7wBfCj8FfwyOFV8+h
bevCB8GXw8/CP8JjRlDPp22awEfA18Evw3/A40dUL6ptW8HHw7fAb8H/wZNF
Ui+tbTrCp8J3wx/Ag0dWT6NtKsG7w+fAD8Kfw8NGUc+sbWvA+8EXwU/A38Cj
RFXPqW3qwwfDV8LPwT/DY0VTL6Btm8JHwdfDr8J/whNGVy+mbdrAJ8C3wW/D
A8VQT65tysI7wafD98AfwUPEVE+nbSvDe8Lnwg/DX8DDx1LPom1qwfvDl8BP
wt/Bo8ZWz61tG8CHwlfBL8C/wOPEUS+obZrDR8M3wq/Bf8MTxVUvoW3bwifB
t8PvwgPHU0+pbcvBu8BnwPfBH8NDxVdPr22qwnvB58OPwF/CIyRQz6Zta8Mt
fCn8NPw9PHpC9TzaphF8GHwN/CL8GzxuIvXC2rYFfCx8E/wG/A88SWL1ktqm
PXwyfCf8HjxoEvVU2qYCvCt8Fnw//Ck8dFL1jNq2GrwPfAH8GPwVPFIy9eza
pi58IHw5/Az8IzxGcvV82rYxfAR8Lfwy/Ds8fgr1ItqmFXwcfAv8JvwfPGlK
9dLatgN8KnwX/AE8WCr1NNq2Irw7fDb8IPwZPGxq9Uzapga8L3wR/Dj8DTxy
GvWc2rYefDB8Bfwc/BM8Vlr1/NqmKXwkfD38CvwnPEE69WLatjV8Anwr/Dbc
pFdPrm3LwDvBp8H3wB/CQ2RQT6ttKsN7wOfCD8FfwMNlVM+ibWvC+8MXw0/C
38KjZlLPpW0awIfAV8HPw7/AY2dWL6htm8FHwzfAr8F/wRNlUS+ubdrCJ8K3
w+/AA2dVT6FtysE7w2fA98Ifw0NmU0+vbavAe8HnwY/A/4NHyK6eVdvUhg+A
L4Wfgr+HR8uhnkfbNoQPg6+GX4R/hcfNqV5I27SAj4Fvgl+H/4EnzqVeUtu2
g0+G74DfgwfJrZ5K25aHd4XPhO+HP4GHzqOeQdtUg/eGL4Afhb+CR8yrnl3b
1oEPhC+Dn4F/gMfIp55X2zSGD4evhV+Cf4fHy69eRNu2hI+Db4bfhP+FJy2g
XkrbdIBPge+C34cHK6ieWttUhHeDz4YfgD+DhymknknbVof3hS+EH4e/hkcu
rJ5D29SDD4KvgJ+Ff4LHLKKeX9s2gY+Er4Nfgf+AJyiqXlTbtIaPh2+F34Kb
YurJtE0ZeEf4NPhu+EN48OLqabVtJXgP+Bz4IfhzeLgS6pm1TU14P/hi+An4
W3iUkuq5tG19+BD4Svh5+Gd47FLqBbRNM/go+Ab4VfgveMLS6sW1bRv4RPg2
+B14oDLqKbRtWXhn+HT4XvgjeMiy6um0TRV4T/g8+GH4f/Dw5dSzatta8AHw
JfBT8HfwaOXVc2ubhvCh8NXwC/Cv8DgV1Atp2+bwMfCN8Ovw3/DEFdVLaJt2
8EnwHfC78CCV1FNqm/LwLvCZ8H3wJ/BQldUzaNuq8N7w+fCj8JfwiFXUs2mb
OnALXwY/Df8Aj15VPa+2bQQfDl8DvwT/Bo9XTb2wtmkJHwvfDL8B/wtPUj2r
//N9XS/la+f5uzMcb1/d/7yd6fgU73y1WY7v9M6nnu34fe+8meN40BqeO21S
1/De73qFGt5817t551e5Pss7f9X1A955M9fxp772PS47uNMmTM2s7vO1w7qe
0de+52dHcb26r53nbbvep6b/vISuL6zpPy+568e8eWldf+3Ny+J6pFr+83K5
nqOW/7yCrtet5T+vuOuDavnPK+v68lr+86q4ftabV8v1j968hq7HrO0/r7nr
+Wr7z2vrepPa/vO6uD6itv+8Xq6vq+3db9cve/OGuf7DmzfG9fh1/OdNdr1o
Hf95M11vVcd/3gLXx9fxn7fM9S11/Oetcf2WN2+z6/+8eTtdT1bXf94B10vX
9Z93zPWOdf3nnXF9al3/eZdd313Xf95N1x948x64Hrye/7xnrqep5z/vteuV
6vnP++R693r+8364Pqeet3/zHD9Yz38/ozltntfz9t31sPW9fXA9c31v/12v
Ud//fGvX+3nnreuLvPNTXT/hnV/l+hvv/AHXozTw/l9cz9nA//xL1+s38K5/
vuODtc1K+Dn4Z3ishuoFtG1T+Cj4evhV+E94wkbqxbRNG/gE+Db4bXigxurJ
tU1ZeCf4dPge+CN4iCbq6bRtZXhP+Fz4YfgLePim6lm0TS14f/gS+En4O3jU
Zuq5tW0D+FD4KvgF+Bd4nObqBbVNc/ho+Eb4NfhveKIW6iW0bVv4JPh2+F14
4JbqKbVtOXgX+Az4PvhjeKhW6um1TVV4L/h8+BH4S3iE1urZtG1tuIUvhZ+G
v4dHb6OeR9s0gg+Dr4FfhH+Dx22rXljbtoCPhW+C34D/gSdpp15S27SHT4bv
hN+DB22vnkrbVIB3hc+C74c/hYfuoJ5R21aD94EvgB+Dv4JH6qieXdvUhQ+E
L4efgX+Ex+iknk/bNoaPgK+FX4Z/h8fvrF5E27SCj4Nvgd+E/4Mn7aJeWtt2
gE+F74I/gAfrqp5G21aEd4fPhh+EP4OH7aaeSdvUgPeFL4Ifh7+BR+6unlPb
1oMPhq+An4N/gsfqoZ5f2zSFj4Svh1+B/4Qn6KleTNu2hk+Ab4Xfhpte6sm1
bRl4J/g0+B74Q3iI3upptU1leA/4XPgh+At4uD7qWbRtTXh/+GL4SfhbeNS+
6rm0TQP4EPgq+Hn4F3jsfuoFtW0z+Gj4Bvg1+C94ov7qxbVNW/hE+Hb4HXjg
AeoptE05eGf4DPhe+GN4SKueXttWgfeCz4Mfgf8HjzBQPau2qQ0fAF8KP+Xr
66uyDs/r+ntfT4ibpHbKBY5HG+TXJcdFShd1oeN5BnnvX+R4Q68LOm2GeW1d
X+31AdcvBrx/seNfA3qJ43EHe73U8UJeW6dNiwBf5vgYrws6bTYFnHf9utcH
XP8T8P7ljice4p132pT02qxwvF2AO20mB/hKx3dom3vwIEPVU2nb8vCu8Jnw
/fAn8NDD1DNom2rw3vAF8KPwV/CIw9Wza9s68IHwZfAz8A/wGCPU82qbxvDh
8LXwS/Dv8Hgj1Yto25bwcfDN8Jvwv/Cko9RLaZsO8CnwXfD78GCj1VNrm4rw
bvDZ8APwZ/AwY9Qzadvq8L7whfDj8NfwyGPVc2ibevBB8BXws/BP8Jjj1PNr
2ybwkfB18CvwH/AE49WLapvW8PHwrfBbcDNBPZm2KQPvCJ8G3w1/CA8+UT2t
tq0E7wGfAz8Efw4PN0k9s7apCe8HXww/AX8LjzJZPZe2rQ8fAl8JPw//DI89
Rb2AtmkGHwXfAL8K/wVPOFW9uLZtA58I3wa/Aw80TT2Fti0L7wyfDt8LfwQP
OV09nbapAu8Jnwc/DP8PHn6GelZtWws+AL4Efgr+Dh5tpnpubdMQPhS+Gn4B
/hUeZ5Z6IW3bHD4GvhF+Hf4bnni2eglt0w4+Cb4DfhceZI56Sm1THt4FPhO+
D/4EHmquegZtWxXeGz4ffhT+Eh5xnno2bVMHbuHL4KfhH+DR56vn1baN4MPh
a+CX4N/g8RaoF9Y2LeFj4ZvhN+B/4UkWqpfStu3hU+A74ffhQRepp9a2FeDd
4LPgB+BP4WEWq2fUNtXhfeAL4cfgr+GRlqjn0LZ14YPgy+Fn4R/hMZeq59M2
TeAj4Ovgl+E/4PGXqRfVtq3g4+Fb4Lfg/+DJlquX1jYd4VPhu+EP4MFXqKfR
NpXg3eFz4Afhz+FhV6pn1rY14P3gi+An4G/gUVap59Q29eGD4Svh5+Cf4bFW
qxfQtk3ho+Dr4VfhP+EJ16gX0zZt4BPg2+C34YHWqifXNmXhneDT4Xvgj+Ah
1qmn07aV4T3hc+GH4S/g4derZ9E2teD94UvgJ+Hv4FE3qOfWtg3gQ+Gr4Bfg
X+BxNqoX1DbN4aPhG+HX4L/hiTapl9C2beGT4Nvhd+GBN6un1Lbl4F3gM+D7
4I/hobaop9c2VeG94PPhR+Av4RG2qmfTtrXhFr4Ufhr+Hh59m3oebdMIPgy+
Bn4R/g0ed7t6YW3bAj4Wvgl+A/4HnmSHeklt0x4+Gb4Tfg8edKd6Km1TAd4V
Pgu+H/4UHnqXekZtWw3eB74Afgz+Ch5pt3p2bVMXPhC+HH4G/hEeY496Pm3b
GD4CvhZ+Gf4dHn+vehFt0wo+Dr4FfhP+D550n3ppbdsBPhW+C/4goPc6Hmy/
tEmjbSvCu8Nnww/Cn8HDHlDPpG1qwPvCF8GPw9/AIx9Uz6lt68EHw1fAz8E/
wWMdUs+vbZrCR8LXw6/Af8ITHFYvpm1bwyfAt8Jvw80R9eTatgy8E3wafA/8
ITzEUfW02qYyvAd8LvwQ/AU83DH1LNq2Jrw/fDH8JPwtPOpx9VzapgF8CHwV
/Dz8Czz2CfWC2rYZfDR8A/wa/Bc80Un14tqmLXwifDv8DjzwKfUU2qYcvDN8
Bnwv/DE85Gn19Nq2CrwXfB78CPw/eIQz6lm1TW34APhS+Cn4e3i0s+p5tG1D
+DD4avhF+Fd43HPqhbRNC/gY+Cb4dfgfeOLz6iW1bTv4ZPgO+D14kAvqqbRt
eXhX+ExfZ702/NhP1/cH+H7HnwT0AcdDX/T6oOMZvLZOm2oBfsjx3l4XdNos
CDjv+lGvD7j+KuD9hx2PeMk777TJ7rU54nidAHfaDAzwo44vC3CnzZkAP+b4
B1+finbkSWinTYzLfj05zYiT0VzP6+t6hcquS+h6Y18nrxFxchrXh/v6fdsr
PbK7vtbXOwfNqFvI9Uu+HuyXZV3/7mu/aclruB7vil9H9/v4xq4X8fX9myve
tXW9pa9XvvP7ANfH+bpzsEw7B7m+2dd543yZO9b1m7728QzX//r6fPF+LRa7
nvSqX8/0u5x1rpfydWPfQNc7+Dqt39c/4voUX/tN/3nO9V2+3r+50v2brt/3
te/4E9eDXfPryr4v4HpqX/su76frFX39NLTfJx53vJuvfbcjotNmtq97Zn+Z
J47rB3zt3DDXn/k6jO+CXQ9z3a/97v7LPK5n8vU8v8st7np1X7dYvG9zJdf7
+tp3e+q6vtDXv8753SDXj/va93N0dv21r8f5jevneuQbfu37+Ue4nsPXiXwL
4Xo9X/td/Ze5rg/y9Ra/27XC9RW+7ue7INfP+rqE7w+uf/K1b/xJ12Pe9Otb
futwxfX8vvZ9nfuuN/F1O98NcH2kr32374vr6256+37C8Ss3vX132v646e27
6wluefvuetFb3r673vqWt++uj7/l7bvrW295++76rVvevrtubnv77nqy296+
u17mtrfvrne87e2769Nue/vu+u7b3r67/vC2t++uB7/j7bvrae94++56pTve
vrve4463767PuePtu+uH7nj77vrzO96+ux7urrfvrme+6+37Scdr3vX23Wnb
7663764vvuvtu+sn7nr77vrbu96+ux7lnrfvrue65+276/Xvefvu+pB73r67
vvKet++un7/n7bvrn+95++567Pvevrte4L637643u+/tu+uj7nv77vqG+96+
u371vrfvrv+67+276wkfePvuevEH3r673uaBt++uT3zg7fspx7dpmzvwQA/V
U2jbsvDO8OnwvfBH8JCP1NNpmyrwnvB58MPw/+DhH6tn1ba14APgS+Cn4O/g
0Z6o59Y2DeFD4avhF+Bf4XGeqhfSts3hY+Ab4dfhv+GJn6mX0Dbt4JPgO+B3
4UGeq6fUNuXhXeAz4fvgT+ChXqhn0LZV4b3h8+FH4S/hEf9Tz6Zt6sAtfBn8
NPwDPPpL9bzathF8OHwN/BL8GzzeK/XC2qYlfCx8M/wG/C88yWv1Utq2PXwK
fCf8PjzoG/XU2rYCvBt8FvwA/Ck8zFv1jNqmOrwPfCH8GPw1PNI79Rzati58
EHw5/Cz8Izzme/V82qYJfAR8Hfwy/Ac8/gf1otq2FXw8fAv8FvwfPNlH9dLa
piN8Knw3/AE8+Cf1NNqmErw7fA78IPw5POxn9czatga8H3wR/AT8DTzKF/Wc
2qY+fDB8Jfwc/DM81lf1Atq2KXwUfD38KvwnPOE39WLapg18Anwb/DY80Hf1
5NqmLLwTfDp8D/wRPMQP9XTatjK8J3wu/DD8BTz8T/Us2qYWvD98CfykrxPn
TVXyr+vvAvyM41F/+bd12uT22px1vEGAO22GBvg5x1cFuNPmQoCfd/yL1wmd
NnF++3dB1wt63dD15l5b10d7vcD1jV4fcP2a1w9c/+21ueB4oj/SpoS2bQuf
BN8OvwsP/Fc9pbYtB+8CnwHfB38MD/VPPb22qQrvBZ8PPwJ/CY9gsoln07a1
4Ra+FH4a/h4ePZB6Hm3TCD4MvgZ+Ef4NHjewemFt2wI+Fr4JfgP+B54kiHpJ
bdMePhm+E34PHjSoeiptUwHeFT4Lvh/+FB46mHpGbVsN3ge+AH4M/goeKbh6
dm1TFz4Qvhx+Bv4RHiOEej5t2xg+Ar4Wfhn+HR4/pHoRbdMKPg6+BX4T/g+e
NJR6aW3bAT4Vvgv+AB4stHoabVsR3h0+G34Q/gweNox6Jm1TA94Xvgh+HP4G
Hjmsek5tWw8+GL4Cfg7+CR4rnHp+bdMUPhK+Hn4F/hOeILx6MW3bGj4BvhV+
G24iqCfXtmXgneDT4HvgD+EhIqqn1TaV4T3gc+GH4C/g4SKpZ9G2NeH94Yvh
J+Fv4VEjq+fSNg3gQ+Cr4OfhX+Cxo6gX1LbN4KPhG+DX4L/giaKqF9c2beET
4dvhd+CBo6mn0Dbl4J3hM+B74Y/hIaOrp9e2VeC94PPgR+D/wSPEUM+qbWrD
B8CXwk/B38OjxVTPo20bwofBV8Mvwr/C48ZSL6RtWsDHwDfBr8P/wBPHVi+p
bdvBJ8N3wO/Bg8RRT6Vty8O7wmfC98OfwEPHVc+gbarBe8MXwI/CX8EjxlPP
rm3rwAfCl8HPwD/AY8RXz6ttGsOHw9fCL8G/w+MlUC+ibVvCx8E3w2/C/8KT
JlQvpW06wKfAd8Hvw4MlUk+tbSrCu8Fnww/An8HDJFbPpG2rw/vCF8KPw1/D
IydRz6Ft6sEHwVfAz8I/wWMmVc+vbZvAR8LXwa/Af8ATJFMvqm1aw8fDt8Jv
wU1y9WTapgy8I3wafDf8ITx4CvW02rYSvAd8DvwQ/Dk8XEr1zNqmJrwffDH8
BPwtPEoq9Vzatj58CHwl/Dz8Mzx2avUC2qYZfBR8A/wq/Bc8YRr14tq2DXwi
fBv8DjxQWvUU2rYsvDN8Onwv/BE8ZDr1dNqmCrwnfB78MPw/ePj06lm1bS34
APgS+Cn4O3i0DOq5tU1D+FD4avgF+Fd4nIzqhbRtc/gY+Eb4dfhveOJM6iW0
TTv4JPgO+F14kMzqKbVNeXgX+Ez4PvgTeKgs6hm0bVV4b/h8+FH4S3jErOrZ
tE0duIUvg5+Gf4BHz6aeV9s2gg+Hr4Ffgn+Dx8uuXljbtISPhW+G34D/hSfJ
oV5K27aHT4HvhN+HB82pnlrbVoB3g8+CH4A/hYfJpZ5R21SH94EvhB+Dv4ZH
yq2eQ9vWhQ+CL4efhX+Ex8yjnk/bNIGPgK+DX4b/gMfPq15U27aCj4dvgd+C
/4Mny6deWtt0hE+F74Y/gAfPr55G21SCd4fPgR+EP4eHLaCeWdvWgPeDL4Kf
gL+BRymonlPb1IcPhq+En4N/hscqpF5A2zaFj4Kvh1+F/4QnLKxeTNu0gU+A
b4Pfhgcqop5c25SFd4JPh++BP4KHKKqeTttWhveEz4Ufhr+Ahy+mnkXb1IL3
hy+Bn4S/g0ctrp5b2zaAD4Wvgl+Af4HHKaFeUNs0h4+Gb4Rfg/+GJyqpXkLb
toVPgm+H34UHLqWeUtuWg3eBz4Dvgz+Ghyqtnl7bVIX3gs+HH4G/hEcoo55N
29aGW/hS+Gn4e3j0sup5tE0j+DD4GvhF+Dd43HLqhbVtC/hY+Cb4DfgfeJLy
6iW1TXv4ZPhO+D140ArqqbRNBXhX+Cz4fvhTeOiK6hm1bTV4H/gC+DH4K3ik
SurZtU1d+ED4cvgZ+Ed4jMrq+bRtY/gI+Fr4Zfh3ePwq6kW0TSv4OPgW+E34
P3jSquqltW0H+FT4LvgDeLBq6mm0bUV4d/hs+EH4M3jY6uqZtE0NeF/4Ivhx
+Bt45BrqObVtPfhg+Ar4OfgneKya6vm1TVP4SPh6+BX4T3iCWurFtG1r+AT4
VvhtuKmtnlzbloF3gk+D74E/hIeoo55W21SG94DPhR+Cv4CHq6ueRdvWhPeH
L4afhL+FR62nnkvbNIAPga+Cn4d/gceur15Q2zaDj4ZvgF+D/4InaqBeXNu0
hU+Eb4ffgQduqJ5C25SDd4bPgO+FP4aHbKSeXttWgfeCz4Mfgf8Hj9BYPau2
qQ0fAF8KPwV/D4/WRD2Ptm0IHwZfDb8I/wqP21S9kLZpAR8D3wS/Dv8DT9xM
vaS2bQefDN8BvwcP0lw9lbYtD+8KnwnfD38CD91CPYO2qQbvDV8APwp/BY/Y
Uj27tq0DHwhfBj8D/wCP0Uo9r7ZpDB8OXwu/BP8Oj9davYi2bQkfB98Mvwn/
C0/aRr2UtukAnwLfBb8PD9ZWPbW2qQjvBp8NPwB/Bg/TTj2Ttq0O7wtfCD8O
fw2P3F49h7apBx8EXwE/C/8Ej9lBPb+2bQIfCV8HvwL/AU/QUb2otmkNHw/f
Cr8FN53Uk2mbMvCO8Gnw3fCH8OCd1dNq20rwHvA58EPw5/BwXdQza5ua8H7w
xfAT8LfwKF3Vc2nb+vAh8JXw8/DP8Njd1Atom2bwUfAN8KvwX/CE3dWLa9s2
8InwbfA78EA91FNo27LwzvDp8L3wR/CQPdXTaZsq8J7wefDD8P/g4XupZ9W2
teAD4Evgp+Dv4NF6q+fWNg3hQ+Gr4RfgX+Fx+qgX0rbN4WPgG+HX4b/hifuq
l9A27eCT4Dvgd+FB+qmn1Dbl4V3gM+H74E/gofqrZ9C2VeG94fPhR+Ev4REH
qGfTNnXgFr4Mfhr+AR7dqufVto3gw+Fr4Jfg3+DxBqoX1jYt4WPhm+E34H/h
SQapl9K27eFT4Dvh9+FBB6un1rYV4N3gs+AH4E/hYYaoZ9Q21eF94Avhx+Cv
4ZGGqufQtnXhg+DL4WfhH+Exh6nn0zZN4CPg6+CX4T/g8YerF9W2reDj4Vvg
t+D/4MlGqJfWNh3hU+G74Q/gwUeqp9E2leDd4XPgB+HP4WFHqWfWtjXg/eCL
4Cfgb+BRRqvn1Db14YPhK+Hn4J/hscaoF9C2TeGj4OvhV+E/4QnHqhfTNm3g
E+Db4LfhgcapJ9c2ZeGd4NPhe+CP4CHGq6fTtpXhPeFz4YfhL+DhJ6hn0Ta1
4P3hS+An4e/gUSeq59a2DeBD4avgF+Bf4HEmqRfUNs3ho+Eb4dfgv+GJJquX
0LZt4ZPg2+F34YGnqKfUtuXgXeAz4Pvgj+Ghpqqn1zZV4b3g8+FH4C/hEaap
Z9O2teEWvhR+Gv4eHn26eh5t0wg+DL4GfhH+DR53hnphbdsCPha+CX4D/gee
ZKZ6SW3THj4ZvhN+Dx50lnoqbVMB3hU+C74f/hQeerZ6Rm1bDd4HvgB+DP4K
HmmOenZtUxc+EL4cfgb+ER5jrno+bdsYPgK+Fn4Z/h0ef556EW3TCj4OvgV+
E/4PnnS+emlt2wE+Fb4L/gAebIF6Gm1bEd4dPht+EP4MHnaheiZtUwPeF74I
ftzX0a40b7jL9Te+fvs3fPo+Fx2PvMivj6Xa/ivPJcdz+np+1QYnfztt6/m6
x4AQ0/dednywryusWt+0/xXHV/g65dUamQtcdfzcIu/zrzn+SdvEWqyeX9s0
hY+Er4dfgf+EJ1iiXkzbtoZPgG+F34abperJtW0ZeCevV7g+zesr1x3fE3D+
puMPvbZOmxDLPL/leFqvrdOmcoDfdrxHgDtt5gb4HccPBbjT5kWA33U83HLP
nTZZvDb3HK8Z4E6b/gF+3/HFAe60ORngDxx/G+BOm6grPH/oeC6vrdOmQYA/
cnyItlkFPw//Ao+9Ur2gtm0GHw3fAL8G/wVPtEq9uLZpC58I3w6/Aw+8Wj2F
tikH7wyfAd8LfwwPuUY9vbatAu8Fnwc/Av8PHmGtelZtUxs+AL4Ufgr+Hh5t
nXoebdsQPgy+Gn4R/hUed716IW3TAj4Gvgl+Hf4HnniDeklt2w4+Gb4Dfg8e
ZKN6Km1bHt4VPhO+H/4EHnqTegZtUw3eG74AfhT+Ch5xs3p2bVsHPhC+DH4G
/gEeY4t6Xm3TGD4cvhZ+Cf4dHm+rehFt2xI+Dr4ZfhP+F550m3opbdMBPgW+
C34fHmy7emptUxHeDT4bfgD+DB5mh3ombVsd3he+EH4c/hoeead6Dm1TDz4I
vgJ+Fv4JHnOXen5t2wQ+Er4OfgX+A55gt3pRbdMaPh6+FX4LbvaoJ9M2ZeAd
4dPgu+EP4cH3qqfVtpXgPeBz4Ifgz+Hh9qln1jY14f3gi+En4G/hUfar59K2
9eFD4Cvh5+Gf4bEPqBfQNs3go+Ab4Ffhv+AJD6oX17Zt4BPh2+B34IEOqafQ
tmXhneHT4Xvhj+AhD6un0zZV4D3h8+CH4f/Bwx9Rz6pta8EHwJfAT8HfwaMd
Vc+tbRrCh8JXwy/Av8LjHFMvpG2bw8fAN8Kvw3/DEx9XL6Ft2sEnwXfA78KD
nFBPqW3Kw7vAZ8L3wZ/AQ51Uz6Btq8J7w+fDj8JfwiOeUs+mberALXwZ/DT8
Azz6afW82rYRfDh8DfwS/Bs83hn1wtqmJXwsfDP8BvwvPMlZ9VLatj18Cnyn
r7cNWR9r2WPH7/u65aQBB2s/dTzoOb+Os6BCqwjPHU/t63NrE0Q68sLxCr4e
uPvdjp4vHe/m66wn9zdM99rxWb5+fm18yEdvHD/g61lPGmyY9s7xp74u9zFD
zTIfHA9z3ru+T45n9HVzv1dyp011X589c+ZMWdf7+DqL36uL6wt9PWum38v1
Y968A66/9uY9cz3SBf95YT87nuOC/7wsTtu6F/zn1XJ90AX/edb15Rf85y1z
/aw374zrH715n1yPedF/Xqwvjue76D+voNOmyUX/ec1dH3HRf94Y19dd9J+3
2fXL3rybrv/w5pmvjse/JG2KattW8PHwLfBb8H/wZJfVS2ubjvCp8N3wB/Dg
V9TTaJtK8O7wOfCD8OfwsFfVM2vbGvB+8EXwE/A38CjX1HNqm/rwwfCV8HPw
z/BY19ULaNum8FHw9fCr8J/whDfUi2mbNvAJ8G3w2/BAN9WTa5uy8E7w6fA9
8EfwELfU02nbyvCe8Lnww/AX8PC31bNom1rw/vAl8JPwd/Cod9Rza9sG8KHw
VfAL8C/wOHfVC2qb5vDR8I3wa/Df8ET31Eto27bwSfDt8LvwwPfVU2rbcvAu
8BnwffDH8FAP1NNrm6rwXvD58CPwl/AID9WzadvacAtfCj8Nfw+P/kg9j7Zp
BB8GXwO/CP8Gj/tYvbC2bQEfC98EvwH/A0/yRL2ktmkPnwzfCb8HD/pUPZW2
qQDvCp8F3w9/Cg/9TD2jtq0G7wNfAD8GfwWP9Fw9u7apCx8IXw4/A/8Ij/FC
PZ+2bQwfAV8Lvwz/Do//n3oRbdMKPg6+BX4T/g+e9KV6aW3bAT4Vvgv+AB7s
lXoabVsR3h0+G34Q/gwe9rV6Jm1TA94Xvgh+HP4GHvmNek5tWw8+GL4Cfg7+
CR7rrXp+bdMUPhK+Hn4F/hOe4J16MW3bGj4BvhV+G27eqyfXtmXgneDT4Hvg
D+EhPqin1TaV4T3gc+GH4C/g4T6qZ9G2NeH94YvhJ+Fv4VE/qefSNg3gQ+Cr
4OfhX+CxP6sX1LbN4KPhG+DX4L/gib6oF9c2beET4dvhd+CBv6qn0Dbl4J3h
M+B74Y/hIb+pp9e2VeC94PPgR+D/+frDlLZHQrge4btfJ5lQ81gE17P6utro
oidiuF7b18OHZTyVwPUBvt45MO6ZFK4v9fWrviHPZXD9lK/j9fx8Pofr731d
ocuDiwVcj/bDrwe2P3O5hOt5fL251Y6rFVxv6OunTZdcr+H6MF/HaDjhZgPX
V/u6VJ2+t1u4ftHXfaq3vNvB9a++Xlup6v0ersf96df3yxZ8OMD1Qr6OVDLt
4+Gut/B1kSIxn453fYyvu+UP+ny665t8vTzX+xfzXb/u65tZ77xc7vofX4fN
eOL1etcT//Lr/Gm2vN3ueklfd0y+4P1+19v5elGiMR+Puz7Z11fi+t0w13f4
OnjMpl+vu37P1zmjVPx+3/Ugv/26dfi8P5+7nsrXc0Kl/P3O9fK+Phc06t9v
rnf97f3+3xyf6XXG747v97rhD8efeD3hp+Oh//j3gV+OZ/D6/W/Hq3md8K/j
vb2u+M/xBV5bs8vnR73eEMjX5pXXDwI7HvGvf0cM6nh2rwsGc7yO1x2DOz7Q
6wUhHF/m9YWQjp/x2oR2/IO2ifFPPa+2aQwfDl8LvwT/Do9nsosX0bYt4ePg
m+E34X/hSQOpl9I2HeBT4Lvg9+HBAqun1jYV4d3gs+EH4M/gYYKoZ9K21eF9
4Qvhx+Gv4ZGDqufQNvXgg+Ar4Gfhn+Axg6nn17ZN4CPh6+BX4D/gCYKrF9U2
reHj4Vvht+AmhHoybVMG3hE+Db4b/hAePKR6Wm1bCd4DPgd+CP4cHi6UemZt
UxPeD74YfgL+Fh4ltHoubVsfPgS+En4e/hkeO4x6AW3TDD4KvgF+Ff4LnjCs
enFt2wY+Eb4NfgceKJx6Cm1bFt4ZPh2+F/4IHjK8ejptUwXeEz4Pfhj+Hzx8
BPWs2rYWfAB8CfwU/B08WkT13NqmIXwofDX8AvwrPE4k9ULatjl8DHwj/Dr8
NzxxZPUS2qYdfBJ8B/wuPEgU9ZTapjy8C3wmfB/8CTxUVPUM2rYqvDd8Pvwo
/CU8YjT1bNqmDtzCl8FPwz/Ao0dXz6ttG8GHw9fAL8G/wePFUC+sbVrCx8I3
w2/A/8KTxFQvpW3bw6fAd8Lvw4PGUk+tbSvAu8FnwQ/An8LDxFbPqG2qw/vA
F8KPwV/DI8VRz6Ft68IHwZfDz8I/wmPGVc+nbZrAR8DXwS/Df8Djx1Mvqm1b
wcfDt8Bvwf/Bk8VXL61tOsKnwnfDH8CDJ1BPo20qwbvD58APwp/DwyZUz6xt
a8D7wRfBT8DfwKMkUs+pberDB8NXws/BP8NjJVYvoG2bwkfB18Ovwn/CEyZR
L6Zt2sAnwLfBb8MDJVVPrm3KwjvBp8P3wB/BQyRTT6dtK8N7wufCD8NfwMMn
V8+ibWrB+8OXwE/C38GjplDPrW0bwIfCV8EvwL/A46RUL6htmsNHwzfCr8F/
wxOlUi+hbdvCJ8G3w+/CA6dWT6lty8G7wGfA98Efw0OlUU+vbarCe8Hnw4/A
X8IjpFXPpm1rwy18Kfw0/D08ejr1PNqmEXwYfA38IvwbPG569cLatgV8LHwT
/Ab8DzxJBvWS2qY9fDJ8J/wePGhG9VTapgK8K3wWfD/8KTx0JvWM2rYavA98
AfwY/BU8Umb17NqmLnwgfDn8DPwjPEYW9XzatjF8BHwt/DL8Ozx+VvUi2qYV
fBx8C/wm/B88aTb10tq2A3wqfBf8ATxYdvU02rYivDt8Nvwg/Bk8bA71TNqm
BrwvfBH8OPwNPHJO9Zzath58MHwF/Bz8EzxWLvX82qYpfCR8PfwK/Cc8QW71
Ytq29f/3/wDntG/t
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
66Vtu47wyfB/4XfgIWdbT2PbVYJ3h8+C74U/hoebYz2zba8GvC98AfwI/AU8
ylzrOW27+vCB8GXwU/D38FjzrBew7TWFj4CvgV+Ef4UnnO9rr/KF4yVXfizg
82LahU5N+LFJ2rXRznik1vrd6uO0E+xL2OKo+mbt8Dsexzmvfl163o9Nq8/c
UA+yQPr5mm6DH6kn176+LG/u1+pltY/9E+zVF/VO2ttm+/7JJ/Gp2kunjq/5
p7S3Q1syhvo97SEjfXukHuofX+/xvVr31OrptJv2W5Umq3pl7So9u97Jp95D
u3CXPJNLqM/WztQuaOlK6vu1fUf7s7b6E+0IjcZtaKoefqH0z9o1WrZXz6L9
omr8eD3Ua0nfuVH+4dn+6n9r+97tISPVF2pvlx1QP6otb88c9Vfa07IHWbRU
Peoi6aHygajn1u6eemz4HeoNtJslrb7/oPpgbdmd0+rLpV3RmA/SXlU/o50l
8oq799Q/aCcO13nKc/U4i6UjhcxV5qN6wcW/z5/P4s21X305tDGMtDdS+9a7
0a2iqK/TPilviPolbTldkqt/l07oe/WhGdUTLZGeISeIegnt4Rc7vimi3la7
x+kci8upT9CWj6eG+hZt39FHaKR+U7vYzlEHWqsHXSqddYvvDFBPqZ1kXez0
f6uXky4ob8dQ9S7avnd/6nj1adqv53QoO1N9l/Zt+YDU72vL+KxWD7NMWl5+
q3p67ZVywqpX1Z4pE6jeU3tEr1jDL6rPlW4op+tt9QPaLdsveftE/al2DfkH
6hGWSxdvnK3ud/Vs2r6KGPKLeG1tOT0iSPtOCOkoFX2vqL5I23f2Z0iiflza
e1PEd8Kov9b27c207OrRV0jLx1FQPY/2Lhkg9UbavunbUkV9iPasZN/a1FNf
qS3j20L9rLYcfkf1T9qtZAfV466UefdNf4FB6oW1S4TynXHqLbRlXKaqj9aW
l5uvvl476ofMkVeoX9EOJiew+g/tt0/29N6lnmSVtJyeR9RLap+RgVZvL71n
96VoM66rT9ReLV+gvk17ti5w4re09XRQD75aure8YV/FU2n7NFE4aVdB27f6
Xoqm3lVblo8E6jO05e1Ppb5b+k5yOUL1h9rRZKDUw66RDj5pQf3i6hm1ZVwr
qlfTlsOtpd5b27d49WmiPk9bd1j9kLYs793Vn0m7ub7x8NQjrZUeIx+genbt
vk2uBZ+kXle7bb3522ar99euIye0+hJtOR3XqZ/Q9q1Gl7erv9VOKQOuHmOd
tO/sKHRKPZ90Qlm+Lqs31paP/676MG3fatjgmfoq7fPyBqqf15bL3U/1z9qy
XIT+Jh5/vbSeUNJeEe2xckFUb6X9d+iBvlNefIx0Qbm8ZFDfqC3jmUv9qrYc
XmH1X9q5ZcFRT7pBOtVT3wqvXlpblvMG6h20ZRxaqU/Wlh/XRX27tlyN+qjf
kW4ol/8h6iE2SsvyOU49jbacfjPUK2rPlwu0endt39Ww3yr1mdpyud2ivldb
lqs96o+05eM+ph5uk8x3WVkA1TNp+67GoW6p19CWy9tj9T7asjy8UV+grW+v
+mFt39l6Lfh38Rfaj+QCKe1F3iwtl5OY6jm1ZRwTqdfTlsNJoz5Qep5vWhpn
U1+qLbcfBdRPaesNlPo7bTn9K6vH2iJdXxdk8fza5eQTVG+qLZf7DurDtWW5
7Km+RnqPnG4D1S9oh5ETXv2rtm+16DxFPcFWabm8zlMvpi3L0zL11try8W5Q
H6e9UX6g+iZtWa0OqV/XlsvZGXW3TeZdloNr6sm15e18oF5Gu8GzsCdfqHfS
1tsf9SnacvkI8kN8h7aMX1hp76627H5U9VDbpcPKDYR6Wm253UipXlna/ScL
kvpf2lfkhkp9tvZhOUD1fdqbZYFWf6Itl/ea6n/+Ky3LY2P1LNpyerVRr6nt
uzta0039b225Heyn/o90QrmcDlc/qi3L0QT1l9rycc5Sj7pDOp7c0Kjn0pbb
rzXqDbTl8rVNfZC2jP9+9eXa8vadVD8tXVBu1y+pf9CW25076rF3Ssvl4ql6
QW0Zt3fqzbR1d9VHasvtcaif4mu15WyOKO0uacvyHFv9m7YuUOqJdsm8C6dX
L64tt6M51Ntqy+W8kPp4bVkOy6hv0ZbTqar6De1rcgFTD7pbWm7/Wqqn0JbL
Z2f1ctqy/PRW7yztycc3WH2atjwujFXfqS23W9PU72vL5WqBeug9iQLPS+rp
tfV5Sb2Ktj4vqffU1ucl9Tna+rykfkDa/7yk/p+2Pi+pR9ibKPC8pJ5VW28n
1Gtr6/PSL/F+2vq8JO0WaevzkvoxbX1eUn8t7X9eUo+2L1HgeUk9j7Y+L6k3
1NbnJfUh2vq8pL5CW2/I1c9q6/OS+kdtfV5Sj7s/UeB5Sb2QtP95Sb2Ftj4v
qY/S1ucl9fXa+rykfllbn5fUf2jr85J64gOJAs9L6iW19XlJvZ22Pi+pT5T2
Py+pb9XW5yX1W9r6vKQe7GCiwPOSeipt/1bQ5+WlEw5pFHNII2nXVTpjuP2+
/6hPl644IWmpCUmDiO+WbhhTvkHaeyDtzXncc85j9bCHfD1OvrxUUPEM0muX
yybtqknv0RcIJt5L+s7mdtc3t5N286Rf5z39Lu9p9YPSEWV3MgYXfyadUH78
BGkv4mGZb/nyd+rZpStWky2EeB3pjtflBaRdf2lPDjdmSPHF0vNk93tKuxPS
a2V3rqu/kT4jPz5vKPEYR2R/5cvnSHt5j/x+P0OLN7btDYWvgp+Df4bHO2q9
iG2vJXwMfAP8KvwnPOkx66Vsuw7wSfDt8NvwEMetp7btKsK7wWfC98Afwf84
YT2Tba86vA98Pvww/Dk88knrOWy7evAB8KXwk/B38JinrOe37TWBD4evhl+A
f4EnOG29qG3XGj4Wvgl+De7OWE9m25WBd4RPgf8LvwsPedZ6WtteJfhf8Fnw
ffDH8D/PWc9s29WE94X/Az8CfwmPct56Ltteffgg+DL4afh7eOwL1gvYds3g
I+Br4Rfh3+AJL1ovbttrAx8P3wy/AQ9yyXoK215ZeGf4VPhO+D146MvW09l2
VeA94HPg++H/wcNfsZ7VtlcL3g++EH4M/goe7ar13LZdQ/hg+Ar4GfhHeJxr
1gvZ9prDR8HXwS/Dv8MTX7dewrZrB58A3wq/CQ92w3pK2648vAt8OnwX/AE8
zE3rGWx7VeG94HPhB+FP4RFvWc9m29WBe/DF8OPwN/Dot63nte01gg+Fr4Sf
g3+Cx7tjvbBt1xI+Gr4BfgX+E57krvVStr328EnwbfDb8OD3rKe27VWAd4PP
gO+BP4T/cd96RtuuOrw3fD78EPw5PNID6zlse3XhA+BL4Cfhb+ExH1rPZ9s1
gQ+Dr4afh3+Bx39kvahtrxV8LHwj/Br8FzzZY+ulbbuO8Mnwf+F34CGfWE9j
21WCd4fPgu+FP4aH+896ZtteDXhf+AL4EfgLeJSn1nPadvXhA+HL4Kfg7+Gx
nvm64sDXW/s+iiBeQHpYo5vRUr6PIt5UumX/whUifYghPkK65Pwlw75+iCO+
Rjrj3nD77n9MIH5Rv19+3LdE4l+le3htYtf5nkQ84XP5eRHjbzn9PZl4Mema
885UKfojhXgb6bIZfTv0I5X4OOm8e7KNTvczjfhm6bQVn6Ra8DOd+HXphHdm
HIr+K4N4kBe+Dr118bqDvzKKJ3/x+3gzi5f93QWziHf63V5W8am/e0828R3/
+/4c4vf+9/05xUO9/P39ucTT/e49ucUr/26XV7zH7y6YT3z2/74/v/j+/31/
AfEn//OC4uFf/XZpL8vvdoXEa/3ugtLe37/bU1/4v+9XP/q/7y8s/kq6x1+y
SXtRX/v6pW7quaWb61ZEvIH0rZuySbvB0tX1f58pKr5c+oRu0u6MdFHdiol/
kN7xr2zSLs4bX2fNIltx8YLS+j8vLZd2zaUT61ZCfKT0jOmySbt10hEjyVZS
/JL0MN2k3fc3v4+3lHiit76OrF8v7Uq8/f3z1du+/b0/6hPe/t5/9S1vfx+v
+s23v98f9aDvfr+f6inf/d4f9XLvfu+/epd3v49Xfdq73++P+q53v99P9fvv
fr//6mHe//681NO//328pcWr2vZ6wufCD8CfwiN8sJ7Ntlcb7v2vy4gvsu2O
w1/Do3+0nse2awQfAl8JPwv/BI/7yXph214L+Gj4evgV+A94ks/WS9p27eET
4dvgt+DBv1hPZdtVgHeFz4Dvhj+Eh/1qPaNtrxq8N3we/BD8GTzSN+vZbbu6
8P7wJfAT8LfwGN+t57PtNYYPg6+Cn4d/hsf/Yb2IbdcKPga+EX4V/gue9Kf1
0ra9DvDJ8O3wO/AQv6ynse1VhHeHz4TvhT+Ch3OJjWey7WrA+8AXwA/DX8Aj
B7Ge07ZXDz4QvhR+Cv4OHiuo9fy2XVP4cPga+AX4V3iCYNaL2fZaw8fBN8Gv
w11w68lte2XgneBT4Dvgd+GhQlhPa9tVhv8Fnw3fB38C/zOk9Sy2vZrwv+H/
wI/CX8KjhrKey7ZrAB8EXw4/Df8Ajx3aekHbXjP4SPha+CX4N3iiMNaL23Zt
4ePhW+A34EHDWk9h25WDd4ZPg++E34eH/sN6etteFXhP+Bz4Afh/8AjhrGe1
7WrD+8EXwY/BX8Oj/Wk9j22vIXwIfAX8LPwjPG5464VsuxbwUfD18MvwH/DE
EayXtO21g0+Eb4XfggeLaD2Vba88vCt8Onw3/AE8bCTrGWy7avBe8Hnwg/Bn
8IiRrWe37dWB94cvhp+Av4HHiGI9r23XGD4Uvgp+Dv4ZHi+q9SK2vZbwMfAN
8Kvwn/Ck0ayXsu06wCfBt8Nvw0NEt57atqsI7wafCd8DfwT/I4b1TLa96vA+
8Pnww/Dn8Mgxreew7erBB8CXwk/C38FjxrKe37bXBD4cvhp+Af4FniC29aK2
XWv4WPgm+DW4i2M9mW1XBt4RPgX+L/wuPGRc62lte5Xgf8FnwffBH8P/jGc9
s21XE94X/g/8CPwlPEp867lse/Xhg+DL4Kfh7+GxE1gvYNs1g4+Ar4VfhH+D
J0xovbhtrw18PHwz/AY8SCLrKWx7ZeGd4VPhO+H34KETW09n21WB94DPge+H
/wcPn8R6VtteLXg/+EL4MfgreLSk1nPbdg3hg+Er4GfgH+FxklkvZNtrDh8F
Xwe/DP8OT5zcegnbrh18Anwr/CY8WArrKW278vAu8OnwXfAH8DAprWew7VWF
94LPhR+EP4VHTGU9m21XB+7BF8OPw9/Ao6e2nte21wg+FL4Sfg7+CR4vjfXC
tl1L+Gj4BvgV+E94krTWS9n22sMnwbfBb8ODp7Oe2rZXAd4NPgO+B/4Q/kd6
6xltu+rw3vD58EPw5/BIGaznsO3VhQ+AL4GfhL+Fx8xoPZ9t1wQ+DL4afh7+
BR4/k/Witr1W8LHwjfBr8F/wZJmtl7btOsInw/+F34GHzGI9jW1XCd4dPgu+
F/4YHi6r9cy2vRrwvvAF8CPwF/Ao2azntO3qwwfCl8FPwd/DY2W3XsC21xQ+
Ar4GfhH+FZ4wh/Vitl0b+Dj4Zvh1eJCc1pPbdmXhneBT4Tvg9+ChcllPZ9ur
DO8Bnw3fD38CD5/behbbrhb8b/hC+FH4K3jUPNZz2/YawAfDl8PPwD/A4+S1
XtC2aw4fCV8HvwT/Dk+Uz3oJ215b+AT4Ful5iWMdfFRP/ab0kMrh6+zZoR40
v6/bDgj2ZnqcsuIppSuv/zykSy9pr5x0znsv4pa7qt5FOn7k++uT5ywnPk06
eOErJd1UabdL+mmnk7euflC/L31m/r6uG6qWFw9TwNdbz24JO3qDtJdeek6Q
VfOaR64gXlV6UKYF2Qt2kvZ6SrduNPVErDPqc6WXliy+rmeMiuIHpGfeKdjn
UXFp91R6TI88Jap0V49Q0Nf9I2aPvGeRejbprksz3kx7Ub22dIuCaZZOD15J
3JOufSVZl5BZpb1F0uU7JszfpYn6cemCoeOEuTNB/bV01nnRLpTdpx69kK9T
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
4+XiSruQUX19bHPUV8NSq6eRHjG9RuQDOdUrSZfsMyPbr+Lq3aVDN7hZM3c1
9VnSRwol7NOtifpe6SFJm8xd20n9sXTxUIv3PeunHi6ar0M+ffIw+Rj1zNIH
9ADUa0gPWtM+7ezl6n2li05YV+HKVvUF0kG7ve8c5bD6Eel9NXJMKX9R/YX0
gNy9tg2/rx4luq8Lxtt548Ab9ZzRA5+XqyVe/3d70t7A/3lt8WX/c2nv1P+8
jvj7/7m0FyvGb68rXuB3J5T2mv7uguojfndD9TW/21O/+LvnqX/93XvUE8ZM
Evj3VasXk9Y/d/5UvU3M3/tTT3zc76+PJu02//761OrXf399QfUgsQJfP1k9
eazfP1+9bKzfX19fvJO0/8/DS7up0vr34Cup75DWv89eS/2etP55+MbqoWIH
fn5r9XTS+vfiu6hXlta/395bvYe0/vn4QeqzpfXPuY9S3x/79/6rP5HWv+8+
Wz18nCT///flF6tnkdY/975avZa0/r35Lep/x/n9/qsvtO0dhb+CR41rPbdt
rwF8MHw5/Az8AzxOPOsFbbvm8JHwdfBL8O/wRPGtl7DttYVPgG+B34QHTWA9
pW2vHLwLfBp8F/w+PExC6+ltu6rwnvC58APwp/AIiaxns+3VhnvwRfDj8Nfw
6Imt57HtGsGHwFfCz8I/weMmsV7YttcCPhq+Hn4F/gOeJKn1krZde/hE+Db4
LXjwZNZT2XYV4F3hM+C74Q/hYZNbz2jbqwbvDZ8HPwR/Bo+Uwnp2264uvD98
CfwE/C08Rkrr+Wx7jeHD4Kvg5+Gf4fFTWS9i27WCj4FvhF+F/4InTW29tG2v
A3wyfDv8DjxEGutpbHsV4d3hM+F74Y/g4dJaz2Tb1YD3gS+AH4a/gEdOZz2n
ba8efCB8KfwU/B08Vnrr+W27pvDh8DXwC/Cv8AQZrBez7bWGj4Nvgl+Hu4zW
k9v2ysA7wafAd8DvwkNlsp7WtqsM/ws+G74P/gT+Z2brWWx7NeF/w/+BH4W/
hEfNYj2XbdcAPgi+HH4a/gEeO6v1gra9ZvCR8LXwS/Bv8ETZrBe37drCx8O3
wG/Ag2a3nsK2KwfvDJ8G3wm/Dw+dw3p6214VeE/4HPgB+H/wCDmtZ7XtasP7
wRfBj8Ffw6Plsp7HttcQPgS+An4W/hEeN7f1QrZdC/go+Hr4ZfgPeOI81kva
9trBJ8K3wm/Bg+W1nsq2Vx7eFT4dvhv+AB42n/UMtl01eC/4PPhB+DN4xPzW
s9v26sD7wxfDT8DfwGMUsJ7XtmsMHwpfBT8H/wyPV9B6EdteS/gY+Ab4VfhP
eNJC1kvZdh3gk+Db4bfhIQpbT23bVYR3g8+E74E/gv9RxHom2151eB/4fPhh
+HN45KLWc9h29eAD4EvhJ+Hv4DGLWc9v22sCHw5fDb8A/wJPUNx6UduuNXws
fBP8GtyVsJ7MtisD7wifAv8XfhcesqT1tLa9SvC/pIsPe14mv99nSY+KeHVq
H7/vkz437eD97X5/LB0z0foMX/z+Zylf1182p3eOveqZpRdmGnm4m7arKf10
219RNvq9r3TGwk0bvPX7P9Ldj1VckXGf+hHpHZXzfWqv7V5KB72eqsgqv0cp
7evSTaKPfeb3XNLjnvm+Yr96felLXV4lb6ntBknH/X6982K/L5NuPOjIrgd+
Py29NNymsEkOqL+XfjlpfvVG2i52GV9njTdmwVy/F5DutajXy5t+bya9J12L
3HEPqo+QDrm5ypDa2m6tdNn8BX1vofpF6QmH0sa/7Pdv0lfKx2od7ZB6wrK+
jn85xOYq2q64tO/dCjLB722klz++Ve6M38dLv+5wfHr4w+qbpbN/3vKwrLa7
Id3Hk09EPUg5X+8LPb7vUb+nkJYMdUS9rLTsTnFt11la3o5Bfp8qfUM+Dr/v
lE7sOx3cUfV70i1zxy1WQNuFLu/r1fqC6umk35f+cONfv1eRzn3+bsqvfu8h
7dU51TXnMfU50od8Z193bW+/dLi2S8Jt8vt/0pXfT6z5zu/hK/h6mhzwcfWs
0reCt/O9Req1pJOOrpV3td/7SfuOdthzvy+UXjs784XUJ9SPSX9MliBhK23v
lXTe1X+0XeL3aBV9PUDecL/nlvadXcGSnlRvKB2+xNkKjbW9wdJVT++cOc/v
K6Rn1PB9on4/I33n9pQs8U6pf5RO3nJgvzraXpxKvm4vH7jfC0lv7FE3xhW/
N5f+6ko1iX5afZR0weHZ1lTV9tZJD4mU+NsEv1+WPjHdt4d+/y4d2ccRzqgn
ruzrmnrCqZeQnuN7e0b5vZ30A/l4/D5BOrXv9Ah9Vn2rdMfj8gLqN6VlPAb7
PVgVX+t4+j2ltCwPQc6pl5eW5amgttdF2nd2jPjb79Olo/5IemmH33dJ1x7s
O0C/P5Ce9+fPdrnOq4ep6utHk30rkrbLIJ1WBs7vVaV9e1Ppvd97SW9NL2eE
+lxpt2XWfx213UHp4gV8b7Dfn0qPOtyt/wu/R6wm66fv009zUT2bdEwZeG1X
R7p+wzzNlvrdk174JMW6R35fLP20oxyh+nHpjF98H7C2eyPdvf+LSfP9Hr26
rJ9hrt257fe80kF1wVFvJF0y9oYedbXdUGlZ3Wb4faW079ONeNXv56Tly2Nc
Uf8kLbtbTdvFq+Frebsm+r2wtH5cfm8pnVl/oPpoaflp5bXdBmkZl9F+vyKt
4+r3n9KyXIS5pp6kpqyfvuWqpLYrJX3Ft1wO8Xt76fhyQH6fJN3Ud7kIel19
m/Ry3+WqkLa7Lf1aBszvwWvJ+umblp1+Ty3dJ0ehON/9XkF6327fgn9DvZt0
aHlDtb0Z0uXPhPy12e97pCfVfOc7BPWH0tdkwG+q/1Hb177F5V4nbS+jdPM3
vjPO79WlV/aUC456b2m5GqS9pT5f2jcNkdtoe4ekfVV/md+fSx/QBUY9Uh1f
h01S9GOy2+o5pH1X38JNtb260r7VZ8wCvw+Qlnf/jt+XSCf1fXuCO+onpVv7
dr+etvdWeq0scH6PWVfWT/0B6vmk8/pOn5h31ZtID/CdvtW1vWHSR3zjM8nv
q6XDy/j6/bx0Vd/yEeme+hfpGbLAanvx68n6KQfg96LSyWX59nsrabl8hL2v
PlZaLl+ltL2N0nL5HOr3a9J6+fb7L2m5fQj2QD1ZfV/L7Uthba+0tNw+eX7v
KC1Xz11+nyztWz2i/vD7v9K+d69hnofqd6RTfi21sqe2C9lA1nu9wKinkd4s
H6DfK0l/nxBhXNZH6t2lC/vO1s7abpb0sH9kQVHfK30qzcUur/z+WDrqxr27
0z1WD9dQ1k+5wGm7zNLz9ARSryH9qOzQf574va90Wt+PS/5EfYF0Z9/hNNN2
R6S3PpRvUH8hrR+n36M08rWcTgn/U88pLadzfW1XX1rGaZbfB0rrOPt9mbQs
J7Geqp+SluWshrZ7Ly1HP9nvsRr7WpdzvxeQlstJ5GfqTaXlclZR242Qlsvp
WL+vkS4pl3O/X5Qe47ud+OO5+lfpC77bmVLaLmETWT/1BkO9mHRDGWC/t5Fe
7Jvu4C/Ux0k/lxtebbdZOvNIuaCoX5fu4bub3u33IE1l/Zzpu8L5Pbl0cLnB
ealeVrq0LiDqnaTHZfWtMH6fKn1Jbrj9vkPad/c2PNsr9XvScvXqou2FauZr
3/QmWu/3dNK+vW/32u+VpeXHp3+t3kO6l36B+mxpeXtX+H2/tH68fn8iLWdL
ijfq4ZvLeh9B9lg9i/Q133gt9Hst6YQy3n7/W7q57OBb9YXSK/WBQ/2o9Fu5
oPv9lXROWd79HrWFrJ++y0vsd+q5pQ9UkhtM9QbSYWUB9/tg6YryBvl9ufQU
eeB5r35G+obeUKh/kJbbq3F+j9PS13p75/eC0nJ7Ge6DenNpefXS2t5Iabm9
Hu73ddJ6e+/3S9JytQ/xUf27tDzeFNX2ErXytTxeDfB7CWl9vPN7W2nfzV7I
X36fIJ1UTxD1LdJt5YFP292UXi83VH4P2lrWT1mw/J5SOv8n+Qfq5aQH+Q63
q7brIn3M93Zv8Ps06Yjycft9l3R1feBUvy89S27otF2YNrJ+yoLp9/TSKWXc
/V5Vun0uecBQ7ykty10LbTdXWpbbRX4/IK3Lvd+fSg/RG0r1CG19LZe7htou
m7Rcbuf4vba0Xu797knL7Uac7+qLpOV2p5a2Oy4td0dT/f5aWm/3/B69nayf
esFQzyP9Uz4QbddIuqjvdnu834dIj5Dbfb+vlD6zUxYI9bPS0eWBX9t9kq4r
N9R+j9te1k+5YPm9sPQTPSHUW0in9z3uFtN2o6W7+h63B/p9vfR2edz3+xVp
p1sD8R+2XZIO1kvadu3hE+Hb4LfgwTtaT2XbVYB3hc+A74Y/hIftZD2jba8a
vDd8HvwQ/Bk8Umfr2W27uvD+8CXwE/C38BhdrOez7TWGD4Ovgp+Hf4bH72q9
iG3XCj4GvhF+Ff4LnrSb9dK2vQ7wyfDt8DvwEN2tp7HtVYR3h8+E74U/gof7
y3om264GvA98Afww/AU8cg/rOW179eAD4Uvhp+Dv4LF6Ws9v2zWFD4evgV+A
f4Un6GW9mG2vNXwcfBP8Otz1tp7ctlcG3gk+Bb4Dfhceqo/1tLZdZfhf8Nnw
ffAn8D/7Ws9i26sJ/xv+D/wo/CU86t/Wc9l2DeCD4Mvhp+Ef4LH7WS9o22sG
HwlfC78E/wZP5Fkvbtu1hY+Hb4HfgAftbz2FbVcO3hk+Db4Tfh8eeoD19La9
KvCe8DnwA/D/4BEGWs9q29WG94Mvgh+Dv4ZHG2Q9j22vIXwIfAX8LPwjPO5g
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
XqevgXnx+9SvgXlJqb7ja2BetN29r4F58Xuob4F5SaWe7ltgXrS9yt8C8+L3
Ht8C85Jaffa3wLxou/3fAvPi9yffAvPi9/DfA/OSRj3L98C8aLta3wPz4ve/
vwfmJa36wu+BedH2jn4PzIvfX30PzEs69ag/AvOi7XL/CMyL3xv8CMxLevXB
PwLzou0t/xGYF7+f+RGYlwzqH34E5kXbxfkZmBe/F/wZmJeM6s1/BuZF2xv5
MzAvfl/3MzAvfr/0MzAvmdS//wzMi7aX6FdgXvxe4ldgXjKrt/0VmBdtN+FX
YF78vuVXYF6yqN/8FZgXbS+oS/r/8+L3lNI6L1nVy0nrvGi7LtI6L36fJq3z
kk19l7TOi7Z3X1rnxe9hgiT9/3nxe3ppnZfs6lWldV60vZ7SOi9+nyut85JD
/YC0zou2eyqt8+L3CEGT/v+85FTPJq3zou3VltZ58bsnrfOSS32RtM6Ltjsu
rfPi99fSOi+51aMHS/r/86Lt5ZHWefF7I2mdF78PkdZ5yaO+UlrnRds7K63z
4vdP0jovedXjBk/6//Oi7QpL67z4vYW0jks+9dHSOi/a3nppnRe/X5HWecmv
/kNa50XbJQmR9P/nxe8lpXVeCqi3l9Z50fYmSuu8+H2btM5LQfVbtl3wkNZT
2XYV4F3hM+C74Q/hYUNZz2jbqwbvDZ8HPwR/Jq3Pg4XUI4X2dS55ACyinj10
YF6KqdeV1ufNEur9pfV5saT6ktCB86m0+glp+fGdyqq/ldbn0fLqMcIE9qei
er4wgf2ppN44TGB/qqgPCxPYn2rqq8IE9qeG+vkwgf2pqf45TGB/aqvHDxvY
n7rqRcIG9qe+equwgf1pqD7GttsIvwr/BU/6h/XStr0O8Mnw7fA78BDhrKex
7VWEd4fPhO+FP4KH+9N6JtuuBrwPfAH8MPwFPHJ46zlte/XgA+FL4afg7+Cx
IljPb9s1hQ+Hr4FfgH+FJ4hovZhtrzV8HHwT/DrcRbKe3LZXBt4JPgW+A34X
Hiqy9bS2XWX4X/DZ8H3wJ/A/o1jPYturCf8b/g/8KPwl3HefbjyXbdcAPgi+
HH4a/gEeO5r1gra9ZvCR8LXwS/Bv8ETRrRe37drCx8O3wG/Ag8awnsK2Kwfv
DJ8G3wm/Dw8d03p6214VeE/4HPgB+H/wCLGsZ7XtasP7wRfBj8Ff/25PPVps
0y6Pba8hfAh8Bfws/CM8bhzrhWy7FvBR8PXwy/Af8MRxrZe07bWDT4Rvhd+C
B4tnPZVtrzy8K3w6fDf8ATxsfOsZbLtq8F7wefCD8GfwiAmsZ7ft1YH3hy+G
n4C/gcdIaD2vbdcYPhS+Cn4O/hkeL5H1Ira9lvAx8A3wq/Cf8KSJrZf6P67u
MbyOpwHD+NS2bdtKUtu2m7RJbbdT27Zt27Zt2/Z7ds/7z3U9d7/d/U1OdnZn
Z8/VftjgHux6++Ae7vrk4B7t+s7gHu/6veCe7HqYVP/1dNczBvds16sE93zX
u2qbWfD98KfwSKnVc2jbWvA+8AXwY/DX8Jhp1PNpm4bwgfDl8DPwT/D4adX9
tG1z+Aj4Wvhl+A94snTqJbRNEHwcfAv8JtykV0+jbcrDO8CnwnfBH8DDZlDP
rG2rwrvDZ8MPwp/Bo2RUz6lt6sD7whfBj8PfwmNlUi+gbRvBB8NXwM/BP8MT
ZlYvrG384SPh6+FX4L/gybOol9K2reET4Fvht+Ehsqqn07YV4J3g0+B74A/h
4bOpZ9E21eE94HPhh+Av4FGzq+fWtnXh/eGL4Sfh7+BxcqgX1DZN4EPgq+Dn
4V/hiXKqF9W2AfDR8A3wa/Df8JS51Etrm7bwifDt8DvwULnV02ubSvDO8Bnw
vfDH8Ah51LNp2xrwXvB58CPwl/DoedXzaJv6cAtfCj8F/wCPm0/dR9s2hQ+D
r4ZfhH+DJ8mvXkzbtIKPgW+CX4f/hacqoF5W27aDT4bvcPrH6kQVJuxz/V6w
33c9dMHU/3/fdcimjmd02n1/dWqnbWWn3fdRl3K9q9MjnPdpt3J9ptPuv1+O
dH2/02ec912vdv2J0++c91efdT1SIU87r9+O8cH17E47r9POFauZ47Wc9v7/
h9O2t9PO666713Z9gdPu+7p7un7Uaff927Ncf+20+z7tPa7H8Amer+v5fILn
29zxBj7B83XaDPQJnq/ry5x23x/eyvUzPsHzdf2jT/B8XY/vGzxf1319g+fr
enPf4Pm2cHy4b/B8nTZrnXbf713b9Uu+wfN1/Ydv8HxdT+oXPF/XS/gFz9f1
QL//jven6+P8/vt9cfwd3xw8PrvT5mbw+HKu/wse7+96msL/jbeulwvu5a53
CO7zrk8J7u+u7wru5AGO3w/uIk6bsEX+6yauZwpu63rV4J7verfg3u/67OC+
7/qB4DYtHX8W3MmdtpGLBv9+13MGdxPXawe3db1vcM93fWFwL3f9eHCvd/1N
cG93PVax4ON1PX9wH3e9UXCfd31QcF93fUVw33f9bHA/d/1zcL93PUHx4PPv
euHgNq0cb6FtRsLXwa/Af8KTl1AvqW1aw8fDt8JvwUOUVE+rbSrAO8KnwXfD
H8LDlVLPom2rwXvA58APwZ/Do5ZWz6Vt6sL7wRfDT8DfwWOXUS+obRvDh8BX
ws/Dv8ATlVUvom0C4KPgG+BX4b/hKcqpl9a2beAT4dvgd+Ahy6un17YV4Z3h
0+F74Y/gESqoZ9U2NeA94fPgh+Ev4dEqqufRtvXgFr4Efgr+Hh63knohbdMU
PhS+Gn4B/g2euLJ6MW3bEj4GvhF+Hf4HnqqKehlt0w4+Cb4Dfhceuqp6Bm1T
Gd4FPhO+D/4EHrGaenZtWxPeGz4ffhT+Ch6junpebdMAPgC+DH4a/hEer4a6
r7ZtBh8OXwO/BP8OT1pTvbi2CYSPhW+G34D/g6eupV5O27aHT4HvhN+Hh6mt
nknbVoF3g8+CH4A/hUeuo55D29SG94EvhB+Dv4HHrKueX9s2hA+CL4efhX+C
J6in7qdtWsBHwNfBL8N/wpPVVy+pbYPg4+Fb4LfgpoF6Wm1bHt4RPhW+G/4A
Hq6hemZtUw3eHT4HfhD+HB6lkXoubVsH3g++CH4C/hYeu7F6AW3TGD4YvhJ+
Dv4FnrCJehFt6w8fBV8Pvwr/BU/RVL2UtmkDnwDfBr8ND9lMPZ22qQjvBJ8O
3wN/BA/fXD2rtq0O7wmfCz8MfwGP1kI9t7apB+8PXwI/CX8Pj+OvXkjbNoEP
ha+CX4B/hScOUC+qbVrCR8M3wq/B/8BTtlQvo23bwifBt8PvwkO1Us+gbSvB
u8BnwPfBH8MjBqpn0zY14b3g8+FH4K/g0YPU82rb+vAB8KXw0/AP8Hit1X20
TTP4MPga+EX4d3iSNurFtW0r+Fj4JvgN+F946rbqZbVNe/hk+E74PXiYduoZ
tU0VeFf4LPh++FN4pPbqObRtLXgf+AL4MfhreMwO6vm0TUP4QPhy+Bn4J3j8
jup+2rY5fAR8Lfwy/Ac8WSf1EtomCD4OvgV+E246q6fRNuXhHeBT4bvgD+Bh
u6hn1rZV4d3hs+EH4c/gUbqq59Q2deB94Yvgx+Fv4bG6qRfQto3gg+Er4Ofg
n+EJu6sX1jb+8JHw9fAr8F/w5D3US2nb1vAJ8K3w2/AQPdXTadsK8E7wafA9
8Ifw8L3Us2ib6vAe8LnwQ/AX8Ki91XNr27rw/vDF8JPwd/A4fdQLapsm8CHw
VfDz8K/wRH3Vi2rbAPho+Ab4NfhveMp+6qW1TVv4RPh2+B14qP7q6bVNJXhn
+Az4XvhjeASrnk3b1oD3gs+DH4G/hEcfoJ5H29SHW/hS+Cn4B3jcgeo+2rYp
fBh8Nfwi/Bs8ySD1YtqmFXwMfBP8OvwvPNVg9bLath18MnwH/B489BD1jNq2
MrwrfCZ8P/wJPNJQ9ezapha8N3wB/Cj8NTzGMPV82rYBfCB8GfwM/CM8/nB1
X23THD4cvhZ+Cf4DnnSEegltGwgfB98Mvwn/B08zUr2ctukAnwLfBb8PDztK
PZO2qQrvBp8NPwB/Bo88Wj2ntq0N7wtfCD8OfwOPNUY9v7ZpBB8EXwE/C/8M
TzBWvbC2bQEfCV8HvwL/CU8+Tr2ktmkNHw/fCr8FDzFePa22qQDvCJ8G3w1/
CA83QT2Ltq0G7wGfAz8Efw6POlE9l7apC+8HXww/AX8Hjz1JvaC2bQwfAl8J
Pw//Ak80Wb2ItgmAj4JvgF+F/4anmKJeWtu2gU+Eb4PfgYecqp5e21aEd4ZP
h++FP4JHmKaeVdvUgPeEz4Mfhr+ER5uunkfb1oNb+BL4Kfh7eNwZ6oW0TVP4
UPhq+AX4N3jimerFtG1L+Bj4Rvh1+B94qlnqZbRNO/gk+A74XXjo2eoZtE1l
eBf4TPg++BN4xDnq2bVtTXhv+Hz4UfgreIy56nm1TQP4APgy+Gn4R3i8eeq+
2rYZfDh8DfwS/Ds86Xz14tomED4Wvhl+A/4PnnqBejlt2x4+Bb4Tfh8eZqF6
Jm1bBd4NPgt+AP4UHnmReg5tUxveB74Qfgz+Bh5zsXp+bdsQPgi+HH4W/gme
YIm6n7ZpAR8BXwe/DP8JT7ZUvaS2DYKPh2+B34KbZepptW15eEf4VPhu+AN4
uOXqmbVNNXh3+Bz4QfhzeJQV6rm0bR14P/gi+An4W3jsleoFtE1j+GD4Svg5
+Bd4wlXqRbStP3wUfD38KvwXPMVq9VLapg18Anwb/DY85Br1dNqmIrwTfDp8
D/wRPPxa9azatjq8J3wu/DD8BTzaOvXc2qYevD98Cfwk/D08znr1Qtq2CXwo
fBX8AvwrPPEG9aLapiV8NHwj/Br8DzzlRvUy2rYtfBJ8O/wuPNQm9QzathK8
C3wGfB/8MTziZvVs2qYmvBd8PvwI/BU8+hb1vNq2PnwAfCn8NPwDPN5WdR9t
0ww+DL4GfhH+HZ5km3pxbdsKPha+CX4D/heeert6WW3THj4ZvhN+Dx5mh3pG
bVMF3hU+C74f/hQeaad6Dm1bC94HvgB+DP4aHnOXej5t0xA+EL4cfgb+CR5/
t7qftm0OHwFfC78M/wFPtke9hLYJgo+Db4HfhJu96mm0TXl4B/hU+C74A3jY
feqZtW1VeHf4bPhB+DN4lP3qObVNHXhf+CL4cfhbeKwD6gW0bSP4YPgK+Dn4
Z3jCg+qFtY0/fCR8PfwK/Bc8+SH1Utq2NXwCfCv8NjzEYfV02rYCvBN8GnwP
/CE8/BH1LNqmOrwHfC78EPwFPOpR9dzati68P3wx/CT8HTzOMfWC2qYJfAh8
Ffw8/Cs80XH1oto2AD4avgF+Df4bnvKEemlt0xY+Eb4dfgce6qR6em1TCd4Z
PgO+F/4YHuGUejZtWwPeCz4PfgT+Eh79tHoebVMfbuFL4afgH+Bxz6j7aNum
8GHw1fCL8G/wJGfVi2mbVvAx8E3w6/C/8FTn1Mtq23bwyfAd8Hvw0OfVM2rb
yvCu8Jnw/fAn8EgX1LNrm1rw3vAF8KPw1/AYF9XzadsG8IHwZfAz8I/w+JfU
fbVNc/hw+Fr4JfgPeNLL6iW0bSB8HHwz/Cb8HzzNFfVy2qYDfAp8F/w+POxV
9Uzapiq8G3w2/AD8GTzyNfWc2rY2vC98Ifw4/A081nX1/NqmEXwQfAX8LPwz
PMEN9cLatgV8JHwd/Ar8Jzz5TfWS2qY1fDx8K/wWPMQt9bTapgK8I3wafDf8
ITzcbfUs2rYavAd8DvwQ/Dk86h31XNqmLrwffDH8BPwdPPZd9YLatjF8CHwl
/Dz8CzzRPfUi2iYAPgq+AX4V/hue4r56aW3bBj4Rvg1+Bx7ygXp6bVsR3hk+
Hb4X/gge4aF6Vm1TA94TPg9+GP4SHu2Reh5tWw9u4Uvgp+Dv4XEfqxfSNk3h
Q+Gr4Rfg3+CJn6gX07Yt4WPgG+HX4X/gqZ6ql9E27eCT4Dvgd+Ghn6ln0DaV
4V3gM+H74E/gEZ+rZ9e2NeG94fPhR+Gv4DFeqOfVNg3gA+DL4KfhH+HxXqr7
attm8OHwNfBL8O/wpK/Ui2ubQPhY+Gb4Dfg/eOrX6uW0bXv4FPhO+H2no2bZ
OOddMtfDvPH0sLg3zn5z22R689/45K5X0Tbd4LPgB+BP4ZHfqufQNrXhfeAL
4cfgb+Ax36nn17YN4YPgy+Fn4Z/gCd6r+2mbFvAR8HXwy/Cf8GQf1Etq2yD4
ePgW+C24+aieVtuWh3eET4Xvhj+Ah/uknlnbVIN3h8+BH4Q/h0f5rJ5L29aB
94Mvgp+Av4XH/qJeQNs0hg+Gr4Sfg3+BJ/yqXkTb+sNHwdfDr8J/wVN8Uy+l
bdrAJ8C3wW/DQ35XT6dtKsI7wafD98AfwcP/UM+qbavDe8Lnwg/DX8Cj/VTP
rW3qwfvDl8BPwt/D4/xSL6Rtm8CHwlfBL8C/whP/Vi+qbVrCR8M3wq/B/8BT
/lEvo23bwifBt8PvwkP9Vc+gbSvBu8BnwPfBH8Mj/lPPpm1qwnvB58OPwF/B
o5s04nm1bX34APhS+Gn4B3i8EOo+2qYZfBh8Dfwi/Ds8SUj14tq2FXwsfBP8
BvwvPHUo9bLapj18Mnwn/B48TGj1jNqmCrwrfBZ8P/wpPFIY9Rzatha8D3wB
/Bj8NTxmWPV82qYhfCB8OfwM/BM8fjh1P23bHD4CvhZ+Gf4Dniy8egltEwQf
B98Cvwk3EdTTaJvy8A7wqfBd8AfwsBHVM2vbqvDu8Nnwg/Bn8CiR1HNqmzrw
vvBF8OPwt/BYkdULaNtG8MHwFfBz8M/whFHUC2sbf/hI+Hr4FfgvePKo6qW0
bWv4BPhW+G14iGjq6bRtBXgn+DT4HvhDePjo6lm0TXV4D/hc+CH4C3jUGOq5
tW1deH/4YvhJ+Dt4nJjqBbVNE/gQ+Cr4efhXeKJY6kW1bQB8NHwD/Br8Nzxl
bPXS2qYtfCJ8O/wOPFQc9fTaphK8M3wGfC/8MTxCXPVs2rYGvBd8HvwI/CU8
ejz1PNqmPtzCl8JPwT/A48ZX99G2TeHD4KvhF+Hf4EkSqBfTNq3gY+Cb4Nfh
f+GpEqqX1bbt4JPhO+D34KETqWfUtpXhXeEz4fvhT+CREqtn1za14L3hC+BH
4a/hMZKo59O2DeAD4cvgZ+Af4fGTqvtqm+bw4fC18EvwH/CkydRLaNtA+Dj4
ZvhN+D94muTq5bRNB/gU+C74fXjYFOqZtE1VeDf4bPgB+DN45JTqObVtbXhf
+EL4cfgbeKxU6vm1TSP4IPgK+Fn4Z3iC1OqFtW0L+Ej4OvgV+E948jTqJbVN
a/h4+Fb4LXiItOpptU0FeEf4NPhu+EN4uHTqWbRtNXgP+Bz4IfhzeNT06rm0
TV14P/hi+An4O3jsDOoFtW1j+BD4Svh5+Bd4oozqRbRNAHwUfAP8Kvw3PEUm
9dLatg18Inwb/A48ZGb19Nq2IrwzfDp8L/wRPEIW9azapga8J3we/DD8JTxa
VvU82rYe3MKXwE/B38PjZlMvpG2awofCV8MvwL/BE2dXL6ZtW8LHwDfCr8P/
wFPlUC+jbdrBJ8F3wO/CQ+dUz6BtKsO7wGfC98GfwCPmUs+ubWvCe8Pnw4/C
X8Fj5FbPq20awAfAl8FPwz/C4+VR99W2zeDD4Wvgl+Df4UnzqhfXNoHwsfDN
8Bvwf/DU+dTLadv28CnwnfD78DD51TNp2yrwbvBZ8APwp/DIBdRzaJva8D7w
hfBj8DfwmAXV82vbhvBB8OXws/BP8ASF1P20TQv4CPg6+GX4T3gyH/WS2jYI
Ph6+BX4LbnzV02rb8vCO8Knw3fAH8HB+6pm1TTV4d/gc+EH4c3iUwuq5tG0d
eD/4IvgJ+Ft47CLqBbRNY/hg+Er4OfgXeMKi6kW0rT98FHw9/Cr8FzxFMfVS
2qYNfAJ8G/w2PGRx9XTapiK8E3w6fA/8ETx8CfWs2rY6vCd8Lvww/AU8Wkn1
3NqmHrw/fAn8JPw9PE4p9ULatgl8KHwV/AL8KzxxafWi2qYlfDR8I/wa/A88
ZRn1Mtq2LXwSfDv8LjxUWfUM2rYSvAt8Bnwf/DE8Yjn1bNqmJrwXfD78CPwV
PHp59bzatj58AHwp/DT8AzxeBXUfbdMMPgy+Bn4R/h2epKJ6cW3bCj4Wvgl+
A/4XnrqSellt0x4+Gb4Tfg8eprJ6Rm1TBd4VPgu+H/4UHqmKeg5tWwveB74A
fgz+Gh6zqno+bdMQPhC+HH4G/gkev5q6n7ZtDh8BXwu/DP8BT1ZdvYS2CYKP
g2+B34SbGupptE15eAf4VPgu+AN42JrqmbVtVXh3+Gz4QfgzeJRa6jm1TR14
X/gi+HH4W3is2uoFtG0j+GD4Cvg5+Gd4wjrqhbWNP3wkfD38CvwXPHld9VLa
tjV8Anwr/DY8RD31dNq2ArwTfBp8D/whPHx99Szapjq8B3wu/BD8BTxqA/Xc
2rYuvD98Mfwk/B08TkP1gtqmCXwIfBX8PPwrPFEj9aLaNgA+Gr4Bfg3+G56y
sXppbdMWPhG+HX4HHqqJenptUwneGT4Dvhf+GB6hqadzPLl8Z2o217M5vfen
f8xZhV2v4XT56N9Kzavsei+nb6QZ3ntRY9fnOR1QKMH6Ze1dP+L05yorH6/q
7/pLpwc4A8a5Hr2Zp6P2OV1x8zzX8zg9e0LDgdvXuV7f6QzL3m7dvc916/S2
3f1f7T/n+lKnS1yMnvzIPddPOX3x2YIaJ965/sHpxn9yjjjzz/W4zT39Oubh
PReiBTru43Sv9DU/XknmtG3qdDi/p2lvZnN9mNNTqnevf7ew66udThkYfvzD
yq5fdHp9vxmHnzZ2/ZvTvpMz/njZ3vUkLTx9csWuLO/6u17M6Tr7KjT7NM71
Vk47p/vbPNfHON35ZbtTv9a5vqnFf9dnv+vXnXbft37S9b9Ou+9bv+J6Kv//
xt93vaz/f+Nfut7O/7/xX1yfHDzeBDm+I3h8RKfNveDxcVwPHRC8XlzPGPDf
+IyuVw74b3we17sGjy/i+szg8eVc3x88vqbrT4LHN3E9Usv/xge5nr3lf+O7
ul6r5X/jreu9nXaGrxzp+gKnaznjp7h+NHj8fNdfB49f6XqMVv+N3+J6vlbB
59/1Bk53SnysY+Jjrg90+nH+sY/yn3V9WfDPX3H9jNPHPaM73nb9o9PO8LGP
XI8f+N/vf+m6r9Pux39wvbnT7vDvrg8PDL5erR1fG/jf8YRz2l4K/O94orr+
I/C/44njetKg/44nseslgv47nlSuBwb9dzwZXR8X9N/x5HB9c9B/x5Pf9ZtB
wdfX9X/aJk1r9XLapgN8CnwX/D48bBv1TNqmKrwbfDb8APwZPHJb9Zzatja8
L3wh/Dj8DTxWO/X82qYRfBB8Bfws/DM8QXv1wtq2BXwkfB38CvwnPHkH9ZLa
pjV8PHwr/BY8REf1tNqmArwjfBp8N/whPFwn9Szathq8B3wO/BD8OTxqZ/Vc
2qYuvB98MfwE/B08dhf1gtq2MXwIfCX8PPwLPFFX9SLaJgA+Cr4BfhX+G56i
m3ppbdsGPhG+DX4HHrK7enptWxHeGT4dvhf+CB6hh3pWbVMD3hM+D34Y/hIe
rad6Hm1bD27hS+Cn4O/hcXupF9I2TeFD4avhF+Df4Il7qxfTti3hY+Ab4dfh
f+Cp+qiX0Tbt4JPgO+B34aH7qmfQNpXhXeAz4fvgT+AR+6ln17Y14b3h8+FH
4a/gMfqr59U2DeAD4Mvgp+Ef4fGsuq+2bQYfDl8DvwT/Dk86QL24tgmEj4Vv
ht+A/4OnHqheTtu2h0+B74Tfh4cZpJ5J21aBd4PPgh+AP4VHHqyeQ9vUhveB
L4Qfg7+Bxxyinl/bNoQPgi+Hn4V/gicYqu6nbVrAR8DXwS/Df8KTDVMvqW2D
4OPhW+C34Ga4elptWx7eET4Vvhv+AB5uhHpmbVMN3h0+B34Q/hweZaR6Lm1b
B94Pvgh+Av4WHnuUegFt0xg+GL4Sfg7+BZ5wtHoRbesPHwVfD78K/wVPMUa9
lLZpA58A3wa/DQ85Vj2dtqkI7wSfDt8DfwQPP049q7atDu8Jnws/DH8BjzZe
Pbe2qQfvD18CPwl/D48zQb2Qtm0CHwpfBb8A/wpPPFG9qLZpCR8N3wi/Bv8D
TzlJvYy2bQufBN8OvwsPNVk9g7atBO8CnwHfB38MjzhFPZu2qQnvBZ8PPwJ/
BY8+VT2vtq0PHwBfCj8N/wCPN03dR9s0gw+Dr4FfhH+HJ5muXlzbtoKPhW+C
34D/haeeoV5W27SHT4bvhN+Dh5mpnlHbVIF3hc+C74c/hUeapZ5D29aC94Ev
gB+Dv4bHnK2eT9s0hA+EL4efgX+Cx5+j7qdtm8NHwNfCL8N/wJPNVS+hbYLg
4+Bb4DfhZp56Gm1THt4BPhW+C/4AHna+emZtWxXeHT4bfhD+DB5lgXpObVMH
3he+CH4c/hYea6F6AW3bCD4YvgJ+Dv4ZnnCRemFt4w8fCV8PvwL/BU++WL2U
tm0NnwDfCr8ND7FEPZ22rQDvBJ8G3wN/CA+/VD2LtqkO7wGfCz8EfwGPukw9
t7atC+8PXww/CX8Hj7NcvaC2aQIfAl8FPw//Ck+0Qr2otg2Aj4ZvgF+D/4an
XKleWtu0hU+Eb4ffgYdapZ5e21SCd4bPgO+FP4ZHWK2eTdvWgPeCz4Mfgb+E
R1+jnkfb1Idb+FL4KfgHeNy16j7atil8GHw1/CL8GzzJOvVi2qYVfAx8E/w6
/C881Xr1stq2HXwyfAf8Hjz0BvWM2rYyvCt8Jnw//Ak80kb17NqmFrw3fAH8
KPw1PMYm9XzatgF8IHwZ/Az8Izz+ZnVfbdMcPhy+Fn4J/gOedIt6CW0bCB8H
3wy/Cf8HT7NVvZy26QCfAt8Fvw8Pu009k7apCu8Gnw0/AH8Gj7xdPae2rQ3v
C18IPw5/A4+1Qz2/tmkEHwRfAT8L/wxPsFO9sLZtAR8JXwe/Av8JT75LvaS2
aQ0fD98KvwUPsVs9rbapAO8InwbfDX8ID7dHPYu2rQbvAZ8DPwR/Do+6Vz2X
tqkL7wdfDD8BfwePvU+9oLZtDB8CXwk/D/8CT7RfvYi2CYCPgm+AX4X/hqc4
oF5a27aBT4Rvg9+Bhzyonl7bVoR3hk+H74U/gkc4pJ5V29SA94TPgx+Gv4RH
O6yeR9vWg1v4Evgp+Ht43CPqhbRNU/hQ+Gr4Bfg3eOKj6sW0bUv4GPhG+HX4
H3iqY+pltE07+CT4DvhdeOjj6hm0TWV4F/hM+D74E3jEE+rZtW1NeG/4fPhR
+Ct4jJPqebVNA/gA+DL4afhHeLxT6r7athl8OHwN/BL8OzzpafXi2iYQPha+
GX4D/g+e+ox6OW3bHj4FvhN+Hx7mrHombVsF3g0+C34A/hQe+Zx6Dm1TG94H
vhB+DP4GHvO8en5t2xA+CL4cfhb+CZ7ggrqftmkBHwFfB78M/wlPdlG9pLYN
go+Hb4HfgptL6mm1bXl4R/hU+G74A3i4y+qZtU01eHf4HPhB+HN4lCvqubRt
HXg/+CL4CfhbeOyr6gW0TWP4YPhK+Dn4F3jCa+pFtK0/fBR8Pfwq/Bc8xXX1
UtqmDXwCfBv8NjzkDfV02qYivBN8OnwP/BE8/E31rNq2OrwnfC78MPwFPNot
9dzaph68P3wJ/CT8PTzObfVC2rYJfCh8FfwC/Cs88R31otqmJXw0fCP8GvwP
POVd9TLati18Enw7/C481D31DNq2ErwLfAZ8H/wxPOJ99Wzapia8F3w+/Aj8
FTz6A/W82rY+fAB8Kfw0/AM83kN1H23TDD4MvgZ+Ef4dnuSRenFt2wo+Fr4J
fgP+F576sXpZbdMePhm+E34PHuaJekZtUwXeFT4Lvh/+FB7pqXoObVsL3ge+
AH4M/hoe85l6Pm3TED4Qvhx+Bv4JHv+5up+2bQ4fAV8Lvwz/AU/2Qr2EtgmC
j4Nvgd+Em5fqabRNeXgH+FT4LvgDeNhX6pm1bVV4d/hs+EH4M3iU1+o5tU0d
eF/4Ivhx+Ft4rDfqBbRtI/hg+Ar4OfhneMK36oW1jT98JHw9/Ar8Fzz5O/VS
2rY1fAJ8K/w2PMR79XTatgK8E3wafA/8ITz8B/Us2qY6vAd8LvwQ/AU86kf1
3Nq2Lrw/fDH8JPwdPM4n9YLapgl8CHwV/Dz8KzzRZ/Wi2jYAPhq+AX4N/hue
8ot6aW3TFj4Rvh1+Bx7qq3p6bVMJ3hk+A74X/hge4Zt6Nm1bA94LPg9+BP4S
Hv27eh5tUx9u4Uvhp+Af4HF/qPto26bwYfDV8Ivwb/AkP9WLaZtW8DHwTfDr
8L/wVL/Uy2rbdvDJ8B3we/DQv9UzatvK8K7wmfD98CfwSH/Us2ubWvDe8AXw
o/DX8Bh/1fNp2wbwgfBl8DPwj/D4/9R9tU1z+HD4Wvgl+A94UpNWvIS2DYSP
g2+G34T/g6cJoV5O23SAT4Hvgt+Hhw2pnknbVIV3g8+GH4A/g0cOpZ5T29aG
94UvhB+Hv4HHCq2eX9s0gg+Cr4CfhX+GJwijXljbtoCPhK+DX4H/hCcPq15S
27SGj4dvhd+ChwinnlbbVIB3hE+D74Y/hIcLr55F21aD94DPgR+CP4dHjaCe
S9vUhfeDL4afgL+Dx46oXlDbNoYPga+En4d/gSeKpF5E2wTAR8E3wK/Cf8NT
RFYvrW3bwCfCt8HvwENGUU+vbSvCO8Onw/fCH8EjRFXPqm1qwHvC58EPw1/C
o0VTz6Nt68EtfAn8FPw9PG509ULapil8KHw1/AL8GzxxDPVi2rYlfAx8I/w6
/A88VUz1MtqmHXwSfAf8Ljx0LPUM2qYyvAt8Jnwf/Ak8Ymz17Nq2Jrw3fD78
KPwVPEYc9bzapgF8AHwZ/DT8IzxeXHVfbdsMPhy+Bn4J/h2eNJ56cW0TCB8L
3wy/Af8HTx1fvZy2bQ+fAt8Jvw8Pk0A9k7atAu8GnwU/AH8Kj5xQPYe2qQ3v
A18IPwZ/A4+ZSD2/tm0IHwRfDj8L/wRPkFjdT9u0gI+Ar4Nfhv+EJ0uiXlLb
BsHHw7fAb8FNUvW02rY8vCN8Knw3/AE8XDL1zNqmGrw7fA78IPw5PEpy9Vza
tg68H3wR/AT8LTx2CvUC2qYxfDB8Jfwc/As8YUr1ItrWHz4Kvh5+Ff4LniKV
eilt0wY+Ab4NfhseMrV6Om1TEd4JPh2+B/4IHj6NelZtWx3eEz4Xfhj+Ah4t
rXpubVMP3h++BH4S/h4eJ516IW3bBD4Uvgp+Af4Vnji9elFt0xI+Gr4Rfg3+
B54yg3oZbdsWPgm+HX4XHiqjegZtWwneBT4Dvg/+GB4xk3o2bVMT3gs+H34E
/goePbN6Xm1bHz4AvhR+Gv4BHi+Luo+2aQYfBl8Dvwj/Dk+SVb24tm0FHwvf
BL8B/wtPnU29rLZpD58M3wm/Bw+TXT2jtqkC7wqfBd8PfwqPlEM9h7atBe8D
XwA/Bn8Nj5lTPZ+2aQgfCF8OPwP/BI+fS91P2zaHj4CvhV+G/4Any61eQtsE
wcfBt8Bvwk0e9TTapjy8A3wqfBf8ATxsXvXM2rYqvDt8Nvwg/Bk8Sj71nNqm
DrwvfBH8OPwtPFZ+9QLathF8MHwF/Bz8MzxhAfXC2sYfPhK+Hn4F/guevKB6
KW3bGj4BvhV+Gx6ikHo6bVsB3gk+Db4H/hAe3kc9i7apDu8Bnws/BH8Bj+qr
nlvb1oX3hy+Gn4S/g8fxUy+obZrAh8BXwc/Dv8ITFVYvqm0D4KPhG+DX4L/h
KYuol9Y2beET4dvhd+Chiqqn1zaV4J3hM+B74Y/hEYqpZ9O2NeC94PPgR+Av
4dGLq+fRNvXhFr4Ufgr+AR63hLqPtm0KHwZfDb8I/wZPUlK9mLZpBR8D3wS/
Dv8LT1VKvay2bQefDN8BvwcPXVo9o7atDO8KnwnfD38Cj1RGPbu2qQXvDV8A
Pwp/DY9RVj2ftm0AHwhfBj8D/wiPX07dV9s0hw+Hr4Vfgv+AJy2vXkLbBsLH
wTfDb8L/wdNUUC+nbTrAp8B3we/Dw1ZUz6RtqsK7wWfDD8CfwSNXUs+pbWvD
+8IXwo/D38BjVVbPr20awQfBV8DPwj/DE1RRL6xtW8BHwtfBr8B/wpNXVS+p
bVrDx8O3wm/BQ1RTT6ttKsA7wqfBd8MfwsNVV8+ibavBe8DnwA/Bn8Oj1lDP
pW3qwvvBF8NPwN/BY9dUL6htG8OHwFfCz8O/wBPVUi+ibQLgo+Ab4Ffhv+Ep
aquX1rZt4BPh2+B34CHrqKfXthXhneHT4Xvhj+AR6qpn1TY14D3h8+CH4S/h
0eqp59G29eAWvgR+Cv4eHre+eiFt0xQ+FL4afgH+DZ64gXoxbdsSPga+EX4d
/geeqqF6GW3TDj4JvgN+Fx66kXoGbVMZ3gU+E74P/gQesbF6dm1bE94bPh9+
FP4KHqOJel5t0wA+AL4Mfhr+ER6vqbqvtm0GHw5fA78E/w5P2ky9uLYJhI+F
b4bfgP+Dp26uXk7btodPge+E34eHaaGeSdtWgXeDz4IfgD+FR/ZXz6FtasP7
wBfCj8HfwGMGqOfXtg3hg+DL4Wfhn+AJWqr7aZsW8BHwdfDL8J/wZK3US2rb
IPh4+Bb4LbgJVE+rbcvDO8KnwnfDH8DDBaln1jbV4N3hc+AH4c/hUVqr59K2
deD94IvgJ+Bv4bHbqBfQNo3hg+Er4efgX+AJ26oX0bb+8FHw9fCr8F/wFO3U
S2mbNvAJ8G3w2/CQ7dXTaZuK8E7w6fA98Efw8B3Us2rb6vCe8Lnww/AX8Ggd
1XNrm3rw/vAl8JPw9/A4ndQLadsm8KHwVfAL8K/wxJ3Vi2qblvDR8I3wa/A/
8JRd1Mto27bwSfDt8LvwUF3VM2jbSvAu8BnwffDH8Ijd1LNpm5rwXvD58CPw
V/Do3dXzatv68AHwpfDT8A/weD3UfbRNM/gw+Br4Rfh3eJKe6sW1bSv4WPgm
+A34X3jqXupltU17+GT4Tvg9eJje6hm1TRV4V/gs+H74U3ikPuo5tG0teB/4
Avgx+Gt4zL7q+bRNQ/hA+HL4GfgnePx+6n7atjl8BHwt/DL8BzxZf/US2iYI
Pg6+BX4Tbqx6Gm1THt4BPhW+C/4AHnaAemZtWxXeHT4bfhD+DB5loHpObVMH
3he+CH4c/hYea5B6AW3bCD4YvgJ+Dv4ZnnCwemFt4w8fCV8PvwL/BU8+RL2U
tm0NnwDfCr8NDzFUPZ22rQDvBJ8G3wN/CA8/TD2LtqkO7wGfCz8EfwGPOlw9
t7atC+8PXww/CX8HjzNCvaC2aQIfAl8FPw//Ck80Ur2otg2Aj4ZvgF+D/4an
HKVeWtu0hU+Eb4ffgYcarZ5e21SCd4bPgO+FP4ZHGKOeTdvWgPeCz4Mfgb+E
Rx+rnkfb1Idb+FL4KfgHeNxx6j7atil8GHw1/CL8GzzJePVi2qYVfAx8E/w6
/C881QT1stq2HXwyfAf8Hjz0RPWM2rYyvCt8Jnw//Ak80iT17NqmFrw3fAH8
KPw1PMZk9XzatgF8IHwZ/Az8Izz+FHVfbdMcPhy+Fn4J/gOedKp6CW0bCB8H
3wy/Cf8HTzNNvZy26QCfAt8Fvw8PO109k7apCu8Gnw0/AH8GjzxDPae2rQ3v
C18IPw5/A481Uz2/tmkEHwRfAT8L/wxPMEu9sLZtAR8JXwe/Av8JTz5bvaS2
aQ0fD98KvwUPMUc9rbapAO8InwbfDX8IDzdXPYu2rQbvAZ8DPwR/Do86Tz2X
tqkL7wdfDD8BfwePPV+9oLZtDB8CXwk/D/8CT7RAvYi2CYCPgm+AX4X/hqdY
qF5a27aBT4Rvg9+Bh1yknl7bVoR3hk+H74U/gkdYrJ5V29SA94TPgx+Gv4RH
W6KeR9vWg1v4Evgp+Ht43KXqhbRNU/hQ+Gr4Bfg3eOJl6sW0bUv4GPhG+HX4
H3iq5epltE07+CT4DvhdeOgV6hm0TWV4F/hM+D74E3jElerZtW1NeG/4fPhR
+Ct4jFXqebVNA/gA+DL4afhHeLzV6r7athl8OHwN/BL8OzzpGvXi2iYQPha+
GX4D/g+eeq16OW3bHj4FvhN+Hx5mnXombVsF3g0+C34A/hQeeb16Dm1TG94H
vhB+DP4GHnODen5t2xA+CL4cfhb+CZ5go7qftmkBHwFfB78M/wlPtkm9pLYN
go+Hb4HfgpvN6mm1bXl4R/hU+G74A3i4LeqZtU01eHf4HPhB+HN4lK3qubRt
HXg/+CL4CfhbeOxt6gW0TWP4YPhK+Dn4F3jC7epFtK0/fBR8Pfwq/Bc8xQ71
UtqmDXwCfBv8NjzkTvV02qYivBN8OnwP/BE8/C71rNq2OrwnfC78MPwFPNpu
9dzaph68P3wJ/CT8PTzOHvVC2rYJfCh8FfwC/Cs88V71otqmJXw0fCP8GvwP
POU+9TLati18Enw7/C481H71DNq2ErwLfAZ8H/wxPOIB9Wzapia8F3w+/Aj8
FTz6QfW82rY+fAB8Kfw0/AM83iF1H23TDD4MvgZ+Ef4dnuSwenFt2wo+Fr4J
fgP+F576iHpZbdMePhm+E34PHuaoekZtUwXeFT4Lvh/+FB7pmHoObVsL3ge+
AH4M/hoe87h6Pm3TED4Qvhx+Bv4JHv+Eup+2bQ4fAV8Lvwz/AU92Ur2EtgmC
j4Nvgd+Em1PqabRNeXgH+FT4LvgDeNjT6pm1bVV4d/hs+EH4M3iUM+o5tU0d
eF/4Ivhx+Ft4rLPqBbRtI/hg+Ar4OfhneMJz6oW1jT98JHw9/Ar8Fzz5efVS
2rY1fAJ8K/w2PMQF9XTatgK8E3wafA/8ITz8RfUs2qY6vAd8LvwQ/AU86iX1
3Nq2Lrw/fDH8JPwdPM5l9YLapgl8CHwV/Dz8KzzRFfWi2jYAPhq+AX4N/hue
8qp6aW3TFj4Rvh1+Bx7qmnp6bVMJ3hk+A74X/hge4bp6Nm1bA94LPg9+BP4S
Hv2Geh5tUx9u4Uvhp+Af4HFvqvto26bwYfDV8Ivwb/Akt9SLaZtW8DHwTfDr
8L/wVLfVy2rbdvDJ8B3we/DQd9QzatvK8K7wmfD98CfwSHfVs2ubWvDe8AXw
o/DX8Bj31PNp2wbwgfBl8DPwj/D499V9tU1z+HD4Wvgl+A940gfqJbRtIHwc
fDP8JvwfPM1D9XLapgN8CnwX/D487CP1TNqmKrwbfDb8APwZPPJj9Zzatja8
L3wh/Dj8DTzWE/X82qYRfBB8Bfws/DM8wVP1wtq2BXwkfB38CvwnPPkz9ZLa
pjV8PHwr/BY8xHP1tNqmArwjfBp8N/whPNwL9Szathq8B3wO/BD8OTzqS/Vc
2qYuvB98MfwE/B089iv1gtq2MXwIfCX8PPwLPNFr9SLaJgA+Cr4BfhX+G57i
jXppbdsGPhG+DX4HHvKtenptWxHeGT4dvhf+CB7hnXpWbVMD3hM+D34Y/hIe
7b16Hm1bD27hS+Cn4O/hcT+oF9I2TeFD4avhF+Df4Ik/qhfTti3hY+Ab4dfh
f+CpPqmX0Tbt4JPgO+B34aE/q2fQNpXhXeAz4fvgT+ARv6hn17Y14b3h8+FH
4a/gMb6q59U2DeAD4Mvgp+Ef4fG+qftq22bw4fA18Evw7/Ck39WLa5tA+Fj4
ZvgN+D946h/q5bRte/gU+E74fXiYn+qZtG0VeDf4LPgB+FN45F/qObRNbXgf
+EL4MfgbeMzf6vm1bUP4IPhy+Fn4J3iCP+p+2qYFfAR8Hfwy/Cc82V/1kto2
CD4evgV+C27+qafVtuXhHeFT4bvhD+DhTDrxzNqmGrw7fA78IPw5PEoI9Vza
tg68H3wR/AT8LTx2SPUC2qYxfDB8Jfwc/As8YSj1ItrWHz4Kvh5+Ff4LniK0
eilt0wY+Ab4NfhseMox6Om1TEd4JPh2+B/4IHj6selZtWx3eEz4Xfhj+Ah4t
nHpubVMP3h++BH4S/h4eJ7x6IW3bBD4Uvgp+Af4VnjiCelFt0xI+Gr4Rfg3+
B54yonoZbdsWPgm+HX4XHiqSegZtWwneBT4Dvg/+GB4xsno2bVMT3gs+H34E
/goePYp6Xm1bHz4AvhR+Gv4BHi+quo+2aQYfBl8Dvwj/Dk8STb24tm0FHwvf
BL8B/wtPHV29rLZpD58M3wm/Bw8TQz2jtqkC7wqfBd8PfwqPFFM9h7atBe8D
XwA/Bn8NjxlLPZ+2aQgfCF8OPwP/BI8fW91P2zaHj4CvhV+G/4Ani6NeQtsE
wcfBt8Bvwk1c9TTapjy8A3wqfBf8ATxsPPXM2rYqvDt8Nvwg/Bk8Snz1nNqm
DrwvfBH8OPwtPFYC9QLathF8MHwF/Bz8MzxhQvXC2sYfPhK+Hn4F/guePJF6
KW3bGj4BvhV+Gx4isXo6bVsB3gk+Db4H/hAePol6Fm1THd4DPhd+CP4CHjWp
em5tWxfeH74YfhL+Dh4nmXpBbdMEPgS+Cn4e/hWeKLl6UW0bAB8N3wC/Bv8N
T5lCvbS2aQufCN8OvwMPlVI9vbapBO8MnwHfC38Mj5BKPZu2rQHvBZ8HPwJ/
CY+eWj2PtqkPt/Cl8FPwD/C4adR9tG1T+DD4avhF+Dd4krTqxbRNK/gY+Cb4
dfhfeKp06mW1bTv4ZPgO+D146PTqGbVtZXhX+Ez4fvgTeKQM6tm1TS14b/gC
+FH4a3iMjOr5tG0D+ED4MvgZ+Ed4/EzqvtqmOXw4fC38EvwHPGlm9RLaNhA+
Dr4ZfhP+D54mi3o5bdMBPgW+C34fHjareiZtUxXeDT4bfgD+DB45m3pObVsb
3he+EH4c/gYeK7t6fm3TCD4IvgJ+Fv4ZniCHemFt2wI+Er4OfgX+E548p3pJ
bdMaPh6+FX4LHiKXelptUwHeET4Nvhv+EB4ut3oWbVsN3gM+B34I/hweNY96
Lm1TF94Pvhh+Av4OHjuvekFt2xg+BL4Sfh7+BZ4on3oRbRMAHwXfAL8K/w1P
kV+9tLZtA58I3wa/Aw9ZQD29tq0I7wyfDt8LfwSPUFA9q7apAe8Jnwc/DH8J
j1ZIPY+2rQe38CXwU/D38Lg+6oW0TVP4UPhq+AX4N3hiX/Vi2rYlfAx8I/w6
/A88lZ96GW3TDj4JvgN+Fx66sHoGbVMZ3gU+E74P/gQesYh6dm1bE94bPh9+
FP4KHqOoel5t0wA+AL4Mfhr+ER6vmLqvtm0GHw5fA78E/w5PWly9uLYJhI+F
b4bfgP+Dpy6hXk7btodPge+E34eHKameSdtWgXeDz4IfgD+FRy6lnkPb1Ib3
gS+EH4O/gccsrZ5f2zaED4Ivh5+Ff4InKKPup21awEfA18Evw3/Ck5VVL6lt
g+Dj4Vvgt+CmnHpabVse3hE+Fb4b/gAerrx6Zm1TDd4dPgd+EP4cHqWCei5t
WwfeD74IfgL+Fh67onoBbdMYPhi+En4O/gWesJJ6EW3rDx8FXw+/Cv8FT1FZ
vZS2aQOfAN8Gvw0PWUU9nbapCO8Enw7fA38ED19VPau2rQ7vCZ8LPwx/AY9W
TT23tqkH7w9fAj8Jfw+PU129kLZtAh8KXwW/AP8KT1xDvai2aQkfDd8Ivwb/
A09ZU72Mtm0LnwTfDr8LD1VLPYO2rQTvAp8B3wd/DI9YWz2btqkJ7wWfDz8C
fwWPXkc9r7atDx8AXwo/Df8Aj1dX3UfbNIMPg6+BX4R/hyepp15c27aCj4Vv
gt+A/4Wnrq9eVtu0h0+G74Tfg4dpoJ5R21SBd4XPgu+HP4VHaqieQ9vWgveB
L4Afg7+Gx2yknk/bNIQPhC+Hn4F/gsdvrO6nbZvDR8DXwi/Df8CTNVEvoW2C
4OPgW+A34aapehptUx7eAT4Vvgv+AB62mXpmbVsV3h0+G34Q/gwepbl6Tm1T
B94Xvgh+HP4WHquFegFt2wg+GL4Cfg7+GZ7QX72wtvGHj4Svh1+B/4InD1Av
pW1bwyfAt8Jvw0O0VE+nbSvAO8GnwffAH8LDt1LPom2qw3vA58IPwV/Aowaq
59a2deH94YvhJ+Hv4HGC1AtqmybwIfBV8PPwr/BErdWLatsA+Gj4Bvg1+G94
yjbqpbVNW/hE+Hb4HXioturptU0leGf4DPhe+GN4hHbq2bRtDXgv+Dz4EfhL
ePT26nm0TX24hS+Fn4J/gMftoO6jbZvCh8FXwy/Cv8GTdFQvpm1awcfAN8Gv
w//CU3VSL6tt28Enw3fA78FDd1bPqG0rw7vCZ8L3w5/AI3VRz65tasF7wxfA
j8Jfw2N0Vc+nbRvAB8KXwc/AP8Ljd1P31TbN4cPha+GX4D/gSburl9C2gfBx
8M3wm/B/8DQ91Mtpmw7wKfBd8PvwsD3VM2mbqvBu8NnwA/Bn8Mi91HNq29rw
vvCF8OPwN/BYvdXza5tG8EHwFfCz8M/wBH3UC2vbFvCR8HXwK/Cf8OR91Utq
m9bw8fCt8FvwEP3U02qbCvCO8Gnw3fCH8HD91bNo22rwHvA58EPw5/CoVj2X
tqkL7wdfDD8BfwePPUC9oLZtDB8CXwk/D/8CTzRQvYi2CYCPgm+AX4X/hqcY
pF5a27aBT4Rvg9+Bhxysnl7bVoR3hk+H74U/gkcYop5V29SA94TPgx+Gv4RH
G6qeR9vWg1v4Evgp+Ht43GHqhbRNU/hQ+Gr4Bfg3eOLh6sW0bUv4GPhG+HX4
H3iqEepltE07+CT4DvhdeOiR6hm0TWV4F/hM+D74E3jEUerZtW1NeG/4fPhR
+Ct4jNHqebVNA/gA+DL4afhHeLwx6r7athl8OHwN/BL8OzzpWPXi2iYQPha+
GX4D/g+eepx6OW3bHj4FvhN+Hx5mvHombVsF3g0+C34A/hQeeYJ6Dm1TG94H
vhB+DP4GHnOien5t2xA+CL4cfhb+CZ5gkrqftmkBHwFfB78M/wlPNlm9pLYN
go+Hb4Hfgpsp6mm1bXl4R/hU+G74A3i4qeqZtU01eHf4HPhB+HN4lGnqubRt
HXg/+CL4CfhbeOzp6gW0TWP4YPhK+Dn4F3jCGepFtK0/fBR8Pfwq/Bc8xUz1
UtqmDXwCfBv8NjzkLPV02qYivBN8OnwP/BE8/Gz1rNq2OrwnfC78MPwFPNoc
9dzaph68P3wJ/CT8PTzOXPVC2rYJfCh8FfwC/Cs88Tz1otqmJXw0fCP8GvwP
POV89TLati18Enw7/C481AL1DNq2ErwLfAZ8H/wxPOJC9Wzapia8F3w+/Aj8
FTz6IvW82rY+fAB8Kfw0/AM83mJ1H23TDD4MvgZ+Ef4dnmSJenFt2wo+Fr4J
fgP+F556qXpZbdMePhm+E34PHmaZekZtUwXeFT4Lvh/+FB5puXoObVsL3ge+
AH4M/hoec4V6Pm3TED4Qvhx+Bv4JHn+lup+2bQ4fAV8Lvwz/AU+2Sr2EtgmC
j4Nvgd+Em9XqabRNeXgH+FT4LvgDeNg16pm1bVV4d/hs+EH4M3iUteo5tU0d
eF/4Ivhx+Ft4rHXqBbRtI/hg+Ar4OfhneML16oW1jT98JHw9/Ar8Fzz5BvVS
2rY1fAJ8K/w2PMRG9XTatgK8E3wafA/8ITz8JvUs2qY6vAd8LvwQ/AU86mb1
3Nq2Lrw/fDH8JPwdPM4W9YLapgl8CHwV/Dz8KzzRVvWi2jYAPhq+AX4N/hue
cpt6aW3TFj4Rvh1+Bx5qu3p6bVMJ3hk+A74X/hgeYYd6Nm1bA94LPg9+BP4S
Hn2npwsmLll4RJ42judxuoJfkYvT3Tb1nW7UpJD/cq9bp9sNzPt9m9eXOm0X
5xh1zOunnJ54NHPSa17/4PTi5+k2PPV63F2e3hoxVYmvXvdx2hkeJq/rTZ2+
XilBUBy3zTCnX3aI/Se111c7/XtitPG5vX7R6chbPB/o9W9Oez5ta3WvJ9nt
6ew/TNnmXi/mdLFEv2918norp6v5fvNMyfUxTrdo/DHERK9vcrrbgDeTF3j9
utPDF3km5PW/Tk8/8mjnfq+n2uPplc/uVjzv9bJO745w8/49r7dz+mymK53f
eX2y057RYf95fYfT79ufmhE1n+v3nA7pnFC3bei9no69+cC+LF7P6HTqq7ur
+Xq9stOeq/Okgte7Ol0m4aYeDbw+0+l6PmsjtfH6fqfbNFoxt7fXnzjdx7mg
Xo+0z9NjF847PNPr2Z2ef3hm7ZVer+X0xqdTXu7wem+nD4af0PeE1xc4fTnj
6Og3vH7U6acVhi167vXXTn93FpTXY+z3tPPj4fK7ns9p5/DjuW0bOJ3Zc/rS
en2g037O5fP6Mqed5VPK62ecdpZvTa9/dLpTQ8/feD3+AU8P7l//bBev+zo9
eUGtpoO93tzppYeqfp7k9eFOb3/imYDX1zp9MpznDHv9ktO3MxRfc9DrP5x+
Xd5zQ3k96UFP/21b4NIDr5dwOvr43AEfvB7odMqN2X6YAq6PczqncwLdtpud
LvE1TbLkXr/pdK34KTZm8/o/p1s5N7TX0xzytOfsXa/k9XJOj+wXs3Ujr3dw
evb8KJ5Dcn2K02udC+j1XU7vfRwq9Riv33fas1q3zvZ62MOefpj+Z9nVXs/k
9OdyX27v8npVp0O39axor3dzOu64VyFveX220+k3eBaQ1w84XfDSg/Q/vf7M
aefjIhR0PfIRTzvTSeC2yel0O8/pTO/12k5b53J6va/TEz3LqYzXFzrtLOfa
Xj/utHM7tfT6G6ePem7nbl6PddTZjzzbyVCv53fa2c6meL2R057Z91zi9UFO
R26zLPIWr69wOqlzA3n9rNNZ18/Jednrn5327LZHHnk9wTFnP/o8qc4nrxd2
uoVzwgq53sLpLvk9V9BtM9LpofWGxEjp9XVOT3duYK9fcXql5+4u6vWfTntm
d7KK15Mf9/Tphx09d4TrJZ2+61wwr7d2+n3aVoP6e328057dNO44r2912rOa
Vsz1+i2nU4+p67PW6yFOOPvRuhrn9ng9rdNlLlRudsbrFZyu88lzhb3e0WnP
3Tv8tdenOd0nX9FEv72+2+mxno+P5OP6Q6ed6SVy24Y76Wnn9Gb0ehanDzqX
1+vVnL7sWV5lvd7DaWd51/X6HKed2yvQ64ecDu9soF5/7nRC5wC9HvWUp53t
bZrXczntbK/LvF7X6UrODeP1fk438Txejnp9sdPO4+2q10847Txen3j9ndOT
nRPk9dinnf2o19s7oX1dL+j09tkvOsR22zZ2+rhzw3p9iNOep8/UXF5f6fTr
kLcyFPf6eaf/ug8Q1784HbW05wJ5PdEZTycP9KwQrxdxOueoY10HeD3A6RJr
PBuG10c57bnas+Z7fYPTAR+2Z13v9atO94jlueO8/tvpkXk8C8TrKc562vN0
eXbX66Wd9txdvd56vY3Te2d5NiyvT3T6vOfXRfFzfZvTznSTuG3uOO2c7sxe
D3nO2Y+cy+319E7H9Sy38l6v6LSz3Ot7vbPTzu3W2uvTnS7nHJDX9zrdwLPd
jPT6I6fbOQ9wr0c472lnu13h9axOO9v9dq/XcHqh53Fz3Os9nd7sbNhen+e0
87h95vXDTjtX65vXXzr93PkCUdj1aBec/ci5Qd02eZx2vm6l8Xo9p92ve163
Tmdt6TwwXF/idJERngvi9VNOV1mVvVgLr793utkZzxcYr8e96OxH7zxnzOuF
nB4aI+WviV5v6rTnaoxd6PWhTi+v6XlgeX210zu7exaE1y84fXqGZwV6/ZvT
nt3/5n2vJ77kac/qb/ve68WcNs6fIq631DZj4Bvh1+F/4Kkuq5fRNu3gk+A7
4Hfhoa+oZ9A2leFd4DPh++BP4BGvqmfXtjXhveHz4Ufhr+Axrqnn1TYN4APg
y+Cn4R/h8a6r+2rbZvDh8DXwS/Dv8KQ31Itrm0D4WPhm+A34P3jqm+rltG17
+BT4Tvh9eJhb6pm0bRV4N/gs+AH4U3jk2+o5tE1teB/4Qvgx+Bt4zDvq+bVt
Q/gg+HL4WfgneIK76n7apgV8BHwd/DL8JzzZPfWS2jYIPh6+BX4Lbu6rp9W2
5eEd4VPhu+EP4OEeqGfWNtXg3eFz4Afhz+FRHqrn0rZ14P3gi+An4G/hsR+p
F9A2jeGD4Svh5+Bf4AkfqxfRtv7wUfD18KvwX/AUT9RLaZs28AnwbfDb8JBP
1dNpm4rwTvDp8D3wR/Dwz9Szatvq8J7wufDD8BfwaM/Vc2ubevD+8CXwk/D3
8Dgv1Atp2ybwofBV8P9xdU9RknRbFIVP27Zt27Zt27ZP27Zt27Zt/23buhWR
N3KMNftt1neqIjN2ZO7Hvgj/Co/7Ur2QtmkBHwPfBL8O/wNP/Eq9pLZtB58M
3wG/Bw/yWj2Vti0P7wqfCd8PfwwP/UY9g7apBu8NXwA/Cn8Fj/hWPbu2rQMf
CF8GPwP/AI/xTj2vtmkMHw5fC78E/w6P9169iLZtCR8H3wy/Cf8LT/pBvZS2
6QCfAt8Fvw8P9lE9tbapCO8Gnw0/AH8KD/NJPZO2rQ7vC18IPw5/DY/8WT2H
tqkHHwRfAT8L/wSP+UU9v7ZtAh8JXwe/Av8BT/BVvai2aQ0fD98KvwU339ST
aZsy8I7wafDd8Ifw4N/V02rbSvAe8DnwQ/Bn8HA/1DNrm5rwfvDF8BPwt/Ao
P9Vzadv68CHwlfDz8M/w2L/UC2ibZvBR8A3wq/Bf8IS/1Ytr2zbwifBt8Dvw
QH/UU2jbsvDO8OnwvfD/4CH/qqfTNlXgPeHz4IfhL+Dh/6ln1ba14APgS+Cn
4O/g0UxK8dzapiF8KHw1/AL8KzxOIPVC2rY5fAx8I/w6/Dc8cWD1EtqmHXwS
fAf8LjxIEPWU2qY8vAt8Jnwf/DE8VFD1DNq2Krw3fD78KPwlPGIw9Wzapg7c
wpfBT8M/wKMHV8+rbRvBh8PXwC/Bv8HjhVAvrG1awsfCN8NvwP/Ck4RUL6Vt
28OnwHfC78ODhlJPrW0rwLvBZ8EPwJ/Aw4RWz6htqsP7wBfCj8FfwyOFUc+h
bevCB8GXw8/CP8JjhlXPp22awEfA18Evw3/A44dTL6ptW8HHw7fAb8H/wZOF
Vy+tbTrCp8J3wx/Ag0dQT6NtKsG7w+fAD8KfwcNGVM+sbWvA+8EXwU/A38Cj
RFLPqW3qwwfDV8LPwT/DY0VWL6Btm8JHwdfDr8J/whNGUS+mbdrAJ8C3wW/D
A0VVT65tysI7wafD98D/g4eIpp5O21aG94TPhR+GP4eHj66eRdvUgveHL4Gf
hL+DR42hnlvbNoAPha+CX4B/gceJqV5Q2zSHj4ZvhF+D/4YniqVeQtu2hU+C
b4ffhQeOrZ5S25aDd4HPgO+DP4KHiqOeXttUhfeCz4cfgb+ER4irnk3b1oZb
+FL4afh7ePR46nm0TSP4MPga+EX4N3jc+OqFtW0L+Fj4JvgN+B94kgTqJbVN
e/hk+E74PXjQhOqptE0FeFf4LPh++BN46ETqGbVtNXgf+AL4MfgreKTE6tm1
TV34QPhy+Bn4R3iMJOr5tG1j+Aj4Wvhl+Hd4/KTqRbRNK/g4+Bb4Tfg/eNJk
6qW1bQf4VPgu+AN4sOTqabRtRXh3+Gz4QfhTeNgU6pm0TQ14X/gi+HH4G3jk
lOo5tW09+GD4Cvg5+Cd4rFTq+bVNU/hI+Hr4FfhPeILU6sW0bWv4BPhW+G24
SaOeXNuWgXeCT4PvgT+Eh0irnlbbVIb3gM+FH4I/h4dLp55F29aE94cvhp+E
v4VHTa+eS9s0gA+Br4Kfh3+Bx86gXlDbNoOPhm+AX4P/gifKqF5c27SFT4Rv
h9+BB86knkLblIN3hs+A74U/gofMrJ5e21aB94LPgx+Bv4BHyKKeVdvUhg+A
L4Wfgr+HR8uqnkfbNoQPg6+GX4R/hcfNpl5I27SAj4Fvgl+H/4Enzq5eUtu2
g0+G74DfgwfJoZ5K25aHd4XPhO+HP4aHzqmeQdtUg/eGL4Afhb+CR8ylnl3b
1oEPhC+Dn4F/gMfIrZ5X2zSGD4evhV+Cf4fHy6NeRNu2hI+Db4bfhP+FJ82r
XkrbdIBPge+C34cHy6eeWttUhHeDz4YfgD+Fh8mvnknbVof3hS+EH4e/hkcu
oJ5D29SDD4KvgJ+Ff4LHLKieX9s2gY+Er4Nfgf+AJyikXlTbtIaPh2+F34Kb
wurJtE0ZeEf4NPhu+EN48CLqabVtJXgP+Bz4IfgzeLii6pm1TU14P/hi+An4
W3iUYuq5tG19+BD4Svh5+Gd47OLqBbRNM/go+Ab4VfgveMIS6sW1bRv4RPg2
+B14oJLqKbRtWXhn+HT4Xvh/8JCl1NNpmyrwnvB58MPwF/DwpdWzatta8AHw
JfBT8HfwaGXUc2ubhvCh8NXwC/Cv8Dhl1Qtp2+bwMfCN8Ovw3/DE5dRLaJt2
8EnwHfC78CDl1VNqm/LwLvCZ8H3wx/BQFdQzaNuq8N7w+fCj8JfwiBXVs2mb
OnALXwY/Df8Aj15JPa+2bQQfDl8DvwT/Bo9XWb2wtmkJHwvfDL8B/wtPUkW9
lLZtD58C3wm/Dw9aVT21tq0A7wafBT8AfwIPU009o7apDu8DXwg/Bn8Nj1Rd
PYe2rQsfBF8OPwv/CI9ZQz2ftmkCHwFfB78M/wGPX1O9qLZtBR8P3wK/Bf8H
T1ZLvbS26QifCt8NfwAPXls9jbapBO8OnwM/CH8GD1tHPbO2rQHvB18EPwF/
A49SVz2ntqkPHwxfCT8H/wyPVU+9gLZtCh8FXw+/Cv8JT1hfvZi2aQOfAN8G
vw0P1EA9ubYpC+8Enw7fA/8PHqKhejptWxneEz4Xfhj+HB6+kXoWbVML3h++
BH4S/g4etbF6bm3bAD4Uvgp+Af4FHqeJekFt0xw+Gr4Rfg3+G56oqXoJbdsW
Pgm+HX4XHriZekptWw7eBT4Dvg/+CB6quXp6bVMV3gs+H34E/hIeoYV6Nm1b
G27hS+Gn4e/h0Vuq59E2jeDD4GvgF+Hf4HFbqRfWti3gY+Gb4Dfgf+BJWquX
1Dbt4ZPhO+H34EHbqKfSNhXgXeGz4PvhT+Ch26pn1LbV4H3gC+DH4K/gkdqp
Z9c2deED4cvhZ+Af4THaq+fTto3hI+Br4Zfh3+HxO6gX0Tat4OPgW+A34f/g
STuql9a2HeBT4bvgD+DBOqmn0bYV4d3hs+EH4U/hYTurZ9I2NeB94Yvgx+Fv
4JG7qOfUtvXgg+Er4Ofgn+Cxuqrn1zZN4SPh6+FX4D/hCbqpF9O2reET4Fvh
t+Gmu3pybVsG3gk+Db4H/hAeood6Wm1TGd4DPhd+CP4cHq6nehZtWxPeH74Y
fhL+Fh61l3oubdMAPgS+Cn4e/gUeu7d6QW3bDD4avgF+Df4LnqiPenFt0xY+
Eb4dfgceuK96Cm1TDt4ZPgO+F/4IHrKfenptWwXeCz4PfgT+Ah6hv3pWbVMb
PgC+FH4K/h4ebYB6Hm3bED4Mvhp+Ef4VHteqF9I2LeBj4Jvg1+F/4IkHqpfU
tu3gk+E74PfgQQapp9K25eFd4TPh++GP4aEHq2fQNtXgveEL4Efhr+ARh6hn
17Z14APhy+Bn4B/gMYaq59U2jeHD4Wvhl+Df4fGGqRfRti3h4+Cb4Tfhf+FJ
h6uX0jYd4FPgu+D34cFGqKfWNhXh3eCz4QfgT+FhRqpn0rbV4X3hC+HH4a/h
kUep59A29eCD4CvgZ+Gf4DFHq+fXtk3gI+Hr4FfgP+AJxqgX1Tat4ePhW+G3
4GasejJtUwbeET4Nvhv+EB58nHpabVsJ3gM+B34I/gwebrx6Zm1TE94Pvhh+
Av4WHmWCei5tWx8+BL4Sfh7+GR57onoBbdMMPgq+AX4V/guecJJ6cW3bBj4R
vg1+Bx5osnoKbVsW3hk+Hb4X/h885BT1dNqmCrwnfB78MPwFPPxU9azathZ8
AHwJ/BT8HTzaNPXc2qYhfCh8NfwC/Cs8znT1Qtq2OXwMfCP8Ovw3PPEM9RLa
ph18EnwH/C48yEz1lNqmPLwLfCZ8H/wxPNQs9Qzatiq8N3w+/Cj8JTzibPVs
2qYO3MKXwU/DP8Cjz1HPq20bwYfD18Avwb/B481VL6xtWsLHwjfDb8D/wpPM
Uy+lbdvDp8B3wu/Dg85XT61tK8C7wWfBD8CfwMMsUM+obarD+8AXwo/BX8Mj
LVTPoW3rwgfBl8PPwj/CYy5Sz6dtmsBHwNfBL8N/wOMvVi+qbVvBx8O3wG/B
/8GTLVEvrW06wqfCd8MfwIMvVU+jbSrBu8PnwA/Cn8HDLlPPrG1rwPvBF8FP
wN/AoyxXz6lt6sMHw1fCz8E/w2OtUC+gbZvCR8HXw6/Cf8ITrlQvpm3awCfA
t8FvwwOtUk+ubcrCO8Gnw/fA/4OHWK2eTttWhveEz4Ufhj+Hh1+jnkXb1IL3
hy+Bn4S/g0ddq55b2zaAD4Wvgl+Af4HHWadeUNs0h4+Gb4Rfg/+GJ1qvXkLb
toVPgm+H34UH3qCeUtuWg3eBz4Dvgz+Ch9qonl7bVIX3gs+HH4G/hEfYpJ5N
29aGW/hS+Gn4e3j0zep5tE0j+DD4GvhF+Dd43C3qhbVtC/hY+Cb4DfgfeJKt
6iW1TXv4ZPhO+D140G3qqbRNBXhX+Cz4fvgTeOjt6hm1bTV4H/gC+DH4K3ik
HerZtU1d+ED4cvgZ+Ed4jJ3q+bRtY/gI+Fr4Zfh3ePxd6kW0TSv4OPgW+E34
P3jS3eqltW0H+FT4LvgDeLA96mm0bUV4d/hs+EH4U3jYveqZtE0NeF/4Ivhx
+Bt45H3qObVtPfhg+Ar4OfgneKz96vm1TVP4SPh6+BX4T3iCA+rFtG1r+AT4
VvhtuDmonlzbloF3gk+D74E/hIc4pJ5W21SG94DPhR+CP4eHO6yeRdvWhPeH
L4afhL+FRz2inkvbNIAPga+Cn4d/gcc+ql5Q2zaDj4ZvgF+D/4InOqZeXNu0
hU+Eb4ffgQc+rp5C25SDd4bPgO+FP4KHPKGeXttWgfeCz4Mfgb+ARzipnlXb
1IYPgC+Fn4K/h0c7pZ5H2zaED4Ovhl+Ef4XHPa1eSNu0gI+Bb4Jfh/+BJz6j
XlLbtoNPhu+A34MHOaueStuWh3eFz4Tvhz+Ghz6nnkHbVIP3hi+AH4W/gkc8
r55d29aBD4Qvg5+Bf4DHuKCeV9s0hg+Hr4Vfgn+Hx7uoXkTbtoSPg2+G34T/
hSe9pF5K23SAT4Hvgt+HB7usnlrbVIR3g8+GH4A/hYe5op5J21aH94UvhB+H
v4ZHvqqeQ9vUgw+Cr4CfhX+Cx7ymnl/bNoGPhK+DX4H/cLpjwhgxe1VxPcH1
gI657lS9MS1cL+r0vjz9F8/v43prp5uezPRi03jXxzsdtsaT9McWu77V6U2P
Z3S9ud31W07X7lx21+vTrpsb3vUfuJ7M36ad42X8ndBp29HfBV2f5u+Gru/2
t3X9ob8XuB78ptcHXE/r7weuV/K3ae94D38ndNrO8XdB1w/5u6Hrz/xtXQ93
y3991zP7+4DrNf39wPV+/jYdHF/s74RO2xPa5i08ym31XNq2PnwIfCX8PPwz
PPYd9QLaphl8FHwD/Cr8FzzhXfXi2rYNfCJ8G/wOPNA99RTatiy8M3w6fC/8
P3jI++rptE0VeE/4PPhh+At4+AfqWbVtLfgA+BL4Kfg7eLSH6rm1TUOnv9/r
825vDteHOh0y0ZCIhXO6vtrpmE3GZDrmtr3gdOqlUyqXzuX6V6dzP5vT5Zzb
Ns5/AV06VcCB3K4Xcrp2m7Vbr7ltmzvdNiBr53F9jNN93+39ds9tu9HpgKvF
bJLX9etOO3/9mdv2t9PrAn69TT7XEz9yvg+/BbwBt20JpwNOz+mS3/V2Tjtv
75vbdpLT7wMu16eA6zse+b9PXL/rdMTCAXfAbRPkcUAnDrgdIQu5ntLpzAEv
b4zbprzThd0b5noXpys7N8BtM9Ppps4bKuL6Pqe7Oi/QbfPYaefPJyrqeqgn
AT3F+QNumwxOL3N+UMz1qk5vC3j7a902vZ12Xk6m4q7Pd9rhrW6bo04/d25g
CddfPvHm7baJ+NSbd0nXsz315u22qfPUm3cp1+1Tb95um2VPvXmXdv30U2/e
bpsPT715l3E9+jNv3m6bvM+8eZd1vdEzb95um+HPvHmXc33NM2/ebptLz7x5
l3f92zNv3m6beM+9eVdwvfBzb94VXW/53Ju323bsc2/elVzf/Nybt9v2xnNv
3pVd//vcm7fbNskLb95VXC/1wpu327b9C2/eVV2f8sKbt9t25wtv3tVcv//C
m7fbNuhLb97VXU/90pu327bCS2/eNVzv9tKbt9t21ktv3jVdP/DSm7fb9slL
b961XA/zypu32zbjK2/etV2v/sqbt9u2zytv3nVcX/jKm7fb9tgrb951XX/9
ypu32zbSa2/e9VzP8dqbt9u27mtv3vVdH/Tam7fbdvlrb94NXD/72pt3Q9c/
apuYb9TzaZsm8BHwdfDL8B/w+G/Vi2rbVvDx8C3wW/B/8GTv1Etrm47wqfDd
8Afw4O/V02ibSvDu8Dnwg/Bn8LAf1DNr2xrwfvBF8BPwN/AoH9Vzapv68MHw
lfBz8M/wWJ/UC2jbpvBR8PXwq/Cf8ISf1YtpmzbwCfBt8NvwQF/Uk2ubsvBO
8OnwPfD/4CG+qqfTtpXhPeFz4Yfhz+Hhv6ln0Ta14P3hS+An4e/gUb+r59a2
DeBD4avgF+Bf4HF+qBfUNs3ho+Eb4dfgv+GJfqqX0LZt4ZPg2+F34YF/qafU
tuXgXeAz4Pvgj+Chfqun1zZV4b3g8+FH4C/hEf6oZ9O2teEWvhR+Gv4eHv2v
eh5t0wg+DL4GfhH+DR73n3phbdsCPha+CX4D/geexKQSL6lt2sMnw3fC78GD
BlJPpW0qwLvCZ8H3w5/AQwdWz6htq8H7wBfAj8FfwSMFUc+uberCB8KXw8/A
P8JjBFXPp20bw0fA18Ivw7/D4wdTL6JtWsHHwbfAb8L/wZMGVy+tbTvAp8J3
wR/Ag4VQT6NtK8K7w2fDD8KfwsOGVM+kbWrA+8IXwY/D38Ajh1LPqW3rwQfD
V8DPwT/BY4VWz69tmsJHwtfDr8B/whOEUS+mbVvDJ8C3wm/DTVj15Nq2DLwT
fBp8D/whPEQ49bTapjK8B3wu/BD8OTxcePUs2rYmvD98Mfwk/C08agT1XNqm
AXwIfBX8PPwLPHZE9YLathl8NHwD/Br8FzxRJPXi2qYtfCJ8O/wOPHBk9RTa
phy8M3wGfC/8ETxkFPX02rYKvBd8HvwI/AU8QlT1rNqmNnwAfCn8FPw9PFo0
9TzatiF8GHw1/CL8KzxudPVC2qYFfAx8E/w6/A88cQz1ktq2HXwyfAf8HjxI
TPVU2rY8vCt8Jnw//DE8dCz1DNqmGrw3fAH8KPwVPGJs9ezatg58IHwZ/Az8
AzxGHPW82qYxfDh8LfwS/Ds8Xlz1Itq2JXwcfDP8JvwvPGk89VLapgN8CnwX
/D48WHz11NqmIrwbfDb8APwpPEwC9Uzatjq8L3wh/Dj8NTxyQvUc2qYefBB8
Bfws/BM8ZiL1/Nq2CXwkfB38CvwHPEFi9aLapjV8PHwr/BbcJFFPpm3KwDvC
p8F3wx/CgydVT6ttK8F7wOfAD8GfwcMlU8+sbWrC+8EXw0/A38KjJFfPpW3r
w4fAV8LPwz/DY6dQL6BtmsFHwTfAr8J/wROmVC+ubdvAJ8K3we/AA6VST6Ft
y8I7w6fD98L/g4dMrZ5O21SB94TPgx+Gv4CHT6OeVdvWgg+AL4Gfgr+DR0ur
nlvbNIQPha+GX4B/hcdJp15I2zaHj4FvhF+H/4YnTq9eQtu0g0+C74DfhQfJ
oJ5S25SHd4HPhO+DP4aHyqieQdtWhfeGz4cfhb+ER8yknk3b1IFb+DL4afgH
ePTM6nm1bSP4cPga+CX4N3i8LOqFtU1L+Fj4ZvgN+F94kqzqpbRte/gU+E74
fXjQbOqptW0FeDf4LPgB+BN4mOzqGbVNdXgf+EL4MfhreKQc6jm0bV34IPhy
+Fn4R3jMnOr5tE0T+Aj4Ovhl+A94/FzqRbVtK/h4+Bb4Lfg/eLLc6qW1TUf4
VPhu+AN48DzqabRNJXh3+Bz4QfgzeNi86pm1bQ14P/gi+An4G3iUfOo5tU19
+GD4Svg5+Gd4rPzqBbRtU/go+Hr4VfhPeMIC6sW0TRv4BPg2+G14oILqybVN
WXgn+HT4Hvh/8BCF1NNp28rwnvC58MPw5/DwhdWzaJta8P7wJfCT8HfwqEXU
c2vbBvCh8FXwC/Av8DhF1Qtqm+bw0fCN8Gvw3/BExdRLaNu28Enw7fC78MDF
1VNq23LwLvAZ8H3wR/BQJdTTa5uq8F7w+fAj8JfwCCXVs2nb2nALXwo/DX8P
j15KPY+2aQQfBl8Dvwj/Bo9bWr2wtm0BHwvfBL8B/wNPUka9pLZpD58M3wm/
Bw9aVj2VtqkA7wqfBd8PfwIPXU49o7atBu8DXwA/Bn8Fj1RePbu2qQsfCF8O
PwP/CI9RQT2ftm0MHwFfC78M/w6PX1G9iLZpBR8H3wK/Cf8HT1pJvbS27QCf
Ct8FfwAPVlk9jbatCO8Onw0/CH8KD1tFPZO2qQHvC18EPw5/A49cVT2ntq0H
HwxfAT8H/wSPVU09v7ZpCh8JXw+/Av8JT1BdvZi2bQ2fAN8Kvw03NdSTa9sy
8E7wafA98IfwEDXV02qbyvAe8LnwQ/Dn8HC11LNo25rw/vDF8JPwt/CotdVz
aZsG8CHwVfDz8C/w2HXUC2rbZvDR8A3wa/Bf8ER11Ytrm7bwifDt8DvwwPXU
U2ibcvDO8BnwvfBH8JD11dNr2yrwXvB58CPwF/AIDdSzapva8AHwpfBT8Pfw
aA3V82jbhvBh8NXwi/Cv8LiN1AtpmxbwMfBN8OvwP/DEjdVLatt28MnwHfB7
8CBN1FNp2/LwrvCZ8P3wx/DQTdUzaJtq8N7wBfCj8FfwiM3Us2vbOvCB8GXw
M/AP8BjN1fNqm8bw4fC18Evw7/B4LdSLaNuW8HHwzfCb8L/wpC3VS2mbDvAp
8F3w+/BgrdRTa5uK8G7w2fAD8KfwMK3VM2nb6vC+8IXw4/DX8Mht1HNom3rw
QfAV8LPwT/CYbdXza9sm8JHwdfAr8B/wBO3Ui2qb1vDx8K3wW3DTXj2ZtikD
7wifBt8NfwgP3kE9rbatBO8BnwM/BH8GD9dRPbO2qQnvB18MPwF/C4/SST2X
tq0PHwJfCT8P/wyP3Vm9gLZpBh8F3wC/Cv8FT9hFvbi2bQOfCN8GvwMP1FU9
hbYtC+8Mnw7fC/8PHrKbejptUwXeEz4Pfhj+Ah6+u3pWbVsLPgC+BH4K/g4e
rYd6bm3TED4Uvhp+Af4VHqeneiFt2xw+Br4Rfh3+G564l3oJbdMOPgm+A34X
HqS3ekptUx7eBT4Tvg/+GB6qj3oGbVsV3hs+H34U/hIesa96Nm1TB27hy+Cn
4R/g0fup59W2jeDD4Wvgl+Df4PH6qxfWNi3hY+Gb4Tfgf+FJBqiX0rbt4VPg
O+H34UGtemptWwHeDT4LfgD+BB5moHpGbVMd3ge+EH4M/hoeaZB6Dm1bFz4I
vhx+Fv4RHnOwej5t0wQ+Ar4Ofhn+Ax5/iHpRbdsKPh6+BX4L/g+ebKh6aW3T
ET4Vvhv+AB58mHoabVMJ3h0+B34Q/gwedrh6Zm1bA94Pvgh+Av4GHmWEek5t
Ux8+GL4Sfg7+GR5rpHoBbdsUPgq+Hn4V/hOecJR6MW3TBj4Bvg1+Gx5otHpy
bVMW3gk+Hb4H/h88xBj1dNq2MrwnfC78MPw5PPxY9Szapha8P3wJ/CT8HTzq
OPXc2rYBfCh8FfwC/As8znj1gtqmOXw0fCP8Gvw3PNEE9RLati18Enw7/C48
8ET1lNq2HLwLfAZ8H/wRPNQk9fTapiq8F3w+/Aj8JTzCZPVs2rY23MKXwk/D
38OjT1HPo20awYfB18Avwr/B405VL6xtW8DHwjfBb8D/wJNMUy+pbdrDJ8N3
wu/Bg05XT6VtKsC7wmfB98OfwEPPUM+obavB+8AXwI/BX8EjzVTPrm3qwgfC
l8PPwD/CY8xSz6dtG8NHwNfCL8O/w+PPVi+ibVrBx8G3wG/C/8GTzlEvrW07
wKfCd8EfwIPNVU+jbSvCu8Nnww/Cn8LDzlPPpG1qwPvCF8GPw9/AI89Xz6lt
68EHw1fAz8E/wWMtUM+vbZrCR8LXw6/Af8ITLFQvpm1bwyfAt8Jvw80i9eTa
tgy8E3wafA/8ITzEYvW02qYyvAd8LvwQ/Dk83BL1LNq2Jrw/fDH8JPwtPOpS
9VzapgF8CHwV/Dz8Czz2MvWC2rYZfDR8A/wa/Bc80XL14tqmLXwifDv8Djzw
CvUU2qYcvDN8Bnwv/BE85Er19Nq2CrwXfB78CPwFPMIq9azapjZ8AHwp/BT8
PTzaavU82rYhfBh8Nfwi/Cs87hr1QtqmBXwMfBP8OvwPPPFa9ZLath18MnwH
/B48yDr1VNq2PLwrfCZ8P/wxPPR69Qzaphq8N3wB/Cj8FTziBvXs2rYOfCB8
GfwM/AM8xkb1vNqmMXw4fC38Evw7PN4m9SLatiV8HHwz/Cb8LzzpZvVS2qYD
fAp8F/w+PNgW9dTapiK8G3w2/AD8KTzMVvVM2rY6vC98Ifw4/DU88jb1HNqm
HnwQfAX8LPwTPOZ29fzatgl8JHwd/Ar8BzzBDvWi2qY1fDx8K/wW3OxUT6Zt
ysA7wqfBd8MfwoPvUk+rbSvBe8DnwA/Bn8HD7VbPrG1qwvvBF8NPwN/Co+xR
z6Vt68OHwFfCz8M/w2PvVS+gbZrBR8E3wK/Cf8ET7lMvrm3bwCfCt8HvwAPt
V0+hbcvCO8Onw/fC/4OHPKCeTttUgfeEz4Mfhr+Ahz+onlXb1oIPgC+Bn4K/
g0c7pJ5b2zSED4Wvhl+Af4XHOaxeSNs2h4+Bb4Rfh/+GJz6iXkLbtINPgu+A
34UHOaqeUtuUh3eBz4Tvgz+GhzqmnkHbVoX3hs+HH4W/hEc8rp5N29SBW/gy
+Gn4B3j0E+p5tW0j+HD4Gvgl+Dd4vJPqhbVNS/hY+Gb4DfhfeJJT6qW0bXv4
FPhO+H140NPqqbVtBXg3+Cz4AfgTeJgz6hm1TXV4H/hC+DH4a3iks+o5tG1d
+CD4cvhZ+Ed4zHPq+bRNE/gI+Dr4ZfgPePzz6kW1bSv4ePgW+C34P3iyC+ql
tU1H+FT4bvgDePCL6mm0TSV4d/gc+EH4M3jYS+qZtW0NeD/4IvgJ+Bt4lMvq
ObVNffhg+Er4OfhneKwr6gW0bVP4KPh6+FX4T3jCq+rFtE0b+AT4NvhteKBr
6sm1TVl4J/h0+B74f/AQ19XTadvK8J7wufDD8Ofw8DfUs2ibWvD+8CXwk/B3
8Kg31XNr2wbwofBV8AvwL/A4t9QLapvm8NHwjfBr8N/wRLfVS2jbtvBJ8O3w
u/DAd9RTatty8C7wGfB98EfwUHfV02ubqvBe8PnwI/CX8Aj31LNp29pwC18K
Pw1/D49+Xz2PtmkEHwZfA78I/waP+0C9sLZtAR8L3wS/Af8DT/JQvaS2aQ+f
DN8JvwcP+p96Km1TAd4VPgu+H/4EHvqRekZtWw3eB74Afgz+Ch7psXp2bVMX
PhC+HH4G/hEe44l6Pm3bGD4CvhZ+Gf4dHv+pehFt0wo+Dr4FfhP+D570mXpp
bdsBPhW+C/4AHuy5ehptWxHeHT4bfhD+FB72hXombVMD3he+CH4c/gYe+aV6
Tm1bDz4YvgJ+Dv4JHuuVen5t0xQ+Er4efgX+E57gtXoxbdsaPgG+FX4bbt6o
J9e2ZeCd4NPge+AP4SHeqqfVNpXhPeBz4Yfgz+Hh3qln0bY14f3hi+En4W/h
Ud+r59I2DeBD4Kvg5+Ff4LE/qBfUts3go+Eb4Nfgv+CJPqoX1zZt4RPh2+F3
4IE/qafQNuXgneEz4Hvhj+AhP6un17ZV4L3g8+BH4C/gEb6oZ9U2teED4Evh
p+Dv4dG+qufRtg3hw+Cr4RfhX+Fxv6kX0jYt4GPgm+DX4X/gib+rl9S27eCT
4Tvg9+BBfqin0rbl4V3hM+H74Y/hoX+qZ9A21eC94QvgR+Gv4BF/qWfXtnXg
A+HL4GfgH+Axfqvn1TaN4cPha+GX4N/h8f6oF9G2LeHj4JvhN+F/4Un/qpdy
OmL+7w8Gj3e9g98PuD7F6VXOv0uu73K6erWAf09cv+8//931YP8C2uFqwTo6
ntrp1c7vh3faVPznnY/pejf/+USuz/afT+36Af/5rK4/9Z/P53oYk/r/54u7
nslp93xF16v7u7rrff1d1/WF/m7s+nF/t3T9tb/bux45kNddXc/h796u1/O3
dX2Qv4e5vsLfY1w/6+9Jrn/y9wzXYwb2ep7r+f29xPUm/l7l+kh/b3B9ndPt
b29rd3ub61ecdnOv6z+cLjUpaalJR1xPECSgtwdwu9OuF3U6mXPgkuutnXaO
J73p+vgg3vUeuL41iHe9p67fCuJd743rJqh3vc+uJwvqXe+X62WCetcL3Mnx
jkG964Vy2kwL6l0vouu7g3rzj+76Q6fd5yOe68GDeeeTup42mHc+teuVgnnn
M7new38+p+tz/Ofzu37If76Y68/858u6Hi64d76y65mDe+druV4zuHe+oev9
tM1i+An4W3iUEOq5tG19+BD4Svh5+Gd47JDqBbRNM/go+AZ/d3T9qrb5BU8Y
Sr24tm0DnwjfBr8DDxRaPYW2LQvvDJ8O3wv/Dx4yjHo6bVMF3hM+D34Y/gIe
Pqx6Vm1bCz4AvgR+Cv4OHi2cem5t0xA+FL4afgH+FR4nvHohbdscPga+EX4d
/hueOIJ6CW3TDj4JvgN+Fx4konpKbVMe3gU+E74P/hgeKpJ6Bm1bFd4bPh9+
FP4SHjGyejZtUwdu4cvgp+Ef4NGjqOfVto3gw+Fr4Jfg3+DxoqoX1jYt4WPh
m+E34H/hSaKpl9K27eFT4Dvh9+FBo6un1rYV4N3gs+AH4E/gYWKoZ9Q21eF9
4Avhx+Cv4ZFiqufQtnXhg+DL4WfhH+ExY6nn0zZN4CPg6+CX4T/g8WOrF9W2
reDj4Vvgt+D/4MniqJfWNh3hU+G74Q/gweOqp9E2leDd4XPgB+HP4GHjqWfW
tjXg/eCL4Cfgb+BR4qvn1Db14YPhK+Hn4J/hsRKoF9C2TeGj4OvhV+E/4QkT
qhfTNm3gE+Db4LfhgRKpJ9c2ZeGd4NPhe+D/wUMkVk+nbSvDe8Lnwg/Dn8PD
J1HPom1qwfvDl8BPwt/BoyZVz61tG8CHwlfBL8C/wOMkUy+obZrDR8M3wq/B
f8MTJVcvoW3bwifBt8PvwgOnUE+pbcvBu8BnwPfBH8FDpVRPr22qwnvB58OP
wF/CI6RSz6Zta8MtfCn8NPw9PHpq9TzaphF8GHwN/CL8GzxuGvXC2rYFfCx8
E/wG/A88SVr1ktqmPXwyfCf8HjxoOvVU2qYCvCt8Fnw//Ak8dHr1jNq2GrwP
fAH8GPwVPFIG9ezapi58IHw5/Az8IzxGRvV82rYxfAR8Lfwy/Ds8fib1Itqm
FXwcfAv8JvwfPGlm9dLatgN8KnwX/AE8WBb1NNq2Irw7fDb8IPwpPGxW9Uza
pga8L3wR/Dj8DTxyNvWc2rYefDB8Bfwc/BM8Vnb1/NqmKXwkfD38CvwnPEEO
9WLatjV8Anwr/Dbc5FRPrm3LwDvBp8H3wB/CQ+RST6ttKsN7wOfCD8Gfw8Pl
Vs+ibWvC+8MXw0/C38Kj5lHPpW0awIfAV8HPw7/AY+dVL6htm8FHwzfAr8F/
wRPlUy+ubdrCJ8K3w+/AA+dXT6FtysE7w2fA98IfwUMWUE+vbavAe8HnwY/A
X8AjFFTPqm1qwwfAl8JPwd/DoxVSz6NtG8KHwVfDL8K/wuMWVi+kbVrAx8A3
wa/D/8ATF1EvqW3bwSfDd8DvwYMUVU+lbcvDu8JnwvfDH8NDF1PPoG2qwXvD
F8CPwl/BIxZXz65t68AHwpfBz8A/wGOUUM+rbRrDh8PXwi/Bv8PjlVQvom1b
wsfBN8Nvwv/Ck5ZSL6VtOsCnwHfB78ODlVZPrW0qwrvBZ8MPwJ/Cw5RRz6Rt
q8P7whfCj8NfwyOXVc+hberBB8FXwM/CP8FjllPPr22bwEfC18GvwH/AE5RX
L6ptWsPHw7fCb8FNBfVk2qYMvCN8Gnw3/CE8eEX1tNq2ErwHfA78EPwZPFwl
9czapia8H3wx/AT8LTxKZfVc2rY+fAh8Jfw8/DM8dhX1AtqmGXwUfAP8KvwX
PGFV9eLatg18Inwb/A48UDX1FNq2LLwzfDp8L/w/eMjq6um0TRV4T/g8+GH4
C3j4GupZtW0t+AD4Evgp+Dt4tJrqubVNQ/hQ+Gr4BfhXeJxa6oW0bXP4GPhG
+HX4b3ji2uoltE07+CT4DvhdeJA66im1TXl4F/hM+D74Y3iouuoZtG1VeG/4
fPhR+Et4xHrq2bRNHbiFL4Ofhn+AR6+vnlfbNoIPh6+BX4J/g8droF5Y27SE
j4Vvht+A/4UnaaheStu2h0+B74TfhwdtpJ5a21aAd4PPgh+AP4GHaayeUdtU
h/eBL4Qfg7+GR2qinkPb1oUPgi+Hn4V/hMdsqp5P2zSBj4Cvg1+G/4DHb6Ze
VNu2go+Hb4Hfgv+DJ2uuXlrbdIRPhe+GP4AHb6GeRttUgneHz4EfhD+Dh22p
nlnb1oD3gy+Cn4C/gUdppZ5T29SHD4avhJ+Df4bHaq1eQNs2hY+Cr4dfhf+E
J2yjXkzbtIFPgG+D34YHaqueXNuUhXeCT4fvgf8HD9FOPZ22rQzvCZ8LPwx/
Dg/fXj2LtqkF7w9fAj8JfweP2kE9t7ZtAB8KXwW/AP8Cj9NRvaC2aQ4fDd8I
vwb/DU/USb2Etm0LnwTfDr8LD9xZPaW2LQfvAp8B3wd/BA/VRT29tqkK7wWf
Dz8CfwmP0FU9m7atDbfwpfDT8Pfw6N3U82ibRvBh8DXwi/Bv8Ljd1Qtr2xbw
sfBN8BvwP/AkPdRLapv28MnwnfB78KA91VNpmwrwrvBZ8P3wJ/DQvdQzattq
8D7wBfBj8FfwSL3Vs2ubuvCB8OXwM/CP8Bh91PNp28bwEfC18Mvw7/D4fdWL
aJtW8HHwLfCb8H/wpP3US2vbDvCp8F3wB/Bg/dXTaNuK8O7w2fCD8KfwsAPU
M2mbGvC+8EXw4/A38MhWPae2rQcfDF8BPwf/BI81UD2/tmkKHwlfD78C/wlP
MEi9mLZtDZ8A3wq/DTeD1ZNr2zLwTvBp8D3wh/AQQ9TTapvK8B7wufBD8Ofw
cEPVs2jbmvD+8MXwk/C38KjD1HNpmwbwIfBV8PPwL/DYw9ULattm8NHwDfBr
8F/wRCPUi2ubtvCJ8O3wO/DAI9VTaJty8M7wGfC98EfwkKPU02vbKvBe8Hnw
I/AX8Aij1bNqm9rwAfCl8FPw9/BoY9TzaNuG8GHw1fCL8K/wuGPVC2mbFvAx
8E3w6/A/8MTj1Etq23bwyfAd8HvwIOPVU2nb8vCu8Jnw/fDH8NAT1DNom2rw
3vAF8KPwV/CIE9Wza9s68IHwZfAz8A/wGJPU82qbxvDh8LXwS/Dv8HiT1Yto
25bwcfDN8Jvwv/CkU9RLaZsO8CnwXfD78GBT1VNrm4rwbvDZ8APwp/Aw09Qz
advq8L7whfDj8NfwyNPVc2ibevBB8BXws/BP8Jgz1PNr2ybwkfB18CvwH/AE
M9WLapvW8PHwrfBbcDNLPZm2KQPvCJ8G3w1/CA8+Wz2ttq0E7wGfAz8EfwYP
N0c9s7apCe8HXww/AX8LjzJXPZe2rQ8fAl8JPw//DI89T72AtmkGHwXfAL8K
/wVPOF+9uLZtA58I3wa/Aw+0QD2Fti0L7wyfDt8L/w8ecqF6Om1TBd4TPg9+
GP4CHn6RelZtWws+AL4Efgr+Dh5tsXpubdMQPhS+Gn4B/hUeZ4l6IW3bHD4G
vhF+Hf4bnnipeglt0w4+Cb4DfhceZJl6Sm1THt4FPhO+D/4YHmq5egZtWxXe
Gz4ffhT+Eh5xhXo2bVMHbuHL4KfhH+DRV6rn1baN4MPha+CX4N/g8VapF9Y2
LeFj4ZvhN+B/4UlWq5fStu3hU+A74ffhQdeop9a2FeDd4LPgB+BP4GHWqmfU
NtXhfeAL4cfgr+GR1qnn0LZ14YPgy+Fn4R/hMder59M2TeAj4Ovgl+E/4PE3
qBfVtq3g4+Fb4Lfg/+DJNqqX1jYd4VPhu+EP4ME3qafRNpXg3eFz4Afhz+Bh
N6tn1rY14P3gi+An4G/gUbao59Q29eGD4Svh5+Cf4bG2qhfQtk3ho+Dr4Vfh
P+EJt6kX0zZt4BPg2+C34YG2qyfXNmXhneDT4Xvg/8FD7FBPp20rw3vC58IP
w5/Dw+9Uz6JtasH7w5fAT8LfwaPuUs+tbRvAh8JXwS/Av8Dj7FYvqG2aw0fD
N8KvwX/DE+1RL6Ft28InwbfD78ID71VPqW3LwbvAZ8D3wR/BQ+1TT69tqsJ7
wefDj8BfwiPsV8+mbWvDLXwp/DT8PTz6AfU82qYRfBh8Dfwi/Bs87kH1wtq2
BXwsfBP8BvwPPMkh9ZLapj18Mnwn/B486GH1VNqmArwrfBZ8P/wJPPQR9Yza
thq8D3wB/Bj8FTzSUfXs2qYufCB8OfwM/CM8xjH1fNq2MXwEfC38Mvw7PP5x
9SLaphV8HHwL/Cb8HzzpCfXS2rYDfCp8F/wBPNhJ9TTatiK8O3w2/CD8KTzs
KfVM2qYGvC98Efw4/A088mn1nNq2HnwwfAX8HPwTPNYZ9fzapil8JHw9/Ar8
JzzBWfVi2rY1fAJ8K/w23JxTT65ty8A7wafB98AfwkOcV0+rbSrDe8Dnwg/B
n8PDXVDPom1rwvvDF8NPwt/Co15Uz6VtGsCHwFfBz8O/wGNfUi+obZvBR8M3
wK/Bf8ETXVYvrm3awifCt8PvwANfUU+hbcrBO8NnwPfCH8FDXlVPr22rwHvB
58GPwF/AI1xTz6ptasMHwJfCT8Hfw6NdV8+jbRvCh8FXwy/Cv8Lj3lAvpG1a
wMfAN8Gvw//AE99UL6lt28Enw3fA78GD3FJPpW3Lw7vCZ8L3wx/DQ99Wz6Bt
qsF7wxfAj8JfwSPeUc+ubevAB8KXwc/AP8Bj3FXPq20aw4fD18Ivwb/D491T
L6JtW8LHwTfDb8L/wpPeVy+lbTrAp8B3we/Dgz1QT61tKsK7wWfDD8CfwsM8
VM+kbavD+8IXwo/DX8Mj/6eeQ9vUgw+Cr4CfhX+Cx3yknl/bNoGPhK+DX4H/
gCd4rF5U27SGj4dvhd+CmyfqybRNGXhH+DT4bvhDePCn6mm1bSV4D/gc+CH4
M3i4Z+qZtU1NeD/4YvgJ+Ft4lOfqubRtffgQ+Er4efhneOwX6gW0TTP4KPgG
+FX4L3jCl+rFtW0b+ET4NvgdeKBX6im0bVl4Z/h0+F74f/CQr9XTaZsq8J7w
efDD8Bfw8G/Us2rbWvAB8CXwU/B38Ghv1XNrm4bwofDV8Avwr/A479QLadvm
8DHwjfDr8N/wxO/VS2ibdvBJ8B3wu/AgH9RTapvy8C7wmfB98MfwUB/VM2jb
qvDe8Pnwo/CX8Iif1LNpmzpwC18GPw3/AI/+WT2vtm0EHw5fA78E/waP90W9
sLZpCR8L3wy/Af8LT/JVvZS2bQ+fAt8Jvw8P+k09tbatAO8GnwU/AH8CD/Nd
PaO2qQ7vA18IPwZ/DY/0Qz2Htq0LHwRfDj8L/wiP+VM9n7ZpAh8BXwe/DP8B
j/9Lvai2bQUfD98CvwX/B0/2W720tukInwrfDX8AD/5HPY22qQTvDp8DPwh/
Bg/7Vz2ztq0B7wdfBD8BfwOP8k89p7apDx8MXwk/B/8Mj2XSiBfQtk3ho+Dr
4VfhP+EJA6kX0zZt4BPg2+C34YECqyfXNmXhneDT4Xvg/8FDBFFPp20rw3vC
58IPw5/DwwdVz6JtasH7w5fAT8LfwaMGU8+tbRvAh8JXwS/Av8DjBFcvqG2a
w0fDN8KvwX/DE4VQL6Ft28InwbfD78IDh1RPqW3LwbvAZ8D3wR/BQ4VST69t
qsJ7wefDj8BfwiOEVs+mbWvDLXwp/DT8PTx6GPU82qYRfBh8Dfwi/Bs8blj1
wtq2BXwsfBP8BvwPPEk49ZLapj18Mnwn/B48aHj1VNqmArwrfBZ8P/wJPHQE
9Yzathq8D3wB/Bj8FTxSRPXs2qYufCB8OfwM/CM8RiT1fNq2MXwEfC38Mvw7
PH5k9SLaphV8HHwL/Cb8HzxpFPXS2rYDfCp8F/wBPFhU9TTatiK8O3w2/CD8
KTxsNPVM2qYGvC98Efw4/A08cnT1nNq2HnwwfAX8HPwTPFYM9fzapil8JHw9
/Ar8JzxBTPVi2rY1fAJ8K/w23MRST65ty8A7wafB98AfwkPEVk+rbSrDe8Dn
wg/Bn8PDxVHPom1rwvvDF8NPwt/Co8ZVz6VtGsCHwFfBz8O/wGPHUy+obZvB
R8M3wK/Bf8ETxVcvrm3awifCt8PvwAMnUE+hbcrBO8NnwPfCH8FDJlRPr22r
wHvB58GPwF/AIyRSz6ptasMHwJfCT8Hfw6MlVs+jbRvCh8FXwy/Cv8LjJlEv
pG1awMfAN8Gvw//AEydVL6lt28Enw3fA78GDJFNPpW3Lw7vCZzpd7GOBp9sH
uL7f6fRlr749P971x07HWNb627P5rodO7v3+Btcz+HuL69X8vcP13v7e4/oC
fx9w/ai/T7j+yt8XXI+Ywusbrmf39wPX6/j7uesD/f3e9WX+/u76GX+bzo5/
8HdIp02MlF5HdD2vv2O63tjfCV0f7u/Erq/1d1LXL/k7uevf/Z3S9XipvE7t
ehF/p3W9pb/Tuz7O3xld3+zvrK7f9HdO1//6O6/rSVN7XdD1Uv4u6XoHf1d0
fYq/a7q+y98NXb/v75auB0vjf75cT+3vnq5X9Ld1vZvT7v+PPtT12U67/3/6
KNcP+M9PcP2p//xU18Ok9c7Pcj1TWu/8Ater+3uF6339vcH1hf7e4fpxfx9w
/bW/T7geOZ3/+XQ9h79vuF7P3w9cH6RtVsDPwj/BY6ZXz69tm8BHwtfBr8B/
wBNkUC+qbVrDx8O3wm/BTcaAjr70w8RQj11P5vT0wbP/FHbblHE6ZuNirfr6
vKPTMwu+u7LV59Ocjp0g4Cc+3+30nD+F16R84vpDp+PdeR2jsds2eKaAnrdr
2uDZPk/rtPPrV3xeyekFPV7WDv/U9R5OJ6o+5VgJt+0cpxdnzZ95oM8POZ00
yvO5u3z+zGnn7Xz2ebjMAZ38Qp5u6Z65ntnp5euePGjutqnpdKqx48su8Hk/
p1e1ybXjps8XO52m9KMkUZ67fsLpNSkDfsFt89bpdCFy/Brq8yhZAnp9wJ/f
7/NcTmc8MurSd5/Xd3rjooA38ML1IU5nHnhvZRu37UqnNzcYEW2pz887nS3g
7d7z+Went8UNuKEvXY+dNaADrl6zktu2gNM7bmY4MsrnzZzO5fzA56Oc3h1w
+//4fIPTebsFvINXrl91em+V6507um1+Oe1cfqXPE2YL6P0RA+6Iz4s7XSjg
cYj72vU2Th862z9RdbfNRKeLODfM59ucdm7HCZ/fcTrg6Woa+I3rgbIH9PES
ARNz26RwuqQzQJ+Xdfpk0N7L1/m8s9PueHw+3enTBwNewFvX9zpdznmg3Lb/
OX0u4OVN8XnIHAFdoV7Ab/g8ndPO4xLinetVnK7kPuCu93T68vcTQXv7fJ7T
VQNu12afH3b66taAAfn8hdPO45v8vevhcwa0c7yB2yar07WcC/i8ltO3AsZ3
yecDnK4Tvv3XMB9cX+K083Eq5rY55bTz8vv7/J3T91cGPMA+j5YroBsGPE4f
fJ7b6YfNAyb40fWGTjsf76Zu26FOO7dzrs9XO900cMAT4fMLTj8NeLwjfnL9
q9MtnAfCbRsnd0AHfBqnDfZ5Iaed8e71eXOnAz7d7b/6fIzTbZ0H9LPrG51+
E/D2Wrltrjsd8O43LvL5b6edx+2OzxPnCeiOzgfmi+slnP4Y8PEv77Zp53QX
54DPJzn9uXzAHfP5Dqedx/+Xz+867Vwu61fXg+QN6J7uC3Y9pdM/Asa/3Ofl
ne7tfKH4vIvTzscx9jfXZzrtvP0qbtt9Tv8N+Hoc6/PHTg9wvuB8Hiqf9/38
3fUMTjtfD7nctlWddsbR2ee9nR4S8HW9xufznQ7mvCCfH3V6WMDLSfDD9ZdO
O19XNd02EfMHtPN4TPR5NqdDOzfI53WcHh3wcQ3603XrdFjnC8xts8xp5+uz
h89PO+08rht9/sHpCQH80ufRCwR0JOcL9ZfreZ2eFDCuem7bRk47X+fTfD7c
aefjc8Hnawp4++q365cKePvKbfutgLevfB6voLevfF64oLevfN6yoLev/rg+
tqC3r9w2mwt6+8rnNwp6+8rnfwt6++qv60kKefvKbVOqkLevfN6+kLevfD6l
kLevfL6zkLev/rl+v5C3r9y2QQt7+8rnqQt7+8rnFQp7+8p0cbxbYW9fuW1n
Ffb2lc8PFPb2lc+fFPb2lc/DFPH2VSDXMxbx9pXbpnoRb1/5vE8Rb1/5fGER
b18Fdv1YEW9fuW1eF/H2lc8jFfX2lc9zFPX2lc/rFvX2VRDXBxX19pXbdnlR
b1/5/GxRb1/5/GNRb18FdT1mMW9fuW3zFfP2lc+bFPP2lc9HFPP2VTDX1xXz
9pXb9nIxb1/5/Ecxb1/5PH5xb1/5vGhxb18Fd71VcW9fuW3GF/f2lc+3FPf2
lc9vFff2VQjX/xX39pXbJlkJb1/5vHQJb1/5vGMJb1/5fGoJb1+FdH13CW9f
uW0flPD2lc+Dl/T2lc/TlPT2VSjXK5X09pXbtntJb1/5fE5Jb1/5/GBJb1/5
/FlJb1+Fdj1sKW9fuW0yl/L2lc9rlPL2lc/7lfL2VRjXF5Xy9pXb5kQpb1/5
/E0pb1/5PEppb1/5PGdpb1+Fdb1+aW9fuW0Hl/b2lc9Xlvb2lc/Plfb2VTjX
P5f29pXbNlYZb1/5vEAZb1/5vGkZb1/5fFQZb1+Fd319GW9fuW2ulvH2lc9/
lvH2lc8TlvX2VQTXi5X19pXbpk1Zb1/5fEJZb1/5fFtZb19FdP22tglUTj25
tikL7wSfDt8D/w8eorx6Om1bGd4TPhd+GP4cHr6CehZtUwveH74EfhL+Dh61
onpubdsAPhS+Cn4B/gUep5J6QW3THD4avhF+Df4bnqiyeglt2xY+Cb4dfhce
uIp6Sm1bDt4FPgO+D/4IHqqqenptUxXeCz4ffgT+Eh6hmno2bVsbbuFL4afh
7+HRq6vn0TaN4MPga+AX4d/gcWuoF9a2LeBj4ZvgN+B/4ElqqpfUNu3hk+E7
4ffgQWupp9I2FeBd4bPg++FP4KFrq2fUttXgfeAL4Mfgr+CR6qhn1zZ14QPh
y+Fn4B/hMeqq59O2jeEj4Gvhl+Hf4fHrqRfRNq3g4+Bb4Dfh/+BJ66uX1rYd
4FPhu+AP4MEaqKfRthXh3eGz4QfhT+FhG6pn0jY14H3hi+DH4W/gkRup59S2
9eCD4Svg5+Cf4LEaq+fXNk3hI+Hr4VfgP+EJmqgX07at4RPgW+G34aapenJt
WwbeCT4Nvgf+EB6imXpabVMZ3gM+F34I/hwerrl6Fm1bE94fvhh+Ev4WHrWF
ei5t0wA+BL4Kfh7+BR67pXpBbdsMPhq+AX4N/gueqJV6cW3TFj4Rvh1+Bx64
tXoKbVMO3hk+A74X/ggeso16em1bBd4LPg9+BP4CHqGtelZtUxs+AL4Ufgr+
Hh6tnXoebdsQPgy+Gn4R/hUet716IW3TAj4Gvgl+Hf4HnriDeklt2w4+Gb4D
fg8epKN6Km1bHt4VPhO+H/4YHrqTegZtUw3eG74AfhT+Ch6xs3p2bVsHPhC+
DH4G/gEeo4t6Xm3TGD4cvhZ+Cf4dHq+rehFt2xI+Dr4ZfhP+F560m3opbdMB
PgW+C34fHqy7emptUxHeDT4bfgD+FB6mh3ombVsd3he+EH4c/hoeuad6Dm1T
Dz4IvgJ+Fv4JHrOXen5t2wQ+Er4OfgX+A56gt3pRbdMaPh6+FX4LbvqoJ9M2
ZeAd4dPgu+EP4cH7qqfVtpXgPeBz4Ifgz+Dh+qln1jY14f3gi+En4G/hUfqr
59K29eFD4Cvh5+Gf4bEHqBfQNs3go+Ab4Ffhv+AJrXpxbdsGPhG+DX4HHmig
egptWxbeGT4dvhf+HzzkIPV02qYKvCd8Hvww/AU8/GD1rNq2FnwAfAn8FPwd
PNoQ9dzapiF8KHw1/AL8KzzOUPVC2rY5fAx8I/w6/Dc88TD1EtqmHXwSfAf8
LjzIcPWU2qY8vAt8Jnwf/DE81Aj1DNq2Krw3fD78KPwlPOJI9Wzapg7cwpfB
T8M/wKOPUs+rbRvBh8PXwC/Bv8HjjVYvrG1awsfCN8NvwP/Ck4xRL6Vt28On
wHfC78ODjlVPrW0rwLvBZ8EPwJ/Aw4xTz6htqsP7wBfCj8FfwyONV8+hbevC
B8GXw8/CP8JjTlDPp22awEfA18Evw3/A409UL6ptW8HHw7fAb8H/wZNNUi+t
bTrCp8J3wx/Ag09WT6NtKsG7w+fAD8KfwcNOUc+sbWvA+8EXwU/A38CjTFXP
qW3qwwfDV8LPwT/DY01TL6Btm8JHwdfDr8J/whNOVy+mbdrAJ8C3wW/DA81Q
T65tysI7wafD98D/g4eYqZ5O21aG94TPhR+GP4eHn6WeRdvUgveHL4GfhL+D
R52tnlvbNoAPha+CX4B/gceZo15Q2zSHj4ZvhF+D/4YnmqteQtu2hU+Cb4ff
hQeep55S25aDd4HPgO+DP4KHmq+eXttUhfeCz4cfgb+ER1ignk3b1oZb+FL4
afh7ePSF6nm0TSP4MPga+EX4N3jcReqFtW0L+Fj4JvgN+B94ksXqJbVNe/hk
+E74PXjQJeqptE0FeFf4LPh++BN46KXqGbVtNXgf+AL4MfgreKRl6tm1TV34
QPhy+Bn4R3iM5er5tG1j+Aj4Wvhl+Hd4/BXqRbRNK/g4+Bb4Tfg/eNKV6qW1
bQf4VPgu+AN4sFXqabRtRXh3+Gz4QfhTeNjV6pm0TQ14X/gi+HH4G3jkNeo5
tW09+GD4Cvj/uLrHIFeaBgzDffQe27Zt27Zt2+5j27Zt27Zt2/4yM9+m6rnz
796r0+lkJj3ZqtTuWfgneMw16vm0TRP4CPg6+GX4T3j8tepFtW0r+Hj4Fvgt
uFmnnkzbloZ3hE+F74Y/gAdfr55G21SCd4fPgR+EP4eH3aCeWdvWgPeDL4Kf
gL+FR9monlPb1IcPhq+En4N/gcfapF5A2zaFj4Kvh1+F/4In3KxeTNu0gU+A
b4Pfhgfeop5c25SFd4JPh++BP4KH2KqeTttWhveEz4Ufhr+Ah9+mnkXb1IL3
hy+Bn4S/h0fdrp5b2zaAD4Wvgl+Af4XH2aFeUNs0h4+Gb4Rfg/+BJ9qpXkLb
toVPgm+H34UH2aWeUtuWg3eBz4Dvgz+Gh9qtnl7bVIX3gs+HH4G/gkfYo55N
29aGD4AvhZ+Gf4BH36ueR9s0gg+Dr4FfhH+Hx92nXljbtoCPhW+C34D/hSfZ
r15S27SHT4bvhN+DBzugnkrbVIB3hc+C74c/hYc+qJ5R21aD94EvgB+Dv4ZH
OqSeXdvUhQ+EL4efgX+Cxzisnk/bNoaPgK+FX4b/gMc/ol5E27SCj4Nvgd+E
m6PqSbVNaXgH+FT4LvgD+H/H1NNo24rw7vDZ8IPwZ/Cwx9UzaZsa8L7wRfDj
8LfwyCfUc2rbevDB8BXwc/DP8Fgn1fNrm6bwkfD18CvwX/AEp9SLadvW8Anw
rfDb8ECn1ZNr2zLwTvBp8D3wh/AQZ9TTapvK8B7wufBD8BfwcGfVs2jbmvD+
8MXwk/B38Kjn1HNpmwbwIfBV8PPwr/DY59ULattm8NHwDfBr8N/wRBfUi2ub
tvCJ8O3wO/AgF9VTaJty8M7wGfC98MfwkJfU02vbKvBe8HnwI/CX8AiX1bNq
m9pwC18KPwX/AI92RT2Ptm0IHwZfDb8I/waPe1W9kLZpAR8D3wS/Dv8LT3xN
vaS2bQefDN8BvwcPel09lbYtD+8KnwnfD38CD31DPYO2qQbvDV8APwp/DY94
Uz27tq0DHwhfBj8D/wiPcUs9r7ZpDB8OXwu/BP8Bj3dbvYi2bQkfB98Mvwn/
B096R72UtukAnwLfBb8P/++uemptUxHeDT4bfgD+DB7mnnombVsd3he+EH4c
/gYe+b56Dm1TDz4IvgJ+Fv4ZHvOBen5t2wQ+Er4OfgX+E57goXpRbdMaPh6+
FX4LHuiRejJtUwbeET4Nvhv+EB78sXpabVsJ3gM+B34I/hwe7ol6Zm1TE94P
vhh+Av4OHuWpei5tWx8+BL4Sfh7+BR77mXoBbdMMPgq+AX4V/hue8Ll6cW3b
Bj4Rvg1+Bx74hXoKbVsW3hk+Hb4X/gge8qV6Om1TBd4TPg9+GP4SHv6VelZt
Wwtu4Uvgp+Dv4dFeq+fWNg3hQ+Gr4Rfg3+Bx3qgX0rbN4WPgG+HX4X/gid+q
l9A27eCT4Dvgd+FB36mn1Dbl4V3gM+H74E/god6rZ9C2VeG94fPhR+Gv4BE/
qGfTNnXgA+DL4KfhH+HRP6rn1baN4MPha+CX4N/h8T6pF9Y2LeFj4ZvhN+D/
4Ek+q5fStu3hU+A74ffhwb6op9a2FeDd4LPgB+BP4WG+qmfUNtXhfeAL4cfg
b+CRvqnn0LZ14YPgy+Fn4Z/gMb+r59M2TeAj4Ovgl+E/4fF/qBfVtq3g4+Fb
4Lfg5qd6Mm1bGt4RPhW+G/4AHvyXehptUwneHT4HfhD+HB72t3pmbVsD3g++
CH4C/hYe5Y96Tm1THz4YvhJ+Dv4FHuuvegFt2xQ+Cr4efhX+C57wn3oxbdMG
PgG+DX4bHtikEU+ubcrCO8Gnw/fAH8FDBFJPp20rw3vC58IPw1/AwwdWz6Jt
asH7w5fAT8Lfw6MGUc+tbRvAh8JXwS/Av8LjBFUvqG2aw0fDN8Kvwf/AEwVT
L6Ft28InwbfD78KD/KeeUtuWg3eBz4Dvgz+Ghwqunl7bVIX3gs+HH4G/gkcI
oZ5N29aGD4AvhZ+Gf4BHD6meR9s0gg+Dr4FfhH+Hxw2lXljbtoCPhW+C34D/
hScJrV5S27SHT4bvhN+DBwujnkrbVIB3hc+C74c/hYcOq55R21aD94EvgB+D
v4ZHCqeeXdvUhQ+EL4efgX+Cxwivnk/bNoaPgK+FX4b/gMePoF5E27SCj4Nv
gd+Em4jqSbVNaXgH+FT4LvgD+H+R1NNo24rw7vDZ8IPwZ/CwkdUzaZsa8L7w
RfDj8LfwyFHUc2rbevDB8BXwc/DP8FhR1fNrm6bwkfD18CvwX/AE0dSLadvW
8AnwrfDb8EDR1ZNr2zLwTvBp8D3wh/AQMdTTapvK8B7wufBD8BfwcDHVs2jb
mvD+8MXwk/B38Kix1HNpmwbwIfBV8PPwr/DYsdULattm8NHwDfBr8N/wRHHU
i2ubtvCJ8O3wO/AgcdVTaJty8M7wGfC98MfwkPHU02vbKvBe8HnwI/CX8Ajx
1bNqm9pwC18KPwX/AI+WQD2Ptm0IHwZfDb8I/waPm1C9kLZpAR8D3wS/Dv8L
T5xIvaS2bQefDN8BvwcPmlg9lbYtD+8KnwnfD38CD51EPYO2qQbvDV8APwp/
DY+YVD27tq0DHwhfBj8D/wiPkUw9r7ZpDB8OXwu/BP8Bj5dcvYi2bQkfB98M
vwn/B0+aQr2UtukAnwLfBb8P/y+lemptUxHeDT4bfgD+DB4mlXombVsd3he+
EH4c/gYeObV6Dm1TDz4IvgJ+Fv4ZHjONen5t2wQ+Er4OfgX+E54grXpRbdMa
Ph6+FX4LHiidejJtUwbeET4Nvhv+EB48vXpabVsJ3gM+B34I/hweLoN6Zm1T
E94Pvhh+Av4OHiWjei5tWx8+BL4Sfh7+BR47k3oBbdMMPgq+AX4V/hueMLN6
cW3bBj4Rvg1+Bx44i3oKbVsW3hk+Hb4X/ggeMqt6Om1TBd4TPg9+GP4SHj6b
elZtWwtu4Uvgp+Dv4dGyq+fWNg3hQ+Gr4Rfg3+BxcqgX0rbN4WPgG+HX4X/g
iXOql9A27eCT4Dvgd+FBc6mn1Dbl4V3gM+H74E/goXKrZ9C2VeG94fPhR+Gv
4BHzqGfTNnXgA+DL4KfhH+HR86rn1baN4MPha+CX4N/h8fKpF9Y2LeFj4Zvh
N+D/4Enyq5fStu3hU+A74ffhwQqop9a2FeDd4LPgB+BP4WEKqmfUNtXhfeAL
4cfgb+CRCqnn0LZ14YPgy+Fn4Z/gMQur59M2TeAj4Ovgl+E/4fGLqBfVtq3g
4+Fb4Lfgpqh6Mm1bGt4RPhW+G/4AHryYehptUwneHT4HfhD+HB62uHpmbVsD
3g++CH4C/hYepYR6Tm1THz4YvhJ+Dv4FHqukegFt2xQ+Cr4efhX+C56wlHox
bdMGPgG+DX4bHri0enJtUxbeCT4dvgf+CB6ijHo6bVsZ3hM+F34Y/sLpLyuz
LD0X3/XwZQM8g+tZnG7m3LK5XsvpM6d9tzyu93c6s3Mr7PoSp2fO8N1Kun7S
P18F19/756vmetRyAfPVcT13uYD5GrveoFzAfC1dH1ouYL4Orq/ydxfXL/i7
h+tf/d3H9TjlA9q6XrB8wPwDXG9ePuDxB7k+unzA+ga7vrF8wPqHun7NP99w
1//45xvheqIKAfONcr1EhYD5RrvetkLAfGNdn1QhYL7xrm/392TX7/p7uutB
Kgb0bNdT+nu+6+X8vdz1Lv5e7/oMf293fZ+/97v+2Gn3/60fcT1UpTT//3/r
J11PXylg/HnXq1YKGH/F9V7+8Tddn+8ff9/1I/5+7vorf793PULlgPm+uJ6t
csB8P12vXTlgvOni+AD/+GBO26X+8aFcP+0fH8H1D/6O4nr0KgEdw/U8/o7j
eiN/J3B9mL+TuL7G3ylcv+jvNK5/93cG1+NWDegsrhf2dw7XW/g7j+tj/V3A
9U3a5gb8LzxJNfWS2qY9fDJ8J/wePFh19VTapgK8K3wWfD/8KTx0DfWM2rYa
vA98AfwY/DU8Uk317NqmLnwgfDn8DPwTPEYt9XzatjF8BHwt/DL8Bzx+bfUi
2qYVfBx8C/wm3NRRT6ptSsM7wKfCd8EfwP+rq55G21aEd4fPhh+EP4OHraee
SdvUgPeFL4Ifh7+FR66vnlPb1oMPhq+An4N/hsdqoJ5f2zSFj4Svh1+B/4In
aKheTNu2hk+Ab4XfhgdqpJ5c25aBd4JPg++BP4SHaKyeVttUhveAz4Ufgr+A
h2uinkXb1oT3hy+Gn4S/g0dtqp5L2zSAD4Gvgp+Hf4XHbqZeUNs2g4+Gb4Bf
g/+GJ2quXlzbtIVPhG+H34EHaaGeQtuUg3eGz4DvhT+Gh2ypnl7bVoH3gs+D
H4G/hEdopZ5V29SGW/hS+Cn4B3i01up5tG1D+DD4avhF+Dd43DbqhbRNC/gY
+Cb4dfhfeOK26iW1bTv4ZPgO+D140HbqqbRteXhX+Ez4fvgTeOj26hm0TTV4
b/gC+FH4a3jEDurZtW0d+ED4MvgZ+Ed4jI7qebVNY/hw+Fr4JfgPeLxO6kW0
bUv4OPhm+E34P3jSzuqltH2/tatPge+C34f/10U9tbapCO8Gnw0/AH8GD9NV
PZO2rQ7vC18IPw5/A4/cTT2HtqkHHwRfAT8L/wyP2V09v7ZtAh8JXwe/Av8J
T9BDvai2aQ0fD98KvwUP1FM9mbYpA+8InwbfDX8ID95LPa22rQTvAZ8DPwR/
Dg/XWz2ztqkJ7wdfDD8BfweP0kc9l7atDx8CXwk/D/8Cj91XvYC2aQYfBd8A
vwr/DU/YT724tm0DnwjfBr8DD9xfPYW2LQvvDJ8O3wt/BA9p1dNpmyrwnvB5
8MPwl/DwA9SzattacAtfAj8Ffw+PNlA9t7ZpCB8KXw2/AP8GjzNIvZC2bQ4f
A98Ivw7/A088WL2EtmkHnwTfAb8LDzpEPaW2KQ/vAp8J3wd/Ag81VD2Dtq0K
7w2fDz8KfwWPOEw9m7apAx8AXwY/Df8Ijz5cPa+2bQQfDl8DvwT/Do83Qr2w
tmkJHwvfDL8B/wdPMlK9lLZtD58C3wm/Dw82Sj21tq0A7wafBT8AfwoPM1o9
o7apDu8DXwg/Bn8DjzRGPYe2rQsfBF8OPwv/BI85Vj2ftmkCHwFfB78M/wmP
P069qLZtBR8P3wK/BTfj1ZNp29LwjvCp8N3wB/DgE9TTaJtK8O7wOfCD8Ofw
sBPVM2vbGvB+8EXwE/C38CiT1HNqm/rwwfCV8HPwL/BYk9ULaNum8FHw9fCr
8F/whFPUi2mbNvAJ8G3w2/DAU9WTa5uy8E7w6fA98EfwENPU02nbyvCe8Lnw
w/AX8PDT1bNom1rw/vAl8JPw9/CoM9Rza9sG8KHwVfAL8K/wODPVC2qb5vDR
8I3wa/A/8ESz1Eto27bwSfDt8LvwILPVU2rbcvAu8BnwffDH8FBz1NNrm6rw
XvD58CPwV/AIc9Wzadva8AHwpfDT8A/w6PPU82ibRvBh8DXwi/Dv8Ljz1Qtr
2xbwsfBN8Bvwv/AkC9RLapv28MnwnfB78GAL1VNpmwrwrvBZ8P3wp/DQi9Qz
attqTk+69elX5YKu93G6a5+UjbtVd32B0zXi1j85va3rx5zOvXdyxl2DXH/t
tMN3ZrgeaXHA/Otdz+60+/2Sna7Xddr7vozrA/3jz7u+3D/+putn/OOfuP7J
P/696zGWBPRv1/P5O0RXxxv7O4rTZoS/E7i+1mn3+0gpXb/stPt9pMyu/3Da
+z6X6/GXpvn/95GKuV5kacB8FVxvtTRgvpquj1saMF9j17csDZivjes3/fN1
c90sC5jPup5U25SGd4BPhe+CP4D/t1w9jbatCO8Onw0/CH8GD7tCPZO2qQHv
C18EPw5/C4+8Uj2ntq0HHwxfAT8H/wyPtUo9v7ZpCh8JX+/0htuXQpza4/oV
p6f2jtVwxz7Xfzndx5fLDrieYLWvfRVx6iHXizldvMbbloOPuN7a6TTfshzs
dMz1CU5HciY84fpWpx0uf8r1207f8T183jOuB1rja58mTnPO9eROL4/om+CC
62WcHrPet+BLrndyurNv+LfLrk9z2lnOk6uu73E6n3OH664/dDqxs8CbrodY
6+uQp/L6Rrie1mnn7nPvul7Z6cu+5Y2573oPp52n3/uh63OdnlfM94iPXT/k
tO/exWo8df2F062cHzx3Pdw6XzvLzfLS9SxOZ3We8GvXazrtvNwR37ref51/
/3F9sbY5CX8Hj7pePZe2aQAfAl8FPw//Co+9Qb2gtm0GHw3fAL8G/w1PtFG9
uLZpC58I3w6/Aw+yST2FtikH7wyfAd8LfwwPuVk9vbatAu8Fnwc/An8Jj7BF
Pau2qQ238KXwU/AP8Ghb1fNo24bwYfDV8Ivwb/C429QLaZsW8DHwTfDr8L/w
xNvVS2rbdvDJ8B3we/CgO9RTadvy8K7wmfD98Cfw0DvVM2ibavDe8AXwo/DX
8Ii71LNr2zrwgfBl8DPwj/AYu9XzapvG8OHwtfBL8B/weHvUi2jblvBx8M3w
m/B/8KR71Utpmw7wKfBd8Pvw//app9Y2FeHd4LPhB+DP4GH2q2fSttXhfeEL
4cfhb+CRD6jn0Db14IPgK+Bn4Z/hMQ+q59e2TeAj4evgV+A/4QkOqRfVNq3h
4+Fb4bfggQ6rJ9M2ZeAd4dPgu+EP4cGPqKfVtpXgPeBz4Ifgz+Hhjqpn1jY1
4f3gi+En4O/gUY6p59K29eFD4Cvh5+Ff4LGPqxfQNs3go+Ab4Ffhv+EJT6gX
17Zt4BPh2+B34IFPqqfQtmXhneHT4Xvhj+AhT6mn0zZV4D3h8+CH4S/h4U+r
Z9W2teAWvgR+Cv4eHu2Mem5t0xA+FL4afgH+DR7nrHohbdscPga+EX4d/gee
+Jx6CW3TDj4JvgN+Fx70vHpKbVMe3gU+E74P/gQe6oJ6Bm1bFd4bPh9+FP4K
HvGiejZtUwc+AL4Mfhr+ER79knpebdsIPhy+Bn4J/h0e77J6YW3TEj4Wvhl+
A/4PnuSKeilt2x4+Bb4Tfh8e7Kp6am1bAd4NPgt+AP4UHuaaekZtUx3eB74Q
fgz+Bh7punoObVsXPgi+HH4W/gke84Z6Pm3TBD4Cvg5+Gf4THv+melFt2wo+
Hr4Ffgtubqkn07al4R3hU+G74Q/gwW+rp9E2leDd4XPgB+HP4WHvqGfWtjXg
/eCL4Cfgb+FR7qrn1Db14YPhK+Hn4F/gse6pF9C2TeGj4OvhV+G/4AnvqxfT
Nm3gE+Db4LfhgR+oJ9c2ZeGd4NPhe+CP4CEeqqfTtpXhPeFz4YfhL+DhH6ln
0Ta14P3hS+An4e/hUR+r59a2DeBD4avgF+Bf4XGeqBfUNs3ho+Eb4dfgf+CJ
nqqX0LZt4ZPg2+F34UGeqafUtuXgXeAz4Pvgj+Ghnqun1zZV4b3g8+FH4K/g
EV6oZ9O2teED4Evhp+Ef4NFfqufRNo3gw+Br4Bfh3+FxX6kX1rYt4GPhm+A3
4H/hSV6rl9Q27eGT4Tvh9+DB3qin0jYV4F3hs+D74U/hod+qZ9S21eB94Avg
x+Cv4ZHeqWfXNnXhA+HL4Wfgn+Ax3qvn07aN4SPga+GX4T/g8T+oF9E2reDj
4FvgN+Hmo3pSbVMa3gE+Fb4L/gD+3yf1NNq2Irw7fDb8IPwZPOxn9Uzapga8
L3wR/Dj8LTzyF/Wc2rYefDB8Bfwc/DM81lf1/NqmKXwkfD38CvwXPME39WLa
tjV8Anwr/DY80Hf15Nq2DLwTfBp8D/whPMQP9bTapjK8B3wu/BD8BTzcT/Us
2rYmvD98Mfwk/B086i/1XNqmAXwIfBX8PPwrPPZv9YLathl8NHwD/Br8NzzR
H/Xi2qYtfCJ8O/wOPMhf9RTaphy8M3wGfC/8MTzkP/X02rYKvBd8HvwI/CU8
gkkrnlXb1IZb+FL4KfgHeLRA6nm0bUP4MPhq+EX4N3jcwOqFtE0L+Bj4Jvh1
+F944iDqJbVtO/hk+A74PXjQoOqptG15eFf4TPh++BN46GDqGbRNNXhv+AL4
UfhreMT/1LNr2zrwgfBl8DPwj/AYwdXzapvG8OHwtfBL8B/weCHUi2jblvBx
8M3wm/B/8KQh1Utpmw7wKfBd8Pvw/0Kpp9Y2FeHd4LPhB+DP4GFCq2fSttXh
feEL4cfhb+CRw6jn0Db14IPgK+Bn4Z/hMcOq59e2TeAj4evgV+A/4QnCqRfV
Nq3h4+Fb4bfggcKrJ9M2ZeAd4dPgu+EP4cEjqKfVtpXgPeBz4Ifgz+HhIqpn
1jY14f3gi+En4O/gUSKp59K29eFD4Cvh5+Ff4LEjqxfQNs3go+Ab4Ffhv+EJ
o6gX17Zt4BPh2+B34IGjqqfQtmXhneHT4Xvhj+Aho6mn0zZV4D3h8+CH4S/h
4aOrZ9W2teAWvgR+Cv4eHi2Gem5t0xA+FL4afgH+DR4npnohbdscPga+EX4d
/geeOJZ6CW3TDj4JvgN+Fx40tnpKbVMe3gU+E74P/gQeKo56Bm1bFd4bPh9+
FP4KHjGuejZtUwc+AL4Mfhr+ER49nnpebdsIPhy+Bn4J/h0eL756YW3TEj4W
vhl+A/4PniSBeilt2x4+Bb4Tfh8eLKF6am1bAd4NPgt+AP4UHiaRekZtUx3e
B74Qfgz+Bh4psXoObVsXPgi+HH4W/gkeM4l6Pm3TBD4Cvg5+Gf4THj+pelFt
2wo+Hr4Ffgtukqkn07al4R3hU+G74Q/gwZOrp9E2leDd4XPgB+HP4WFTqGfW
tjXg/eCL4Cfgb+FRUqrn1Db14YPhK+Hn4F/gsVKpF9C2TeGj4OvhV+G/4AlT
qxfTNm3gE+Db4LfhgdOoJ9c2ZeGd4NPhe+CP4CHSqqfTtpXhPeFz4YfhL+Dh
06ln0Ta14P3hS+An4e/hUdOr59a2DeBD4avgF+Bf4XEyqBfUNs3ho+Eb4dfg
f+CJMqqX0LZt4ZPg2+F34UEyqafUtuXgXeAz4Pvgj+GhMqun1zZV4b3g8+FH
4K/gEbKoZ9O2teED4Evhp+Ef4NGzqufRNo3gw+Br4Bfh3+Fxs6kX1rYt4GPh
m+A34H/hSbKrl9Q27eGT4Tvh9+DBcqin0jYV4F3hs+D74U/hoXOqZ9S21eB9
4Avgx+Cv4ZFyqWfXNnXhA+HL4Wfgn+Axcqvn07aN4SPga+GX4T/g8fOoF9E2
reDj4FvgN+Emr3pSbVMa3gE+Fb4L/gD+Xz71NNq2Irw7fDb8IPwZPGx+9Uza
pga8L3wR/Dj8LTxyAfWc2rYefDB8Bfwc/DM8VkH1/NqmKXwkfD38CvwXPEEh
9WLatjV8Anwr/DY8UGH15Nq2DLwTfBp8D/whPEQR9bTapjK8B3wu/BD8BTxc
UfUs2rYmvD98Mfwk/B08ajH1XNqmAXwIfBX8PPwrPHZx9YLathl8NHwD/Br8
NzxRCfXi2qYtfCJ8O/wOPEhJ9RTaphy8M3wGfC/8MTxkKfX02rYKvBd8HvwI
/CU8Qmn1rNqmNtzCl8JPwT/Ao5VRz6NtG8KHwVfDL8K/weOWVS+kbVrAx8A3
wa/D/8ITl1MvqW3bwSfDd8DvwYOWV0+lbcvDu8JnwvfDn8BDV1DPoG2qwXvD
F8CPwl/DI1ZUz65t68AHwpfBz8A/wmNUUs+rbRrDh8PXwi/Bf8DjVVYvom1b
wsfBN8Nvwv/Bk1ZRL6VtOji9oWOr7jdCdXN8itP3SsSfeM9ts8vpMAkur37i
+X2nc30bfuyV5/9V9XXzs3kffvA8tdOTl3z8/c3zik4f7LMs+l/Puzn9rnKd
TEFDuz7b6bipI5YN5bY94HSpwEebR/D8mdPdb/QaGM3zMNV8vWR9+jlxPM/k
9MVhj7cl8ry606b+jIspPO/rdNps5d6k83yh07XCBgmR1fPjTg/33T2352+c
3rKrTd6Cnkeu7utHExPWKO55DqcjtLraqazn9ZzOW3DUmMqeD3K6dYwCy2t6
vsLp6e8+H6zv+Vmnjx5dcaep55+d/jSn3vfWnses4esEXSNH7uR5fqfLlTme
tofnTZzunbhviX6ej3R6xc+MjQd7vs7pqxee9h3p+RWng6yYNX285z+dzmgr
bJrqeYKavq5XPdjZ2Z4XdXp0up3PF3re2ukdwdoHWeH5eKef3k4cb53nW52O
svl6ji2e33LaeTl2eR6olq/bNyrU7oDnyZyendN3AnlexukTEVYvOuN5R6e/
PWuw95Ln05xOsi/qjRue73a60tSTn+55/tDp/m37h3vqefDavl5dJEvK156n
dfpm7BeFP3peyengzgvueQ+ns56s1POv53OcbrQg+OSgYVw/5PS4HrvXhnLb
Pnd6T/mOJyJ4Hq6Or18mS/Y4mueZnY7x9+bfOJ7XdLrolXExE3vez+lOzgI9
X+z0/EE/yqX3/ITTZ2qtbZnV83dO//Id3tyeR6nr6xQhY8wr6Hkup6veP72j
uOf1nR60bcDlsp4PcXr92GzvKnu+0um7TV+FrOX5eadD552fpIHnX5zOEaVq
/maex67n62a+4W08L+D0pIN7u3TyvJnTB2Z0HtfD81FOv+2QYmU/zzc4HbvE
ncODPb/qdEnf9jLS899Od/ta7Od4zxPW9/XiM7+iTPO8uNMXFvve8J63cfpv
76alFnk+0ek0lWM1XeH5NqdrpjrXf53nd5weFmjwzC2eB27ga+d03eV5Cqcf
rHtz7oDnZZ0OP2zhy2Oed3Y6j/MG8Xy6062y+nZEz/c6PS3MgVw3PX/k9OFH
Xave9zxkQ19/3Jmqw1PP0zntPP3XnldxumxL347peU+nexUouf+75/Oc9u2e
N/96ftjpK283fgka1vWXTrvbpds2fCNfZ5gTJ3VEz7M6XbfLhaLRPa/l9MjS
QxvE9dw6vT1R7t6JPV/i9JMf76ak9PyU05GdA+D5e6d9u9uprJ5Ha+xr5+2X
2/PcTs+qdsgU8ryh077dK3YJz4c6/TWob0f2fLXTiW8/qFDF8wtO+3an1rU8
/+Z0P2fBnsdp4utVDc2CZp4XcvqG73C28by50/85G7TnY5zO8izehx6eb3S6
oW936e/5dafHThmebIjnf5ze7dv+R3meuKmvfbtH7Qmel3A6euxl3aZ53s7p
Ij6e4/kkpzs6G5rnO5yeN//I0RWe33X6dPdeD9Z5HrSZr3+WS/97i+cpnU7u
2052e17e6Sp/pmc86HkXpwdeLlvmuOcznV63KnDzs57vc/rOQN8G4PkTp0PV
ajP7puehmvs6e8aE2+57nsHppiF8VwzPqzrtnJ6vPe/t9P6t+YN/8ny+02/G
fE74w/OjTvvefXn+ef7K6RLOGyac6xFb+Nq9nLltszm96OWx0RE9r+P0+QO+
DwieD3DaebpxPV/mdOoOviuO56edrlF81reUnn90emi8CpEyeB69pa83ffGd
YJ7nddrZHvN43sjpcIvbNSrk+XCnczsXVM/XON2y0vVp5Ty/5PTUlGM2VvH8
u9O+s/tMLc/jtfL1h2tfnzXwvLDT8ZwD4nlLp8v43m5tPR/rdM+6UXN09nyz
00uz+C5Ant9w+nJo54rm+j+nAz3KPHyI50la+zq97/I8yvNSTteZMGfPBM/b
Oz2ihe8JeD7F6W2+wzfH851OO2fXYs/vOx3J2bA9D9bG1/mPJC283vPUTvvO
nrpbPa/g9Ezfdr/b825OHytVZNJBz2c5/SXhjzXHPT/gdCJfnvX8qdPlzzd6
dNnzMG193dfZ4DzP6PTKfqdjPPC8utPXqw7I/MzzPk4Hcz7Qeb7Q6UxBX7X4
5Pkxpxvcmjfoh+dvnPYdvbn/PI/Uzte7RoTcESy86zmcfu583HDb1nXad3Te
RvR8kNOFw/uuuJ4vd9o5HeN5ftbpuXsm5Evi+SenT00uVjOV5zHb+/p761+d
M3iez+lkhX1XZM+bOO1cvvJ4PsLpAR9iHi7k+Tqn1x4/e7eE55eddp5eOc9/
Oh2yu++K7Xn8Dr52Pu7W9ryo002SLizZ0PNWTk/4Xa1Jc8/HO+1sh2093+L0
65X7Z3T2/JbTMQd23dzTc9PR18WdC6znyZzukuHeiyGel3ba+fg02vOOTp+7
6/uFwvOpTv/e8ifndM93O53KOUCeP3C6epPm7Rd7HryTrwfnjjNypedpnN4Y
yXdB8ryS075H37fV8+5Oh/Vdjnd7PsfpXM4HcM8POu3MfsLz505P8R2uc56H
7exr3+ZT9IrnmZ1+7/v4fsvzGk7HdTZwz/s5XWpRminPPF/kdA/f9v7G8xNO
L6no+8Dq+VunL6Uo/eSH51G6pP3/72MRXM/p9PBPRULNjOZ6fafvx17Yv1dc
1wc7naPIv8+1kri+0unxbeq0yp3a9XNOP5+8417sTK5/cbrAnmhVf+dwPVZX
X09/0vnk7fyuF3D6fdgL+fcUc72p0yWypdsyp6zro5yeX29Uqn5VXF/v9Peh
z+fVq+36VacrrCsaNX8j1385vfzawpHxW7qesFvA8+vgejF/W9fb+Hu86xP8
Pd/1bf5e7/ptf+93PXD3gD7venJ/33e9rL/fu97J36a749P9HcFpu8dp9+8/
x3T9kdPu34dO5HqIHgHj07ierkfA+KyuV+4RMD6f6z3940u4Ptc/vqLrh/3j
a7n+wj++ievhewaMb+t6lp4B47u5Xqun//V0vb/fB7q+xH//Ia6f9I8f7vp7
//iRrkftFTB+jOu5e/mPj+sNegWMn+j6UP/4Ka6v8o+f7voF//iZrn/1j5/j
epze/uPtekF/b3W9ub9Puz7a3w9d3+jv765f83e4Ho7/8XcSp22iPgGdy/US
/q7gelt/V3F9kr9ruL7d33Vcv+vvBq4H6SttUmrbcvAu8BnwffDH8FD91NNr
m6rwXvD5/QKOTyvXjzidc+yjHGNbu/7K6WMd4xzr2Mb1CP3956Pr2Zx+nMN3
h3au13a6k294nPauD+jvf/+7vlTbnIZ/gEe36nm0TSP4MPga+EX4d3jcAeqF
tW0L+Fj4JvgN+F94koHqJbVNe/hk+E74PXiwQeqptE0FeFf4LPh++FN46MHq
GbVtNXgf+AL4MfhreKQh6tm1TV34QPhy+Bn4J3iMoer5tG1j+Aj4Wvhl+A94
/GHqRbRNK/g4+Bb4TbgZrp5U25SGd4BPhe+CP4D/N0I9jbatCO8Onw0/CH8G
DztSPZO2qQHvC18EPw5/C488Sj2ntq0HHwxfAT8H/wyPNVo9v7ZpCh8JXw+/
Av8FTzBGvZi2bQ2fAN8Kvw0PNFY9ubYtA+8EnwbfA38IDzFOPa22qQzvAZ8L
PwR/AQ83Xj2Ltq0J7w9fDD8JfwePOkE9l7ZpAB8CXwU/D/8Kjz1RvaC2bQYf
Dd8Avwb/DU80Sb24tmkLnwjfDr8DDzJZPYW2KQfvDJ8B3wt/DA85RT29tq0C
7wWfBz8CfwmPMFU9q7apDbfwpfBT8A/waNPU82jbhvBh8NXwi/Bv8LjT1Qtp
mxbwMfBN8Ovwv/DEM9RLatt28MnwHfB78KAz1VNp2/LwrvCZ8P3wJ/DQs9Qz
aJtq8N7wBfCj8NfwiLPVs2vbOvCB8GXwM/CP8Bhz1PNqm8bw4fC18EvwH/B4
c9WLaNuW8HHwzfCb8H/wpPPUS2mbDvAp8F3w+/D/5qun1jYV4d3gs+EH4M/g
YRaoZ9K21eF94Qvhx+Fv4JEXqufQNvXgg+Ar4Gfhn+ExF6nn17ZN4CPh6+BX
4D/hCRarF9U2reHj4Vvht+CBlqgn0zZl4B3h0+C74Q/hwZeqp9W2leA94HPg
h+DP4eGWqWfWNjXh/eCL4Sfg7+BRlqvn0rb14UPgK+Hn4V/gsVeoF9A2zeCj
4BvgV+G/4QlXqhfXtm3gE+Hb4HfggVepp9C2ZeGd4dPhe+GP4CFXq6fTNlXg
PeHz4IfhL+Hh16hn1ba14Ba+BH4K/h4eba16bm3TED4Uvhp+Af4NHmedeiFt
2xw+Br4Rfh3+B554vXoJbdMOPgm+A34XHnSDekptUx7eBT4Tvg/+BB5qo3oG
bVsV3hs+H34U/goecZN6Nm1TBz4Avgx+Gv4RHn2zel5t2wg+HL4Gfgn+HR5v
i3phbdMSPha+GX4D/g+eZKt6KW3bHj4FvhN+Hx5sm3pqbVsB3g0+C34A/hQe
Zrt6Rm1THd4HvhB+DP4GHmmHeg5tWxc+CL4cfhb+CR5zp3o+bdMEPgK+Dn4Z
/hMef5d6UW3bCj4evgV+C252qyfTtqXhHeFT4bvhD+DB96in0TaV4N3hc+AH
4c/hYfeqZ9a2NeD94IvgJ+Bv4VH2qefUNvXhg+Er4efgX+Cx9qsX0LZN4aPg
6+FX4b/gCQ+oF9M2beAT4Nvgt+GBD6on1zZl4Z3g0+F74I/gIQ6pp9O2leE9
4XPhh+Ev4OEPq2fRNrXg/eFL4Cfh7+FRj6jn1rYN4EPhq+AX4F/hcY6qF9Q2
zeGj4Rvh1+B/4ImOqZfQtm3hk+Db4XfhQY6rp9S25eBd4DPg++CP4aFOqKfX
NlXhveDz4Ufgr+ARTqpn07a14QPgS+Gn4R/g0U+p59E2jeDD4GvgF+Hf4XFP
qxfWti3gY+Gb4Dfgf+FJzqiX1Dbt4ZPhO+H34MHOqqfSNhXgXeGz4PvhT+Gh
z6ln1LbV4H3gC+DH4K/hkc6rZ9c2deED4cvhZ+Cf4DEuqOfTto3hI+Br4Zfh
P+DxL6oX0Tat4OPgW+A34eaSelJtUxreAT4Vvgv+AP7fZfU02rYivDt8Nvwg
/Bk87BX1TNqmBrwvfBH8OPwtPPJV9Zzath58MHwF/Bz8MzzWNfX82qYpfCR8
PfwK/Bc8wXX1Ytq2NXwCfCv8NjzQDfXk2rYMvBN8GnwP/CE8xE31tNqmMrwH
fC78EPwFPNwt9Szatia8P3wx/CT8HTzqbfVc2qYBfAh8Ffw8/Cs89h31gtq2
GXw0fAP8Gvw3PNFd9eLapi18Inw7/A48yD31FNqmHLwzfAZ8L/wxPOR99fTa
tgq8F3we/Aj8JTzCA/Ws2qY23MKXwk/BP8CjPVTPo20bwofBV8Mvwr/B4z5S
L6RtWsDHwDfBr8P/whM/Vi+pbdvBJ8N3wO/Bgz5RT6Vty8O7wmfC98OfwEM/
Vc+gbarBe8MXwI/CX8MjPlPPrm3rwAfCl8HPwD/CYzxXz6ttGsOHw9fCL8F/
wOO9UC+ibVvCx8E3w2/C/8GTvlQvpW06wKfAd8Hvw/97pZ5a21SEd4PPhh+A
P4OHea2eSdtWh/eFL4Qfh7+BR36jnkPb1IMPgq+An4V/hsd8q55f2zaBj4Sv
g1+B/4QneKdeVNu0ho+Hb4Xfggd6r55M25SBd4RPg++GP4QH/6CeVttWgveA
z4Efgj+Hh/uonlnb1IT3gy+Gn4C/g0f5pJ5L29aHD4GvhJ+Hf4HH/qxeQNs0
g4+Cb4Bfhf+GJ/yiXlzbtoFPhG+D34EH/qqeQtuWhXeGT4fvhT+Ch/ymnk7b
VIH3hM+DH4a/hIf/rp5V29aCW/gS+Cn4e3i0H+q5tU1D+FD4avgF+Dd4nJ/q
hbRtc/gY+Eb4dfgfeOJf6iW0TTv4JPgO+F140N/qKbVNeXgX+Ez4PvgTeKg/
6hm0bVV4b/h8+FH4K3jEv+rZtE0d+AD4Mvhp+Ed49H/qebVtI/hw+Br4Jfh3
eDyTTrywtmkJHwvfDL8B/wdPEki9lLZtD58C3wm/Dw8WWD21tq0A7wafBT8A
fwoPE0Q9o7apDu8DXwg/Bn8DjxRUPYe2rQsfBF8OPwv/BI8ZTD2ftmkCHwFf
B78M/wmP/596UW3bCj4evgV+C26CqyfTtqXhHeFT4bvhD+DBQ6in0TaV4N3h
c+AH4c/hYUOqZ9a2NeD94IvgJ+Bv4VFCqefUNvXhg+Er4efgX+CxQqsX0LZN
4aPg6+FX4b/gCcOoF9M2beAT4Nvgt+GBw6on1zZl4Z3g0+F74I/gIcKpp9O2
leE94XPhh+Ev4OHDq2fRNrXg/eFL4Cfh7+FRI6jn1rYN4EPhq+AX4F/hcSKq
F9Q2zeGj4Rvh1+B/4IkiqZfQtm3hk+Db4XfhQSKrp9S25eBd4DPg++CP4aGi
qKfXNlXhveDz4Ufgr+ARoqpn07a14QPgS+Gn4R/g0aOp59E2jeDD4GvgF+Hf
4XGjqxfWti3gY+Gb4Dfgf+FJYqiX1Dbt4ZPhO+H34MFiqqfSNhXgXeGz4Pvh
T+GhY6ln1LbV4H3gC+DH4K/hkWKrZ9c2deED4cvhZ+Cf4DHiqOfTto3hI+Br
4ZfhP+Dx46oX0Tat4OPgW+A34SaeelJtUxreAT4Vvgv+AP5ffPU02rYivDt8
Nvwg/Bk8bAL1TNqmBrwvfBH8OPwtPHJC9Zzath58MHwF/Bz8MzxWIvX82qYp
fCR8PfwK/Bc8QWL1Ytq2NXwCfCv8NjxQEvXk2rYMvBN8GnwP/CE8RFL1tNqm
MrwHfC78EPwFPFwy9Szatia8P3wx/CT8HTxqcvVc2qYBfAh8Ffw8/Cs8dgr1
gtq2GXw0fAP8Gvw3PFFK9eLapi18Inw7/A48SCr1FNqmHLwzfAZ8L/wxPGRq
9fTatgq8F3we/Aj8JTxCGvWs2qY23MKXwk/BP8CjpVXPo20bwofBV8Mvwr/B
46ZTL6RtWsDHwDfBr8P/whOnVy+pbdvBJ8N3wO/Bg2ZQT6Vty8O7wmfC98Of
wENnVM+gbarBe8MXwI/CX8MjZlLPrm3rwAfCl8HPwD/CY2RWz6ttGsOHw9fC
L8F/wONlUS+ibVvCx8E3w2/C/8GTZlUvpW06wKfAd8Hvw//Lpp5a21SEd4PP
hh+AP4OHya6eSdtWh/eFL4Qfh7+BR86hnkPb1IMPgq+An4V/hsfMqZ5f2zaB
j4Svg1+B/4QnyKVeVNu0ho+Hb4XfggfKrZ5M25SBd4RPg++GP4QHz6OeVttW
gveAz4Efgj+Hh8urnlnb1IT3gy+Gn4C/g0fJp55L29aHD4GvhJ+Hf4HHzq9e
QNs0g4+Cb4Bfhf+GJyygXlzbtoFPhG+D34EHLqieQtuWhXeGT4fvhT+Chyyk
nk7bVIH3hM+DH4a/hIcvrJ5V29aCW/gS+Cn4e3i0Iuq5tU1D+FD4avgF+Dd4
nKLqhbRtc/gY+Eb4dfgfeOJi6iW0TTv4JPgO+F140OLqKbVNeXgX+Ez4PvgT
eKgS6hm0bVV4b/h8+FH4K3jEkurZtE0d+AD4Mvhp+Ed49FLqebVtI/hw+Br4
Jfh3eLzS6oW1TUv4WPhm+A34P3iSMuqltG17+BT4Tvh9eLCy6qm1bQV4N/gs
+AH4U3iYcuoZtU11eB/4Qvgx+Bt4pPLqObRtXfgg+HL4WfgneMwK6vm0TRP4
CPg6+GX4T3j8iupFtW0r+Hj4FvgtuKmknkzbloZ3hE+F74Y/gAevrJ5G21SC
d4fPgR+EP4eHraKeWdvWgPeDL4KfgL+FR6mqnlPb1IcPhq+En4N/gceqpl5A
2zaFj4Kvh1+F/4InrK5eTNu0gU+Ab4PfhgeuoZ5c25SFd4JPh++BP4KHqKme
TttWhveEz4Ufhr+Ah6+lnkXb1IL3hy+Bn4S/h0etrZ5b2zaAD4Wvgl+Af4XH
qaNeUNs0h4+Gb4Rfg/+BJ6qrXkLbtoVPgm+H34UHqaeeUtuWg3eBz4Dvgz+G
h6qvnl7bVIX3gs+HH4G/gkdooJ5N29aGD4AvhZ+Gf4BHb6ieR9s0gg+Dr4Ff
hH+Hx22kXljbtoCPhW+C34D/hSdprF5S27SHT4bvhN+DB2uinkrbVIB3hc+C
74c/hYduqp5R21aD94EvgB+Dv4ZHaqaeXdvUhQ+EL4efgX+Cx2iunk/bNoaP
gK+FX4b/gMdvoV5E27SCj4Nvgd+Em5bqSbVNaXgH+FT4LvgD+H+t1NNo24rw
7vDZ8IPwZ/CwrdUzaZsa8L7wRfDj8LfwyG3Uc2rbevDB8BXwc/DP8Fht1fNr
m6bwkfD18CvwX/AE7dSLadvW8AnwrfDb8EDt1ZNr2zLwTvBp8D3wh/AQHdTT
apvK8B7wufBD8BfwcB3Vs2jbmvD+8MXwk/B38Kid1HNpmwbwIfBV8PPwr/DY
ndULattm8NHwDfBr8N/wRF3Ui2ubtvCJ8O3wO/AgXdVTaJty8M7wGfC98Mfw
kN3U02vbKvBe8HnwI/CX8Ajd1bNqm9pwC18KPwX/AI/WQz2Ptm0IHwZfDb8I
/waP21O9kLZpAR8D3wS/Dv8LT9xLvaS2bQefDN8BvwcP2ls9lbYtD+8Knwnf
D38CD91HPYO2qQbvDV8APwp/DY/YVz27tq0DHwhfBj8D/wiP0U89r7ZpDB8O
Xwu/BP8Bj9dfvYi2bQkfB98Mvwn/B09q1Utpmw7wKfBd8Pvw/waop9Y2FeHd
4LPhB+DP4GEGqmfSttXhfeEL4cfhb+CRB6nn0Db14IPgK+Bn4Z/hMQer59e2
TeAj4evgV+A/4QmGqBfVNq3h4+Fb4bfggYaqJ9M2ZeAd4dPgu+EP4cGHqafV
tpXgPeBz4Ifgz+Hhhqtn1jY14f3gi+En4O/gUUao59K29eFD4Cvh5+Ff4LFH
qhfQNs3go+Ab4Ffhv+EJR6kX17Zt4BPh2+B34IFHq6fQtmXhneHT4Xvhj+Ah
x6in0zZV4D3h8+CH4S/h4ceqZ9W2teAWvgR+Cv4eHm2cem5t0xA+FL4afgH+
DR5nvHohbdscPga+EX4d/geeeIJ6CW3TDj4JvgN+Fx50onpKbVMe3gU+E74P
/gQeapJ6Bm1bFd4bPh9+FP4KHnGyejZtUwc+AL4Mfhr+ER59inpebdsIPhy+
Bn4J/h0eb6p6YW3TEj4Wvhl+A/4PnmSaeilt2x4+Bb4Tfh8ebLp6am1bAd4N
Pgt+AP4UHmaGekZtUx3eB74Qfgz+Bh5ppnoObVsXPgi+HH4W/gkec5Z6Pm3T
BD7C6XhXVucfNM71dX5f7/plf293/ae/97sef3ZAH3e9qL/Pu97K39ddH+/v
+65v8fdz12/5+73rZk5Af3c9mb9NT8dL+zuE06ajvyO4PtXpFwtHpdsZw/Xd
Tl8oGr1ul4SuP3B653PfgFSuB5/r60W+4c8zuZ7G6dG+XJjb9UpOd3EmKOJ6
d6frOj8o6/ocp4v5pr9Q1fWDTqd3HqCe68+ddrhoc9fDzvMfD9czzwtYbw/X
a8wLWO8A1/vNC1jvSNcXzQtY70TXT8wLWO8s19/OC1jvYtejzA9Y7xrXc84P
WO8W1+vPD1jvXtcHzw9Y7zHXV873H1/XzwW0veD6F79fcj3WggC/7HqBgDZX
XW/q92uuj/L7DdfX+/2m61f9ftv1X36/43rChQF+z/ViAW3vu97G7w9dn+D3
R65v8/sT12/7/anrgRf5z1fXkwe0feF6Wb+/cr2T31+7Pt3vb13f4/d3rj/y
+wfXQywO8I+upwto89n1yn7/4npPv39zfa7fv7t+2O8/XX/h91+uh18S4H9c
zxLQ9q/rtfxuejneX9ssgZ+Ev4dHXaqeW9s2gA+Fr4JfgH+Fx1mmXlDbNIeP
hm+EX4P/gSdarl5C27aFT4Jvh9+FB1mhnlLbloN3gc+A74M/hodaqZ5e21SF
94LPhx+Bv4JHWKWeTdvWhg+AL4Wfhn+AR1+tnkfbNIIPg6+BX4R/h8ddo15Y
27aAj4Vvgt+A/4UnWateUtu0h0+G74Tfgwdbp55K21SAd4XPgu+HP4WHXq+e
UdtWg/eBL4Afg7+GR9qgnl3b1IUPhC+Hn4F/gsfYqJ5P2zaGj4CvhV+G/4DH
36ReRNu0go+Db4HfhJvN6km1TWl4B/hU+C74A/h/W9TTaNuK8O7w2fCD8Gfw
sFvVM2mbGvC+8EXw4/C38Mjb1HNq23rwwfAV8HPwz/BY29Xza5um8JHw9fAr
8F/wBDvUi2nb1vAJ8K3w2/BAO9WTa9sy8E7wafA98IfwELvU02qbyvAe8Lnw
Q/AX8HC71bNo25rw/vDF8JPwd/Coe9RzaZsG8CHwVfDz8K/w2HvVC2rbZvDR
8A3wa/Df8ET71Itrm7bwifDt8DvwIPvVU2ibcvDO8BnwvfDH8JAH1NNr2yrw
XvB58CPwl/AIB9WzapvacAtfCj8F/wCPdkg9j7ZtCB8GXw2/CP8Gj3tYvZC2
aQEfA98Evw7/C098RL2ktm0HnwzfAb8HD3pUPZW2LQ/vCp8J3w9/Ag99TD2D
tqkG7w1fAD8Kfw2PeFw9u7atAx8IXwY/A/8Ij3FCPa+2aQwfDl8LvwT/AY93
Ur2Itm0JHwffDL8J/wdPekq9lLbpAJ8C3wW/D//vtHpqbVMR3g0+G34A/gwe
5ox6Jm1bHd4XvhB+HP4GHvmseg5tUw8+CL4Cfhb+GR7znHp+bdsEPhK+Dn4F
/hOe4Lx6UW3TGj4evhV+Cx7ognoybVMG3hE+Db4b/hAe/KJ6Wm1bCd4DPgd+
CP4cHu6SemZtUxPeD74YfgL+Dh7lsnoubVsfPgS+En4e/gUe+4p6AW3TDD4K
vgF+Ff4bnvCqenFt2wY+Eb4Nfgce+Jp6Cm1bFt4ZPh2+F/4IHvK6ejptUwXe
Ez4Pfhj+Eh7+hnpWbVsLbuFL4Kfg7+HRbqrn1jYN4UPhq+EX4N/gcW6pF9K2
zeFj4Bvh1+F/4Ilvq5fQNu3gk+A74HfhQe+op9Q25eFd4DPh++BP4KHuqmfQ
tlXhveHz4Ufhr+AR76ln0zZ14APgy+Cn4R/h0e+r59W2jeDD4Wvgl+Df4fEe
qBfWNi3hY+Gb4Tfg/+BJHqqX0rbt4VPgO+H34cEeqafWthXg3eCz4AfgT+Fh
Hqtn1DbV4X3gC+HH4G/gkZ6o59C2deGD4MvhZ+Gf4DGfqufTNk3gI+Dr4Jfh
P+Hxn6kX1bat4OPhW+C34Oa5ejJtWxreET4Vvhv+AB78hXoabVMJ3h0+B34Q
/hwe9qV6Zm1bA94Pvgh+Av4WHuWVek5tUx8+GL4Sfg7+BR7rtXoBbdsUPgq+
Hn4V/gue8I16MW3TBj4Bvg1+Gx74rXpybVMW3gk+Hb4H/gge4p16Om1bGd4T
Phd+GP4CHv69ehZtUwveH74EfhL+Hh71g3pubdsAPhS+Cn4B/hUe56N6QW3T
HD4avhF+Df4HnuiTeglt2xY+Cb4dfhce5LN6Sm1bDt4FPgO+D/4YHuqLenpt
UxXeCz4ffgT+Ch7hq3o2bVsbPgC+FH4a/gEe/Zt6Hm3TCD4MvgZ+Ef4dHve7
emFt2wI+Fr4JfgP+F57kh3pJbdMePhm+E34PHuyneiptUwHeFT4Lvh/+FB76
l3pGbVsN3ge+AH4M/hoe6bd6dm1TFz4Qvhx+Bv4JHuOPej5t2xg+Ar4Wfhn+
Ax7/r3oRbdMKPg6+BX4Tbv6pJ9U2peEd4FPhu+AP4P+Z9OJptG1FeHf4bPhB
+DN42EDqmbRNDXhf+CL4cfhbeOTA6jm1bT34YPgK+Dn4Z3isIOr5tU1T+Ej4
evgV+C94gqDqxbRta/gE+Fb4bXigYOrJtW0ZeCf4NPge+EN4iP/U02qbyvAe
8LnwQ/AX8HDB1bNo25rw/vDF8JPwd/CoIdRzaZsG8CHwVfDz8K/w2CHVC2rb
ZvDR8A3wa/Df8ESh1Itrm7bwifDt8DvwIKHVU2ibcvDO8BnwvfDH8JBh1NNr
2yrwXvB58CPwl/AIYdWzapvacAtfCj8F/wCPFk49j7ZtCB8GXw2/CP8Gjxte
vZC2aQEfA98Evw7/C08cQb2ktm0HnwzfAb8HDxpRPZW2LQ/vCp8J3w9/Ag8d
ST2DtqkG7w1fAD8Kfw2PGFk9u7atAx8IXwY/A/8IjxFFPa+2aQwfDl8LvwT/
AY8XVb2Itm0JHwffDL8J/wdPGk29lLbpAJ8C3wW/D/8vunpqbVMR3g0+G34A
/gweJoZ6Jm1bHd4XvhB+HP4GHjmmeg5tUw8+CL4Cfhb+GR4zlnp+bdsEPhK+
Dn4F/hOeILZ6UW3TGj4evhV+Cx4ojnoybVMG3hE+Db4b/hAePK56Wm1bCd4D
Pgd+CP4cHi6eemZtUxPeD74YfgL+Dh4lvnoubVsfPgS+En4e/gUeO4F6AW3T
DD4KvgF+Ff4bnjChenFt2wY+Eb4NfgceOJF6Cm1bFt4ZPh2+F/4IHjKxejpt
UwXeEz4Pfhj+Eh4+iXpWbVsLbuFL4Kfg7+HRkqrn1jYN4UPhq+EX4N/gcZKp
F9K2zeFj4Bvh1+F/4ImTq5fQNu3gk+A74HfhQVOop9Q25eFd4DPh++BP4KFS
qmfQtlXhveHz4Ufhr+ARU6ln0zZ14APgy+Cn4R/h0VOr59W2jeDD4Wvgl+Df
4fHSqBfWNi3hY+Gb4Tfg/+BJ0qqX0rbt4VPgO+H34cHSqafWthXg3eCz4Afg
T+Fh0qtn1DbV4X3gC+HH4G/gkTKo59C2deGD4MvhZ+Gf4DEzqufTNk3gI+Dr
4JfhP+HxM6kX1bat4OPhW+C34CazejJtWxreET4Vvhv+AB48i3oabVMJ3h0+
B34Q/hweNqt6Zm1bA94Pvgh+Av4WHiWbek5tUx8+GL4Sfg7+BR4ru3oBbdsU
Pgq+Hn4V/gueMId6MW3TBj4Bvg1+Gx44p3pybVMW3gk+Hb4H/ggeIpd6Om1b
Gd4TPhd+GP4CHj63ehZtUwveH74EfhL+Hh41j3pubdsAPhS+Cn4B/hUeJ696
QW3THD4avhF+Df4Hniifeglt2xY+Cb4dfhceJL96Sm1bDt4FPgO+D/4YHqqA
enptUxXeCz4ffgT+Ch6hoHo2bVsbPgC+FH4a/gEevZB6Hm3TCD4MvgZ+Ef4d
HrewemFt2wI+Fr4JfgP+F56kiHpJbdMePhm+E34PHqyoeiptUwHeFT4Lvh/+
FB66mHpGbVsN3ge+AH4M/hoeqbh6dm1TFz4Qvhx+Bv4JHqOEej5t2xg+Ar4W
fhn+Ax6/pHoRbdMKPg6+BX4TbkqpJ9U2peEd4FPhu+AP4P+VVk+jbSvCu8Nn
ww/Cn8HDllHPpG1qwPvCF8GPw9/CI5dVz6lt68EHw1fAz8E/w2OVU8+vbZrC
R8LXw//HJV1GRdWFYRjeNnZ3K3Z38tndid2t2GLrtruwA7uxMLC7uxVF7BYD
7P6csxas9dzz755rz3nPe87chP+EZ6ijXlnbdofPggfA78Ej1VXPpm1rwvvC
58MPwh/D3eqp59E2DeCD4Evhx+Gv4PHqqxfWtk3hI+Gr4efg7+FJG6iX1DZt
4OPgfvAr8C/w1A3Vy2nbTvCpcH/4bfgveKZG6lW0jRfcB74HHgyP0lg9u7ap
De8HXwg/BH8Kj+mpnk/bNoQPgS+Dn4S/hidool5E2zSHW/ha+Hl4KDxZU/XS
2rYtfAJ8E/wa/Cs8bTP18tqmC3wafAc8EP4Hnrm5ejVt2xM+B74X/gAetYV6
Tm1bBz4Avgh+BP4MHrulen5t0xg+FL4CfgoeAk/YSr2Ytm0BHw1fB78ID4On
aK3uoW3awyfCt8Cvw7/D07VRr6htu8JnwHfC78L/wrO0Va+ubXrD58L3wx/C
o7dTz6Vt6sG94UvgR+Ev4HHaqxfUtp7w4fCV8DPwt/DEHdSLa5tW8DHwDfBL
8E/wlB3Vy2jbDvDJ8K3wm/Af8Ayd1Ctpm+7wmfAAeBA8Umf1rNqmJrwPfD78
APwxPEYX9Tzatj58ENwXfhz+Eh6vq3ohbdMUPgK+Gn4W/h6epJt6SW3bGj4O
vhF+Bf4Znrq7ellt0wk+Be4PvwX/Bc/YQ72Ktu0B94HvhgfDI3upZ9e2teD9
4Avgh+BP4DF7qufVNg3hg+HL4Cfgr+Hxe6kX0bbN4Ba+Bn4e/gGerLd6KW3T
Fj4evgl+Ff4VnqaPenlt2xk+Db4dHgj/Dc/cV72qtukJnw3fC78Pj9pPPYe2
qQPvD18EPwx/Bo/VXz2/tm0EHwpfDj8FfwNPOEC9qLZpAR8FXwe/AA+DJ/dW
99C27eAT4Zvh1+Hf4OkGqlfQNl3h0+E74Xfgf+Hug9Sra9te8LnwffCH8GiD
1XNp27pwb/hi+FH4c3icIeoFtI0nfBh8Jfw0/C080VD14tq2JXwMfD38Evwj
POUw9f+0TQf4JPhW+A34D3j64eqVtG03+Ez4LngQ3IxQz6pta8D7wOfBD8Af
wWOMVM+tberDB8J94cfgL+FxrXohbdsEPgK+Cn4W/g6eZJR6CW3TGj4WvhF+
Gf4Znmq0ellt2xE+Bb4Nfgv+E55xjHplbdMDPgu+G34PHnmsejZtUwveF74A
fhD+BO42Tj2vtm0AHwxfCj8BfwWPP169sLZpBh8JXwM/B/8ATzpBvZS2bQMf
D/eDX4V/gaeZqF5O23SGT4Vvh9+G/4ZnmqReVdt6wWfD98Dvw6NMVs+hbWvD
+8MXwg/Dn8JjTVHPp20awYfAl8NPwt/AE0xVL6ptm8NHwdfCL8BD4cmnqZfW
Nu3gE+Cb4dfg3+Bpp6tX0LZd4NPhO+B34H/g7jPUq2mbXvA58H3wB/BoM9Vz
apu68AHwxfAj8Ofw2LPUC2jbxvBh8BXw0/AQeCIf9WLapiV8NHw9/CL8IzzF
bPX/tG17+CT4FvgN+Hd4+jnqFbVNN/gM+C74XbiZq55F29SA94bPg++HP4JH
n6eeW9vWgw+EL4Efg7+Ax52vXlDbNIEPh6+Cn4G/gydeoF5C27aCj4VvgF+G
f4KnWqheRtt0hE+Gb4PfhP+EZ1ikXlnbdofPggfA78EjLVbPpm1rwvvC58MP
wh/D3Zao59E2DeCD4Evhx+Gv4PF81Qtr26bwkfDV8HPw9/CkS9VLaps28HFw
P/gV+Bd46mXq5bRtJ/hUuD/8NvwXPNNy9SraxgvuA98DD4ZHWaGeXdvUhveD
L4Qfgj+Fx1ypnk/bNoQPgS+Dn4S/hidYFd75HS+ibZrDLXwt/Dw8FJ5stXpp
bdsWPgG+CX4N/hWedo16eW3TBT4NvgMeCP8Dz7xWvZq27QmfA98LfwCPuk49
p7atAx8AXwQ/An8Gj71ePb+2aQwfCl8BPwUPgSfcoF5M27aAj4avg1+Eh8FT
bFT30Dbt4RPhW+DX4d/h6fzUK2rbrvAZ8J3wu/C/8Cyb1Ktrm97wufD98Ifw
6JvVc2mbenBv+BL4UfgLeJwt6gW1rSd8OHwl/Az8LTzxVvXi2qYVfAx8A/wS
/BM85Tb1Mtq2A3wyfCv8JvwHPIO/eiVt0x0+Ex4AD4JH2q6eVdvUhPeBz4cf
gD+Gx9ihnkfb1ocPgvvCj8NfwuPtVC+kbZrCR8BXw8/C38OT7FIvqW1bw8fB
N8KvwD/DUweol9U2neBT4P7wW/Bf8Iy71ato2x5wH/hueDA88h717Nq2Frwf
fAH8EPwJPOZe9bzapiF8MHwZ/AT8NTz+PvUi2rYZ3MLXwM/DP8CT7VcvpW3a
wsfDN8Gvwr/C0xxQL69tO8OnwbfDA+G/4ZkPqlfVNj3hs+F74ffhUQ+p59A2
deD94Yvgh+HP4LEOq+fXto3gQ+HL4afgb+AJj6gX1TYt4KPg6+AX4GHw5EfV
PbRtO/hE+Gb4dfg3eLpj6hW0TVf4dPhO+B1X7/1Rrkq0oo7/dXWx87PPFC7t
uPvxfx2w+Fm1DuUdr+7qIj3+najqeC9X7yg9qebx2o7PdXXBuEEXwxo6vs/V
/sG562Rq7vhDV+fbMuJKvbaORzvxr105qrPjuVydp06m69u8HK/rar/0/Rs+
7Oe4t6tzfjh5M/4Qxxe7esOR5J5lrONHXZ1tVtfAnuMdf+7qtW33N1061fE4
J/91FtcN+jhewNWrI7du8XuB456u/jc9OPcyx4e5esWqfwfWOL7S1Rn+3c4U
P8dPu3ppxX8T/B1/6+q0Sb89fr3b8USn/vWSf48v1SHHi7s6leuBnnC8pasX
jn/bafA5x8e4OoVnmZfrrzi+3tXzXAvdcvySq12XjxHs+EdXzzlTuEexJ46n
PP2vE7ku+Mrx/1ztehzz3jvewdUJSv57gp8dn+Tq6bGG9fn80/Gtrna9PvfI
Q11+w9VTXS/AzdXmh6tj/zs+Jp7j6c/8639v33tHEscrudrN9QBSOd7N1RP+
rZcoo+MzXR3t0J4f5bI5vsvVY103kMfxIFdH+fc6lhdy3Jz916Ncf5gSjmc9
G/7/Let4DVc3cn0qOd7H1X4b/32qOz4v4nxdxw9EnG/k+KOI880cj3Eu/Hwb
x3OfCz/f0fH658LPd3N8YMT53o77Rpwf4PixiPNDHH8Zcd46Hve8tCmkbZvA
R8BXwc/C38GTXFAvoW1aw8fCN8Ivwz/DU11UL6ttO8KnwLfBb8F/wjNeUq+s
bXrAZ8F3w+/BI19Wz6ZtasH7whfAD8KfwN2uqOfVtg3gg+FL4Sfgr+Dxr6oX
1jbN4CPha+Dn4B/gSa+pl9K2beDj4X7wq/Av8DTX1ctpm87wqfDt8Nvw3/BM
N9Sralsv+Gz4Hvh9eJSb6jm0bW14f/hC+GH4U3isW+r5tE0j+BD4cvhJ+Bt4
gtvqRbVtc/go+Fr4BXgoPHmgemlt0w4+Ab4Zfg3+DZ72jnoFbdsFPh2+A34H
/gfufle9mrbpBZ8D3wd/AI8WpJ5T29SFD4Avhh+BP4fHvqdeQNs2hg+Dr4Cf
hofAEwWrF9M2LeGj4evhF+Ef4Snuq/+nbdvDJ8G3wG/Av8PTP1CvqG26wWfA
d8Hvws1D9Szapga8N3wefD/8ETz6I/Xc2rYefCB8CfwY/AU87mP1gtqmCXw4
fBX8DPwdPPET9RLathV8LHwD/DL8EzzVU/Uy2qYjfDJ8G/wm/Cc8wzP1ytq2
O3wWPAB+Dx7puXo2bVsT3hc+H34Q/hju9kI9j7ZpAB8EXwo/Dn8Fj/dSvbC2
bQofCV8NPwd/D0/6Sr2ktmkDHwf3g1+Bf4Gnfq1eTtt2gk+F+8Nvw3/BM71R
r6JtvOA+8D3wYHiUEPXs2qY2vB98IfwQ/Ck85lv1fNq2IXwIfBn8JPw1PME7
9SLapjncwtfCz8ND4cneq5fWtm3hE+Cb4NfgX+FpP6iX1zZd4NPgO+CB8D/w
zKHq1bRtT/gc+F74A3jUMPWc2rYOfAB8EfwI/Bk89kf1/NqmMXwofAX8FDwE
nvCTejFt2wI+Gr4OfhEeBk/xWd1D27SHT4RvgV+Hf4en+6JeUdt2hc+A74Tf
hf+FZ/mqXl3b9IbPhe+HP4RH/6aeS9vUg3vDl8CPwl/A43xXL6htPeHD4Svh
Z+Bv4Yl/qBfXNq3gY+Ab4Jfgn+Apf6qX0bYd4JPhW+E34T/gGX6pV9I23eEz
4QHwIHik3+pZtU1NeB/4fPgB+GN4jD/qebRtffgguC/8OPwlPN5f9ULapil8
BHw1/Cz8PTyJyS9eUtu2ho+Db4RfgX+Gp46kXlbbdIJPgfvDb8F/wTNGVq+i
bXvAfeC74cHwyFHUs2vbWvB+8AXwQ/An8JhR1fNqm4bwwfBl8BPw1/D40dSL
aNtmcAtfAz8P/wBPFl29lLZpCx8P3wS/Cv8KTxNDvby27QyfBt8OD4T/hmd2
U6+qbXrCZ8P3wu/Do8ZUz6Ft6sD7wxfBD8OfwWPFUs+vbRvBh8KXw0/B38AT
xlYvqm1awEfB18EvwMPgyeOoe2jbdvCJ8M3w6/Bv8HRx1Stom67w6fCd8Dvw
v3D3eOrVtW0v+Fz4PvhDeLT46rm0bV24N3wx/Cj8OTxOAvUC2sYTPgy+En4a
/haeKKF6cW3bEj4Gvh5+Cf4RnjKR+n/apgN8Enwr/Ab8Bzx9YvVK2rYbfCZ8
FzwIbpKoZ9W2NeB94PPgB+CP4DGSqufWNvXhA+G+8GPwl/C4ydQLadsm8BHw
VfCz8HfwJMnVS2ib1vCx8I3wy/DP8FQp1Mtq247wKfBt8Fvwn/CMKdUra5se
8Fnw3fB78Mip1LNpm1rwvvAF8IPwJ3C31Op5tW0D+GD4UvgJ+Ct4/DTqhbVN
M/hI+Br4OfgHeNK06qW0bRv4eLgf/Cr8CzxNOvVy2qYzfCp8O/w2/Dc8U3r1
qtrWCz4bvgd+Hx4lg3oObVsb3h++EH4Y/hQeK6N6Pm3TCD4Evhx+Ev4GniCT
elFt2xw+Cr4WfgEeCk+eWb20tmkHnwDfDL8G/wZP665eQdt2gU+H74Dfgf+B
u2dRr6ZtesHnwPfBH8CjZVXPqW3qwgfAF8OPwJ/DY2dTL6BtG8OHwVfAT8ND
4ImyqxfTNi3ho+Hr4RfhH+Epcqj/p23bwyfBt8BvwL/D0+dUr6htusFnwHfB
78JNLvUs2qYGvDd8Hnw//BE8em713Nq2HnwgfAn8GPwFPG4e9YLapgl8OHwV
/Az8HTxxXvUS2rYVfCx8A/wy/BM8VT71MtqmI3wyfBv8JvwnPEN+9cratjt8
FjwAfg8eqYB6Nm1bE94XPh9+EP4Y7lZQPY+2aQAfBF8KPw5/BY9XSL2wtm0K
HwlfDT8Hfw9PWli9pLZpAx8H94NfgX+Bpy6iXk7bdoJPhfvDb8N/wTMVVa+i
bbzgPvA98GB4lGLq2bVNbXg/+EL4IfhTeMzi6vm0bUP4EPgy+En4a3iCEupF
tE1zuIWvhZ+Hh8KTlVQvrW3bwifAN8Gvwb/C05ZSL69tusCnwXfAA+F/4JlL
q1fTtj3hc+B74Q/gUT3Uc2rbOvAB8EXwI/Bn8Nj/qefXNo3hQ+Er4KfgIfCE
ZdSLadsW8NHwdfCL8DB4irLqHtqmPXwifAv8Ovw7PF059Yratit8Bnwn/C78
LzxLefXq2qY3fC58P/whPHoF9Vzaph7cG74EfhT+Ah6nonpBbesJHw5fCT8D
fwtPXEm9uLZpBR8D3wC/BP8ET1lZvYy27QCfDN8Kvwn/Ac9QRb2StukOnwkP
gAfBI1VVz6ptasL7wOfDD8Afw2NUU8+jbevDB8F94cfhL+HxqqsX0jZN4SPg
q+Fn4e/hSWqol9S2reHj4BvhV+Cf4alrqpfVNp3gU+D+8FvwX/CMtdSraNse
cB/4bngwPHJt9ezatha8H3wB/BD8CTxmHfW82qYhfDB8GfwE/DU8fl31Itq2
GdzC18DPwz/Ak9VTL6Vt2sLHwzfBr8K/wtPUVy+vbTvDp8G3wwPhv+GZG6hX
1TY94bPhe+H34VEbqufQNnXg/eGL4Ifhz+CxGqnn17aN4EPhy+Gn4G/gCRur
F9U2LeCj4OvgF+Bh8OSe6h7ath18Inwz/Dr8GzxdE/UK2qYrfDp8J/wO/C/c
val6dW3bCz4Xvg/+EB6tmXoubVsX7g1fDD8Kfw6P01y9gLbxhA+Dr4Sfhr+F
J2qhXlzbtoSPga+HX4J/hKdsqf6ftukAnwTfCr8B/wFP30q9krbtBp8J3wUP
gpvW6lm1bQ14H/g8+AH4I3iMNuq5tU19+EC4L/wY/CU8blv1Qtq2CXwEfBX8
LPwdPEk79RLapjV8LHwj/DL8MzxVe/Wy2rYjfAp8G/wW/Cc8Ywf1ytqmB3wW
fDf8HjxyR/Vs2qYWvC98Afwg/AncrZN6Xm3bAD4YvhR+Av4KHr+zemFt0ww+
Er4Gfg7+AZ60i3opbdsGPh7uB78K/wJP01W9nLbpDJ8K3w6/Df8Nz9RNvaq2
9YLPhu+B34dH6a6eQ9vWhveHL4Qfhj+Fx+qhnk/bNIIPgS+Hn4S/gSfwUi+q
bZvDR8HXwi/AQ+HJe6qX1jbt4BPgm+HX4N/gaXupV9C2XeDT4Tvgd+B/4O69
1atpm17wOfB98AfwaH3Uc2qbuvAB8MXwI/Dn8Nh91Qto28bwYfAV8NPwEHii
furFtE1L+Gj4evhF+Ed4iv7q/2nb9vBJ8C3wG/Dv8PQD1Ctqm27wGfBd8Ltw
462eRdvUgPeGz4Pvhz+CRx+onlvb1oMPhC+BH4O/gMcdpF5Q2zSBD4evgp+B
v4MnHqxeQtu2go+Fb4Bfhn+CpxqiXkbbdIRPhm+D34T/hGcYql5Z23aHz4IH
wO/BIw1Tz6Zta8L7wufDD8Ifw92Gq+fRNg3gg+BL4cfhr+DxRqgX1rZN4SPh
q+Hn4O/hSUeql9Q2beDj4H7wK/Av8NRWvZy27QSfCveH34b/gmcapV5F23jB
feB74MHwKKPVs2ub2vB+8IXwQ/Cn8Jhj1PNp24bwIfBl8JPw1/AEY9WLaJvm
cAtfCz8PD4UnG6deWtu2hU+Ab4Jfg3+Fpx2vXl7bdIFPg++AB8L/wDNPUK+m
bXvC58D3wh/Ao05Uz6lt68AHwBfBj8CfwWNPUs+vbRrDh8JXwE/BQ+AJJ6sX
07Yt4KPh6+AX4WHwFFPUPbRNe/hE+Bb4dfh3eLqp6hW1bVf4DPhO+F34X3iW
aerVtU1v+Fz4fvhDePTp6rm0TT24N3wJ/Cj8BTzODPWC2tYTPhy+En4G/hae
eKZ6cW3TCj4GvgF+Cf4JnnKWehlt2wE+Gb4VfhP+A57BR72StukOnwkPgAfB
I81Wz6ptasL7wOfDD8Afw2PMUc+jbevDB8F94cfhL+Hx5qoX0jZN4SPgq+Fn
4e/hSeapl9S2reHj4BvhV+Cf4annq5fVNp3gU+D+8FvwX/CMC9SraNsecB/4
bngwPPJC9ezatha8H3wB/BD8CTzmIvW82qYhfDB8GfwE/DU8/mL1Itq2GdzC
18DPwz/Aky1RL6Vt2sLHwzfBr8K/wtP4qpfXtp3h0+Db4YHw3/DMS9Wrapue
8NnwvfD78KjL1HNomzrw/vBF8MPwZ/BYy9Xza9tG8KHw5fBT8DfwhCvUi2qb
FvBR8HXwC/AwePKV6h7ath18Inwz/Dr8GzzdKvUK2qYrfDp8J/wO/C/cfbV6
dW3bCz4Xvg/+EB5tjXoubVsX7g1fDD8Kfw6Ps1a9gLbxhA+Dr4Sfhr+FJ1qn
XlzbtoSPga+HX4J/hKdcr/6ftukAnwTfCr8B/wFPv0G9krbtBp8J3wUPgpuN
6lm1bQ14H/g8+AH4I3gMP/Xc2qY+fCDcF34M/hIed5N6IW3bBD4Cvgp+Fv4O
nmSzeglt0xo+Fr4Rfhn+GZ5qi3pZbdsRPgW+DX4L/hOecat6ZW3TAz4Lvht+
Dx55m3o2bVML3he+AH4Q/gTu5q+eV9s2gA+GL4WfgL+Cx9+uXljbNIOPhK+B
n4N/gCfdoV5K27aBj4f7wa/Cv8DT7FQvp206w6fCt8Nvw3/DM+1Sr6ptveCz
4Xvg9+FRAtRzaNva8P7whfDD8KfwWLvV82mbRvAh8OXwk/A38AR71Itq2+bw
UfC18AvwUHjyveqltU07+AT4Zvg1+Dd42n3qFbRtF/h0+A74HfgfuPt+9Wra
phd8Dnwf/AE82gH1nNqmLnwAfDH8CPw5PPZB9QLatjF8GHwF/DQ8BJ7okHox
bdMSPhq+Hn4R/hGe4rD6f9q2PXwSfAv8Bvw7PP0R9Yrapht8BnwX/C7cHFXP
om1qwHvD58H3wx/Box9Tz61t68EHwpfAj8FfwOMeVy+obZrAh8NXwc/A38ET
n1AvoW1bwcfCN8Avwz/BU51UL6NtOsInw7fBb8J/wjOcUq+sbbvDZ8ED4Pfg
kU6rZ9O2NeF94fPhB+GP4W5n1PNomwbwQfCl8OPwV/B4Z9ULa9um8JHw1fBz
8PfwpOfUS2qbNvBxcD/4FfgXeOrz6uW0bSf4VLg//Db8FzzTBfUq2sYL7gPf
Aw+GR7monl3b1Ib3gy+EH4I/hce8pJ5P2zaED4Evg5+Ev4YnuKxeRNs0h1v4
Wvh5eCg82RX10tq2LXwCfBP8GvwrPO1V9fLapgt8GnwHPBD+B575mno1bdsT
Pge+F/4AHvW6ek5tWwc+AL4IfgT+DB77hnp+bdMYPhS+An4KHgJPeFO9mLZt
AR8NXwe/CA+Dp7il7qFt2sMnwrfAr8O/w9PdVq+obbvCZ8B3wu/C/8KzBKpX
1za94XPh++EP4dHvqOfSNvXg3vAl8KPwF/A4d9ULaltP+HD4SvgZ+Ft44iD1
4tqmFXwMfAP8EvwTPOU99TLatgN8Mnwr/Cb8BzxDsHolbdMdPhMeAA+CR7qv
nlXb1IT3gc+HH4A/hsd4oJ5H29aHD4L7wo/DX8LjPVQvpG2awkfAV8PPwt/D
kzxSL6ltW8PHwTfCr8A/w1M/Vi+rbTrBp8D94bfgv+AZn6hX0bY94D7w3fBg
eOSn6tm1bS14P/gC+CH4E3jMZ+p5tU1D+GD4MvgJ+Gt4/OfqRbRtM7iFr4Gf
h3+AJ3uhXkrbtIWPh2+CX4V/had5qV5e23aGT4NvhwfCf8Mzv1Kvqm16wmfD
98Lvw6O+Vs/h6uABt1sOnOZ4HVfn2rLn8eTFjvd39ZDnCzsv3eD4IlefSTc0
xH+344ddncyzRZ+TJx1/5uoOMzy+BF53PNabf7399L8fPHI8/5vw+R8cb+Tq
3V5BAV4fHR/q6p7/MuiL48tdnaWaj3u1H46fcrWLA347/sbV/9THPdIwlycM
+deu4z5RXW2LhoTPc3O8RUj4vNiOjwoJnxfP8XUh4fMSOX4hJHxeUsfDQsLn
pXQ8+dvweWkc93gbPi+D4+0i2t3xiRGd3fHNEZ3b8esRnd/xbxFd2PF078K7
uOMVIrq0410juqzj0yO6ouM7I7qq43ciuqbjfyO6ruPu7//1nUm+gZMaOV7d
1f6JS/knbu54L1dP/se+bRyf6+p22bzbZevk+D5Xl3L9oLvjD12dxPVFH8ej
ffjXISdqh5zwdjyXq0/+y9rDHK/r6qX/Lh84ynFvV3u7BkxwfLGr67guMNXx
o652jff2cfz5h/B9FjgeJzR8H1/HC4SG77PKcc/Q8H3WOz4sNHyfLY6vDA3f
Z4fjp0PD99nr+NvQ8H0OOZ4oLHyfE44XDwvf56zjLcPC97ns+Jiw8H1uOL4+
LHyfu45fCgvf56HjH7VNyo/q/2mbDvBJ8K3wG/Af8PSf1Ctp227wmfBd8CC4
+ayeVdvWgPeBz4MfgD+Cx/iinlvb1IcPhPvCj8FfwuN+VS+kbZvAR8BXwc/C
38GTfFMvoW1aw8fCN8Ivwz/DU31XL6ttO8KnwLfBb8F/wjP+UK+sbXrAZ8F3
w+/BI/9Uz6ZtasH7whfAD8KfwN1+qefVtg3gg+FL4Sfgr+Dxf6sX1jbN4CPh
a+Dn4B/gSf+ol9K2beDj4X7wq/Av8DR/1ctpm87wqfDt8Nvw3/BMpoB4VW3r
BZ8N3wO/D48SST2Htq0N7w9fCD8MfwqPFVk9n7ZpBB8CXw4/CX8DTxBFvai2
bQ4fBV8LvwAPhSePql5a27SDT4Bvhl+Df4OnjaZeQdt2gU+H74Dfgf+Bu0dX
r6ZtesHnwPfBH8CjxVDPqW3qwgfAF8OPwJ/DY7upF9C2jeHD4Cvgp+Eh8EQx
1Ytpm5bw0fD18Ivwj/AUsdT/07bt4ZPgW+A34N/h6WOrV9Q23eAz4Lvgd+Em
jnoWbVMD3hs+D74f/ggePa56bm1bDz4QvgR+DP4CHjeeekFt0wQ+HL4Kfgb+
Dp44vnoJbdsKPha+AX4Z/gmeKoF6GW3TET4Zvg1+E/4TniGhemVt2x0+Cx4A
vwePlEg9m7atCe8Lnw8/CH8Md0usnkfbNIAPgi+FH4e/gsdLol5Y2zaFj4Sv
hp+Dv4cnTapeUtu0gY+D+8GvwL/AUydTL6dtO8Gnwv3ht+G/4JmSq1fRNl5w
H/geeDA8Sgr17NqmNrwffCH8EPwpPGZK9XzatiF8CHwZ/CT8NTxBKvUi2qY5
3MLXws/DQ+HJUquX1rZt4RPgm+DX4F/hadOol9c2XeDT4DvggfA/8Mxp1atp
257wOfC98AfwqOnUc2rbOvAB8EXwI/Bn8Njp1fNrm8bwofAV8FPwEHjCDOrF
tG0L+Gj4OvhFeBg8RUZ1D23THj4RvgV+Hf4dni6TekVt2xU+A74Tfhf+F54l
s3p1bdMbPhe+H/4QHt1dPZe2qQf3hi+BH4W/gMfJol5Q23rCh8NXws/A38IT
Z1Uvrm1awcfAN8AvwT/BU2ZTL6NtO8Anw7fCb8J/wDNkV6+kbbrDZ8ID4EHw
SDnUs2qbmvA+8PnwA/DH8Bg51fNo2/rwQXBf+HH4S3i8XOqFtE1T+Aj4avhZ
+Ht4ktzqJbVta/g4+Eb4FfhneOo86mW1TSf4FLg//Bb8FzxjXvUq2rYH3Ae+
Gx4Mj5xPPbu2rQXvB18APwR/Ao+ZXz2vtmkIHwxfBj8Bfw2PX0C9iLZtBrfw
NfDz8A/wZAXVS2mbtvDx8E3wq/Cv8DSF1Mtr287wafDt8ED4b3jmwupVtU1P
+Gz4Xvh9eNQi6jm0TR14f/gi+GH4M3isour5tW0j+FD4cvgp+Bt4wmLqRbVN
C/go+Dr4BXgYPHlxdQ9t2w4+Eb4Zfh3+DZ6uhHoFbdMVPh2+E34H/hfuXlK9
urbtBZ8L3wd/CI9WSj2Xtq0L94Yvhh+FP4fHKa1eQNt4wofBV8JPw9/CE3mo
F9e2LeFj4Ovhl+Af4Sn/U/9P23SAT4Jvhd+A/4CnL6NeSdt2g8+E74IHwU1Z
9azatga8D3we/AD8ETxGOfXc2qY+fCDcF34M/hIet7x6IW3bBD4Cvgp+Fv4O
nqSCeglt0xo+Fr4Rfhn+GZ6qonpZbdsRPgW+DX4L/hOesZJ6ZW3TAz4Lvht+
Dx65sno2bVML3he+AH4Q/gTuVkU9r7ZtAB8MXwo/AX8Fj19VvbC2aQYfCV8D
Pwf/AE9aTb2Utm0DHw/3g1+Ff4Gnqa5eTtt0hk+Fb4ffhv+GZ6qhXlXbesFn
w/fA78Oj1FTPoW1rw/vDF8IPw5/CY9VSz6dtGsGHwJfDT8LfwBPUVi+qbZvD
R8HXwi/AQ+HJ66iX1jbt4BPgm+HX4N/gaeuqV9C2XeDT4Tvgd+B/4O711Ktp
m17wOfB98AfwaPXVc2qbuvAB8MXwI/Dn8NgN1Ato28bwYfAV8NPwEHiihurF
tE1L+Gj4evhF+Ed4ikbq/2nb9vBJ8C3wG/Dv8PSN1Stqm27wGfBd8Ltw46me
RdvUgPeGz4Pvhz+CR2+inlvb1oMPhC+BH4O/gMdtql5Q2zSBD4evgp+Bv4Mn
bqZeQtu2go+Fb4Bfhn+Cp2quXkbbdIRPhm+D34T/hGdooV5Z23aHz4IHwO/B
I7VUz6Zta8L7wufDD8Ifw91aqefRNg3gg+BL4cfhr+DxWqsX1rZN4SPhq+Hn
4O/hSduol9Q2beDj4H7wK/Av8NRt1ctp207wqXB/+G34L3imdupVtI0X3Ae+
Bx4Mj9JePbu2qQ3vB18IPwR/Co/ZQT2ftm0IHwJfBj8Jfw1P0FG9iLZpDrfw
tfDz8FB4sk7qpbVtW/gE+Cb4NfhXeNrO6uW1TRf4NPgOeCD8DzxzF/Vq2rYn
fA58L/wBPGpX9Zzatg58AHwR/Aj8GTx2N/X82qYxfCh8BfwUPASesLt6MW3b
Aj4avg5+ER4GT9FD3UPbtIdPhG+BX4d/h6fzUq+obbvCZ8B3wu/C/8Kz9FSv
rm16w+fC98MfwqP3Us+lberBveFL4EfhL+BxeqsX1Lae8OHwlfAz8LfwxH3U
i2ubVvAx8A3wS/BP8JR91cto2w7wyfCt8JvwH/AM/dQraZvu8JnwAHgQPFJ/
9azapia8D3w+/AD8MTzGAPU82rY+fBDcF34c/hIez1u9kLZpCh8BXw0/C38P
TzJQvaS2bQ0fB98IvwL/DE89SL2stukEnwL3h9+C/4JnHKxeRdv2gPvAd8OD
4ZGHqGfXtrXg/eAL4IfgT+Axh6rn1TYN4YPhy+An4K/h8YepF9G2zeAWvgZ+
Hv4Bnmy4eilt0xY+Hr4JfhX+FZ5mhHp5bdsZPg2+HR4I/w3PPFK9qrbpCZ8N
3wu/D49q1XNomzrw/vBF8MPwZ/BYo9Tza9tG8KHw5fBT8DfwhKPVi2qbFvBR
8HXwC/AwePIx6h7ath18Inwz/Dr8GzzdWPUK2qYrfDp8J/wO/C/cfZx6dW3b
Cz4Xvg/+EB5tvHoubVsX7g1fDD8Kfw6PM0G9gLbxhA+Dr4Sfhr+FJ5qoXlzb
toSPga+HX4J/hKecpP6ftukAnwTfCr8B/wFPP1m9krbtBp8J3wUPgpsp6lm1
bQ14H/g8+AH4I3iMqeq5tU19+EC4L/wY/CU87jT1Qtq2CXwEfBX8LPwdPMl0
9RLapjV8LHwj/DL8MzzVDPWy2rYjfAp8G/wW/Cc840z1ytqmB3wWfDf8Hjzy
LPVs2qYWvC98Afwg/AnczUc9r7ZtAB8MXwo/AX8Fjz9bvbC2aQYfCV8DPwf/
AE86R72Utm0DHw/3g1+Ff4GnmateTtt0hk+Fb4ffhv+GZ5qnXlXbesFnw/fA
78OjzFfPoW1rw/vDF8IPw5/CYy1Qz6dtGsGHwJfDT8LfwBMsVC+qbZvDR8HX
wi/AQ+HJF6mX1jbt4BPgm+HX4N/gaRerV9C2XeDT4Tvgd+B/4O5L1Ktpm17w
OfB98AfwaL7qObVNXfgA+GL4EfhzeOyl6gW0bWP4MPgK+Gl4CDzRMvVi2qYl
fDR8Pfwi/CM8xXL1/7Rte/gk+Bb4Dfh3ePoV6hW1TTf4DPgu+F24WameRdvU
gPeGz4Pvhz+CR1+lnlvb1oMPhC+BH4O/gMddrV5Q2zSBD4evgp+Bv4MnXqNe
Qtu2go+Fb4Bfhn+Cp1qrXkbbdIRPhm+D34T/hGdYp15Z23aHz4IHwO/BI61X
z6Zta8L7wufDD8Ifw902qOfRNg3gg+BL4cfhr+DxNqoX1rZN4SPhq+Hn4O/h
Sf3US2qbNvBxcD/4FfgXeOpN6uW0bSf4VLg//Db8FzzTZvUq2sYL7gPfAw+G
R9minl3b1Ib3gy+EH4I/hcfcqp5P2zaED4Evg5+Ev4Yn2KZeRNs0h1v4Wvh5
eCg8mb96aW3bFj4Bvgl+Df4Vnna7enlt0wU+Db4DHgj/A8+8Q72atu0JnwPf
C38Aj7pTPae2rQMfAF8EPwJ/Bo+9Sz2/tmkMHwpfAT8FD4EnDFAvpm1bwEfD
18EvwsPgKXare2ib9vCJ8C3w6/Dv8HR71Ctq267wGfCd8Lvwv/Ase9Wra5ve
8Lnw/fCH8Oj71HNpm3pwb/gS+FH4C3ic/eoFta0nfDh8JfwM/C088QH14tqm
FXwMfAP8EvwTPOVB9TLatgN8Mnwr/Cb8BzzDIfVK2qY7fCY8AB4Ej3RYPau2
qQnvA58PPwB/DI9xRD2Ptq0PHwT3hR+Hv4THO6peSNs0hY+Ar4afhb+HJzmm
XlLbtoaPg2+EX4F/hqc+rl5W23SCT4H7w2/Bf8EznlCvom17wH3gu+HB8Mgn
1bNr21rwfvAF8EPwJ/CYp9TzapuG8MHwZfAT8Nfw+KfVi2jbZnALXwM/D/8A
T3ZGvZS2aQsfD98Evwr/Ck9zVr28tu0MnwbfDg+E/4ZnPqdeVdv0hM+G74Xf
h0c9r55D29SB94cvgh+GP4PHuqCeX9s2gg+FL4efgr+BJ7yoXlTbtICPgq+D
X4CHwZNfUvfQtu3gE+Gb4dfh3+DpLqtX0DZd4dPhO+F34H/h7lfUq2vbXvC5
8H3wh/BoV9Vzadu6cG/4YvhR+HN4nGvqBbSNJ3wYfCX8NPwtPNF19eLatiV8
DHw9/BL8IzzlDfX/tE0H+CT4VvgN+A94+pvqlbRtN/hM+C54ENzcUs+qbWvA
+8DnwQ/AH8Fj3FbPrW3qwwfCfeHH4C/hcQPVC2nbJvAR8FXws/B38CR31Eto
m9bwsfCN8Mvwz/BUd9XLatuO8CnwbfBb8J/wjEHqlbVND/gs+G74PXjke+rZ
tE0teF/4AvhB+BO4W7B6Xm3bAD4YvhR+Av4KHv++emFt0ww+Er4Gfg7+AZ70
gXopbdsGPh7uB78K/wJP81C9nLbpDJ8K3w6/Df8Nz/RIvaq29YLPhu+B34dH
eayeQ9vWhveHL4Qfhj+Fx3qink/bNIIPgS+Hn4S/gSd4ql5U2zaHj4KvhV+A
h8KTP1MvrW3awSfAN8Ovwb/B0z5Xr6Btu8Cnw3fA78D/wN1fqFfTNr3gc+D7
4A/g0V6q59Q2deED4IvhR+DP4bFfqRfQto3hw+Ar4KfhIfBEr9WLaZuW8NHw
9fCL8I/wFG/U/9O27eGT4FvgN+Df4elD1Ctqm27wGfBd8Ltw81Y9i7apAe8N
nwffD38Ej/5OPbe2rQcfCF8CPwZ/AY/7Xr2gtmkCHw5fBT8DfwdP/EG9hLZt
BR8L3wC/DP8ETxWqXkbbdIRPhm+D34T/hGcIU6+sbbvDZ8ED4PfgkT6qZ9O2
NeF94fPhB+GP4W6f1PNomwbwQfCl8OPwV/B4n9ULa9um8JHw1fBz8PfwpF/U
S2qbNvBxcD/4FfgXeOqv6uW0bSf4VLg//Db8FzzTN/Uq2sYL7gPfAw+GR/mu
nl3b1Ib3gy+EH4I/hcf8oZ5P2zaED4Evg5+Ev4Yn+KleRNs0h1v4Wvh5eCg8
2S/10tq2LXwCfBP8GvwrPO1v9fLapgt8GnwHPBD+B575j3o1bdsTPge+F/4A
HvWvek5tWwc+AL4IfgT+DB7bFBTPr20aw4fCV8BPwUPgCSOpF9O2LeCj4evg
F+Fh8BSR1T20TXv4RPgW+HX4d3i6KOoVtW1X+Az4Tvhd+F94lqjq1bVNb/hc
+H74Q3j0aOq5tE09uDd8Cfwo/AU8TnT1gtrWEz4cvhJ+Bv4WnjiGenFt0wo+
Br4Bfgn+CZ7STb2Mtu0AnwzfCr8J/wHPEFO9krbpDp8JD4AHwSPFUs+qbWrC
+8Dnww/AH8NjxFbPo23rwwfBfeHH4S/h8eKoF9I2TeEj4KvhZ+Hv4UniqpfU
tq3h4+Ab4Vfgn+Gp46mX1Tad4FPg/vBb8F/wjPHVq2jbHnAf+G54MDxyAvXs
2rYWvB98AfwQ/Ak8ZkL1vNqmIXwwfBn8BPw1PH4i9SLathncwtfAz8M/wJMl
Vi+lbdrCx8M3wa/Cv8LTJFEvr207w6fBt8MD4b/hmZOqV9U2PeGz4Xvh9+FR
k6nn0DZ14P3hi+CH4c/gsZKr59e2jeBD4cvhp+Bv4AlTqBfVNi3go+Dr4Bfg
YfDkKdU9tG07+ET4Zvh1+Dd4ulTqFbRNV/h0+E74HfhfuHtq9erathd8Lnwf
/CE8Whr1XNq2Ltwbvhh+FP4cHietegFt4wkfBl8JPw1/C0+UTr24tm0JHwNf
D78E/whPmV79P23TAT4JvhV+A/4Dnj6DeiVt2w0+E74LHgQ3GdWzatsa8D7w
efAD8EfwGJnUc2ub+vCBcF/4MfhLeNzM6oW0bRP4CPgq+Fn4O3gSd/US2qY1
fCx8I/wy/DM8VRb1stq2I3wKfBv8FvwnPGNW9crapgd8Fnw3/B48cjb1bNqm
FrwvfAH8IPwJ3C27el5t2wA+GL4UfgL+Ch4/h3phbdMMPhK+Bn4O/gGeNKd6
KW3bBj4e7ge/Cv8CT5NLvZy26QyfCt8Ovw3/Dc+UW72qtvWCz4bvgd+HR8mj
nkPb1ob3hy+EH4Y/hcfKq55P2zSCD4Evh5+Ev4EnyKdeVNs2h4+Cr4VfgIfC
k+dXL61t2sEnwDfDr8G/wdMWUK+gbbvAp8N3wO/A/8DdC6pX0za94HPg++AP
4NEKqefUNnXhA+CL4Ufgz+GxC6sX0LaN4cPgK+Cn4SHwREXUi2mblvDR8PXw
i/CP8BRF1f/Ttu3hk+Bb4Dfg3+Hpi6lX1Dbd4DPgu+B34aa4ehZtUwPeGz4P
vh/+CB69hHpubVsPPhC+BH4M/gIet6R6QW3TBD4cvgp+Bv4OnriUeglt2wo+
Fr4Bfhn+CZ6qtHoZbdMRPhm+DX4T/hOewUO9srbtDp8FD4Dfg0f6Tz2btq0J
7wufDz8Ifwx3K6OeR9s0gA+CL4Ufh7+CxyurXljbNoWPhK+Gn4O/hyctp15S
27SBj4P7wa/Av8BTl1cvp207wafC/eG34b/gmSqoV9E2XnAf+B54MDxKRfXs
2qY2vB98IfwQ/Ck8ZiX1fNq2IXwIfBn8JPw1PEFl9SLapjncwtfCz8ND4cmq
qJfWtm3hE+Cb4NfgX+Fpq6qX1zZd4NPgO+CB8D/wzNXUq2nbnvA58L3wB/Co
1dVzats68AHwRfAj8Gfw2DXU82ubxvCh8BXwU/AQeMKa6sW0bQv4aPg6+EV4
GDxFLXUPbdMePhG+BX4d/h2errZ6RW3bFT4DvhN+F/4XnqWOenVt0xs+F74f
/hAeva56Lm1TD+4NXwI/Cn8Bj1NPvaC29YQPh6+En4G/hSeur15c27SCj4Fv
gF+Cf4KnbKBeRtt2gE+Gb4XfhP+AZ2ioXknbdIfPhAfAg+CRGqln1TY14X3g
8+EH4I/hMRqr59G29eGD4L7w4/CX8Hie6oW0TVP4CPhq+Fn4e3iSJuoltW1r
+Dj4RvgV+Gd46qbqZbVNJ/gUuD/8FvwXPGMz9SratgfcB74bHgyP3Fw9u7at
Be8HXwA/BH8Cj9lCPa+2aQgfDF8GPwF/DY/fUr2Itm0Gt/A18PPwD/BkrdRL
aZu28PHwTfCr8K/wNK3Vy2vbzvBp8O3wQPhveOY26lW1TU/4bPhe+H141Lbq
ObRNHXh/+CL4YfgzeKx26vm1bSP4UPhy+Cn4G3jC9upFtU0L+Cj4OvgFeBg8
eQd1D23bDj4Rvhl+Hf4Nnq6jegVt0xU+Hb4Tfgf+F+7eSb26tu0FnwvfB38I
j9ZZPZe2rQv3hi+GH4U/h8fpol5A23jCh8FXwk/D38ITdVUvrm1bwsfA18Mv
wT/CU3ZT/0/bdIBPgm+F34D/gKfvrl5J23aDz4TvggfBTQ/1rNq2BrwPfB78
APwRPIaXem5tUx8+EO4LPwZ/CY/bU72Qtm0CHwFfBT8LfwdP0ku9hLZpDR8L
3wi/DP8MT9Vbvay27QifAt8GvwX/Cc/YR72ytukBnwXfDb8Hj9xXPZu2qQXv
C18APwh/Anfrp55X2zaAD4YvhZ+Av4LH769eWNs0g4+Er4Gfg3+AJx2gXkrb
toGPh/vBr8K/wNN4q5fTNp3hU+Hb4bfhv+GZBqpX1bZe8NnwPfD78CiD1HNo
29rw/vCF8MPwp/BYg9XzaZtG8CHw5fCT8DfwBEPUi2rb5vBR8LXwC/BQePKh
6qW1TTv4BPhm+DX4N3jaYeoVtG0X+HT4Dvgd+B+4+3D1atqmF3wOfB/8ATza
CPWc2qYufAB8MfwI/Dk89kj1Atq2MXwYfAX8NDwEnsiqF9M2LeGj4evhF+Ef
4SlGqf+nbdvDJ8G3wG/Av8PTj1avqG26wWfAd8Hvws0Y9Szapga8N3wefD/8
ETz6WPXc2rYefCB8CfwY/AU87jj1gtqmCXw4fBX8DPwdPPF49RLathV8LHwD
/DL8EzzVBPUy2qYjfDJ8G/wm/Cc8w0T1ytq2O3wWPAB+Dx5pkno2bVsT3hc+
H34Q/hjuNlk9j7ZpAB8EXwo/Dn8FjzdFvbC2bQofCV8NPwd/D086Vb2ktmkD
Hwf3g1+Bf4GnnqZeTtt2gk+F+8Nvw3/BM01Xr6JtvOA+8D3wYHiUGerZtU1t
eD/4Qvgh+FN4zJnq+bRtQ/gQ+DL4SfhreIJZ6kW0TXO4ha+Fn4eHwpP5qJfW
tm3hE+Cb4NfgX+FpZ6uX1zZd4NPgO+CB8D/wzHPUq2nbnvA58L3wB/Coc9Vz
ats68AHwRfAj8Gfw2PPU82ubxvCh8BXwU/AQeML56sW0bQv4aPg6+EV4GDzF
AnUPbdMePhG+BX4d/h2ebqF6RW3bFT4DvhN+F/4XnmWRenVt0xs+F74f/hAe
fbF6Lm1TD+4NXwI/Cn8Bj7NEvaC29YQPh6+En4G/hSf2VS+ubVrBx8A3wC/B
P8FTLlUvo207wCfDt8Jvwn/AMyxTr6RtusNnwgPgQfBIy9Wzapua8D7w+fAD
8MfwGCvU82jb+vBBcF/4cfhLeLyV6oW0TVP4CPhq+Fn4e3iSVeoltW1r+Dj4
RvgV+Gd46tXqZbVNJ/gUuD/8FvwXPOMa9SratgfcB74bHgyPvFY9u7atBe8H
XwA/BH8Cj7lOPa+2aQgfDF8GPwF/DY+/Xr2Itm0Gt/A18PPwD/BkG9RLaZu2
8PHwTfCr8K/wNBvVy2vbzvBp8O3wQPhveGY/9arapid8Nnwv/D486ib1HNqm
Drw/fBH8MPwZPNZm9fzathF8KHw5/BT8DTzhFvWi2qYFfBR8HfwCPAyefKu6
h7ZtB58I3wy/Dv8GT7dNvYK26QqfDt8JvwP/C3f3V6+ubXvB58L3wR/Co21X
z6Vt68K94YvhR+HP4XF2qBfQNp7wYfCV8NPwt/BEO9WLa9uW8DHw9fBL8I/w
lLvU/9M2HeCT4FvhN+A/4OkD1Ctp227wmfBd8CC42a2eVdvWgPeBz4MfgD+C
x9ijnlvb1IcPhPvCj8FfwuPuVS+kbZvAR8BXwc/C38GT7FMvoW1aw8fCN8Iv
wz/DU+1XL6ttO8KnwLfBb8F/wjMeUK+sbXrAZ8F3w+/BIx9Uz6ZtasH7whfA
D8KfwN0OqefVtg3gg+FL4Sfgr+DxD6sX1jbN4CPha+Dn4B/gSY+ol9K2beDj
4X7wq/Av8DRH1ctpm87wqfDt8Nvw3/BMx9Sralsv+Gz4Hvh9eJTj6jm0bW14
f/hC+GH4U3isE+r5tE0j+BD4cvhJ+Bt4gpPqRbVtc/go+Fr4BXgoPPkp9dLa
ph18Anwz/Br8GzztafUK2rYLfDp8B/wO/A/c/Yx6NW3TCz4Hvg/+AB7trHpO
bVMXPgC+GH4E/hwe+5x6AW3bGD4MvgJ+Gh4CT3RevZi2aQkfDV8Pvwj/CE9x
Qf0/bdsePgm+BX4D/h2e/qJ6RW3TDT4Dvgt+F24uqWfRNjXgveHz4Pvhj+DR
L6vn1rb14APhS+DH4C/gca+oF9Q2TeDD4avgZ+Dv4ImvqpfQtq3gY+Eb4Jfh
n+CprqmX0TYd4ZPh2+A34T/hGa6rV9a23eGz4AHwe/BIN9Szadua8L7w+fCD
8Mdwt5vqebRNA/gg+FL4cfgreLxb6oW1bVP4SPhq+Dn4e3jS2+oltU0b+Di4
H/wK/As8daB6OW3bCT4V7g+/Df8Fz3RHvYq28YL7wPfAg+FR7qpn1za14f3g
C+GH4E/hMYPU82nbhvAh8GXwk/DX8AT31Itom+ZwC18LPw8PhScLVi+tbdvC
J8A3wa/Bv8LT3lcvr226wKfBd8AD4X/gmR+oV9O2PeFz4HvhD+BRH6rn1LZ1
4APgi+BH4M/gsR+p59c2jeFD4Svgp+Ah8ISP1Ytp2xbw0fB18IvwMHiKJ+oe
2qY9fCJ8C/w6/Ds83VP1itq2K3wGfCf8LvwvPMsz9erapjd8Lnw//CE8+nP1
XNqmHtwbvgR+FP4CHueFekFt6wkfDl8JPwN/C0/8Ur24tmkFHwPfAL8E/wRP
+Uq9jLbtAJ8M3wq/Cf8Bz/BavZK26Q6fCQ+AB8EjvVHPqm1qwvvA58MPwB/D
Y4So59G29eGD4L7w4/CX8Hhv1Qtpm6bwEfDV8LPw9/Ak79RLatvW8HHwjfAr
8M/w1O/Vy2qbTvApcH/4LfgveMYP6lW0bQ+4D3w3PBgeOVQ9u7atBe8HXwA/
BH8CjxmmnlfbNIQPhi+Dn4C/hsf/qF5E2zaDW/ga+Hn4B3iyT+qltE1b+Hj4
JvhV+Fd4ms/q5bVtZ/g0+HZ4IPw3PPMX9arapid8Nnwv/D486lf1HNqmDrw/
fBH8MPwZPNY39fzathF8KHw5/BT8DTzhd/Wi2qYFfBR8HfwCPAye/Ie6h7Zt
B58I3wy/Dv8GT/dTvYK26QqfDt8JvwP/C3f/pV5d2/aCz4Xvgz+ER/utnkvb
1oV7wxfDj8Kfw+P8US+gbTzhw+Ar4afhb+GJ/qoX17Yt4WPg6+GX4B/hKU0h
8f+0TQf4JPhW+A34D3j6SOqVtG03+Ez4LngQ3ERWz6pta8D7wOfBD8AfwWNE
Uc+tberDB8J94cfgL+Fxo6oX0rZN4CPgq+Bn4e/gSaKpl9A2reFj4Rvhl+Gf
4amiq5fVth3hU+Db4LfgP+EZY6hX1jY94LPgu+H34JHd1LNpm1rwvvAF8IPw
J3C3mOp5tW0D+GD4UvgJ+Ct4/FjqhbVNM/hI+Br4OfgHeNLY6qW0bRv4eLgf
/Cr8CzxNHPVy2qYzfCp8O/w2/Dc8U1z1qtrWCz4bvgd+Hx4lnnoObVsb3h++
EH4Y/hQeK756Pm3TCD4Evhx+Ev4GniCBelFt2xw+Cr4WfgEeCk+eUL20tmkH
nwDfDL8G/wZPm0i9grbtAp8O3wG/A/8Dd0+sXk3b9ILPge+DP4BHS6KeU9vU
hQ+AL4YfgT+Hx06qXkDbNoYPg6+An4aHwBMlUy+mbVrCR8PXwy/CP8JTJFf/
T9u2h0+Cb4HfgH+Hp0+hXlHbdIPPgO+C34WblOGdYLjLs2ibGvDe8Hnw/fBH
8Oip1HNr23rwgfAl8GPwF/C4qdULapsm8OHwVfAz8HfwxGnUS2jbVvCx8A3w
y/BP8FRp1ctom47wyfBt8Jvwn/AM6dQra9vu8FnwAPg9eKT06tm0bU14X/h8
+EH4Y7hbBvU82qYBfBB8Kfw4/BU8Xkb1wtq2KXwkfDX8HPw9PGkm9ZLapg18
HNwPfgX+BZ46s3o5bdsJPhXuD78N/wXP5K5eRdt4wX3ge+DB8ChZ1LNrm9rw
fvCF8EPwp/CYWdXzaduG8CHwZfCT8NfwBNnUi2ib5nALXws/Dw+FJ8uuXlrb
toVPgG+CX4N/hafNoV5e23SBT4PvgAfC/8Az51Svpm17wufA98IfwKPmUs+p
bevAB8AXwY/An8Fj51bPr20aw4fCV8BPwUPgCfOoF9O2LeCj4evgF+Fh8BR5
1T20TXv4RPgW+HX4d3i6fOoVtW1X+Az4Tvhd+F94lvzq1bVNb/hc+H74Q3j0
Auq5tE09uDd8Cfwo/AU8TkH1gtrWEz4cvhJ+Bv4WnriQenFt0wo+Br4Bfgn+
CZ6ysHoZbdsBPhm+FX4T/gOeoYh6JW3THT4THgAPgkcqqp5V29SE94HPhx+A
P4bHKKaeR9vWhw+C+8KPw1/C4xVXL6RtmsJHwFfDz7p624c4PQand/y9qwcs
d6u6Np/jSUr861J1o7pfL+N4yRLhv6/reOuI9nR8XES3cnxjRHd0/EpE93D8
c0T3czx1yfAe4njZiB7leKeInuj4lIie4bh/RM9z/FZE+zr+K6JXO56xVHj7
OV4lorc73iOi9zruE9FHHN8d0WccD47oK45HLh3egY5nj+iHjteK6JeO94vo
D44vcLV7NR/3amGOH3J19X/p88nxJ67uGRTgFfTF8Zge/9rF7t8dz+vqfxrg
9dPxhq6+5/rit+ODPcLnmREuX+YRPi+yq+0Jj/B5UR1/7RE+L7rj8f/v6i6j
svjaPgxvu1uxuxsVWykLu7sVFbAVuzYmGNiF3d3d3d3dit3d7995Fqz3d863
cx1zX9da98x83u4R++I4XtQ9Yl88x5u4R+xL4Lh1j3z/HF/yr8Nm/nelcPzU
v3Yr8t+V1vF3//r0vyuT4y4e/3X7f1cOx0t7RMzL53hrj4h5hRwf6RExr7jj
qz0i5pVx/ELkPG/Hv0bO83E8nWfEvOqOe3tGzKvreAfPiHmNHB/nGTGvheMb
PSPm+Tp+PXKev+O/I+d1dTyrV8S8QMd9vCLm9Xe8i1fEPOv45Mj7hzu+wyti
fojjdyN/H+p4dO+IfZMdz+0dMW+G4zW9I+bNdjzQO2LeAsfDvCPmLXV8X+S8
VY4/iZy33vG45aSNq7atDx8Anw8/Cn8JT1JevZi2aQYPgi+Dn4Z/gKesoF5W
27aBB8PXwC/Bv8EzVFQvp2384aHwzfAb8L/wbJXUq2jbrvCp8J3w+/AYPup5
tW0teG/4LPgBeDg8fmX1QtqmIXwgfCH8GPw1PGkV9RLatjl8GHw5/Cz8Izx1
VXV3beMLD4Gvg1+G/4BnrKZeQdsGwCfAt8BvwU119Rzatiq8O3wafDf8ATxW
DfV82qYOvA98Dvwg/Bk8QU31Itq2EXwwfBH8BPwNPHkt9ZLapiV8OHwl/Bz8
MzxNbXVPbdsOPga+Hn4V/hOeuY56RW3TCT4Rvg1+Gx61rnpObVMd3gM+A74H
/ggeu556AW1bF94PPhd+GP4cnqi+upu2aQIfAl8CPwl/B0/RQL20tm0FHwlf
Bb8A/wJP11DdS9t0gI+Fb4Rfg/+GZ2mk7qNtO8Mnw7fD78KjNVbPrW1rwAPh
M+H74I/hcZuoF9Q29eH94fPhR+Av4YmbqhfTtk3hQfCl8NPw9/CUzdTLaJs2
8FHwNfCL8G/w9M3Vy2lbP3gofBP8BvwPPFsL9crapit8Cnwn/B48Rkv1PNqm
FrwXfBZ8PzwcHq+VeiFt2wA+EL4Afgz+Cp60tXpxbdMcPhS+HH4G/hGeqo26
u7ZtCw+Br4Vfhn+HZ2yrXl7bBMDHw7fAb8KNr3p2bVMV3g0+Db4L/gAes516
Pm1bG94HPht+EP4UnqC9emFt0wg+CL4Ifhz+Bp6sg3pJbdsCPhy+An4O/gme
xk/dQ9u0g4+Gr4dfgf+EZ/JXr6htO8InwrfCb8OjBKjn1LbV4D3g0+F74A/h
sTuq59c2deF94XPhh+DP4Qk7qbtp28bwIfDF8JPwt/AUndVLaZtW8BHwVfDz
8C/wtF3UvbRte/hY+Ab4NfgveJau6pW0TWf4JPh2+B14tG7qubRNDXhP+Ez4
XvhjeJzu6gW1bT14f/g8+BH4C3jiHupFtU1TuIUvhZ+Cv4e79FQvo21bw0fB
V8Mvwr/C0weqe2sbP/g4+Cb4dfgfeNZe6pW1bRf4FPgO+D149N7qebRtTXgv
eBh8P/wJPF4fdVdt0wA+AL4AfhT+Cp6kr3pxbdsMPhS+DH4G/gGeqp96WW3T
Fh4MXwu/BP8Oz9Bfvby29YePh2+G34T/hWcfoF5F23SDT4Xvgt+Hxxyonlfb
1Ib3hs+GH4A/hccfpF5Y2zaED4IvhB+Hv4YnG6xeQtu0gA+Dr4CfhX+Cpx6i
7qFtfeGj4evgV+A/4JmsegVt0xE+Ab4VfgseJUg9h7apBu8Onw7fDX8IjzVU
Pb+2rQPvC58DPwR/Bk84TL2ItmkMHwxfDD8BfwtPPly9lLZtCR8BXwk/D/8M
TztC3VPbtIePgW+AX4X/gmceqV5J23aCT4Jvg9+BRx2lnkvbVof3hM+A74U/
gscJVi+gberB+8HnwQ/DX8AThagX1bZN4Ba+BH4K/g7uMlq9tLZpDR8JXw2/
AP8KTzdG3VvbdoCPg2+EX4f/hmcdq+6jbbrAJ8N3wO/Co49Tz61tasID4WHw
ffAn8Lih6q7atj58AHw+/Cj8JTzJePVi2qYZPAi+DH4a/gGecoJ6WW3bBh4M
XwO/BP8GzzBRvZy28YeHwjfDb8D/wrNNUq+ibbvCp8J3wu/DY0xWz6tta8F7
w2fBD8DD4fGnqBfSNg3hA+EL4cfgr+FJp6qX0LbN4cPgy+Fn4R/hqaepu2sb
X3gIfB38MvwHPON09QraNgA+Ab4FfgtuZqjn0LZV4d3h0+C74Q/gsWaq59M2
deB94HPgB+HP4AnC1Ito20bwwfBF8BPwN/Dks9RLapuW8OHwlfBz8M/wNLPV
PbVtO/gY+Hr4VfhPeOY56hW1TSf4RPg2+G141LnqObVNdXgP+Az4HvgjeOx5
6gW0bV14P/hc+GH4c3ii+epu2qYJfAh8Cfwk/B08xQL10tq2FXwkfBX8AvwL
PN1CdS9t0wE+Fr4Rfg3+G55lkbqPtu0MnwzfDr8Lj7ZYPbe2rQEPhM+E74M/
hsddol5Q29SH94fPhx+Bv4QnXqpeTNs2hQfBl8JPw9/DUy5TL6Nt2sBHwdfA
L8K/wdMvVy+nbf3gofBN8BvwP/BsK9Qra5uu8CnwnfB78Bgr1fNom1rwXvBZ
8P3wcHi8VeqFtG0D+ED4Avgx+Ct40tXqxbVNc/hQ+HL4GfhHeKo16u7ati08
BL4Wfhn+HZ5xrXp5bRMAHw/fAr8JN+vUs2ubqvBu8GnwXfAH8Jjr1fNp29rw
PvDZ8IPwp/AEG9QLa5tG8EHwRfDj8DfwZBvVS2rbFvDh8BXwc/BP8DSb1D20
TTv4aPh6+BX4T3imzeoVtW1H+ET4VvhteJQt6jm1bTV4D/h0+B74Q3jsrer5
tU1deF/4XPgh+HN4wm3qbtq2MXwIfDH8JPwtPMV29VLaphV8BHwV/Dz8Czzt
DnUvbdsePha+AX4N/gueZad6JW3TGT4Jvh1+Bx5tl3oubVMD3hM+E74X/hge
Z7d6QW1bD94fPg9+BP4CnniPelFt0xRu4Uvhp+Dv4S571cto29bwUfDV8Ivw
r/D0+9S9tY0ffBx8E/w6/A886371ytq2C3wKfAf8Hjz6AfU82rYmvBc8DL4f
/gQe76C6q7ZpAB8AXwA/Cn8FT3JIvbi2bQYfCl8GPwP/AE91WL2stmkLD4av
hV+Cf4dnOKJeXtv6w8fDN8Nvwv/Csx9Vr6JtusGnwnfB78NjHlPPq21qw3vD
Z8MPwJ/C4x9XL6xtG8IHwRfCj8Nfw5OdUC+hbVrAh8FXwM/CP8FTn1T30La+
8NHwdfAr8B/wTKfUK2ibjvAJ8K3wW/Aop9VzaJtq8O7w6fDd8IfwWGfU82vb
OvC+8DnwQ/Bn8IRn1Ytom8bwwfDF8BPwt/Dk59RLaduW8BHwlfDz8M/wtOfV
PbVNe/gY+Ab4VfgveOYL6pW0bSf4JPg2+B141IvqubRtdXhP+Az4XvgjeJxL
6gW0TT14P/g8+GH4C3iiy+pFtW0TuIUvgZ+Cv4O7XFEvrW1aw0fCV8MvwL/C
011V99a2HeDj4Bvh1+G/4Vmvqftomy7wyfAd8Lvw6NfVc2ubmvBAeBh8H/wJ
PO4NdVdtWx8+AD4ffhT+Ep7kpnoxbdMMHgRfBj8N/wBPeUu9rLZtAw+Gr4Ff
gn+DZ7itXk7b+MND4ZvhN+B/4dnuqFfRtl3hU+E74ffhMe6q59W2teC94bPg
B+Dh8Pj31Atpm4bwgfCF8GPw1/Ck99VLaNvm8GHw5fCz8I/w1A/U3bWNLzwE
vg5+Gf4DnvGhegVtGwCfAN8CvwU3j9RzaNuq8O7wafDd8AfwWI/V82mbOvA+
8Dnwg/Bn8ARP1Ito20bwwfBF8BPwN/Dk4eoltU1L+HD4Svg5+Gd4mqfqntq2
HXwMfD38KvwnPPMz9YraphN8Inwb/DY86nP1nNqmOrwHfAZ8D/wRPPYL9QLa
ti68H3wu/DD8OTzRS3U3bdMEPgS+BH4S/g6e4pV6aW3bCj4Svgp+Af4Fnu61
upe26QAfC98Ivwb/Dc/yRt1H23aGT4Zvh9+FR3urnlvb1oAHwmfC98Efw+O+
Uy+oberD+8Pnw4/AX8ITv1cvpm2bwoPgS+Gn4e/hKT+ol9E2beCj4GvgF+Hf
4Ok/qpfTtn7wUPgm+A34H3i2T+qVtU1X+BT4Tvg9eIzP6nm0TS14L/gs+H54
ODzeF/VC2rYBfCB8AfwY/BU86Vf14tqmOXwofDn8DPwjPNU3dXdt2xYeAl8L
vwz/Ds/4Xb28tgmAj4dvgd+Emx/q2bVNVXg3+DT4LvgDeMyf6vm0bW14H/hs
+EH4U3iCX+qFtU0j+CD4Ivhx+Bt4st/qJbVtC/hw+Ar4OfgneJo/6h7aph18
NHw9/Ar8JzzTX/WK2rYjfCJ8K/w2PIpxE8+pbavBe8Cnw/fAH8JjR1HPr23q
wvvC58IPwZ/DE0ZVd9O2jeFD4IvhJ+Fv4SmiqZfSNq3gI+Cr4OfhX+Bpo6t7
adv28LHwDfBr8F/wLDHUK2mbzvBJ8O3wO/BoMdVzaZsa8J7wmfC98MfwOLHU
C2rbevD+8HnwI/AX8MSx1Ytqm6ZwC18KPwV/D3eJo15G27aGj4Kvhl+Ef4Wn
j6vurW384OPgm+DX4X/gWeOpV9a2XeBT4Dvg9+DR46vn0bY14b3gYfD98Cfw
eAnUXbVNA/gA+AL4UfgreJKE6sW1bTP4UPgy+Bn4B3iqROpltU1beDB8LfwS
/Ds8Q2L18trWHz4evhl+E/4Xnj2JehVt0w0+Fb4Lfh8eM6l6Xm1TG94bPht+
AP4UHj+ZemFt2xA+CL4Qfhz+Gp4suXoJbdMCPgy+An4W/gmeOoW6h7b1hY+G
r4Nfgf+AZ3JRr6BtOsInwLfCb8GjpFTPoW2qwbvDp8N3wx/CY6VSz69t68D7
wufAD8GfwROmVi+ibRrDB8MXw0/A38KTp1EvpW1bwkfAV8LPwz/D06ZV99Q2
7eFj4BvgV+G/4JnTqVfStp3gk+Db4HfgUdOr59K21eE94TPge+GP4HEyqBfQ
NvXg/eDz4IfhL+CJMqoX1bZN4Ba+BH4K/g7ukkm9tLZpDR8JXw2/AP8KT5dZ
3VvbdoCPg2+EX4f/hmfNou6jbbrAJ8N3wO/Co2dVz61tasID4WHwffAn8LjZ
1F21bX34APh8+FH4S3iS7OrFtE0zeBB8Gfw0/AM8ZQ71stq2DTwYvgZ+Cf4N
niGnejlt4w8PhW+G34D/hWfLpV5F23aFT4XvhN+Hx8itnlfb1oL3hs+CH4CH
w+PnUS+kbRrCB8IXwo/BX8OT5lUvoW2bw4fBl8PPwj/CU+dTd9c2vvAQ+Dr4
ZfgPeMb86hW0bQB8AnwL/BbcFFDPoW2rwrvDp8F3wx/AYxVUz6dt6sD7wOfA
D8KfwRO4qhfRto3gg+GL4Cfgb+DJC6mX1DYt4cPhK+Hn4J/haQqre2rbdvAx
8PXwq/Cf8MxF1Ctqm07wifBt8NvwqG7qObVNdXgP+Az4HvgjeOyi6gW0bV14
P/hc+GH4c3iiYupu2qYJfAh8Cfwk/B08RXH10tq2FXwkfBX8AvwLPF0JdS9t
0wE+Fr4Rfg3+G56lpLqPtu0MnwzfDr8Lj1ZKPbe2rQEPhM+E74M/hsctrV5Q
29SH94fPhx+Bv4QnLqNeTNs2hQfBl8JPw9/DU5ZVL6Nt2sBHwdfAL8K/wdO7
q5fTtn7wUPgm+A34H3g2D/XK2qYrfAp8J/wePIaneh5tUyuyXYf8817aZhZ8
PzwcHs9LvZC2bQAfCF8APwZ/BU/qrV5c2zSHD4Uvh5+Bf4SnKqfurm3bwkPg
a+GX4d/hGcurl9c2AfDx8C3wm3BTQT27tqkK7wafBt8FfwCPWVE9n7atDe8D
nw0/CH8KT1BJvbC2aQQfBF8EPw5/A0/mo15S27aAD4evgJ+Df4KnqazuoW3a
wUfD18OvwH/CM1VRr6htO8InwrfCb8OjVFXPqW2rwXvAp8P3wB/CY1dTz69t
6sL7wufCD8GfwxNWV3fTto3hQ+CL4Sfhb+EpaqiX0jat4CPgq+Dn4V/gaWuq
e2nb9vCx8A3wa/Bf8Cy11Ctpm87wSfDt8DvwaLXVc2mbGvCe8JnwvfDH8Dh1
1Atq23rw/vB58CPwF/DEddWLapumcAtfCj8Ffw93qadeRtu2ho+Cr4ZfhH+F
p6+v7q1t/ODj4Jvg1+F/4FkbqFfWtl3gU+A74Pfg0Ruq59G2NeG94GHw/fAn
8HiN1F21TQP4APgC+FH4K3iSxurFtW0z+FD4MvgZ+Ad4qibqZbVNW3gwfC38
Evw7PENT9fLa1h8+Hr4ZfhP+F569mXoVbdMNPhW+C34fHrO5el5tUxveGz4b
fgD+FB6/hXphbdsQPgi+EH4c/hqerKV6CW3TAj4MvgJ+Fv4JnrrVf13+g0f4
Ng/HPf51gWpX3pyr6bjvv3ZZGvD1aUvHR7eK+H03x9dFdm/Hr0T2QMd/RPZQ
xzO1juhgxytEdqjjHSN7iuMTIjvM8a2RPd/xW5G90vEobSJ6s+M5Inuv49Ui
+7jj3SP7ouPTI/u247sjO9zxh5H9zvFYbd0izl93PP+//t/56o7X+dfZnfPU
7T/v+6//3b41xr+2c/71/85Pd/zQv/53+6T4jj9rG7EvseMJff/rbf/OV0/m
eBHfiP0ujjf2jdiXxvHBvhH70ju+2DdiX2bHT/hG7Mvm+FvfiH25HE/eLqLz
OV4qsl0dbxnZbo6PiOwSjq+M7DKOn49sT8c/R3Z5x9O2j2gfxz0ju5rj7SO7
luNjIrue4xsiu5HjVyO7meO/IruV45k7RLSv45Ui28/xTpHdyfFJkd3N8W2R
Hej4ncju63hUv8jvwfFckW0dr+4X8f87bXr6RTyfIMdn+EU8P6fNXr+I5zvU
8Ud+Ec/faRPHP+L9GOZ4Af+IfcMdr+cfsc9p288/Yt8Ix+f5R+xz2h72j9g3
0vEX/hH7nLaJAiL2jXK8aEDk9+14E21j4Uvgp+Dv4C4d1Utrm9bwkfDV8Avw
r/B0ndS9tW0H+Dj4Rvh1+G941s7qPtqmC3wyfAf8Ljx6F/Xc2qYmPBAeBt8H
fwKP21XdVdvWhw+Az4cfhb+EJ+mmXkzbNIMHwZfBT8M/wFN2Vy+rbdvAg+Fr
4Jfg3+AZeqiX0zb+8FD4ZvgN+F94tp7qVbRtV/hU+E74fXiMQPW82rYWvDd8
FvwAPBwev5d6IW3TED4QvhB+DP4anrS3eglt2xw+DL4cfhb+EZ66j7q7tvGF
h8DXwS/Df8Az9lWvoG0D4BPgW+C34Kafeg5tWxXeHT4Nvhv+AB6rv3o+bVMH
3gc+B34Q/gyeYIB6EW3bCD4Yvgh+Av4Gnnygeklt0xI+HL4Sfg7+GZ5mkLqn
tm0HHwNfD78K/wnPPFi9orbpBJ8I3wa/DY86RD2ntqkO7wGfAd8DfwSPbdUL
aNu68H7wufDD8OfwREHqbtqmCXwIfAn8JPwdPMVQ9dLathV8JHwV/AL8Czzd
MHUvbdMBPha+EX4N/hueZbi6j7btDJ8M3w6/C482Qj23tq0BD4TPhO+DP4bH
HaleUNvUh/eHz4cfgb+EJx6lXkzbNoUHwZfCT8Pfw1MGq5fRNm3go+Br4Bfh
3+DpQ9TLaVs/eCh8E/wG/A8822j1ytqmK3wKfCf8HjzGGPU82qYWvBd8Fnw/
PBweb6x6IW3bAD4QvgB+DP4KnnScenFt0xw+FL4cfgb+EZ4qVN1d27aFh8DX
wi/Dv8Mzjlcvr20C4OPhW+A34WaCenZtUxXeDT4Nvgv+AB5zono+bVsb3gc+
G34Q/hSeYJJ6YW3TCD4Ivgh+HP4Gnmyyeklt2wI+HL4Cfg7+CZ5mirqHtmkH
Hw1fD78C/wnPNFW9orbtCJ8I3wq/DY8yTT2ntq0G7wGfDt8DfwiPPV09v7ap
C+8Lnws/BH8OTzhD3U3bNoYPgS+Gn4S/haeYqV5K27SCj4Cvgp+Hf4GnDVP3
0rbt4WPhG+DX4L/gWWapV9I2neGT4Nvhd+DRZqvn0jY14D3hM+F74Y/hceao
F9S29eD94fPgR+Av4InnqhfVNk3hFr4Ufgr+Hu4yT72Mtm0NHwVfDb8I/wpP
P1/dW9v4wcfBN8Gvw//Asy5Qr6xtu8CnwHfA78GjL1TPo21rwnvBw+D74U/g
8Rapu2qbBvAB8AXwo/BX8CSL1Ytr22bwofBl8DPwD/BUS9TLapu28GD4Wvgl
+Hd4hqXq5bWtP3w8fDP8JvwvPPsy9Srapht8KnwX/D485nL1vNqmNrw3fDb8
APwpPP4K9cLatiF8EHwh/Dj8NTzZSvUS2qYFfBh8Bfws/BM89Sp1D23rCx8N
Xwe/Av8Bz7RavYK26QifAN8KvwWPskY9h7apBu8Onw7fDX8Ij7VWPb+2rQPv
C58DPwR/Bk+4Tr2ItmkMHwxfDD8BfwtPvl69lLZtCR8BXwk/D/8MT7tB3VPb
tIePgW+AX4X/gmfeqF5J23aCT4Jvg9+BR92knkvbVof3hM+A74U/gsfZrF5A
29SD94PPgx+Gv4An2qJeVNs2gVv4Evgp+Du4y1b10tqmNXwkfDX8AvwrPN02
dW9t2wE+Dr4Rfh3+G551u7qPtukCnwzfAb8Lj75DPbe2qQkPhIfB98GfwOPu
VHfVtvXhA+Dz4UfhL+FJdqkX0zbN4EHwZfDT8A/wlLvVy2rbNvBg+Br4Jfg3
eIY96uW0jT88FL4ZfgP+F55tr3oVbdsVPhW+E34fHmOfel5tWwveGz4LfgAe
Do+/X72QtmkIHwhfCD8Gfw1PekC9hLZtDh8GXw4/C/8IT31Q3V3b+MJD4Ovg
l+E/4BkPqVfQtgHwCfAt8Ftwc1g9h7atCu8OnwbfDX8Aj3VEPZ+2qQPvA58D
Pwh/Bk9wVL2Itm0EHwxfBD8BfwNPfky9pLZpCR8OXwk/B/8MT3Nc3VPbtoOP
ga+HX4X/hGc+oV5R23SCT4Rvg9+GRz2pnlPbVIf3gM+A74E/gsc+pV5A29aF
94PPhR+GP4cnOq3upm2awIfAl8BPwt/BU5xRL61tW8FHwlfBL8C/wNOdVffS
Nh3gY+Eb4dfgv+FZzqn7aNvO8Mnw7fC78Gjn1XNr2xrwQPhM+D74Y3jcC+oF
tU19eH/4fPgR+Et44ovqxbRtU3gQfCn8NPw9POUl9TLapg18FHwN/CL8Gzz9
ZfVy2tYPHgrfBL8B/wPPdkW9srbpCp8C3wm/B49xVT2PtqkF7wWfBd8PD4fH
u6ZeSNs2gA+EL4Afg7+CJ72uXlzbNIcPhS+Hn4F/hKe6oe6ubdvCQ+Br4Zfh
3+EZb6qX1zYB8PHwLfCbcHNLPbu2qQrvBp8G3wV/AI95Wz2ftq0N7wOfDT8I
fwpPcEe9sLZpBB8EXwQ/Dn8DT3ZXvaS2bQEfDl8BPwf/BE9zT91D27SDj4av
h1+B/4Rnuq9eUdt2hE+Eb4Xfhkd5oJ5T21aD94BPh++BP4THfqieX9vUhfeF
z4Ufgj+HJ3yk7qZtG8OHwBfDT8LfwlM8Vi+lbVrBR8BXwc/Dv8DTPlH30rbt
4WPhG+DX4L/gWcLVK2mbzvBJ8O3wO/BoT9VzaZsa8J7wmfC98MfwOM/UC2rb
evD+8HnwI/AX8MTP1Ytqm6ZwC18KPwV/D3d5oV5G27aGj4Kvhl+Ef4Wnf6nu
rW384OPgm+DX4X/gWV+pV9a2XeBT4Dvg9+DRX6vn0bY14b3gYfD98CfweG/U
XbVNA/gA+AL4UfgreJK36sW1bTP4UPgy+Bn4B3iqd+pltU1beDB8LfwS/Ds8
w3v18trWHz4evhl+E/4Xnv2DehVt0w0+Fb4Lfh8e86N6Xm1TG94bPht+AP4U
Hv+TemFt2xA+CL4Qfhz+Gp7ss3oJbdMCPgy+An4W/gme+ou6h7b1hY+Gr4Nf
gf+AZ/qqXkHbdIRPgG+F34JH+aaeQ9tUg3eHT4fvhj+Ex/qunl/b1oH3hc+B
H4I/gyf8oV5E2zSGD4Yvhp+Av4Un/6leStu2hI+Ar4Sfh3+Gp/2l7qlt2sPH
wDfAr8J/wTP/Vq+kbTvBJ8G3we/Ao/5Rz6Vtq8N7wmfA98IfweP8VS+gberB
+8HnwQ/DX8ATmaLiRbVtE7iFL4Gfgr+Du0RRL61tWsNHwlfDL8C/wtNFVffW
th3g4+Ab4dfhv+FZo6n7aJsu8MnwHfC78OjR1XNrm5rwQHgYfB/8CTxuDHVX
bVsfPgA+H34U/hKeJKZ6MW3TDB4EXwY/Df8ATxlLvay2bQMPhq+BX4J/g2eI
rV5O2/jDQ+Gb4Tfgf+HZ4qhX0bZd4VPhO+H34THiqufVtrXgveGz4Afg4fD4
8dQLaZuG8IHwhfBj8NfwpPHVS2jb5vBh8OXws/CP8NQJ1N21jS88BL4Ofhn+
A54xoXoFbRsAnwDfAr8FN4nUc2jbqvDu8Gnw3fAH8FiJ1fNpmzrwPvA58IPw
Z/AESdSLaNtG8MHwRfAT8Dfw5EnVS2qblvDh8JXwc/DP8DTJ1D21bTv4GPh6
+FX4T3jm5OoVtU0n+ET4NvhteNQU6jm1TXV4D/gM+B74I3hsF/UC2rYuvB98
Lvww/Dk8UUp1N23TBD4EvgR+Ev4OniKVemlt2wo+Er4KfgH+BZ4utbqXtukA
HwvfCL8G/w3PkkbdR9t2hk+Gb4ffhUdLq55b29aAB8JnwvfBH8PjplMvqG3q
w/vD58OPwF/CE6dXL6Ztm8KD4Evhp+Hv4SkzqJfRNm3go+Br4Bfh3+DpM6qX
07Z+8FD4JvgN+B94tkzqlbVNV/gU+E74PXiMzOp5tE0teC/4LPh+eDg8Xhb1
Qtq2AXwgfAH8GPwVPGlW9eLapjl8KHw5/Az8IzxVNnV3bdsWHgJfC78M/w7P
mF29vLYJgI+Hb4HfhJsc6tm1TVV4N/g0+C74A3jMnOr5tG1teB/4bPhB+FN4
glzqhbVNI/gg+CL4cfgbeLLc6iW1bQv4cPgK+Dn4J3iaPOoe2qYdfDR8PfwK
/Cc8U171itq2I3wifCv8NjxKPvWc2rYavAd8OnwP/CE8dn71/NqmLrwvfC78
EPw5PGEBdTdt2xg+BL4YfhL+Fp6ioHopbdMKPgK+Cn4e/gWe1lXdS9u2h4+F
b4Bfg/+CZymkXknbdIZPgm+H34FHK6yeS9vUgPeEz4TvhT+GxymiXlDb1oP3
h8+DH4G/gCd2Uy+qbZrCLXwp/BT8PdylqHoZbdsaPgq+Gn4R/hWevpi6t7bx
g4+Db4Jfh/+BZy2uXlnbdoFPge+A34NHL6GeR9vWhPeCh8H3w5/A45VUd9U2
DeAD4AvgR+Gv4ElKqRfXts3gQ+HL4GfgH+CpSquX1TZt4cHwtfBL8O/wDGXU
y2tbf/h4+Gb4TfhfePay6lW0TTf4VPgu+H14THf1vNqmNrw3fDb8APwpPL6H
emFt2xA+CL4Qfhz+Gp7MU72EtmkBHwZfAT8L/wRP7aXuoW194aPh6+BX4D/g
mbzVK2ibjvAJ8K3wW/Ao5dRzaJtq8O7w6fDd8IfwWOXV82vbOvC+8DnwQ/Bn
8IQV1Itom8bwwfDF8BPwt/DkFdVLaduW8BHwlfDz8M/wtJXUPbVNe/gY+Ab4
VfgveGYf9UrathN8Enwb/A48amX1XNq2OrwnfAZ8L/wRPE4V9QLaph68H3we
/DD8BTxRVfWi2rYJ3MKXwE/B38FdqqmX1jat4SPhq+EX4F/h6aqre2vbDvBx
8I3w6/Df8Kw11H20TRf4ZPgO+F149JrqubVNTXggPAy+D/4EHreWuqu2rQ8f
AJ8PPwp/CU9SW72YtmkGD4Ivg5+Gf4CnrKNeVtu2gQfD18Avwb/BM9RVL6dt
/OGh8M3wG/C/8Gz11Kto267wqfCd8PvwGPXV82rbWvDe8FnwA/BwePwG6oW0
TUP4QPhC+DH4a3jShuoltG1z+DD4cvhZ+Ed46kbq7trGFx4CXwe/DP8Bz9hY
vYK2DYBPgG+B34KbJuo5tG1VeHf4NPhu+AN4rKbq+bRNHXgf+Bz4QfgzeIJm
6kW0bSP4YPgi+An4G3jy5uoltU1L+HD4Svg5+Gd4mhbqntq2HXwMfD38Kvwn
PHNL9YraphN8Inwb/DY8aiv1nNqmOrwHfAZ8D/wRPHZr9QLati68H3wu/DD8
OTxRG3U3bdMEPgS+BH4S/g6eoq16aW3bCj4Svgp+Af4Fns5X3UvbdICPhW+E
X4P/hmdpp+6jbTvDJ8O3w+/Co7VXz61ta8AD4TPh++CP4XE7qBfUNvXh/eHz
4UfgL+GJ/dSLadum8CD4Uvhp+Ht4Sn/1MtqmDXwUfA38IvwbPH2Aejlt6wcP
hW+C34D/gWfrqF5Z23SFT4HvhN+Dx+iknkfb1IL3gs+C74eHw+N1Vi+kbRvA
B8IXwI/BX8GTdlEvrm2aw4fCl8PPwD/CU3VVd9e2beEh8LXwy/Dv8Izd1Mtr
mwD4ePgW+E246a6eXdtUhXeDT4Pvgj+Ax+yhnk/b1ob3gc+GH4Q/hSfoqV5Y
2zSCD4Ivgh+Hv4EnC1QvqW1bwIfDV8DPwT/B0/RS99A27eCj4evhV+A/4Zl6
q1fUth3hE+Fb4bfhUfqo59S21eA94NPhe+AP4bH7qufXNnXhfeFz4Yfgz+EJ
+6m7advG8CHwxfCT8LfwFP3VS2mbVvAR8FXw8/Av8LQD1L20bXv4WPgG+DX4
L3iWgeqVtE1n+CT4dvgdeLRB6rm0TQ14T/hM+F74Y3icweoFtW09eH/4PPgR
+At44iHqRbVNU7iFL4Wfgr+Hu1j1Mtq2NXwUfDX8IvwrPH2Qure28YOPg2+C
X4f/gWcdql5Z23aBT4HvgN+DRx+mnkfb1oT3gofB98OfwOMNV3fVNg3gA+AL
4Efhr+BJRqgX17bN4EPhy+Bn4B/gqUaql9U2beHB8LXwS/Dv8Ayj1MtrW3/4
ePhm+E34X3j2YPUq2qYbfCp8F/w+PGaIel5tUxveGz4bfgD+FB5/tHphbdsQ
Pgi+EH4c/hqebIx6CW3TAj4MvgJ+Fv4Jnnqsuoe29YWPhq+DX4H/gGcap15B
23SET4Bvhd+CRwlVz6FtqsG7w6fDd8MfwmONV8+vbevA+8LnwA/Bn8ETTlAv
om0awwfDF8NPwN/Ck09UL6VtW8JHwFfCz8M/w9NOUvfUNu3hY+Ab4Ffhv+CZ
J6tX0rad4JPg2+B34FGnqOfSttXhPeEz4Hvhj+BxpqoX0Db14P3g8+CH4S/g
iaapF9W2TeAWvgR+Cv4O7jJdvbS2aQ0fCV8NvwD/Ck83Q91b23aAj4NvhF+H
/4Znnanuo226wCfDd8DvwqOHqefWNjXhgfAw+D74E3jcWequ2rY+fAB8Pvwo
/CU8yWz1YtqmGTwIvgx+Gv4BnnKOellt2wYeDF8DvwT/Bs8wV72ctvGHh8I3
w2/A/8KzzVOvom27wqfCd8Lvw2PMV8+rbWvBe8NnwQ/Aw+HxF6gX0jYN4QPh
C+HH4K/hSReql9C2zeHD4MvhZ+Ef4akXqbtrG194CHwd/DL8BzzjYvUK2jYA
PgG+BX4Lbpao59C2VeHd4dPgu+EP4LGWqufTNnXgfeBz4Afhz+AJlqkX0baN
4IPhi+An4G/gyZerl9Q2LeHD4Svh5+Cf4WlWqHtq23bwMfD18Kvwn/DMK9Ur
aptO8InwbfDb8Kir1HNqm+rwHvAZ8D3wR/DYq9ULaNu68H7wufDD8OfwRGvU
3bRNE/gQ+BL4Sfg7eIq16qW1bSv4SPgq+AX4F3i6depe2qYDfCx8I/wa/Dc8
y3p1H23bGT4Zvh1+Fx5tg3pubVsDHgifCd8HfwyPu1G9oLapD+8Pnw8/An8J
T7xJvZi2bQoPgi+Fn4a/h6fcrF5G27SBj4KvgV+Ef4On36JeTtv6wUPhm+A3
4H/g2baqV9Y2XeFT4Dvh9+Axtqnn0Ta14L3gs+D74eHweNvVC2nbBvCB8AXw
Y/BX8KQ71Itrm+bwofDl8DPwj/BUO9XdtW1beAh8Lfwy/Ds84y718tomAD4e
vgV+E252q2fXNlXh3eDT4LvgD+Ax96jn07a14X3gs+EH4U/hCfaqF9Y2jeCD
4Ivgx+Fv4Mn2qZfUti3gw+Er4Ofgn+Bp9qt7aJt28NHw9fAr8J/wTAfUK2rb
jvCJ8K3w2/AoB9Vzattq8B7w6fA98Ifw2IfU82ubuvC+8LnwQ/Dn8ISH1d20
bWP4EPhi+En4W3iKI+qltE0r+Aj4Kvh5+Bd42qPqXtq2PXwsfAP8GvwXPMsx
9UrapjN8Enw7/A482nH1XNqmBrwnfCZ8L/wxPM4J9YLath68P3we/Aj8BTzx
SfWi2qYp3MKXwk/B38NdTqmX0bat4aPgq+EX4V/h6U+re2sbP/g4+Cb4dfgf
eNYz6pW1bRf4FPgO+D149LPqebRtTXgveBh8P/wJPN45dVdt0wA+AL4AfhT+
Cp7kvHpxbdsMPhS+DH4G/gGe6oJ6WW3TFh4MXwu/BP8Oz3BRvby29YePh2+G
34T/hWe/pF5F23SDT4Xvgt+Hx7ysnlfb1Ib3hs+GH4A/hce/ol5Y2zaED4Iv
hB+Hv4Ynu6peQtu0gA+Dr4CfhX+Cp76m7qFtfeGj4evgV+A/4Jmuq1fQNh3h
E+Bb4bfgUW6o59A21eDd4dPhu+EP4bFuqufXtnXgfeFz4Ifgz+AJb6kX0TaN
4YPhi+En4G/hyW+rl9K2LeEj4Cvh5+Gf4WnvqHtqm/bwMfAN8KvwX/DMd9Ur
adtO8EnwbfA78Kj31HNp2+rwnvAZ8L3wR/A499ULaJt68H7wefDD8BfwRA/U
i2rbJnALXwI/BX8Hd3moXlrbtIaPhK+GX4B/had7pO6tbTvAx8E3wq/Df8Oz
Plb30TZd4JPhO+B34dGfqOfWNjXhgfAw+D74E3jccHVXbVsfPgA+H34U/hKe
5Kl6MW3TDB4EXwY/Df8AT/lMvay2bQMPhq+BX4J/g2d4rl5O2/jDQ+Gb4Tfg
f+HZXqhX0bZd4VPhO+H34TFequfVtrXgveGz4Afg4fD4r9QLaZuG8IHwhfBj
8NfwpK/VS2jb5vBh8OXws/CP8NRv1N21jS88BL4Ofhn+A57xrXoFbRsAnwDf
Ar8FN+/Uc2jbqvDu8Gnw3fAH8Fjv1fNpmzrwPvA58IPwZ/AEH9SLaNtG8MHw
RfAT8Dfw5B/VS2qblvDh8JXwc/DP8DSf1D21bTv4GPh6+FX4T3jmz+oVtU0n
+ET4NvhteNQv6jm1TXV4D/gM+B74I3jsr+oFtG1deD/4XPhh+HN4om/qbtqm
CXwIfAn8JPwdPMV39dLathV8JHwV/AL8CzzdD3UvbdMBPha+EX4N/hue5ae6
j7btDJ8M3w6/C4/2Sz23tq0BD4TPhO+DP4bH/a1eUNvUh/eHz4cfgb+EJ/6j
XkzbNoUHwZfCT8Pfw1P+VS+jbdrAR8HXwC/Cv8HTm2Li5bStHzwUvgl+A/4H
ni2KemVt0xU+Bb4Tfg8eI6p6Hm1TC94LPgu+Hx4OjxdNvZC2bQAfCF8APwZ/
BU8aXb24tmkOHwpfDj8D/whPFUPdXdu2hYfA18Ivw7/DM8ZUL69tAuDj4Vvg
N+Emlnp2bVMV3g0+Db4L/gAeM7Z6Pm1bG94HPht+EP4UniCOemFt0wg+CL4I
fhz+Bp4srnpJbdsCPhy+An4O/gmeJp66h7ZpBx8NXw+/Av8JzxRfvaK27Qif
CN8Kvw2PkkA9p7atBu8Bnw7fA38Ij51QPb+2qQvvC58LPwR/Dk+YSN1N2zaG
D4Evhp+Ev4WnSKxeStu0go+Ar4Kfh3+Bp02i7qVt28PHwjfAr8F/wbMkVa+k
bTrDJ8G3w+/AoyVTz6VtasB7wmfC98Ifw+MkVy+obevB+8PnwY/AX8ATp1Av
qm2awi18KfwU/D3cxUW9jLZtDR8FXw2/CP8KT59S3Vvb+MHHwTfBr8P/wLOm
Uq+sbbvAp8B3wO/Bo6dWz6Nta8J7wcPg++FP4PHSqLtqmwbwAfAF8KPwV/Ak
adWLa9tm8KHwZfAz8A/wVOnUy2qbtvBg+Fr4Jfh3eIb06uW1rT98PHwz/Cb8
Lzx7BvUq2qYbfCp8F/w+PGZG9bzapja8N3w2/AD8KTx+JvXC2rYhfBB8Ifw4
/DU8WWb1EtqmBXwYfAX8LPwTPHUWdQ9t6wsfDV8HvwL/Ac+UVb2CtukInwDf
Cr8Fj5JNPYe2qQbvDp8O3w1/CI+VXT2/tq0D7wufAz8EfwZPmEO9iLZpDB8M
Xww/AX8LT55TvZS2bQkfAV8JPw//DE+bS91T27SHj4FvgF+F/4Jnzq1eSdt2
gk+Cb4PfgUfNo55L21aH94TPgO+FP4LHyateQNvUg/eDz4Mfhr+AJ8qnXlTb
NoFb+BL4Kfg7uEt+9dLapjV8JHw1/AL8KzxdAXVvbdsBPg6+EX4d/huetaC6
j7bpAp8M3wG/C4/uqp5b29SEB8LD4PvgT+BxC6m7atv68AHw+fCj8JfwJIXV
i2mbZvAg+DL4afgHeMoi6mW1bRt4MHwN/BL8GzyDm3o5beMPD4Vvht+A/4Vn
K6peRdt2hU+F74Tfh8copp5X29aC94bPgh+Ah8PjF1cvpG0awgfCF8KPwV/D
k5ZQL6Ftm8OHwZfDz8I/wlOXVHfXNr7wEPg6+GX4D3jGUuoVtG3A/+//AwRT
q20=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.9096*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.9077856*^9, 
        FormBox[
         StyleBox["\"Nov\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9103776*^9, 
        FormBox[
         StyleBox["\"Dec\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9157344*^9, 
        FormBox[
         StyleBox["\"Feb\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.91824*^9, 
        FormBox[
         StyleBox["\"Mar\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9209184*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9235104*^9, 
        FormBox[
         StyleBox["\"May\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.9077856*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9103776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9157344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.91824*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9209184*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9235104*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{598.2, Automatic},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.9096*^9, 3.9207453*^9}, {0, 12226.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.926615931264453*^9, 3.926615936894661*^9}, 
   3.9266160088324*^9, 3.9266168547929573`*^9, 3.9266215355753827`*^9},
 CellLabel->"Out[73]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
KfdIWX+kf8gKUOJ9be4PzJa//r9HrTH/AtX76ws=\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"f5bc91a3-4cee-4900-8359-caf38ec066aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockSeason.mx\>\""}], ",", "heatStockSeason"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266136076850977`*^9, 3.9266136303391037`*^9}, {
  3.9266158604998035`*^9, 3.9266158647230654`*^9}, {3.926616866466845*^9, 
  3.926616867269799*^9}},
 CellLabel->
  "In[6463]:=",ExpressionUUID->"6c5c0c9b-388e-4d64-be2b-90f621b2363d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockSeason", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockSeason.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266142869772644`*^9, 3.9266142895705748`*^9}, {
   3.9266158473469973`*^9, 3.9266158487847815`*^9}, 3.926616054263191*^9, {
   3.926616868933217*^9, 3.926616870675585*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7bc67be2-8b09-4c51-8548-2c981d8a68c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockDaily", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "dailyCumulative", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dailyCumulative", "=", 
           RowBox[{"SelectElementsByDateRange", "[", 
            RowBox[{
             RowBox[{"heatStockSeason", "[", 
              RowBox[{"[", "cycle", "]"}], "]"}], ",", 
             RowBox[{"DateExtend", "[", 
              RowBox[{"day", ",", "0", ",", "0"}], "]"}], ",", 
             RowBox[{"DateExtend", "[", 
              RowBox[{"day", ",", "23", ",", "59"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"dailyCumulative", "!=", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Transpose", "[", "dailyCumulative", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Transpose", "[", "dailyCumulative", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"dailyCumulative", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "}"}], "]"}], ",", "\[IndentingNewLine]", "None"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266163402810307`*^9, 3.9266163501961584`*^9}, {
   3.9266163865632133`*^9, 3.9266163915704994`*^9}, {3.9266164629159975`*^9, 
   3.9266164690436983`*^9}, 3.9266165054914827`*^9, {3.9266165424038415`*^9, 
   3.9266165846751127`*^9}, {3.9266166658618402`*^9, 
   3.9266167481625175`*^9}, {3.926616874787796*^9, 3.9266168864833403`*^9}, {
   3.926621504133845*^9, 3.926621510694805*^9}, {3.9266635306210155`*^9, 
   3.9266635309572525`*^9}, {3.926685147742281*^9, 3.926685182937957*^9}, {
   3.9266852295230136`*^9, 3.9266852379074044`*^9}, 3.926686422635088*^9},
 CellLabel->
  "In[255]:=",ExpressionUUID->"ced9cfd6-200b-4855-b97a-49afa0f8e6b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockDaily.mx\>\""}], ",", "heatStockDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.9266165462932653`*^9, {3.926616754547722*^9, 3.926616765284571*^9}, {
   3.926616895412611*^9, 3.9266169002768297`*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"0367e002-7973-41a1-8eea-fa3f3f2e5c5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926616919779519*^9, 3.9266169243869925`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"3fd98778-13e6-4031-9325-c701a544575b"]
}, Closed]],

Cell[CellGroupData[{

Cell["g\[AAcute]z", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613702833259*^9}, {
  3.9266143158576007`*^9, 3.9266143159695*^9}, {3.9266178619871006`*^9, 
  3.926617862244105*^9}},ExpressionUUID->"b3ebb81b-bc55-401d-bfb7-\
a225e4d5ebcf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasDataDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DateRange", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2023", ",", "11", ",", "23"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "12", ",", "6"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DateRange", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2023", ",", "12", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266169457948866`*^9, 3.9266169535078316`*^9}, {
  3.9266192689647274`*^9, 3.92661926899152*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"69a0dc10-205b-48b0-8289-936444c069db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasStockPre", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
         "\"\<\\\\gas_stock.csv\>\""}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToStringWithDateCorrection", ",", 
             RowBox[{
              RowBox[{"DateList", "[", "#", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<-\>\""}], "]"}], "&"}], ",", "gasDataDays"}], "]"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266112523850965`*^9, 3.926611305416107*^9}, 
   3.9266113732650204`*^9, {3.9266137230424113`*^9, 3.9266137231861744`*^9}, 
   3.9266140542599335`*^9, {3.9266140929632587`*^9, 3.9266141100183673`*^9}, {
   3.9266141408514905`*^9, 3.926614146834378*^9}, {3.9266169668374333`*^9, 
   3.926616970275608*^9}, {3.9266170307869864`*^9, 3.92661703104397*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"8130f87f-511b-41e4-9af3-71b7679e2a64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasStockDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"gasDataDays", ",", "day"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dayN", ",", "dayDateList"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dayN", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"gasDataDays", ",", "day"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dayDateList", "=", 
           RowBox[{"DateList", "[", 
            RowBox[{"gasDataDays", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"dayDateList", "[", 
               RowBox[{"[", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
              RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
               RowBox[{"gasStockLine", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                RowBox[{"gasStockLine", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"gasStockLine", ",", 
              RowBox[{"gasStockPre", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "None"}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266137283232765`*^9, 3.926613802402179*^9}, 
   3.9266138785485935`*^9, {3.926614243539416*^9, 3.926614244066394*^9}, {
   3.926617039270875*^9, 3.9266170551730223`*^9}, {3.9266181204521112`*^9, 
   3.926618122742756*^9}, 3.926686502138444*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"738eddef-06bc-4837-a52c-42e103b61fc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\gasStockDaily.mx\>\""}], ",", "gasStockDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266136076850977`*^9, 3.9266136303391037`*^9}, {
  3.92661427771581*^9, 3.9266142800176954`*^9}, {3.92661699013202*^9, 
  3.926616999571488*^9}, {3.926619296389406*^9, 3.9266193017978706`*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"467f7e0e-790c-4c26-99be-752ea6bbb338"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasStockDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\gasStockDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92661429995385*^9, 3.926614304978283*^9}, {
  3.9266169853148775`*^9, 3.9266169858754807`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"ed56c12a-02e9-432a-805f-7e171ed307f5"]
}, Closed]],

Cell[CellGroupData[{

Cell["szob\[AAcute]k h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klete", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613702833259*^9}, {
  3.9266143158576007`*^9, 3.926614335121397*^9}, {3.926617872275499*^9, 
  3.9266178743708544`*^9}},ExpressionUUID->"f810bbdb-380c-45d0-9535-\
aa12aa79f0a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTempDataDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266171509159327`*^9, 3.9266171600229588`*^9}, {
   3.926617206831463*^9, 3.9266172077479897`*^9}, 3.926618574244951*^9, {
   3.926619326597104*^9, 3.9266193266608715`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"79bbef55-f522-4eaa-b0f4-c5eb60f59181"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTempsPre", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
          "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
           "\"\<\\\\room_\>\"", "<>", 
           RowBox[{"ToString", "[", "room", "]"}], "<>", 
           "\"\<_temps.csv\>\""}], "]"}], "\[IndentingNewLine]", "&"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringRiffle", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"ToStringWithDateCorrection", ",", 
               RowBox[{
                RowBox[{"DateList", "[", "#", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
             "\"\<-\>\""}], "]"}], "&"}], ",", "roomTempDataDays"}], "]"}]}], 
       "]"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926615631891167*^9, 3.9266156338455324`*^9}, {
  3.9266157873949575`*^9, 3.926615797618867*^9}, {3.9266172210770082`*^9, 
  3.9266172350757737`*^9}, {3.926617269076804*^9, 3.9266172987561703`*^9}, {
  3.9266173545631585`*^9, 3.9266173977161045`*^9}, {3.9266175729022317`*^9, 
  3.9266175786441193`*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"cc13a883-ffde-4b20-bc5e-e0937714f4a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTempsDaily", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"roomTempDataDays", ",", "day"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Module", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dayN", ",", "dayDateList"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"dayN", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"roomTempDataDays", ",", "day"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"dayDateList", "=", 
             RowBox[{"DateList", "[", 
              RowBox[{"roomTempDataDays", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Dimensions", "[", 
                RowBox[{
                 RowBox[{"roomTempsPre", "[", 
                  RowBox[{"[", "room", "]"}], "]"}], "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
               RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Transpose", "[", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"dayDateList", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
                   RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
                    RowBox[{"roomTempLine", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                    "4"}], "]"}], ",", 
                    RowBox[{"roomTempLine", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "5"}], "]"}], "]"}]}], "}"}], "]"}]}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"roomTempLine", ",", 
                   RowBox[{
                    RowBox[{"roomTempsPre", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}], 
               "]"}], ",", "\[IndentingNewLine]", "None"}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ",", "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.92668665011795*^9, 3.926686689221815*^9}, 
   3.926687206224214*^9, {3.9266881573174744`*^9, 3.9266881733974895`*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"b2f5234f-b149-4fdc-85f0-68a1a562f1fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\roomTempsDaily.mx\>\""}], ",", "roomTempsDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266185097493625`*^9, 3.926618513173443*^9}, {
  3.9266193353168545`*^9, 3.9266193443889413`*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"2571d7d7-809f-461a-a36e-5951c92619f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTempsDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\roomTempsDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92661429995385*^9, 3.926614304978283*^9}, {
  3.9266169853148775`*^9, 3.9266169858754807`*^9}, {3.9266185051101465`*^9, 
  3.926618525444665*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"b54f7364-1ff6-4e58-bbc9-ebcc6805e29a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"setTempLowForAtLeastOneRoomDaily", "=", 
   RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"roomTempDataDays", ",", "\[IndentingNewLine]", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", "#", "]"}], "<", "0"}], "&"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", "NumberQ"}], "]"}], 
               "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"roomTemp", ",", 
                RowBox[{"roomTempsDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}]}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926618684916847*^9, 3.9266189171884785`*^9}, {
  3.9266189585988894`*^9, 3.9266189674308205`*^9}, {3.926619031462741*^9, 
  3.926619193302089*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"c8a5bb37-fa7a-44aa-8a41-0386add6e761"]
}, Closed]],

Cell[CellGroupData[{

Cell["f\[UDoubleAcute]t\[EAcute]si \[AAcute]llapot", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613702833259*^9}, {
  3.9266143158576007`*^9, 3.9266143250095854`*^9}, {3.926617867203188*^9, 
  3.9266178704359818`*^9}},ExpressionUUID->"ed858940-0571-40f6-ab6b-\
139142a93738"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStateDataDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266171509159327`*^9, 3.9266171600229588`*^9}, {
  3.926619249397081*^9, 3.926619249492879*^9}, {3.9266193236212234`*^9, 
  3.9266193238765535`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"bc56cc17-b068-4eff-bf8c-f5adab2e4f3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStatePre", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
         "\"\<\\\\heating_state.csv\>\""}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToStringWithDateCorrection", ",", 
             RowBox[{
              RowBox[{"DateList", "[", "#", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<-\>\""}], "]"}], "&"}], ",", "heatingStateDataDays"}], 
       "]"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266112523850965`*^9, 3.926611305416107*^9}, 
   3.9266113732650204`*^9, {3.9266137230424113`*^9, 3.9266137231861744`*^9}, 
   3.9266140542599335`*^9, {3.9266140929632587`*^9, 3.9266141100183673`*^9}, {
   3.9266141408514905`*^9, 3.926614146834378*^9}, {3.926614437107329*^9, 
   3.9266144644653196`*^9}, 3.926615619795594*^9, {3.9266171660049496`*^9, 
   3.9266171697479734`*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"bbebe451-7201-4ad7-b5b4-4c60b715e6ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStateDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"heatingStateDataDays", ",", "day"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dayN", ",", "dayDateList"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dayN", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"heatingStateDataDays", ",", "day"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dayDateList", "=", 
           RowBox[{"DateList", "[", 
            RowBox[{"heatingStateDataDays", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Dimensions", "[", 
              RowBox[{"heatingStatePre", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dayDateList", "[", 
                  RowBox[{"[", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
                 RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
                  RowBox[{"heatingStateLine", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                    "5"}], "]"}], ",", 
                   RowBox[{"heatingStateLine", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "6"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"heatingStateLine", ",", 
                 RowBox[{"heatingStatePre", "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
            ",", "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266116112514324`*^9, 3.9266116188654027`*^9}, {
   3.926611743456129*^9, 3.9266117684806967`*^9}, {3.9266118120005856`*^9, 
   3.9266119265780196`*^9}, {3.926611969040595*^9, 3.9266120291735673`*^9}, {
   3.9266120624339485`*^9, 3.9266120724812126`*^9}, {3.9266121172819843`*^9, 
   3.926612122290862*^9}, {3.926613199377989*^9, 3.926613230864958*^9}, 
   3.9266168193009434`*^9, {3.9266195968052197`*^9, 3.926619628277978*^9}, {
   3.926619667829544*^9, 3.926619756565898*^9}, {3.9266869982931004`*^9, 
   3.9266870542198133`*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"665ad3a5-a1cc-4a37-ab2f-13eabc8e80e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"heatingStateDaily", ",", "None"}], "]"}]], "Input",
 CellLabel->
  "In[6699]:=",ExpressionUUID->"f78a1b69-7636-42b5-93ae-2b8543e54e2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "56", "}"}], ",", 
   RowBox[{"{", "57", "}"}], ",", 
   RowBox[{"{", "96", "}"}], ",", 
   RowBox[{"{", "97", "}"}], ",", 
   RowBox[{"{", "110", "}"}], ",", 
   RowBox[{"{", "111", "}"}], ",", 
   RowBox[{"{", "119", "}"}], ",", 
   RowBox[{"{", "120", "}"}], ",", 
   RowBox[{"{", "138", "}"}], ",", 
   RowBox[{"{", "145", "}"}], ",", 
   RowBox[{"{", "146", "}"}], ",", 
   RowBox[{"{", "152", "}"}], ",", 
   RowBox[{"{", "153", "}"}], ",", 
   RowBox[{"{", "154", "}"}], ",", 
   RowBox[{"{", "157", "}"}], ",", 
   RowBox[{"{", "158", "}"}], ",", 
   RowBox[{"{", "159", "}"}], ",", 
   RowBox[{"{", "160", "}"}], ",", 
   RowBox[{"{", "161", "}"}], ",", 
   RowBox[{"{", "162", "}"}], ",", 
   RowBox[{"{", "163", "}"}], ",", 
   RowBox[{"{", "167", "}"}], ",", 
   RowBox[{"{", "168", "}"}], ",", 
   RowBox[{"{", "173", "}"}], ",", 
   RowBox[{"{", "174", "}"}], ",", 
   RowBox[{"{", "175", "}"}], ",", 
   RowBox[{"{", "179", "}"}], ",", 
   RowBox[{"{", "180", "}"}], ",", 
   RowBox[{"{", "181", "}"}], ",", 
   RowBox[{"{", "182", "}"}], ",", 
   RowBox[{"{", "183", "}"}], ",", 
   RowBox[{"{", "184", "}"}], ",", 
   RowBox[{"{", "185", "}"}], ",", 
   RowBox[{"{", "186", "}"}], ",", 
   RowBox[{"{", "187", "}"}], ",", 
   RowBox[{"{", "188", "}"}], ",", 
   RowBox[{"{", "189", "}"}], ",", 
   RowBox[{"{", "190", "}"}], ",", 
   RowBox[{"{", "191", "}"}], ",", 
   RowBox[{"{", "192", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9266205799836254`*^9},
 CellLabel->
  "Out[6699]=",ExpressionUUID->"8e43aac1-6e05-4998-8d77-e876a4910335"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStateNoDataDays", "=", 
   RowBox[{"heatingStateDataDays", "[", 
    RowBox[{"[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{"heatingStatePre", ",", "$Failed"}], "]"}], "]"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926614469794782*^9, 3.9266144853475637`*^9}, 
   3.9266171757172875`*^9, {3.9266194888221765`*^9, 3.926619504597228*^9}, {
   3.9266198614617167`*^9, 3.926619865124598*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"6504f392-2100-4f9e-8e26-77418e816665"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noHeatingDays", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Select", "[", 
      RowBox[{"setTempLowForAtLeastOneRoomDaily", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "==", "False"}], "&"}]}], "]"}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266192080084777`*^9, 3.9266192566456366`*^9}, 
   3.9266194979583597`*^9},
 CellLabel->
  "In[310]:=",ExpressionUUID->"7bcd2361-f0f9-4393-b631-c06b2dd52d0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dayDateList", ",", "minutes", ",", "blankDayData", ",", 
       "dayPosition"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dayDateList", "=", 
       RowBox[{"DateList", "[", "day", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minutes", "=", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"DateObject", "[", 
           RowBox[{"Join", " ", "[", 
            RowBox[{
             RowBox[{"dayDateList", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
             RowBox[{"MinuteOfDayToHourAndMinuteList", "[", "#", "]"}]}], 
            "]"}], "]"}], "&"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"heatingStatePre", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"blankDayData", "=", 
       RowBox[{"ConstantArray", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"minutes", ",", "\[IndentingNewLine]", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", "288"}], "]"}]}], "\[IndentingNewLine]", "}"}],
           "\[IndentingNewLine]", "]"}], ",", "5"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dayPosition", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"seasonDays", ",", "day"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"heatingStateDaily", "[", 
        RowBox[{"[", "dayPosition", "]"}], "]"}], "=", "blankDayData"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"day", ",", 
     RowBox[{"Intersection", "[", 
      RowBox[{"heatingStateNoDataDays", ",", "noHeatingDays"}], "]"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9266201678617043`*^9, 3.926620182277969*^9}, {
  3.9266203095413637`*^9, 3.9266204391252546`*^9}, {3.926620475045656*^9, 
  3.9266205542175293`*^9}, {3.9266872504721985`*^9, 3.926687251184165*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"d3081ea0-ff3a-40db-b2bb-db8bf977a4a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9266205183898106`*^9, {3.9266205500103846`*^9, 3.9266205821824245`*^9}, 
   3.9266872743461914`*^9, 3.9266882016883674`*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"6157c357-46cb-41f0-849c-b26d4189c3f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"heatingStateDaily", ",", "None"}], "]"}]], "Input",
 CellChangeTimes->{{3.926620562596945*^9, 3.9266205662774963`*^9}},
 CellLabel->
  "In[313]:=",ExpressionUUID->"32571e2b-a8dc-4207-abcc-65b4bc546030"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "95", "}"}], ",", 
   RowBox[{"{", "96", "}"}], ",", 
   RowBox[{"{", "109", "}"}], ",", 
   RowBox[{"{", "110", "}"}], ",", 
   RowBox[{"{", "153", "}"}], ",", 
   RowBox[{"{", "162", "}"}], ",", 
   RowBox[{"{", "166", "}"}], ",", 
   RowBox[{"{", "167", "}"}], ",", 
   RowBox[{"{", "172", "}"}], ",", 
   RowBox[{"{", "174", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9266205665669584`*^9, 3.9266872779116583`*^9, 
  3.926688203883345*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"b416eaaa-76cc-4fb5-b056-4fd48afc4734"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatingStateDaily.mx\>\""}], ",", "heatingStateDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266185097493625`*^9, 3.926618513173443*^9}, {
  3.9266193353168545`*^9, 3.9266193443889413`*^9}, {3.9266205926465263`*^9, 
  3.92662059349382*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"9f282319-065d-47ac-814a-497007c99560"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStateDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatingStateDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92661429995385*^9, 3.926614304978283*^9}, {
  3.9266169853148775`*^9, 3.9266169858754807`*^9}, {3.9266185051101465`*^9, 
  3.926618525444665*^9}, {3.926620594632536*^9, 3.9266205956705275`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"72d5c33d-2b5a-4711-9873-f45cc90f8ba6"]
}, Closed]],

Cell[CellGroupData[{

Cell["egy\[EAcute]b", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613702833259*^9}, {
  3.9266143158576007`*^9, 3.926614339042627*^9}, {3.9266178787878294`*^9, 
  3.926617879138852*^9}},ExpressionUUID->"555c9be9-0539-44ac-981e-\
49388949a4af"],

Cell[CellGroupData[{

Cell["k\[UDoubleDot]ls\[ODoubleAcute] \
h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266206855247974`*^9, 
   3.9266206965962825`*^9}, {3.926652478717061*^9, 
   3.9266524805899935`*^9}},ExpressionUUID->"d9447d53-23c1-491e-83f5-\
ca06a0b0fcfe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTempDataDays", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"DateObject", ",", 
       RowBox[{"DateRange", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2023", ",", "11", ",", "23"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DateObject", "[", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0."}], 
         "}"}], "]"}], ",", 
       RowBox[{"DateObject", "[", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "3", ",", "4", ",", "0", ",", "0", ",", "0."}], 
         "}"}], "]"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266169457948866`*^9, 3.9266169535078316`*^9}, {
  3.9266192689647274`*^9, 3.92661926899152*^9}, {3.926651424414261*^9, 
  3.9266514436305523`*^9}, {3.926651483663865*^9, 3.9266514853278155`*^9}, {
  3.9266516471502724`*^9, 3.926651676254605*^9}, {3.926651739362186*^9, 
  3.926651770864957*^9}, {3.9266518019528103`*^9, 3.92665180569635*^9}, {
  3.9266523191674166`*^9, 3.9266523214562206`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8ec5de7d-2470-4833-add2-e4b0006423a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTempPre", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
         "\"\<\\\\external_temp.csv\>\""}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToStringWithDateCorrection", ",", 
             RowBox[{
              RowBox[{"DateList", "[", "#", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<-\>\""}], "]"}], "&"}], ",", "externalTempDataDays"}], 
       "]"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266112523850965`*^9, 3.926611305416107*^9}, 
   3.9266113732650204`*^9, {3.9266137230424113`*^9, 3.9266137231861744`*^9}, 
   3.9266140542599335`*^9, {3.9266140929632587`*^9, 3.9266141100183673`*^9}, {
   3.9266141408514905`*^9, 3.926614146834378*^9}, {3.9266169668374333`*^9, 
   3.926616970275608*^9}, {3.9266170307869864`*^9, 3.92661703104397*^9}, {
   3.926651453840802*^9, 3.92665148830377*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"35abaf3e-1537-47fd-83b1-5f2d5920a746"],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTempDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"externalTempDataDays", ",", "day"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dayN", ",", "dayDateList"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dayN", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"externalTempDataDays", ",", "day"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dayDateList", "=", 
           RowBox[{"DateList", "[", 
            RowBox[{"externalTempDataDays", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"dayDateList", "[", 
               RowBox[{"[", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
              RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
               RowBox[{"externalTempLine", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                RowBox[{"externalTempLine", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"externalTempLine", ",", 
              RowBox[{"externalTempPre", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "None"}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266137283232765`*^9, 3.926613802402179*^9}, 
   3.9266138785485935`*^9, {3.926614243539416*^9, 3.926614244066394*^9}, {
   3.926617039270875*^9, 3.9266170551730223`*^9}, {3.9266181204521112`*^9, 
   3.926618122742756*^9}, 3.926686502138444*^9, {3.926687618511439*^9, 
   3.9266876285040445`*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"e82c2067-a019-496d-ab96-a9f0fa0697b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\externalTempDaily.mx\>\""}], ",", "externalTempDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266136076850977`*^9, 3.9266136303391037`*^9}, {
  3.92661427771581*^9, 3.9266142800176954`*^9}, {3.92661699013202*^9, 
  3.926616999571488*^9}, {3.926619296389406*^9, 3.9266193017978706`*^9}, {
  3.9266524654239945`*^9, 3.9266524660950127`*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"5eb3a342-4721-42eb-990a-beba10f1c6d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTempDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\externalTempDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92661429995385*^9, 3.926614304978283*^9}, {
  3.9266169853148775`*^9, 3.9266169858754807`*^9}, {3.9266524684981017`*^9, 
  3.926652469328288*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"445a4bcf-659b-4088-b51f-fcce5436789d"]
}, Closed]],

Cell[CellGroupData[{

Cell["k\[ODoubleDot]rnyezeti v\[AAcute]ltoz\[OAcute]k", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266206855247974`*^9, 
   3.9266206965962825`*^9}},ExpressionUUID->"1120db96-e918-4e7a-a4d7-\
0b6f5fd14adb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"energyContentInGasPerCubicMeter", "=", 
    RowBox[{"1000", " ", 
     RowBox[{"34", "/", "3600"}]}]}], ";"}], 
  RowBox[{"(*", "kWh", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gasPricePerCubicMeter", "=", "700"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9097626550302105`*^9, 3.909762694033764*^9}, {
  3.9097627471065674`*^9, 3.9097627493620896`*^9}, {3.926620805813594*^9, 
  3.9266208158466434`*^9}, {3.9268592576893387`*^9, 3.92685926907841*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"c4a06059-452b-4f1a-839b-1cd5f5f1f7ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"airSpecificMass", "=", "1.2"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"kg", "/", "m3"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926691028054305*^9, 3.9266910342079153`*^9}, {
  3.926691064969391*^9, 3.926691073891507*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9e0cac80-a8b7-4062-ad7e-bfcfe631338b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"airSpecificHeatCapacity", "=", "1012"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"J", "/", "kg"}], "/", "K"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926691028054305*^9, 3.9266910342079153`*^9}, {
  3.926691064969391*^9, 3.926691073891507*^9}, {3.9266911830050926`*^9, 
  3.926691193510194*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ff0df781-06aa-4b87-bdcb-35863fe27b87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<ovi\>\"", ",", "\"\<PK\>\"", ",", "\"\<SZGK\>\"", ",", 
     "\"\<G\[OAcute]lyairoda\>\"", ",", "\"\<M\[EAcute]rce\>\"", ",", 
     "\"\<vend\[EAcute]gt\[EAcute]r\>\"", ",", "\"\<kisterem\>\"", ",", 
     "\"\<traf\[OAcute]h\[AAcute]z\>\"", ",", "\"\<Oktopusz\>\"", ",", 
     "\"\<Lahmacun\>\"", ",", 
     "\"\<Kaz\[AAcute]n k\[ODoubleDot]z\[ODoubleDot]s terek\>\"", ",", 
     "\"\<m\[UDoubleAcute]hely\>\""}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926662892368147*^9, 3.926662894491234*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"88d6de6d-987d-463f-98a5-deec46c669b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsWithTempData", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "9",
      ",", "10"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926696394692597*^9, 3.9266964259282703`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"253327b9-6ce3-47ad-afde-336b56ef892c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomToCycle", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4",
      ",", "1", ",", "2"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266628667302136`*^9, 3.926662869489078*^9}, {
  3.9266629113665624`*^9, 3.926662927337064*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"6b119413-da67-4373-bd4c-db76031b0eb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomAreas", "=", 
   RowBox[{"{", 
    RowBox[{
    "53", ",", "26", ",", "29", ",", "26.5`", ",", "72", ",", "100", ",", 
     "60.25`", ",", "240", ",", "66", ",", "24", ",", "50", ",", "26.5`"}], 
    "}"}]}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266555877821455`*^9, 3.926655608272274*^9}, {
  3.926656276401675*^9, 3.9266562773529806`*^9}, {3.926656341313672*^9, 
  3.92665636821037*^9}, {3.9266628797289715`*^9, 3.9266629010880775`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"19c12464-61dd-4ad0-a322-32b3cc0de695"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomExternalWallLength", "=", 
   RowBox[{"{", 
    RowBox[{
    "9.8", ",", "4.8", ",", "5.4", ",", "6", ",", "10.2", ",", "15.4", ",", 
     "10.2", ",", "25", ",", "12.5", ",", "5.2", ",", "None", ",", "2.5"}], 
    "}"}]}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926656428900286*^9, 3.926656453425316*^9}, {
   3.9266564848487597`*^9, 3.9266565059064207`*^9}, {3.9266565887213764`*^9, 
   3.9266566032815647`*^9}, {3.926656648801818*^9, 3.9266566552815337`*^9}, 
   3.926656732225565*^9, {3.9266567972020397`*^9, 3.926656797874097*^9}, {
   3.9266568711233573`*^9, 3.9266568914742966`*^9}, {3.9266569536818314`*^9, 
   3.9266569881294355`*^9}, {3.9266573062607813`*^9, 3.926657326545518*^9}, 
   3.9266629061984158`*^9, {3.926694681749116*^9, 3.9266946826820188`*^9}, {
   3.9266947280991845`*^9, 3.92669473056773*^9}, {3.926694774800956*^9, 
   3.9266948352687416`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"a29d97dc-d539-415e-8682-82344c9d3cd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeight", "=", "3.2"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926656997093631*^9, 3.926657008865625*^9}, {
  3.9266909636418743`*^9, 3.926690965175767*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"ba581355-8eb6-47d4-9302-2c543daeabb1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"radiatorHeight", "=", "0.6"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"roomRadiatorLength", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", " ", "140"}], ",", "280", ",", "300", ",", "180", ",", 
      RowBox[{"540", "+", "150"}], ",", 
      RowBox[{"6", " ", "120"}], ",", 
      RowBox[{"4", " ", "120"}], ",", "0", ",", 
      RowBox[{"2", " ", "140"}], ",", "100"}], "}"}], "/", "100"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266941207964993`*^9, 3.9266941289916735`*^9}, 
   3.926694186669779*^9, {3.926694397199473*^9, 3.926694398346486*^9}, {
   3.926694469817211*^9, 3.926694471581032*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"05b329d4-5029-469c-ac84-3cc15b321b18"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["elemz\[EAcute]s", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 3.9266096544308543`*^9}, {
   3.926609698670888*^9, 3.92660970001445*^9}, {3.9266098156146207`*^9, 
   3.9266098168798327`*^9}, 
   3.926611286329875*^9},ExpressionUUID->"dc9922e6-fbdd-44c1-a252-\
256656c0538f"],

Cell[CellGroupData[{

Cell["jegyzetek", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266909804932117`*^9, 
   3.9266909811886635`*^9}},ExpressionUUID->"22e03067-1978-4f33-9737-\
f65e517786f1"],

Cell["\<\
\[UAcute]gy \[EAcute]rdemes tekinteni, mint egy c\[EAcute]l fel\[EAcute] \
hajtott rendszert

kontrollv\[AAcute]ltoz\[OAcute]k:
\t- f\[ODoubleAcute] kontrollv\[AAcute]ltoz\[OAcute]k: fogyasztott \
g\[AAcute]z \[EAcute]s kik\[UDoubleDot]ld\[ODoubleDot]tt h\[ODoubleAcute]
\t\t> korrell\[AAcute]lt kontrollv\[AAcute]ltoz\[OAcute]k: f\[UDoubleAcute]t\
\[EAcute]si \[AAcute]llapot
\t- nem ir\[AAcute]ny\[IAcute]tott kontrollv\[AAcute]ltoz\[OAcute]: kinti h\
\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet, besug\[AAcute]rz\[AAcute]s
f\[UDoubleDot]gg\[ODoubleAcute] v\[AAcute]ltoz\[OAcute]k: szob\[AAcute]k h\
\[ODoubleAcute]m\[EAcute]rs\[EAcute]klete

hibajel: be\[AAcute]ll\[IAcute]tott h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet \
- aktu\[AAcute]lis h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet\
\>", "Text",
 CellChangeTimes->{{3.9266097087023525`*^9, 3.9266099891828175`*^9}, {
  3.926610049039749*^9, 3.9266100925743365`*^9}, {3.926610926111501*^9, 
  3.9266109348466597`*^9}, {3.9266114135989943`*^9, 3.9266114437710724`*^9}, {
  3.92661435195232*^9, 
  3.9266143648655686`*^9}},ExpressionUUID->"9dd4230b-23a7-4fec-a534-\
05e7be6a657b"],

Cell["\<\
f\[ODoubleAcute] k\[EAcute]rd\[EAcute]sek:
- milyen k\[ODoubleDot]lts\[EAcute]ggel milyen m\[EAcute]rt\[EAcute]kben \
lehet cs\[ODoubleDot]kkenteni a hib\[AAcute]t?
- hogy teljes\[IAcute]t a rendszer, lehet-e jellemezni valahogy?
- k\[UDoubleDot]ls\[ODoubleAcute] k\[ODoubleDot]r\[UDoubleDot]lm\[EAcute]nyek \
hogyan befoly\[AAcute]solj\[AAcute]k?
- van-e olyan szcen\[AAcute]ri\[OAcute], amivel jelent\[ODoubleAcute]sen \
jobban teljes\[IAcute]tene?
- lehet-e jellemezni a szob\[AAcute]kat?
- hogyan viszonyul a tavalyi adatokhoz?\
\>", "Text",
 CellChangeTimes->{{3.9266097087023525`*^9, 3.9266099891828175`*^9}, {
  3.926610049039749*^9, 3.9266100925743365`*^9}, {3.926610926111501*^9, 
  3.9266109348466597`*^9}, {3.9266114135989943`*^9, 3.9266114437710724`*^9}, {
  3.92661435195232*^9, 3.9266143648655686`*^9}, {3.926622071428799*^9, 
  3.926622154612995*^9}},ExpressionUUID->"9431fcc0-1c03-4e95-8513-\
291fa8096922"],

Cell["\<\
- pontos\[IAcute]tani a szob\[AAcute]k h\[ODoubleAcute]technikai jellemz\
\[ODoubleAcute]it (homennyisegbol becs\[UDoubleDot]lni? figyelembe venni aktu\
\[AAcute]lis h\[ODoubleAcute]m\[EAcute]rs\[EAcute]kletet hokapacitashoz? f\
\[UDoubleAcute]t\[ODoubleAcute]v\[IAcute]z h\[ODoubleAcute]m\[EAcute]rs\
\[EAcute]klete?)
- karakterizalni, h milyen k\[ODoubleDot]lts\[EAcute]ge van  egy szoba \
felfutesenek adott k\[UDoubleDot]ls\[ODoubleAcute] \
h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet mellett 
- jellemezni a szitut k\[ODoubleDot]lts\[EAcute]g - komfort s\[IAcute]kon, ak\
\[AAcute]r szezonon bel\[UDoubleDot]l is
- modellezni, hogy szab\[AAcute]lyoz\[AAcute]s vagy beavatkoz\[AAcute]s \
mennyit tol a s\[IAcute]kon milyen ir\[AAcute]nyba \
\>", "Text",
 CellChangeTimes->{{3.926779094056526*^9, 3.9267791210035286`*^9}, {
   3.9267796096897297`*^9, 3.9267796394594164`*^9}, {3.926783105585781*^9, 
   3.9267831789766717`*^9}, 
   3.9268413612154913`*^9},ExpressionUUID->"4996c801-a885-4f04-a967-\
18a4757e5948"]
}, Closed]],

Cell[CellGroupData[{

Cell["g\[AAcute]zb\[OAcute]l h\[ODoubleAcute]", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.926857273444168*^9, 
   3.9268572756687193`*^9}},ExpressionUUID->"35f34098-9629-481f-ac49-\
bf55993a888d"],

Cell[CellGroupData[{

Cell["nem f\[UDoubleAcute]t\[EAcute]sre elmen\[ODoubleAcute] g\[AAcute]z \
becsl\[EAcute]se", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.926857273444168*^9, 3.9268572756687193`*^9}, {3.926876964206575*^9, 
   3.9268769719764056`*^9}},ExpressionUUID->"6fafcf14-1237-4212-bffa-\
3b4af7476df6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasFlowAndHeatingStateDaily", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gasDataPosition", ",", "heatingStateDataPosition"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"gasDataPosition", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"gasDataDays", ",", "day"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"heatingStateDataPosition", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"heatingStateDataDays", ",", "day"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"gasStockDaily", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"gasDataPosition", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Transpose", "[", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"gasStockDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"gasDataPosition", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Differences", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"gasStockDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"gasDataPosition", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Map", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], 
                   "\[IndentingNewLine]", "&"}], ",", 
                  RowBox[{"heatingStateDaily", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"heatingStateDataPosition", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
               "\[IndentingNewLine]", "]"}], "]"}], ",", 
             "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Dimensions", "[", "#", "]"}], "]"}], ">", "1"}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9268747795030923`*^9, 3.9268748383665853`*^9}, {
   3.9268748826390753`*^9, 3.9268749328805246`*^9}, {3.926875080958615*^9, 
   3.9268750843707323`*^9}, 3.9268752647052727`*^9},
 CellLabel->
  "In[324]:=",ExpressionUUID->"4d21cc54-38d1-4def-94d3-4b2f65c1b4d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasConsumptionByHeatingState", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"gasFlowAndHeatingStateDaily", ",", "1"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "==", "heatingState"}], "&"}]}], 
         "\[IndentingNewLine]", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"heatingState", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9268730429743276`*^9, 3.926873046686096*^9}, {
   3.926873243308426*^9, 3.926873266413886*^9}, {3.9268732972462544`*^9, 
   3.926873337725196*^9}, {3.926873369917804*^9, 3.9268733802220964`*^9}, {
   3.9268735273426757`*^9, 3.9268735318222623`*^9}, {3.9268735736464343`*^9, 
   3.926873850317582*^9}, {3.9268743787992473`*^9, 3.9268744241586313`*^9}, 
   3.926875299423758*^9, 3.9268753629442606`*^9, {3.9268754115200424`*^9, 
   3.9268754308961024`*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"f0f969b1-5ccb-4aeb-ac94-dd8529517478"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonHeatingProportionOfGasConsumption", "=", 
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"gasConsumptionByHeatingState", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"gasConsumptionByHeatingState", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "+", 
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"gasConsumptionByHeatingState", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926876870752747*^9, 3.926876947278939*^9}},
 CellLabel->
  "In[423]:=",ExpressionUUID->"c6f7ee09-6c55-4589-83f7-71c25eeaaa49"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "nonHeatingProportionOfGasConsumption", "=", "0.3707982073738875`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatingProportionOfGasConsumption", "=", 
   RowBox[{"1", "-", "nonHeatingProportionOfGasConsumption"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268769531352406`*^9, 3.926876953587818*^9}, {
  3.926878076111351*^9, 3.926878083552142*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"1c0bddee-ba6e-404a-9cd5-4e50bafc9c43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"gasConsumptionByHeatingState", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"gasConsumptionByHeatingState", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.926876816623825*^9, 3.9268768528785563`*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"c8034530-acf8-49d7-8bfa-72f5a8801c67"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.581], Thickness[Small]}], {{}, 
     {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{Opacity[
      0.581], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0.}, {0.05, 12704}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{38.23523136446204, 
            59.699461152905336`}, {-98.69756403461723, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 12704]& ,
         TagBoxNote->"12704"],
        StyleBox["12704", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12704, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.05, 0.}, {0.1, 497}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{59.199461152905336`, 80.66369094134863}, {
            82.21249075486425, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 497]& ,
         TagBoxNote->"497"],
        StyleBox["497", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[497, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.1, 0.}, {0.15, 4365}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{80.16369094134863, 101.62792072979192`}, {
            24.887997273606416`, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4365]& ,
         TagBoxNote->"4365"],
        StyleBox["4365", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4365, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.15, 0.}, {0.2, 220}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{101.12792072979192`, 122.59215051823523`}, {
            86.31768328183126, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 220]& ,
         TagBoxNote->"220"],
        StyleBox["220", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[220, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.2, 0.}, {0.25, 3485}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{122.09215051823523`, 143.55638030667853`}, {
            37.929764146281414`, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3485]& ,
         TagBoxNote->"3485"],
        StyleBox["3485", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3485, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.25, 0.}, {0.3, 308}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{143.05638030667853`, 164.5206100951218}, {
            85.01350659456376, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 308]& ,
         TagBoxNote->"308"],
        StyleBox["308", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[308, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.3, 0.}, {0.35, 1120}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{164.0206100951218, 185.48483988356512`}, {
            72.97951261659547, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1120]& ,
         TagBoxNote->"1120"],
        StyleBox["1120", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1120, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.35, 0.}, {0.4, 2}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{184.98483988356512`, 206.44906967200842`}, {
            89.54848462074393, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.4, 0.}, {0.45, 800}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{205.94906967200842`, 227.4132994604517}, {
            77.7219732975682, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 800]& ,
         TagBoxNote->"800"],
        StyleBox["800", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[800, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0.}, {0.55, 349}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{247.877529248895, 269.3417590373383}, {
            84.40587881981413, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 349]& ,
         TagBoxNote->"349"],
        StyleBox["349", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[349, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.55, 0.}, {0.6, 5}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{268.8417590373383, 290.3059888257816}, {
            89.50402405185982, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.6, 0.}, {0.65, 107}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{289.8059888257816, 311.2702186142249}, {
            87.99236470979976, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 107]& ,
         TagBoxNote->"107"],
        StyleBox["107", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.65, 0.}, {0.7, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{310.7702186142249, 332.2344484026682}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.7, 0.}, {0.75, 29}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{331.7344484026682, 353.19867819111147`}, {
            89.14833950078686, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 29]& ,
         TagBoxNote->"29"],
        StyleBox["29", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[29, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.75, 0.}, {0.8, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{352.69867819111147`, 374.1629079795548}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.8, 0.}, {0.85, 24}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{373.6629079795548, 395.1271377679981}, {
            89.22244044892706, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 24]& ,
         TagBoxNote->"24"],
        StyleBox["24", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[24, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.85, 0.}, {0.9, 3}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{394.6271377679981, 416.09136755644136`}, {
            89.5336644311159, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.9, 0.}, {0.95, 13}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{415.59136755644136`, 437.05559734488463`}, {
            89.3854625348355, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1., 0.}, {1.05, 5}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{457.51982713332796`, 478.9840569217713}, {
            89.50402405185982, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.1, 0.}, {1.15, 4}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{499.4482867102146, 520.9125164986579}, {
            89.51884424148786, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.2, 0.}, {1.25, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{541.3767462871011, 562.8409760755444}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.6, 0.}, {1.65, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{709.0905845946476, 730.5548143830907}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.85, 0.}, {1.9, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{813.9117335368641, 835.3759633253072}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.9, 0.}, {1.95, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{834.8759633253072, 856.3401931137506}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.75, 0.}, {2.8, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{1191.2678697288434`, 1212.7320995172868`}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.9, 0.}, {2.95, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{1254.160559094173, 1275.6247888826165`}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3., 0.}, {3.05, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{1296.0890186710599`, 1317.5532484595033`}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{Opacity[
      0.581], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0.}, {0.05, 5316}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{38.23523136446204, 59.699461152905336`}, {
            10.793996937340594`, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5316]& ,
         TagBoxNote->"5316"],
        StyleBox["5316", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5316, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.05, 0.}, {0.1, 380}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{59.199461152905336`, 80.66369094134863}, {
            83.9464529413449, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 380]& ,
         TagBoxNote->"380"],
        StyleBox["380", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[380, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.1, 0.}, {0.15, 2050}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{80.16369094134863, 101.62792072979192`}, {
            59.196736262518485`, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2050]& ,
         TagBoxNote->"2050"],
        StyleBox["2050", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2050, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.15, 0.}, {0.2, 287}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{101.12792072979192`, 122.59215051823523`}, {
            85.3247305767526, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 287]& ,
         TagBoxNote->"287"],
        StyleBox["287", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[287, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.2, 0.}, {0.25, 2444}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{122.09215051823523`, 143.55638030667853`}, {
            53.357581549070815`, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2444]& ,
         TagBoxNote->"2444"],
        StyleBox["2444", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2444, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.25, 0.}, {0.3, 686}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{143.05638030667853`, 164.5206100951218}, {
            79.41147491516473, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 686]& ,
         TagBoxNote->"686"],
        StyleBox["686", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[686, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.3, 0.}, {0.35, 1633}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{164.0206100951218, 185.48483988356512`}, {
            65.37675533741107, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1633]& ,
         TagBoxNote->"1633"],
        StyleBox["1633", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1633, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.35, 0.}, {0.4, 5}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{184.98483988356512`, 206.44906967200842`}, {
            89.50402405185982, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.4, 0.}, {0.45, 1153}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{205.94906967200842`, 227.4132994604517}, {
            72.49044635887016, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1153]& ,
         TagBoxNote->"1153"],
        StyleBox["1153", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1153, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.45, 0.}, {0.5, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{226.9132994604517, 248.377529248895}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0.}, {0.55, 444}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{247.877529248895, 269.3417590373383}, {
            82.99796080515036, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 444]& ,
         TagBoxNote->"444"],
        StyleBox["444", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[444, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.55, 0.}, {0.6, 18}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{268.8417590373383, 290.3059888257816}, {
            89.3113615866953, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 18]& ,
         TagBoxNote->"18"],
        StyleBox["18", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[18, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.6, 0.}, {0.65, 145}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{289.8059888257816, 311.2702186142249}, {
            87.42919750393425, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 145]& ,
         TagBoxNote->"145"],
        StyleBox["145", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[145, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.65, 0.}, {0.7, 3}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{310.7702186142249, 332.2344484026682}, {
            89.5336644311159, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.7, 0.}, {0.75, 42}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{331.7344484026682, 353.19867819111147`}, {
            88.95567703562234, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 42]& ,
         TagBoxNote->"42"],
        StyleBox["42", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[42, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.8, 0.}, {0.85, 40}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{373.6629079795548, 395.1271377679981}, {
            88.98531741487842, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 40]& ,
         TagBoxNote->"40"],
        StyleBox["40", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[40, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.85, 0.}, {0.9, 5}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{394.6271377679981, 416.09136755644136`}, {
            89.50402405185982, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.9, 0.}, {0.95, 23}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{415.59136755644136`, 437.05559734488463`}, {
            89.2372606385551, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 23]& ,
         TagBoxNote->"23"],
        StyleBox["23", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1., 0.}, {1.05, 13}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{457.51982713332796`, 478.9840569217713}, {
            89.3854625348355, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.05, 0.}, {1.1, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{478.4840569217713, 499.9482867102146}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.2, 0.}, {1.25, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{541.3767462871011, 562.8409760755444}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.3, 0.}, {1.35, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{583.3052058639878, 604.7694356524311}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.5, 0.}, {1.55, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{667.1621250177609, 688.6263548062043}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.7, 0.}, {1.75, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{751.0190441715341, 772.4832739599774}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.8, 0.}, {1.85, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{792.9475037484207, 814.4117335368641}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.1, 0.}, {2.15, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{918.7328824790806, 940.1971122675237}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.3, 0.}, {2.35, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{1002.5898016328536`, 1024.0540314212972`}, {
            89.56330481037197, 90.07812500000001}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], 
        "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, \
{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.015, 0.},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{0, 
      Rational[3, 4]}, {All, All}}, {{0, 0.75}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926876817700143*^9, 3.9268768531580667`*^9}},
 CellLabel->
  "Out[415]=",ExpressionUUID->"503791c4-0536-4003-92d4-954605d3b4c7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"typicalDailyGasConsumptionByMonthByHeatingState", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"MapFunctionToGranularity", "[", 
           RowBox[{"GetMeanAndSEM", ",", "\[IndentingNewLine]", 
            RowBox[{"Select", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gasConsumptionByHeatingState", "[", 
               RowBox[{"[", "heating", "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"DateValue", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Month\>\""}], 
                 "]"}], "==", "month"}], "&"}]}], "\[IndentingNewLine]", 
             "]"}], ",", "\"\<Hour\>\""}], "]"}]}], "]"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"heating", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"month", ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "12", ",", "1", ",", "2", ",", "3", ",", "4"}], 
        "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.922261274589389*^9, 3.9222613649261847`*^9}, 
   3.9229730096582747`*^9, {3.9229762136020937`*^9, 3.9229762155371895`*^9}, {
   3.922976410924878*^9, 3.9229764347481475`*^9}, 3.925903805767167*^9, {
   3.926876592288622*^9, 3.926876644463866*^9}},
 CellLabel->
  "In[403]:=",ExpressionUUID->"592ce9cd-9111-4b16-9da0-d6e7f32ddc6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"typicalDailyGasConsumptionByMonthByHeatingState", "[", 
      RowBox[{"[", "month", "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageSize", "->", "200"}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{
         "\"\<nincs f\[UDoubleAcute]t\[EAcute]s\>\"", ",", 
          "\"\<van f\[UDoubleAcute]t\[EAcute]s\>\""}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"month", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9268739409588046`*^9, 3.92687398143183*^9}, {
   3.9268740235346603`*^9, 3.926874105406543*^9}, {3.926874148863144*^9, 
   3.926874166669923*^9}, {3.92687422411275*^9, 3.926874257777479*^9}, {
   3.926874388784397*^9, 3.9268743930121307`*^9}, {3.9268744496627645`*^9, 
   3.9268744501419306`*^9}, {3.9268744803823338`*^9, 3.926874526063098*^9}, {
   3.9268754592469244`*^9, 3.92687549435257*^9}, 3.926876454609518*^9, 
   3.9268764861436334`*^9, {3.926876689486781*^9, 3.9268767566241407`*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"95f7ef4a-c57d-449b-ad3d-27753b04d77b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQNvb7mcXOd7xB7C+2D/xXM+EG2B8hkc7t8Fgb1Q
PofDhENfNWL6d0H5Ag5HOgSV3Xp2QPkiDrUi69wfVsH0Szhw7v6py9JzCMqX
cZhp8bU6r/MwlK/gUPjq+x2h5eegfCUHCH0ByldxcHUBARhfzSE7DQS2Qfka
DhNngsBOKF/LYTuYvxLK13FYjSKv55AZ8btta/4JKN/AYQ6KvKHDanAA7Ify
jRw+/AeB81C+scOHdyBwDMo3ccg+KJZzUOwMlG/q4A127xUo38zhGUr4mju8
C9wh1/r6oD0A2StzKA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQMsc80uZDLvtYfwPti7uoDAFiifwUEQDA5C+RwO
RsYgsBvKF3A48NI3v+oyjC/icN+SyTWadx+UL+Gwcda1j89aDkH5Mg6dzHL1
Fg9g5ik4TOWKql254CiUr+Twe4n/ryX+p6B8FYdQMDgL5as5uIHddwbK13Aw
nV8olvD5JJSv5cB5Y37DX84TUL6Ow/ZrUdlrtx6D8vUcosAAZr6Bg8wSR6kl
jjC+oUPxlV5T97sw/UYOf3iz72/4BnOfscPsL57zv3geh/JNHF5vafSTfnEE
yjd1MIpabBq1GKbezOG18v2UI4GnoXxzh0jtrUHaWw/ZAwB0aWOj
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.016308081307936092`}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0.016308081307936092`, 
        0.37742005672159745`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.14037412888920972`}, {1, 0.06925532620184963}, {
              2, 0.10520989437873013`}, {3, 0.0946021722160637}, {
              4, 0.08444296699842768}, {5, 0.06600291575552472}, {
              6, 0.12738673234517292`}, {7, 0.1300850119611748}, {
              8, 0.22845225565521346`}, {9, 0.21930750929775744`}, {
              10, 0.2342218454411001}, {11, 0.06913129236201265}, {
              12, 0.07485221546152265}, {13, 0.032616162615872184`}, {
              14, 0.04226497308103683}, {15, 0.16584718408710877`}, {
              16, 0.07713352198099879}, {17, 0.07883194624496329}, {
              18, 0.20774228726357397`}, {19, 0.15587024140544498`}, {
              20, 0.1984306755477151}, {21, 0.28960519530380074`}, {
              22, 0.14106203259052033`}, {23, 0.1239256386388852}, {
              23, 0.15607436136111494`}, {22, 0.17617934671982413`}, {
              21, 0.34372813802953334`}, {20, 0.24045821334117373`}, {
              19, 0.20246309192788842`}, {18, 0.29225771273642515`}, {
              17, 0.16561249819948148`}, {16, 0.12286647801900127`}, {
              15, 0.21597099773107267`}, {14, 0.15773502691896366`}, {
              13, 0.06738383738412823}, {12, 0.1251477845384771}, {
              11, 0.10586870763798747`}, {10, 0.27411148789223333`}, {
              9, 0.28069249070224256`}, {8, 0.2504951127658392}, {
              7, 0.17517814593356215`}, {6, 0.162409186022174}, {
              5, 0.09399708424447534}, {4, 0.10733785491938053`}, {
              3, 0.11289782778393631`}, {2, 0.12812343895460324`}, {
              1, 0.09185578490926147}, {0, 0.17686725042113513`}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            PolygonBox[{{0, 0.10089189965265766`}, {1, 0.0621637186415184}, {
              2, 0.10907977082970005`}, {3, 0.08695243970515096}, {
              4, 0.08792679105862508}, {5, 0.10175524178636383`}, {
              6, 0.1292294229938597}, {7, 0.12227370883041949`}, {
              8, 0.15437141295486217`}, {9, 0.19090136633562196`}, {
              10, 0.21674516037852457`}, {11, 0.20849081993724153`}, {
              12, 0.1912038309619545}, {13, 0.17664101359130296`}, {
              14, 0.165762640430886}, {15, 0.1921468623866157}, {
              16, 0.19374714230142787`}, {17, 0.18324191673014556`}, {
              18, 0.16063492423943487`}, {19, 0.16969916991131992`}, {
              20, 0.14907845674350154`}, {21, 0.1570742082591302}, {
              22, 0.20069118299183955`}, {23, 0.1259771122329172}, {
              23, 0.16633058007477547`}, {22, 0.22617448864995152`}, {
              21, 0.18102102983610768`}, {20, 0.1775882099231653}, {
              19, 0.19418971897756873`}, {18, 0.1825468939423836}, {
              17, 0.2052638303962912}, {16, 0.2165092679549825}, {
              15, 0.2196178434957372}, {14, 0.18907606924653342`}, {
              13, 0.19896874250625796`}, {12, 0.21427562109283996`}, {
              11, 0.23317584672942523`}, {10, 0.24158817295480875`}, {
              9, 0.22020974477548919`}, {8, 0.1835596215278963}, {
              7, 0.15703663599716677`}, {6, 0.1601322791337999}, {
              5, 0.1330273669092883}, {4, 0.12946451328920108`}, {
              3, 0.125547560294849}, {2, 0.1575868958369666}, {
              1, 0.09616961469181495}, {0, 0.12577476701400903`}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQMSeTzTVBUP2EN4H+zlHhsC0T4on8FhYqtOiiL3
Tiifw6Fq3vPKec9hfAGHO5ttb2+23Q3lizgIgsFBKF/CYUPHw+c9/kegfBmH
KaapvpHBx6B8BYfX8sFtO9/sh/KVHH7XZe0pmXwCyldxOCiR3GN4DMZXc8hJ
A4EzUL6Ggz3X9cUFtqegfC0H3dUP2G7euQjl6zjc+qR7/5PueShfzyEbrB9m
v4GDCIp7DR06O0AAZp+RQ/kl9dpL6mehfGOH7d9NFTWqYeaZOLxT3TL9Qtwl
KN/UQf9f5iTHxzB5M4d5wl4mBd0XoHxzB+Gcg2I5B4/ZAwCX6mUU
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQMyra8Dd8gdtYfwPtgniK+vv6ewB8pncEhW5I48
4bQNyudwEM05KJZzEMYXcIj81K26P2ITlC/i8LNR/kej/A4oX8JBUUw6aaMi
TL2MQ47G+oV72g5B+QoOf0S1Kr8EHIPylRwKVv82+VAKc4+Kwwn+yq+RMSeh
fDUHvUP2ft8ZjkP5Gg75wT1S/8xg6rUcfuXx/73NdgTK13E4p7uGuV/rNJSv
53Axk3mu2QWYeQYOSmBwCso3dOC+vrjAlgum3sihTmSd+8OqM1C+scO7u3de
S049AeWbOKhOPszhbgQzz9Qhcw7rjZpjML6Zg2TVQvGqhTD3mjvs2Q0G9gDy
uGXt
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.0317687577126003}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0.0317687577126003, 0.3609988781857858}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.1170064987557426}, {1, 0.10974309412017634`}, {
              2, 0.08970793907042987}, {3, 0.09175124884610969}, {
              4, 0.09671346837266065}, {5, 0.12147909882337896`}, {
              6, 0.14616491443148702`}, {7, 0.15998103713759013`}, {
              8, 0.11091412555366138`}, {9, 0.1732306556244421}, {
              10, 0.1774723238890158}, {11, 0.20499118396073882`}, {
              12, 0.18607030551399917`}, {13, 0.24205247622168843`}, {
              14, 0.2176668662266691}, {15, 0.15164117039244224`}, {
              16, 0.11551591720583845`}, {17, 0.16865010947924378`}, {
              18, 0.2088329493126478}, {19, 0.2275269835132786}, {
              20, 0.25297310484235475`}, {21, 0.22470954089507325`}, {
              22, 0.2177724943464039}, {23, 0.15629458856174738`}, {
              23, 0.19926096699380796`}, {22, 0.29924878224934104`}, {
              21, 0.2735360731400142}, {20, 0.32110096923171944`}, {
              19, 0.26436490837861354`}, {18, 0.24672260624290743`}, {
              17, 0.21468322385408958`}, {16, 0.15115074946082838`}, {
              15, 0.19835882960755802`}, {14, 0.2695126209528178}, {
              13, 0.3161564790021921}, {12, 0.22392969448600092`}, {
              11, 0.2387588160392615}, {10, 0.2096244503045323}, {
              9, 0.21076934437555797`}, {8, 0.1384976391522209}, {
              7, 0.1888561721647354}, {6, 0.1711904574693396}, {
              5, 0.1451875678432877}, {4, 0.11610704444785219`}, {
              3, 0.1106297035348427}, {2, 0.10594423484261362`}, {
              1, 0.12615434177725954`}, {0, 0.13501662263154063`}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{0, 0.13709305698657706`}, {1, 0.09553880290205313}, {
              2, 0.07547132786947902}, {3, 0.07946324637403532}, {
              4, 0.0635375154252006}, {5, 0.08608403871821663}, {
              6, 0.07458454372681428}, {7, 0.13250846569220673`}, {
              8, 0.1594755859733845}, {9, 0.15538401593636866`}, {
              10, 0.18330494445453177`}, {11, 0.16760445115932485`}, {
              12, 0.15342274493364064`}, {13, 0.14729150374570096`}, {
              14, 0.20014699632832536`}, {15, 0.1898279276495427}, {
              16, 0.19037159767787967`}, {17, 0.20004658646235904`}, {
              18, 0.2080852793938483}, {19, 0.1809767981800972}, {
              20, 0.18730408935045373`}, {21, 0.19041488696764652`}, {
              22, 0.17470270184371567`}, {23, 0.0928757795207738}, {
              23, 0.12379088714589287`}, {22, 0.19452806738705364`}, {
              21, 0.2123248390597508}, {20, 0.20638960434324}, {
              19, 0.2031236202299445}, {18, 0.23691472060615187`}, {
              17, 0.222453413537641}, {16, 0.21796173565545365`}, {
              15, 0.21350540568379067`}, {14, 0.22432557751133717`}, {
              13, 0.1656271565413804}, {12, 0.1780587365478408}, {
              11, 0.19182951110482618`}, {10, 0.21295673778845875`}, {
              9, 0.17993936714820855`}, {8, 0.18921551350305535`}, {
              7, 0.1569652185183196}, {6, 0.09831868207963732}, {
              5, 0.10237749974332186`}, {4, 0.07979581790813274}, {
              3, 0.09831453140374241}, {2, 0.09844171560878182}, {
              1, 0.12421428351769986`}, {0, 0.1929069430134228}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQDQNVSzm1zfq320N4H+wzXZUZ7+/ZBeUzOEyfBgLb
oHwOB4WX/w4t37QFyhdwCI+RS1/0YweUL+Igsecmi2j0UShfwmGXl9TVaauP
QPkyDjPB4CSUr+AAccsZKF/JYRNr9AbW6BNQvooDx1vVLdMvnIPy1RwmTwKB
S1C+hsNjzp1R4vMuQPlaDtPA5p+C8nUc9iazHvKwPgblGzgwGIPAYSjf0GE1
inuMHHou7OW42w0zzxjqPph/TBy2qqVmB22DmWfqELTQZEfLBZh+Mwcex5u/
ZwnA/Gvu8LJba/u0o7vsAWR7YH0=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQPmqb6Rwde22EN4H+x3iHZFL9yxFMpncJDSv6vC
1rgVyudwuKhb+Or7nU1QvoCD1GRDycmGK6F8EYfj7DHTPDYcgPIlHJwTnl5Q
un0QypdxcIhaMSmw7wiUr+DgGN47ZVkwjK/kEH2fu2DinKNQvorDi+0CBl6m
J6F8NQfOP0U/91adgPI1HMLtX6w4IH4cytdyWK3+eLu3LUy9joMi6+/5OfPO
Qfl6DrP6j7T99DgD5Rs4hD3weswgC5M3dMgJ1w999RMmb+TwomRvwZJb56F8
Y4fsI/vd/mTD3Gvi4JdfdXn2PRjf1CFYe2uQ9tZDUL6Zw1PfCv/cOTC+uUNH
GgisswcA3mxqWA==
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.01544259613192128}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0.01544259613192128, 0.33962677849837875`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.0851396248146628}, {1, 0.0973531896878711}, {
              2, 0.08153065708515186}, {3, 0.07480143702406253}, {
              4, 0.09006414430640854}, {5, 0.15370115265059886`}, {
              6, 0.14889288953494662`}, {7, 0.1834625342483265}, {
              8, 0.19960728722513577`}, {9, 0.17018802199891403`}, {
              10, 0.21746610379840636`}, {11, 0.26774702465668754`}, {
              12, 0.23887771371647779`}, {13, 0.18954086579373744`}, {
              14, 0.1371356725333342}, {16, 0.09999999999999787}, {
              17, 0.1999999999999993}, {18, 0.23759077556424674`}, {
              19, 0.14982609715052578`}, {20, 0.16519657917512137`}, {
              21, 0.19103241947517735`}, {22, 0.14651001520071683`}, {
              23, 0.09755455426096148}, {23, 0.1116003753165034}, {
              22, 0.16700349831279682`}, {21, 0.21231953583208518`}, {
              20, 0.18968146960536636`}, {19, 0.17829890284947433`}, {
              18, 0.2794823951674606}, {17, 0.20000000000000168`}, {
              16, 0.1999999999999993}, {14, 0.21023274851929785`}, {
              13, 0.22608413420626236`}, {12, 0.2804205318975575}, {
              11, 0.3126451322060576}, {10, 0.26401537768307504`}, {
              9, 0.21036753355664162`}, {8, 0.23789271277486435`}, {
              7, 0.21653746575167346`}, {6, 0.1740800834380264}, {
              5, 0.17998305787571695`}, {4, 0.10502357499183708`}, {
              3, 0.08690069063551195}, {2, 0.09493993115014226}, {
              1, 0.11153569920101783`}, {0, 0.09891834619982998}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{0, 0.06339577521315612}, {1, 0.03088519226384256}, {
              2, 0.06699019890376923}, {3, 0.0509447694792707}, {
              4, 0.037921049379524015`}, {5, 0.11851129438888668`}, {
              6, 0.129205407088375}, {7, 0.15081427433878802`}, {
              8, 0.14922818220371797`}, {9, 0.1587474501344787}, {
              10, 0.18757854065027715`}, {11, 0.1820604127208053}, {
              12, 0.17113823481834395`}, {13, 0.18724516193619556`}, {
              14, 0.23064047880764263`}, {15, 0.21273810438339388`}, {
              16, 0.22684662331444103`}, {17, 0.21810013987812293`}, {
              18, 0.24033505509227565`}, {19, 0.15062959102232293`}, {
              20, 0.15243604266896146`}, {21, 0.13577228372104883`}, {
              22, 0.13417904304646594`}, {23, 0.04808017088741334}, {
              23, 0.07066982911258712}, {22, 0.15661850296580393`}, {
              21, 0.1565354085866435}, {20, 0.17365091385277767`}, {
              19, 0.1684613180685861}, {18, 0.2573848146145647}, {
              17, 0.23465348331028302`}, {16, 0.24367360789943185`}, {
              15, 0.22921591860511195`}, {14, 0.24777897407989527`}, {
              13, 0.20712103524690312`}, {12, 0.18968650744969728`}, {
              11, 0.20043116977077718`}, {10, 0.20629901037013107`}, {
              9, 0.17893370928581123`}, {8, 0.1683774515990989}, {
              7, 0.17037216633917807`}, {6, 0.14979459291162509`}, {
              5, 0.1422481992819994}, {4, 0.06049164903317441}, {
              3, 0.09642365157336091}, {2, 0.10100980109623076`}, {
              1, 0.053963292584642275`}, {0, 0.09939492246126252}}]}, Null}}},
        Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQPsMzbn/JPcbA/hfbB3eDnZ7uXkdVA+g0NTaMCz
F3PXQPkcDhZFyuZFysuhfAGHy2s4cuPXr4TyRRx2nLqwXlJlA5Qv4aD48JlI
K9smKF/GQTuqdOWi0O1QvoLDytNv+Y1CtkH5Sg4qszazHb28D8pXcWhUejjl
2dH9UL6ag+7Po5PidQ5C+RoOR4C8n0cPQflaDiH3BN9oTjsM5es4sJqLr867
cgTK13Mw/vi8wuX8ASjfwME/aHFP6JejUL6hQ/iC9F0PFsLkjRyEBEEAZp+x
g4DffyG//zD/mDjcDJS9Gii7Fco3dYgLkFp51HALlG/mEPbttnGKBEze3IHn
yn3naUGb7QG4dGdd
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQO2fwW5d1xebw/hfbC/ol57Sb12EZTP4JCpv3Bv
y7dNUD6HAwMKEHB4n3hnvbfWfKi8iINQxZ+HDcdhfAmHUws++k/mWQXlyzg0
Tw/+UMS1D8pXcEhPA4FDUL6SQ2/s1Du7bxyF8lUcfLaueL7mEoyv5nD0CBhA
+RoOOQUbDx5lOw7lazn4mXc6Jjw9AOXrOOy2On29/vlBKF/PQdg/aHFPKEy/
gUPuhnucAlEw+w0dtk7ZobVWFmafkUPYGsbwNYww840d1nX4K0ydsx3KN3G4
Bw4vWPiYOpy1lzxj+HczlG/mIC1eKCheuBHKN3eQWcAotYBxlT0AB+FmIg==

           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0., 0.1966957685227524}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.06923076923076923}, {
              1, 0.054690410699598555`}, {2, 0.05096745447140513}, {
              3, 0.040775651959757846`}, {4, 0.045238630312622784`}, {
              5, 0.05630459053670589}, {6, 0.06329610247135165}, {
              7, 0.08030396677825945}, {8, 0.07542972296081607}, {
              9, 0.1051953669245426}, {10, 0.10585881180676066`}, {
              11, 0.11703740715905288`}, {12, 0.1281298045522716}, {
              13, 0.13501220907834602`}, {14, 0.14544786225508305`}, {
              15, 0.11606665916947202`}, {16, 0.1552795327936192}, {
              17, 0.11597005658687155`}, {18, 0.11774930121377127`}, {
              19, 0.06621932802254589}, {20, 0.07449153401609268}, {
              21, 0.07230296248649418}, {22, 0.07520909979456944}, {
              23, 0.06955293564203273}, {23, 0.08140491876409746}, {
              22, 0.08959776715822029}, {21, 0.08546596181629465}, {
              20, 0.09046573094117238}, {19, 0.08219696157021421}, {
              18, 0.14891736545289544`}, {17, 0.14391018293408644`}, {
              16, 0.1877584418899251}, {15, 0.1465839432401666}, {
              14, 0.18001797625423377`}, {13, 0.17102805937802987`}, {
              12, 0.16520352878106162`}, {11, 0.1512959261742805}, {
              10, 0.14236813854784933`}, {9, 0.13564232941053597`}, {
              8, 0.09901472148362836}, {7, 0.10199691817749278`}, {
              6, 0.07752786756610155}, {5, 0.06979710437854836}, {
              4, 0.05509359560099849}, {3, 0.04960896342485755}, {
              2, 0.06081705731310666}, {1, 0.06475403374484591}, {
              0, 0.08000000000000002}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{0, 0.045562589393974534`}, {
              1, 0.02405780505223858}, {2, 0.056702163852505816`}, {3, 0.}, {
              4, 0.013292293721579886`}, {5, 0.015259394619107476`}, {
              6, 0.03212494883646319}, {7, 0.09843338510289235}, {
              8, 0.12626655378341012`}, {9, 0.15048784885206223`}, {
              10, 0.1533728085267813}, {11, 0.14631698304482693`}, {
              12, 0.1630983297486279}, {13, 0.11729903994288184`}, {
              14, 0.1236296741739972}, {15, 0.14019508406532064`}, {
              16, 0.127724329675082}, {17, 0.14840717220735664`}, {
              18, 0.1627813556602541}, {19, 0.07909364482479832}, {
              20, 0.06161897232848421}, {21, 0.06666666666666657}, {
              22, 0.05851412901668537}, {23, 0.037053129530139166`}, {
              23, 0.06453417205716244}, {22, 0.07774960724705116}, {
              21, 0.0894977168949771}, {20, 0.08282547211596056}, {
              19, 0.10537237459267727`}, {18, 0.1966957685227524}, {
              17, 0.18152913352512742`}, {16, 0.15902265827672526`}, {
              15, 0.17752643492202122`}, {14, 0.15612492705299655`}, {
              13, 0.14670096005711827`}, {12, 0.19669003003973187`}, {
              11, 0.1781928208767417}, {10, 0.18761079803059572`}, {
              9, 0.19086553460658445`}, {8, 0.16123344621658992`}, {
              7, 0.13626049244812807`}, {6, 0.0696294371284491}, {
              5, 0.04680957089813393}, {4, 0.047577271495811396`}, {3, 0.}, {
              2, 0.09144598429564235}, {1, 0.04816441716998367}, {
              0, 0.07876173493034981}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQNpk33NbqZstofwPthPPZKqvGLeRiifwUE04cT3
GWGroXwOhxcBDYr3k1dB+QIOdRFLeGzuwvgiDmdfXu3NaISpl3DIr+NmXBwC
M1/GIfBhfMgP8a1QvoIDX423dXfAIShfyUHeQ6m3dtZuKF/F4cHHdma5+hNQ
vprD9fClC7Jqj0L5Gg4MpicXfPQ/DOVrObg7eO0WnAAzT8fBf8qbWy4n90H5
eg7WETyf7Vlg5hs4CH4WqtgIt8/QoWSHrUdsO4xv5CCy88Bn98rtUL6xw+mD
Z+sUw7ZA+SYOmm689bOTYHxTB993qw3UrWB8M4dlwNCZJb8Nyjd3WF38lPGk
1XZ7AMxQZVw=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{{5., 0.040000000000000036`}, {6., 0.04666666666666665}, {
           7., 0.02982456140350876}, {8., 0.04366197183098591}, {9., 
           0.07127659574468084}, {10., 0.13066666666666668`}, {11., 
           0.09245283018867925}, {12., 0.10104166666666664`}, {13., 
           0.07741935483870968}, {14., 0.09347826086956527}, {15., 
           0.16338028169014088`}, {16., 0.10232558139534885`}, {17., 
           0.05937499999999993}, {18., 0.043478260869565216`}, {19., 
           0.06666666666666643}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0., 0.2262745442189914}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.07072621701772068}, {1, 0.06433146111194368}, {
              2, 0.049060478903656085`}, {3, 0.047096585459483024`}, {
              4, 0.048221668262782895`}, {5, 0.04881831701214689}, {
              6, 0.06990786173166652}, {7, 0.07602102378865262}, {
              8, 0.13352833359754634`}, {9, 0.09880539155229613}, {
              10, 0.1753472049845571}, {11, 0.15474396179818511`}, {
              12, 0.13957625181026614`}, {13, 0.13333870225294264`}, {
              14, 0.11026274110605813`}, {15, 0.09729038666814874}, {
              16, 0.0998075598799993}, {17, 0.10012601478608574`}, {
              18, 0.08516540148545969}, {19, 0.0739596286314476}, {
              20, 0.07469769259243614}, {21, 0.0743067364319484}, {
              22, 0.08106542803906541}, {23, 0.08570653235767878}, {
              23, 0.09577494912380266}, {22, 0.09177407813377414}, {
              21, 0.08371795492607628}, {20, 0.0845615666668231}, {
              19, 0.08491887604144958}, {18, 0.09822330283347726}, {
              17, 0.11494247836459914`}, {16, 0.11585080310932457`}, {
              15, 0.11377680700774057`}, {14, 0.13025450027325225`}, {
              13, 0.1567045877903474}, {12, 0.1621781341546462}, {
              11, 0.18103585471557637`}, {10, 0.20741141570509805`}, {
              9, 0.11684678236074732`}, {8, 0.152637674307592}, {
              7, 0.08877298370198407}, {6, 0.08111254643159879}, {
              5, 0.05862504868364601}, {4, 0.05671660334215537}, {
              3, 0.05598983429360339}, {2, 0.05772964455313405}, {
              1, 0.07332285987571063}, {0, 0.08078893449743087}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{5, 0.023670068381445503`}, {
              6, 0.03249746472989886}, {7, 0.02192286577923084}, {
              8, 0.034979698587367644`}, {9, 0.059995943111578603`}, {
              10, 0.11629086464319521`}, {11, 0.07913535670068578}, {
              12, 0.08478611487100968}, {13, 0.06407938755573067}, {
              14, 0.07958456612963931}, {15, 0.14432413921916531`}, {
              16, 0.08250122193403964}, {17, 0.04149357210092887}, {
              18, 0.029666873352050448`}, {19, 0.}, {
              19, 0.13333333333333286`}, {18, 0.057289648387079985`}, {
              17, 0.07725642789907099}, {16, 0.12214994085665806`}, {
              15, 0.18243642416111644`}, {14, 0.10737195560949124`}, {
              13, 0.09075932212168869}, {12, 0.1172972184623236}, {
              11, 0.10577030367667273`}, {10, 0.14504246869013815`}, {
              9, 0.08255724837778308}, {8, 0.05234424507460418}, {
              7, 0.03772625702778668}, {6, 0.060835868603434436`}, {
              5, 0.05632993161855457}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQMxZ5QWPq5fag/hfbCfXqQJRMuhfAaHAPZSIFoA
5XM4CMk9FJR7uBDKF3C4yHv3Au9dmLyIg/SuhUA0G8qXcBDsPSHQewImL+Ow
elt7ZkboIihfwUEs/qNo/EeY/UoOrM/9Ht/+ugrKV3HoWWCguPXARihfzcH2
rqq01ZEVUL6GwxS7l5PtXi6G8rXQ+DoOOus27jj2CGaensNXt6UvEvOXQPkG
DlOY7gERjG/o8DGz5ek8N5j5Rg4CZY43WBNh4WHsUNU7YWuhM0zexCH21NKY
U0vXQPmmDrOWZQIRzD4zh9hpqZHTUldC+eYOczZbzt5sudoeACzEaWc=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{{6., 0.027272727272727296`}, {7., 0.043478260869565216`}, {
           8., 0.10285714285714286`}, {9., 0.06000000000000001}, {10., 
           0.12830188679245288`}, {11., 0.07297297297297294}, {12., 
           0.06666666666666665}, {13., 0.061111111111111144`}, {14., 
           0.0727272727272728}, {15., 0.10416666666666659`}, {16., 
           0.0285714285714286}, {17., 0.03499999999999996}, {18., 
           0.048484848484848526`}, {19., 0.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0., 0.1440965962947658}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.037477140416224436`}, {
              1, 0.040593845827497796`}, {2, 0.02806920776479271}, {
              3, 0.030999137149966452`}, {4, 0.028849328377945724`}, {
              5, 0.023095402649457336`}, {6, 0.028436924617594894`}, {
              7, 0.031001059759546336`}, {8, 0.03714115062177556}, {
              9, 0.0468538483539663}, {10, 0.06176821036793058}, {
              11, 0.04195113896633825}, {12, 0.03399260601418794}, {
              13, 0.034217671715358486`}, {14, 0.04660392997546833}, {
              15, 0.035287896818402616`}, {16, 0.03550634728079719}, {
              17, 0.042021217854690214`}, {18, 0.04051791612989965}, {
              19, 0.04262675049405431}, {20, 0.05111343389127933}, {
              21, 0.047037491744033946`}, {22, 0.04530238264772386}, {
              23, 0.04842404226442608}, {23, 0.05792516408478028}, {
              22, 0.053903966558625394`}, {21, 0.05613711143056922}, {
              20, 0.06079132801348258}, {19, 0.052152365971809174`}, {
              18, 0.050806284783342356`}, {17, 0.052806368352206375`}, {
              16, 0.0460062577612196}, {15, 0.04453666458510614}, {
              14, 0.05841890107475997}, {13, 0.04356010606241929}, {
              12, 0.04378517176358984}, {11, 0.0547930470801734}, {
              10, 0.07692525696875284}, {9, 0.058460161307869456`}, {
              8, 0.048573135092510156`}, {7, 0.04061466076447114}, {
              6, 0.03712324135750884}, {5, 0.030872851318796628`}, {
              4, 0.03702368749507015}, {3, 0.03884213269130339}, {
              2, 0.036216506520921565`}, {1, 0.04988234464869268}, {
              0, 0.046505543566459556`}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{6, 0.007774899464066169}, {
              7, 0.027052494264679722`}, {8, 0.07460684672254139}, {
              9, 0.04836584616942276}, {10, 0.11250717729013998`}, {
              11, 0.05764441484038414}, {12, 0.05073028520887472}, {
              13, 0.041889026516686856`}, {14, 0.053621939071335674`}, {
              15, 0.07378314790138223}, {16, 0.012235089288660968`}, {
              17, 0.019999999999999997`}, {18, 0.0346396463011386}, {
              19, 0.}, {19, 0.}, {18, 0.06233005066855845}, {
              17, 0.049999999999999926`}, {16, 0.04490776785419623}, {
              15, 0.13455018543195094`}, {14, 0.09183260638320992}, {
              13, 0.08033319570553543}, {12, 0.08260304812445858}, {
              11, 0.08830153110556173}, {10, 0.1440965962947658}, {
              9, 0.07163415383057727}, {8, 0.13110743899174432`}, {
              7, 0.05990402747445071}, {6, 0.04677055508138842}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.9268767520010543`*^9, 3.926876757103814*^9}},
 CellLabel->
  "Out[409]=",ExpressionUUID->"fa27aaa2-530d-4085-8798-9e47953f17bf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"typicalDailyGasConsumptionByHeatingState", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"MapFunctionToGranularity", "[", 
         RowBox[{"GetMeanAndSEM", ",", "\[IndentingNewLine]", 
          RowBox[{"gasConsumptionByHeatingState", "[", 
           RowBox[{"[", "heating", "]"}], "]"}], ",", "\"\<Hour\>\""}], 
         "]"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"heating", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.922261274589389*^9, 3.9222613649261847`*^9}, 
   3.9229730096582747`*^9, {3.9229762136020937`*^9, 3.9229762155371895`*^9}, {
   3.922976410924878*^9, 3.9229764347481475`*^9}, {3.9229765217750473`*^9, 
   3.9229765257494197`*^9}, {3.9259038745036182`*^9, 3.92590387900064*^9}, {
   3.926873874206049*^9, 3.9268739065578704`*^9}, {3.926873993150205*^9, 
   3.9268740504488463`*^9}, {3.9268742097435617`*^9, 
   3.9268742176144657`*^9}, {3.926874443150242*^9, 3.926874444686996*^9}, 
   3.926875403295236*^9, {3.926875439146055*^9, 3.9268754497433443`*^9}, {
   3.92687624359933*^9, 3.926876353711502*^9}, {3.9268763952479444`*^9, 
   3.9268763955993967`*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"073de429-0274-41e6-8eca-87fd99581cac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
  "typicalDailyGasConsumptionByHeatingState", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "->", "500"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<nincs f\[UDoubleAcute]t\[EAcute]s\>\"", ",", 
        "\"\<van f\[UDoubleAcute]t\[EAcute]s\>\""}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9268739409588046`*^9, 3.92687398143183*^9}, {
   3.9268740235346603`*^9, 3.926874105406543*^9}, {3.926874148863144*^9, 
   3.926874166669923*^9}, {3.92687422411275*^9, 3.926874257777479*^9}, {
   3.926874388784397*^9, 3.9268743930121307`*^9}, {3.9268744496627645`*^9, 
   3.9268744501419306`*^9}, {3.9268744803823338`*^9, 3.926874526063098*^9}, {
   3.9268754592469244`*^9, 3.92687549435257*^9}, 3.926876454609518*^9, 
   3.9268764861436334`*^9},
 CellLabel->
  "In[402]:=",ExpressionUUID->"70ca8a94-ce9d-483d-8563-430278fdea16"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQPTQw9+6oncag/hfbCf4vl+suf7zVA+g8PTlRPv
cStvhPI5HJ5sNKvP+LUeyhdwELqT/1j86QYoX8RhXvSjK+93wvRLOFh9v8l6
ZNk2KF/G4efGtUvL5HZC+QoODtqt07vZ9kL5Sg5an9jPbNgN46s4rNd2Dvy8
6xCUr+bAs7ujaG7OQShfw6HOsLrqRsIBKF/LwZiXU1XjMoyv47BA5K7ejvcw
8/QcIl8L72+P2AHlGzjEPq6s178Bc4+hQ9UH+Vo9fRjfyCH6yBzuRSd3QfnG
DgwnVlf1Mm+H8k0cGNfNCeR5AJM3ddi0bI1m9ikY38zh0qS3Hw99hvHNHRQC
guIWdO+0BwDxlm3o
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQP1NdLlkXr77CG8D/acp217N9zZDOUzOHw5rJT6
4OU2KJ/D4eeU2f47f26B8gUcEvf+/K24YgOUL+Kw6lDDpOl7d0H5Eg6q0/9P
qPsN48s4rM6NrWH5egDKV3BgcUiPP/70EJSv5OCcF+F248phKF/F4UHNL+6H
0sehfDWHORo3t3ZOOgrlazgcn3QxQtcIxtdy4DLKV3R7AtOv46Br9uqNnM0J
KF/PYbfi2ccxGiehfAOHR3LBCh8cYHxDhz0h1yzM/GF8I4evvZnCAV2noHxj
hwNfNWL6Dx2B8k0cxOonGuvsgPFNHeSklAwFr8L4Zg5SOXVNXmdg7jF3KF51
uOnBqS32AKSXbFU=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.029516124737898282`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 23.}, {0.029516124737898282`, 0.24616790751954457`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Prolog -> {{{{
          Opacity[0.15], 
          RGBColor[0, 0, 1], 
          
          PolygonBox[{{0, 0.08056217497616883}, {1, 0.0752201183277492}, {
            2, 0.06439718306938995}, {3, 0.06002057796412171}, {
            4, 0.06333948133378359}, {5, 0.07350302203540131}, {
            6, 0.08488004776115517}, {7, 0.09363427912091277}, {
            8, 0.10836730379737677`}, {9, 0.11043610337888013`}, {
            10, 0.1391813043599531}, {11, 0.12958003436025045`}, {
            12, 0.12170822306511976`}, {13, 0.12445589842257947`}, {
            14, 0.11060811925679538`}, {15, 0.08973581007415778}, {
            16, 0.09559249531453295}, {17, 0.09338655423724417}, {
            18, 0.09946780235293778}, {19, 0.08608208839231922}, {
            20, 0.10083499688518366`}, {21, 0.10087574005944498`}, {
            22, 0.1004505371670427}, {23, 0.09556434874610825}, {
            23, 0.10400921202148233`}, {22, 0.1101134735760191}, {
            21, 0.10842658552195035`}, {20, 0.10912740912985394`}, {
            19, 0.09371382997502777}, {18, 0.10981054816252614`}, {
            17, 0.10336581382770844`}, {16, 0.10631746375777265`}, {
            15, 0.1004659190324705}, {14, 0.12327003824691939`}, {
            13, 0.13843209078119922`}, {12, 0.134202764417495}, {
            11, 0.14267430089986521`}, {10, 0.15347924609876248`}, {
            9, 0.12185425957481202`}, {8, 0.11839494231970807`}, {
            7, 0.10260789206906637`}, {6, 0.09208423795313057}, {
            5, 0.08060882006986182}, {4, 0.06865189177908482}, {
            3, 0.06489409780379639}, {2, 0.06948484710893653}, {
            1, 0.08051985400973351}, {0, 0.08623319181919792}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[1, 0, 0], 
          
          PolygonBox[{{0, 0.10458737084321681`}, {1, 0.06942981781549648}, {
            2, 0.0814039946425376}, {3, 0.07430608250653098}, {
            4, 0.059032249475796564`}, {5, 0.09827852769127571}, {
            6, 0.09902638831966497}, {7, 0.12634943651164707`}, {
            8, 0.14127914209208967`}, {9, 0.14886450172655855`}, {
            10, 0.17447469679275138`}, {11, 0.1627382724583402}, {
            12, 0.15964321266547246`}, {13, 0.14999820195361277`}, {
            14, 0.18365674393248616`}, {15, 0.19069870262896202`}, {
            16, 0.19117853827342404`}, {17, 0.1920517754887232}, {
            18, 0.20097108451031578`}, {19, 0.1562814853416073}, {
            20, 0.15593491301292736`}, {21, 0.15655850383064018`}, {
            22, 0.14865999860795853`}, {23, 0.07362550741221852}, {
            23, 0.08881580714177226}, {22, 0.16068393777375123`}, {
            21, 0.16894608332532313`}, {20, 0.16780609418131734`}, {
            19, 0.16809351465839256`}, {18, 0.21372085861764636`}, {
            17, 0.20340792939209407`}, {16, 0.20340996229027383`}, {
            15, 0.20238985028680476`}, {14, 0.19501273864407143`}, {
            13, 0.16080953411009605`}, {12, 0.17154435670189708`}, {
            11, 0.17433069305890123`}, {10, 0.18660190776211408`}, {
            9, 0.16100151532581666`}, {8, 0.15399544283766767`}, {
            7, 0.1386052462678091}, {6, 0.11177361168033505`}, {
            5, 0.11063236339783322`}, {4, 0.0710987548910157}, {
            3, 0.08956488523540448}, {2, 0.09760835103647476}, {
            1, 0.08574259597760697}, {0, 0.1312021028409937}}]}, Null}}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
       "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.926876486748294*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"22c95140-1a51-4f6a-a7a6-2f6dff85dd37"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"typicalWeeklyGasConsumptionByHeatingState", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SortBy", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"Flatten", ",", 
            RowBox[{
             RowBox[{"MapFunctionToGranularity", "[", 
              RowBox[{"GetMeanAndSEM", ",", 
               RowBox[{"gasConsumptionByHeatingState", "[", 
                RowBox[{"[", "heating", "]"}], "]"}], ",", 
               "\"\<DayName\>\""}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Monday", "->", "1"}], ",", 
               RowBox[{"Tuesday", "->", "2"}], ",", 
               RowBox[{"Wednesday", "->", "3"}], ",", 
               RowBox[{"Thursday", "->", "4"}], ",", 
               RowBox[{"Friday", "->", "5"}], ",", 
               RowBox[{"Saturday", "->", "6"}], ",", 
               RowBox[{"Sunday", "->", "7"}]}], "}"}]}]}], "]"}], 
          "\[IndentingNewLine]", ",", "First"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"heating", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.922530045094531*^9, 3.9225300569356675`*^9}, {
  3.922530097335532*^9, 3.922530151608569*^9}, {3.922530749591496*^9, 
  3.9225307508621225`*^9}, {3.9268764072970943`*^9, 3.926876441376621*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"d7002cb0-fd2b-4c38-a968-4baf173e7655"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
  "typicalWeeklyGasConsumptionByHeatingState", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "->", "500"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<nincs f\[UDoubleAcute]t\[EAcute]s\>\"", ",", 
        "\"\<van f\[UDoubleAcute]t\[EAcute]s\>\""}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9268739409588046`*^9, 3.92687398143183*^9}, {
   3.9268740235346603`*^9, 3.926874105406543*^9}, {3.926874148863144*^9, 
   3.926874166669923*^9}, {3.92687422411275*^9, 3.926874257777479*^9}, {
   3.926874388784397*^9, 3.9268743930121307`*^9}, {3.9268744496627645`*^9, 
   3.9268744501419306`*^9}, {3.9268744803823338`*^9, 3.926874526063098*^9}, {
   3.9268754592469244`*^9, 3.92687549435257*^9}, 3.926876454609518*^9},
 CellLabel->
  "In[401]:=",ExpressionUUID->"d0336753-a397-47e1-8965-8dad4e286ede"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{1., 0.09875195007800315}, {2., 0.08816326530612244}, {3., 
         0.09308641975308644}, {4., 0.11715762273901813`}, {5., 
         0.11051282051282055`}, {6., 0.08215867901731774}, {7., 
         0.07378219841877073}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[{{1., 0.17925049309664698`}, {2., 0.1725067385444744}, {3., 
         0.1934}, {4., 0.14965312190287416`}, {5., 0.22282780410742498`}, {6.,
          0.11606410734252706`}, {7., 0.11999050332383666`}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.5, 0.036034764255237224`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.5, 7.5}, {0.036034764255237224`, 0.26791477214634046`}},
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Prolog -> {{{{
          Opacity[0.15], 
          RGBColor[0, 0, 1], 
          
          PolygonBox[{{1, 0.09637915614273272}, {2, 0.08594261049621217}, {
            3, 0.09071000815743663}, {4, 0.11484642105681389`}, {
            5, 0.10774716749609474`}, {6, 0.07995603834201648}, {
            7, 0.07206952851047445}, {7, 0.07549486832706702}, {
            6, 0.08436131969261901}, {5, 0.11327847352954636`}, {
            4, 0.11946882442122236`}, {3, 0.09546283134873626}, {
            2, 0.0903839201160327}, {1, 0.10112474401327358`}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[1, 0, 0], 
          
          PolygonBox[{{1, 0.17601830427146908`}, {2, 0.16928500749619588`}, {
            3, 0.19002978942382956`}, {4, 0.14516113999519034`}, {
            5, 0.21548827023204298`}, {6, 0.1135529078490091}, {
            7, 0.1170309953603946}, {7, 0.12295001128727873`}, {
            6, 0.11857530683604503`}, {5, 0.23016733798280697`}, {
            4, 0.154145103810558}, {3, 0.19677021057617042`}, {
            2, 0.17572846959275293`}, {1, 0.18248268192182487`}}]}, Null}}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
       "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.926875479235182*^9, 3.9268754955128503`*^9}, 
   3.9268762510029078`*^9, {3.926876282393192*^9, 3.926876348546502*^9}, 
   3.9268764560104055`*^9, 
   3.926878135902648*^9},ExpressionUUID->"3bdbcd6d-b9c1-4cf0-974d-\
1624a6a428d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "60"}], "+", "30"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
    "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9268756141753025`*^9, 3.926875696751387*^9}, {
  3.926875730031143*^9, 3.9268757400623474`*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"abb24aa7-a25c-4ac3-a5c1-7cd858c4c1d2"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQF2Dhd8t3DMXLnQHsxtCHNg6K7byDbTaD+YfyDJ
wSbDRSpIejpE3iHLQeYDg4PIp8kQ/oMCh4YI/t2fq/wg6heUOBjMqfw2j28O
RD6hwmFN/TSdV0ETIXyFGoddQVLLVKZD7XtQ7zBh5SQ/ti4o/0Kjw44rgY3/
by+G8Dc0OxxxuftqWzNUfkKrg8M2R96N0xdA+AXtDiqtkZXBrlD1AZ0OO9QM
H7/vmAHhG3Q77Ar/vqq1YxOEL9DrIBvRxmH0YyeE/6HPIT1K5+CGlTsg/IwJ
Dv929HyxzYfKR0x06A83k/7ntQvC95jk0KC8zHZiI9Q8i8kOYQt4tGcorIXw
NaY4iEjrF+bth/Ilpjoc6ZJTW+K5EsLnmOawZZpV3n+myfsBh9p20w==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1410.}, {-0.018566123106799906`, 0.10270679630624911`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268756151566133`*^9, 3.926875696983192*^9}, {
  3.9268757377155237`*^9, 3.926875740276661*^9}},
 CellLabel->
  "Out[348]=",ExpressionUUID->"69bdc37a-61d2-4983-b1f9-ca496450b191"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NonHeatingGasConsumption", "[", "minute_", "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "60"}], "+", "30"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
       "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]",
      "]"}], "[", "minute", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.92687570792201*^9, 3.926875899872523*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"a458843c-823f-4eb1-87c5-c2ad9d01a51c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NonHeatingGasConsumption", "[", "minute", "]"}], "/", "4"}], ",", 
   RowBox[{"{", 
    RowBox[{"minute", ",", "0", ",", 
     RowBox[{"24", " ", "60"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9268758042261953`*^9, 3.9268758158708057`*^9}, {
  3.926876118112168*^9, 3.9268761184152956`*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"7a8efb37-d6b1-4b15-aafe-ac89da7c32e6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxNynk01Psfx3EiFC5XZSdrhSwZRSrfr6UhDUVR1jSUfZcQI7Jkyb412WOa
7CRZyl65WbOFppLtFhFKuHWv+/v98fu8f+e8znmexzkvSbKn6ZVtTExMBsxM
TP+td5/S/icD/2hlmrWtxlukY05HPvTM6x7E/+e1jqEPn3SPI/ORuHhvNINV
hvVw7qMnkI2sQ7zyHoFdZh7nH1LSwtNOfU39z7Di7/uYzaUxZK9tPSonuHDk
Er4TyZeZtZFnpSpWIn+ALXWTavomdZH77X18BbpPIjcWHVmj551CLpr9y1/T
zwh5l7te7SMjU+TzjpyKhh/NkOUj89QdhMyRme4TdCgm4IXqEP04d/Bo60tS
Vow5Pvsw+T2ndDLW3v+7aXExuPy91YWaNrClcITb3KELyGzmZWHCheBLvb9K
w8MvItfrGY3Oky2QXQhL8k3SVsgiUomhcTPWyGIi4lclLOyQDxb7cf3EyMgs
hZVVLwLAE7nz51Oqwby2myeet4CJYhz7N3rJ+Ez1kVCnvxKxYAY/rwIDXHNP
dtNmHiwurNvdwWaPHJNllyMnDdZIGZ1tTQPPxZGULrI5IOuFarREfQYX+Mic
fdxzBbn+e3WHaIMj8oA/ph5R7Ix8cqS+a+UjuJGganlJ3AX5QlxSc5Ai+PvU
klTGcXCKplF09WkXnI/hOS0wm4Qpp5Qu9FiCXbSdalkCwUXLMiGameCEcoH8
PbyuyAEuOzuWb4NJM185HgS5IUvajhjbuLkj+1dImpOUPZGvbNVViAV6IUuI
6+uVZ4IZx9+MH68Da5LyiiKegzOtHD17hsFE++7zXgzwdxdlzd0zXniu1dTw
14ZU7L5P6t76BbBp0Dqr9Tdw1xMBlRsq3shaa+pWVHewvFdA9difYIGFenYB
sg8yMfGvlfNEX2Q/wnFGirwfco3h8GY4Gbx82U3Alwoec9gr4l3gh2uuj2/v
pGVgrY6D4p50MN0lUsq9EpzorrHPtQ5s65ur6NgJVgpkPWw/CO6JGNC1WgK7
JmWbntt5DXmuuecOIQhMXvzVtWsezCGo4TTO8Ecu1/Flz+u/jvxFo6YZ5whA
lldeuTaFgxu/tE7vPAM2LEkyIdiA+WICbus7BOCb1eXF/uJ3sQlHuxYrV3Ah
0eCHpw/YWVZFMSIQfDu/n2MkHUwX8ZyRrQHv41g0dZYORC767tJWlgY2vqf9
UiM2CHlDW7C3M/QG8vDddG+Op+DqFT5+0gaYrq+6Zc0ejJyfY/LJnR+cbfDR
+ocYOPOb12uKbDCOK0RmxrHlYCm5TER2RXDCqaTGRDVw8FpffLUp2KWA+9KQ
F1jGhINu+Rn8joll5ePlEGTabw2t1ToUZA9Rz6Qw6VBk0rnUPn87sFzsEy63
HHBW8R+lc01gtra3hpcnwFP6+atbH0Nx+VX2nqqmHKy5z4Ga+xlMNZPTObEC
vsZY/Px2A8x/rSmbi/Um8urPUL1STvCAalF4vgG4wrmrNT0SnKa08tZuHRz0
TWhdwTkM2YWyRd6KBlvsmO0bpIEH+t5EHK8DG6S90qQ9B9NO6tNv/gFmXe/Y
Y9ULJtPxW4dfh+GVCrom3xoLsVaLZ8s8I+Dgp3XdnQywxt4qWuAMmP/wDYqE
VDjymiHR/OUlsMDQwunRMfBRq2TtWZNbyFxDNfskPcCThsOcNrHgV2xX/gnK
Aj9qX1vOooErVu66S5SA6RJa8w/KwYVnpq4qV9/CuZpu++S4FWDZlKjpulpw
MqOP8bwJHKUpMDrcDj4ob5lP+gkeFMpx6SREIP+4lJR6pAIsTLv1lH4gEtnj
ToDHiZPgdj93icHLYLdPjoGiXmB+a/LgVQp4If3DP3GR4NZ+a4XqeHCJ2702
3aRInHLoRtCYXT6WtmPiwmgqmEITXHLKBDvrXoj4SQXz8ml/khkG10/Kk4y5
o5BdJ7gtySFg8eFlR/9FsD2rUIO2fDQyXU17J7cjuOzJuZZxF3C15lU/mge4
7lmAnK9PNE7g3iF7YCgfa8Tj3mP+4HZilcF4CLibNFLjEwlmXNwbXZwGXnJw
thq7D+YN+ZtFqx1MSE8uuz8J/kRqXxQ2vY2cw/pNKaUDPLOrXYiHOQZZXjqZ
NV4LvGv7QsExIvjXnB62YARefrPC3WESg+fvfqdU/zUHm+nKZVDNwGMNp0t9
LMC9JRuBhjbgXI+y2oduYC9Vu68cweBdjS8dXlLBddrKE5EN4AdPGWu4aixy
lnrs779KwDSJ10unpsG1OwR7MkXikEfnWqMLpMAbHc66pXLgGFUtSRVFsHAB
31atShxusbCrJfpiFlbC8yfjqBr4GKWpsVkdTNHgVh08CW5ftX04ew5s4Lgt
i8sL3P+2OIoQ/3//3QUjJmzxyI+NsmW8boI798Te82wAD727zue5Ch49Q1iu
YLqDPNG21Lv0G9gq1+Y5he8ObjMdGKo8dhdjBPU8/Y0fbHPhWG2uEPg9oaRU
SQw8+SWaaiwDniq+EuOhAJ6PYegt6YNX3M8xeTiAfS211JSGwWtEOacl3QTk
Qi+znsSbYGNqmMqhZ+CGovgYix6wTGXmVNhbsKWaGA//NDipofBYyTxYIXjW
xG8J/ELrgJPWagIetLw3REn5LmbH7Erh+AH+2VGeNrgJHhzrIEoLJiLTF8c3
fI+AD2bx2WU+AF8sKLa34UpCrpRNnGJTALOVBFyuOgUW5SS0WZqAD7ktSmy3
AD/NfnV2whpM7H1ws9IOHH8lQ5BKBr/+O6IqwgHMn+Fr4HkVbK1EnrRwSsKt
OrM5C/+gYreXR/MqroMf1Zy+xBIN/jGXUEZsBR8VGdyM2QT7xa+v3NuTjFzx
t+h8+SHw6TrluToM/MlDZ6rFCMwrpi+pYwJW7z5t13kebCjVFxppDrYNPJtH
vJiMM3WVBt1hycR8Bgab2S3BUfvN3ndZgYdv2Vr3ksHSk44Tr53BrP6fdz+h
gWc4Xc9kT4PzvtjvZmdKQbbstR73FgXXnxg/9kAevKfCLJehAdabSz2zjoF9
xAeZ+PTBlDLJ8jGDFJy5ItuEa5KKxWp6W+QZgjO6WrdfJYELzHlrDhqD630q
dzaagAcSjO31zcA1LNfV36eA0wLyOK8NgMVj1V9WLYHp9/rDv3ClIrsX3bPb
KQpWLXfUOqAAtq+cePxVCZxWbaT4RBVcrsr+maoGfvGotYhyBPxeLciOrJGK
19DK5FxfUbH1xwRRoibYslGIc0Qb/LR5a9P+FPgqd35rdxiYxxqPJjSChd+V
8nSNgWVsBbKs18EPxY0YNLY0ZKUP4RIre8DeLTk6GWLg2rx6h2Oy4M4LWLnM
fvAIz4s1brk0fDBlcaX9GxWbe0nSWpcH/wgdipo8CBZcnhR4pAI+ardEj1QD
z9w5vCPPHZzQFOxcTwPr+wp7lfGnI7fnRRmmCKbjEmdNbfPj7mLHe1ZlAoTB
dRu2WzaiYBXZ7nFdcbAM5X4CjxRY6M0N3bey4G0xB8t9FMELmu/4dx4GP8vV
mtfQAyduy3/meA5MeEV2eO4NfpMsyymdBK4lidD7usAp7L+fDGLOQJ5xqxB/
hoOPDJ7e2AoF/wtvksuQ
       "]]},
     Annotation[#, "Charting`Private`Tag$1210350#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.015614334470989762`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1440}, {0.015614334470989762`, 0.03658256880733945}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268758166248875`*^9, 3.9268759019799013`*^9}, 
   3.926876118957431*^9},
 CellLabel->
  "Out[383]=",ExpressionUUID->"0eea645d-f8f1-4303-8f92-d19d9b47028b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"NonHeatingGasConsumption", "[", "minute", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"minute", ",", "0", ",", 
       RowBox[{
        RowBox[{"60", " ", "24"}], "-", "5"}], ",", "5"}], "}"}]}], "]"}], 
   "]"}], "/", "4"}]], "Input",
 CellChangeTimes->{{3.926875905038678*^9, 3.926875934590268*^9}, {
  3.9268761223677874`*^9, 3.926876122831351*^9}},
 CellLabel->
  "In[384]:=",ExpressionUUID->"4c875e90-8a3f-4306-9c44-b4336a168871"],

Cell[BoxData["7.256044908547889`"], "Output",
 CellChangeTimes->{{3.926875920955964*^9, 3.926875934847541*^9}, 
   3.926876123265031*^9},
 CellLabel->
  "Out[384]=",ExpressionUUID->"13fc5b70-b12f-44ed-9e4c-49397326f225"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "#", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "-", 
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"NonHeatingGasConsumption", "[", "minute", "]"}], "/", 
          "4"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"minute", ",", "0", ",", 
           RowBox[{
            RowBox[{"60", " ", "24"}], "-", "5"}], ",", "5"}], "}"}]}], "]"}],
        "]"}]}], "\[IndentingNewLine]", "&"}], ",", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{"gasStockDaily", ",", "None"}], "]"}]}], "]"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9268759385609426`*^9, 3.9268760416336627`*^9}, {
  3.926876082192786*^9, 3.9268761109593267`*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"74dd435f-0895-4ca5-8a3d-8d9e316b7a6d"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdln1MlWUYxk+EDiUKidCU0VEZghH5AQLydfNx+P445wCHA4fDec+Hm1sW
tFhr1h9vLHXLla6Pv2qK7WzaRs22NOeWvdV09U+mFTq3Fkw2WGSDOVu11ZLz
/J6297AxdnE/933d133dz3PO5siod1+Kw+E4c/935a/6War7Zmuad/KyCP+Q
QPbPYxk3q8BpYnx+arHypI5nKvxEAzhb3ln6Me/Zt7rAG6Tk9ecurD7QBs6V
v31Vh354qQPslHsfvbj29PMV4C0KL+8B58vtdalF36d4wAXk6/qFiu96D3i7
6ucXHS9WOKT7LRH/6MLB745EwTukcPbDmlv55eCd8uXBxhsv1NaBd6GvFbxb
8f/ZDC6lfie4TBLzc7WD9yh8WZ8vR5+eZ4WcL7w4u/HsZnClTNw7/PH8K9vA
e8X9Ve/Ln7Y9Ca6iPz2fauWPvwxcg1+l4Fo51pIZl6PV4DrmrbHI9c9uFb1/
5XGFTYF/O/F65d9v6Dfr0ddAvEH1c4l+zAb0aT8b5c0V/vRdxBupp/1qwi9d
v0n56dX74mJ/mK/pwg/tbzN68MtsVv0daiLeIlcS84fPbEna31ZVv5jzZitx
7Veb8vuCi3gbfuv67VK0sj9xzd/Ofup96Ejqv4P56f3vVHhVC/FO8nX9LvRV
Eu9K8rOb+8a8zG70NBLvUfEs9Jg9Kj6l67vRx3lxq/sQ38F5t/LvKP5abuZb
T74HP5ineNjPveR76LeWfA/19L565cRrp//Y/3Yu+RpvIN8r2xL3k/tieanP
PBy97HsN+b32/TbBy/BZvfJr4E529+1i8vu4fyXk9zE/9Jh9zAe9Vh986HP0
c//gk36lN13r75fUxYzg1b9yyO+Xmx8sHH7Geph8H/xPk+9jXzS/z17f8nGf
9Hs1YN8PGZCFhL4C8gck95iz9dWcreQPcL+d5PuT+P1q3nHdv5/5MV/LT3/a
/0H48skfpP4W8gfpX/s/yHuh+x8Cc39kyP4em+A474c1hP7d5AfQD5aAfR/M
AOfZZytAPc0/jD70yjD7pd+rYebHPK1h9DFPR5Dz7KcE4dfvYdD+HlpB5q33
b4T7QD8ywnv8KPkjYi2nTWTvn61T+Tq+nvyQ3V8JSU/i8wJ/zRD7lwd/SA54
xr8uM3jvHYZU5NUfT3lqo8JOg/rrqGewr6sVNgzuJ+dNg3r0O2lIfPRcb8Ub
6fAZMlY94Vw19JDCM4ZUr+m5c61gDfxhu15nWMz18azFT6a+UPxhzj8Afxg9
WfDreAb8Ye53Ifxh+l8Lf5j+HoE/wnnuvzMJSwR/dsIfSfq8izB/zk9G7O+Z
FbHPcybCvLR/UeKPwR9FH++fRGUpv/pcy3tzyn8jKscv/dQ9W/q7wmZUzriu
Zdww/1F48j4eD855/p1T87Oi4kx84ZlX8ZmomIkH+6rCjphkTpWP18zfVdgZ
o79N8MfwLxX9MTmb4yoffnAa/hj9ZqI/Js7zR94d+3Ya/pikTW+6eOIu/s3E
7Pvs2Pc//g/Qut8g
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 168.}, {-0.6560449085478881, 95.19395509145212}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268759699377546`*^9, 3.9268759808744574`*^9}, {
  3.926876016711598*^9, 3.9268760442653832`*^9}, {3.9268760852763023`*^9, 
  3.9268761137027187`*^9}},
 CellLabel->
  "Out[382]=",ExpressionUUID->"df37885d-c192-49de-a1f4-32180fc5d473"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"totalGasTotalHeatDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"day", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", 
        "energyContentInGasPerCubicMeter"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Total", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"day", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "cycle", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "gasAndHeatStockDaily"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266213514149437`*^9, 3.9266213692279315`*^9}, 
   3.926621408438861*^9, {3.9266216898477745`*^9, 3.9266217396382055`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"61d39b7d-e1d6-47cb-bb2e-b7e73164c7db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fit", "[", 
  RowBox[{"totalGasTotalHeatDaily", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9266217647303343`*^9, 3.926621771718379*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"112bbd8d-22b5-4222-bc0c-1566b7d6711b"],

Cell[BoxData[
 RowBox[{"0.19333512951831616`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.601837531626565`", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.926621768229946*^9, 3.926621772325565*^9}},
 CellLabel->"Out[98]=",ExpressionUUID->"5b8f2c5a-885a-4212-9ff8-827f3a0eea6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "totalGasTotalHeatDaily", "]"}]], "Input",
 CellChangeTimes->{{3.926621744629937*^9, 3.926621749350842*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"28983e7c-8e9d-4f67-a7ed-4bb7b3102dfb"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVVG1oU2cUvnUT9mNIrZsM18ItOn+IH7WuW50bOwqKghudGruaOW/aJk1a
m+Q2n01ie9OpdX9qmWyKGxJQnPhFh1jcj0EGssomuCnCVJDYrjLc5lq3lQ4V
vfc+z43khXA5ec85z/Occ95T3Rza5J2hKErS/FnfrS7zvJwUxTqyE98LUXwH
w/j+nsBX0cRyd53pFnejP/j11XbZP1Y/MHboE96npWpErxx5LQvb0GXlgOng
7oOdi8tvpnv9cBfvY7i/psOuiSD/yr0y+OqTy09+2ol8nzJ/Qxx4f+6GfSmL
fD/w3siI5a5/Rb7hpJw6aR71kAypCxvL50SRb1KX2b/krvz9fxj2t3GRFea5
5QO+x0B8ISFdZrrKtl7YP0fBd4x6hlLAP069+aSctvAW0V+LIn4kKpq6qOpG
xAO8shYxrn15+1+fID7oI//Vcsnif9rPeq6Hf4D1ybth32FflCbEf0Hb4H11
jLYH+itoay7kX6wxXlFsPSv8MqZv11bVRZHvpiH5vQ/m/XggAT03u2X6vnlG
w6jPeV00n3nWsT9lETFM945pH+Jvd4pxYf79fQ+bpMwCecR++bPgc9WQ3eVr
Xqg+loY9l/XT0hKx6vUH61tIi13uLeyv2ot8v8bJ3wt+fRn2pwv8xolnsI/m
/H5o/V8Xw/y8Qv+JmNjz/7gHeu7S/msX7svjsF0ZCVd811ZRFZZxS98U8fMB
8H/QJyesb8oo8r+3bVZwyt2L+HeoR82gPvFeyXfeGu58GJe3LIERh38U/u9F
RElcrNL7tWI/ZcNnCzbU+tC/t7PgO8X63UtRTwT4jT20+Q6GMrL/aM107fd8
P4Np/J/rgP+bfPfGGszrQXPeJicmJmq2oN7TSVk28Pm+hde70I+GhJy05zzE
9xcp5rP9G1gfZ58ousid1Etn+720PaXzd3SHKO7+nnOx5WKlr3+f+0cLgs8y
5pd24N115ruzdL4lyPo478WLfh0JiFJ7bLIh/wbiz7YT30Uc1skII/71bvY/
jHqp5FPowPt/jngq9Z4gPy2Afn3zMfOPvmv3s24b7aXo79oO+rci3ynia6HS
/Pk26BulHlV7Nh82Hy/855j7w15g/wDvekuxvvY+3NhctEvwjU3IP4P6cj7k
/4/4ih96biSlMGwO7BK+//FW3lciPvUMz/Zfzv6rAezjjc6+b0X8zESxfs4+
zq9KumPPa3gPB4Ls50fox4shsQdlVhP47QnxfkfpPOTakS9Lfcpmvj/iF5rR
rxrqNfeHzX+eg+eCfdiZU+qZ7ehdDP7bGa/6oe8i+yMtxX0IvFbgGQHq/wB8
l5KP5pGnQM5jrQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 983.1666666666665}, {0, 569.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.926621749622713*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"c74a30f8-0d1f-4cce-910a-9ecaf8a1ceb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", 
    "totalGasTotalHeatDaily"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9266217856269417`*^9, 3.9266218121982236`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"85b4ac6d-389b-49f2-91fb-bdcbed39093e"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.623], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.623], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.2, 15.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{20.509593196232636`, 57.87929733813928}, {
           27.849100591156414`, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 15]& ,
        TagBoxNote->"15"],
       StyleBox["15", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[15, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.2, 0}, {0.4, 14.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{57.37929733813928, 94.74900148004593}, {
           32.36436888507933, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.4, 0}, {0.6, 33.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{94.24900148004593, 
           131.61870562195259`}, {-53.42572869945589, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 33]& ,
        TagBoxNote->"33"],
       StyleBox["33", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[33, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.8, 44.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{131.11870562195259`, 
           168.4884097638592}, {-103.09367993260786`, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 44]& ,
        TagBoxNote->"44"],
       StyleBox["44", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[44, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {1., 10.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{167.9884097638592, 205.35811390576586`}, {
           50.42544206077095, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.2, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{204.85811390576586`, 242.2278180476725}, {
           82.0323201182313, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.6, 0}, {1.8, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{315.4672263314858, 352.83693047339244`}, {
           91.06285670607711, 96.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.036000000000000004`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.8}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926621798135477*^9, 3.926621812424902*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"52315468-c3d4-4843-af7f-a0002e6c2378"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", 
    "totalGasTotalHeatDaily"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9266524930597134`*^9, 3.92665249731271*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"fd89b0f0-34f7-4f2d-aa90-cd3c49c33174"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdlQ1UzXcYx+/JUbTZYmgrTTqkYZX3WNM3t67eULd7b/dWt43aKbHjLWUT
/Z0tykt5yc37iqiYhnCL0qW0qEhvErWiFBm1hqa2Fp7nHPzu/3/u+dzn/zy/
5+X7/91RC5dKv9MTiUSr++5X329Wu4O1R2jM0YJ7DvQDfNMSVGkJD4kHYJgu
tO+qIjZCfdugJYXnGoiHIrdLm+HwwQPiT6GOGj7BRsb2EdjwIqtkdNZ9YnMo
P9q7SL7wL2IL/JaYfeKiXQfxaFw6IuQtuVBJbInvh18N2+fM+VlhaH3Mz+YT
24jHIVab+fnij1uIJyD+8jMr//h2YmtMS8hNr/nlGrEtpHlajYHkCfFELCpP
bdlozPlOQpFJ7+lRUo43GXW1Y81lU5uJp8D01drH9U5Fqcf25NalzNPQlqNn
EtHWRDwdZ+zW5z9vqCW2g8RsQ7HPgWLiGbj+MHOky4si4pnoWprRpjK/QfwV
5hvOvBoedZvYHr39LB8ePXWL+Gs0r0g62L6B489Cx7GTBYYCswOONQWv1c4s
IwZEby8B+MldkzIr6yXZHeH64Epy5EKqR3BEUnehevMDrmc2vDVJEaZbSB/C
bMSvPHxjpILnK8bOlLtWntV3yC5G68aBpy03PyK7E3zyEtb960os9PHNVS81
yaw3ZwT364213kn9F5wxPrNje8lltkuQv2xv/7LQOrJLMNng8PpwM57PHDwy
CAxLc+L85sCtKqsjKvAx2V2wvOhk7ic9rWR3gaCNCZl0gOfnCpvuZvG0RN7f
FQX9vfa3TGL9ucGvprdT3dFIdjd0j3k+MbWS9egOi3h78ZZors8djQELDJ8e
p/1EHohrGLt6yLcc3wPhsSERsSGst7koS5lzxySY+zcXPRHFlrLrrM95aDjr
Ha//jOubhz3yu30SYv/5sHOY0fdh+3wcd2pSVizg/nliWJGj8soAigdPDK5t
hqS7gJ73xI7O+6sOqcvfsM4TnylkN4stOH8vfFOws9IqkPoNL5jpx0gn+LJe
vFDR5VjZ5Uh60XnB3qguPVzM+pFC9PaCFKEpbj7atEvkL4UuNfOE7VOqRyeF
Jr1pV3oTz9cbwbPPfHlwK+/vDdGaX90LX/D+3gg6MOhJhi3v7w1FkHWieHEO
+cuQ71IfecuG3ifIoHm92F+GUqfOTQlB7C+DlWLQI38r1occKmP9yPGpZIcc
c81q9mQwC3IM6c3vu1aQvxylrVMKd3leJn8FfuzJNotppfqgwNDz0VpXPl8E
BaqnS7K9hpHedAqsa/89MeP2XfL3QWX18pCeUWSHD5yMDp1PqVxD/j7v9lf3
HouU+C/1ixa3s3SeQ4ndA7NMbY0pnqBE5OCgjFuRpG+dEhY1sQ2zqnh+Kuze
FPgkbtkR8le9G19QoXHdhwbVIzh/Ff7cbvlD/mOKJ/JFpn3taftazt8X1jmd
V523UX2CL/K2HhRrt9H7rfOFydOAcQXlfP754WIpbu/P/oP8/VBScc313ko6
fwQ/6BLDEqJMqsnfD2M07mtPxfH7449YSWlebQrr35/mT88L/u/1zx9RYoPi
OOk58ldj3j7DaOXfnL8aYXoX6kvkfB6oYbq/7Z9tO7h/ajx7vfj/MwCWgQON
9HfVO/wPFnpFLA==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 120.}, {0, 1.6699816159423058`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.926652497710183*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"8b226fdc-0685-4c82-8803-cecefa48eab3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["kaz\[AAcute]nok hat\[EAcute]konys\[AAcute]g\[AAcute]nak \
becsl\[EAcute]se", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.926857273444168*^9, 3.9268572756687193`*^9}, {3.926876964206575*^9, 
   3.926876983262782*^9}},ExpressionUUID->"a3d35a0f-7178-4a21-a900-\
089a509c48e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasStockAndHeatStockDaily", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", 
           RowBox[{"gasStockDaily", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"dayN", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{
          RowBox[{"Dimensions", "[", 
           RowBox[{
            RowBox[{"heatStockDaily", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"dayN", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
          RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"gasStockDaily", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"dayN", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"heatStockDaily", "[", 
              RowBox[{"[", "cycle", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"dayN", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "None"}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"dayN", ",", "1", ",", 
        RowBox[{"Length", "[", "seasonDays", "]"}]}], "}"}]}], "]"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.9268747795030923`*^9, 3.9268748383665853`*^9}, {
   3.9268748826390753`*^9, 3.9268749328805246`*^9}, {3.926875080958615*^9, 
   3.9268750843707323`*^9}, 3.9268752647052727`*^9, {3.9268770347996483`*^9, 
   3.926877115746535*^9}, {3.9268771836653214`*^9, 3.926877183744909*^9}, {
   3.926877218866188*^9, 3.9268772570086017`*^9}, {3.9268773001287556`*^9, 
   3.9268773069630346`*^9}, {3.9268775816820717`*^9, 3.9268776481601067`*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"0c694a4a-041c-4cfc-bf8d-0cc4f728f566"],

Cell[CellGroupData[{

Cell[BoxData["heatingProportionOfGasConsumption"], "Input",
 CellLabel->
  "In[567]:=",ExpressionUUID->"8cb978f9-1bc6-49d6-ab82-e8abfcfb05e2"],

Cell[BoxData["0.6292017926261124`"], "Output",
 CellChangeTimes->{3.9268792705144987`*^9},
 CellLabel->
  "Out[567]=",ExpressionUUID->"42d66957-8928-44a9-ad6a-4296e65bcd28"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"boilerEfficiencyHourlyByDay", "=", 
   RowBox[{"Quiet", "[", " ", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"DateObject", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"DateList", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "30", ",", "0"}], "}"}]}], "]"}], "]"}], 
              "&"}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "23"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"MapFunctionToGranularity", "[", 
               RowBox[{"Total", ",", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                   RowBox[{"Total", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Differences", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], 
                    "]"}]}], "}"}], "]"}], ",", "\"\<Hour\>\""}], "]"}], 
              "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"0.75", " ", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"MapFunctionToGranularity", "[", 
                 RowBox[{"Total", ",", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                    RowBox[{"Differences", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "]"}], 
                  ",", "\"\<Hour\>\""}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", 
              "energyContentInGasPerCubicMeter"}], ")"}]}]}], 
          "\[IndentingNewLine]", "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"dayData", ",", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"gasStockAndHeatStockDaily", ",", "None"}], "]"}]}], 
         "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"NumberQ", "[", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "&"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9268780153758802`*^9, 3.926878069858247*^9}, {
   3.9268781559214334`*^9, 3.926878193599214*^9}, {3.9268783448025045`*^9, 
   3.9268784046082015`*^9}, {3.9268785260816603`*^9, 3.926878549489854*^9}, {
   3.9268785838102484`*^9, 3.9268785870153728`*^9}, {3.926878626195988*^9, 
   3.926878627936429*^9}, {3.9268787637185693`*^9, 3.926878777568534*^9}, {
   3.9268789431855526`*^9, 3.9268789536501913`*^9}, 3.926879009395851*^9, {
   3.9268791837639647`*^9, 3.926879188993251*^9}, {3.9268792769301906`*^9, 
   3.926879278306017*^9}},
 CellLabel->
  "In[568]:=",ExpressionUUID->"e61a79c5-ec88-4b85-a650-ca5f1eb7eeec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanBoilerEfficiencyByDay", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "dayData", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"NumberQ", "[", "#", "]"}], "&&", 
          RowBox[{"0", "<", "#"}]}], "&"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", "!=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NormalizeDate", "[", 
            RowBox[{
             RowBox[{"dayData", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Mean", "[", "#", "]"}]}], "}"}], ",", "Nothing"}], "]"}], 
       "&"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"dayData", ",", "boilerEfficiencyHourlyByDay"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.92687919646801*^9, 3.9268792072180986`*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"c194de19-f721-4cc4-b5ac-f1259677c610"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "meanBoilerEfficiencyByDay", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9268792504220047`*^9, 3.9268792582249794`*^9}},
 CellLabel->
  "In[570]:=",ExpressionUUID->"74976a21-4a01-46a9-839f-8f4d47f1bbdb"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.2, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{20.509593196232633`, 53.38299195497996}, {
           88.72737310577214, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.2, 0}, {0.4, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{52.88299195497996, 85.75639071372727}, {
           75.02586931731642, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.4, 0}, {0.6, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{85.25639071372727, 118.12978947247457`}, {
           54.473613634632855`, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.8, 23.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{117.62978947247457`, 
           150.5031882312219}, {-61.98916856724074, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 23]& ,
        TagBoxNote->"23"],
       StyleBox["23", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[23, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {1., 29.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{150.0031882312219, 
           182.8765869899692}, {-103.09367993260787`, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.2, 26.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{182.3765869899692, 
           215.2499857487165}, {-82.54142424992429, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 26]& ,
        TagBoxNote->"26"],
       StyleBox["26", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[26, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.2, 0}, {1.4, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{214.7499857487165, 247.62338450746384`}, {
           88.72737310577214, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.4, 0}, {1.6, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{247.12338450746384`, 279.9967832662112}, {
           75.02586931731642, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.8, 0}, {5., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{797.4711634061682, 830.3445621649156}, {
           88.72737310577214, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.6, 0}, {7.8, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{1250.6987460286305`, 1283.572144787378}, {
           88.72737310577214, 96.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.040999999999999995`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0, 2.05}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268792547044263`*^9, 3.92687928632262*^9}},
 CellLabel->
  "Out[570]=",ExpressionUUID->"3ae8a8aa-0f0b-4f50-91be-490b8aa24ba4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"boilerEfficiencyEstimate", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "meanBoilerEfficiencyByDay", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boilerEfficiencyEstimate", "=", "0.9835433845947968`"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268793122925196`*^9, 3.9268793135370817`*^9}, {
  3.926879345763065*^9, 3.926879361281663*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"9aed4f95-6012-4267-9a04-bfac2fb1a8bc"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
\\\"meanBoilerEfficiencyByDay\\\", \\\"]\\\"}]\\) does not exist.\"", 2, 39, 
   1, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161972069273`*^9, 3.9271221514804535`*^9, 
  3.927132238588624*^9, 3.9272939434833317`*^9},
 CellLabel->
  "During evaluation of \
In[39]:=",ExpressionUUID->"46881e96-6006-40fc-81be-72a1097fc8e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"meanBoilerEfficiencyByDay", ",", 
   RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9268790139353504`*^9, 3.9268792098249493`*^9}, {
  3.926879241952983*^9, 3.9268792466727533`*^9}},
 CellLabel->
  "In[571]:=",ExpressionUUID->"70373f55-a090-4e34-8baa-f11be2f9f7ce"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwl1A1UU2UYB/ABQQhmCwtCTDeE6VDgDkNPQbKLSRIoMxFJEcdXJCjbQUIR
KAKB+NBNG5Cc0OGIFhRniIoOKDQIAYUJmnyI8k0KV66AnlByPffZPWdn53fu
e5/3+b/vfS83XPJZlDGLxQqFH/MPl9yeS5H6ljr+8hnaC9zoD+aNcy7q1c8Z
04lgm7JLmvPnRxlzSsHSaKvEb9SDjEXt4FwrOmvGn2Kc9gxst4VtITKZYaxZ
aU+RgSleGrriCeNBX/APV+WDqoClQjA7Aczhu07EcVYyFp4F9+uDzO+ljzDj
pTfA7VZdvScGHjNWzoCtzRp4o4uxvm75KoqcHW9XWERg/5rrDlAvSxHobXGH
MdvGkSI7hlv6braMMRaS4OaQ1rpfgqexfiy4q7V4OuvhFNYvAFcvqSnpcMF+
dX+AFV2yzpxevM96DCY8PMND3TGveBOPIi+5nIuMVvfj+kyALX/qTbkgn8D1
eWs1RX73zDpfcv0Rro8H+Hv9wKYE1ST2GwXeeNIm2KMN8wpHwbIio+aWIqwv
XbKGIiuCtmWUq/7B+U+AszPfuVN+boAxUQsePtbnqL+H+cVDYL/jfZHPZ7C+
3JJPkQ3dlS3pMYb9dQd3BBT11Jmi6f1g9WrZvM+XuJ6cXHCE6Y7QvF2YX3QR
3FhjaVJWiU57AP48LvbvqqVPcT/dnCjyr3qHM0YyrMfeB3ZaZbFHVzmLebLB
yintVLg51pdWg9fznyr8OrE/ZT9YEK8mJsZxfXSmayky4drPttwtOJ5FgL0y
p+1janA+Yg9Y+3rKVU/Hecx7HCx7kbk7pAD7k1eBF0vMuu0DDHl7wCq7sKqc
bbgftPE6ikz1vamgL6M5zmC7Q9KkWgXWF+0G5y1IXCXD+Hzat+AoSdD+nUOG
vHfBshGbdwWm+Dyb5UyRVOmNCJ3xOOZ1Aie5OZq9KR7CvIHgdf3p6gMpuJ/K
r8Gx+44e/MAH8+vUYLf4IFG1wJC3G9wUFr8o7Uecn/gPHLW9IJ1lbtjPHS4U
+UaZj1F+SRvmSwbXygqtyWocL3oBzm0VlPtwDf07uFLkyeq6yK252L9mO/jI
RFJeflMj5jkKDnlNHNwWjfXZKrB4WWHJBhrHC2+BM3+t/6RhBL8HSi5BkeUW
zdraTqwvnwOXZWTGUaexf3qrgCLnGjtKe7RYj3MYnFJ5oZjbjedNVAJe62wH
VzvOb+cGeRP5bhUUnk+2D9gpqKGZ5Ynvg1AKvuJeOHbLG8+ftBi8ImOSFsTg
fWUT+KvQI9p/efg9Ytmup8jNdz/dsHce94fYDD513+psUzLmER8CkzyBKjkH
n5cXgY1SQzJ2LnuI63kNrNWfqXlC4H16EuydOv/2rgd4PjnW71OkP1tim23Y
f5EQ7DV7LJy/YDjfMeBYc2LuQxO8r1GAD/x2nxwUYv+Dv4N5vn2EYzK+L+xH
4IPJ/mtEhzG/9CN3OK8fX+mzfA+fV0aDX4o3+l1egeN1p8BhsfTeV4sM36N6
cMDCWPCft9HEOPiLVy/Nbp+e9PofOcBbgQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.9096864*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.9077856*^9, 
        FormBox[
         StyleBox["\"Nov\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9103776*^9, 
        FormBox[
         StyleBox["\"Dec\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9157344*^9, 
        FormBox[
         StyleBox["\"Feb\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.91824*^9, 
        FormBox[
         StyleBox["\"Mar\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9209184*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.9077856*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9103776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9157344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.91824*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9209184*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.9096864*^9, 3.9205728*^9}, {0, 1.7191267385200995`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.926879018216075*^9, 3.9268790450606723`*^9}, {
   3.926879094680827*^9, 3.9268791235650387`*^9}, {3.9268791553982005`*^9, 
   3.926879178384697*^9}, 3.926879210059533*^9, 3.9268792470473957`*^9, 
   3.9268792864465714`*^9},
 CellLabel->
  "Out[571]=",ExpressionUUID->"a87ce478-c2c9-40f7-8c7e-e6d25c1de651"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["szob\[AAcute]k h\[ODoubleAcute]dinamik\[AAcute]ja", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594544697137`*^9, 
   3.926859468549678*^9}},ExpressionUUID->"761e7f5c-cedf-4ce8-b24b-\
5f0b0a800606"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HeatingCurve", "[", 
   RowBox[{"externalTemp_", ",", "maxTemp_", ",", "minTemp_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "supplyTemp", "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
     "Define", " ", "the", " ", "relationship", " ", "between", " ", 
      "external", " ", "temperature", " ", "and", " ", "supply", " ", "water",
       " ", "temperature"}], "*)"}], 
    RowBox[{
     RowBox[{"supplyTemp", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"externalTemp", "<=", 
         RowBox[{"-", "10"}]}], ",", "maxTemp", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"externalTemp", ">=", "25"}], ",", "minTemp", ",", 
          RowBox[{"maxTemp", "-", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"maxTemp", "-", "minTemp"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"25", "+", "10"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"externalTemp", "+", "10"}], ")"}]}]}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "supplyTemp"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268447239039755`*^9, 3.926844724847884*^9}, {
   3.926844968668647*^9, 3.9268449697033753`*^9}, 3.927124586441078*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"16445620-9a0b-445d-b877-a05acc00d263"],

Cell[CellGroupData[{

Cell["h\[ODoubleAcute]tehetetlens\[EAcute]gi t\[EAcute]nyez\[ODoubleAcute]k \
becsl\[EAcute]se", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9266928701258516`*^9, 
   3.9266928866663456`*^9}, {3.9266929545196357`*^9, 3.926692988227791*^9}, {
   3.9268572563778825`*^9, 3.9268572599423947`*^9}, {3.926879719807562*^9, 
   3.926879719881859*^9}},ExpressionUUID->"580c38e3-d932-4e6c-8d62-\
a2436dffefb6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"calculationDays", "=", 
   RowBox[{"Intersection", "[", 
    RowBox[{
    "heatingStateDataDays", ",", "roomTempDataDays", ",", 
     "externalTempDataDays"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926687846391613*^9, 3.926687919359168*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"3ca92447-0df7-4734-946c-a45454a16971"],

Cell[CellGroupData[{

Cell["h\[UDoubleAcute]l\[EAcute]s", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9266928701258516`*^9, 
   3.9266928866663456`*^9}, {3.9266929545196357`*^9, 
   3.9266929945634117`*^9}},ExpressionUUID->"0c603203-47ba-45da-8596-\
a2a580375841"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomCoolingData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Module", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "dayN", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"dayN", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"seasonDays", ",", "day"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Dimensions", "[", 
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                   RowBox[{"{", "}"}]}], "&&", 
                  RowBox[{
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                   RowBox[{"{", "}"}]}], "&&", 
                  RowBox[{
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                   RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", 
                    RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "n", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Differences", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], "&&", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "<=", "0"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}], ",", 
                 "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", 
                "]"}]}]}], "\[IndentingNewLine]", "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"day", ",", "calculationDays"}], "}"}]}], "]"}], "]"}], 
         ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], "==", "2"}], "&"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926777287995282*^9, 3.9267772987703185`*^9}, {
  3.9267779103064523`*^9, 3.9267779206173496`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"aab28557-2d2f-4535-8c18-2b5d099acba4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Length", ",", "roomCoolingData"}], "]"}]], "Input",
 CellChangeTimes->{{3.926777649810149*^9, 3.9267776587342615`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"b82d9c1f-1e30-43a5-8885-337475f80d0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "20489", ",", "22185", ",", "25019", ",", "25387", ",", "14193", ",", 
   "17439", ",", "24171", ",", "0", ",", "2320", ",", "5831"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.926777659011208*^9, 3.92677792363764*^9, 
  3.9268536457593217`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"631d1733-db2c-4edc-852e-6b3010edc9c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"roomCoolingCoefficients", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "roomHeatCapacity", ",", "roomExternalWallArea", ",", 
         "heatLossInJPerMin", ",", "heatLossInWatts", ",", 
         "heatTransferCoefficient"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"roomHeatCapacity", "=", 
         RowBox[{
          RowBox[{"roomAreas", "[", 
           RowBox[{"[", "room", "]"}], "]"}], "roomHeight", " ", 
          "airSpecificMass", " ", "airSpecificHeatCapacity"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"roomExternalWallArea", "=", 
         RowBox[{
          RowBox[{"roomExternalWallLength", "[", 
           RowBox[{"[", "room", "]"}], "]"}], "roomHeight"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"heatLossInJPerMin", "=", 
         RowBox[{"roomHeatCapacity", " ", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"roomCoolingData", "[", 
               RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"heatLossInWatts", "=", 
         RowBox[{"heatLossInJPerMin", "/", "60"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"heatTransferCoefficient", "=", 
         RowBox[{"heatLossInWatts", "/", 
          RowBox[{"(", 
           RowBox[{"roomExternalWallArea", " ", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"roomCoolingData", "[", 
               RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Select", "[", 
         RowBox[{"heatTransferCoefficient", ",", "NumberQ"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266912468891897`*^9, 3.9266912717767906`*^9}, {
  3.9266915099624243`*^9, 3.9266915174286976`*^9}, {3.9266915759689026`*^9, 
  3.9266917003689656`*^9}, {3.9266930334624357`*^9, 3.9266930365255704`*^9}, {
  3.9267747723093357`*^9, 3.9267748351909046`*^9}, {3.9267748906215973`*^9, 
  3.926774937670786*^9}, {3.926774976414113*^9, 3.9267750102423487`*^9}, {
  3.926775042007206*^9, 3.9267750495258427`*^9}, {3.9267751223876085`*^9, 
  3.92677512331205*^9}, {3.9267752939819145`*^9, 3.9267753152125883`*^9}, {
  3.9267773073494196`*^9, 3.926777308332925*^9}, {3.9267775596686893`*^9, 
  3.9267775672963753`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"30c5115a-e8b1-498b-8c31-4df6654a957e"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"", 2, 42, 3, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.9268545315134845`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"2414fa11-82ec-4398-a7a3-0d4f4562442b"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"", 2, 42, 4, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.9268545315394897`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"83e2e98f-b224-4ba4-b837-4b281833071d"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"", 2, 42, 5, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.9268545315616846`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"0d19d675-b8db-4f61-91bd-3c081d438861"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 42, 6, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.9268545315836887`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"d5e9023a-7c29-44e6-9374-06abd59f717b"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 42, 7, 30409830871462917662, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.9268545316031466`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"5f5c41fb-acf8-4f49-886c-fba626717bc0"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 42, 8, 30409830871462917662, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.926854531626152*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"dd5040fb-723f-4a05-a005-602cf2d9a8c5"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 42, 9, 30409830871462917662, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.926854531648597*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"f48216f7-e5ac-470b-9d1a-4a7bdb2377fb"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 42, 10, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.9268545316675997`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"c1cbf16c-3e8d-4f7e-a362-f2e4021a7ac3"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 42, 11, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.9268545317417393`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"59bb630e-24b9-45c2-861b-25341ca02fea"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 42, 12, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92685364587008*^9, 3.9268545317723727`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"cdad1f44-1fa8-4810-aa19-d75220b32d23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"roomCoolingCoefficientEstimates", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"Mean", ",", "roomCoolingCoefficients"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"W", "/", "m2"}], " ", "K"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"roomCoolingCoefficientEstimates", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", "None"}], 
  ";"}], "\[IndentingNewLine]", "roomCoolingCoefficientEstimates"}], "Input",
 CellChangeTimes->{{3.926691915705453*^9, 3.926691918258302*^9}, {
   3.926692171087493*^9, 3.926692191456126*^9}, {3.9266928196885705`*^9, 
   3.926692845098102*^9}, {3.926693040725753*^9, 3.926693042946912*^9}, 
   3.926695265829582*^9, 3.926774479062855*^9, {3.9267753323297157`*^9, 
   3.9267753361830873`*^9}, {3.926775456109893*^9, 3.926775462722291*^9}, {
   3.926775886899963*^9, 3.926775901235751*^9}, {3.9267773132328*^9, 
   3.9267773190674143`*^9}, {3.9267775147631617`*^9, 3.926777521657584*^9}, 
   3.9268572064559174`*^9, {3.9271239518581963`*^9, 
   3.927123952802098*^9}},ExpressionUUID->"5ae85d7a-c12d-40fb-81b6-\
7f4792cf1c0a"],

Cell[BoxData[
 TemplateBox[{
  "Mean", "rectt", 
   "\"Rectangular array expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) \
in \\!\\(\\*RowBox[{\\\"Mean\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"194.304`\\\"}], \\\"]\\\"}]\\).\"", 2, 281, 213, 30409830871462917662, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.926853615869697*^9, 3.926853646377242*^9, {3.9268545247215843`*^9, 
   3.9268545320055995`*^9}, 3.9268572082609015`*^9},
 CellLabel->
  "During evaluation of \
In[281]:=",ExpressionUUID->"15d33be0-803e-4e94-afa8-b61a9d6bfe4c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomCoolingCoefficientEstimates", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.032214447069189155`", ",", "0.030683931588568955`", ",", 
     "0.0252265512366412`", ",", "0.03059154472952693`", ",", 
     "0.03536290346552823`", ",", "0.01860564180818293`", ",", 
     "0.04004673150833342`", ",", "None", ",", "0.35692117612456536`", ",", 
     "0.06676426421332748`"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926857211045501*^9, 3.9268572145654335`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"53d3e1c0-3d73-4b26-b3a0-c06d704bb4ff"]
}, Closed]],

Cell[CellGroupData[{

Cell["meleged\[EAcute]s", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9266928701258516`*^9, 
   3.9266928866663456`*^9}, {3.9266929545196357`*^9, 
   3.926693001261739*^9}},ExpressionUUID->"8fa84b62-fbf8-43db-97e9-\
447052cd06f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomWarmingData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Module", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "dayN", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"dayN", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"seasonDays", ",", "day"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Dimensions", "[", 
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                   RowBox[{"{", "}"}]}], "&&", 
                  RowBox[{
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                   RowBox[{"{", "}"}]}], "&&", 
                  RowBox[{
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                   RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", 
                    RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"HeatingCurve", "[", 
                    RowBox[{"#", ",", "65", ",", "45"}], "]"}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", "n", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Differences", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "5"}]}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", "1"}], "&&", 
                    RowBox[{
                    RowBox[{"-", "5"}], "<", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", "5"}], "&&", 
                    RowBox[{"0", "<=", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "]"}]}], "&"}]}], "]"}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}], "]"}], "]"}], "]"}], ",", 
                 "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", 
                "]"}]}]}], "\[IndentingNewLine]", "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"day", ",", "calculationDays"}], "}"}]}], "]"}], "]"}], 
         ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "#", "]"}], "==", "2"}], "&"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266879115780964`*^9, 3.9266879969080706`*^9}, {
   3.9266880359276204`*^9, 3.926688051052534*^9}, {3.92668839439917*^9, 
   3.92668842168696*^9}, {3.926689003788331*^9, 3.9266890584916105`*^9}, {
   3.926689092978157*^9, 3.926689108964637*^9}, {3.9266892922028265`*^9, 
   3.9266892929396963`*^9}, {3.9266893805839562`*^9, 
   3.9266893942678814`*^9}, {3.926689458932272*^9, 3.9266895020475388`*^9}, {
   3.9266895404107933`*^9, 3.9266896504165897`*^9}, {3.9266905860075808`*^9, 
   3.92669067826766*^9}, {3.9266907144993415`*^9, 3.926690725318859*^9}, {
   3.9266907572616467`*^9, 3.926690763609332*^9}, {3.926690801555302*^9, 
   3.926690815524465*^9}, {3.9266908490985985`*^9, 3.9266908756734867`*^9}, {
   3.9266918844233885`*^9, 3.9266918898976517`*^9}, {3.926691960247814*^9, 
   3.926691980552602*^9}, {3.926692035175451*^9, 3.9266920598371887`*^9}, {
   3.926692106041033*^9, 3.9266921063021455`*^9}, {3.9266921595984783`*^9, 
   3.9266921597807913`*^9}, {3.9266930049543743`*^9, 3.926693023492718*^9}, {
   3.926694228142728*^9, 3.926694308793701*^9}, {3.9266943396219387`*^9, 
   3.9266943446559153`*^9}, {3.926694538137066*^9, 3.926694546709887*^9}, {
   3.9266949261867485`*^9, 3.9266949262399344`*^9}, {3.926694956786738*^9, 
   3.9266949572175555`*^9}, {3.9266951490407057`*^9, 3.926695170167625*^9}, {
   3.926695947622652*^9, 3.9266959981766276`*^9}, {3.926696033907002*^9, 
   3.9266960543205643`*^9}, {3.926696186615394*^9, 3.926696313305481*^9}, {
   3.9267756102558784`*^9, 3.9267756104838533`*^9}, {3.9267756530624294`*^9, 
   3.926775739918542*^9}, {3.926775825380461*^9, 3.9267758371244783`*^9}, {
   3.9267776245377765`*^9, 3.926777624949683*^9}, {3.9267776725208807`*^9, 
   3.926777689372017*^9}, {3.926777746804737*^9, 3.9267777820194817`*^9}, {
   3.92677783834408*^9, 3.926777875800067*^9}, {3.9267782576594157`*^9, 
   3.9267782869280877`*^9}, 3.926778602446928*^9, {3.9267786574406276`*^9, 
   3.9267786574763813`*^9}, {3.9267786876232653`*^9, 
   3.9267786892615995`*^9}, {3.926843250160054*^9, 3.9268432586070623`*^9}, 
   3.926844551813341*^9, {3.9268446042729607`*^9, 3.9268446063854694`*^9}, {
   3.9268450069930334`*^9, 3.9268450440574665`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"aa735c46-8fd0-402d-8235-4e6b5a5f9974"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Length", ",", "roomWarmingData"}], "]"}]], "Input",
 CellChangeTimes->{{3.926778659792306*^9, 3.926778664645669*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"166f3f00-525b-493c-b099-0492cd79ba12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "126", ",", "124", ",", "163", ",", "526", ",", "82", ",", "63", ",", "85", 
   ",", "0", ",", "98", ",", "196"}], "}"}]], "Output",
 CellChangeTimes->{{3.926778664922513*^9, 3.926778693983285*^9}, 
   3.926843267952126*^9, 3.926845054960307*^9, 3.926853637745187*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"29b0eb71-7b14-4f37-bea3-e02fb727a337"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"roomWarmingCoefficients", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "roomHeatCapacity", ",", "roomRadiatorArea", ",", "heatLossInJPerMin",
          ",", "heatLossInWatts", ",", "heatTransferCoefficient"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"roomHeatCapacity", "=", 
         RowBox[{
          RowBox[{"roomAreas", "[", 
           RowBox[{"[", "room", "]"}], "]"}], "roomHeight", " ", 
          "airSpecificMass", " ", "airSpecificHeatCapacity"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"roomRadiatorArea", "=", 
         RowBox[{
          RowBox[{"roomRadiatorLength", "[", 
           RowBox[{"[", "room", "]"}], "]"}], "radiatorHeight", " ", "2"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"heatLossInJPerMin", "=", 
         RowBox[{"roomHeatCapacity", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"roomWarmingData", "[", 
              RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"heatLossInWatts", "=", 
         RowBox[{"heatLossInJPerMin", "/", "60"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"heatTransferCoefficient", "=", 
         RowBox[{"heatLossInWatts", "/", 
          RowBox[{"(", 
           RowBox[{"roomRadiatorArea", " ", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"roomWarmingData", "[", 
               RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Select", "[", 
         RowBox[{"heatTransferCoefficient", ",", "NumberQ"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266912468891897`*^9, 3.9266912717767906`*^9}, {
   3.9266915099624243`*^9, 3.9266915174286976`*^9}, {3.9266915759689026`*^9, 
   3.9266917003689656`*^9}, {3.9266930508120904`*^9, 3.926693059456822*^9}, {
   3.926694375589983*^9, 3.926694411326215*^9}, 3.9266945194505672`*^9, {
   3.9267753487927485`*^9, 3.9267753770127487`*^9}, {3.926775612617238*^9, 
   3.9267756131974773`*^9}, {3.926775700790064*^9, 3.926775705060499*^9}, {
   3.9267777002390804`*^9, 3.926777703203723*^9}, {3.9267778004386816`*^9, 
   3.9267778061395383`*^9}, 3.9267778550873423`*^9, {3.9267797081327887`*^9, 
   3.9267797103777647`*^9}, {3.9267797434202876`*^9, 3.926779758084102*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"d874c59b-64ca-43a0-b816-aca91c57ee1c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 49, 19, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9267786104256334`*^9, {3.9267786750275936`*^9, 3.9267786953385153`*^9}, 
   3.926779711084349*^9, {3.926779744171913*^9, 3.9267797587187195`*^9}, 
   3.926843269075781*^9, 3.9268445560004177`*^9, 3.9268450559555817`*^9, 
   3.926853637839964*^9, {3.9268545388942213`*^9, 3.926854551456745*^9}},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"07bdb945-815a-417c-b39c-aa9e90be0cb7"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 49, 20, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9267786104256334`*^9, {3.9267786750275936`*^9, 3.9267786953385153`*^9}, 
   3.926779711084349*^9, {3.926779744171913*^9, 3.9267797587187195`*^9}, 
   3.926843269075781*^9, 3.9268445560004177`*^9, 3.9268450559555817`*^9, 
   3.926853637839964*^9, {3.9268545388942213`*^9, 3.9268545514881163`*^9}},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"2ffb341e-4b3c-4691-b1c8-5c147cba1bcb"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"", 2, 49, 21, 30409830871462917662, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9267786104256334`*^9, {3.9267786750275936`*^9, 3.9267786953385153`*^9}, 
   3.926779711084349*^9, {3.926779744171913*^9, 3.9267797587187195`*^9}, 
   3.926843269075781*^9, 3.9268445560004177`*^9, 3.9268450559555817`*^9, 
   3.926853637839964*^9, {3.9268545388942213`*^9, 3.926854551520053*^9}},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"2a53d43a-af30-4c97-bb25-be39ee2af502"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["roomWarmingCoefficientEstimates"], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"f3809b52-87d6-4e48-80e1-59d4772b3919"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.06761066626793424`", ",", "0.09907077069762604`", ",", 
   "0.09800286412178438`", ",", "0.20370050086570166`", ",", 
   "0.0758752825225875`", ",", "0.04051267146417835`", ",", 
   "0.08638881634760157`", ",", "None", ",", "0.15416078284692208`", ",", 
   "0.7083629550122936`"}], "}"}]], "Output",
 CellChangeTimes->{3.926854575515458*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"9ba5db5a-e698-4c36-9fb7-ea1b299cc8ec"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"roomWarmingCoefficientEstimates", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"Mean", ",", "roomWarmingCoefficients"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"W", "/", "m2"}], " ", "K"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"roomWarmingCoefficientEstimates", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", "None"}], ";"}]}], "Input",
 CellChangeTimes->{{3.926691915705453*^9, 3.926691918258302*^9}, {
  3.926692171087493*^9, 3.926692191456126*^9}, {3.9266928196885705`*^9, 
  3.926692845098102*^9}, {3.926694564194722*^9, 3.9266945741743197`*^9}, {
  3.92669503249533*^9, 3.9266950353973427`*^9}, {3.9266952076712475`*^9, 
  3.9266952095739117`*^9}, {3.9266952458282824`*^9, 3.9266952581175337`*^9}, {
  3.9266963282824087`*^9, 3.92669633026375*^9}, {3.926774472364885*^9, 
  3.9267744734895153`*^9}, {3.9267754043699427`*^9, 3.9267754101674194`*^9}, {
  3.9267754581885357`*^9, 3.9267754602217684`*^9}, {3.9267757490986834`*^9, 
  3.92677575556868*^9}, {3.9267758617216816`*^9, 3.9267758783115463`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"b519c0ae-2cc8-49e5-9fed-26ce83a5e14f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomWarmingCoefficientEstimates", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.06761066626793424`", ",", "0.09907077069762604`", ",", 
     "0.09800286412178438`", ",", "0.20370050086570166`", ",", 
     "0.0758752825225875`", ",", "0.04051267146417835`", ",", 
     "0.08638881634760157`", ",", "None", ",", "0.15416078284692208`", ",", 
     "0.7083629550122936`"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268550969000025`*^9, 3.9268551016370926`*^9}, {
  3.9268572338612833`*^9, 3.926857236672238*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"9e1095c0-0852-4d63-8731-2c841bbb0cea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[EAcute]rtelmez\[EAcute]s", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9266928701258516`*^9, 
   3.9266928866663456`*^9}, {3.9266929545196357`*^9, 3.926693001261739*^9}, {
   3.926695275431343*^9, 3.926695277536728*^9}, {3.9266965685743895`*^9, 
   3.9266965696959896`*^9}},ExpressionUUID->"bf05977b-2c16-4621-90ec-\
aeb827510e8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"roomNames", "[", 
      RowBox[{"[", "roomsWithTempData", "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{"roomCoolingCoefficientEstimates", ",", "0.001"}], "]"}], "[", 
      RowBox[{"[", "roomsWithTempData", "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{"roomWarmingCoefficientEstimates", ",", "0.001"}], "]"}], "[", 
      RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], "\[IndentingNewLine]",
     "}"}], "]"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.9266940163552475`*^9, 3.926694025344241*^9}, {
  3.926694581882377*^9, 3.926694594876649*^9}, {3.92669528489342*^9, 
  3.9266952925776997`*^9}, {3.9266964375011454`*^9, 3.9266964396551523`*^9}, {
  3.92677542147365*^9, 3.926775424006712*^9}, {3.9267755908546553`*^9, 
  3.9267755947524405`*^9}, {3.926777712633665*^9, 3.926777712905803*^9}, {
  3.9267778145461216`*^9, 3.9267778179185996`*^9}, {3.9268546118480177`*^9, 
  3.9268546159879994`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"b86e9fb4-a301-4b9d-8fbe-dd699af10fcb"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"ovi\"\>", "0.032`", "0.068`"},
    {"\<\"PK\"\>", "0.031`", "0.099`"},
    {"\<\"SZGK\"\>", "0.025`", "0.098`"},
    {"\<\"G\[OAcute]lyairoda\"\>", "0.031`", "0.20400000000000001`"},
    {"\<\"M\[EAcute]rce\"\>", "0.035`", "0.076`"},
    {"\<\"vend\[EAcute]gt\[EAcute]r\"\>", "0.019`", "0.041`"},
    {"\<\"kisterem\"\>", "0.04`", "0.08600000000000001`"},
    {"\<\"Oktopusz\"\>", "0.357`", "0.154`"},
    {"\<\"Lahmacun\"\>", "0.067`", "0.708`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.9267797205814896`*^9, 3.9267797622187967`*^9, 3.9268432720085835`*^9, 
   3.926845058177553*^9, {3.926854539248827*^9, 3.9268545541948953`*^9}, 
   3.926854617284347*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"2cb22c9d-85e0-4e38-ae56-21c549ba95a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alma", "=", 
  RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Range", "[", "9", "]"}], "-", "0.15"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"roomCoolingCoefficientEstimates", ",", "0.01"}], "]"}], 
          "[", 
          RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Range", "[", "9", "]"}], "+", "0.15"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"roomWarmingCoefficientEstimates", ",", "0.01"}], "]"}], 
          "[", 
          RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
    RowBox[{"FillingStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.03", "]"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Ticks", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", "9", "]"}], ",", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Rotate", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", 
            RowBox[{"roomNames", "[", 
             RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], "]"}]}], "}"}],
         "]"}], ",", "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9267759166057167`*^9, 3.926776137526061*^9}, {
  3.927186905470107*^9, 3.927186906767083*^9}},
 CellLabel->
  "In[1054]:=",ExpressionUUID->"6313387a-daad-479f-b352-dd15cf33d3bd"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQbQwGr+13yLW+Dtwxz37WTBD4C+efPQMCbA6ofD44
Pw0MhB2qRda5P6xaAuWLQ/lToHxpNHl5B67riwtsua7bg63frOjwJhBk4kao
/Cd7GB/iPkYHiLt2QvmccD6EFoDyT0L5IlD7tkD5EnD7IXwZqP3bIf7xUXCA
mHsYyleC+u8Z3D0MUABzDyqfE86HuQeVL4LGl0Djy8D5MPeg8pXQ7Httj6r/
rz2KemB8ofL54HxYfKHyxdH40mh8eVT7gfGF7p7R9IM9/QAAufhKNg==
    "], {{{}, {}, {}, {}, {}, 
      {RGBColor[0, 0, 1], Thickness[0.03], LineBox[{28, 1}], LineBox[{29, 2}],
        LineBox[{30, 3}], LineBox[{31, 4}], LineBox[{32, 5}], 
       LineBox[{33, 6}], LineBox[{34, 7}], LineBox[{35, 8}], 
       LineBox[{36, 9}]}, {}, 
      {RGBColor[1, 0, 0], Thickness[0.03], LineBox[{19, 10}], 
       LineBox[{20, 11}], LineBox[{21, 12}], LineBox[{22, 13}], 
       LineBox[{23, 14}], LineBox[{24, 15}], LineBox[{25, 16}], 
       LineBox[{26, 17}], LineBox[{27, 18}]}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[{37, 38, 39, 40, 41, 42, 43, 44, 45}]}, 
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[{46, 47, 48, 49, 50, 51, 52, 53, 54}]}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6770833333333335, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{611.4000000000001, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.6770833333333335, 9.15}, {0, 0.71}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox[
       RotationBox["\"ovi\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {2, 
      FormBox[
       RotationBox["\"PK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {3, 
      FormBox[
       RotationBox["\"SZGK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {4, 
      FormBox[
       RotationBox[
       "\"G\[OAcute]lyairoda\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {5, 
      FormBox[
       RotationBox["\"M\[EAcute]rce\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {6, 
      FormBox[
       RotationBox[
       "\"vend\[EAcute]gt\[EAcute]r\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {7, 
      FormBox[
       RotationBox["\"kisterem\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {8, 
      FormBox[
       RotationBox["\"Oktopusz\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {9, 
      FormBox[
       RotationBox["\"Lahmacun\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.926775935548727*^9, 3.926776026828305*^9}, {
   3.926776065760842*^9, 3.9267761379066544`*^9}, 3.926777717812668*^9, 
   3.926777819625354*^9, {3.926777860993817*^9, 3.9267778863263273`*^9}, 
   3.926777931953868*^9, 3.9267780243239574`*^9, 3.9267786137221165`*^9, {
   3.9267786819914*^9, 3.926778702466812*^9}, {3.926779721640651*^9, 
   3.926779763155667*^9}, 3.9268432734927564`*^9, 3.92684505934694*^9, 
   3.9268536515097437`*^9, 3.926854619836331*^9, {3.9271869027538166`*^9, 
   3.927186907249229*^9}},
 CellLabel->
  "Out[1054]=",ExpressionUUID->"cac46924-7257-43b3-8628-a1025d354424"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\dbu_1.png\>\""}], 
   ",", "alma"}], "]"}]], "Input",
 CellChangeTimes->{{3.927186908603735*^9, 3.927186930228733*^9}},
 CellLabel->
  "In[1055]:=",ExpressionUUID->"77f3f3c9-bb97-48e3-adf3-d3325a6e664e"],

Cell[BoxData["\<\"C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\\
kazankontroll-dashboard\\\\analysis\\\\\\\\dbu_1.png\"\>"], "Output",
 CellChangeTimes->{3.927186930945027*^9},
 CellLabel->
  "Out[1055]=",ExpressionUUID->"e49eb3ca-9d4b-4af2-9469-5edd010b99a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"roomWarmingCoefficientEstimates", ",", "0.01"}], "]"}], "[", 
     RowBox[{"[", "roomsWithTempData", "]"}], "]"}], "/", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"roomCoolingCoefficientEstimates", ",", "0.01"}], "]"}], "[", 
     RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Orange", "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.03", "]"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "9", "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", 
           RowBox[{"roomNames", "[", 
            RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], "]"}]}], "}"}], 
       "]"}], ",", "Automatic"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.926842188527333*^9, 3.9268422539179316`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"d44c9857-c69d-467d-b310-9c71d7b1f9d1"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEf7NesAgEmB6iAA4TPBeVzoPEFoHwpKF8Erg9C
SaDxZaA0zHwFB7D2VbfsIXwlh0kqnkCk4gBzDwMqcEDlcqDxBdD4Imh8CTS+
DBpfAY2vhMYfPOEDALggP/4=
    "], {{{}, {}, {}, {}, 
      {RGBColor[1, 0.5, 0], Thickness[0.03], LineBox[{10, 1}], 
       LineBox[{11, 2}], LineBox[{12, 3}], LineBox[{13, 4}], LineBox[{14, 5}],
        LineBox[{15, 6}], LineBox[{16, 7}], LineBox[{17, 8}], 
       LineBox[{18, 9}]}}, 
     {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6], 
      PointBox[{19, 20, 21, 22, 23, 24, 25, 26, 27}]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8333333333333337, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{599.4, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.8333333333333337, 9.}, {0, 10.142857142857142`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Prolog->{
    Dashing[{Small, Small}], 
    LineBox[{{0, 1}, {10, 1}}]},
  Ticks->{{{1, 
      FormBox[
       RotationBox["\"ovi\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {2, 
      FormBox[
       RotationBox["\"PK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {3, 
      FormBox[
       RotationBox["\"SZGK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {4, 
      FormBox[
       RotationBox[
       "\"G\[OAcute]lyairoda\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {5, 
      FormBox[
       RotationBox["\"M\[EAcute]rce\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {6, 
      FormBox[
       RotationBox[
       "\"vend\[EAcute]gt\[EAcute]r\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {7, 
      FormBox[
       RotationBox["\"kisterem\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {8, 
      FormBox[
       RotationBox["\"Oktopusz\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {9, 
      FormBox[
       RotationBox["\"Lahmacun\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.926842189405919*^9, 3.9268422541165504`*^9}, 
   3.9268432828407345`*^9, 3.9268450693367767`*^9, 3.926853652599082*^9, 
   3.9268546211618433`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"6e655265-4380-4d9f-9f4b-2b47b9f496ab"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["h\[ODoubleAcute]felv\[EAcute]teli ar\[AAcute]nyok szob\[AAcute]nk\
\[EAcute]nt", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.926772856098833*^9, 3.9267728607318115`*^9}, {
   3.92685725182823*^9, 
   3.92685726621239*^9}},ExpressionUUID->"a085518c-7302-4521-b99f-\
d6c1f10887ee"],

Cell["\<\
mit:
\t- h\[ODoubleAcute]transzfer megbecsl\[EAcute]se egy k\[ODoubleDot]rre egy \
napra csak a h\[ODoubleAcute]m\[EAcute]rs\[EAcute]kleti adatokb\[OAcute]l
sanity checkek:
\t- ennek \[ODoubleDot]sszevet\[EAcute]se a m\[EAcute]rt h\[ODoubleAcute]lead\
\[AAcute]ssal
\t- leadott h\[ODoubleAcute] \[ODoubleDot]sszevet\[EAcute]se felvett h\
\[ODoubleAcute]vel
\t
mi l\[AAcute]tszik?
\t- sok esetben j\[OAcute]l korrel\[AAcute]l a k\[ODoubleDot]r\[ODoubleDot]n \
leadott teljes h\[ODoubleAcute] \[EAcute]s a szob\[AAcute]k \[AAcute]ltal h\
\[ODoubleAcute]m\[EAcute]rs\[EAcute]kleti adatokb\[OAcute]l leadott h\
\[ODoubleAcute]
\t- ami alapj\[AAcute]n meg lehet becs\[UDoubleDot]lni, hogy a szob\[AAcute]k \
hogyan ar\[AAcute]nylanak egym\[AAcute]shoz
\t- vagyis a m\[EAcute]rt h\[ODoubleAcute]lead\[AAcute]si adatokb\[OAcute]l \
sz\[EAcute]t lehet osztani a h\[ODoubleAcute]fogyaszt\[AAcute]st \
szob\[AAcute]kra\
\>", "Text",
 CellChangeTimes->{{3.926779094056526*^9, 3.9267791210035286`*^9}, {
  3.9267796096897297`*^9, 3.9267796394594164`*^9}, {3.926783105585781*^9, 
  3.9267831789766717`*^9}},ExpressionUUID->"2292f493-3d52-46f0-9fe0-\
e02e188ccaaa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cycle", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomsOnCycle", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Position", "[", 
     RowBox[{"roomToCycle", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"day", "=", 
  RowBox[{"heatDataDays", "[", 
   RowBox[{"[", "40", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dayN", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"seasonDays", ",", "day"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"roomTempsDaily", "[", 
         RowBox[{"[", "room", "]"}], "]"}], "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"heatStockDaily", "[", 
        RowBox[{"[", "cycle", "]"}], "]"}], "[", 
       RowBox[{"[", "dayN", "]"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{"externalTempDaily", "[", 
       RowBox[{"[", "dayN", "]"}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.926773973738469*^9, 3.9267739792107077`*^9}, {
  3.926774015875072*^9, 3.926774044937236*^9}, {3.926779224145281*^9, 
  3.9267792765724277`*^9}, {3.926779323195821*^9, 3.926779349316934*^9}, {
  3.9267793875603743`*^9, 3.9267794580017753`*^9}, {3.926780584578195*^9, 
  3.9267805910344753`*^9}, {3.926780836264121*^9, 3.926780836337495*^9}, {
  3.926780899739155*^9, 3.926780900463318*^9}, {3.9268462897451553`*^9, 
  3.9268462903202147`*^9}},
 CellLabel->
  "In[1561]:=",ExpressionUUID->"f05b43ee-4dc2-4e81-99d3-ffcc5accd09b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sun 31 Dec 2023 00:00:00\"", 
     StyleBox[
      RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
        StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2023", ",", "12", ",", "31", ",", "0", ",", "0", ",", "0.`"}], 
         "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", "2.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.92677920637488*^9, 3.926779276845584*^9}, {
   3.926779328658812*^9, 3.926779349479198*^9}, {3.9267793883270206`*^9, 
   3.9267794581553583`*^9}, {3.9267805847982516`*^9, 3.926780591235522*^9}, 
   3.9267808364662347`*^9, 3.9267809007488894`*^9, 3.9268462948327584`*^9},
 CellLabel->
  "Out[1563]=",ExpressionUUID->"5867d5c3-1ccf-4d96-9566-6df374d9066f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQzcDQcDVV/a3jOveHVSLrDByAAr9BfM2Y/kNfV4D4
DQppQH4aCCwDy7uB+EsKbLmuLwbLZ4P4IN3uC8HyE0F8+dbXgTvmgeW3gfjX
FwM1TAfL3wHxgaZrxPSD5RnTgfyzZ4CgByyvDuJzgTR0geV9QPzDIOVNYPki
EB/idLD8dBD/G1D6UClYfi+I/yZwh1xrNlj+EYgfA7YQLM+RAXNPOFheNwPm
Hn+wfHAGzD0+YPkKEB/kHTlXsPy8DJh7nMDyh0F8W7CDwfIvUfkNfJlAfjUw
eB5ageVNUPkNkSC+MRiA5eszYe7XBssvyYSFtzJY/hQqv+F9Jsx/MmB50SyY
/8TB8lYgfhDQuNeCYPkEVH5DK6p6htVZSOYBAP5Zw9A=
         "]], 
        LineBox[CompressedData["
1:eJxdlFtIVEEcxqfoAhZdSCIfskIqK7JIIh9aKimsEGJ9SKIlsIsUgu6613PO
nrNTIYUQ9mBEUkEpXSDswQijgkroQhpUhFFBF+hCKl3IIh+q8/9gDn0OyPLz
t2fO7Hwz37ydDVV7xiqlXP9PPpXSn+sXDq1bFGm5M1y8bK3/j2kNPud3Vry1
84X1SmGxkanw24WbBsLdhePhtbAjD4yUiD8n/LNYJhTWD4Vjobz+9q/w34QH
/cebBuBnRn2ulfEBfrWw/3J/QvgaYSzvFfwh4f72qD8j/CXhKpnuMfwT4Y0y
wT34X8I9w7Ig+NkxYl0uLMuL3oTfKyzThbvhjwiXyuiC7xLG9nTCP2dWf2Jm
Py/AFzX63CHLbYffJDxHpj8NXy/cdkIGfGuj2f9W+GuNZv9b4F8z63Fxn2X5
oWb4xXGTTxP8FmaVjJu8bPg2ZnUrbvJLwr+Pm/yi8JMSJr86+OUJk18t/NaE
ya8G3kmY/CLwZxImv2r4uwmTXxh+kFlPT/rc1+uPSvhVSZNfOXyEWR1ImjxD
8OeZVd8o/z1p8i6Dn5UyeZfCh5jVrpTJuwT+cCq4P/CdzPppyuRfBP87ZfIv
hC9ME6v1aXMeCuD3MasW/r6+Mur5F2l6n/6b5vXNz/D6N2d4f6IZc38q4I8x
q+sZzvcNs5pgsV9i8fkJW3Redcri+3HSovumb1t8fz9afP8n29wfK2zqI11t
U58pl1mftYP84e/bwXmDH7KD8wg/wyHWZcxqhxPsF/xBJzif8BedYL/hHzn8
/h8O9bEuyAb5wq/Jmv3Lg9/NrJqz1Lf6cpb6Vj3Lmt/XCz+S5f6b63K/bXA5
nzqX++moy/101eV8X7rcP2M8n5UMDb+AWVV63E8xj/pIHffoPOkbHvWReudR
H+mJOT6fS3PcP1U57p9MjvpGn2JWPaP8pxzfjyma708ps9qmub88zfevQ1Mf
6Qea++eL5vubv/+/7/8DmRLeBA==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.9129696*^9, 14.959444444444447`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.9129696*^9, 3.9130257*^9}, {14.959444444444447`, 
      16.68}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQzcDQcDVV/a3j4a8aMf1O+g5Agd8g/g651teBFiB+
g0IakG8MBmB5N1R+Qzaa/EQQf0mBLdd1ZbD8NhAfbBUDWP4OKr+BMR1VXh3E
f1glss79oR5I3icd5r5DID5DUTrM/MVg+elw/Q1g+b0gfhoYgOUfgfgeYAPB
8hwZQL4m0LSvGmB53Qy4/WD5YFR+QwWa/Dw0+cMgfhAowC7qguRfovIb+DJR
5U0yYeG7AywficpnqAfx5UHceWD5JZlw/4HlT2XC/QeWf4/KZxDNAvLPngEC
H7C8FSqfIQFNvhVNfnUWPP51HQARBK+0
         "]], 
        LineBox[CompressedData["
1:eJxdlW2ITFEYxx8Shbxkk/1gkbB2UzLJfjBho42UZj7YZFKLnWhr944xY+6d
ubNPJNrS+rCSDcXIS2l8WGmFwpYUq5B2Q7HKS9hCluwH3OfRPfmfU9P0u78z
95zzvJyZt70t3jyWiNzgI99E/LF10fCaVHTiQOlL7ergwbS2gAdKTvBEmJcL
91Yd/BTrVb8VmVl4caLz7shF9eeR+YHlvwpHZPSon+kELMs7t9SvROYm4b6R
6uAN6g8h82XLP7F+/9PB/c9O4f7rU7j+LssfQaaeFJ5vEJl+W37+noDLDUNe
RVn9emRutXyX8BxZ7rT668j0Sli2G+1QPy4NTDXpMJ+O+k3IlEmH+W1U350O
z1en/jYyvxUOTlOdmKp+0l5gXopMmy2ft/wZ4aSMdzXi7yHTZ+H+hzLUT88A
0wpkTmRMPanfj8wXLN+fMfFU/w2ZZmXRR7Mmvup3IPNhy5eFf0g5ZtQ/RaZf
lq/aF54/qX4tMu+2fKdwQgOq/ioyPbf8H2GproYm9Qtyph7Ub0AmJ4f7O4ZM
N4T/XR3qXwt3n5ChfryL8a91Mb8xN5xfqfWRNfMjWh8n3bCf69XfcaFe6b15
X1L9ZC/gfIV0kPplHvZHo7DqLvW+h/111sP+ve+Z+lI/7IXxfKl+Rj6M55D6
OmTalof5fACZLln+kXBcGu6x+u/IXFnA+2cVMu8smPir70DmKwWTP/XPkHm0
EK4XUz/XB+Z1PuanBZmP+pBPuobML/wwP6Oa/zFFYF5YNPFQvxGZU5Y/bvmb
RXP/q3+DzBPa0S9B5rjwOfm7K6nPIfMpy/dZ/kM79v8UxvshgkxbLF/8n/8C
VGvYcQ==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.9129696*^9, 13.043888888888889`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.9129696*^9, 3.9130245*^9}, {13.043888888888889`, 
      15.63}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQDQQbUtXfOq5zf1gl8s7QgYGh4SqIrxnTf+jrCxCf
4TeInwYCz8DyCmlA/pICW67rj8HybiA+SLnGHbB8Nog/ayYQ3ATLT0TlN2xD
k78D4l9fDDIQLM+YjsJnUAfxg3bItb6+CJb3AfE9gM5ddxwsXwTiH/6qAXQC
WH46iF8tAvTRLrD8XhD/TSDQgNVg+UcgPki7+0KwPEcGzL7pYHldEJ8LJNAF
lg/OgJlXBZavyICZlw2Wn5cBC49ksPzhDFh4xIDlX4L4YK4/WJ4vE8hvfQ00
wBUsb5IJM98KLB8J4hcCjVtsAJavz4SZrwyWX5IJCz9JsPwpEB/sPBGw/PtM
mPu5wPKiWTD7WMHyViA+yPiCvwYg+QQQHxS8gT9A/IZWZD4ALzTNwA==
         "]], 
        LineBox[CompressedData["
1:eJxdlFtIVFEUhndRCSaVJJFQlkh2kUqSSKIhk8QSIcaHJBoKu0gh6Ewz58yZ
MzNntsVQCDE9GJFUUEoXCHswwqigFLqQBhVh1EMZdCGVLnQhH6qz/liHlgdk
/Odj1tn7X2v9hbta6vZOVkpp948+3f8+Ni8e2zDq7y1Il5RWuF/MahFarya9
NJDp+74EfDvpRnqKwbXU6jzpBekRtwL4Q6nVF9IdJ90nH3xO0NV17utGcsHX
kaa3BWaCN5AeHHCfHPDDpLOHOoO+bPDLpFF+KvgTqfVP0v1uucxk8PkhV8fz
uquHx1cSryQd8rkVP5NW+6TWR0N8v3fgPaSHbSoA/pw0jjME/ltqXXSA7/cY
fDPpTVTgHngzaXpd8BZ4u9T6Omn6ub8X/BXpMnp6wKeEXe0exi0IvizM/boI
voV0Fx2nE9wIcz/OgHeQptvY7eC3w+x/BvxtmP1uA58eYX/T4KWk/40S+NYI
+2uDx0n/cKv1GeBnIzxfTeB3pVajEfa3ATzXEFqtIY1xDIAHDPa7HvygwX77
wS8YPD+14IMG+18N/tXg+agEn2uy/z5wn8n+l4PvNtn/MvAjJvu/Arzb9PYF
/KnJ/heB/zK9fQAviHr7AL5Rar1/As9ERT19NSrep15E5fn+RMV91CJL+KVr
LOGnClo8/0Hw45bs3w1L9Fu/tsQ8qGkxMU+6JCbmTfljcj7NmJz/UzGxL/pO
TO7f+5jc3xyb+5mF/V5li7zQ9bbIG5W0+b7zwM/ZfN9S8Pu25xf4mM33rQCf
Hef7VoGXx3k/asB3xL35Az8U9/wGvzSBP5JafYt78wmen/DmE3x9Qp5vT8Lr
N3hbQub3lYTM52cJ3qdC8PGE9GdhkvuXB16VFHmsmpLCb30sKfP1WlL252VS
9m+SI/Oz2JH5Wetw/wbAQw7X7wM/4ch8vOnIfHzjiDzUWSkxb2p5SuZfXUrm
n5WS+Xc6JfOvPyXn/0NK5J2aocW+6DIt822bZj8awR0t861Ly3x7oEWeqU9S
67xWkWdqbavIK71TapX+X/8F/87nyA==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.9129696*^9, 15.41777777777778}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.9129696*^9, 3.9130266*^9}, {15.41777777777778, 17.93}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQQbUtXfOra+Dtwh52rswMDQcBWVz/AbTV4hDcjv
P/RVI4YfLO+Gym/IRpOfCOI/rBJZ5/7QCCS/DZXPcAdNnjEdyH8DtK51NVhe
HZXf4IMmX4QmPx3EDwJyXweC5fei8hsegfjVIOt+GYLkOTJQ+A26IL48yMPz
wPLBqPyGCjT5eRnw8AHLH0blM7xEk+fLBPKBtlWJvDMAyZug8hsiQXyQc6qm
gOXrUfkNS9DkT2XC3G8Fln+PymcQzUKVtwLxbbmuLy7Yqw+ST0DlN7Siya9G
5gMArf7Rpg==
         "]], 
        LineBox[{{3.9129885*^9, 14.82}, {3.9129888*^9, 14.82}, {3.9129891*^9, 
         14.82}, {3.9129894*^9, 14.82}, {3.9129897*^9, 14.82}, {3.91299*^9, 
         14.48}, {3.9129903*^9, 14.48}, {3.9129906*^9, 14.48}, {3.9129909*^9, 
         14.48}, {3.9129912*^9, 14.48}}], 
        LineBox[CompressedData["
1:eJxd0T8ohHEcx/EvAyVZ3GLxJ+F07hSLRdwgpVvuFikZhMXgDDiPu/OTbrGw
SMSiG1hYJMXCLdTDJoUBC3UuizNY+H2/5cnn+6unp/fzen7Pr+f3axidio2X
ElHYXnwnMkdzLYXw1iaPQK99cI9tfpQ3JdAHsCmufJ17QkYb+ym2eVJeNm/7
oP/Z8YWC7AHu9+hJbSbPTVHu1uHVi+JeiH0Wm7aVn3PXZfL2C+3sr9im0kHv
4M7GuyvuGsUHsSnFfe3aERHfxaZLx1tfvIBN1Qt/77viXdg0wv3ltxNmxJex
aV/5jfJP5TVJ27y8/1H2pwfbjClfUX6Y9P5P/BbbfCuvT6H3YdOk166c7xo2
HSt/UF6SRm9Oe/srHsE208o3lJ8pf1FevogexDYx5QnlO9y5Ih+IeA7bvCmv
Muid2DSkPK08q/xK+Ydy39K//gXM0q1/
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.9129696*^9, 13.496111111111114`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.9129696*^9, 3.9130257*^9}, {13.496111111111114`, 
      19.27}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.92677920637488*^9, 3.926779276845584*^9}, {
   3.926779328658812*^9, 3.926779349479198*^9}, {3.9267793883270206`*^9, 
   3.9267794581553583`*^9}, {3.9267805847982516`*^9, 3.926780591235522*^9}, 
   3.9267808364662347`*^9, 3.9267809007488894`*^9, 3.92684629572495*^9},
 CellLabel->
  "Out[1565]=",ExpressionUUID->"230c1ce2-d71d-4c69-a980-2f61a30619d2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd03uQzWUcx/GHDCnjMssmsq3rrtVi3BJrrOu67pZQZJQty7pf1+6yx2M3
56y7lGQnpCFZKiujdJHGZipqxGxtSkmZ0BqXqahEz+c783tO38/3j915z+t7
njPPM3OaZ84cMbG6MSa+mjH472bPxIRLfYwfWxHt873dn3+ifcO1jc9SbQbq
tlPJnyPfT/49ebVJ2hN022Hkc8g3kH9Ifpb8zsnak3WbR8lzyTeTHya/QF43
W3sX3XYM+WLybeSfk18mbzRFew/d5inypeS7yI+T/0nedKr2PrptFvlK8jLy
b8hvkreYpj1Nt5lOvo78XfLT5HdM156o26STzyXfSH6Q/Bfy2jO0d9BtR5Ln
k28h/4T8Inn9mdq76jZPkFvy18iPkl8lj52lPUW3nUAeId9NfoL8Onmz2dr7
6jaTyVeRv01eSX6LvOUc7YN12xnkL5AfIP+RvMZc7Um6bQb5fPIS8kPk58jv
nqe9o24zmnwh+VbyI+RV5A3ma39Qtx1HXki+g/wL8mvkjXO095LeU+rmFvxp
6dfR1VOdF0f3a7o2b0o/PspNbfjJ6H4d+F/R/frwuAXo3fAG8P7SI/H5GHj2
Ar/fCL4muh8L3xfdbww/Fd1vAr8d3W8Kb53r95vBh+T6/fvhs6RHw+Ph66Xx
8aTm8Pej+y3gZ/x+BdrUzAv2S1vC2+UF+7YV/JE8f35reI7fT2oDf9nvmwT4
x9JZGLT5VfoYRrxOPrpLZzeJ8E7SJRvdoO1j+f68tvCCfH8e2r6a788T/zR6
XhL8UvQ8tIlZ6M9rB+8unZmQk5mANuOly9OrytPFi6QTHeeI75Revqly2Sbx
L6Wr8AHx36Xx8Srxexeh98b0LIt5AN5buqHLnmj7jDSOzxRfLu1Or1wm/pZ0
ilsvE6+Q3owF8b8X+fskw+ML/H3QdkCBv4/41AJ/H/G1Bf4+4vsL/H3Evyvw
9xGvFvL3aQ9vE/L3QZthIX8f8dkhfx/xDSF/H/EPQv4+4mdD/j4d4LUWqzbJ
uu0I8lzyTeSHyc+T17XaO+s2Y8hD5NvIPyO/TN5wifYeuu2T5EvJS8mPk/8h
vcv9Pi92hDctROPnO6oTPLUw2D/UGZ5VGOwndYWv8Pvru8HL/L7pDv/a7095
CH7T71f0gDcvCvZTU+BpRcF+aS/4tKJgv1Fv+Lrofir8Henyw27Q5jTaRtyk
9YFXfxY91M1RtElEm3puMvrCh0ufPOEGbebK/otuRveDvyQ91s0ptDko+3Fu
xveH/yx99ic3aFN7Kfa3u5k4AN5eOtvNBbQZiTbJbqYPhOdJX73iBm22yP4+
N/PS4OXSuW5uoM1F2U9xs2gQvF7Yv/dgeNdw8B5FaDs2HLxHrSFwGw7eYwXa
bg8H71FvKPxoOHiPdWh7JRy8R+wweGwkeI8StO0ZCd4jbjh8QiR4j61oG44E
79E6Hb47ErzHTrT9KhK8R3IG/HokeI89aHtfsetUfF+Th+F9pXH/cWg7qTj4
/s3iq4qD9zgjvle3qST/l7zlMu2DdJsZ5M+THyD/gbzGcu1tdZsM8nnkJeQf
kZ8jv2uF9o667SjyheSvkB8h/428wUrt3XSbceRLyHeQHyO/Rn7PKu29dNtM
8mLyN8hPkt8gj1utvZ9uk02+mnwf+bfkt8lbrdE+RLedSb6e/L3/938MQM69

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.9129696*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.9129696*^9, 3.9130557*^9}, {0, 67.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1XlsVFUUBvBbQJaKLFJABQqIStGgREQNSlhcigQlIGrQRgWlndJ21k7b
WTpzCxSQrYoShCiooATFKkoQFEFkiaxhsZRdKJStJSxSdsH5rsn3vGf+mXz5
vXeXc897r/Moz7DR9ZRSnZKUwn/i9/3ormf69zS/632V0hXIy1NLa4Yuv5bI
6jpySnn6kXAKsu6UmchzZuN3Ff488sCElqcj6xzkjrg91fgHyFu34HcFvgw5
YgZEVgeQh5kJjSdlJfJ/SzPeFdlMX34ZPhjZDF+KrPxZXL/xWchmOUcuwX/N
4n6QdRVypvkZb+zi+uvg3V1cz0X4yy6O/ze8yMXxLsDnulgfZL3Wxfqch59y
sR7Iulk2938O/lg294usRyCvrUvLKPv9DDyOXDnf2ye5sga+IJvjn4JvymZ9
TsDPOvdXw1uPSeRuiVSXdgzeGzkxWGLEKvjbY7jfw/BS5AWYbv52+DdjON56
+HbkWpS/Zg38kjP+Sni7HPoSeP8c1msuPDOH+x+/OuFTc7ifRYmslzi+FF7p
3L8KfsPxdfB7c3n/Rnh6Lq/fBs/L5fnugM/IZT13wZfnsh92ww8iX8J26/bA
6+ex3/bD05B9poAH4S/l8fwOwwN5nO8IfDYyqpNRVgVflcf5j8KP5bE/quFN
3Oyn4/BHkE15M07Ah7t5PifhYTfrfQo+z81+rYGvd/N8auGn3dyP8RYertfc
38vD/Zjx30A27ZJs5tcep7/gX3l4Hsfgmz2c3+zvvIfPo9l/G69VD/W0nfVI
r9Of8Ile7g/11Iu9PG9T351eq976spfnh/NQHXxW1gN8rJ9xl8/pf/g0n3We
6kcf++kQfI+P77MD8Js+7m8fvIuf69sLf8HP8dFP2u1nPSvhH/lZzwr4Cj/r
+Sf8Lz/riX7VDQKs1074gwHWx/T3kIDV7yoYcJ5n+JyA/Xz8FmA/b4VXB9gv
W+C353N/m+A98q3nTb3q5BXwSD7rZ36f/8/x/G/It94nqjbfmR/eMujsF/5E
kM9HBTwjyPddJXxs0Kk3fGHQOT/4Vme8o/ALQT7vx+F3FVjvU92ngOdbC3+n
wH4/T3KuN+/38gL7+7DLud98P64W8HzM9yW10P4+PVtofe90dqH1vVVlheyf
G/ClhVz/Tfg+537VL+G3Cjk/srq/iOtNgg8q4v314N4irr8+fGYRx2sA/6WI
4yHrw854t8EbhjheQ/hDIZ5nI/jQEPu1MbwgxPubwD8J8flMhq8J8flvCj/h
XH8HvGmY/dwM/miY/dQc/lqY62kBLw5z/cj6izD32xL+R5jjI+szYT4/d8Jb
RXh+yPrJCK9vBX8zwvlS4OMiHL81fFGE9WwD3xbh+pHVxQj32xZ+d5T9gaz6
Rtn/98DfjfJ70A4+Ocr1IOvvoqyn8Yoo+6c9/FqU8yOrTsVcXwf4c8XcP7LK
Keb4xt93rk+FLyvm/pH1/mLW23hSjPUz/kCM/d0RPjjGeiFrX4zzG58V4/qN
r4xxPuNVMb4vjTeK8/tmvHuc6zc+LM5+NF5kX68/jVvjqbVx9rPxk3HW33gz
ba+vp7bXP0LzfI3HtLVftUBb9dAbtVUvdVZb9dQpJXz/Ge9dwv0Zf6uE6zde
WmKfz9d2VtuF1wlvN9b2fnZWmcKnCF8ifLfwG8I7j7M93c46V/gM4T8JPyi8
3njb0+ysXxQeEP6x8FXCjwpvUmr7w3ZWw4WHhM8Tvk74aeHNJ9jey876deFa
+JfCNws/J7zNRNufsrMaKXyC8MXCdwi/LLz9JNsH2FlnCZ8m/Afhe4T/I7zL
e7YPtLNyC/9Q+Arhh4Q3mGx7NzurIcLzhc8Rvlp4tfDkKbb3sLN+RXhE+GfC
NwivEd5yqu2P21llCC8RvlD4FuEXhLedZnsfO+tRwicJ/1b4LuFXhKdOt/0Z
O6ts4dOFLxW+V/gt4feV2T7IztojfKbwn/+f/wXC6sFI
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.9129696*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.9129696*^9, 3.9130557*^9}, {-0.88, 7.9}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.92677920637488*^9, 3.926779276845584*^9}, {
   3.926779328658812*^9, 3.926779349479198*^9}, {3.9267793883270206`*^9, 
   3.9267794581553583`*^9}, {3.9267805847982516`*^9, 3.926780591235522*^9}, 
   3.9267808364662347`*^9, 3.9267809007488894`*^9, 3.926846296385089*^9},
 CellLabel->
  "Out[1566]=",ExpressionUUID->"2cc94f97-3f34-4577-b87d-40cee60448b5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullHeatDynamics", "=", 
   RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Module", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "dayN", ",", "roomTemp", ",", "externalTemp", ",", "tempDiff", 
              ",", "roomExternalWallArea", ",", "heatLoss", ",", 
              "roomRadiatorArea", ",", "heatGain"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dayN", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"seasonDays", ",", "day"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"roomTemp", "=", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"roomTempsDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"externalTemp", "=", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"externalTempDaily", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"tempDiff", "=", 
              RowBox[{"roomTemp", "-", "externalTemp"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"roomExternalWallArea", "=", 
              RowBox[{
               RowBox[{"roomExternalWallLength", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "roomHeight"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"roomRadiatorArea", "=", 
              RowBox[{
               RowBox[{"roomRadiatorLength", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "radiatorHeight", " ", 
               "2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"heatLoss", "=", 
              RowBox[{
               RowBox[{"roomCoolingCoefficientEstimates", "[", 
                RowBox[{"[", "room", "]"}], "]"}], " ", 
               "roomExternalWallArea", " ", "tempDiff"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"heatGain", "=", 
              RowBox[{
               RowBox[{"roomWarmingCoefficientEstimates", "[", 
                RowBox[{"[", "room", "]"}], "]"}], " ", "roomRadiatorArea", 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"HeatingCurve", "[", 
                    RowBox[{"#", ",", "65", ",", "45"}], "]"}], "&"}], ",", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
                 "roomTemp"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{"externalTempDaily", "[", 
                   RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", "+", "cycle"}], "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"100", 
                  RowBox[{"Differences", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"heatStockDaily", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "//", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], 
                  "&"}]}], ",", "\[IndentingNewLine]", "heatGain", ",", 
                "\[IndentingNewLine]", "heatLoss", ",", "\[IndentingNewLine]",
                 "externalTemp", ",", "\[IndentingNewLine]", "roomTemp"}], 
               "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]",
            "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"day", ",", 
            RowBox[{"Drop", "[", 
             RowBox[{"heatDataDays", ",", "1"}], "]"}]}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"roomToCycle", ",", "cycle"}], "]"}], "]"}]}], "}"}]}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926779579112837*^9, 3.9267795901280007`*^9}, {
   3.9267796466134768`*^9, 3.9267796821033754`*^9}, {3.926779811486763*^9, 
   3.926779811739519*^9}, {3.926779851463575*^9, 3.926780054721218*^9}, {
   3.9267801191397295`*^9, 3.9267801972613335`*^9}, {3.926780246045493*^9, 
   3.9267802991837044`*^9}, {3.92678039609153*^9, 3.92678041078587*^9}, {
   3.926780569322589*^9, 3.9267805699375763`*^9}, {3.9267806571748457`*^9, 
   3.926780750554531*^9}, {3.9267814147307153`*^9, 3.9267814925325966`*^9}, {
   3.9267817216520276`*^9, 3.926781722206208*^9}, {3.9268432395673575`*^9, 
   3.926843239654378*^9}, {3.9268432914243717`*^9, 3.9268432915362396`*^9}, {
   3.9268445604530373`*^9, 3.9268445605275927`*^9}, 3.926845087159276*^9, {
   3.926845476850443*^9, 3.9268454873934307`*^9}, {3.9268457312975903`*^9, 
   3.9268457394732475`*^9}, {3.9268470515053034`*^9, 3.926847101201507*^9}, {
   3.9268471319223905`*^9, 3.9268471470491533`*^9}, {3.9268472100340924`*^9, 
   3.9268472766102734`*^9}, {3.9268473162258387`*^9, 3.926847326977239*^9}, {
   3.926847362145598*^9, 3.9268473886897674`*^9}, {3.9268474269937*^9, 
   3.926847430033286*^9}, {3.926847461203591*^9, 3.9268474613942738`*^9}, {
   3.9268504266445055`*^9, 3.926850455970118*^9}, {3.9268506305643063`*^9, 
   3.9268506322279577`*^9}, {3.9268508203409243`*^9, 
   3.9268508356043386`*^9}, {3.9268509912044516`*^9, 3.926851031747617*^9}, {
   3.926851209251502*^9, 3.9268512111406975`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"3cf5f4f8-5eed-4461-a20d-84aa8fcd5e97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingPeriodHeatDynamics", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"roomsOnCycle", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"roomToCycle", ",", "cycle"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Select", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "dataForSeasonByRoom", ",", "heatingStateSwitch", ",", 
            "heatingPeriods"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dataForSeasonByRoom", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Quiet", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"fullHeatDynamics", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomOnCycleN", "]"}], "]"}], ",", "1"}], 
                  "]"}], ",", "ListQ"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"roomOnCycleN", ",", "1", ",", 
                RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"heatingStateSwitch", "=", 
            RowBox[{"Differences", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"dataForSeasonByRoom", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"heatingPeriods", "=", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"First", ",", 
                 RowBox[{"Position", "[", 
                  RowBox[{"heatingStateSwitch", ",", "1"}], "]"}]}], "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"Map", "[", 
                RowBox[{"First", ",", 
                 RowBox[{"Position", "[", 
                  RowBox[{"heatingStateSwitch", ",", 
                   RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"dataForSeasonByRoom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"heatingPeriod", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"heatingPeriod", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "5"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"dataForSeasonByRoom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Module", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", "heatingPeriodDataForRoom", "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"heatingPeriodDataForRoom", "=", 
                    RowBox[{
                    RowBox[{"dataForSeasonByRoom", "[", 
                    RowBox[{"[", "roomOnCycleN", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"heatingPeriod", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"heatingPeriod", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "5"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"dataForSeasonByRoom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Differences", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{"UnixTime", ",", 
                    RowBox[{
                    RowBox[{
                    "Transpose", "[", "heatingPeriodDataForRoom", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "<", 
                    RowBox[{"30", " ", "60"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    "Transpose", "[", "heatingPeriodDataForRoom", "]"}], "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"heatGainOrLoss", ",", "4", ",", "5"}], "}"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"roomOnCycleN", ",", "1", ",", 
                   RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
                "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"{", 
              RowBox[{"heatingPeriod", ",", 
               RowBox[{"heatingPeriods", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"229", ",", "191", ",", "208"}], "}"}], "[", 
                   RowBox[{"[", "cycle", "]"}], "]"}]}], "]"}], "]"}]}], 
              "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
        "ListQ"}], "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926850573825241*^9, 3.9268506558099456`*^9}, {
   3.9268508882912664`*^9, 3.9268509742272587`*^9}, {3.92685106981063*^9, 
   3.926851091201768*^9}, {3.926851137314944*^9, 3.926851267985737*^9}, {
   3.926851394019655*^9, 3.9268515809143887`*^9}, 3.9268516119716415`*^9, {
   3.9268521174446754`*^9, 3.9268522704199953`*^9}, {3.92685230096357*^9, 
   3.92685237912284*^9}, {3.9268524515092754`*^9, 3.926852593579957*^9}, {
   3.9268526991895304`*^9, 3.926852845763075*^9}, {3.926852906771334*^9, 
   3.926853072580391*^9}, {3.9268531345500937`*^9, 3.9268531613487716`*^9}, {
   3.9268533220370226`*^9, 3.9268533261335545`*^9}, {3.9268537861648808`*^9, 
   3.9268538864523783`*^9}, {3.9268544265817623`*^9, 
   3.9268544505023465`*^9}, {3.9268546864485097`*^9, 3.9268550094153643`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"7d207ef5-2981-4e66-ba01-fa4b9b66b52b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatSumsForHeatingPeriods", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]",
             "}"}], "\[IndentingNewLine]", "&"}], ",", 
          RowBox[{"heatingPeriodHeatDynamics", "[", 
           RowBox[{"[", "cycle", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}],
         ",", "ListQ"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.926852957841633*^9, 3.926852963891345*^9}, {
  3.926853081060339*^9, 3.9268530816675005`*^9}, {3.9268531781335015`*^9, 
  3.926853331747471*^9}, {3.9268535674130836`*^9, 3.926853573092157*^9}, {
  3.926854465813054*^9, 3.9268544668999376`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"96f4cd9e-6287-41fe-bb07-f4061b5f1bc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"heatSumsForHeatingPeriods", "[", 
                 RowBox[{"[", "cycle", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"NumberQ", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}], "]"}], 
                 "&"}]}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"1", "+", "heatGainOrLoss"}]}], "}"}], "]"}], "]"}], 
            "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "4000"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "4000"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<cycle \>\"", "<>", 
            RowBox[{"ToString", "[", "cycle", "]"}], "<>", 
            "\"\<\\nheat supply vs heat \>\"", "<>", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<gain\>\"", ",", "\"\<loss\>\""}], "}"}], "[", 
             RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"heatGainOrLoss", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"heatSumsForHeatingPeriods", "[", 
                   RowBox[{"[", "cycle", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"NumberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}], "]"}], 
                   "&"}]}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Mean", "[", 
             RowBox[{"Transpose", "[", 
              RowBox[{"Quiet", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"heatSumsForHeatingPeriods", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}], "]"}], 
                    "&"}]}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}], "]"}],
               "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "4000"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "4000"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"\"\<cycle \>\"", "<>", 
           RowBox[{"ToString", "[", "cycle", "]"}], "<>", 
           "\"\<\\nheat supply vs mean heat dynamics\>\""}]}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.926853333334646*^9, 3.926853465940298*^9}, {
  3.926855039156852*^9, 3.926855046228924*^9}, {3.9268556870938826`*^9, 
  3.9268556871229515`*^9}, {3.926855742245946*^9, 3.926855915125989*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"5794835a-73b4-4b7a-8017-ca977dbd7a92"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbeGyVLl63hKHK6bzLtlUzHJgAIGOxQ4eKYqak9dA
+RJLHR5d/rQjagOU/6DVwXPREpv4xS0QPkOng8OUqIa0+w1QfqaD09sXbk+b
Sx0uzHqi+tWpzcG7ZbK1UEcTRN6h36Er8ijLwtmtED7PdIdpEyee7W7vcmgI
f62rod3tsOnmxvjbezog8gYLHfK8/rTzSnRC+AeKHDgKTsSsEamF2sfAoOUq
0eU1A8o3mOjQcvymi0xRFYRfMN3h1yn/qjclHQ4N+7wMHcszHeZfWZR0cFkx
XL8hy797cZOLHRL+A8H8TocjC4oX+dZB/eMw3+GfBnvHtJ8THRiYBfyPP5js
4Cd5mdXLYqrDgmcxyVvzJzp8FP4r8eEX1L1fdjloWQg9zp65xaFhVv7Pafll
Dt17VosdkqtxUDjm9+aI2VQH7q+nv9YWtzo4CFlvFNbuc1h1KNKJbfYEiH7b
yQ6q6fLX+473QPhCbQ5xyy8a/r9W7HBgnnX5uzvNDovtgxYHiRbA42vNr+3y
DiZTHQBAoa0g
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 1\\nheat supply vs heat gain\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbeGyVLl63hKHGo6/DHqG+x0YQKBjscMyBolTWQt3
QPgSSx18tNVjddV3QfgPWh2ORqerTjRdCuEzdDo4/ViazX9pHpSf6SC05Wti
QscUhwuznqh+dWpzUN13LEY/cBFE3qHf4cK+xdXl31dC+DzTHY6I7BGtXbrW
oSH8ta6GdrfDBfVC6QsxayDyBgsdgnev8ptRtx7CP1DkILb5+urYeqh5QPAp
46Xih9SFUPUTHd6mTfa+fRDqnoLpDpe79eWtPqx0aNjnZehYnunwpXy6n5TX
NLh+fl8n591iMxwS/gPB/E4HlutZF3Yrwtw73+HEnvLeCY6bHBiYBfyPP5js
8HKxtNvWZVscFjyLSd6aP9FBaKLwGo27UPVfdjn053+ojom/7NAwK//ntPwy
h+PCWQZCLRMdFI75vTliNtVhXaOTw9WemQ4OQtYbhbX7HPj+MUz5FwQNT9vJ
Doe2TWl5sno5hC/U5lBwfv7vWYf6HA7Msy5/d6fZIfigod6KM43w+FrdMeFr
mtIuBwAlAq1g
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 1\\nheat supply vs heat loss\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbeGyVLl63hKHH16XZs17vsmBAQQ6FjvsiEyY0u+z
HsKXWOqg9GEj66LMDRD+g1aH8JYJXzLiZkH4DJ0Ohgtfhj5cMBnKz3RIer9+
c+TLTocLs56ofnVqc7CYv/q18edpEHmHfgcj0at74uPmQ/g80x2m2kxg2aC8
yKEh/LWuhna3g9z5dZXMbgsh8gYLHb4/C7nh+2gRhH+gyEH8YIH5Z0WoeUAw
vVCn+KfEVKj6iQ7pb1L0DNdPgvALpjt47n84bxfbAoeGfV6GjuWZDjK6DstP
GXfD9UufY/w96XePQ8J/IJjf6WC6n93S3xHm3vkOHO2V+t/2L3NgYBbwP/5g
soNN1oTjx7+sdFjwLCZ5a/5EB75rQZueSM+EqP+yy2HW3y0l21tPODTMyv85
Lb/M4RWT6LZD3R0OCsf83hwxm+ogZTdF1kt5koODkPVGYe0+h+T7ulsbF8yF
6Led7NA9IcbqxN15EL5Qm8OEQBcv3vAWhwPzrMvf3Wl2UHl4qz7weiU8vsLa
6/6W5a93AAC+i655
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 1\\nheat supply vs mean heat dynamics\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{2269.412901667056, 1929.058997465434}, {
         2404.7248803827642`, 1467.3853765497443`}, {1300., 
         1144.0687635251127`}, {3000., 1973.315820299026}, {2400., 
         2178.1039133599857`}, {1716.666666666697, 1575.3653588810444`}, {
         1900., 1320.7230732481}, {0., 1497.4625856062312`}, {4400., 
         2828.0471710615034`}, {2100., 1508.4143644105425`}, {2300., 
         1956.3052280490963`}, {2400., 1910.712460204083}, {0., 
         1477.419738777673}, {457.6126674786792, 403.18952764374626`}, {1700.,
          1302.2613485351928`}, {3200., 2774.48295331012}, {1750., 
         1421.7296402612624`}}]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 2\\nheat supply vs heat gain\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{2269.412901667056, 1211.5914494327758`}, {
         2404.7248803827642`, 1046.1110155477124`}, {1300., 
         754.5172957523532}, {3000., 1508.081757586116}, {2400., 
         1137.2551651477502`}, {1716.666666666697, 1019.0123700658107`}, {
         1900., 988.4841893110228}, {0., 1023.842897450366}, {4400., 
         2025.5327876112524`}, {2100., 842.6844238243644}, {2300., 
         966.1996181489639}, {2400., 985.440376213616}, {0., 
         402.31746180921334`}, {457.6126674786792, 148.58006616175265`}, {
         1700., 485.818604910785}, {3200., 964.4182758920624}, {1750., 
         401.5365475359389}}]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 2\\nheat supply vs heat loss\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{2269.412901667056, 1570.325223449105}, {
         2404.7248803827642`, 1256.7481960487285`}, {1300., 
         949.293029638733}, {3000., 1740.698788942571}, {2400., 
         1657.679539253868}, {1716.666666666697, 1297.1888644734277`}, {1900.,
          1154.6036312795613`}, {0., 1260.6527415282985`}, {4400., 
         2426.7899793363777`}, {2100., 1175.5493941174534`}, {2300., 
         1461.25242309903}, {2400., 1448.0764182088496`}, {0., 
         939.8686002934433}, {457.6126674786792, 275.8847969027495}, {1700., 
         894.039976722989}, {3200., 1869.4506146010913`}, {1750., 
         911.6330938986007}}]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 2\\nheat supply vs mean heat dynamics\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
+KDuD/fZF1DyIBr/B3xdvIs=
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 3\\nheat supply vs heat gain\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
9KL0YEa2DafMIfWQ7Y/YLnNtjXQf/B/qTLr6
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 3\\nheat supply vs heat loss\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
fGg+SvReDwU2UnwQ+6OAs86GpRuM/wP1JbgQ
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 3\\nheat supply vs mean heat dynamics\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9268533938157396`*^9, 3.926853398509559*^9}, {
   3.9268534335174227`*^9, 3.9268534566760817`*^9}, 3.926853487652006*^9, {
   3.926855035326331*^9, 3.9268550471777935`*^9}, 3.9268556881151333`*^9, {
   3.9268557619788756`*^9, 3.9268558418960695`*^9}, 3.9268558843297806`*^9, 
   3.9268559178335724`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"ea5167b1-ffc7-43da-801b-e65666ce15fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "/", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "&"}], ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"heatingPeriodHeatDynamics", "[", 
          RowBox[{"[", "cycle", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"NumberQ", "[", 
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], "&"}]}], 
        "]"}]}], "\[IndentingNewLine]", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926856142099778*^9, 3.9268563189496703`*^9}, {
  3.926856384103232*^9, 3.92685647152549*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"ce275e69-733a-4ce6-af36-7811dc6eb4a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7IUWZQh0FF+1hwo41GzTfZ9rBeNzOHhtfDrJ
rwjGF3CI/Zx/V3sWjC/iUOfA6d5fC+NLOFxhkJOZ3Q3jyzh0Jn95+n4qjK/g
wLRUy5a9BcZXclhzx83abz2Mr+LwqDe8ccEqGF/NgWnVY1ml1TC+hoPBl+xd
r6/B+FoOXHJnC07sgfF1HD6eVjhucwTG13Pgv1eUOu0sjG/gkJAnIlNzGcY3
dDBTmHSJ4QeMb+TAP2+xdeoOGN/YIfo9683FcP0mDmaNnN/4VsD4pg4KbtPs
b86F8c0cNhesdVgO97+5w+5axgrreTC+hYOZgOGJCb0wvqVDn0fX/vcNML6V
g+zecywuVTC+tcPE8zc/MsPDy8bhbJt4XHM1jG/rwGkxXTZs4lV7AJ36gUw=

        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7M0/5NqX+p63hwo4sLFqGppfOQflczgoPeXt
uLsexhdwmC3I/0lMA6ZexGG1QeWvS54weQmH1y4XHzTZwPgyDt+YZrk6asL4
Cg6TZ/QFfHSA6VdyOOizti2/EsZXcVhVZ692LwfGV3NgnzCZ4Q1cXsOhsT5E
L+gJzDwth7mvpm7ImAvj6zjkz5byfrMWxtdzeHrxx+GF1jD9Bg5Os1/Pf5kH
4xs6PJBfNemvJoxv5MDSfjK+0x7GN3aY+b3x9As/GN/EoSHI8fjjCTC+qYOt
7xEp3XgY38zhKMfE78kbYXxzh1bu5AxFVhjfwkE5a9dOYRcY39JB7ZPSdF87
GN/KwePs+Ze9ITC+tYNVYvJZWycY38bhazdTgBk7jG/rwJxzXa6m4rw9AO6c
gAo=
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7C+mPvDf+/SWPVTAgfG4bUVZ9G0on8NBOUZ4
5SFTGF/A4Vpzx8oTF2HqRRx01HdZt8fC5CUcdsZUFiuHwfgyDn9m2ZXnh8L4
Cg6b+fqkGm7D9Cs5fK1JYvw1GcZXcTi5qSP7wzwYX83hT++lh8+nw/gaDrxn
MvVeb4PxtRyWv3lu1vwFxtdxiHwWKHz2CYyv5/B3x4QdM6bA+AYOfw9/FeYv
hfENHW6fl0hhKIbxjRyK5pWLXFsO4xs73BKxPPi8C8Y3cei8GqpW3w/jmzo4
TmY3nrAJxjdzeMnVdXjZbBjf3KHpz5nLxvdhfAuHHbs+RqVegPEtHeLtnpS8
hMtbOdjGeLKVwsPH2uFyfYn63Vswvo2DhfHzyocMsPC0dfgi+PdSNtB+AP64
jbw=
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.22497014005400018`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{421.80000000000064`, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 29.}, {0.22497014005400018`, 0.42758351166468134`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{{1., 0.1456482251234629}, {2., 0.15981039547076675`}, {3., 
        0.15646293744537002`}, {4., 0.15635365293686065`}, {5., 
        0.14956513623795908`}, {6., 0.15512055051290347`}, {7., 
        0.16572090313555707`}, {8., 0.1519846849717733}, {9., 
        0.15510616368417124`}, {10., 0.1569160271536108}, {11., 
        0.15858863663263698`}, {12., 0.15401958726671663`}, {13., 
        0.15163940586206176`}, {14., 0.16013508901255502`}, {15., 
        0.1571250534026286}, {16., 0.15684827666899434`}, {17., 
        0.1526738934284473}}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{{1., 0.18274778403304417`}, {2., 0.20696518234101915`}, {3., 
        0.2147210798672662}, {4., 0.2090127964206295}, {5., 
        0.19981214464727476`}, {6., 0.20597872946870954`}, {7., 
        0.2136848235673622}, {8., 0.20550509435773287`}, {9., 
        0.20868450884700035`}, {10., 0.21195915234392917`}, {11., 
        0.21469064171041088`}, {12., 0.20878357839811204`}, {13., 
        0.20133015952809447`}, {14., 0.20068813986884823`}, {15., 
        0.19677654213991735`}, {16., 0.2051506543578559}, {17., 
        0.20127609232919114`}}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{{1., 0.2566453560529934}, {2., 0.28110553446972847`}, {3., 
        0.2798701915102139}, {4., 0.2746899425669771}, {5., 
        0.265049134706377}, {6., 0.2740329103656992}, {7., 
        0.2918731414879391}, {8., 0.2648611919081259}, {9., 
        0.2720913644902573}, {10., 0.2744382058156638}, {11., 
        0.2869612903006651}, {12., 0.2748964032752542}, {13., 
        0.27271090980623786`}, {14., 0.2837181156516943}, {15., 
        0.2785518602880718}, {16., 0.2815043479737458}, {17., 
        0.2712645750185327}}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{{1., 0.41495863479049977`}, {2., 0.35211888771848565`}, {3., 
        0.3489457911771499}, {4., 0.3599436080755329}, {5., 
        0.3855735844083892}, {6., 0.3648678096526877}, {7., 
        0.3287211318091416}, {8., 0.37764902876236783`}, {9., 
        0.3641179629785712}, {10., 0.35668661468679624`}, {11., 
        0.3397594313562871}, {12., 0.36230043105991705`}, {13., 
        0.3743195248036059}, {14., 0.3554586554669024}, {15., 
        0.3675465441693823}, {16., 0.3564967209994038}, {17., 
        0.37478543922382873`}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{448.79999999999995`, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 17.}, {0, 0.41495863479049977`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
9kr/UL9/AVBpBS8=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9lgtUjHkYxqdWylaSaHNJUZLKLZR7T/cbXaeaJpOZKbnsulRuocxKLuve
LkuUiN3O7oZtD9aihiiRS3JIopYUUrpwWJW2PTvPN+fMmfPM8/6+9///3vd7
/99w5bKQ+doikSir5/vf7/+fFpe4ooNXswyfu2j+QFmu1GpY2zON1kNSv1nt
Lp+o+2HipUELks0ZPwDh1T7erkK8GdI6KhbXVVMPxcHKXeeuGjDeEsVzOptC
O+mPgL64WTuwjNoaw0wsmv98RG0DHb/nN1f8TW2L7d5i72wrXs8O8d9OHOH8
O30HxLZd+Gi2j3osVpztu0RX8MdDVFRaX5JGPQH2ifdLXY9SO6Jtr2hD63Pq
iYizGSD1uko9CbG6rxyX7aWejNVxl97MSaV2gk3o3cK1hdTOyOwe1r/xMfUU
eLberLh4gXoqRn49yqFEuP40nPboo1Pzkno6jJZbJFpdp56Bq61vjOOF+Jnw
iUhXvL5GPQuYstthaiW1C3KdWnY+FeIB9xXVr1/s0WgV0LzC9ftkwXfFyccW
eTml9F1xVJycLn5H3w1B01vS9mbQd4NJblj+W6F+7nh0yGKSWRd9d4g995lH
59D3gKmq6K2E+1d5IPeB6pqB0D+eSGtI+DVrG31PpDhULVn1gr4X+mVsP6Kz
nb4XChOTTK8to++NM3F7Ftok0/dGmUPxoDKhH31Qpm8U2uscfR8E3k1teS/c
P1+Eb10e4f+Avi8SB39e1/sH+n4IGNHp2t1O3w9OnVW9X/B+ifzhezw4tFxL
058qf6wZ2WaUJvTvbMQ3dHUczic/G0+tXjXVXKY/BwmL7k+wLqY/BwbGJ754
xnyiAGQW9vLZ0Eg/AF/mXJqdzXqIAlFkuM3uxC76gQjoNry9VqhPECSXjdMa
/tJoBGGvYfp4V+ZXBUEVNs4k5opGq4OwbGxFjcKYz1swZu4bPK50P/lgnH6V
sbKI9VEFQ/nhfpNWCvlgqIy9d3RImD8E26zv+OzIIx+CpY1dfYx2kg+BZ0Zc
W8lu8iHYkpS3uKY3+VBc1HlncFGbfCjMZSkZYivyoRiYa2N33pl8KGIH7z6S
7UZeDGucXfTTBPJiBLjpeXSNIS/GkVG/tAU6kRdDt6XAu/dX5MMQvXtwXTfI
h0G9dbNTjin5MJSZNhc4+5EPw7O+T96ncT2i8J75U508Sth/OD7d86i1Xk0+
HHUhm+2zWA91OFY5npd1J5CPwEm3W3r1Z8hHYI3K3a25iHwESvUvKIrZ/+oI
fLi76Z/SWvISGA8YdkjrBnkJiitM7LzKyUug79zo5/+BvAQbCmN1CkrIR8Iu
OT7Ll+tDJPTc9zeKhOcpEqO3nLI0vke+x5dmmplwvSIprBy7in67T16K5geH
dde9IS/FTL2uPyI5L9RSfHQbVzaF80oUhcCP04Z+yCUfhQBlYOVtKfko5N3a
mRKkIh8F/Sceb6KXkJ+L/M626R6HyM/F5oev8x8+JT8XQxZ11hmyPuq5iC4u
F6UL816GASenPTu5lLwMsy9p59kK/SvD2dt5VY2c12oZjilF1cOF+RKNkvrJ
7YU8HxCNprLslwFC/mjYV53Y+IrzQx2N7KRHqSkN5OfBNu/nW0kF5Oehwz4q
04Dni2oeZKfqxH3oq+dh4fzgg0acNyI5vkt4a/iZ55+lHImZn9tv8HyEHE8X
HYgN5jyTy9G0UmIxg/NCJccJx9bcWaxvthxVCeWbcthPajks9HcmxvL8qpXj
2PtD/u9EnB8KVNqMUW1i/S0VML1Tbp7O+wMFFhqsb19zlvkVSLJtu3nnFPMr
UHUzPHII+zVbgYdj6szFjFf36NHP5X253loFDF22XZM84f6V2CdeH3W9j2Y9
lko4mwWpwfVCiRbbVplBM/MrsTGiQitHl/NcCams8sczQzU6Wwkv50SfgIGs
lxJp2qlj9fi+U6uEZ75f6/nPzB+DvNS735jd4f5j4N8rJclurCYeMShIVlWc
qmf+GGib1yzQ4vOoisFxG5eGDf2ZPwZX4s/bF3dw/zE40L+y3renfv8CQNAj
Wg==
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.38957168018599997`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{365.39999999999986`, Automatic},
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 158.}, {0.38957168018599997`, 0.5993854878326003}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9268561429443755`*^9, 3.9268561896241107`*^9}, {
  3.926856222867847*^9, 3.9268563197922196`*^9}, {3.9268563899395947`*^9, 
  3.926856471754196*^9}},
 CellLabel->
  "Out[261]=",ExpressionUUID->"10f57a04-4382-48af-b929-941e353ca2e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"roomNames", "[", 
     RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Position", "[", 
     RowBox[{"roomToCycle", ",", "2"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9271839630692587`*^9, 3.9271840009541655`*^9}},
 CellLabel->
  "In[1049]:=",ExpressionUUID->"a71f6cb5-9734-4f67-b58b-7dee43a80f5b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SZGK\"\>", ",", "\<\"G\[OAcute]lyairoda\"\>", 
   ",", "\<\"M\[EAcute]rce\"\>", ",", "\<\"Lahmacun\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.9271839857650347`*^9, 3.9271840011925845`*^9}},
 CellLabel->
  "Out[1049]=",ExpressionUUID->"17b48cc3-7d65-4d53-9f7e-b556ba8384e2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeatTakeupRatios", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"roomToCycle", ",", "cycle"}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Mean", "[", "\[IndentingNewLine]", 
               RowBox[{"Map", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "/", 
                   RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "]"}]}], 
                  "\[IndentingNewLine]", "&"}], ",", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"heatingPeriodHeatDynamics", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"NumberQ", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], "&"}]}],
                   "]"}]}], "\[IndentingNewLine]", "]"}], 
               "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", "1"}],
         "]"}], ",", "First"}], "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9268569666448994`*^9, 3.9268571368691206`*^9}, {
  3.926857951670927*^9, 3.92685797119061*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"0ca5ae0e-6426-49da-9820-83f57b21abef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeatTakeupRatios", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.3377624797730313`", ",", "0.2430256607463216`", ",", 
     "0.15551285993802802`", ",", "0.20516277083684692`", ",", 
     "0.2755449691581281`", ",", "0.4148230278815779`", ",", 
     "0.5851769721184221`", ",", "None", ",", "0.4192118594806471`", ",", 
     "0.36377940006699705`"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268571921178403`*^9, 3.9268571933492217`*^9}, {
  3.926857966805967*^9, 3.9268579674780865`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"4e876b30-14fe-45cc-948b-c004cf206499"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"roomWarmingCoefficientEstimates", "[", 
       RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], ",", 
     RowBox[{"roomHeatTakeupRatios", "[", 
      RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], "\[IndentingNewLine]",
     "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9268571346786523`*^9, 3.9268571688697033`*^9}, {
   3.926857301239088*^9, 3.9268573281487303`*^9}, 3.926857985271764*^9},
 CellLabel->
  "In[358]:=",ExpressionUUID->"a3ac67f5-4ef0-4573-ac38-083ab30d68e5"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{14.790565678455245`, 0.3377624797730313}, {10.093794496179914`,
      0.2430256607463216}, {10.203783419608415`, 0.15551285993802802`}, {
     4.909168096053397, 0.20516277083684692`}, {13.179522589616816`, 
     0.2755449691581281}, {24.683635116094692`, 0.4148230278815779}, {
     11.57557242104479, 0.5851769721184221}, {6.4867340547496815`, 
     0.4192118594806471}, {1.4117056699875632`, 
     0.36377940006699705`}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 24.683635116094692`}, {0, 0.5851769721184221}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926857126235075*^9, 3.926857169080497*^9}, {
  3.926857303089029*^9, 3.9268573284284477`*^9}, {3.9268579799737916`*^9, 
  3.9268579859083505`*^9}},
 CellLabel->
  "Out[358]=",ExpressionUUID->"9c462728-9748-43fa-81d7-bd77bfc78eae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["szezon teljes\[IAcute]tm\[EAcute]nye", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 
   3.926859696924652*^9}},ExpressionUUID->"d60ca7d6-283c-4978-8f29-\
68c66434c002"],

Cell[CellGroupData[{

Cell["szob\[AAcute]k fogyaszt\[AAcute]sa", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859512566615*^9}, {
   3.926859645892888*^9, 
   3.9268596481655593`*^9}},ExpressionUUID->"06a82f52-c723-44a2-a4ef-\
a5d315570948"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeatTakeupDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"roomsWithTempData", ",", "room"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Dimensions", "[", 
             RowBox[{
              RowBox[{"heatStockDaily", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{"heatStockDaily", "[", 
                  RowBox[{"[", 
                   RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Differences", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{"heatStockDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], 
                RowBox[{"roomHeatTakeupRatios", "[", 
                 RowBox[{"[", "room", "]"}], "]"}]}], "//", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], 
                "&"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
           "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"dayN", ",", "1", ",", 
           RowBox[{"Length", "[", "seasonDays", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "None"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268585288532534`*^9, 3.9268585586010065`*^9}, {
  3.92685883826442*^9, 3.9268588935583982`*^9}, {3.9268591230310936`*^9, 
  3.9268591473195696`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"adf34223-21ca-43d6-8946-7f464ea4e7ad"],

Cell[BoxData["o"], "Input",
 CellChangeTimes->{
  3.9271854568349004`*^9},ExpressionUUID->"15057971-8555-4277-8c0b-\
cdb808a1791c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"gasPricePerCubicMeter", " ", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", "#", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
           "&"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"roomHeatTakeupDaily", "[", 
             RowBox[{"[", "room", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
              RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
         "energyContentInGasPerCubicMeter", " ", "boilerEfficiencyEstimate"}],
          ")"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Purple", "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.03", "]"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "9", "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", 
           RowBox[{"roomNames", "[", 
            RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], "]"}]}], "}"}], 
       "]"}], ",", "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.926868304939475*^9, {3.926868336860354*^9, 3.9268683728112416`*^9}, {
   3.9268686461094637`*^9, 3.92686865260558*^9}, {3.9268709276448464`*^9, 
   3.92687092927661*^9}, {3.926879373987962*^9, 3.92687939197734*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"62fa2369-41fc-48a2-866e-53619acade3a"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEf7JfI5l3S8hBwhAo4rOHcbquYxw7lczh43910
9ZgsI5Qv4MBlI262awoblC/i8LL1U+C1YD4oX8Ihs0yxyMSCE8qXceDzdNh4
7KQglK/g8OvnvzXepiJQvpJDmMvLil8sMP4HewZU4IDK5UDjC6DxRdD4Emh8
GTS+AhpfCY0/eMIHAO70RjA=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.5, 0, 0.5], Thickness[0.03], LineBox[{10, 1}], 
       LineBox[{11, 2}], LineBox[{12, 3}], LineBox[{13, 4}], LineBox[{14, 5}],
        LineBox[{15, 6}], LineBox[{16, 7}], LineBox[{17, 8}], 
       LineBox[{18, 9}]}}, 
     {RGBColor[0.5, 0, 0.5], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6], 
      PointBox[{19, 20, 21, 22, 23, 24, 25, 26, 27}]}}], {{}, {}}},
  AspectRatio->0.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8333333333333337, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{360.6, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.8333333333333337, 9.}, {0, 331090.91894140805`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox[
       RotationBox["\"ovi\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {2, 
      FormBox[
       RotationBox["\"PK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {3, 
      FormBox[
       RotationBox["\"SZGK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {4, 
      FormBox[
       RotationBox[
       "\"G\[OAcute]lyairoda\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {5, 
      FormBox[
       RotationBox["\"M\[EAcute]rce\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {6, 
      FormBox[
       RotationBox[
       "\"vend\[EAcute]gt\[EAcute]r\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {7, 
      FormBox[
       RotationBox["\"kisterem\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {8, 
      FormBox[
       RotationBox["\"Oktopusz\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {9, 
      FormBox[
       RotationBox["\"Lahmacun\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.926868305624221*^9, {3.926868337873387*^9, 3.926868373278723*^9}, 
   3.926870929900652*^9, {3.9268793928260713`*^9, 3.926879396012122*^9}},
 CellLabel->
  "Out[578]=",ExpressionUUID->"c1fac1b4-4875-4eed-8275-cdd49f641ea2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomCoolingVsPriceFit", "=", 
   RowBox[{"Fit", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"roomCoolingCoefficientEstimates", ",", "0.01"}], "]"}], 
         "[", 
         RowBox[{"[", "roomsWithTempData", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"gasPricePerCubicMeter", " ", 
             RowBox[{
              RowBox[{"Map", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Total", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", "#", "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], 
                 "\[IndentingNewLine]", "&"}], ",", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"roomHeatTakeupDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                    RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
               "energyContentInGasPerCubicMeter", " ", 
                "boilerEfficiencyEstimate"}], ")"}]}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], "/", 
         "1000"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Log", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "x"}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926869204348192*^9, 3.926869250058776*^9}, {
   3.9268692994840097`*^9, 3.926869334731818*^9}, {3.9268693723652253`*^9, 
   3.926869409963724*^9}, 3.926869443021703*^9, 3.9268794045630856`*^9},
 CellLabel->
  "In[579]:=",ExpressionUUID->"c9e9b568-d9d8-4658-9cf7-ca7868e992a8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{"roomCoolingCoefficientEstimates", ",", "0.01"}], "]"}], "[", 
        RowBox[{"[", "roomsWithTempData", "]"}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"gasPricePerCubicMeter", " ", 
           RowBox[{
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", "#", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]",
                "&"}], ",", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"roomHeatTakeupDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                  RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{
             "energyContentInGasPerCubicMeter", " ", 
              "boilerEfficiencyEstimate"}], ")"}]}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], "/", 
       "1000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"roomNames", "[", 
       RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "plotData", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<h\[UDoubleAcute]l\[EAcute]si t\[EAcute]nyez\[ODoubleAcute] vs f\
\[UDoubleAcute]t\[EAcute]si k\[ODoubleDot]lts\[EAcute]g\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "->", "0.025"}], ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4.5"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"200", ",", "350"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4.5"}], ",", "200"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"Exp", "[", "#", "]"}], ",", "0.01"}], "]"}]}], "}"}], 
         "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0", ",", "0.5"}], "]"}]}], "]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\< e Ft\>\""}]}], 
          "}"}], "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"200", ",", "350", ",", "50"}], "]"}]}], "]"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "+", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.31", "+", 
              RowBox[{
               RowBox[{"StringLength", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}], "/", "100"}]}], ",", 
             "0"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", "}"}], "&"}], 
      ",", "plotData"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.9268687214355235`*^9, 3.926868765516765*^9}, {
  3.926868827884602*^9, 3.926868983852687*^9}, {3.9268690195488844`*^9, 
  3.9268691212925525`*^9}, {3.9268691686057415`*^9, 3.926869183099547*^9}, {
  3.9268692610208054`*^9, 3.9268692709101315`*^9}, {3.9268694527827854`*^9, 
  3.9268696064687243`*^9}, {3.9268696379645133`*^9, 3.926870100384511*^9}, {
  3.926870198940938*^9, 3.92687019924406*^9}, {3.9268794092199135`*^9, 
  3.9268794490390825`*^9}},
 CellLabel->
  "In[588]:=",ExpressionUUID->"63f12483-9fd5-42dd-aed3-e811813f3f3c"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0, 0, 1], PointSize[0.025], AbsoluteThickness[1.6], 
    PointBox[{{-3.506557897319982, 266.7627054981834}, {-3.506557897319982, 
     191.9401551342731}, {-3.506557897319982, 
     140.21685434506307`}, {-3.506557897319982, 
     184.98327641150385`}, {-3.2188758248682006`, 
     248.44279001335732`}, {-3.912023005428146, 
     206.59855572788723`}, {-3.2188758248682006`, 
     291.4416730967917}, {-1.0216512475319814`, 
     331.09091894140806`}, {-2.659260036932778, 
     327.99861807734277`}}]}, {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.5, 200.},
  DisplayFunction->Identity,
  Epilog->{{
     InsetBox[
      FormBox["\"ovi\"", TraditionalForm], {-3.166557897319982, 
      266.7627054981834}]}, {
     InsetBox[
      FormBox["\"PK\"", TraditionalForm], {-3.1765578973199817`, 
      191.9401551342731}]}, {
     InsetBox[
      FormBox["\"SZGK\"", TraditionalForm], {-3.1565578973199817`, 
      140.21685434506307`}]}, {
     InsetBox[
      FormBox[
      "\"G\[OAcute]lyairoda\"", TraditionalForm], {-3.0965578973199817`, 
      184.98327641150385`}]}, {
     InsetBox[
      FormBox["\"M\[EAcute]rce\"", TraditionalForm], {-2.8588758248682007`, 
      248.44279001335732`}]}, {
     InsetBox[
      FormBox[
      "\"vend\[EAcute]gt\[EAcute]r\"", TraditionalForm], {-3.512023005428146, 
      206.59855572788723`}]}, {
     InsetBox[
      FormBox["\"kisterem\"", TraditionalForm], {-2.8288758248682004`, 
      291.4416730967917}]}, {
     InsetBox[
      FormBox["\"Oktopusz\"", TraditionalForm], {-0.6316512475319814, 
      331.09091894140806`}]}, {
     InsetBox[
      FormBox["\"Lahmacun\"", TraditionalForm], {-2.269260036932778, 
      327.99861807734277`}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"h\[UDoubleAcute]l\[EAcute]si t\[EAcute]nyez\[ODoubleAcute] vs f\
\[UDoubleAcute]t\[EAcute]si k\[ODoubleDot]lts\[EAcute]g\"", TraditionalForm],
  PlotRange->{{-4.5, 0}, {200, 350}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{-4., 
      FormBox["0.02`", TraditionalForm]}, {-3.5, 
      FormBox["0.03`", TraditionalForm]}, {-3., 
      FormBox["0.05`", TraditionalForm]}, {-2.5, 
      FormBox["0.08`", TraditionalForm]}, {-2., 
      FormBox["0.14`", TraditionalForm]}, {-1.5, 
      FormBox["0.22`", TraditionalForm]}, {-1., 
      FormBox["0.37`", TraditionalForm]}, {-0.5, 
      FormBox["0.61`", TraditionalForm]}, {0., 
      FormBox["1.`", TraditionalForm]}}, {{200, 
      FormBox["\"200 e Ft\"", TraditionalForm]}, {250, 
      FormBox["\"250 e Ft\"", TraditionalForm]}, {300, 
      FormBox["\"300 e Ft\"", TraditionalForm]}, {350, 
      FormBox["\"350 e Ft\"", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.9268690905453415`*^9, 3.9268691215531096`*^9}, 
   3.926869183848322*^9, 3.926869271160901*^9, {3.9268694669076953`*^9, 
   3.926869606817373*^9}, {3.926869669503481*^9, 3.9268696751962743`*^9}, 
   3.926869707092298*^9, {3.9268697629461775`*^9, 3.9268700567901087`*^9}, {
   3.9268700975475354`*^9, 3.926870101318819*^9}, 3.926870199638316*^9, 
   3.9268709384113827`*^9, {3.9268794100640917`*^9, 3.926879449483842*^9}},
 CellLabel->
  "Out[589]=",ExpressionUUID->"12f9f690-04f0-470a-8f17-36b385fb6976"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{"roomWarmingCoefficientEstimates", ",", "0.01"}], "]"}], "[", 
        RowBox[{"[", "roomsWithTempData", "]"}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"gasPricePerCubicMeter", " ", 
           RowBox[{
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", "#", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]",
                "&"}], ",", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"roomHeatTakeupDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                  RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{
             "energyContentInGasPerCubicMeter", " ", 
              "boilerEfficiencyEstimate"}], ")"}]}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], "/", 
       "1000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"roomNames", "[", 
       RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "plotData", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<meleged\[EAcute]si t\[EAcute]nyez\[ODoubleAcute] vs \
f\[UDoubleAcute]t\[EAcute]si k\[ODoubleDot]lts\[EAcute]g\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "->", "0.025"}], ",", "Red"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"200", ",", "350"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "200"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"Exp", "[", "#", "]"}], ",", "0.01"}], "]"}]}], "}"}], 
         "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "3.5"}], ",", "0", ",", "0.5"}], "]"}]}], "]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\< e Ft\>\""}]}], 
          "}"}], "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"200", ",", "350", ",", "50"}], "]"}]}], "]"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "+", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0.4", "+", 
              RowBox[{
               RowBox[{"StringLength", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}], "/", "100"}]}], ",", 
             "0"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", "}"}], "&"}], 
      ",", "plotData"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.926870120413103*^9, 3.9268702030693035`*^9}, {
  3.9268794529158945`*^9, 3.9268794600991483`*^9}},
 CellLabel->
  "In[592]:=",ExpressionUUID->"f7bde5ff-899e-4cf8-9c9f-a056a1e9a698"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0, 0], PointSize[0.025], AbsoluteThickness[1.6], 
    PointBox[{{-2.659260036932778, 266.7627054981834}, {-2.3025850929940455`, 
     191.9401551342731}, {-2.3025850929940455`, 
     140.21685434506307`}, {-1.6094379124341003`, 
     184.98327641150385`}, {-2.5257286443082556`, 
     248.44279001335732`}, {-3.2188758248682006`, 
     206.59855572788723`}, {-2.4079456086518722`, 
     291.4416730967917}, {-1.8971199848858813`, 
     331.09091894140806`}, {-0.342490308946776, 
     327.99861807734277`}}]}, {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4., 200.},
  DisplayFunction->Identity,
  Epilog->{{
     InsetBox[
      FormBox["\"ovi\"", TraditionalForm], {-2.2292600369327777`, 
      266.7627054981834}]}, {
     InsetBox[
      FormBox["\"PK\"", TraditionalForm], {-1.8825850929940455`, 
      191.9401551342731}]}, {
     InsetBox[
      FormBox["\"SZGK\"", TraditionalForm], {-1.8625850929940455`, 
      140.21685434506307`}]}, {
     InsetBox[
      FormBox[
      "\"G\[OAcute]lyairoda\"", TraditionalForm], {-1.1094379124341003`, 
      184.98327641150385`}]}, {
     InsetBox[
      FormBox["\"M\[EAcute]rce\"", TraditionalForm], {-2.0757286443082554`, 
      248.44279001335732`}]}, {
     InsetBox[
      FormBox[
      "\"vend\[EAcute]gt\[EAcute]r\"", TraditionalForm], {-2.728875824868201, 
      206.59855572788723`}]}, {
     InsetBox[
      FormBox["\"kisterem\"", TraditionalForm], {-1.9279456086518723`, 
      291.4416730967917}]}, {
     InsetBox[
      FormBox["\"Oktopusz\"", TraditionalForm], {-1.4171199848858813`, 
      331.09091894140806`}]}, {
     InsetBox[
      FormBox["\"Lahmacun\"", TraditionalForm], {0.13750969105322403`, 
      327.99861807734277`}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"meleged\[EAcute]si t\[EAcute]nyez\[ODoubleAcute] vs f\[UDoubleAcute]t\
\[EAcute]si k\[ODoubleDot]lts\[EAcute]g\"", TraditionalForm],
  PlotRange->{{-4, 1}, {200, 350}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{{-3.5, 
      FormBox["0.03`", TraditionalForm]}, {-3., 
      FormBox["0.05`", TraditionalForm]}, {-2.5, 
      FormBox["0.08`", TraditionalForm]}, {-2., 
      FormBox["0.14`", TraditionalForm]}, {-1.5, 
      FormBox["0.22`", TraditionalForm]}, {-1., 
      FormBox["0.37`", TraditionalForm]}, {-0.5, 
      FormBox["0.61`", TraditionalForm]}, {0., 
      FormBox["1.`", TraditionalForm]}}, {{200, 
      FormBox["\"200 e Ft\"", TraditionalForm]}, {250, 
      FormBox["\"250 e Ft\"", TraditionalForm]}, {300, 
      FormBox["\"300 e Ft\"", TraditionalForm]}, {350, 
      FormBox["\"350 e Ft\"", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.926870122079854*^9, {3.9268701569598618`*^9, 3.9268702033358746`*^9}, 
   3.9268709404207735`*^9, {3.9268794537842093`*^9, 3.9268794612454576`*^9}},
 CellLabel->
  "Out[593]=",ExpressionUUID->"4a2404fe-96d7-464d-b76c-e90ad0395f60"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["szob\[AAcute]k c\[EAcute]ltart\[AAcute]sa", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859512566615*^9}, {
   3.926859645892888*^9, 
   3.9268596617172375`*^9}},ExpressionUUID->"2fcc52e7-cef7-4284-b04e-\
df02c2ed254b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomSetTempDiffDaily", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"roomsWithTempData", ",", "room"}], "]"}], ",", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Dimensions", "[", 
              RowBox[{
               RowBox[{"roomsWithTempData", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Select", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", 
                    RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                  "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                "}"}], "\[IndentingNewLine]", "]"}], ",", 
              RowBox[{
               RowBox[{"NumberQ", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"dayN", ",", "1", ",", 
            RowBox[{"Length", "[", "seasonDays", "]"}]}], "}"}]}], "]"}], ",",
         "\[IndentingNewLine]", "None"}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926859824343012*^9, 3.9268598300058565`*^9}, {
   3.9268599201985025`*^9, 3.9268599450145655`*^9}, {3.926859978200989*^9, 
   3.926860176296383*^9}, 3.9268605417532654`*^9, {3.926860647528303*^9, 
   3.926860653130523*^9}, {3.926863731241061*^9, 3.9268637314015856`*^9}, 
   3.926863774874185*^9, {3.926871188205798*^9, 3.9268711979336987`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"f9b2f7b3-3da4-4f8c-ab89-19a203ff53ca"]
}, Closed]],

Cell[CellGroupData[{

Cell["k\[ODoubleDot]lts\[EAcute]g vs komfort", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859512566615*^9}, {
   3.926859645892888*^9, 3.9268596617172375`*^9}, {3.9268602135895863`*^9, 
   3.92686021555757*^9}, {3.9268664679776196`*^9, 3.926866472025009*^9}, {
   3.926867013288995*^9, 
   3.926867013337655*^9}},ExpressionUUID->"db401794-c005-4b95-aa03-\
03289f8cbafe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeatVsTempDiffDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"roomsWithTempData", ",", "room"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Select", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Map", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", "\[IndentingNewLine]", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                   RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"NormalizeDate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gasPricePerCubicMeter", " ", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    "energyContentInGasPerCubicMeter", " ", 
                    "boilerEfficiencyEstimate"}], ")"}]}]}]}], 
                   "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                  "None"}], "\[IndentingNewLine]", "]"}], "&"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"roomHeatTakeupDaily", "[", 
                RowBox[{"[", "room", "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Map", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                    RowBox[{"{", "}"}]}], "&&", 
                   RowBox[{"#", "!=", 
                    RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"NormalizeDate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], "&"}]}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
                   "}"}], ",", "\[IndentingNewLine]", "None"}], 
                 "\[IndentingNewLine]", "]"}], "&"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"roomSetTempDiffDaily", "[", 
                RowBox[{"[", "room", "]"}], "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Dimensions", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{
            RowBox[{"Dimensions", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}]}], "&"}]}], "\[IndentingNewLine]", "]"}], 
       ",", "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926861396350427*^9, 3.926861480135667*^9}, {
  3.9268615250972414`*^9, 3.9268615869362373`*^9}, {3.9268616223911057`*^9, 
  3.926861767897725*^9}, {3.9268638504755774`*^9, 3.926863865593788*^9}, {
  3.926863962794757*^9, 3.92686397600965*^9}, {3.926879478051508*^9, 
  3.9268794802179604`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"35e90747-751a-49fb-b281-5f00244ee560"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"extTBinWidth", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomPerformanceExternalTempBins", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"roomsWithTempData", ",", "room"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "roomPerformaceCharacteristics", ",", "externalTempRange", ",", 
           "binnedData"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomPerformaceCharacteristics", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"Map", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"NormalizeDate", ",", "seasonDays"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                  "}"}], "\[IndentingNewLine]", "&"}], ",", 
                RowBox[{"roomHeatVsTempDiffDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"NumberQ", "[", 
               RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"externalTempRange", "=", 
           RowBox[{"MinMax", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", "roomPerformaceCharacteristics", "]"}],
              "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"binnedData", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"extT", "+", "extTBinWidth"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"roomPerformaceCharacteristics", ",", 
                    RowBox[{
                    RowBox[{"Between", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"extT", ",", 
                    RowBox[{"extT", "+", "extTBinWidth"}]}], "}"}]}], "]"}], 
                    "&"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"extT", ",", 
                  RowBox[{"Floor", "[", 
                   RowBox[{
                    RowBox[{"externalTempRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{
                    RowBox[{"externalTempRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                  "extTBinWidth"}], "}"}]}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"NumberQ", "[", 
               RowBox[{"Total", "[", 
                RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], "&"}]}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.926866165003194*^9, 3.926866213531004*^9}, {
  3.9268662440598807`*^9, 3.926866254139367*^9}, {3.9268663127472725`*^9, 
  3.9268663208754787`*^9}, {3.9268664417547894`*^9, 3.926866449691127*^9}, {
  3.9268673399636374`*^9, 3.9268673400421968`*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"973a9be0-7502-4710-8aea-796f50c49236"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"roomNames", "[", 
          RowBox[{"[", "room", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{"\"\<k\[ODoubleDot]lts\[EAcute]g (Ft)\>\"", ",", 
             RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
           "\"\<elt\[EAcute]r\[EAcute]s (\[Degree]C)\>\""}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\[IndentingNewLine]", 
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"Max", "[", "\[IndentingNewLine]", 
                RowBox[{"Map", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"roomHeatVsTempDiffDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}]}], "]"}], 
                "\[IndentingNewLine]", "]"}], ",", "500"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "6"}], "}"}]}], "\[IndentingNewLine]", 
          "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Prolog", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"RGBColor", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"21", "-", "3"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                 RowBox[{"1", "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}]}], ",", 
                 "\[IndentingNewLine]", "0.25"}], "\[IndentingNewLine]", 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"EdgeForm", "[", "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"Thick", ",", "Dashed", ",", "\[IndentingNewLine]", 
                  RowBox[{"RGBColor", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}], ",", 
                    "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}]}], ",", 
                    "\[IndentingNewLine]", "0.5"}], "\[IndentingNewLine]", 
                   "]"}]}], "\[IndentingNewLine]", "}"}], 
                "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Ellipsoid", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"GetMeanAndSD", "[", 
                   RowBox[{"binData", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"GetMeanAndSD", "[", 
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "0.75"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"binData", ",", 
               RowBox[{"roomPerformanceExternalTempBins", "[", 
                RowBox[{"[", "room", "]"}], "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"RGBColor", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}], ",", 
                  "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                  RowBox[{"1", "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}]}], ",", 
                  "\[IndentingNewLine]", "0.75"}], "\[IndentingNewLine]", 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"PointSize", "->", "0.0125"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Point", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "&"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Quiet", "[", 
                RowBox[{"Map", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"NormalizeDate", ",", "seasonDays"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                    "}"}], "\[IndentingNewLine]", "&"}], ",", 
                  RowBox[{"roomHeatVsTempDiffDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"NumberQ", "[", 
                 RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], "]"}], "//", 
   RowBox[{
    RowBox[{"ArrayReshape", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.9268602238628254`*^9, 3.9268602894491444`*^9}, {
   3.92686035620022*^9, 3.926860369543212*^9}, {3.926860410488594*^9, 
   3.9268604174799986`*^9}, {3.9268604925046234`*^9, 
   3.9268604939600334`*^9}, {3.926860614792075*^9, 3.926860625566827*^9}, {
   3.926860682009413*^9, 3.926860698903221*^9}, {3.9268612918491955`*^9, 
   3.926861377256254*^9}, 3.926861858841404*^9, {3.9268619001220903`*^9, 
   3.9268619305202184`*^9}, {3.9268620033679466`*^9, 
   3.9268620410240583`*^9}, {3.926862193688469*^9, 3.9268622049368153`*^9}, {
   3.926862280841036*^9, 3.9268623077989645`*^9}, {3.9268623532752876`*^9, 
   3.9268623547767763`*^9}, {3.9268628791602755`*^9, 
   3.9268629330827136`*^9}, {3.9268629726662245`*^9, 
   3.9268629774003067`*^9}, {3.926863236729605*^9, 3.9268633089225593`*^9}, {
   3.926865021596321*^9, 3.9268650607456455`*^9}, {3.926865399663617*^9, 
   3.926865410667009*^9}, {3.926865536042287*^9, 3.926865549802149*^9}, {
   3.926865586108992*^9, 3.926865587914632*^9}, {3.926865887788702*^9, 
   3.9268659427950487`*^9}, {3.9268662659807534`*^9, 3.926866267610737*^9}, {
   3.9268668653733997`*^9, 3.926866985292948*^9}, {3.9268671545260143`*^9, 
   3.9268671822354693`*^9}, {3.9268672278691034`*^9, 
   3.9268673083322396`*^9}, {3.926867409501134*^9, 3.9268674593090587`*^9}, {
   3.926870983534437*^9, 3.926871003839658*^9}, {3.9268712152147493`*^9, 
   3.9268712166388884`*^9}, {3.9268718209608088`*^9, 3.926871835311129*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"d7a5d142-145f-4b74-b98c-3cf9fcc2ec03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alma", "=", 
  TagBox[GridBox[{
     {
      GraphicsBox[{},
       AlignmentPoint->Center,
       AspectRatio->1,
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          RotationBox[
          "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm], 
         FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       AxesStyle->{},
       Background->None,
       BaseStyle->{},
       BaselinePosition->Automatic,
       ColorOutput->Automatic,
       ContentSelectable->Automatic,
       CoordinatesToolOptions:>Automatic,
       DisplayFunction->Identity,
       Epilog->{},
       FormatType:>TraditionalForm,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameStyle->{},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       FrameTicksStyle->{},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageMargins->0.,
       ImagePadding->All,
       ImageSize->350,
       ImageSizeRaw->Automatic,
       LabelStyle->{},
       Method->{
        "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
         "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
         "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"ovi\"", TraditionalForm],
       PlotRange->{{0, 6000}, {-5, 6}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       PlotRegion->Automatic,
       PreserveImageOptions->Automatic,
       Prolog->{{{
           RGBColor[
            NCache[
             Rational[1, 6], 0.16666666666666666`], 0, 
            NCache[
             Rational[5, 6], 0.8333333333333334], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 6], 0.16666666666666666`], 0, 
              NCache[
               Rational[5, 6], 0.8333333333333334], 0.5]}], 
           TagBox[
            
            DiskBox[{3229.4027123610185`, 0.30694329368595036`}, {
             794.6294828314072, 1.4609514636270107`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 3], 0.3333333333333333], 0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0.5]}], 
           TagBox[
            
            DiskBox[{3168.3114780351107`, 1.412779177396604}, {
             838.7966842404521, 1.517822001146374}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[1, 2], 0.5], 0, 
            NCache[
             Rational[1, 2], 0.5], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 2], 0.5], 0, 
              NCache[
               Rational[1, 2], 0.5], 0.5]}], 
           TagBox[
            
            DiskBox[{2531.1856419933592`, 1.1496202056132379`}, {
             902.1290292988167, 1.3914619764602143`}], "Ellipsoid"]}}, {{
           RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2188.960666664035, 1.3019999999999998`}]}, {
           RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2519.8500697644117`, 4.063125}]}, {
           RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3079.8167519342815`, 4.537454545454546}]}, {
           RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3537.9713100732656`, 4.4610958904109586`}]}, {
           RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2978.004627903397, 2.8269629629629627`}]}, {
           RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3003.457658911118, -0.36400000000000016`}]}, {
           RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3028.9106899188387`, 2.666363636363636}]}, {
           RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2748.9273488339045`, 3.2640410958904105`}]}, {
           RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3895.2528869125017`, 3.187323943661972}]}, {
           RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5294.230449606038, 1.8571497584541063`}]}, {
           RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4047.031930227692, 1.3854088050314468`}]}, {
           RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3945.219806196807, 0.3167403314917128}]}, {
           RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3945.219806196807, 1.2077241379310346`}]}, {
           RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3798.3346064230664`, 3.2103896103896106`}]}, {
           RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1858.0712635636576`, 1.953333333333334}]}, {
           RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5268.777418598317, 3.22125}]}, {
           RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2036.242480617707, 2.0614507772020727`}]}, {
           RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4836.075891467054, -0.1430827067669172}]}, {
           RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2723.474317826183, -1.0901666666666663`}]}, {
           RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2774.3803798416257`, 0.11086330935251797`}]}, {
           RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3690.6894961195935`, 3.865689655172414}]}, {
           RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2863.465988368627, 3.580214285714286}]}, {
           RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{992.6682093011319, 2.197272727272727}]}, {
           RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3894.3137441813647`, -0.07027027027027027}]}, {
           RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3767.0485891427575`, -0.026308724832214588`}]}, {
           RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4836.075891467054, 0.6507727272727272}]}, {
           RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5001.520593017242, 2.639959677419355}]}, {
           RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3130.7228139497247`, 4.00345238095238}]}, {
           RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{254.5303100772134, 0.36041666666666633`}]}, {
           RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., -2.936551724137931}]}, {
           RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3885.0013134278383`, -0.8381159420289854}]}, {
           RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3716.142527127315, 0.14716216216216227`}]}, {
           RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3207.081906972889, -1.346011904761905}]}, {
           RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3817.954651158201, -1.8333333333333333`}]}, {
           RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3996.1258682122507`, -0.49985294117647056`}]}, {
           RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4021.578899219972, 0.9036979166666669}]}, {
           RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1705.3530775173297`, 2.7759701492537316`}]}, {
           RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3130.7228139497247`, -0.45281249999999984`}]}, {
           RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3487.0652480578233`, -1.4655555555555557`}]}, {
           RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2265.3197596871987`, -0.6457407407407406}]}, {
           RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2723.474317826183, -1.7252475247524752`}]}, {
           RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2468.9440077489694`, -0.2531055900621118}]}, {
           RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2672.5682558107405`, 3.0654687500000004`}]}, {
           RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2244.108900514129, 4.167916666666667}]}, {
           RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1374.4636744169522`, 0.2666666666666665}]}, {
           RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3995.80637409917, -2.5544017094017093`}]}, {
           RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4123.391023250857, -0.230549019607843}]}, {
           RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3410.7061550346593`, -0.6345291479820628}]}, {
           RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3056.1817945699886`, 0.30295238095238086`}]}, {
           RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2901.645534880233, 2.435885416666667}]}, {
           RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
           0.0125, 
           PointBox[{1323.55761240151, 1.0392682926829269`}]}, {
           RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1332.647980618606, 0.012531645569620189`}]}, {
           RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3441.249792243898, -0.3063318777292577}]}, {
           RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2290.7727906949203`, -0.8444642857142858}]}, {
           RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2087.1485426331496`, -0.9810555555555555}]}, {
           RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2659.721109828167, -0.3306547619047619}]}, {
           RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2468.9440077489694`, 1.6014583333333334`}]}, {
           RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1357.245447558815, 0}]}, {
           RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1959.883387594543, -0.9058620689655172}]}, {
           RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2112.601573640871, -0.19916083916083896`}]}, {
           RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2138.0546046485924`, -0.523}]}, {
           RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2087.148542633149, 0.018819444444444403`}]}, {
           RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1323.5576124015095`, 2.5292708333333334`}]}, {
           RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2010.7894496099857`, -0.03634146341463402}]}, {
           RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1425.369736432395, 0.23847457627118646`}]}, {
           RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2290.772790694921, -0.35592592592592637`}]}, {
           RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2112.601573640871, 0.811029411764706}]}, {
           RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1628.9939844941655`, 3.575}]}, {
           RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{610.8727441853122, 1.4229999999999998`}]}, {
           RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2138.0546046485924`, -1.3051639344262294`}]}, {
           RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2774.3803798416257`, -0.8138345864661654}]}, {
           RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1883.5242945713787`, -0.8837499999999999}]}, {
           RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2061.6955116254285`, -0.30983193277310916`}]}, {
           RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2367.1318837180843`, 3.418300653594771}]}, {
           RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1272.651550386067, 0.31862745098039236`}]}, {
           RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2316.2258217026415`, 0.4434482758620687}]}, {
           RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1985.3364186022643`, -0.7549999999999998}]}, {
           RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{610.8727441853122, 1.5700000000000003`}]}, {
           RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1934.4303565868213`, 4.664333333333333}]}, {
           RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1934.4303565868213`, 0.17298387096774204`}]}, {
           RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{992.6682093011322, -0.025526315789473654`}]}, {
           RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2672.5682558107405`, 4.571911764705882}]}, {
           RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1578.0879224787232`, -0.4174418604651165}]}, {
           RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1858.0712635636576`, 1.505068493150685}]}, {
           RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3028.9106899188387`, 1.2876129032258063`}]}, {
           RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1226.836094572187, 2.758867924528302}]}, {
           RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
           PointBox[{1221.7454883706243`, 4.3825}]}, {
           RGBColor[0.7866145833333331, 0, 0.21338541666666688`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2565.099902667064, 4.464625}]}, {
           RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1069.0273023242962`, 1.0719117647058827`}]}, {
           RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{559.9666821698695, 1.716818181818182}]}, {
           RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1959.883387594543, 3.2134883720930234`}]}, {
           RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
           0.0125, 
           PointBox[{1903.523104648861, 3.36}]}, {
           RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{763.5909302316401, 4.750975609756098}]}, {
           RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1858.0712635636578`, 0.16342857142857156`}]}, {
           RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1628.993984494166, 0.3502127659574468}]}, {
           RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1272.6515503860671`, 0.05671232876712305}]}, {
           RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{534.5136511621481, -0.019655172413793727`}]}, {
           RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{865.4030542625255, 4.428571428571429}]}}},
       RotateLabel->True,
       Ticks->{Automatic, Automatic},
       TicksStyle->{}], 
      GraphicsBox[{},
       AlignmentPoint->Center,
       AspectRatio->1,
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          RotationBox[
          "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm], 
         FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       AxesStyle->{},
       Background->None,
       BaseStyle->{},
       BaselinePosition->Automatic,
       ColorOutput->Automatic,
       ContentSelectable->Automatic,
       CoordinatesToolOptions:>Automatic,
       DisplayFunction->Identity,
       Epilog->{},
       FormatType:>TraditionalForm,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameStyle->{},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       FrameTicksStyle->{},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageMargins->0.,
       ImagePadding->All,
       ImageSize->350,
       ImageSizeRaw->Automatic,
       LabelStyle->{},
       Method->{
        "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
         "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
         "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"PK\"", TraditionalForm],
       PlotRange->{{0, 4500}, {-5, 6}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       PlotRegion->Automatic,
       PreserveImageOptions->Automatic,
       Prolog->{{{
           RGBColor[
            NCache[
             Rational[1, 9], 0.1111111111111111], 0, 
            NCache[
             Rational[8, 9], 0.8888888888888888], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 9], 0.1111111111111111], 0, 
              NCache[
               Rational[8, 9], 0.8888888888888888], 0.5]}], 
           TagBox[
            
            DiskBox[{3003.429448192067, -0.03198376045583658}, {
             342.4344305152648, 0.9468590014914985}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[5, 18], 0.2777777777777778], 0, 
            NCache[
             Rational[13, 18], 0.7222222222222222], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[5, 18], 0.2777777777777778], 0, 
              NCache[
               Rational[13, 18], 0.7222222222222222], 0.5]}], 
           TagBox[
            DiskBox[{2279.6822146959166`, 0.6941101180886552}, {
             521.8257932059349, 1.5132980157329985`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[4, 9], 0.4444444444444444], 0, 
            NCache[
             Rational[5, 9], 0.5555555555555556], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[4, 9], 0.4444444444444444], 0, 
              NCache[
               Rational[5, 9], 0.5555555555555556], 0.5]}], 
           TagBox[
            
            DiskBox[{2006.3871707901667`, 1.0748898614137246`}, {
             701.6315980119967, 1.7204145385224217`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[11, 18], 0.6111111111111112], 0, 
            NCache[
             Rational[7, 18], 0.3888888888888889], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[11, 18], 0.6111111111111112], 0, 
              NCache[
               Rational[7, 18], 0.3888888888888889], 0.5]}], 
           TagBox[
            
            DiskBox[{1490.7080780080462`, 0.4698280001877942}, {
             557.7117323200058, 1.0356233333610023`}], "Ellipsoid"]}}, {{
           RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1574.9932103802937`, 0.8575789473684209}]}, {
           RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1813.0735793912688`, 0.8220588235294121}]}, {
           RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2215.978819255995, 4.7185964912280705`}]}, {
           RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2545.6285609634983`, 4.375774647887324}]}, {
           RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2142.723321098772, 1.9991851851851852`}]}, {
           RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2161.037195638078, 2.455964912280702}]}, {
           RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2692.1395572779443`, 1.6381521739130436`}]}, {
           RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2179.3510701773835`, 0.10152000000000015`}]}, {
           RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1977.8984502450203`, 0.29404109589041105`}]}, {
           RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2802.698533158722, 3.9670422535211265`}]}, {
           RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3809.285904175595, 1.5942995169082124`}]}, {
           RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2911.906051749614, 1.8344936708860762`}]}, {
           RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2838.65055359239, 1.544696132596685}]}, {
           RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2838.65055359239, 2.0527083333333334`}]}, {
           RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2732.9642359384693`, 0.01935064935064947}]}, {
           RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1336.912841369319, 2.8459183673469393`}]}, {
           RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3790.9720296362884`, 3.674927536231884}]}, {
           RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1465.1099631444595`, 2.1738860103626942`}]}, {
           RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3479.6361624680917`, 0.26977443609022556`}]}, {
           RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1959.5845757057143`, 0.37025641025641015`}]}, {
           RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1996.2123247843263`, -0.2011510791366907}]}, {
           RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2655.511808199333, 0.04051724137931033}]}, {
           RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2060.3108856718795`, 4.363675213675214}]}, {
           RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{714.241107032924, 2.952272727272728}]}, {
           RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2802.0228045137796`, 0.4500000000000001}]}, {
           RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2710.45343181725, 0.4897315436241609}]}, {
           RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3479.6361624680912`, 1.2327853881278539`}]}, {
           RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3598.676346973579, 2.65719512195122}]}, {
           RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2252.606568334607, -0.7574404761904764}]}, {
           RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{183.13874539305743`, 1.0090476190476192`}]}, {
           RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., -2.3559428571428573`}]}, {
           RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2795.322357387293, 4.741219512195122}]}, {
           RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2671.8979064713385`, -1.8784671532846713`}]}, {
           RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2673.8256827386385`, -1.5849999999999997`}]}, {
           RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2307.5481919525237`, -0.7195833333333331}]}, {
           RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2747.081180895862, -0.4567213114754099}]}, {
           RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2875.2783026710013`, 0.053277777777777875`}]}, {
           RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2893.592177210308, -1.4569270833333334`}]}, {
           RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1227.0295941334848`, 3.0402985074626865`}]}, {
           RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2252.606568334607, 2.2496875000000003`}]}, {
           RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2509.000811884887, -1.8763888888888889`}]}, {
           RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1629.9348339982114`, -2.699439252336449}]}, {
           RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1959.584575705715, -1.6228712871287125`}]}, {
           RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1776.445830312657, -1.0167080745341615`}]}, {
           RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1922.956826627103, -3.014583333333333}]}, {
           RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1614.6732718821452`, 3.912357142857142}]}, {
           RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{988.9492251225103, 0.4400000000000003}]}, {
           RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2875.0484214006246`, -1.8405063291139243`}]}, {
           RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2966.847675367531, 0.1033004926108375}]}, {
           RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2454.0591882669696`, -0.19342105263157905`}]}, {
           RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2198.973078612368, -0.17188888888888879`}]}, {
           RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2087.7816974808547`, -1.2263541666666669`}]}, {
           RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
           0.0125, 
           PointBox[{952.3214760438988, 1.4025}]}, {
           RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{958.8621455222603, 1.8695833333333332`}]}, {
           RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1648.248708537517, -0.17976190476190487`}]}, {
           RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1501.737712223071, -1.3934444444444445`}]}, {
           RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1913.713093743518, -1.4118452380952382`}]}, {
           RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1776.445830312657, -2.3463020833333332`}]}, {
           RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{976.5604276400582, 0}]}, {
           RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1410.1683395265422`, -1.965114942528736}]}, {
           RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1520.0515867623767`, -0.543216783216783}]}, {
           RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1538.3654613016827`, 0.033833333333333035`}]}, {
           RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1501.737712223071, -0.2699305555555557}]}, {
           RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{952.3214760438988, -0.6301652892561981}]}, {
           RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1446.796088605154, -1.667397260273973}]}, {
           RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1025.5769742011216`, -1.0972527472527476`}]}, {
           RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1648.248708537517, 1.2163999999999997`}]}, {
           RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1996.2123247843263`, 0.3545454545454541}]}, {
           RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1355.226715908625, 1.5547826086956524`}]}, {
           RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1483.4238376837654`, -0.10782608695652196`}]}, {
           RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1703.1903321554344`, -0.9508695652173919}]}, {
           RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{915.6937269652872, -2.696129032258065}]}, {
           RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1666.5625830768229`, -1.225428571428571}]}, {
           RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1428.482214065848, 1.5476923076923077`}]}, {
           RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1391.8544649872367`, 0.8116935483870968}]}, {
           RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{714.241107032924, 2.6347368421052635`}]}, {
           RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1922.956826627103, 0.2113235294117652}]}, {
           RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1135.4602214369563`, -0.38732558139534884`}]}, {
           RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1336.9128413693193`, 1.453698630136986}]}, {
           RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2179.3510701773835`, 1.8017054263565893`}]}, {
           RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{882.7287527945502, 3.270754716981132}]}, {
           RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
           PointBox[{879.0659778866756, 2.095079365079365}]}, {
           RGBColor[0.7866145833333331, 0, 0.21338541666666688`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1845.6315785722825`, 4.788461538461539}]}, {
           RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{769.1827306508411, -0.06897058823529434}]}, {
           RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{402.9052398647264, 0.8168181818181818}]}, {
           RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1410.1683395265422`, 3.3920454545454546`}]}, {
           RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
           0.0125, 
           PointBox[{1369.6161887609271`, 4.067222222222222}]}, {
           RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{549.4162361791723, 0.10097560975609748`}]}, {
           RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1336.9128413693193`, -0.15323809523809506`}]}, {
           RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1172.0879705155678`, 1.0559574468085104`}]}, {
           RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{915.6937269652873, 0.6223287671232876}]}, {
           RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{384.59136532542067`, 1.9617241379310342`}]}, {
           RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{622.6717343363953, 0.11214285714285717`}]}}},
       RotateLabel->True,
       Ticks->{Automatic, Automatic},
       TicksStyle->{}], 
      GraphicsBox[{},
       AlignmentPoint->Center,
       AspectRatio->1,
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          RotationBox[
          "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm], 
         FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       AxesStyle->{},
       Background->None,
       BaseStyle->{},
       BaselinePosition->Automatic,
       ColorOutput->Automatic,
       ContentSelectable->Automatic,
       CoordinatesToolOptions:>Automatic,
       DisplayFunction->Identity,
       Epilog->{},
       FormatType:>TraditionalForm,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameStyle->{},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       FrameTicksStyle->{},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageMargins->0.,
       ImagePadding->All,
       ImageSize->350,
       ImageSizeRaw->Automatic,
       LabelStyle->{},
       Method->{
        "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
         "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
         "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"SZGK\"", TraditionalForm],
       PlotRange->{{0, 3000}, {-5, 6}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       PlotRegion->Automatic,
       PreserveImageOptions->Automatic,
       Prolog->{{{
           RGBColor[
            NCache[
             Rational[1, 9], 0.1111111111111111], 0, 
            NCache[
             Rational[8, 9], 0.8888888888888888], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 9], 0.1111111111111111], 0, 
              NCache[
               Rational[8, 9], 0.8888888888888888], 0.5]}], 
           TagBox[
            
            DiskBox[{2214.910666264658, 0.15669953369568448`}, {
             443.7957939702733, 0.255385836626455}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[5, 18], 0.2777777777777778], 0, 
            NCache[
             Rational[13, 18], 0.7222222222222222], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[5, 18], 0.2777777777777778], 0, 
              NCache[
               Rational[13, 18], 0.7222222222222222], 0.5]}], 
           TagBox[
            
            DiskBox[{1681.5351417530298`, 0.6608208870098604}, {
             569.3579982238084, 1.0338506986512077`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[4, 9], 0.4444444444444444], 0, 
            NCache[
             Rational[5, 9], 0.5555555555555556], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[4, 9], 0.4444444444444444], 0, 
              NCache[
               Rational[5, 9], 0.5555555555555556], 0.5]}], 
           TagBox[
            
            DiskBox[{1227.7223525800177`, 1.2975697224085523`}, {
             405.7798779352231, 1.1913685536068372`}], "Ellipsoid"]}}, {{
           RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1136.753093268105, 0.6930985915492957}]}, {
           RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1335.977862191381, 0.7641666666666665}]}, {
           RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{210.9438729775865, 2.553}]}, {
           RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2402.416331133624, 0.1891891891891888}]}, {
           RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1066.4384689422427`, 0.10030303030303053`}]}, {
           RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1511.7644230060366`, 0.7759782608695653}]}, {
           RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1769.5847122008647`, 1.0802247191011238`}]}, {
           RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1593.7981513862092`, 0.5332857142857145}]}, {
           RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{396.925179687761, 3.1033333333333335`}]}, {
           RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2789.146764925866, 0.29979310344827576`}]}, {
           RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1699.2700878750024`, 1.0877419354838709`}]}, {
           RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1828.1802324724165`, 0.9127192982456139}]}, {
           RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1992.2476892327616`, 1.169886363636364}]}, {
           RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1371.135174354312, 0.44833333333333336`}]}, {
           RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{468.7641621724197, 2.750588235294117}]}, {
           RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{468.7641621724144, 2.1683333333333334`}]}, {
           RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2789.146764925866, -0.26246987951807227`}]}, {
           RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1851.6184405810372`, 0.3741129032258066}]}, {
           RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1253.9441338112085`, 1.795254237288136}]}, {
           RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1582.0790473318987`, 1.2490909090909093`}]}, {
           RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1488.2015435776934`, 1.0510000000000002`}]}, {
           RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{656.2698270413803, 3.8867499999999993`}]}, {
           RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1383.440233611351, 3.793265306122449}]}, {
           RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1898.4948567982785`, -0.0193506493506494}]}, {
           RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1382.8542784086226`, 0.35320987654320984`}]}, {
           RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1898.4948567982785`, 0.2526618705035972}]}, {
           RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1514.6941990196142`, 0.41660194174757276`}]}, {
           RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1839.8993365267263`, 0.12338028169014094`}]}, {
           RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{780.803850504587, 3.3070212765957447`}]}, {
           RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{187.50566486896577`, 1.546}]}, {
           RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1359.416070300002, -0.06236000000000013}]}, {
           RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{799.8288517066823, 3.591909090909091}]}, {
           RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1716.3861477438043`, -2.6419736842105266`}]}, {
           RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1793.0229203094855`, -2.0825}]}, {
           RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1664.1127757120712`, -0.640714285714286}]}, {
           RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., -3.6173423423423423`}]}, {
           RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{515.6405783896558, 1.8542857142857145`}]}, {
           RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2683.674828437073, -1.0466321243523315`}]}, {
           RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2296.9443946448305`, 0.23196428571428584`}]}, {
           RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1886.775752743968, 0.392888888888889}]}, {
           RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2285.22529059052, 0.17141975308641982`}]}, {
           RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2203.191562210348, -0.021656050955414115`}]}, {
           RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2730.5512446543144`, -1.5877611940298506`}]}, {
           RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1605.5172554405194`, -1.5121100917431192`}]}, {
           RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1710.9891919293125`, -0.874345238095238}]}, {
           RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1617.2363594948295`, -1.0319047619047619`}]}, {
           RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1875.0566486896578`, -0.29017857142857145`}]}, {
           RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{152.34835270603472`, 3.3854545454545457`}]}, {
           RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{550.797890552587, 2.9846874999999997`}]}, {
           RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2730.5512446543144`, -0.43381395348837215`}]}, {
           RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2425.854539242245, 0.4574603174603173}]}, {
           RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2168.0342500474167`, 0.43329268292682926`}]}, {
           RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1839.8993365267268`, 0.6684337349397591}]}, {
           RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1839.8993365267268`, 0.9490123456790123}]}, {
           RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
           0.0125, 
           PointBox[{108.33357817647173`, 2.06}]}, {
           RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{667.9889310956905, 2.4870588235294115`}]}, {
           RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2250.0679784275894`, -0.5943646408839779}]}, {
           RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1734.4274000379335`, -0.0836075949367088}]}, {
           RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2179.7533541017274`, 0.5069306930693069}]}, {
           RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1919.475833411648, 0.36352941176470593`}]}, {
           RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{363.2922256836212, -0.23412903225806447`}]}, {
           RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., 2.048378378378378}]}, {
           RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1687.5509838206492`, -0.6512834224598931}]}, {
           RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1335.977862191381, 0.8687394957983191}]}, {
           RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1195.3486135396568`, 1.0807638888888889`}]}, {
           RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1324.2587581370708`, 1.233983739837398}]}, {
           RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1101.595781105174, 0.7443809523809524}]}, {
           RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1335.977862191381, -0.17259259259259233`}]}, {
           RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1289.1014459741396`, 0.6414159292035396}]}, {
           RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1312.5396540827605`, 2.1239999999999997`}]}, {
           RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1335.977862191381, 1.9705}]}, {
           RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1007.8429486706909`, 1.5971428571428576`}]}, {
           RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{410.1686419008626, 2.7710204081632646`}]}, {
           RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1406.2924865172436`, -0.2548148148148149}]}, {
           RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1335.977862191381, 1.5950000000000004`}]}, {
           RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1312.5396540827605`, 1.8598734177215195`}]}, {
           RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1277.3823419198293`, 0.007460317460317217}]}, {
           RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1171.9104054310362`, -0.5726562500000001}]}, {
           RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{843.7754919103461, -2.3619354838709676`}]}, {
           RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1488.3262148974156`, -0.6027272727272728}]}, {
           RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1007.8429486706909`, 1.0974999999999993`}]}, {
           RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{984.4047405620704, 1.1995698924731184`}]}, {
           RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1089.8766770508637`, 0.5382716049382715}]}, {
           RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1136.7530932681052`, 1.0464285714285715`}]}, {
           RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1148.4721973224155`, -0.32106382978723413`}]}, {
           RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{785.1799716387942, 0.1466666666666665}]}, {
           RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{914.0901162362082, 0.5370129870129869}]}, {
           RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{920.4763695691563, 0.9898611111111114}]}, {
           RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
           PointBox[{761.7417635301734, 1.8900000000000001`}]}, {
           RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1558.6408392232777`, -0.04731481481481494}]}, {
           RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{515.6405783896558, 0.9035135135135133}]}, {
           RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{867.2137000189666, 1.4246153846153846`}]}, {
           RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
           0.0125, 
           PointBox[{949.2474283991393, 1.2665060240963857`}]}, {
           RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{574.2360986612076, 1.2260465116279076`}]}, {
           RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1406.2924865172436`, 0.5766055045871561}]}, {
           RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{843.775491910346, 0.3250704225352113}]}, {
           RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1136.7530932681052`, 0.9908653846153845}]}, {
           RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{339.8540175750005, 0.6357142857142858}]}, {
           RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1230.5059257025878`, 1.3535652173913046`}]}}},
       RotateLabel->True,
       Ticks->{Automatic, Automatic},
       TicksStyle->{}]},
     {
      GraphicsBox[{},
       AlignmentPoint->Center,
       AspectRatio->1,
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          RotationBox[
          "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm], 
         FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       AxesStyle->{},
       Background->None,
       BaseStyle->{},
       BaselinePosition->Automatic,
       ColorOutput->Automatic,
       ContentSelectable->Automatic,
       CoordinatesToolOptions:>Automatic,
       DisplayFunction->Identity,
       Epilog->{},
       FormatType:>TraditionalForm,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameStyle->{},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       FrameTicksStyle->{},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageMargins->0.,
       ImagePadding->All,
       ImageSize->350,
       ImageSizeRaw->Automatic,
       LabelStyle->{},
       Method->{
        "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
         "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
         "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"G\[OAcute]lyairoda\"", TraditionalForm],
       PlotRange->{{0, 4000}, {-5, 6}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       PlotRegion->Automatic,
       PreserveImageOptions->Automatic,
       Prolog->{{{
           RGBColor[
            NCache[
             Rational[2, 9], 0.2222222222222222], 0, 
            NCache[
             Rational[7, 9], 0.7777777777777778], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[2, 9], 0.2222222222222222], 0, 
              NCache[
               Rational[7, 9], 0.7777777777777778], 0.5]}], 
           TagBox[
            
            DiskBox[{2095.5570057290693`, 0.10157936291881108`}, {
             819.1950177173541, 0.4409886674623318}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[7, 18], 0.3888888888888889], 0, 
            NCache[
             Rational[11, 18], 0.6111111111111112], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[7, 18], 0.3888888888888889], 0, 
              NCache[
               Rational[11, 18], 0.6111111111111112], 0.5]}], 
           TagBox[
            
            DiskBox[{2071.1431476968055`, 0.7010510055251996}, {
             588.3460953423764, 1.3587629295841963`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[5, 9], 0.5555555555555556], 0, 
            NCache[
             Rational[4, 9], 0.4444444444444444], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[5, 9], 0.5555555555555556], 0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0.5]}], 
           TagBox[
            
            DiskBox[{1358.1367890203278`, 0.8297168649472598}, {
             576.2231087155528, 1.1198172388173089`}], "Ellipsoid"]}}, {{
           RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1499.6792835343597`, 0.29984848484848475`}]}, {
           RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1762.5096734321342`, 0.6842307692307692}]}, {
           RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{278.2910010682317, -0.41899999999999976`}]}, {
           RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3169.42528994375, 1.4174285714285713`}]}, {
           RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1406.915616511616, -0.13096774193548394`}]}, {
           RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1994.4188409889937`, 0.7130434782608697}]}, {
           RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2334.552286739055, -0.07460674157303368}]}, {
           RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2102.6431191821953`, 0.07652173913043464}]}, {
           RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{523.6497464718095, 0.11666666666666667`}]}, {
           RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{989.4791149092682, 0.06060606060606066}]}, {
           RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3679.6254585688416`, -0.003931034482758611}]}, {
           RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2241.788619716311, 0.1725806451612903}]}, {
           RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2411.8553425913415`, 0.12315789473684194`}]}, {
           RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2628.3038989777438`, -0.09793103448275876}]}, {
           RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1808.8915069435063`, -0.08642857142857154}]}, {
           RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{618.4244468182998, 0.31588235294117645`}]}, {
           RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{618.4244468182927, -0.1610526315789473}]}, {
           RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3679.6254585688416`, 1.0632530120481927`}]}, {
           RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2442.776564932256, -0.024032258064516074`}]}, {
           RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1654.285395238933, 0.007288135593220183}]}, {
           RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2087.182508011738, 0.04170454545454543}]}, {
           RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1963.333144061165, 0.03169999999999998}]}, {
           RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{865.7942255456097, 4.8325000000000005`}]}, {
           RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1825.1251486725032`, 3.0017346938775518`}]}, {
           RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2504.619009614085, 0.19214285714285703`}]}, {
           RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1824.3521181139633`, 0.30049382716049405`}]}, {
           RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2504.619009614085, 0.4370503597122302}]}, {
           RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1998.2839937816082`, 0.13087378640776687`}]}, {
           RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2427.3159537617985`, 0.41669014084507056`}]}, {
           RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1030.0876822240734`, 5.3329787234042545`}]}, {
           RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{247.36977872731705`, 0.515}]}, {
           RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1793.4308957730489`, 0.1711200000000002}]}, {
           RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1055.1867123837117`, 2.0409999999999995`}]}, {
           RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2264.3692491889615`, 5.731381578947369}]}, {
           RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2195.406786204939, 5.292105263157896}]}, {
           RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., 4.478565022421524}]}, {
           RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{680.2668915001219, -0.11028571428571426`}]}, {
           RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3540.4799580347258`, -0.9231606217616578}]}, {
           RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3030.2797894096343`, -0.21714285714285708`}]}, {
           RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2489.1583984436274`, -0.8468888888888889}]}, {
           RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3014.819178239177, -0.2799999999999999}]}, {
           RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2906.5949000459764`, -0.6857324840764331}]}, {
           RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1252.309504807043, 1.5514545454545452`}]}, {
           RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3602.322402716555, -0.7762686567164178}]}, {
           RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2118.1037303526523`, -0.4850467289719626}]}, {
           RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2257.2492308867686`, 0.14517857142857143`}]}, {
           RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2133.56434152311, -0.7282738095238095}]}, {
           RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2473.697787273171, -0.4963690476190479}]}, {
           RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{200.98794521594513`, 0.7}]}, {
           RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{726.6487250114939, 0.498125}]}, {
           RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3602.322402716555, -1.3652558139534885`}]}, {
           RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3200.3465122846646`, -0.8311640211640213}]}, {
           RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2860.213066534603, -0.4064634146341464}]}, {
           RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2427.315953761799, -0.9638554216867469}]}, {
           RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2427.3159537617985`, 0.21006172839506165`}]}, {
           RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
           0.0125, 
           PointBox[{142.92076605248073`, 0.5474999999999999}]}, {
           RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{881.2548367160671, 0.7792156862745099}]}, {
           RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2968.437344727805, -0.5428176795580111}]}, {
           RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2288.170453227683, -0.7106329113924049}]}, {
           RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2875.6736777050614`, 0.5129665071770336}]}, {
           RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2532.2984909031397`, 0.06313725490196086}]}, {
           RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{479.2789462841768, -0.9423870967741935}]}, {
           RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., 1.077027027027027}]}, {
           RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., 0.7367647058823529}]}, {
           RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2226.3280085457973`, -0.44053475935828884`}]}, {
           RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1762.5096734321342`, -0.1231092436974787}]}, {
           RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1576.9823393866466`, -0.24513888888888896`}]}, {
           RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1747.049062261677, 0.34975609756097564`}]}, {
           RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1453.2974500229882`, 0.3477443609022558}]}, {
           RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1762.5096734321342`, 0.12407407407407399`}]}, {
           RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1700.6672287503052`, -0.10106060606060625`}]}, {
           RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1731.5884510912194`, 1.0070967741935481`}]}, {
           RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1762.5096734321342`, 0.9088461538461541}]}, {
           RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{541.1213909660061, 2.746909090909092}]}, {
           RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1855.2733404548783`, 0.8823571428571428}]}, {
           RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1762.5096734321342`, 0.5896694214876033}]}, {
           RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1731.5884510912194`, 0.48847222222222203`}]}, {
           RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1685.2066175798475`, 0.8059999999999999}]}, {
           RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1546.0611170457316`, 1.070909090909091}]}, {
           RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1113.1640042729268`, -0.7430303030303029}]}, {
           RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1963.4976186480794`, 1.0025742574257426`}]}, {
           RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1592.4429505571036`, 0.17999999999999972`}]}, {
           RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1329.6125606593293`, 2.9299999999999997`}]}, {
           RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1298.6913383184146`, 0.8986021505376344}]}, {
           RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1437.8368388525307`, 0.8709876543209875}]}, {
           RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1499.67928353436, 0.48136363636363666`}]}, {
           RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1515.1398947048172`, 0.8274468085106381}]}, {
           RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1035.8609484206402`, 1.7230952380952382`}]}, {
           RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1205.9276712956707`, 0.7444155844155845}]}, {
           RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1214.352835809884, 0.559027777777778}]}, {
           RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
           PointBox[{1004.9397260797256`, 1.5094999999999998`}]}, {
           RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2056.261285670823, 1.251320754716981}]}, {
           RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{680.2668915001219, 0.8497297297297295}]}, {
           RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1144.0852266138415`, -0.03076923076923066}]}, {
           RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
           0.0125, 
           PointBox[{1252.3095048070425`, 0.123132530120482}]}, {
           RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{757.5699473524086, 0.10302325581395357`}]}, {
           RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1855.2733404548783`, 1.9958715596330276`}]}, {
           RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1113.164004272927, 1.2925352112676058`}]}, {
           RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1499.67928353436, 2.124615384615385}]}, {
           RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{448.3577239432622, 0.26928571428571463`}]}, {
           RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1623.3641728980185`, 2.121739130434783}]}}},
       RotateLabel->True,
       Ticks->{Automatic, Automatic},
       TicksStyle->{}], 
      GraphicsBox[{},
       AlignmentPoint->Center,
       AspectRatio->1,
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          RotationBox[
          "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm], 
         FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       AxesStyle->{},
       Background->None,
       BaseStyle->{},
       BaselinePosition->Automatic,
       ColorOutput->Automatic,
       ContentSelectable->Automatic,
       CoordinatesToolOptions:>Automatic,
       DisplayFunction->Identity,
       Epilog->{},
       FormatType:>TraditionalForm,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameStyle->{},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       FrameTicksStyle->{},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageMargins->0.,
       ImagePadding->All,
       ImageSize->350,
       ImageSizeRaw->Automatic,
       LabelStyle->{},
       Method->{
        "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
         "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
         "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"M\[EAcute]rce\"", TraditionalForm],
       PlotRange->{{0, 5000}, {-5, 6}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       PlotRegion->Automatic,
       PreserveImageOptions->Automatic,
       Prolog->{{{
           RGBColor[
            NCache[
             Rational[1, 9], 0.1111111111111111], 0, 
            NCache[
             Rational[8, 9], 0.8888888888888888], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 9], 0.1111111111111111], 0, 
              NCache[
               Rational[8, 9], 0.8888888888888888], 0.5]}], 
           TagBox[
            
            DiskBox[{3491.8895967736375`, 0.6286116471768928}, {
             1061.2483953584274`, 0.6898331274087786}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[5, 18], 0.2777777777777778], 0, 
            NCache[
             Rational[13, 18], 0.7222222222222222], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[5, 18], 0.2777777777777778], 0, 
              NCache[
               Rational[13, 18], 0.7222222222222222], 0.5]}], 
           TagBox[
            
            DiskBox[{3255.556777616404, 1.0090155754435555`}, {
             851.2746971747843, 1.1116135415361141`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[4, 9], 0.4444444444444444], 0, 
            NCache[
             Rational[5, 9], 0.5555555555555556], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[4, 9], 0.4444444444444444], 0, 
              NCache[
               Rational[5, 9], 0.5555555555555556], 0.5]}], 
           TagBox[
            
            DiskBox[{2175.33596842869, 1.362147737021093}, {718.9797936659812,
              1.228475742454143}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[11, 18], 0.6111111111111112], 0, 
            NCache[
             Rational[7, 18], 0.3888888888888889], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[11, 18], 0.6111111111111112], 0, 
              NCache[
               Rational[7, 18], 0.3888888888888889], 0.5]}], 
           TagBox[
            
            DiskBox[{1997.7943275246685`, 0.03569432062357433}, {
             777.5899688474374, 0.9270573705405037}], "Ellipsoid"]}}, {{
           RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2014.1523739566474`, 1.4917647058823535`}]}, {
           RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2367.148150835647, -0.16611111111111138`}]}, {
           RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4256.713780011471, 0.4864285714285725}]}, {
           RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1889.5656291758237`, -0.20071428571428548`}]}, {
           RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2678.6150127877063`, 0.8344736842105267}]}, {
           RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3135.433076984059, 1.3278378378378382`}]}, {
           RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2823.966215032, 0.9891836734693878}]}, {
           RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{703.2906245742819, 2.7633333333333336`}]}, {
           RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1328.9252776621177`, 0}]}, {
           RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4941.940876306001, 0.624166666666667}]}, {
           RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3010.8463322032358`, 2.62804347826087}]}, {
           RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3239.255364301412, 2.099464285714286}]}, {
           RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3529.9577687899996`, 1.5500000000000007`}]}, {
           RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2429.441523226059, 0.6515151515151519}]}, {
           RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4941.940876306001, 0.038461538461539005`}]}, {
           RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3280.7842792283527`, 0.5791999999999998}]}, {
           RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2221.796948591353, 1.4960000000000002`}]}, {
           RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2803.2017575685295`, 0.9308928571428572}]}, {
           RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2636.865199377118, 1.089}]}, {
           RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1162.8096179543527`, 4.071052631578947}]}, {
           RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2451.2442035627255`, 3.9348979591836737`}]}, {
           RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3363.8421090822353`, 0.7988961038961039}]}, {
           RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2450.20598068953, 0.8909876543209878}]}, {
           RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3363.8421090822358`, 1.3366187050359712`}]}, {
           RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2683.8061271535735`, 0.8351456310679612}]}, {
           RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3260.019821764882, 0.9317605633802817}]}, {
           RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1383.4648336579376`, 4.255957446808511}]}, {
           RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{332.2313194155294, 1.9220000000000002`}]}, {
           RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2408.6770657625884`, 0.12191235059760966`}]}, {
           RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1417.1742218818677`, 4.340727272727273}]}, {
           RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3041.173368761737, -1.0367763157894736`}]}, {
           RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3176.9619919110005`, -0.4230555555555556}]}, {
           RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2948.5529598128237`, -0.11487394957983206`}]}, {
           RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., -3.1522869955156954`}]}, {
           RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{913.6361283927059, 2.2234285714285718`}]}, {
           RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4755.060759134765, 0.16471502590673576`}]}, {
           RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4069.8336628402353`, 1.9052380952380952`}]}, {
           RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3343.077651618765, 1.6483703703703705`}]}, {
           RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4049.0692053767643`, 1.4255405405405408`}]}, {
           RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3903.7180031324706`, 1.1912738853503186`}]}, {
           RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4838.118588988647, -0.2320398009950249}]}, {
           RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2844.730672495471, -0.9621100917431191}]}, {
           RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3031.6107896667054`, -0.4298214285714285}]}, {
           RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2865.4951299589407`, -0.800654761904762}]}, {
           RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3322.313194155294, -0.3195833333333334}]}, {
           RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{269.9379470251176, 5.113636363636363}]}, {
           RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{975.9295007831176, 2.4903125}]}, {
           RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4838.118588988647, -0.8173953488372093}]}, {
           RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4298.242694938412, 0.21396825396825395`}]}, {
           RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3841.4246307420585`, 0.30621951219512195`}]}, {
           RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3260.019821764883, -0.10837349397590358`}]}, {
           RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3260.019821764882, 0.22265432098765434`}]}, {
           RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
           0.0125, 
           PointBox[{191.95050794719552`, 1.4412499999999997`}]}, {
           RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1183.5740754178235`, 1.862156862745098}]}, {
           RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3986.775832986353, -0.9231491712707183}]}, {
           RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3073.139704593648, -0.3298734177215193}]}, {
           RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3862.1890882055295`, 0.34594202898550747`}]}, {
           RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3401.0171861539457`, 0.42754838709677406`}]}, {
           RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{643.6981813675884, -0.5232258064516128}]}, {
           RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., 1.7216216216216218`}]}, {
           RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2990.081874739689, -1.2953475935828875`}]}, {
           RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2367.148150835647, -0.3884033613445379}]}, {
           RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2117.974661274, -0.36236111111111113`}]}, {
           RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2346.383693372177, 0.29081300813008126`}]}, {
           RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1951.8590015662353`, -0.6224812030075189}]}, {
           RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2367.1481508356474`, -1.3033333333333335`}]}, {
           RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2284.0903209817648`, -0.233787878787879}]}, {
           RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2325.619235908706, -0.15666666666666682`}]}, {
           RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2367.1481508356474`, -0.6454166666666664}]}, {
           RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1785.7433418584708`, -0.9320454545454544}]}, {
           RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{726.7560112214708, 1.5076106194690262`}]}, {
           RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2491.7348956164706`, -1.9849404761904763`}]}, {
           RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2367.148150835647, -0.6247933884297522}]}, {
           RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2325.619235908706, -0.23000000000000012`}]}, {
           RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2263.325863518294, -0.17893939393939395`}]}, {
           RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2076.445746347059, -0.36174242424242425`}]}, {
           RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1495.0409373698826`, -2.1946}]}, {
           RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2637.0860978607643`, -0.19641509433962262`}]}, {
           RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2138.739118737471, 0.5496875}]}, {
           RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1785.7433418584706`, 0.3070312499999999}]}, {
           RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1848.0367142488824`, -0.6189}]}, {
           RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1744.2144269315293`, 0.21794871794871767`}]}, {
           RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1931.0945441027648`, -0.046338028169014174`}]}, {
           RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2014.1523739566474`, 0.5949999999999999}]}, {
           RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2034.9168314201177`, -1.0353191489361702`}]}, {
           RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1391.2186500525295`, 0.050952380952380964`}]}, {
           RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1619.627682150706, 0.3102597402597403}]}, {
           RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1630.9431449257102`, 0.1459722222222222}]}, {
           RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
           PointBox[{1349.6897351255882`, 0.2573333333333331}]}, {
           RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2761.672842641588, -0.4567521367521367}]}, {
           RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{913.6361283927058, 0.3518918918918919}]}, {
           RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1536.569852296824, 0.4853846153846156}]}, {
           RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
           0.0125, 
           PointBox[{1681.9210545411177`, 0.3228915662650603}]}, {
           RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1017.4584157100588`, 0.3546511627906974}]}, {
           RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2491.7348956164706`, -0.6265714285714287}]}}},
       RotateLabel->True,
       Ticks->{Automatic, Automatic},
       TicksStyle->{}], 
      GraphicsBox[{},
       AlignmentPoint->Center,
       AspectRatio->1,
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          RotationBox[
          "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm], 
         FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       AxesStyle->{},
       Background->None,
       BaseStyle->{},
       BaselinePosition->Automatic,
       ColorOutput->Automatic,
       ContentSelectable->Automatic,
       CoordinatesToolOptions:>Automatic,
       DisplayFunction->Identity,
       Epilog->{},
       FormatType:>TraditionalForm,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameStyle->{},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       FrameTicksStyle->{},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageMargins->0.,
       ImagePadding->All,
       ImageSize->350,
       ImageSizeRaw->Automatic,
       LabelStyle->{},
       Method->{
        "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
         "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
         "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"vend\[EAcute]gt\[EAcute]r\"", TraditionalForm],
       PlotRange->{{0, 5000}, {-5, 6}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       PlotRegion->Automatic,
       PreserveImageOptions->Automatic,
       Prolog->{{{
           RGBColor[
            NCache[
             Rational[1, 9], 0.1111111111111111], 0, 
            NCache[
             Rational[8, 9], 0.8888888888888888], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 9], 0.1111111111111111], 0, 
              NCache[
               Rational[8, 9], 0.8888888888888888], 0.5]}], 
           TagBox[
            
            DiskBox[{2935.84842275576, 1.2404437356919318`}, {
             580.398612017211, 0.7227075197021824}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[5, 18], 0.2777777777777778], 0, 
            NCache[
             Rational[13, 18], 0.7222222222222222], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[5, 18], 0.2777777777777778], 0, 
              NCache[
               Rational[13, 18], 0.7222222222222222], 0.5]}], 
           TagBox[
            
            DiskBox[{2909.920841285953, 1.4340435691176026`}, {
             850.0784120791567, 0.9455312943066825}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[4, 9], 0.4444444444444444], 0, 
            NCache[
             Rational[5, 9], 0.5555555555555556], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[4, 9], 0.4444444444444444], 0, 
              NCache[
               Rational[5, 9], 0.5555555555555556], 0.5]}], 
           TagBox[
            
            DiskBox[{2109.8093617754766`, 2.037760760567664}, {
             861.1624282683197, 1.1581093381057332`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[11, 18], 0.6111111111111112], 0, 
            NCache[
             Rational[7, 18], 0.3888888888888889], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[11, 18], 0.6111111111111112], 0, 
              NCache[
               Rational[7, 18], 0.3888888888888889], 0.5]}], 
           TagBox[
            
            DiskBox[{1423.555285361652, 2.507197030037102}, {639.303664114135,
              1.0581480564155648`}], "Ellipsoid"]}}, {{
           RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1344.1861456450529`, 5.061320754716981}]}, {
           RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1625.527431942855, 4.804625}]}, {
           RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{218.8210004538458, 4.1979999999999995`}]}, {
           RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1750.5680036307665`, 1.9376562499999999`}]}, {
           RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1906.8687182406566`, 4.254117647058823}]}, {
           RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2219.4701474604362`, 4.3301612903225815`}]}, {
           RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1437.966574410987, 3.0578205128205127`}]}, {
           RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2313.2505762263704`, 2.8174285714285716`}]}, {
           RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1969.389004084613, 2.4660759493670885`}]}, {
           RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1375.446288567031, 1.693947368421053}]}, {
           RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2063.169432850547, 1.1271153846153845`}]}, {
           RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2938.4534346659298`, 2.3204210526315787`}]}, {
           RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4751.541724140653, 2.1453535353535353`}]}, {
           RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2469.5512908362603`, 2.458265306122449}]}, {
           RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3407.3555784955993`, 1.8848275862068964`}]}, {
           RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2031.9092899285683`, 2.4515999999999996`}]}, {
           RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{906.5441447373612, 2.2022222222222223`}]}, {
           RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1406.7064314890088`, 2.4166037735849053`}]}, {
           RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2375.7708620703265`, 3.7166666666666672`}]}, {
           RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1723.6495472257238`, 3.291052631578948}]}, {
           RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1219.1455739571413`, 2.9126315789473685`}]}, {
           RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{832.3013052976637, 0.875263157894737}]}, {
           RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1312.9260027230748`, 3.588571428571429}]}, {
           RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2094.429575772524, 2.3835483870967744`}]}, {
           RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2344.510719148348, 2.5083495145631067`}]}, {
           RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2219.4701474604362`, 2.1693939393939394`}]}, {
           RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1437.9665744109873`, 2.2952222222222227`}]}, {
           RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2281.990433304392, 1.1768627450980391`}]}, {
           RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{242.43599972643563`, 0.33909090909090944`}]}, {
           RGBColor[0.7260841049382717, 0, 0.2739158950617283, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1094.105002269229, -3.1652499999999995`}]}, {
           RGBColor[0.6275115740740741, 0, 0.3724884259259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1516.116931715932, 2.2620754716981133`}]}, {
           RGBColor[0.5575925925925925, 0, 0.44240740740740747`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3469.8758643395563`, -0.3353475935828877}]}, {
           RGBColor[0.39545524691358025`, 0, 0.6045447530864198, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3126.0142921977977`, 0.8629813664596271}]}, {
           RGBColor[0.2805111882716049, 0, 0.7194888117283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3438.6157214175773`, 0.8084076433121019}]}, {
           RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{750.2434301274715, 1.2022580645161285`}]}, {
           RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{562.6825725956037, 2.707}]}, {
           RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2500.811433758238, -0.7321348314606743}]}, {
           RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2340.2124494965674`, -1.1867878787878785`}]}, {
           RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1384.8243314436158`, 2.3056338028169012`}]}, {
           RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1211.3305382266467`, 2.686458333333334}]}, {
           RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1874.5181052167313`, 2.6065217391304345`}]}, {
           RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4993.377287246578, -0.054457831325301284`}]}, {
           RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3719.9570077153794`, 0.15161073825503354`}]}, {
           RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3970.038151091204, 1.0299248120300752`}]}, {
           RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2938.4534346659298`, 0.6838749999999998}]}, {
           RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4751.541724140652, 0.5262424242424243}]}, {
           RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3157.2744351197753`, 0.7473118279569894}]}, {
           RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3032.2338634318635`, 0.26685950413223136`}]}, {
           RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4095.0787227791147`, 1.2871666666666666`}]}, {
           RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3548.026221644515, 0.5047435897435896}]}, {
           RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3063.4940063538415`, 0.04377777777777751}]}, {
           RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3613.6725217806365`, 0.585185185185185}]}, {
           RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2750.892577134062, 0.36783333333333346`}]}, {
           RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4917.0365984334985`, -0.5911299435028249}]}, {
           RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3313.575149729666, -0.18596491228070178`}]}, {
           RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3610.5465074884282`, -0.10222222222222209`}]}, {
           RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4063.8185798571367`, -0.20202247191011272`}]}, {
           RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4095.0787227791147`, 0.11886363636363638`}]}, {
           RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2844.673005899996, 0.752887323943662}]}, {
           RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1938.1288611626344`, 1.323981481481481}]}, {
           RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
           0.0125, 
           PointBox[{2219.4701474604367`, 0.3846250000000002}]}, {
           RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2156.94986161648, 0.9865753424657532}]}, {
           RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3188.5345780417533`, 1.5239285714285717`}]}, {
           RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2532.0715766802164`, 1.0802721088435376`}]}, {
           RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2969.7135775879083`, 0.7553370786516855}]}, {
           RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2907.1932917439517`, 0.7063999999999999}]}, {
           RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2907.1932917439517`, 1.3284558823529413`}]}, {
           RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1156.625288113185, 1.082741935483871}]}, {
           RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{875.2840018153832, 0.9670370370370373}]}, {
           RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1344.1861456450529`, 2.4469523809523803`}]}, {
           RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1625.527431942855, 2.2424}]}, {
           RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1094.1050022692293`, 3.2745238095238087`}]}, {
           RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{969.0644305813172, 2.846268656716418}]}, {
           RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{820.474551225494, 2.950114942528736}]}, {
           RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{781.5035730494494, 3.694788732394365}]}, {
           RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1375.446288567031, 3.795357142857143}]}, {
           RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1062.8448593472513`, 2.8684466019417476`}]}, {
           RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1406.7064314890092`, 2.830380952380952}]}, {
           RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{750.2434301274715, 3.1879661016949155`}]}, {
           RGBColor[0.5463175154320987, 0, 0.4536824845679013, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{690.244123551429, 2.393617021276596}]}, {
           RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{781.5035730494494, 1.9849019607843135`}]}, {
           RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1219.1455739571409`, 3.5661194029850747`}]}, {
           RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1062.844859347251, 3.4954022988505744`}]}, {
           RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1156.6252881131852`, 3.210140845070423}]}, {
           RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{844.0238588934054, 3.0874358974358973`}]}, {
           RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{312.6014292197798, 4.324761904761904}]}, {
           RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{593.9427155175815, 4.71625}]}, {
           RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1031.5847164252734`, 4.601190476190476}]}, {
           RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{281.3412862978018, 4.8705}]}, {
           RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{593.9427155175816, 4.758}]}, {
           RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{312.6014292197798, 5.421000000000001}]}, {
           RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{656.4630013615374, 5.8293103448275865`}]}, {
           RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1875.6085753186785`, 3.2697777777777777`}]}, {
           RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1779.595279201179, 4.586129032258065}]}, {
           RGBColor[0.5811651234567902, 0, 0.41883487654320983`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{218.8210004538458, 2.98}]}, {
           RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{468.9021438296696, 5.109411764705882}]}, {
           RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{750.2434301274715, 4.565714285714286}]}, {
           RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., 4.385173913043479}]}, {
           RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{562.6825725956037, 4.598214285714286}]}}},
       RotateLabel->True,
       Ticks->{Automatic, Automatic},
       TicksStyle->{}]},
     {
      GraphicsBox[{},
       AlignmentPoint->Center,
       AspectRatio->1,
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          RotationBox[
          "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm], 
         FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       AxesStyle->{},
       Background->None,
       BaseStyle->{},
       BaselinePosition->Automatic,
       ColorOutput->Automatic,
       ContentSelectable->Automatic,
       CoordinatesToolOptions:>Automatic,
       DisplayFunction->Identity,
       Epilog->{},
       FormatType:>TraditionalForm,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameStyle->{},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       FrameTicksStyle->{},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageMargins->0.,
       ImagePadding->All,
       ImageSize->350,
       ImageSizeRaw->Automatic,
       LabelStyle->{},
       Method->{
        "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
         "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
         "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"kisterem\"", TraditionalForm],
       PlotRange->{{0, 7500}, {-5, 6}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       PlotRegion->Automatic,
       PreserveImageOptions->Automatic,
       Prolog->{{{
           RGBColor[
            NCache[
             Rational[1, 6], 0.16666666666666666`], 0, 
            NCache[
             Rational[5, 6], 0.8333333333333334], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 6], 0.16666666666666666`], 0, 
              NCache[
               Rational[5, 6], 0.8333333333333334], 0.5]}], 
           TagBox[
            
            DiskBox[{4726.148157202322, -0.9756364673295677}, {
             945.7347535018135, 0.3707530679370617}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[1, 3], 0.3333333333333333], 0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 3], 0.3333333333333333], 0, 
              NCache[
               Rational[2, 3], 0.6666666666666666], 0.5]}], 
           TagBox[
            
            DiskBox[{3315.551125646764, -0.8637013867884863}, {
             1243.416892470389, 0.6469059554245943}], "Ellipsoid"]}}, {{
           RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1896.1984407882399`, -0.45094339622641516`}]}, {
           RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2293.0771842090335`, -0.6003750000000002}]}, {
           RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{308.6834671050623, -0.4439999999999998}]}, {
           RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2469.467736840498, -1.15578125}]}, {
           RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2689.9559276298282`, -0.5999999999999998}]}, {
           RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3130.932309208489, -0.8388709677419356}]}, {
           RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2028.4913552618382`, -0.9376923076923079}]}, {
           RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3263.225223682087, -0.735}]}, {
           RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2778.15120394556, -0.7193670886075952}]}, {
           RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1940.2960789461058`, -0.6507894736842106}]}, {
           RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2910.4441184191587`, -0.8128846153846158}]}, {
           RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4145.177986839408, -1.2898947368421052`}]}, {
           RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6702.8409999956375`, -1.788}]}, {
           RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3483.7134144714173`, -2.102551020408163}]}, {
           RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4806.642559207398, -0.779298245614035}]}, {
           RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2866.3464802612925`, -0.5369333333333333}]}, {
           RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1278.8315065781153`, -0.6100000000000002}]}, {
           RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1984.3937171039718`, -1.1052830188679246`}]}, {
           RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3351.4204999978188`, -1.1092857142857147`}]}, {
           RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2431.4947706489934`, -1.2698214285714287`}]}, {
           RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1719.8078881567756`, -0.9107894736842105}]}, {
           RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2160.7842697354363`, -0.8761643835616437}]}, {
           RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4560.955718042141, 1.0816161616161617`}]}, {
           RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1174.0996159531833`, 0.7248275862068967}]}, {
           RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1852.1008026303737`, -1.7544444444444445`}]}, {
           RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2954.5417565770254`, -1.3162365591397847`}]}, {
           RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3307.3228618399535`, -2.4393203883495147`}]}, {
           RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3130.932309208489, -1.1023232323232324`}]}, {
           RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2028.4913552618377`, -0.9657777777777778}]}, {
           RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3219.1275855242206`, -0.7441176470588234}]}, {
           RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{341.99635680041894`, -0.9353846153846154}]}, {
           RGBColor[0.7260841049382717, 0, 0.2739158950617283, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1543.4173355253115`, 0.1760526315789474}]}, {
           RGBColor[0.6275115740740741, 0, 0.3724884259259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2138.735450656503, -0.7776415094339624}]}, {
           RGBColor[0.5575925925925925, 0, 0.44240740740740747`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4894.83783552313, -0.26459893048128336`}]}, {
           RGBColor[0.39545524691358025`, 0, 0.6045447530864198, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4409.763815786605, -0.7408695652173912}]}, {
           RGBColor[0.2805111882716049, 0, 0.7194888117283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4850.740197365266, -0.011464968152866224`}]}, {
           RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1058.343315788785, -0.583548387096774}]}, {
           RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{793.7574868415886, -0.7125000000000006}]}, {
           RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3527.811052629283, -0.003089887640449502}]}, {
           RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3301.259436593234, 0.38808641975308655`}]}, {
           RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1953.5253703934532`, -1.0224324324324323`}]}, {
           RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1708.7834786173091`, -0.47879999999999995`}]}, {
           RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2644.319999768756, 0.5908661417322834}]}, {
           RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{7043.990340936468, 1.0637951807228916`}]}, {
           RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5247.618940786058, 0.34604026845637575`}]}, {
           RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5600.400046048988, -0.6757142857142858}]}, {
           RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4145.177986839408, -0.5393749999999999}]}, {
           RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6702.840999995638, -0.9356969696969699}]}, {
           RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4453.861453944471, -0.9548387096774195}]}, {
           RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4277.470901313007, -1.206198347107438}]}, {
           RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5776.790598680452, -1.2805}]}, {
           RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5005.081930917816, -1.5467741935483872`}]}, {
           RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4321.568539470872, -1.704722222222222}]}, {
           RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5097.68697104929, -2.0366875}]}, {
           RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3880.592157892211, -1.2315469613259666`}]}, {
           RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6936.2990843608395`, -1.2567428571428572`}]}, {
           RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4674.3496447338, -0.9214912280701756}]}, {
           RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5093.277207233487, -0.940888888888889}]}, {
           RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5732.692960522585, -1.0030898876404495`}]}, {
           RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5776.790598680452, -0.6950568181818183}]}, {
           RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4012.8850723658097`, -0.41077464788732404`}]}, {
           RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2734.053565787694, -0.46361111111111103`}]}, {
           RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
           0.0125, 
           PointBox[{3130.932309208489, -0.3711250000000001}]}, {
           RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3042.7370328927573`, -0.45135135135135135`}]}, {
           RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4497.959092102336, -2.584999999999999}]}, {
           RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3571.9086907871497`, -0.4654999999999999}]}, {
           RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4189.275624997274, -0.8785393258426966}]}, {
           RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4101.080348681542, -0.6073333333333333}]}, {
           RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4101.080348681542, -0.7831617647058825}]}, {
           RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1631.6126118410436`, -0.7143548387096775}]}, {
           RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1234.733868420249, -0.9144444444444444}]}, {
           RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1896.1984407882399`, -1.3407619047619048`}]}, {
           RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2293.0771842090344`, -1.3186666666666667`}]}, {
           RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1543.4173355253115`, -0.9225}]}, {
           RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1367.0267828938477`, -0.9034328358208955}]}, {
           RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1157.4160095167608`, -1.1366666666666667`}]}, {
           RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1102.440953946651, -0.6407042253521126}]}, {
           RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1940.2960789461063`, -0.9269047619047621}]}, {
           RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1499.3196973674453`, -1.033106796116505}]}, {
           RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1984.3937171039718`, -1.5775238095238093`}]}, {
           RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1058.3433157887848`, -1.6989285714285711`}]}, {
           RGBColor[0.5463175154320987, 0, 0.4536824845679013, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{973.704300614833, -0.5970212765957448}]}, {
           RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1102.440953946651, 0.27274509803921576`}]}, {
           RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1719.8078881567758`, -0.9883582089552239}]}, {
           RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1499.3196973674455`, -0.662873563218391}]}, {
           RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1631.6126118410436`, -0.8683098591549295}]}, {
           RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1190.6362302623832`, -0.7853846153846157}]}, {
           RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{440.9763815786604, -0.6804761904761901}]}, {
           RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{837.8551249994547, -0.93859375}]}, {
           RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1455.2220592095794`, -1.5388372093023257`}]}, {
           RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{396.87874342079436`, -0.7385000000000002}]}, {
           RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{837.8551249994547, -0.5837777777777776}]}, {
           RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{440.97638157866055`, -0.6439999999999998}]}, {
           RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{926.0504013151868, -0.5613793103448278}]}, {
           RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2645.8582894719625`, 0.09955555555555541}]}, {
           RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2510.415543701379, -0.4203125}]}, {
           RGBColor[0.5811651234567902, 0, 0.41883487654320983`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{308.6834671050623, -0.4466666666666666}]}, {
           RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{661.4645723679906, -0.4517647058823529}]}, {
           RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1058.343315788785, -0.3771428571428572}]}, {
           RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{881.9527631573208, -0.4626086956521737}]}, {
           RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{88.19527631573209, -1.105625}]}, {
           RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
           PointBox[{0., -1.7611428571428571`}]}, {
           RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{352.78110526292835`, -1.0137735849056604`}]}, {
           RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{440.97638157866044`, -0.5740000000000002}]}, {
           RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
           0.0125, 
           PointBox[{573.2692960522585, -0.5863157894736839}]}, {
           RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{264.58582894719626`, -0.3912500000000003}]}, {
           RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., 1.5760526315789476`}]}, {
           RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{793.7574868415887, -0.4682142857142856}]}, {
           RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{881.9527631573208, -0.6264285714285714}]}, {
           RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{881.9527631573209, -0.6368055555555556}]}}},
       RotateLabel->True,
       Ticks->{Automatic, Automatic},
       TicksStyle->{}], 
      GraphicsBox[{},
       AlignmentPoint->Center,
       AspectRatio->1,
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          RotationBox[
          "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm], 
         FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       AxesStyle->{},
       Background->None,
       BaseStyle->{},
       BaselinePosition->Automatic,
       ColorOutput->Automatic,
       ContentSelectable->Automatic,
       CoordinatesToolOptions:>Automatic,
       DisplayFunction->Identity,
       Epilog->{},
       FormatType:>TraditionalForm,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameStyle->{},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       FrameTicksStyle->{},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageMargins->0.,
       ImagePadding->All,
       ImageSize->350,
       ImageSizeRaw->Automatic,
       LabelStyle->{},
       Method->{
        "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
         "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
         "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Oktopusz\"", TraditionalForm],
       PlotRange->{{0, 7500}, {-5, 6}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       PlotRegion->Automatic,
       PreserveImageOptions->Automatic,
       Prolog->{{{
           RGBColor[
            NCache[
             Rational[1, 18], 0.05555555555555555], 0, 
            NCache[
             Rational[17, 18], 0.9444444444444444], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[1, 18], 0.05555555555555555], 0, 
              NCache[
               Rational[17, 18], 0.9444444444444444], 0.5]}], 
           TagBox[
            
            DiskBox[{4849.1993942874, -0.3274074074074074}, {
             117.27514214259352`, 0.3472679969827267}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[2, 9], 0.2222222222222222], 0, 
            NCache[
             Rational[7, 9], 0.7777777777777778], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[2, 9], 0.2222222222222222], 0, 
              NCache[
               Rational[7, 9], 0.7777777777777778], 0.5]}], 
           TagBox[
            
            DiskBox[{4177.406835515713, 0.6178272406077876}, {
             1134.811359904564, 1.5399923093214785`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[7, 18], 0.3888888888888889], 0, 
            NCache[
             Rational[11, 18], 0.6111111111111112], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[7, 18], 0.3888888888888889], 0, 
              NCache[
               Rational[11, 18], 0.6111111111111112], 0.5]}], 
           TagBox[
            
            DiskBox[{3885.1582123278763`, 0.34663515648781856`}, {
             840.384851892684, 1.57407016972206}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[5, 9], 0.5555555555555556], 0, 
            NCache[
             Rational[4, 9], 0.4444444444444444], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[5, 9], 0.5555555555555556], 0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0.5]}], 
           TagBox[
            
            DiskBox[{3100.1629878720196`, 0.8234640129450159}, {
             1045.236840930401, 2.5888649424066474`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[13, 18], 0.7222222222222222], 0, 
            NCache[
             Rational[5, 18], 0.2777777777777778], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[13, 18], 0.7222222222222222], 0, 
              NCache[
               Rational[5, 18], 0.2777777777777778], 0.5]}], 
           TagBox[
            
            DiskBox[{2229.3522382753017`, 1.6280787564599617`}, {
             738.427577261007, 2.7437577751901916`}], "Ellipsoid"]}}, {{
           RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2716.8152958222563`, 1.4036842105263156`}]}, {
           RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3127.496677748877, 0.377878787878788}]}, {
           RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3822.4959394708494`, 0.5659322033898305}]}, {
           RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4391.131699061554, 0.19138888888888894`}]}, {
           RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3696.132437339582, 0.13659259259259268`}]}, {
           RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3727.7233128723988`, 0.9477777777777779}]}, {
           RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3759.314188405216, 0.5257142857142857}]}, {
           RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3411.814557544229, 1.5881632653061228`}]}, {
           RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4834.569567843193, -0.2179999999999996}]}, {
           RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{7171.128745949444, -0.060937500000000366`}]}, {
           RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6570.902110825924, 0.6371428571428569}]}, {
           RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5022.949209717893, 1.576}]}, {
           RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4896.585707586625, 1.5116129032258068`}]}, {
           RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4896.585707586625, 1.762}]}, {
           RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4714.280030032642, 0.5304166666666666}]}, {
           RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2306.1339138956364`, 0.11285714285714261`}]}, {
           RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6539.311235293107, -1.379999999999999}]}, {
           RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2527.2700426253555`, -0.4666666666666662}]}, {
           RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6002.266351235217, 4.262857142857144}]}, {
           RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3380.223682011412, 3.544705882352942}]}, {
           RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3443.4054330770464`, 1.5116923076923074`}]}, {
           RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4580.6769522584555`, -0.08769230769230801}]}, {
           RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3553.973497441877, -0.8236000000000001}]}, {
           RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1232.0441457798609`, -1.076666666666666}]}, {
           RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4833.403956520991, 0.09640000000000072}]}, {
           RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4675.449578856907, 2.9577777777777783`}]}, {
           RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6002.266351235217, 1.4291304347826093`}]}, {
           RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6207.607042198528, -0.3264999999999998}]}, {
           RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3885.6776905364836`, 3.5191304347826087`}]}, {
           RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4821.845889399108, -2.20448275862069}]}, {
           RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1347.8773560668944`, -3.7937500000000006`}]}, {
           RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4608.94247247202, 1.161851851851852}]}, {
           RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3980.450317134934, 3.2724999999999995`}]}, {
           RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4738.631329922541, 0}]}, {
           RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4959.767458652259, -0.6548148148148148}]}, {
           RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4991.358334185075, 3.856315789473684}]}, {
           RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2116.588660698735, -4.363076923076922}]}, {
           RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3885.6776905364836`, -0.5311666666666668}]}, {
           RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4327.949947995921, 3.25}]}, {
           RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2811.5879224207074`, -1.9842857142857138`}]}, {
           RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3380.2236820114126`, 2.9519999999999995`}]}, {
           RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3064.314926683243, -3.6665217391304346`}]}, {
           RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3317.0419309457784`, 2.6500000000000004`}]}, {
           RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2785.262192810065, -3.926315789473684}]}, {
           RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1705.9072787721145`, 0.3733333333333335}]}, {
           RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5117.721836316343, -3.75}]}, {
           RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4233.17732139747, -1.8649999999999995`}]}, {
           RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3793.1615550475444`, -1.7778571428571426`}]}, {
           RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
           0.0125, 
           PointBox[{1642.7255277064808`, -4.5840625}]}, {
           RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1654.0079832539811`, -3.366}]}, {
           RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4271.086372036815, 3.6999999999999997`}]}, {
           RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2843.178797953525, 0}]}, {
           RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2590.4517936909892`, 0}]}, {
           RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1684.5369806175959`, 0}]}, {
           RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2653.6335447566225`, 4.1425}]}, {
           RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2590.451793690989, 0}]}, {
           RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1642.7255277064808`, 0}]}, {
           RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2495.6791670925377`, 0}]}, {
           RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1769.0890298377487`, 0}]}, {
           RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2843.178797953525, 0}]}, {
           RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2622.0426692238057`, 0}]}, {
           RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2021.816034100284, 0}]}, {
           RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2400.9065404940875`, 7.32}]}, {
           RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3317.0419309457784`, 5.773333333333333}]}, {
           RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1958.63428303465, 1.0199999999999996`}]}, {
           RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2306.1339138956364`, 2.753333333333333}]}, {
           RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3759.3141884052147`, 0.534}]}, {
           RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1522.6802006817993`, -0.2777777777777778}]}, {
           RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
           PointBox[{1516.3620255752132`, 7.68}]}, {
           RGBColor[0.7866145833333331, 0, 0.21338541666666688`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3183.658234251707, -0.5499999999999989}]}, {
           RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1326.8167723783113`, 8.950000000000001}]}, {
           RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{694.9992617219725, 6.620000000000001}]}, {
           RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2432.497416026904, 0.13952380952380952`}]}, {
           RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
           0.0125, 
           PointBox[{2362.546191632793, 0.06973684210526358}]}, {
           RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{947.7262659845081, 1.7594736842105263`}]}, {
           RGBColor[0.6118634259259258, 0, 0.3881365740740742, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{442.2722574594372, -0.0163636363636365}]}, {
           RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2306.1339138956364`, 6.2620000000000005`}]}, {
           RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2021.8160341002838`, 6.25}]}, {
           RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1579.543776640847, 7.354193548387096}]}, {
           RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{663.4083861891557, 7.406666666666666}]}, {
           RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1074.0897681157758`, 3.601818181818183}]}}},
       RotateLabel->True,
       Ticks->{Automatic, Automatic},
       TicksStyle->{}], 
      GraphicsBox[{},
       AlignmentPoint->Center,
       AspectRatio->1,
       Axes->{True, True},
       AxesLabel->{
         FormBox[
          RotationBox[
          "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
           1.5707963267948966`], TraditionalForm], 
         FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
       AxesOrigin->{0, 0},
       AxesStyle->{},
       Background->None,
       BaseStyle->{},
       BaselinePosition->Automatic,
       ColorOutput->Automatic,
       ContentSelectable->Automatic,
       CoordinatesToolOptions:>Automatic,
       DisplayFunction->Identity,
       Epilog->{},
       FormatType:>TraditionalForm,
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameStyle->{},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       FrameTicksStyle->{},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageMargins->0.,
       ImagePadding->All,
       ImageSize->350,
       ImageSizeRaw->Automatic,
       LabelStyle->{},
       Method->{
        "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
         "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
         "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}},
       PlotLabel->FormBox["\"Lahmacun\"", TraditionalForm],
       PlotRange->{{0, 7000}, {-5, 6}},
       PlotRangeClipping->True,
       PlotRangePadding->{{0, 0}, {0, 0}},
       PlotRegion->Automatic,
       PreserveImageOptions->Automatic,
       Prolog->{{{
           RGBColor[
            NCache[
             Rational[2, 9], 0.2222222222222222], 0, 
            NCache[
             Rational[7, 9], 0.7777777777777778], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[2, 9], 0.2222222222222222], 0, 
              NCache[
               Rational[7, 9], 0.7777777777777778], 0.5]}], 
           TagBox[
            
            DiskBox[{3819.629435897069, 1.7117209057516922`}, {
             1451.549536496152, 1.4296961901433687`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[7, 18], 0.3888888888888889], 0, 
            NCache[
             Rational[11, 18], 0.6111111111111112], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[7, 18], 0.3888888888888889], 0, 
              NCache[
               Rational[11, 18], 0.6111111111111112], 0.5]}], 
           TagBox[
            
            DiskBox[{3897.9120169630687`, 0.11773782314172639`}, {
             931.0056274885048, 1.0657980682962258`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[5, 9], 0.5555555555555556], 0, 
            NCache[
             Rational[4, 9], 0.4444444444444444], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[5, 9], 0.5555555555555556], 0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0.5]}], 
           TagBox[
            
            DiskBox[{2474.0697688453592`, 1.0660241223157747`}, {
             1009.9638712660897`, 1.3379634598543022`}], "Ellipsoid"]}, {
           RGBColor[
            NCache[
             Rational[13, 18], 0.7222222222222222], 0, 
            NCache[
             Rational[5, 18], 0.2777777777777778], 0.25], 
           EdgeForm[{
             Thickness[Large], 
             Dashing[{Small, Small}], 
             RGBColor[
              NCache[
               Rational[13, 18], 0.7222222222222222], 0, 
              NCache[
               Rational[5, 18], 0.2777777777777778], 0.5]}], 
           TagBox[
            
            DiskBox[{2549.4739113174746`, 1.3981803599659106`}, {
             952.9980997678373, 1.2896640761520748`}], "Ellipsoid"]}}, {{
           RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4276.522909090499, 0.8467999999999999}]}, {
           RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4660.313426572979, 2.1462745098039218`}]}, {
           RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3207.3921818178737`, 0.28178571428571414`}]}, {
           RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1096.5443356642427`, 0.20333333333333314`}]}, {
           RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1096.5443356642302`, 0.6814285714285717}]}, {
           RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6524.4387972021705`, 2.6957377049180327`}]}, {
           RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4331.35012587371, 1.3609375}]}, {
           RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2933.256097901816, 2.0415094339622635`}]}, {
           RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3700.837132866777, 1.917894736842105}]}, {
           RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3481.2366316021157`, 1.8045833333333334`}]}, {
           RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1535.1620699299222`, -1.3744444444444441`}]}, {
           RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3236.1764706290896`, -0.7956122448979595}]}, {
           RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4441.004559440133, 3.1528000000000005`}]}, {
           RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3234.8057902094797`, 1.8384210526315787`}]}, {
           RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4441.004559440133, 2.392857142857143}]}, {
           RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3543.2088846150446`, 0.18168674698795148`}]}, {
           RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4303.936517482104, -0.10709677419354828`}]}, {
           RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1826.4750350533723`, -1.42625}]}, {
           RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3179.9785734262687`, -1.8392857142857146`}]}, {
           RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1870.978772727093, 3.605081967213115}]}, {
           RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4015.0115132495375`, 1.7215217391304347`}]}, {
           RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4194.282083915681, 2.1729999999999996`}]}, {
           RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3892.732391608018, 1.568666666666666}]}, {
           RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., 4.950000000000001}]}, {
           RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1206.1987692306534`, 4.622424242424243}]}, {
           RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6277.716321677719, 5.00958904109589}]}, {
           RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5373.067244754729, 5.11804347826087}]}, {
           RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4413.590951048527, 3.8874999999999997`}]}, {
           RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5345.653636363122, 3.565909090909091}]}, {
           RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5153.758377621882, 3.8241025641025645`}]}, {
           RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2220.5022797200663`, -1.0470588235294118`}]}, {
           RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6387.370755244141, 4.934675324675325}]}, {
           RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3755.664349649989, 0.16038834951456327`}]}, {
           RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4002.3868251744407`, 0.6653571428571426}]}, {
           RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3783.0779580415947`, -0.42290322580645173`}]}, {
           RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4386.177342656922, -0.11948717948717981`}]}, {
           RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{356.37690909087485`, 0.4449999999999994}]}, {
           RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1288.4395944054706`, 0.157916666666667}]}, {
           RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{6387.370755244141, 0.8604210526315792}]}, {
           RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5674.616937062392, -0.18141176470588222`}]}, {
           RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5071.517552447065, -0.368918918918919}]}, {
           RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4303.936517482104, -0.37727272727272754`}]}, {
           RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4303.936517482104, -0.7259420289855071}]}, {
           RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
           0.0125, 
           PointBox[{253.4164961782114, -0.14874999999999994`}]}, {
           RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1562.5756783215281`, -0.32142857142857145`}]}, {
           RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5263.4128111883065`, 1.1013953488372092`}]}, {
           RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4057.2140419576526`, 0.3990384615384617}]}, {
           RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{5098.931160838671, 0.2176744186046514}]}, {
           RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{4490.083761560606, 0.05589743589743575}]}, {
           RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{849.8218601397786, -1.514285714285714}]}, {
           RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., 0.14222222222222222`}]}, {
           RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{0., -0.07259259259259249}]}, {
           RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3947.55960839113, 0.6162222222222224}]}, {
           RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3125.1513566430567`, -0.26578947368421063`}]}, {
           RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2796.1880559437873`, -0.9419512195121948}]}, {
           RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3097.7377482514503`, -0.3367441860465116}]}, {
           RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2576.8791888109413`, -1.2299999999999995`}]}, {
           RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3015.4969230766333`, 1.3200000000000003`}]}, {
           RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3070.324139859845, 0.6670312499999993}]}, {
           RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{959.4762937062014, 1.7520833333333332`}]}, {
           RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3289.633006992691, 1.376551724137931}]}, {
           RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3125.1513566430563`, 1.6232258064516125`}]}, {
           RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3070.324139859845, 0.2856250000000007}]}, {
           RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2988.083314685028, -0.41129032258064585`}]}, {
           RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2741.360839160576, -0.47021739130434764`}]}, {
           RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1973.7798041956146`, -1.4475675675675679`}]}, {
           RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3481.5282657339308`, -0.16644444444444426`}]}, {
           RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2302.743104894884, 0.7959999999999992}]}, {
           RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2549.4655804193353`, 0.775394736842105}]}, {
           RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2659.1200139857588`, 1.2240909090909093`}]}, {
           RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2686.5336223773643`, 1.151290322580645}]}, {
           RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1836.7117622375856`, 1.7116666666666678`}]}, {
           RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2138.2614545452493`, 1.131428571428572}]}, {
           RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2153.200331028271, 0.3329545454545453}]}, {
           RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
           PointBox[{1781.8845454543746`, 0.36722222222222206`}]}, {
           RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3646.009916083566, 3.537272727272727}]}, {
           RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1206.1987692306534`, -0.7016216216216216}]}, {
           RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2028.6070209788263`, 1.2661538461538462`}]}, {
           RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
           0.0125, 
           PointBox[{2220.5022797200663`, 2.5001666666666673`}]}, {
           RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1343.2668111886821`, 1.7870000000000004`}]}, {
           RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{3289.6330069926908`, 6.181200000000001}]}, {
           RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{1973.7798041956148`, 2.893414634146341}]}, {
           RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2659.1200139857588`, 3.203673469387755}]}, {
           RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{794.9946433565672, 1.3092000000000001`}]}, {
           RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
           PointSize -> 0.0125, 
           PointBox[{2878.4288811186047`, 4.282253521126761}]}}},
       RotateLabel->True,
       Ticks->{Automatic, Automatic},
       TicksStyle->{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]}]], "Input",
 CellChangeTimes->{{3.9271868436603622`*^9, 3.927186844825425*^9}},
 CellLabel->
  "In[1051]:=",ExpressionUUID->"d28e6cb1-99cf-4cd0-8407-05754b53cb3e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"ovi\"", TraditionalForm],
      PlotRange->{{0, 6000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 6], 0.16666666666666666`], 0, 
           NCache[
            Rational[5, 6], 0.8333333333333334], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 6], 0.16666666666666666`], 0, 
             NCache[
              Rational[5, 6], 0.8333333333333334], 0.5]}], 
          TagBox[
           
           DiskBox[{3229.4027123610185`, 0.30694329368595036`}, {
            794.6294828314072, 1.4609514636270107`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 3], 0.3333333333333333], 0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0.5]}], 
          TagBox[
           
           DiskBox[{3168.3114780351107`, 1.412779177396604}, {
            838.7966842404521, 1.517822001146374}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[1, 2], 0.5], 0, 
           NCache[
            Rational[1, 2], 0.5], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 2], 0.5], 0, 
             NCache[
              Rational[1, 2], 0.5], 0.5]}], 
          TagBox[
           
           DiskBox[{2531.1856419933592`, 1.1496202056132379`}, {
            902.1290292988167, 1.3914619764602143`}], "Ellipsoid"]}}, {{
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2188.960666664035, 1.3019999999999998`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2519.8500697644117`, 4.063125}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3079.8167519342815`, 4.537454545454546}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3537.9713100732656`, 4.4610958904109586`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2978.004627903397, 2.8269629629629627`}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3003.457658911118, -0.36400000000000016`}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3028.9106899188387`, 2.666363636363636}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2748.9273488339045`, 3.2640410958904105`}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3895.2528869125017`, 3.187323943661972}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5294.230449606038, 1.8571497584541063`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4047.031930227692, 1.3854088050314468`}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3945.219806196807, 0.3167403314917128}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3945.219806196807, 1.2077241379310346`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3798.3346064230664`, 3.2103896103896106`}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1858.0712635636576`, 1.953333333333334}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5268.777418598317, 3.22125}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2036.242480617707, 2.0614507772020727`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4836.075891467054, -0.1430827067669172}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2723.474317826183, -1.0901666666666663`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2774.3803798416257`, 0.11086330935251797`}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3690.6894961195935`, 3.865689655172414}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2863.465988368627, 3.580214285714286}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{992.6682093011319, 2.197272727272727}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3894.3137441813647`, -0.07027027027027027}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3767.0485891427575`, -0.026308724832214588`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4836.075891467054, 0.6507727272727272}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5001.520593017242, 2.639959677419355}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3130.7228139497247`, 4.00345238095238}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{254.5303100772134, 0.36041666666666633`}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -2.936551724137931}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3885.0013134278383`, -0.8381159420289854}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3716.142527127315, 0.14716216216216227`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3207.081906972889, -1.346011904761905}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3817.954651158201, -1.8333333333333333`}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3996.1258682122507`, -0.49985294117647056`}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4021.578899219972, 0.9036979166666669}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1705.3530775173297`, 2.7759701492537316`}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3130.7228139497247`, -0.45281249999999984`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3487.0652480578233`, -1.4655555555555557`}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2265.3197596871987`, -0.6457407407407406}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2723.474317826183, -1.7252475247524752`}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2468.9440077489694`, -0.2531055900621118}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2672.5682558107405`, 3.0654687500000004`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2244.108900514129, 4.167916666666667}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1374.4636744169522`, 0.2666666666666665}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3995.80637409917, -2.5544017094017093`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4123.391023250857, -0.230549019607843}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3410.7061550346593`, -0.6345291479820628}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3056.1817945699886`, 0.30295238095238086`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2901.645534880233, 2.435885416666667}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1323.55761240151, 1.0392682926829269`}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1332.647980618606, 0.012531645569620189`}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3441.249792243898, -0.3063318777292577}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2290.7727906949203`, -0.8444642857142858}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2087.1485426331496`, -0.9810555555555555}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2659.721109828167, -0.3306547619047619}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2468.9440077489694`, 1.6014583333333334`}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1357.245447558815, 0}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1959.883387594543, -0.9058620689655172}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2112.601573640871, -0.19916083916083896`}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2138.0546046485924`, -0.523}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2087.148542633149, 0.018819444444444403`}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1323.5576124015095`, 2.5292708333333334`}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2010.7894496099857`, -0.03634146341463402}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1425.369736432395, 0.23847457627118646`}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2290.772790694921, -0.35592592592592637`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2112.601573640871, 0.811029411764706}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1628.9939844941655`, 3.575}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{610.8727441853122, 1.4229999999999998`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2138.0546046485924`, -1.3051639344262294`}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2774.3803798416257`, -0.8138345864661654}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1883.5242945713787`, -0.8837499999999999}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2061.6955116254285`, -0.30983193277310916`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2367.1318837180843`, 3.418300653594771}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1272.651550386067, 0.31862745098039236`}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2316.2258217026415`, 0.4434482758620687}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1985.3364186022643`, -0.7549999999999998}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{610.8727441853122, 1.5700000000000003`}]}, {
          RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1934.4303565868213`, 4.664333333333333}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1934.4303565868213`, 0.17298387096774204`}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{992.6682093011322, -0.025526315789473654`}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2672.5682558107405`, 4.571911764705882}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1578.0879224787232`, -0.4174418604651165}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1858.0712635636576`, 1.505068493150685}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3028.9106899188387`, 1.2876129032258063`}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1226.836094572187, 2.758867924528302}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{1221.7454883706243`, 4.3825}]}, {
          RGBColor[0.7866145833333331, 0, 0.21338541666666688`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2565.099902667064, 4.464625}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1069.0273023242962`, 1.0719117647058827`}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{559.9666821698695, 1.716818181818182}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1959.883387594543, 3.2134883720930234`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1903.523104648861, 3.36}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{763.5909302316401, 4.750975609756098}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1858.0712635636578`, 0.16342857142857156`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1628.993984494166, 0.3502127659574468}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1272.6515503860671`, 0.05671232876712305}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{534.5136511621481, -0.019655172413793727`}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{865.4030542625255, 4.428571428571429}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"PK\"", TraditionalForm],
      PlotRange->{{0, 4500}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 9], 0.1111111111111111], 0, 
           NCache[
            Rational[8, 9], 0.8888888888888888], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 9], 0.1111111111111111], 0, 
             NCache[
              Rational[8, 9], 0.8888888888888888], 0.5]}], 
          TagBox[
           
           DiskBox[{3003.429448192067, -0.03198376045583658}, {
            342.4344305152648, 0.9468590014914985}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 18], 0.2777777777777778], 0, 
           NCache[
            Rational[13, 18], 0.7222222222222222], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 18], 0.2777777777777778], 0, 
             NCache[
              Rational[13, 18], 0.7222222222222222], 0.5]}], 
          TagBox[
           
           DiskBox[{2279.6822146959166`, 0.6941101180886552}, {
            521.8257932059349, 1.5132980157329985`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[4, 9], 0.4444444444444444], 0, 
           NCache[
            Rational[5, 9], 0.5555555555555556], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[4, 9], 0.4444444444444444], 0, 
             NCache[
              Rational[5, 9], 0.5555555555555556], 0.5]}], 
          TagBox[
           DiskBox[{2006.3871707901667`, 1.0748898614137246`}, {
            701.6315980119967, 1.7204145385224217`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[11, 18], 0.6111111111111112], 0, 
           NCache[
            Rational[7, 18], 0.3888888888888889], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[11, 18], 0.6111111111111112], 0, 
             NCache[
              Rational[7, 18], 0.3888888888888889], 0.5]}], 
          TagBox[
           
           DiskBox[{1490.7080780080462`, 0.4698280001877942}, {
            557.7117323200058, 1.0356233333610023`}], "Ellipsoid"]}}, {{
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1574.9932103802937`, 0.8575789473684209}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1813.0735793912688`, 0.8220588235294121}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2215.978819255995, 4.7185964912280705`}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2545.6285609634983`, 4.375774647887324}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2142.723321098772, 1.9991851851851852`}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2161.037195638078, 2.455964912280702}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2692.1395572779443`, 1.6381521739130436`}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2179.3510701773835`, 0.10152000000000015`}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1977.8984502450203`, 0.29404109589041105`}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2802.698533158722, 3.9670422535211265`}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3809.285904175595, 1.5942995169082124`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2911.906051749614, 1.8344936708860762`}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2838.65055359239, 1.544696132596685}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2838.65055359239, 2.0527083333333334`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2732.9642359384693`, 0.01935064935064947}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1336.912841369319, 2.8459183673469393`}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3790.9720296362884`, 3.674927536231884}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1465.1099631444595`, 2.1738860103626942`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3479.6361624680917`, 0.26977443609022556`}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1959.5845757057143`, 0.37025641025641015`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1996.2123247843263`, -0.2011510791366907}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2655.511808199333, 0.04051724137931033}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2060.3108856718795`, 4.363675213675214}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{714.241107032924, 2.952272727272728}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2802.0228045137796`, 0.4500000000000001}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2710.45343181725, 0.4897315436241609}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3479.6361624680912`, 1.2327853881278539`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3598.676346973579, 2.65719512195122}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2252.606568334607, -0.7574404761904764}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{183.13874539305743`, 1.0090476190476192`}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -2.3559428571428573`}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2795.322357387293, 4.741219512195122}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2671.8979064713385`, -1.8784671532846713`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2673.8256827386385`, -1.5849999999999997`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2307.5481919525237`, -0.7195833333333331}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2747.081180895862, -0.4567213114754099}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2875.2783026710013`, 0.053277777777777875`}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2893.592177210308, -1.4569270833333334`}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1227.0295941334848`, 3.0402985074626865`}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2252.606568334607, 2.2496875000000003`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2509.000811884887, -1.8763888888888889`}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1629.9348339982114`, -2.699439252336449}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1959.584575705715, -1.6228712871287125`}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1776.445830312657, -1.0167080745341615`}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1922.956826627103, -3.014583333333333}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1614.6732718821452`, 3.912357142857142}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{988.9492251225103, 0.4400000000000003}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2875.0484214006246`, -1.8405063291139243`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2966.847675367531, 0.1033004926108375}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2454.0591882669696`, -0.19342105263157905`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2198.973078612368, -0.17188888888888879`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2087.7816974808547`, -1.2263541666666669`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{952.3214760438988, 1.4025}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{958.8621455222603, 1.8695833333333332`}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1648.248708537517, -0.17976190476190487`}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1501.737712223071, -1.3934444444444445`}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1913.713093743518, -1.4118452380952382`}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1776.445830312657, -2.3463020833333332`}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{976.5604276400582, 0}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1410.1683395265422`, -1.965114942528736}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1520.0515867623767`, -0.543216783216783}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1538.3654613016827`, 0.033833333333333035`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1501.737712223071, -0.2699305555555557}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{952.3214760438988, -0.6301652892561981}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1446.796088605154, -1.667397260273973}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1025.5769742011216`, -1.0972527472527476`}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1648.248708537517, 1.2163999999999997`}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1996.2123247843263`, 0.3545454545454541}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1355.226715908625, 1.5547826086956524`}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1483.4238376837654`, -0.10782608695652196`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1703.1903321554344`, -0.9508695652173919}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{915.6937269652872, -2.696129032258065}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1666.5625830768229`, -1.225428571428571}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1428.482214065848, 1.5476923076923077`}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1391.8544649872367`, 0.8116935483870968}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{714.241107032924, 2.6347368421052635`}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1922.956826627103, 0.2113235294117652}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1135.4602214369563`, -0.38732558139534884`}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1336.9128413693193`, 1.453698630136986}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2179.3510701773835`, 1.8017054263565893`}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{882.7287527945502, 3.270754716981132}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{879.0659778866756, 2.095079365079365}]}, {
          RGBColor[0.7866145833333331, 0, 0.21338541666666688`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1845.6315785722825`, 4.788461538461539}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{769.1827306508411, -0.06897058823529434}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{402.9052398647264, 0.8168181818181818}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1410.1683395265422`, 3.3920454545454546`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1369.6161887609271`, 4.067222222222222}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{549.4162361791723, 0.10097560975609748`}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1336.9128413693193`, -0.15323809523809506`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1172.0879705155678`, 1.0559574468085104`}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{915.6937269652873, 0.6223287671232876}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{384.59136532542067`, 1.9617241379310342`}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{622.6717343363953, 0.11214285714285717`}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"SZGK\"", TraditionalForm],
      PlotRange->{{0, 3000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 9], 0.1111111111111111], 0, 
           NCache[
            Rational[8, 9], 0.8888888888888888], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 9], 0.1111111111111111], 0, 
             NCache[
              Rational[8, 9], 0.8888888888888888], 0.5]}], 
          TagBox[
           
           DiskBox[{2214.910666264658, 0.15669953369568448`}, {
            443.7957939702733, 0.255385836626455}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 18], 0.2777777777777778], 0, 
           NCache[
            Rational[13, 18], 0.7222222222222222], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 18], 0.2777777777777778], 0, 
             NCache[
              Rational[13, 18], 0.7222222222222222], 0.5]}], 
          TagBox[
           
           DiskBox[{1681.5351417530298`, 0.6608208870098604}, {
            569.3579982238084, 1.0338506986512077`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[4, 9], 0.4444444444444444], 0, 
           NCache[
            Rational[5, 9], 0.5555555555555556], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[4, 9], 0.4444444444444444], 0, 
             NCache[
              Rational[5, 9], 0.5555555555555556], 0.5]}], 
          TagBox[
           
           DiskBox[{1227.7223525800177`, 1.2975697224085523`}, {
            405.7798779352231, 1.1913685536068372`}], "Ellipsoid"]}}, {{
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1136.753093268105, 0.6930985915492957}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1335.977862191381, 0.7641666666666665}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{210.9438729775865, 2.553}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2402.416331133624, 0.1891891891891888}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1066.4384689422427`, 0.10030303030303053`}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1511.7644230060366`, 0.7759782608695653}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1769.5847122008647`, 1.0802247191011238`}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1593.7981513862092`, 0.5332857142857145}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{396.925179687761, 3.1033333333333335`}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2789.146764925866, 0.29979310344827576`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1699.2700878750024`, 1.0877419354838709`}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1828.1802324724165`, 0.9127192982456139}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1992.2476892327616`, 1.169886363636364}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1371.135174354312, 0.44833333333333336`}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{468.7641621724197, 2.750588235294117}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{468.7641621724144, 2.1683333333333334`}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2789.146764925866, -0.26246987951807227`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1851.6184405810372`, 0.3741129032258066}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1253.9441338112085`, 1.795254237288136}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1582.0790473318987`, 1.2490909090909093`}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1488.2015435776934`, 1.0510000000000002`}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{656.2698270413803, 3.8867499999999993`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1383.440233611351, 3.793265306122449}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1898.4948567982785`, -0.0193506493506494}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1382.8542784086226`, 0.35320987654320984`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1898.4948567982785`, 0.2526618705035972}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1514.6941990196142`, 0.41660194174757276`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1839.8993365267263`, 0.12338028169014094`}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{780.803850504587, 3.3070212765957447`}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{187.50566486896577`, 1.546}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1359.416070300002, -0.06236000000000013}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{799.8288517066823, 3.591909090909091}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1716.3861477438043`, -2.6419736842105266`}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1793.0229203094855`, -2.0825}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1664.1127757120712`, -0.640714285714286}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -3.6173423423423423`}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{515.6405783896558, 1.8542857142857145`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2683.674828437073, -1.0466321243523315`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2296.9443946448305`, 0.23196428571428584`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1886.775752743968, 0.392888888888889}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2285.22529059052, 0.17141975308641982`}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2203.191562210348, -0.021656050955414115`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2730.5512446543144`, -1.5877611940298506`}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1605.5172554405194`, -1.5121100917431192`}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1710.9891919293125`, -0.874345238095238}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1617.2363594948295`, -1.0319047619047619`}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1875.0566486896578`, -0.29017857142857145`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{152.34835270603472`, 3.3854545454545457`}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{550.797890552587, 2.9846874999999997`}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2730.5512446543144`, -0.43381395348837215`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2425.854539242245, 0.4574603174603173}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2168.0342500474167`, 0.43329268292682926`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1839.8993365267268`, 0.6684337349397591}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1839.8993365267268`, 0.9490123456790123}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{108.33357817647173`, 2.06}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{667.9889310956905, 2.4870588235294115`}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2250.0679784275894`, -0.5943646408839779}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1734.4274000379335`, -0.0836075949367088}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2179.7533541017274`, 0.5069306930693069}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1919.475833411648, 0.36352941176470593`}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{363.2922256836212, -0.23412903225806447`}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 2.048378378378378}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1687.5509838206492`, -0.6512834224598931}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1335.977862191381, 0.8687394957983191}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1195.3486135396568`, 1.0807638888888889`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1324.2587581370708`, 1.233983739837398}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1101.595781105174, 0.7443809523809524}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1335.977862191381, -0.17259259259259233`}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1289.1014459741396`, 0.6414159292035396}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1312.5396540827605`, 2.1239999999999997`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1335.977862191381, 1.9705}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1007.8429486706909`, 1.5971428571428576`}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{410.1686419008626, 2.7710204081632646`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1406.2924865172436`, -0.2548148148148149}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1335.977862191381, 1.5950000000000004`}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1312.5396540827605`, 1.8598734177215195`}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1277.3823419198293`, 0.007460317460317217}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1171.9104054310362`, -0.5726562500000001}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{843.7754919103461, -2.3619354838709676`}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1488.3262148974156`, -0.6027272727272728}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1007.8429486706909`, 1.0974999999999993`}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{984.4047405620704, 1.1995698924731184`}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1089.8766770508637`, 0.5382716049382715}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1136.7530932681052`, 1.0464285714285715`}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1148.4721973224155`, -0.32106382978723413`}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{785.1799716387942, 0.1466666666666665}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{914.0901162362082, 0.5370129870129869}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{920.4763695691563, 0.9898611111111114}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{761.7417635301734, 1.8900000000000001`}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1558.6408392232777`, -0.04731481481481494}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{515.6405783896558, 0.9035135135135133}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{867.2137000189666, 1.4246153846153846`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{949.2474283991393, 1.2665060240963857`}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{574.2360986612076, 1.2260465116279076`}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1406.2924865172436`, 0.5766055045871561}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{843.775491910346, 0.3250704225352113}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1136.7530932681052`, 0.9908653846153845}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{339.8540175750005, 0.6357142857142858}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1230.5059257025878`, 1.3535652173913046`}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}]},
    {
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"G\[OAcute]lyairoda\"", TraditionalForm],
      PlotRange->{{0, 4000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[2, 9], 0.2222222222222222], 0, 
           NCache[
            Rational[7, 9], 0.7777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[2, 9], 0.2222222222222222], 0, 
             NCache[
              Rational[7, 9], 0.7777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{2095.5570057290693`, 0.10157936291881108`}, {
            819.1950177173541, 0.4409886674623318}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[7, 18], 0.3888888888888889], 0, 
           NCache[
            Rational[11, 18], 0.6111111111111112], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[7, 18], 0.3888888888888889], 0, 
             NCache[
              Rational[11, 18], 0.6111111111111112], 0.5]}], 
          TagBox[
           
           DiskBox[{2071.1431476968055`, 0.7010510055251996}, {
            588.3460953423764, 1.3587629295841963`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 9], 0.5555555555555556], 0, 
           NCache[
            Rational[4, 9], 0.4444444444444444], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 9], 0.5555555555555556], 0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0.5]}], 
          TagBox[
           
           DiskBox[{1358.1367890203278`, 0.8297168649472598}, {
            576.2231087155528, 1.1198172388173089`}], "Ellipsoid"]}}, {{
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1499.6792835343597`, 0.29984848484848475`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1762.5096734321342`, 0.6842307692307692}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{278.2910010682317, -0.41899999999999976`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3169.42528994375, 1.4174285714285713`}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1406.915616511616, -0.13096774193548394`}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1994.4188409889937`, 0.7130434782608697}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2334.552286739055, -0.07460674157303368}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2102.6431191821953`, 0.07652173913043464}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{523.6497464718095, 0.11666666666666667`}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{989.4791149092682, 0.06060606060606066}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3679.6254585688416`, -0.003931034482758611}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2241.788619716311, 0.1725806451612903}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2411.8553425913415`, 0.12315789473684194`}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2628.3038989777438`, -0.09793103448275876}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1808.8915069435063`, -0.08642857142857154}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{618.4244468182998, 0.31588235294117645`}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{618.4244468182927, -0.1610526315789473}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3679.6254585688416`, 1.0632530120481927`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2442.776564932256, -0.024032258064516074`}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1654.285395238933, 0.007288135593220183}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2087.182508011738, 0.04170454545454543}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1963.333144061165, 0.03169999999999998}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{865.7942255456097, 4.8325000000000005`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1825.1251486725032`, 3.0017346938775518`}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2504.619009614085, 0.19214285714285703`}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1824.3521181139633`, 0.30049382716049405`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2504.619009614085, 0.4370503597122302}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1998.2839937816082`, 0.13087378640776687`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2427.3159537617985`, 0.41669014084507056`}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1030.0876822240734`, 5.3329787234042545`}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{247.36977872731705`, 0.515}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1793.4308957730489`, 0.1711200000000002}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1055.1867123837117`, 2.0409999999999995`}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2264.3692491889615`, 5.731381578947369}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2195.406786204939, 5.292105263157896}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 4.478565022421524}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{680.2668915001219, -0.11028571428571426`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3540.4799580347258`, -0.9231606217616578}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3030.2797894096343`, -0.21714285714285708`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2489.1583984436274`, -0.8468888888888889}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3014.819178239177, -0.2799999999999999}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2906.5949000459764`, -0.6857324840764331}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1252.309504807043, 1.5514545454545452`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3602.322402716555, -0.7762686567164178}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2118.1037303526523`, -0.4850467289719626}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2257.2492308867686`, 0.14517857142857143`}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2133.56434152311, -0.7282738095238095}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2473.697787273171, -0.4963690476190479}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{200.98794521594513`, 0.7}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{726.6487250114939, 0.498125}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3602.322402716555, -1.3652558139534885`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3200.3465122846646`, -0.8311640211640213}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2860.213066534603, -0.4064634146341464}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2427.315953761799, -0.9638554216867469}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2427.3159537617985`, 0.21006172839506165`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{142.92076605248073`, 0.5474999999999999}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{881.2548367160671, 0.7792156862745099}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2968.437344727805, -0.5428176795580111}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2288.170453227683, -0.7106329113924049}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2875.6736777050614`, 0.5129665071770336}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2532.2984909031397`, 0.06313725490196086}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{479.2789462841768, -0.9423870967741935}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 1.077027027027027}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 0.7367647058823529}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2226.3280085457973`, -0.44053475935828884`}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1762.5096734321342`, -0.1231092436974787}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1576.9823393866466`, -0.24513888888888896`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1747.049062261677, 0.34975609756097564`}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1453.2974500229882`, 0.3477443609022558}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1762.5096734321342`, 0.12407407407407399`}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1700.6672287503052`, -0.10106060606060625`}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1731.5884510912194`, 1.0070967741935481`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1762.5096734321342`, 0.9088461538461541}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{541.1213909660061, 2.746909090909092}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1855.2733404548783`, 0.8823571428571428}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1762.5096734321342`, 0.5896694214876033}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1731.5884510912194`, 0.48847222222222203`}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1685.2066175798475`, 0.8059999999999999}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1546.0611170457316`, 1.070909090909091}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1113.1640042729268`, -0.7430303030303029}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1963.4976186480794`, 1.0025742574257426`}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1592.4429505571036`, 0.17999999999999972`}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1329.6125606593293`, 2.9299999999999997`}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1298.6913383184146`, 0.8986021505376344}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1437.8368388525307`, 0.8709876543209875}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1499.67928353436, 0.48136363636363666`}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1515.1398947048172`, 0.8274468085106381}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1035.8609484206402`, 1.7230952380952382`}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1205.9276712956707`, 0.7444155844155845}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1214.352835809884, 0.559027777777778}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{1004.9397260797256`, 1.5094999999999998`}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2056.261285670823, 1.251320754716981}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{680.2668915001219, 0.8497297297297295}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1144.0852266138415`, -0.03076923076923066}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1252.3095048070425`, 0.123132530120482}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{757.5699473524086, 0.10302325581395357`}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1855.2733404548783`, 1.9958715596330276`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1113.164004272927, 1.2925352112676058`}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1499.67928353436, 2.124615384615385}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{448.3577239432622, 0.26928571428571463`}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1623.3641728980185`, 2.121739130434783}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"M\[EAcute]rce\"", TraditionalForm],
      PlotRange->{{0, 5000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 9], 0.1111111111111111], 0, 
           NCache[
            Rational[8, 9], 0.8888888888888888], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 9], 0.1111111111111111], 0, 
             NCache[
              Rational[8, 9], 0.8888888888888888], 0.5]}], 
          TagBox[
           
           DiskBox[{3491.8895967736375`, 0.6286116471768928}, {
            1061.2483953584274`, 0.6898331274087786}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 18], 0.2777777777777778], 0, 
           NCache[
            Rational[13, 18], 0.7222222222222222], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 18], 0.2777777777777778], 0, 
             NCache[
              Rational[13, 18], 0.7222222222222222], 0.5]}], 
          TagBox[
           
           DiskBox[{3255.556777616404, 1.0090155754435555`}, {
            851.2746971747843, 1.1116135415361141`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[4, 9], 0.4444444444444444], 0, 
           NCache[
            Rational[5, 9], 0.5555555555555556], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[4, 9], 0.4444444444444444], 0, 
             NCache[
              Rational[5, 9], 0.5555555555555556], 0.5]}], 
          TagBox[
           
           DiskBox[{2175.33596842869, 1.362147737021093}, {718.9797936659812, 
            1.228475742454143}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[11, 18], 0.6111111111111112], 0, 
           NCache[
            Rational[7, 18], 0.3888888888888889], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[11, 18], 0.6111111111111112], 0, 
             NCache[
              Rational[7, 18], 0.3888888888888889], 0.5]}], 
          TagBox[
           
           DiskBox[{1997.7943275246685`, 0.03569432062357433}, {
            777.5899688474374, 0.9270573705405037}], "Ellipsoid"]}}, {{
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2014.1523739566474`, 1.4917647058823535`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2367.148150835647, -0.16611111111111138`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4256.713780011471, 0.4864285714285725}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1889.5656291758237`, -0.20071428571428548`}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2678.6150127877063`, 0.8344736842105267}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3135.433076984059, 1.3278378378378382`}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2823.966215032, 0.9891836734693878}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{703.2906245742819, 2.7633333333333336`}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1328.9252776621177`, 0}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4941.940876306001, 0.624166666666667}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3010.8463322032358`, 2.62804347826087}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3239.255364301412, 2.099464285714286}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3529.9577687899996`, 1.5500000000000007`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2429.441523226059, 0.6515151515151519}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4941.940876306001, 0.038461538461539005`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3280.7842792283527`, 0.5791999999999998}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2221.796948591353, 1.4960000000000002`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2803.2017575685295`, 0.9308928571428572}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2636.865199377118, 1.089}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1162.8096179543527`, 4.071052631578947}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2451.2442035627255`, 3.9348979591836737`}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3363.8421090822353`, 0.7988961038961039}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2450.20598068953, 0.8909876543209878}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3363.8421090822358`, 1.3366187050359712`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2683.8061271535735`, 0.8351456310679612}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3260.019821764882, 0.9317605633802817}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1383.4648336579376`, 4.255957446808511}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{332.2313194155294, 1.9220000000000002`}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2408.6770657625884`, 0.12191235059760966`}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1417.1742218818677`, 4.340727272727273}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3041.173368761737, -1.0367763157894736`}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3176.9619919110005`, -0.4230555555555556}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2948.5529598128237`, -0.11487394957983206`}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -3.1522869955156954`}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{913.6361283927059, 2.2234285714285718`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4755.060759134765, 0.16471502590673576`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4069.8336628402353`, 1.9052380952380952`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3343.077651618765, 1.6483703703703705`}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4049.0692053767643`, 1.4255405405405408`}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3903.7180031324706`, 1.1912738853503186`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4838.118588988647, -0.2320398009950249}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2844.730672495471, -0.9621100917431191}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3031.6107896667054`, -0.4298214285714285}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2865.4951299589407`, -0.800654761904762}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3322.313194155294, -0.3195833333333334}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{269.9379470251176, 5.113636363636363}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{975.9295007831176, 2.4903125}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4838.118588988647, -0.8173953488372093}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4298.242694938412, 0.21396825396825395`}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3841.4246307420585`, 0.30621951219512195`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3260.019821764883, -0.10837349397590358`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3260.019821764882, 0.22265432098765434`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{191.95050794719552`, 1.4412499999999997`}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1183.5740754178235`, 1.862156862745098}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3986.775832986353, -0.9231491712707183}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3073.139704593648, -0.3298734177215193}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3862.1890882055295`, 0.34594202898550747`}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3401.0171861539457`, 0.42754838709677406`}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{643.6981813675884, -0.5232258064516128}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 1.7216216216216218`}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2990.081874739689, -1.2953475935828875`}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2367.148150835647, -0.3884033613445379}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2117.974661274, -0.36236111111111113`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2346.383693372177, 0.29081300813008126`}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1951.8590015662353`, -0.6224812030075189}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2367.1481508356474`, -1.3033333333333335`}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2284.0903209817648`, -0.233787878787879}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2325.619235908706, -0.15666666666666682`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2367.1481508356474`, -0.6454166666666664}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1785.7433418584708`, -0.9320454545454544}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{726.7560112214708, 1.5076106194690262`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2491.7348956164706`, -1.9849404761904763`}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2367.148150835647, -0.6247933884297522}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2325.619235908706, -0.23000000000000012`}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2263.325863518294, -0.17893939393939395`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2076.445746347059, -0.36174242424242425`}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1495.0409373698826`, -2.1946}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2637.0860978607643`, -0.19641509433962262`}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2138.739118737471, 0.5496875}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1785.7433418584706`, 0.3070312499999999}]}, {
          RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1848.0367142488824`, -0.6189}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1744.2144269315293`, 0.21794871794871767`}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1931.0945441027648`, -0.046338028169014174`}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2014.1523739566474`, 0.5949999999999999}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2034.9168314201177`, -1.0353191489361702`}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1391.2186500525295`, 0.050952380952380964`}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1619.627682150706, 0.3102597402597403}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1630.9431449257102`, 0.1459722222222222}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{1349.6897351255882`, 0.2573333333333331}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2761.672842641588, -0.4567521367521367}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{913.6361283927058, 0.3518918918918919}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1536.569852296824, 0.4853846153846156}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1681.9210545411177`, 0.3228915662650603}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1017.4584157100588`, 0.3546511627906974}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2491.7348956164706`, -0.6265714285714287}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"vend\[EAcute]gt\[EAcute]r\"", TraditionalForm],
      PlotRange->{{0, 5000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 9], 0.1111111111111111], 0, 
           NCache[
            Rational[8, 9], 0.8888888888888888], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 9], 0.1111111111111111], 0, 
             NCache[
              Rational[8, 9], 0.8888888888888888], 0.5]}], 
          TagBox[
           
           DiskBox[{2935.84842275576, 1.2404437356919318`}, {580.398612017211,
             0.7227075197021824}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 18], 0.2777777777777778], 0, 
           NCache[
            Rational[13, 18], 0.7222222222222222], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 18], 0.2777777777777778], 0, 
             NCache[
              Rational[13, 18], 0.7222222222222222], 0.5]}], 
          TagBox[
           
           DiskBox[{2909.920841285953, 1.4340435691176026`}, {
            850.0784120791567, 0.9455312943066825}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[4, 9], 0.4444444444444444], 0, 
           NCache[
            Rational[5, 9], 0.5555555555555556], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[4, 9], 0.4444444444444444], 0, 
             NCache[
              Rational[5, 9], 0.5555555555555556], 0.5]}], 
          TagBox[
           
           DiskBox[{2109.8093617754766`, 2.037760760567664}, {
            861.1624282683197, 1.1581093381057332`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[11, 18], 0.6111111111111112], 0, 
           NCache[
            Rational[7, 18], 0.3888888888888889], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[11, 18], 0.6111111111111112], 0, 
             NCache[
              Rational[7, 18], 0.3888888888888889], 0.5]}], 
          TagBox[
           
           DiskBox[{1423.555285361652, 2.507197030037102}, {639.303664114135, 
            1.0581480564155648`}], "Ellipsoid"]}}, {{
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1344.1861456450529`, 5.061320754716981}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1625.527431942855, 4.804625}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{218.8210004538458, 4.1979999999999995`}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1750.5680036307665`, 1.9376562499999999`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1906.8687182406566`, 4.254117647058823}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2219.4701474604362`, 4.3301612903225815`}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1437.966574410987, 3.0578205128205127`}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2313.2505762263704`, 2.8174285714285716`}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1969.389004084613, 2.4660759493670885`}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1375.446288567031, 1.693947368421053}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2063.169432850547, 1.1271153846153845`}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2938.4534346659298`, 2.3204210526315787`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4751.541724140653, 2.1453535353535353`}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2469.5512908362603`, 2.458265306122449}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3407.3555784955993`, 1.8848275862068964`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2031.9092899285683`, 2.4515999999999996`}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{906.5441447373612, 2.2022222222222223`}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1406.7064314890088`, 2.4166037735849053`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2375.7708620703265`, 3.7166666666666672`}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1723.6495472257238`, 3.291052631578948}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1219.1455739571413`, 2.9126315789473685`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{832.3013052976637, 0.875263157894737}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1312.9260027230748`, 3.588571428571429}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2094.429575772524, 2.3835483870967744`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2344.510719148348, 2.5083495145631067`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2219.4701474604362`, 2.1693939393939394`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1437.9665744109873`, 2.2952222222222227`}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2281.990433304392, 1.1768627450980391`}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{242.43599972643563`, 0.33909090909090944`}]}, {
          RGBColor[0.7260841049382717, 0, 0.2739158950617283, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1094.105002269229, -3.1652499999999995`}]}, {
          RGBColor[0.6275115740740741, 0, 0.3724884259259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1516.116931715932, 2.2620754716981133`}]}, {
          RGBColor[0.5575925925925925, 0, 0.44240740740740747`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3469.8758643395563`, -0.3353475935828877}]}, {
          RGBColor[0.39545524691358025`, 0, 0.6045447530864198, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3126.0142921977977`, 0.8629813664596271}]}, {
          RGBColor[0.2805111882716049, 0, 0.7194888117283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3438.6157214175773`, 0.8084076433121019}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{750.2434301274715, 1.2022580645161285`}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{562.6825725956037, 2.707}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2500.811433758238, -0.7321348314606743}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2340.2124494965674`, -1.1867878787878785`}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1384.8243314436158`, 2.3056338028169012`}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1211.3305382266467`, 2.686458333333334}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1874.5181052167313`, 2.6065217391304345`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4993.377287246578, -0.054457831325301284`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3719.9570077153794`, 0.15161073825503354`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3970.038151091204, 1.0299248120300752`}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2938.4534346659298`, 0.6838749999999998}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4751.541724140652, 0.5262424242424243}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3157.2744351197753`, 0.7473118279569894}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3032.2338634318635`, 0.26685950413223136`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4095.0787227791147`, 1.2871666666666666`}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3548.026221644515, 0.5047435897435896}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3063.4940063538415`, 0.04377777777777751}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3613.6725217806365`, 0.585185185185185}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2750.892577134062, 0.36783333333333346`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4917.0365984334985`, -0.5911299435028249}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3313.575149729666, -0.18596491228070178`}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3610.5465074884282`, -0.10222222222222209`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4063.8185798571367`, -0.20202247191011272`}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4095.0787227791147`, 0.11886363636363638`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2844.673005899996, 0.752887323943662}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1938.1288611626344`, 1.323981481481481}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2219.4701474604367`, 0.3846250000000002}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2156.94986161648, 0.9865753424657532}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3188.5345780417533`, 1.5239285714285717`}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2532.0715766802164`, 1.0802721088435376`}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2969.7135775879083`, 0.7553370786516855}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2907.1932917439517`, 0.7063999999999999}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2907.1932917439517`, 1.3284558823529413`}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1156.625288113185, 1.082741935483871}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{875.2840018153832, 0.9670370370370373}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1344.1861456450529`, 2.4469523809523803`}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1625.527431942855, 2.2424}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1094.1050022692293`, 3.2745238095238087`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{969.0644305813172, 2.846268656716418}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{820.474551225494, 2.950114942528736}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{781.5035730494494, 3.694788732394365}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1375.446288567031, 3.795357142857143}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1062.8448593472513`, 2.8684466019417476`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1406.7064314890092`, 2.830380952380952}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{750.2434301274715, 3.1879661016949155`}]}, {
          RGBColor[0.5463175154320987, 0, 0.4536824845679013, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{690.244123551429, 2.393617021276596}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{781.5035730494494, 1.9849019607843135`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1219.1455739571409`, 3.5661194029850747`}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1062.844859347251, 3.4954022988505744`}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1156.6252881131852`, 3.210140845070423}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{844.0238588934054, 3.0874358974358973`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{312.6014292197798, 4.324761904761904}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{593.9427155175815, 4.71625}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1031.5847164252734`, 4.601190476190476}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{281.3412862978018, 4.8705}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{593.9427155175816, 4.758}]}, {
          RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{312.6014292197798, 5.421000000000001}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{656.4630013615374, 5.8293103448275865`}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1875.6085753186785`, 3.2697777777777777`}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1779.595279201179, 4.586129032258065}]}, {
          RGBColor[0.5811651234567902, 0, 0.41883487654320983`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{218.8210004538458, 2.98}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{468.9021438296696, 5.109411764705882}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{750.2434301274715, 4.565714285714286}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 4.385173913043479}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{562.6825725956037, 4.598214285714286}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}]},
    {
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"kisterem\"", TraditionalForm],
      PlotRange->{{0, 7500}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 6], 0.16666666666666666`], 0, 
           NCache[
            Rational[5, 6], 0.8333333333333334], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 6], 0.16666666666666666`], 0, 
             NCache[
              Rational[5, 6], 0.8333333333333334], 0.5]}], 
          TagBox[
           
           DiskBox[{4726.148157202322, -0.9756364673295677}, {
            945.7347535018135, 0.3707530679370617}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 3], 0.3333333333333333], 0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0.5]}], 
          TagBox[
           
           DiskBox[{3315.551125646764, -0.8637013867884863}, {
            1243.416892470389, 0.6469059554245943}], "Ellipsoid"]}}, {{
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1896.1984407882399`, -0.45094339622641516`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2293.0771842090335`, -0.6003750000000002}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{308.6834671050623, -0.4439999999999998}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2469.467736840498, -1.15578125}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2689.9559276298282`, -0.5999999999999998}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3130.932309208489, -0.8388709677419356}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2028.4913552618382`, -0.9376923076923079}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3263.225223682087, -0.735}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2778.15120394556, -0.7193670886075952}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1940.2960789461058`, -0.6507894736842106}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2910.4441184191587`, -0.8128846153846158}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4145.177986839408, -1.2898947368421052`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6702.8409999956375`, -1.788}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3483.7134144714173`, -2.102551020408163}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4806.642559207398, -0.779298245614035}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2866.3464802612925`, -0.5369333333333333}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1278.8315065781153`, -0.6100000000000002}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1984.3937171039718`, -1.1052830188679246`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3351.4204999978188`, -1.1092857142857147`}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2431.4947706489934`, -1.2698214285714287`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1719.8078881567756`, -0.9107894736842105}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2160.7842697354363`, -0.8761643835616437}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{4560.955718042141, 1.0816161616161617`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1174.0996159531833`, 0.7248275862068967}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1852.1008026303737`, -1.7544444444444445`}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2954.5417565770254`, -1.3162365591397847`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3307.3228618399535`, -2.4393203883495147`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3130.932309208489, -1.1023232323232324`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2028.4913552618377`, -0.9657777777777778}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3219.1275855242206`, -0.7441176470588234}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{341.99635680041894`, -0.9353846153846154}]}, {
          RGBColor[0.7260841049382717, 0, 0.2739158950617283, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1543.4173355253115`, 0.1760526315789474}]}, {
          RGBColor[0.6275115740740741, 0, 0.3724884259259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2138.735450656503, -0.7776415094339624}]}, {
          RGBColor[0.5575925925925925, 0, 0.44240740740740747`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4894.83783552313, -0.26459893048128336`}]}, {
          RGBColor[0.39545524691358025`, 0, 0.6045447530864198, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4409.763815786605, -0.7408695652173912}]}, {
          RGBColor[0.2805111882716049, 0, 0.7194888117283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4850.740197365266, -0.011464968152866224`}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1058.343315788785, -0.583548387096774}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{793.7574868415886, -0.7125000000000006}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3527.811052629283, -0.003089887640449502}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3301.259436593234, 0.38808641975308655`}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1953.5253703934532`, -1.0224324324324323`}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1708.7834786173091`, -0.47879999999999995`}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2644.319999768756, 0.5908661417322834}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{7043.990340936468, 1.0637951807228916`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5247.618940786058, 0.34604026845637575`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5600.400046048988, -0.6757142857142858}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4145.177986839408, -0.5393749999999999}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6702.840999995638, -0.9356969696969699}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4453.861453944471, -0.9548387096774195}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4277.470901313007, -1.206198347107438}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5776.790598680452, -1.2805}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5005.081930917816, -1.5467741935483872`}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4321.568539470872, -1.704722222222222}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5097.68697104929, -2.0366875}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3880.592157892211, -1.2315469613259666`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6936.2990843608395`, -1.2567428571428572`}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4674.3496447338, -0.9214912280701756}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5093.277207233487, -0.940888888888889}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5732.692960522585, -1.0030898876404495`}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5776.790598680452, -0.6950568181818183}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4012.8850723658097`, -0.41077464788732404`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2734.053565787694, -0.46361111111111103`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{3130.932309208489, -0.3711250000000001}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3042.7370328927573`, -0.45135135135135135`}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4497.959092102336, -2.584999999999999}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3571.9086907871497`, -0.4654999999999999}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4189.275624997274, -0.8785393258426966}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4101.080348681542, -0.6073333333333333}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4101.080348681542, -0.7831617647058825}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1631.6126118410436`, -0.7143548387096775}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1234.733868420249, -0.9144444444444444}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1896.1984407882399`, -1.3407619047619048`}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2293.0771842090344`, -1.3186666666666667`}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1543.4173355253115`, -0.9225}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1367.0267828938477`, -0.9034328358208955}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1157.4160095167608`, -1.1366666666666667`}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1102.440953946651, -0.6407042253521126}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1940.2960789461063`, -0.9269047619047621}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1499.3196973674453`, -1.033106796116505}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1984.3937171039718`, -1.5775238095238093`}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1058.3433157887848`, -1.6989285714285711`}]}, {
          RGBColor[0.5463175154320987, 0, 0.4536824845679013, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{973.704300614833, -0.5970212765957448}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1102.440953946651, 0.27274509803921576`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1719.8078881567758`, -0.9883582089552239}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1499.3196973674455`, -0.662873563218391}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1631.6126118410436`, -0.8683098591549295}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1190.6362302623832`, -0.7853846153846157}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{440.9763815786604, -0.6804761904761901}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{837.8551249994547, -0.93859375}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1455.2220592095794`, -1.5388372093023257`}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{396.87874342079436`, -0.7385000000000002}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{837.8551249994547, -0.5837777777777776}]}, {
          RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{440.97638157866055`, -0.6439999999999998}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{926.0504013151868, -0.5613793103448278}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2645.8582894719625`, 0.09955555555555541}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2510.415543701379, -0.4203125}]}, {
          RGBColor[0.5811651234567902, 0, 0.41883487654320983`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{308.6834671050623, -0.4466666666666666}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{661.4645723679906, -0.4517647058823529}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1058.343315788785, -0.3771428571428572}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{881.9527631573208, -0.4626086956521737}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{88.19527631573209, -1.105625}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{0., -1.7611428571428571`}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{352.78110526292835`, -1.0137735849056604`}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{440.97638157866044`, -0.5740000000000002}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{573.2692960522585, -0.5863157894736839}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{264.58582894719626`, -0.3912500000000003}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 1.5760526315789476`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{793.7574868415887, -0.4682142857142856}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{881.9527631573208, -0.6264285714285714}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{881.9527631573209, -0.6368055555555556}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Oktopusz\"", TraditionalForm],
      PlotRange->{{0, 7500}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 18], 0.05555555555555555], 0, 
           NCache[
            Rational[17, 18], 0.9444444444444444], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 18], 0.05555555555555555], 0, 
             NCache[
              Rational[17, 18], 0.9444444444444444], 0.5]}], 
          TagBox[
           
           DiskBox[{4849.1993942874, -0.3274074074074074}, {
            117.27514214259352`, 0.3472679969827267}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[2, 9], 0.2222222222222222], 0, 
           NCache[
            Rational[7, 9], 0.7777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[2, 9], 0.2222222222222222], 0, 
             NCache[
              Rational[7, 9], 0.7777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{4177.406835515713, 0.6178272406077876}, {
            1134.811359904564, 1.5399923093214785`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[7, 18], 0.3888888888888889], 0, 
           NCache[
            Rational[11, 18], 0.6111111111111112], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[7, 18], 0.3888888888888889], 0, 
             NCache[
              Rational[11, 18], 0.6111111111111112], 0.5]}], 
          TagBox[
           
           DiskBox[{3885.1582123278763`, 0.34663515648781856`}, {
            840.384851892684, 1.57407016972206}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 9], 0.5555555555555556], 0, 
           NCache[
            Rational[4, 9], 0.4444444444444444], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 9], 0.5555555555555556], 0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0.5]}], 
          TagBox[
           
           DiskBox[{3100.1629878720196`, 0.8234640129450159}, {
            1045.236840930401, 2.5888649424066474`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[13, 18], 0.7222222222222222], 0, 
           NCache[
            Rational[5, 18], 0.2777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[13, 18], 0.7222222222222222], 0, 
             NCache[
              Rational[5, 18], 0.2777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{2229.3522382753017`, 1.6280787564599617`}, {
            738.427577261007, 2.7437577751901916`}], "Ellipsoid"]}}, {{
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2716.8152958222563`, 1.4036842105263156`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3127.496677748877, 0.377878787878788}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3822.4959394708494`, 0.5659322033898305}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4391.131699061554, 0.19138888888888894`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3696.132437339582, 0.13659259259259268`}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3727.7233128723988`, 0.9477777777777779}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3759.314188405216, 0.5257142857142857}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3411.814557544229, 1.5881632653061228`}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4834.569567843193, -0.2179999999999996}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{7171.128745949444, -0.060937500000000366`}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6570.902110825924, 0.6371428571428569}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5022.949209717893, 1.576}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4896.585707586625, 1.5116129032258068`}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4896.585707586625, 1.762}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4714.280030032642, 0.5304166666666666}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2306.1339138956364`, 0.11285714285714261`}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6539.311235293107, -1.379999999999999}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2527.2700426253555`, -0.4666666666666662}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6002.266351235217, 4.262857142857144}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3380.223682011412, 3.544705882352942}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3443.4054330770464`, 1.5116923076923074`}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4580.6769522584555`, -0.08769230769230801}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{3553.973497441877, -0.8236000000000001}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1232.0441457798609`, -1.076666666666666}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4833.403956520991, 0.09640000000000072}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4675.449578856907, 2.9577777777777783`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6002.266351235217, 1.4291304347826093`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6207.607042198528, -0.3264999999999998}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3885.6776905364836`, 3.5191304347826087`}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4821.845889399108, -2.20448275862069}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1347.8773560668944`, -3.7937500000000006`}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4608.94247247202, 1.161851851851852}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3980.450317134934, 3.2724999999999995`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4738.631329922541, 0}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4959.767458652259, -0.6548148148148148}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4991.358334185075, 3.856315789473684}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2116.588660698735, -4.363076923076922}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3885.6776905364836`, -0.5311666666666668}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4327.949947995921, 3.25}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2811.5879224207074`, -1.9842857142857138`}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3380.2236820114126`, 2.9519999999999995`}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3064.314926683243, -3.6665217391304346`}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3317.0419309457784`, 2.6500000000000004`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2785.262192810065, -3.926315789473684}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1705.9072787721145`, 0.3733333333333335}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5117.721836316343, -3.75}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4233.17732139747, -1.8649999999999995`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3793.1615550475444`, -1.7778571428571426`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1642.7255277064808`, -4.5840625}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1654.0079832539811`, -3.366}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4271.086372036815, 3.6999999999999997`}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2843.178797953525, 0}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2590.4517936909892`, 0}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1684.5369806175959`, 0}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2653.6335447566225`, 4.1425}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2590.451793690989, 0}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1642.7255277064808`, 0}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2495.6791670925377`, 0}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1769.0890298377487`, 0}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2843.178797953525, 0}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2622.0426692238057`, 0}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2021.816034100284, 0}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2400.9065404940875`, 7.32}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3317.0419309457784`, 5.773333333333333}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1958.63428303465, 1.0199999999999996`}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2306.1339138956364`, 2.753333333333333}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3759.3141884052147`, 0.534}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1522.6802006817993`, -0.2777777777777778}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{1516.3620255752132`, 7.68}]}, {
          RGBColor[0.7866145833333331, 0, 0.21338541666666688`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3183.658234251707, -0.5499999999999989}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1326.8167723783113`, 8.950000000000001}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{694.9992617219725, 6.620000000000001}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2432.497416026904, 0.13952380952380952`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2362.546191632793, 0.06973684210526358}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{947.7262659845081, 1.7594736842105263`}]}, {
          RGBColor[0.6118634259259258, 0, 0.3881365740740742, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{442.2722574594372, -0.0163636363636365}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2306.1339138956364`, 6.2620000000000005`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2021.8160341002838`, 6.25}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1579.543776640847, 7.354193548387096}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{663.4083861891557, 7.406666666666666}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1074.0897681157758`, 3.601818181818183}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Lahmacun\"", TraditionalForm],
      PlotRange->{{0, 7000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[2, 9], 0.2222222222222222], 0, 
           NCache[
            Rational[7, 9], 0.7777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[2, 9], 0.2222222222222222], 0, 
             NCache[
              Rational[7, 9], 0.7777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{3819.629435897069, 1.7117209057516922`}, {
            1451.549536496152, 1.4296961901433687`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[7, 18], 0.3888888888888889], 0, 
           NCache[
            Rational[11, 18], 0.6111111111111112], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[7, 18], 0.3888888888888889], 0, 
             NCache[
              Rational[11, 18], 0.6111111111111112], 0.5]}], 
          TagBox[
           
           DiskBox[{3897.9120169630687`, 0.11773782314172639`}, {
            931.0056274885048, 1.0657980682962258`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 9], 0.5555555555555556], 0, 
           NCache[
            Rational[4, 9], 0.4444444444444444], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 9], 0.5555555555555556], 0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0.5]}], 
          TagBox[
           
           DiskBox[{2474.0697688453592`, 1.0660241223157747`}, {
            1009.9638712660897`, 1.3379634598543022`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[13, 18], 0.7222222222222222], 0, 
           NCache[
            Rational[5, 18], 0.2777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[13, 18], 0.7222222222222222], 0, 
             NCache[
              Rational[5, 18], 0.2777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{2549.4739113174746`, 1.3981803599659106`}, {
            952.9980997678373, 1.2896640761520748`}], "Ellipsoid"]}}, {{
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4276.522909090499, 0.8467999999999999}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4660.313426572979, 2.1462745098039218`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3207.3921818178737`, 0.28178571428571414`}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1096.5443356642427`, 0.20333333333333314`}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1096.5443356642302`, 0.6814285714285717}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6524.4387972021705`, 2.6957377049180327`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4331.35012587371, 1.3609375}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2933.256097901816, 2.0415094339622635`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3700.837132866777, 1.917894736842105}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3481.2366316021157`, 1.8045833333333334`}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1535.1620699299222`, -1.3744444444444441`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3236.1764706290896`, -0.7956122448979595}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4441.004559440133, 3.1528000000000005`}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3234.8057902094797`, 1.8384210526315787`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4441.004559440133, 2.392857142857143}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3543.2088846150446`, 0.18168674698795148`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4303.936517482104, -0.10709677419354828`}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1826.4750350533723`, -1.42625}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3179.9785734262687`, -1.8392857142857146`}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1870.978772727093, 3.605081967213115}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4015.0115132495375`, 1.7215217391304347`}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4194.282083915681, 2.1729999999999996`}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3892.732391608018, 1.568666666666666}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 4.950000000000001}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1206.1987692306534`, 4.622424242424243}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6277.716321677719, 5.00958904109589}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5373.067244754729, 5.11804347826087}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4413.590951048527, 3.8874999999999997`}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5345.653636363122, 3.565909090909091}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5153.758377621882, 3.8241025641025645`}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2220.5022797200663`, -1.0470588235294118`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6387.370755244141, 4.934675324675325}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3755.664349649989, 0.16038834951456327`}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4002.3868251744407`, 0.6653571428571426}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3783.0779580415947`, -0.42290322580645173`}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4386.177342656922, -0.11948717948717981`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{356.37690909087485`, 0.4449999999999994}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1288.4395944054706`, 0.157916666666667}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6387.370755244141, 0.8604210526315792}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5674.616937062392, -0.18141176470588222`}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5071.517552447065, -0.368918918918919}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4303.936517482104, -0.37727272727272754`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4303.936517482104, -0.7259420289855071}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{253.4164961782114, -0.14874999999999994`}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1562.5756783215281`, -0.32142857142857145`}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5263.4128111883065`, 1.1013953488372092`}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4057.2140419576526`, 0.3990384615384617}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5098.931160838671, 0.2176744186046514}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4490.083761560606, 0.05589743589743575}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{849.8218601397786, -1.514285714285714}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 0.14222222222222222`}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -0.07259259259259249}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3947.55960839113, 0.6162222222222224}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3125.1513566430567`, -0.26578947368421063`}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2796.1880559437873`, -0.9419512195121948}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3097.7377482514503`, -0.3367441860465116}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2576.8791888109413`, -1.2299999999999995`}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3015.4969230766333`, 1.3200000000000003`}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3070.324139859845, 0.6670312499999993}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{959.4762937062014, 1.7520833333333332`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3289.633006992691, 1.376551724137931}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3125.1513566430563`, 1.6232258064516125`}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3070.324139859845, 0.2856250000000007}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2988.083314685028, -0.41129032258064585`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2741.360839160576, -0.47021739130434764`}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1973.7798041956146`, -1.4475675675675679`}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3481.5282657339308`, -0.16644444444444426`}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2302.743104894884, 0.7959999999999992}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2549.4655804193353`, 0.775394736842105}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2659.1200139857588`, 1.2240909090909093`}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2686.5336223773643`, 1.151290322580645}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1836.7117622375856`, 1.7116666666666678`}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2138.2614545452493`, 1.131428571428572}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2153.200331028271, 0.3329545454545453}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{1781.8845454543746`, 0.36722222222222206`}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3646.009916083566, 3.537272727272727}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1206.1987692306534`, -0.7016216216216216}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2028.6070209788263`, 1.2661538461538462`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2220.5022797200663`, 2.5001666666666673`}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1343.2668111886821`, 1.7870000000000004`}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3289.6330069926908`, 6.181200000000001}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1973.7798041956148`, 2.893414634146341}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2659.1200139857588`, 3.203673469387755}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{794.9946433565672, 1.3092000000000001`}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2878.4288811186047`, 4.282253521126761}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9271868690539885`*^9},
 CellLabel->
  "Out[1051]=",ExpressionUUID->"b8e25e39-1f56-4a34-ad0c-cd06210310ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\dbu_2.png\>\""}], 
   ",", "alma"}], "]"}]], "Input",
 CellChangeTimes->{{3.9271868720714436`*^9, 3.927186887143815*^9}},
 CellLabel->
  "In[1052]:=",ExpressionUUID->"85ff1c99-8570-4497-ae47-b73629a6c9ca"],

Cell[BoxData["\<\"C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\\
kazankontroll-dashboard\\\\analysis\\\\\\\\dbu_2.png\"\>"], "Output",
 CellChangeTimes->{3.927186902123172*^9},
 CellLabel->
  "Out[1052]=",ExpressionUUID->"19fb043e-8800-45d2-9d7e-8a041e317193"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"binWidth", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binStep", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dataToBin", ",", "binRange"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dataToBin", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Mean", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"NormalizeDate", ",", "seasonDays"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "/", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                "}"}], "\[IndentingNewLine]", "&"}], ",", 
              RowBox[{"roomHeatVsTempDiffDaily", "[", 
               RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"NumberQ", "[", 
             RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"binRange", "=", 
         RowBox[{"MinMax", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "dataToBin", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"Select", "[", 
            RowBox[{"dataToBin", ",", 
             RowBox[{
              RowBox[{"Between", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"bin", "-", 
                   RowBox[{"binWidth", "/", "2"}]}], ",", 
                  RowBox[{"bin", "+", 
                   RowBox[{"binWidth", "/", "2"}]}]}], "}"}]}], "]"}], 
              "&"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"bin", ",", 
            RowBox[{"binRange", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"binRange", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "binStep"}], "}"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "\[IndentingNewLine]", "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.926871335054269*^9, 3.9268715546107144`*^9}, {
  3.926871606655013*^9, 3.9268716081577697`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"699bc245-6164-4d5d-86f8-53f6b397e77a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -6361.01574906418}, \
{-2.052667824074074, -41952.377115793344`}, {-0.7354195601851851, \
-18922.819128251944`}, {0.010140625000000009`, 4282.895535709975}, {
        0.8263213734567901, -3316.18930868876}, {
        2.0125133547008547`, -10878.473791127788`}, {
        3.1016729797979794`, -7403.548600704237}, {4.1239267676767675`, 
        11007.272440473003`}, {5.075439814814815, 13109.638065938865`}, {
        5.729696180555556, -5226.941504822825}, {
        7.419729166666667, -3131.0148402501427`}, {
        8.072326388888888, -4507.797837707467}, {
        8.930975694444445, -7446.213464065314}, {10.130849116161615`, 
        16609.238960865132`}, {10.998928571428573`, 12430.753046894415`}, {
        11.91348263888889, 4000.4160298671304`}, {
        12.91978298611111, -1802.320064100093}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-41952.377115793344`, 16609.238960865132`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, 
        25348.536649147474`}, {-2.052667824074074, 
        14509.23413205131}, {-0.7354195601851851, 3765.542217929054}, {
        0.023391203703703713`, 12515.455592813812`}, {0.738798225308642, 
        16482.378382795534`}, {2.0249045138888886`, 4412.444166371448}, {
        3.1016729797979794`, 10282.820814596906`}, {4.1239267676767675`, 
        10869.101216197772`}, {5.10468287037037, 289.2164585454421}, {
        5.6445454545454545`, 1281.8764095100216`}, {
        7.367936507936507, -7147.478451506906}, {8.129409722222222, 
        900.923392106138}, {8.930975694444445, 6538.983537635872}, {
        10.03892361111111, -1212.810737329947}, {
        10.945060763888888`, -1922.7232684491976`}, {11.948962191358026`, 
        1534.4399195431292`}, {12.91978298611111, 
        5188.605991010387}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-7147.478451506906, 25348.536649147474`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, 6469.08695872214}, {-2.052667824074074,
         6311.339866546249}, {-0.7791180555555555, -11940.520969909892`}, {
        0.08026681286549706, -8891.857696968349}, {
        0.8451354166666667, -8782.452666400392}, {
        1.9692681623931623`, -12994.400880650206`}, {3.2600315656565653`, 
        1193.067486902608}, {4.117320601851851, 3499.1707119494026`}, {
        5.122540849673203, 1789.478174741552}, {5.776590277777777, 
        1805.5375422741506`}, {7.376199494949495, -3904.537471690866}, {
        8.137349537037036, 15352.088833089425`}, {8.869146412037038, 
        24182.129526932313`}, {10.03892361111111, 2258.5787983685686`}, {
        10.923595328282827`, -585.1799989332268}, {
        12.044934895833332`, -1137.5844568950147`}, {12.91978298611111, 
        1253.7242092049444`}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-12994.400880650206`, 24182.129526932313`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -8931.09866088283}, \
{-2.666938785422862, -29398.944838724485`}}], 
       LineBox[{{-0.09885824123084996, -29398.944838724485`}, {
        0.06632291666666668, -4817.2419175902805`}, {
        0.8451354166666667, -505.28893353961723`}, {1.9692681623931623`, 
        4714.132124344938}, {3.2600315656565653`, 580.0249226060776}, {
        4.117320601851851, 38354.26109472433}, {5.122540849673203, 
        30109.86611028615}, {5.776590277777777, -1192.298396240978}, {
        7.364586805555556, -4751.55701334719}, {8.148509615384615, 
        209.3946287456694}, {8.940616319444445, 1540.0926568078403`}, {
        9.989469696969696, 1846.6915279659197`}, {10.981319444444445`, 
        700.153264508404}, {11.997307098765432`, 2798.140581737962}, {
        12.91978298611111, 4298.636192309386}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-29398.944838724485`, 38354.26109472433}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -573.9850993377544}, \
{-2.052667824074074, 700.5025674186287}, {-0.7791180555555555, 
        3957.6856779278214`}, {0.0267404513888889, 16494.551705979353`}, {
        0.929734477124183, 15334.2805324852}, {1.9692681623931623`, 
        6651.647175844808}, {3.2600315656565653`, 6224.349376372781}, {
        4.117320601851851, 1517.9447458671505`}, {
        5.122540849673203, -190.42274397674854`}, {
        5.776590277777777, -8016.426212048302}, {
        7.376199494949495, -18244.247812846927`}, {
        8.137349537037036, -9612.282930243267}, {8.839542297979797, 
        1536.5880310549155`}, {10.224454861111111`, 7255.828506041442}, {
        10.986610576923077`, -1020.9878395808341`}, {
        11.753060515873017`, -1359.4574383125093`}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     11.753060515873017`}, {-18244.247812846927`, 16494.551705979353`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -14845.552769315827`}, \
{-1.9066765873015874`, 10955.904428814682`}, {-0.7581356837606836, 
        13106.08572288043}, {0.0027361111111111115`, -4035.7841218175463`}, {
        0.9257708333333333, -6141.727978891253}, {1.953881448412698, 
        4741.564615856002}, {3.1783541666666664`, 6988.35125860233}, {
        4.145381944444444, 3082.2834758588583`}, {5.046601307189542, 
        2634.578561031172}, {5.9104722222222215`, 305.679800320985}, {
        7.389985532407407, -951.0482067908939}, {8.154980468749999, 
        285.84728005393475`}, {8.806006944444446, 278.7755748324555}, {
        10.08182098765432, 422.4838400287395}, {11.124532828282828`, 
        394.50058092192717`}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     11.124532828282828`}, {-14845.552769315827`, 13106.08572288043}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -11685.877794091642`}, \
{-1.9066765873015874`, -7718.531165446213}, {-0.7581356837606836, \
-4455.20611140312}, {0.0027361111111111115`, -4264.655050931504}, {
        0.9257708333333333, -39254.44272995364}, {
        1.9968263888888889`, -50756.400559090536`}, {
        3.1802546296296295`, -3996.5039401177996`}, {
        4.117387820512821, -5364.471822069347}, {
        5.066743827160494, -5165.546815241433}, {
        5.879140624999999, -2701.344290025852}, {
        7.3858894230769225`, -144721.84889462602`}, {
        8.106848447712418, -111703.37360962942`}, {
        8.952627314814816, -610.3204721588066}, {
        10.077214209401708`, -712.7007911901412}, {
        10.986610576923077`, -1790.4305058830653`}, {
        11.877022569444446`, -1797.7510111774075`}, {
        12.906516203703703`, -1895.5766351075708`}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
      12.906516203703703`}, {-144721.84889462602`, 0}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.886701388888889, -12416.09679235684}, \
{-1.5959861111111109`, -36789.60395718005}, {-0.7964409722222222, \
-13077.435167501804`}, {-0.012694035947712417`, 6033.307468878477}, {
        0.8847938368055555, 13588.51923746808}, {1.9354629629629627`, 
        8045.821896366188}, {3.0773302469135806`, -12405.581172296348`}, {
        4.117029320987655, -11865.762556300018`}, {
        5.053093434343435, -512.5742714804967}, {5.6232291666666665`, 
        7283.5983966217655`}, {7.495873842592592, -3660.3645177241665`}, {
        8.06134548611111, -6191.97630867841}, {9.201646825396827, 
        7065.291593169115}, {9.816516203703705, 10052.578038188713`}, {
        10.756293402777777`, 1380.6971193495033`}, {
        12.14304861111111, -923.4190126004878}, {12.91978298611111, 
        467.6748915110759}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 12.91978298611111}, {-36789.60395718005, 
     13588.51923746808}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, 
        5495.805164684272}, {-2.104013888888889, 
        5846.4842086929275`}, {-0.5970442708333333, 8285.572089341682}, {
        0.1223676215277778, 7710.409601283356}, {0.8428146701388888, 
        300.3324587641828}, {1.960173611111111, -10246.807404525793`}, {
        3.386236979166666, 13379.785560685228`}, {4.178611111111111, 
        13470.15082293264}, {5.102046296296296, -3454.7259078218995`}, {
        5.749279513888889, -4472.557669760741}, {7.393429783950617, 
        2031.9221107598594`}, {8.1335202991453, 325.759463308195}, {
        8.92437789351852, 1080.4595856058183`}, {
        9.989469696969696, -1941.6887823430325`}, {
        10.856538194444443`, -5848.95027185224}, {
        12.109330357142856`, -2643.184861145815}, {12.91978298611111, 
        1172.516303881581}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-10246.807404525793`, 13470.15082293264}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9268714728253317`*^9, 3.926871557080282*^9}, 
   3.9268716103425198`*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"86e17d55-fcba-4b9c-9d5c-2abd05e11845"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"externalTempDaily", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"NormalizeDate", ",", "seasonDays"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
           "}"}], "\[IndentingNewLine]", "&"}], ",", 
         RowBox[{"roomHeatVsTempDiffDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"NumberQ", "[", 
        RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92687056895706*^9, 3.9268706873085356`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"7b8003e7-2657-4378-aa75-719d32bb36e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 13.53298611111111}, {-30060.2427424938, 
     26603.874470953855`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtVAs41FkUJ2RjVjJmpBivQY/dWBIp/mdq9fjY1JC82pVIHnnksTRFKkUy
JSFEDYZsyjMh/O/kkcn6PCNkaZTyfmvDrp0/e7/vfvc7995z7v2d8/sdNWcf
pusaERERR+Ek1orkYJud6pJQWVuqrRyRDZQY8YszC/LgXG2rX2eaC7c0cdtp
zzXAkF0XnykTCcJTD0FXHzZoMm9GaYyBmWjhBeYcZp5esPjSPwVGjpXSIqKl
gc/N/5EdlQCqLo9HdQNbMefM8S9d0lx4ryLcmBzAPbNE7Cp2fICqEIOp3PpZ
zMRb/DUjqhYcb7+a23JRDOjJD7WDNt5dtSuW8Iva67Yzk57BZZ9ff9nrOYRb
qBxWnLXKhPvl7/9Vre7BbnFYoa8js2HrikMvtk2j1qHqOQeoBB6POiyu61Lc
X/tIjCg3Mw3RvhqsbKPYRIBsJNQWpcdenujBhv1Cu0S9kqF9rfG5R3EjGDlb
7hptfyykEQmJk4HxAjdaD7cdHPIlHPIrZQGCd7M6pxDc4RRWtxvIg0dq9FBP
bRN61CYMADKg/Cpbv9p4AWY9BHYt9eJQccZBolInEsbW61kHPZYCpoGp9EF+
MPCoXjyqxTeMcps3EzVRDRmxQoTnZvFureu1JqU8QIZ5WmnxA1jn0y47gVwh
0CKEGZ7fAAfuFj+g2nLg78G3NUVSVEh9y/1Eki5C/SknyE3GFChlzi3tu38e
7FsOIcMwSRD5f2R/H9ANYqpgbVSikKfPXsWjqQCBvSNXMMN0FK+cteMF3oxx
HjxRyUrmIsuFTMuFj8N4TlL+ybzIYsQgAvRLIBNHI3IHoxoVVbd/mleQRHhg
3hda0hz4L14lxSt34T9JXDjr6JODMokA5cO44gHv9oe51wAReL34uJTOWGUQ
NwmUvhSHH0kZwDTv2P3eoMJBmb4mUp0D85hnkRZuOs5G4isEmcAnov0TXMbS
0D3ToTjTw2QwsPnKsHbKQmFEAe7NYs31e6nxNneQbsKSM18nHw80e9zGoEeA
4rY9FifHB3Fj9uevVfW5q7aMBGo1lwi1EM1EnRnEg1PYM13DM4tLg/AnUaCS
72Ct0RuF65btyDy04KPCDA0whZuHCy60I9cbOQ1jy/KwWTaQ79TIRXTRvork
d/Jg5e+8fMglFs4rvfZTCpOFgJx27wazm3CUyB+9F1uTPqug6dCIfIX03b6p
DS9e514YlZyCmEK5jHyQhtwIe99+Bw66IER71oIMzR/UeL4ucSvlp/RqQQDV
f9PBU3cRUX4anw4nrPzOLQ0XoI4aIYHl1UBP3UvOTW96VU9ABz4JKxpo4qEV
PsVogk9GCOuafQYivr/+DzWwS/024b87AX2al1TcZqUKxeMCQfpkIiLUUeFB
hYSkqZ6z9hxY+e8+VaAEBElWrn0FK3g3qoKP2+jJ36wSoPwfxvU3rarAwVlu
ixIdq/k/TYfTo61hzpNZaJToB/pboOwZaWHINRwR7sH22nAl0Xg514ODyJON
T6L2aEOTSYjYUEYipO5qdheLV4MCeoBu/RwXnjtJlzjt3wSkUx0k0ToWOA+f
X7y6RAWpXQKBnnojhNjslJts0YLlcleX0NpC5E0Qok8dHNSexOqyE1f7TxId
njIvdTMX04BUIgxYowH9XD/L8CwWlBGCOkoH//zAKffQCNgrJWTEMS24QS5R
j6q6CtOEfm2V4V0N2/p4dwty4eskLKVTQKAk+TDx5yhokLFK7GlSBBbEb2g1
j4BWodzyujWgrSz4vRSEQyXRXwVbwD2GtivVkwdHNgsJX6IMvoatrKLxBlTx
UjhOq0NPEvWHDd4PQOcFVn/00lbYved26XRnOrAHjNgDsttB9DhZ7jMlAAj3
IyNbIV+Hoz1Wx4P/APkIyVQ=
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     13.53298611111111}, {-12851.713319372793`, 13977.684766962528`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9VAk0VXkYt44ZWfMQeTzeszxtVKoR7k+rJpUkkdGCTg1la5mKFtE2Sqls
qfB4lhae0ViK3pVnepIsvQopIlqELJnIMvcyZ/7n3HPP9z/n+3/f91s+Q68A
5x0yUlJS3tRH/4uvHnSdb6SAe7848xWl+dA8LxfaP8xAybQCszzvdFCRb2tD
M9Hts/22Zfc29EcaC92cvxLzez7yBjdI0Lm+UP9k5BSs2mPgaC5fC5ZP5meL
/XVEe7y6q3F/JpoMqIsvbcLReE9J9nAaHhyy6r0tHiB6Hf7I1mbn4dcLD7+a
hcpiC0+iam3lOxkXjwgfuM6P866owvGALWts/D4Ku83j9VKl0xB/r2mMVfaK
CAsJeFSVngXuRMJrQhIwaqBSzYcW3b/v34Titt89VsTk4ezO5WzpZhHROqCe
JdkfhPI8XvTxnldEeLGfjY7JAUh+sN6TfLmTWMO20W2SqSVv0ABcVkFI7bme
WblCeAjkPQQlahBKq7u2tkXjYsqfZRIrBhLcv6geXJSM5GfUA1CBkREzYaUR
DwO+re61Yjl8tZQShjsGoUt1rsuBTEXUN4oHRdknUKq1u1TLcYhIHw7Irk6R
LU2NpibcMyB89WhFVKV6EciFOSY3YtoI7UuimAQVMfRPUggPqmMvm982trIA
3zqei/IUtVA0Y2uXffNLDJVf2jqz4TtxVPqiZ4TFQbQkbtKottYEO6OFody4
C5trHciFxxTwYqcM6oLfkjQ7RbPU8LzDq8yh5gAylPc1QpYF0YX1+ZWpF8mj
ue+0V68wRB9vaNkJ5dhJPMqmo8rfbzAqRUBO4GGsDan/jnsfJYhMBkbDTGuD
joQihpk+u0BYQ6z243rO9hOQ64bT1g2/+yRUSmtSHcurhj1dsEWelC1QaGCT
D5BXJmkf1FYgH0ep9Nlueo6938OVYpgNQvNCg7rTHnKleh/uhq1NbCNaw17I
c39IJ9MCbRVftg0S7r2ZC8ctE0m5CUH1CJVlpYdiVbPIK3YfL9ut0sDMKSWh
nKlp5DGasCsDxPL+1QKuQERaxI54VcwRCGWU7HR1gpyhY77Y0bO7Q8hneW5h
fgiejFXkyXMatrs/m4jIl6l0wV6i0/hWleswiSc0ofk/4ml/YJK6PInVNGD9
+tg+ujRZOzkXO05nVXaNM9BUU8EzlWSCI91cfLWeAWbXynmW5zciWO9RkN4x
NZxd7ha4OyIEE/6rGyUy7yx5c922kHSi8eK8JrjLxssLr7aQgZT8Z+g+Ezr8
5C9z6cx9OFN263w7Bc37S25mvydxmJp+l6MG5EmuhlFzKil0owj5h/U/P7Sc
NF+bIMzjiff+OAFJy0m/goMEu7C+0txUvBBRhmAY4mFXuynb5dqkP8HBtHf6
K/mhiZjQ53ljVO/SOfSwnwd6PNWbhqgXZ8h5icVk+6CCjvkGFq4+nRokVZIF
2m3Fvlr4Waa/8lnGBXym94OfHhoZ4/mRntGg2+V8Y0LJ9X50MvciKLT9jymx
8HZH+ZNTLv7w+hT8PdxHE+PL48q33yqdnH8JC0u2W2w13Bcziec0KmZGPHTV
uIR7o/anHtexYNnKOBNtqG4/wa83B1UbiQZrq5vkRP15ZvBpapKrcjxB0ukH
N5uCvJOmdC0ph6z5Tfb6AgtT2OQ4fVtzMg7XF1A3MYZYyxtQq5eLwV/bpuRv
W6qLWYf77ph3Z032N6KFa+q9t7vrEnHIdf7UL7UmmK2A7tz3+aQ/LbhmI0Qk
mFo8Z5dO7sMEDuqNNjIjn/ChlE89KGIjl9nzZlNtHIpogztxsNR6+qmd/Aj0
0fvDjYnOdva9r56fSJ+KObEjPE1EHkkxtrA5j0qVDXGvqnWgu+BDUcfsC6ij
7J3TyIa7J18cNPcySmg9tZrhSNJ6gebYaaydThkon4mK6JCa7sU5KL5PHW8j
hD676/L5hgBzCgix0xEuhq6En9vsdR1RbYui2tRmgHcuJKnQKxJ0+tpOLoyl
hjMkDnH4F9Vu9AA=
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     13.53298611111111}, {-15539.399420996166`, 17344.879385661887`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 13.53298611111111}, {-33945.64532772005, 
     36290.77103802802}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9VAs0VGkcV8jmmWaQx8wOhqQHrR421f2rrSHPkDxKVnosPRCtrFBYO8ex
smiTRChvxpgGLc1nxmtIXuMRtUjyKilSIrv3jj17z7nnnu879/v+/9/rr+11
0eHUSgkJCQ/8Jb5Vt4Odt+nIAJ2dP8I8dA9U4qRCZ76QQSOyeOhDazeaidXj
uTh8xMxkbDiXpJ7A5OEKanSsHLj59isr058imnfuG+OgDsx8LFv77zgOPP8W
35ge5o2zL3uG7SmGx1e2vy9snMVYEtoS9Qw2HIvnfzQIlQT5BmfHraSQ5XXV
Ii+xgHUq2FUIERc9bHb7jvPsrjuT5V3S4Naj50s0QT8WuY7Z78rPgg3iAy+w
XyhbzX40LAJVol+feiywO9YkcbAcRKt2nc9InMSs+n1vkbmrze8SgBIVIbB+
7ccUHT64s6TdWdVrIC7LRktJOgtu3GMLRNvJcGwowwOzKIOMTvwCUISmqVTr
kytLYNbnpWt7oxQ8HZ2I9d1/Fd4qfed0OVcWzvlMWdmNx0ON6rkaVet57Oxm
OSeTuUeQlYAjOD/Li1QbCRtOLQW0s0T/bvIwFt4y2+xHYQE1GmdwThkOR03y
OxI58Pl1V22ZrCpYPGZWOJ7hwnzdHyc2PVvAHIPOHxx6EAGDqUdJrbtUYDZm
mJH/0B/c2i3QznAZIPd2xTdnDADBfuXmNfCuP+ZGcGUE5CgE9oEkDUyKS/U8
G9korPSVmtVBbVAKeVq3INuIxHwINMEioV3bP/YVEvOhpwYS/z2uH3DBc8lA
MpIZL5KPhmTKgy3lvDbM53CKCkNzFOy+ZNt9eTXBU5oxMwT3AjAnCg5Koyde
7o2U+TwoE4hG5tRkEAddjVYwZsOlhUj5ZMoznhu5sTZ/gQNaY5xrtqnDWGJU
n40LaxBl++2R7Rmew2qPFs51T7GRlNgw73g8zGDkbVI9Sto7nrjXkgRXNQ81
V01wUTghWNIspnvaVd8yuw0Z31z0EhqxeNheN5Jc5hFQNzSzPj71mjexQYTt
JEUtrxWlUQRDNtRiho96soiC77EYEnNsE3kQnhCCcr+BPqNVplNkEVgRhM1Q
ocnTUquNNIZOxeQ1v/2HDFKWBXsYfj1AXzFQdbuXDNlUoZLpIV8I0Grw1wpf
AwUSDOffGTdAnKeOr9jip9FCp5y/kD3BF/0F5lpGWVnY2YL8cHtv1OjkZcak
Fn4/0A4OeJwmh+Tg/YGaho6fhRCCoz9rTYITUXeqWdfTEc8FF+QT7X99CDup
vNCHLQpqMk3xRYiwE1VIh4BNDbmmkQLUXVuWmUDWhjKpydk0Lh+J6QQ62IZQ
phZEwmV/xumBraOSuhSZgwh4SvnaUJd0VCdoXw4amZNRN3SkQQ4pf1s6oxUd
0MUB+6hCQlDepIegB70h8u+rBTn2cS7U0HJEtEv/TIGsMxeoHsxchLN9IVye
BtX3t5MLSn8Dr4mAhUhvFbBPq6tgkjKW8e+jwX09dUbCvgok5nMdDQJj5Voe
G7WhR1/Nf23qoIF3e8pkBCZa1vckHRoUku3LPfnL9U0M4NKn42+6AhIQcTzY
bT3sXjGhSw/rQqTplgKm2XoowvRHl8YroO0nybQdxuvB9rOCsmw6HxTxeOSo
64P/TZJ3HbUMpe3A/0jWBjmBpoZtuhAeespxPfdrwNJS/JE7RdNI3P+iKhgE
KYevLnoIV5y3rZ1u14ea+b7m7o156AJhyAEdyGzs/aGxbwTE8zCFDiG6o2G3
uQjkufiFtbrAoF7Ja3rZDpXEALCng7s6c7eoCcEHYr64UMDpdKgky12AvIVG
NxczVcBi9YNiuQwWNCs6/tnfqg69fIeN1gc40IHHv6RPF64VvKa7FCGoJvz2
0gBEHFNWqwcbbDXxgHEp0KlQ4jB8uRL9C6ib0I0=
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     12.441805555555556`}, {-37674.924912053095`, 36361.20790306893}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 12.100625}, {-7321.294538545578, 
     12737.073161680877`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 13.53298611111111}, {-20177.8689335059, 
     10294.162661566408`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwdU2k0nGcUNkNQW1EZR4uMNVQa0pDY6ruJpckRJIilIlF7rSEiOMHERE9s
EcRSjV1OpkfsOmL9XjuhJ0ztg2lsjaXIEGllktPvc895z/vjvs977/Pc56p5
hzv6UYWEhGyIQ97thTEuhupiYDbSd/b2EAuOZojc3T1QgN3ZiuNpiS8hXQt3
4wdTwfG3IS1BSR8Q2aDFGR5mm/Klq7nnIuymEQ8c32H7nIHsMtYKbFx5oZqc
Jgm29yKeOeq3wNwxX9bmzhIe9nPf5sflfuiMNXr7fHAPO8kvVldgVsG1zO53
OneF4RRVsKWDXqOFeSLid3CamxHfLl2s6zDfLsCvMpuk/ZNGgRF+3c48eA1X
Yva6MgKboKB17hO9h4u5M3ZKKZ1NoHsImMd6Os2PhA/XA43kE9SPJYsm0Gui
RiAlwFqDwuvFWg78JiQ9/oK+xvIsxjYXm3ISHsJdO9G4qGloac4GNrBKaWe7
dKFiUpAcGXA/5UQ1ES8Hj7ojHnUdstDGPj/TEFIAj8oaesaNFADr097i6VVD
6Z/EByAD1UyGQu3fe2gvaNF9bFAEhqXKRQrK2tA/n3/rHM2SANZnk3FnHIpQ
Fy2ki3bpP8zaCMQXZPegIotgGLqHP7XU5flYVAI6W6tdnLuEyRuZcH5fbgXV
ZELhfTmw0mRap4YvoH9XJ3obJWgQyfVX2fj+CTyTjpoFYTpMU6h3BNTnKKF+
WdHWRg34Ilwr09NJ6LB/LUX40Ua4oda/BRwOKh0OltfxacQOiDheAo094yv7
imIoS6PeRwoG0a0PTKlclRmcH2eZGpFTCpUkoHUdZ4iMGXbMPECI7D9kCFc2
7a4ZDR5Aym+a7tn/uoRVzcXm8qTLoPLmdxJTS/vYNdoFNU+tciRyaIBtvJ4+
43HMuQgeW6zlWFz8AjbuNTdSA3NRIino4z0sPU80vFmsFAzyBN5D+nV49tOw
KV+9bKT0tdklz61V3MvI0tP5fAdMVZAF3mIxxr7GJnFlaIQUmC0O/Cc3fOPl
qpEtKcCuKnzjP9HFcaxCmhRee+G0AkxtC92I9EhCkcoDEcqJsiAfYMMROpGC
DveB8xFrOn29lZJVBJO9hEEU1MBt7T1uF/gIis6M/iScqwabFyNCrf5ggPd6
5AemgAbBiZ/SUsIyINbFUH5nTBtWFufPheWzIIwkxFOHE0rYy/e3coFOrIPB
L5pwFamLSqf2gxTbS5LdqwHRN+tb5tO7UAs54MuaYJzhyk00jQJzCYLhFW0I
1i5juT7oRnzST24qEPvKoCTUKwx8h/TzBOVHQW5/M1KS6QfDMk753FdK8OJ2
pHzHGy5wLhAOmtWAmJqApD6VDegg+S3qgNW515ON+WmwRYYoHQoDa+VUy1eQ
/VfEANkqkOXCCLg/nwTtbUT4qMPJdlzSNJsB+s3Y4OV4XdjP5NzBKNHwcMn4
4ZKsHugWxmYG/OANJNx+QxfMzaYTXDIS4H9PZyjD
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 13.53298611111111}, {-20537.35658814484, 
     24306.94122980422}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9VHs4lGkUH8VmzZhszYwt0dCQsu3YMlFtfWeQ7eISldVNESqllGWxtZJu
o+s0tOUWRmMaRG4hfK+MNEqZaboIKVMekkqN2aKy35d9Os/zPu9z/jjnPed3
eS0Dd/kEj6FQKKuJQ97nqtq/sOvbML6YHsy3QzBj/anrg7YdGPNpvmPlnTxg
ndDf+z70Bpbvo+SnOalAsGXxNL1OOdb3KL9tomsdNJRkC/e/acPaIw4wClJz
QP3d/LBMUR+27Pwr1/tfLkMGk2ggosOaZSlsRkAprCsyWFdUYwKGFceKEkOy
4XRWcb2ax4D+Jj+ua7kUMu8RDYAOC9RqnaBUCtrQrjXKm/pwxiP8QUFqGuof
P3tVlNQIVrNKFuZSq1Ada0cdy/0j9vYSVWBolA1i4f5d/mFafAtPcl92VALI
sdAmI1mDjSQwgmTyXLA41OddofsBtM20aD2nTvjQfV9eYsSCq8IrumXMt+hj
w5mNP7UOY0XSQlFUSCZaq1yCHOPGQVaZIW8+R4Kkr+wjK2eZQJPNDVpPciLk
Gv/xGMaywdhk7iLHJwXw95XnpsvdLGH6+nUq4wrp6P71ZvCBumR8ZWPh6P7W
pkD5P9a8O2aNSxlw5+j+jQbVsZBsLvn5Kt6CUald7kG0TPAayvEaev4S1w0W
Swo0KcAnH3xqgGJocWwPRjqU1Ktf6EzHIaF94Rj5bDFEDCfQks1bcS3fcDjU
OQsQic8OBe5l3yq/bJuHpvSUxnumarAGttggXZQJOeELjR5qdFhmRvt7k9ou
0K+N4Q3kv8EVS3dSfJ3rIWlRr2jR0olQ09B6olt8G8WRhCVpMc0Ffe+KgH5k
f/ZToIJbhLsJcz0sEpJg0swF7hted+MBG2p+cZnaNJrTDZCQPisxVt4ID8Xk
gwNYqVeE2b7ve9FtktByQ2jzs9qbo/cALScBfG8BS0tfpFu4qFDwkUu3+kcI
fNJ13SuHryOOXmd1yiMGUBwin/kpL6I9Uxp3T4kzAcZ0B3EPG0fVKdG+DqrP
2J/2iw2vnK+FFSR+nA6MMj6Eec2tBcL9PX61m3wPjww88vtdvAt8KghFPKNC
rKdE3DaBwo8ltt/qPhEoA/57hPhxhPsRBP3L/sbXQHOeYMtnq285KS9mhw28
HrThCA7IgZSXhYIDSYH9fyeqVOiBnDAIwxLKlgx5m44pQV/hBQ7Y0TPC8Ihm
9FWvJ6zBrr2dt08tQy904ybNXMmGvXLzMBG/AEi3VYeyoDBNW7khpgYINHfG
0diwStYv2G18HAJf7hlOCGLC0EDMdkXK5dH9nNnADajz0OVK4SteP7LBIjTI
HeMpoeoz/3CTiqiPu+Ca69w4yt9mDjQnVcn9ZdfRK2L8Q3NsoeWlmwqishBZ
Hr12Ogyy9J/o1T5F6XNbto1NtgTOtrG1nMPFULaJWr7JZTKckagf48Zlo/N8
YsE57ulZvco8iPF1mPBWaQM1Q96rfboKYCcpoE4rKH4XVfnhr1RgBxGOOs+B
4LXxI31zpEArJxrKp4Esvts6vFQOlaRhV3DA9lwF12oCDu/I/8DPHOaoRrQH
Q1IgSME9+ymbCZ6MqZx5+hJ0i77yn7a7k6Bhq1lu+cEcUBH2LXw8DdL0Yo/E
42ehhtRHly0YCUK8FCACTzPCEOXmUE+/uN3J5RhUXyNisxX4Rh736I0WAvcq
dnPFvhnw2yNH3nbnZDipcTqpMbGDolOyo2B2Cshyz74Z0DGv50uYoxD+AwIY
hC0=
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     13.53298611111111}, {-24096.428047573656`, 27184.47049360942}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9268705918120365`*^9, {3.9268706335220146`*^9, 3.926870689626293*^9}, 
   3.926871234206482*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"6a18b9f9-ebd8-444a-b3c2-9d194b93fa36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Quiet", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]",
             "}"}], "\[IndentingNewLine]", "&"}], ",", 
          RowBox[{"roomHeatVsTempDiffDaily", "[", 
           RowBox[{"[", "room", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], ",", "1"}],
    "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.926872041789678*^9, 3.926872167213524*^9}, {
  3.926872247806225*^9, 3.9268722681409845`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"b4580477-c00c-42ca-8ba6-6d3d54b9c629"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
p+Tu3Xi4GiPOyyLKC/8DEE1+ww==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{544.8, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 11755.193730260262`}, {-4.5840625, 8.950000000000001}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268720206287203`*^9, 3.9268721449785013`*^9}, 
   3.9268723022600317`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"b755348a-4b51-4b54-a5ff-15b731e55e63"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["szimul\[AAcute]ci\[OAcute]", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 3.9266096544308543`*^9}, {
   3.926609698670888*^9, 3.92660970001445*^9}, {3.9266098156146207`*^9, 
   3.9266098168798327`*^9}, 3.926611286329875*^9, {3.926879537185534*^9, 
   3.9268795378881397`*^9}, {3.9273072933032255`*^9, 
   3.92730729493496*^9}},ExpressionUUID->"0cbbbcca-713f-455b-8835-\
eef88807c08e"],

Cell["\<\
- megn\[EAcute]zni azt is, hogy a nem outlierek k\[ODoubleDot]zti k\
\[UDoubleDot]l\[ODoubleDot]nbs\[EAcute]gek mib\[ODoubleAcute]l eredhetnek\
\>", "Text",
 CellChangeTimes->{{3.9271755201948752`*^9, 
  3.9271755323581886`*^9}},ExpressionUUID->"3a6b7edc-042a-45b8-90a1-\
dbd6539962a2"],

Cell[CellGroupData[{

Cell["egy szoba, egy nap", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.9273072915421944`*^9}},ExpressionUUID->"efa61af2-c2e6-40ee-b70b-\
93727a205332"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dayN", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"room", "=", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massOfAirInRoom", "=", 
   RowBox[{
    RowBox[{"roomAreas", "[", 
     RowBox[{"[", "room", "]"}], "]"}], "roomHeight", " ", 
    "airSpecificMass"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"externalWallArea", "=", 
   RowBox[{
    RowBox[{"roomExternalWallLength", "[", 
     RowBox[{"[", "room", "]"}], "]"}], " ", "roomHeight"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radiatorArea", "=", 
   RowBox[{
    RowBox[{"roomRadiatorLength", "[", 
     RowBox[{"[", "room", "]"}], "]"}], "radiatorHeight", " ", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomHeatCapacity", "=", 
   RowBox[{"massOfAirInRoom", " ", "airSpecificHeatCapacity"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"startTimeBin", "=", "4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"heatingStateStart", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"heatingStateDaily", "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", "+", 
         RowBox[{"roomToCycle", "[", 
          RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "startTimeBin", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomSetTemp", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"roomTempsDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}], "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomTempStart", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"roomTempsDaily", "[", 
         RowBox[{"[", "room", "]"}], "]"}], "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "startTimeBin", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomLowerBuffer", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"roomTempsDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}], "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomUpperBuffer", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"roomTempsDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}], "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"externalTemp", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{"externalTempDaily", "[", 
        RowBox[{"[", "dayN", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"roomTrueTemp", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"roomTempsDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}], "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"roomSetTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomSetTemp", "[", "t", "]"}], "-", 
      RowBox[{"roomLowerBuffer", "[", "t", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomSetTemp", "[", "t", "]"}], "+", 
      RowBox[{"roomUpperBuffer", "[", "t", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"externalTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"roomTrueTemp", "[", "t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{
      RowBox[{"24", " ", "60"}], "-", "5"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "LightGreen", ",", "LightGreen", ",", "LightGreen", ",", "Blue", ",", 
      "Black"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{
     RowBox[{"roomNames", "[", 
      RowBox[{"[", "room", "]"}], "]"}], "<>", "\"\<, \>\"", "<>", 
     RowBox[{"DateString", "[", 
      RowBox[{"NormalizeDate", "[", 
       RowBox[{"seasonDays", "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.9271247040335836`*^9, 3.927124718200671*^9}, {
   3.92712493085896*^9, 3.9271249465766068`*^9}, {3.927125286569057*^9, 
   3.927125288923134*^9}, 3.927125327312951*^9, {3.9271256375812626`*^9, 
   3.9271256390141068`*^9}, {3.9271258888623295`*^9, 3.9271258896531105`*^9}, 
   3.927125928020767*^9, {3.9271262285406046`*^9, 3.9271262391844645`*^9}, {
   3.9271270820683565`*^9, 3.927127082347931*^9}, {3.9271274468319273`*^9, 
   3.9271274589233217`*^9}, {3.9271275136661396`*^9, 3.9271275169095*^9}, {
   3.927127715411962*^9, 3.927127725905908*^9}, {3.9271277665984583`*^9, 
   3.9271277756533995`*^9}, {3.927128974145183*^9, 3.9271289744916897`*^9}, 
   3.927130116211074*^9, {3.927130150139742*^9, 3.9271301502994523`*^9}, {
   3.9271304275905724`*^9, 3.9271304279202375`*^9}, {3.927131054253414*^9, 
   3.927131060250697*^9}, {3.9271312694092026`*^9, 3.9271312739514704`*^9}, {
   3.9271325432923822`*^9, 3.9271325615316505`*^9}, {3.927132646515608*^9, 
   3.9271326886425757`*^9}, {3.9271330907571993`*^9, 
   3.9271330939919233`*^9}, {3.9271331293409133`*^9, 3.927133192775775*^9}, {
   3.927299023301293*^9, 3.9272990237151823`*^9}, {3.927299415218779*^9, 
   3.9272994257794733`*^9}, {3.9273007687083406`*^9, 
   3.9273007936528234`*^9}, {3.927300827866495*^9, 3.9273008279248405`*^9}, {
   3.9273052231611357`*^9, 3.927305230504528*^9}, 3.9273052933545623`*^9, {
   3.9273055644700904`*^9, 3.9273055671742816`*^9}, {3.927305876246721*^9, 
   3.927305880261553*^9}, {3.9273060618324127`*^9, 3.9273060962663507`*^9}, {
   3.927306206985795*^9, 3.9273062070324383`*^9}, {3.927306299321516*^9, 
   3.9273062994800463`*^9}, {3.9273063380891743`*^9, 
   3.9273063381516914`*^9}, {3.927306369752971*^9, 3.927306396711417*^9}, {
   3.927306476118909*^9, 3.927306645305908*^9}, {3.927306807099012*^9, 
   3.9273068330167694`*^9}, {3.927306957001831*^9, 3.9273069570484285`*^9}, {
   3.9273069880908337`*^9, 3.927307051736837*^9}, {3.9273070859464154`*^9, 
   3.927307085992479*^9}},
 CellLabel->
  "In[1739]:=",ExpressionUUID->"180a4240-394e-47e9-8a3c-aef03d69743e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCU5EhCqnFuKj+yrh1sjjCOHDlyZtzHiIrKNdPk
LEkkVhnqyUTZsroYuYYnR7aJHdE8SpvZSZPGtvs030+f5/k87+f1PJ/n/edH
IyjWNURcTEyM/nX/yw+RunzXVuF+sf9HFytyu8Nm6hlgIutrB/G69fYi83zU
ZWSJTsi40jhstM8D2WTpOnOS6Ysso+G0o2tnEDLhiFZMPi8YmVL/ie7eHoJs
us56tpEPnkzKU19lHIrc3Ei3uOEKPvGS5ekZB45a4szcyBJZD/NQ+BgvTgXv
N5AW97oM1rXdSG2igxOUbogRt4ch/8HZG7fmKph40t/1cEU48qJGllFb0VHk
a+RU6eRjkXA/TmKbuEYjc4l9dYF54LTJbVGFXWBrNQ+X2pdgGf8T+HYBOEao
ov1IKuabDTBWVbPSgDLY1NJWckIbXMGeXOLgwW3T53L21oLHZmwVihVjkdfP
t+gf4IH1Uws1UyOOIQctN2Vs8o+D/uP9zx8cJCHLWrwyM4wBZ/H/Lq/MA+8Z
SesZLgfzbq4WyNSDh7bY03ToYDqlQM+6FZwvHOzy6wCHRyv5pD4U2RBz4Zir
HVoGm/r4svEm8cgSDrXB89fALFPubJ1KAnKzhlva5Y/gAtkO2YrnicjZr09m
4xSTkJM6f+FTXMA8BnmY7g+Oa2pu6YsGtzTYq/slgt/VThXOZ4B3XE5bTj8l
8i4s6oJi5NoCcOjp5K0OjeDAhBfs3G4wQTeyh2yVjGw6KbiVcBd8rPK0Mb4y
BbnRF8dYIKci8/XrdDbdAx/4bFJmvwTmBmUOvFROQ6Yyn0gmmoDTOGMlqvvA
wUKuVqeNyLsxgsqXmyEEsCl+HbbWHSwdauR7KBg8WeGZcoUETjRP9RbMg+VG
L+xxC0tHztJqz833zEBejB1lPbQjI2/3Tht6fBx82Fpt8OkdsIARM9A9DC7R
7+zvWQB3nCmWY/LB0zPhzswvYOkD+4qYEpnfjMd2Vcv3M9eCM4l3nXo3gHtx
wX2928Bmsw3MgTJwbfu7p8OSx5FJL3atHhSAr2T+pP46KQt5Ljq20vI82NCv
bkNFM5jljo09/h2cSHhR+qEXbNuty5caBqvYJHmoT4BXiavlNP4J5j54eNtk
SmQjbJgcwenkgDss5HGEObCjKlluZUs28ujSnNQtb3AMb+Nm2ghY4r2zEcnl
BDKJT5ltw04i23rsdxzQOIUsv7v27bhSDrJ1SKLl7U/g2w2aG5XGc5HVjuaa
RfSeRp7P9hSnNJ1BvrWe/WNDzVnk9g6rWrvzecg6d+VnGfH5yHnG5ZGqYQXI
7pIFVU6OhciH3xB9JLcXIQfav/JqVaUg96ywJIyWwTjV+ymuKVTkpAAH23gu
OPlpjkuI5jnkFMMuL08iuHx38gw9BXzH2IC0pgxsy8g1x18DPzebEvq1gqtS
5KYXO8Ch7RaPzz4CM71ZDPdusKEgvEH9GTjA0Vjjh34w7cJKBXcA/IjLVBgc
Evnr/9lTmt86DHYuu0j1kqUh1y9Wl3y2AY9w13TeewC+cpS409L8PLiYk9jY
AFYT9kxSNIuReVJj6Uk+4F7F16p+xWBGgLBqvAxc3aSsdegiWGlEMwR3CZwn
MKxnVYFXtli8oVaLbIgl2Nnpu9SAHaaSjex/A29Ob7CwagF306UJRvfBpOkI
363PwE8cdpCl58CqNxcuvV1dgiymXrNAwsAzBe5WSxngIz8LwyVPgTlf6qnK
+WCJKBpxogCsPZGhXVUEtrEPexdIFdkAO8I42LaVBr5K0yE0lYA5MZ/ZxhXf
me28063+O/9akxnXCv4L76BGHwJP497f474FKwRoEP8xKEW2vu66tBIJ/hfV
xN/U
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#1"]& ], 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCUnInGUePcVH5kXTvYHGEcOXLkzLiPERWVc5Kz
JJFYZagnE2XL6mLkGp4c2SZ2RPMobWYnTRq77cP30+d5Ps/7eT3P53n/+VEN
iHYOEhYSEqL9t9/yY7gWz7lVcEDo/9mJFbjcZTF26WBrxmsEcLt37UPmeilL
SJIckHGlMdhonxuy0dINxiTDG1lC1UG3Sz8AmXhUPSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRXmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsZb2V2kQDx8ndFCJphyD/wd4Xs+EamHTK1/lIRSjyomqGQVvBMeTr
lGTxxOPhcD9OZhk5RyJzSH11/jnglMmdEfldYEslN6faV2AJ35OEdj44SqCg
8VgsatV4jFnVLDcgDzY2txad0ABXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
+INcMD45Xy057DhywHJT2jbfGOg/0f/i4SEysqTZaxO9KHAG7+/yyhzw3pGU
nuFyMPfWer5EPXhIxbZIkwamFebtsmwF5woGu3w6wKGRcl7Jj9asizmxTZUO
L4ONvbxZBKNYZBG72sD562CmMWe2TiEOuVnVJeXKJ3CeZIdkxYt45Mw3pzJx
sgnICZ2/8AqdwFw6ZZjmC45pam7piwS3NNgq+8SD39dO5c+ngXWvpCynnl6z
PhZxUTZ8Yx44+EziDrtGsH/cS1Z2N5ioFd5DsUhENp7k3467Bz5eecaQUJmE
3OiNoy9QkpF5+DrNbffBB78YldkugTkB6QOv5FOQqYynovFG4BT2WInifnCg
gKPeabXqjN0YUeHrrSAi2JiwCdvoChYPNvA+HAierHBPukoGx5sme/LnwVKj
F/e6hKQiZ6i3Z+e6pyEvRo8yH9lQkLU9U4aenAAfsVQafHYXzKdHDXQPg0vw
nf09C+COs8VSDB54eibUkfEVLH5wfwFDJH3Ve7Dd1dL9jI3gdNI9h94t4F5c
YF/vTrDJbANjoAxc2/7+2bDoCWTyy93rB/ngq+k/Kb9JyECei4yuNL8A1vOp
21LRDGa6YmNPfgfHE1+WfuwFW3dr8cSGwQpWCW7KE+B1wkpZjX+COQ8f3TGa
WjMBG6aEsTvZ4A4zaRxxDmyvSJFaUclEHl2aE7vtCY7ibt1eNAIW+eBoQHY6
iUzmFc62YaeQrd0O2A+onkaW3lP7blwuC9kyKN78zmfwnQa1rXLj2chKx7JN
wnrPIM9nugsXNp1Fvr2Z9WNDzTnk9g6LWpsLOcia96Rn6bG5yDmG5eGKIXnI
rqJ5VQ72+chH3pK8RLULkP1tX3u0KhYi96wwRQyWwTjFB0nOSVTkBD8761gO
OPFZllOQ2nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEH5OdjP3lD1h35w0cWVCs4A+DGHITM4
tOpv/2dvaW7rMNix7BLVQ7IIuX6xuuSLFXiEs6Hz/kPw1WMkfXPTC+Bidnxj
A1hJ0DNZqFaMzBUbS03wAvfKvlH0KQbT/QRV42Xg6iZ59cOXwHIjakG4y+Ac
vl49swq8omL2llq9Zl0szsYG71QDtptKNLD9Dbw9tcHMogXcTRMnGjwAk6fD
vHc8Bz+106WIz4EVby1cfre+BFlIuWaBjIFn8lwtltLAR38WhIqeBrO/1lPl
c8EiEUWkiTywxkSaRlUB2Mo25L0/dc147Cj9UNuOIvC1Ik1iUwmYHfWFZVjx
nVmO+i713/nXmvSYVvBfBDsl2hB4GvfhPucdWMZPlfSPTimy5Q3npZVw8L/7
CgA1
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#2"]& ], 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCm5EzkqnFuKj+yrh1sjjCOHDlyZtzHiIrKOclZ
kkisMtSTibJldTFyDU+ObBM7onmUNrOTJo1t9+H76fM8n+fzvJ7n/Xz+fKsE
RDsHCQsJCdG+7X/3Y7gmz7lVcEDo/9HCClzushi7dLA1a6sHcLt37UPmeilJ
SJIckHGlMdhonxuy0dINxiTDG1lCxUG3Sz8AmXhULSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRWmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsab2V2kQDx8ndFCJphSD/wd4Xs+EamHTK1/lIRSjyokqGQVvBMeTr
lGTxxOPhkB8ns4ycI5E5pL46/xxwyuTOiPwusKWim1PtK7CE70lCOx8cJVBQ
fywWtWpdjFnVLDcgDzY2txadUAdXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
2ge5YO3kfNXksOPIActNadt8Y+D/if4XDw+RkSXNXpvoRYEzeH+XV+aA946k
9AyXg7m31vMl6sFDyrZFGjQwrTBvl2UrOFcw2OXTAQ6NlPNKfrRmfcyJbap4
eBls7OXNIhjFIovY1QbOXwczjTmzdQpxyM0qLilXPoHzJDskK17EI2e+OZWJ
k01ATuj8hVfoBObSKcM0X3BMU3NLXyS4pcFWySce/L52Kn8+Dax7JWU59fSq
M3ZjERdlwzfmgYPPJO6wawT7x71kZXeDiZrhPRSLRGTjSf7tuHvg45VnDAmV
SciN3jj6AiUZmaddp7HtPvjgF6My2yUwJyB94JV8CjKV8VQ03gicwh4rwe8H
Bwo4ap1Wa96DERW+3goigo0Jm7CNrmDxYAPvw4HgyQr3pKtkcLxpsid/Hiw1
enGvS0gqcoZae3auexryYvQo85ENBVnLM2XoyQnwEUvFwWd3wXx61ED3MLhE
u7O/ZwHccbZYisEDT8+EOjK+gsUP7i9giKSvmoDtrpbuZ2wEp5PuOfRuAffi
Avt6d4JNZhsYA2Xg2vb3z4ZFTyCTX+5eP8gHX03/SelNQgbyXGR0pfkFsJ5P
3ZaKZjDTFRt78js4nviy9GMv2Lpbkyc2DFawSnBTmgCvE1bMavwTzHn46I7R
1JoNsGFKGLuTDe4wk8YR58D2eIrUinIm8ujSnNhtT3AUd+v2ohGwyAdHA7LT
SWQyr3C2DTuFbO12wH5A5TSy9J7ad+NyWciWQfHmdz6D7zSobpUbz0ZWPJZt
EtZ7Bnk+0124sOks8u3NrB8bas4ht3dY1NpcyEHWuCc9S4/NRc4xLA/Hh+Qh
u4rmVTnY5yMfeUvyEtUqQPa3fe3Rii9E7llhihgsg3H4B0nOSVTkBD8761gO
OPFZllOQ6nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEHpOdjP3lDlh35w0cWVCs4A+DGHITM4
tOZv/bO3NLd1GOxYdonqIVmEXL9YXfLFCjzC2dB5/yH46jGSvrnpBXAxO76x
Aawo6JksVC1G5oqNpSZ4gXtl3+B9isF0P0HVeBm4ukle7fAlsNyIahDuMjiH
r1fPrAKvKJu9pVav+lu/x9nYaDvVgO2mEg1sfwNvT20ws2gBd9PEiQYPwOTp
MO8dz8FP7XQp4nNg/K2Fy+/WlyALKdUskDHwTJ6rxVIa+OjPglDR02D213qq
fC5YJKKINJEHVp9IU68qAFvZhrz3p65ZFztKP9S2owh8rUiD2FQCZkd9YRlW
fGeWo75L/Xf+tSY9phX8F8FOkTYEnsZ9uM95B5bxUyH9o1OKbHnDeWklHPwv
88gOtA==
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#3"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxM23k8VN//AH7JVlJEFCJbqaSVRHq9kiJJJSFJlCzZ931fKusMMxKSLSQV
pbKFIlmz72PflZJUtvSb7+f3/nV/9x+P58PMPa/zOuee5c69ItdtNG8yMjAw
NDIxMPzf31kLyV+ar1aOxd3/v6MLIi6+6a/ZJYX/n3eLX5+r2nX0n+euCK9d
p3f2n3li7LCj/tI/y8w/qaHV6P/zWpGze97vvf7PkRkLz7QKbqJmvlDQ5wud
8EPE92B+hDmu7Ui1VVzbAY1f9u6qfED42Zv+ba3Z5vitgseb/087hPlH8g0V
maOfThpbznQ73DoL62dqzHHj1MHok33toLr5G9NKlzmmeZZv7fnUDhLDiUvs
k+You+Fipm1pOwy4rkzsYL2Feofs38YntUPJiWf9Mry38HPlKtX95HaIX2/Q
fkLiFnpfJjdX+rWDaxdH/YVDt5Dzy7ar+vbtoJ32tvzaiVto8r+jHbjkt+Z6
GBGua/BMvOdDuGD70kXWecLpXm5rXGwt/jlQdSdDkA9hI+6uX1ERFmg37zfi
ptMOx/ruTCc9sECmUC6bDartIPhYbuRZtgVStyYvpMm1w6LDRHdxkQXuyNkX
KL+zHTqPxTbV1FhgvlLZ+sYt7RDd+rtkbMICaab9YkuLbWD7MOPV3G8LtFm0
fkb63AYat3SyGVktkSF8RW47rQ2kZFhTOXktMUo4oryorg3WMry5LyRhieU/
JfUj37fBByrvbfkThH13OztqGxG28p/bWdlFWK/Lvl9G0+qfS9zWNKGhFTr0
Di+r0y3Kn/T+jLUV8uX9Lv/8sg2CC2XztD2tsCiEPTTkURtM6dU/MgqxwmtG
wpo779HjXbpxzzLWChnlDm6putMGL+IX77ikW2H6epUBE/c2cKftsAx/b4Vf
i6yt0662QZ9nydXYRiuMivKXOXGuDZS2XjqX2meFsuYxy4PYBulvP+OzL1bY
BVnlvgfo9TXwP1CwaIVevCUhwuJtYL2yWbyCzRqF6b01X6gNmhOfb2rgJSwL
p1i7xQnf76fNjxwgbLhtLW1Rg7Ck0eFSTgvCYas+5Qi4EZ5JNk7ZfpuwltJS
9H4q4fwhctDRVGtsipmcNBVoA8EASReVXGt0svqTw8JBbw+xUjPNUmvcoszl
+milFVSNv5wx67FGw+9yLMODrZDNFKDoMGmNTFXq9X4trcD5aMte79/WmJlo
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
BwA1/Iyg
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#4"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
H/2I1Cy/X5Ej+jNHrPSG4CM/V9W0j8OMI6bZ3xf4U47oi4rg5oIrewRGslbA
M9237ZVFYM1Ok4ZHUnDI834NM0X/ufrwSI78rOPn9yawf6XRRMJW2OMs177F
J2BH3663R2rhDC9fE95m/7l6qixP3uxd8iCnAxZ0zZVReQvbOW48W90Hv9zh
HfDhO2xpkmXOwBRA+bTB+qqTbHCbzgtFYW6Yk3hm3FwJm2owLyWiAXP9fuxs
f6Go9sVeCTaW3FcXugmuEzqfm74N3szTFHXPAY7mcB81dIOrF9M7vvKEGZjP
Nu3xDyB/l1eyW55sYlDe8DMUXv/1zOTadHht91Shbxl8zY675Gto4Hw+0Uho
omqrehy8rdpuODodVn/jGSKTHTh3XhEaEZ0MZ225DrNxnkr1L4InZHIkBO7B
dQ51Wm71cPqpIfvCl/CRG3++7OiBD9QsC/49ANv0iC7KGpmfjxONaE+rpOhP
wp93hzW94Q2inFj/hNlPBQ7q7Ty9QhN2mvksWqkTNJd/R2nEmO/3LRdjeK3S
UrLYHF7kqmxn6QR3p+3495IP/KRoz0K9ILigITj5SwSc2h8nknQMjqTPuLnu
5Px8smjEQqX6WWQGLLlnYKChAJ5OZ2Pir4Abm2nCzo1w6WetgkXtcCajhWbB
a/iEkNtT849Bc+tZSSN+qoHWU19ggYyHJxMXB1N+xMxaLyEN5wkLWD1TDJ6P
Hxo5rSHf560Gh1kQ3+WbYHcvM4YH+rBGlr8QixXM3nFWfbsb7FM3/avNE35x
z67C0h9WzX8Q0RkKp2cI6dhEB5Pg2erZMzW7n9Hvancmw9J7M7c4ZsHfTJxb
nQvhUmWJHe4PYQGJo/yfa+FwvoGufc3Bc/3WckXSy2pwYagD1vt9dZfXW7j9
idxe/9+wc+Ktg6ErQyjXRnKu/SMSMp9PikTG7+BkuDQc79ZWxqAEj1qrhB5W
g+9u+EEfow+Hi949cnwH3MuzwmCJA6zHErw4wRW+NtXVwOEJsw+tT0zyC5nP
r9n5t8xwnzkMny+pTEs7BTufixQ6nwnLhutkZdyCE31yXETuwmPOCyWzK0Pm
+pWtisRyh9tn8Vq4zKA273ITrM9lXJI/BLd3N1XcXhxKWb2JFrmOK3Tufcd+
dn4PT+rcXQHTFY8u1BCBnXO3192XgmWP85hUqsJjXh2tVXrwiobrnNUmMJEO
N6u2gN2OmidV28HxvZKt1U6hc/ESpEi6L7SYPvaGpayDWh4fgv25RE2fxMHV
DU+bn5yDB6UzOGoyYc4Y3201V2HVj/qJNTdD5+uHInHQEmyuuQNPlXg21T6H
T8tUNtZ9he/HJLPXT8DvP7qb1P+GF2lrxtczhs3Fa4oioWUsa6xfDIfZlG15
yg8/5XZqeLoG5mtavOWZCux6rPjZM204ri+GrcEQLtbeadxgGjZfnxTJqwzF
Ew1WMP0M07MGBzjdZ8fTxmB4Xf+V+qYU2F4nlLX5Anz4kqlhc07Y/PuWIrk+
Ix7bnAe32k7VNRfBq3mzDFoewvubjepamuCy2HH91tcwi+752tZBWCHTm+X5
6PzzdczG+x9d/ec/4RC7FTHP6Q5Rzro7XPOcGebVqmhP0oFj6xM+mkbAqV17
aj7FwJe/aF+NSDw0f1+nSEp+Cx7nT4Wr2Sc9bl2Ee2h5tJ58eMZs1zhHObzS
j7uUNMCqKbXBB7rhzVcyd7L0Hpqvj4rE4m7IxoxB2LneUlh1DPbpoi1onoJr
w3w+/GEMp9yeYPw4hQ3emapW4sQB92ZIXFbghj2ucqVOL4fHbtEdq1kZPhe/
zEqEo63Y+Ic0LDfhzrFGHS6esaAf04TXM2uPlm8Kn6/PSqRqKe1DrC5syCfY
ZmkAW0n9uD28DXZTb0k5YgVfClNb1ecfPnefIKFEfKaOhP0KhXX8215zRsNy
/wQvuRAD844Ka0qdgP8U1HoUJ8AD+73SN54Kn+vnVZTIcRdWW49LsPzOHP60
Anj5SmMDsSKY7uXovwUl8KczaVfUy8Ln7md0lUirOel8/ADObo5b110N+xl3
nRl9Cm+ulZxgeQ7z6fhbrHoF0zMIRl97DX+uqCpW6Qkn/5UzcyXyPHRvb2Uv
fF9jGbfxALxARu9kDmMEZcMVoex/VsMCZ+r380jCQ8v4GmQU4Pam8l8lShHz
/Z4SKY9zkdVaC182YrNrUIMTFxUdt9KEd0fTDXrqwP/QmxhGG8GCFeOBHFvh
haHnrp4zg4fVtV5KWMIdkwMshdYRc/Xi4Ozz3lFh3/svnOkfySWSAtvlvuBu
vgDztEvyhuXCo/tbeS2uRcytb7QSaWQKWS6bD18/L863oBCOUWnie3Ubnk72
W7n2Mew5vlIoqQ3u2f5o9fAH2LzIXdRwDKYZcYoJ/4CXfLgnNjk1v/7Js/sd
5CLeNAM/4VwqkcsQSTlca/cac1ZYzee2JAMnzMvqIPWSBx69xCJ9kx9uUiuU
PioI57XYytgLR87lS64ScaEvkGWTgoUUGeTLaPDJxCs0XgIzjpgo+2yFWzk6
Fp3bD2coOryrOg6XqdCmYxLgNjV6XpNT8LBmK40rBWbWyjLqPBs5l3+3lYi6
oW7E7kzY06y/5MtVuG23jAj9XVjjoFccTy2cGVU0KdUBsyT/cNrQB4uk1oYt
+Bw5tz+PZ+tdelpa7RBsmbG3OO4b7JWt0WT2Hc7Me834+hfcXnxI3Y0xinL2
C+ZliSKwz0RCfymBHbrLttSbwMaPPhZ12cGzp8uSXbui5s8zJaKtMu3a6wSX
D0dXurvB6lc4VgzthWkrJRq+e8Nr4jXCZ/6FuX1d+5YehRlsThoLn4Ynn+X+
kUqHv268X6iUBe/9uZntTi7cV9jionENdvSwq6i4AXeL9/Pp3Iqau+8YmI2v
B0m3jn2CN1tsMGwSPkz59sBT34visFiI9UUvqcPz55sSSV7aX7dRDl6Q5Tu+
VBF+X5dgcFMVrhy5dmEbgUM29Oif3AqrnVg+1mIP8xUp6fu4whMvt5zn9IRd
9nfVvPeG2+j2jBb6wdrJEwJRgYfn7/eVSeGaw3rbQ2Evv7Jvp07AslUj59rO
wTn2O0csymChqTqdjk741+qPaQHv4C49uq/LB2DDrjj+gUG4zHOlTulXWIrh
qmfM2OG5/6OXKZPU02vTrH7A5h88tNMWRlNeppg19JIHNjevTFouBqcGvF5n
oQTvqRS71KsCqy/yYPVVg1nNig4u0IQ/iN9N7t4I/w95diiH
       "]], LineBox[CompressedData["
1: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
/OP/Aemr5u0=
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#5"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"G\[OAcute]lyairoda, Thu 7 Dec 2023\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9273060668247623`*^9, 3.9273060965976715`*^9}, 
   3.9273062072533574`*^9, 3.9273062997306576`*^9, 3.9273063385181804`*^9, 
   3.9273063973293295`*^9, {3.927306476492045*^9, 3.927306527174385*^9}, {
   3.9273065585770316`*^9, 3.9273065849999714`*^9}, {3.927306617944604*^9, 
   3.927306647916992*^9}, {3.927306808324854*^9, 3.9273068337042165`*^9}, 
   3.927306958221428*^9, {3.927306988898182*^9, 3.927307013314025*^9}, {
   3.927307046153123*^9, 3.9273070524310217`*^9}, 3.9273070870272264`*^9},
 CellLabel->
  "Out[1753]=",ExpressionUUID->"2cbfde59-3791-4689-8a9d-c5a3aa734f2d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"warmingCorrection", "=", "1.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.9273068847149715`*^9, 3.927306887622798*^9}},
 CellLabel->
  "In[1628]:=",ExpressionUUID->"e6b4de6c-5419-4401-97d8-6ee571023b3f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeScaling", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", "60", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tStart", "=", 
   RowBox[{"dt", " ", "startTimeBin"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tEnd", "=", 
   RowBox[{
    RowBox[{"24", " ", "60"}], "-", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulation", "=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "roomTemp", ",", "roomTempList", ",", "heatingState", ",", 
       "heatingStateList", ",", "\[Tau]Start", ",", "\[Tau]End", ",", 
       "d\[Tau]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomTemp", "=", "roomTempStart"}], ";", "\[IndentingNewLine]", 
      RowBox[{"heatingState", "=", "heatingStateStart"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]Start", "=", 
       RowBox[{"tStart", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]End", "=", 
       RowBox[{"tEnd", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d\[Tau]", "=", 
       RowBox[{"dt", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"roomTempList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"heatingStateList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"warming", ",", "cooling", ",", "dRoomTemp"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"roomTempList", "=", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"roomTempList", "==", 
               RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"timeScaling", " ", "\[Tau]"}], ",", "roomTemp"}], 
                "}"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", 
               RowBox[{"roomTempList", ",", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"timeScaling", " ", "\[Tau]"}], ",", "roomTemp"}], 
                  "}"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"heatingStateList", "=", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"heatingStateList", "==", 
               RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                 "heatingState"}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", 
               RowBox[{"heatingStateList", ",", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                   "heatingState"}], "}"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"warming", "=", 
            RowBox[{"warmingCorrection", " ", "heatingState", " ", 
             RowBox[{"roomWarmingCoefficientEstimates", "[", 
              RowBox[{"[", "room", "]"}], "]"}], " ", "radiatorArea", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"HeatingCurve", "[", 
                RowBox[{
                 RowBox[{"externalTemp", "[", 
                  RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], ",", "75", 
                 ",", "45"}], "]"}], "-", "roomTemp"}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"cooling", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"roomCoolingCoefficientEstimates", "[", 
               RowBox[{"[", "room", "]"}], "]"}], ")"}], "externalWallArea", 
             RowBox[{"(", 
              RowBox[{"roomTemp", "-", 
               RowBox[{"externalTemp", "[", 
                RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}], ")"}]}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"dRoomTemp", "=", 
            RowBox[{"d\[Tau]", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"warming", "-", "cooling"}], ")"}], "/", 
              "roomHeatCapacity"}]}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"roomTemp", "+=", "dRoomTemp"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"heatingState", "=", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"roomTemp", "<", 
                RowBox[{
                 RowBox[{"roomSetTemp", "[", 
                  RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], "-", 
                 RowBox[{"roomLowerBuffer", "[", 
                  RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}]}], "&&", 
               RowBox[{
                RowBox[{"roomTemp", "-", 
                 RowBox[{
                  RowBox[{"roomTempList", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "<", "0"}]}], ",", 
              "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"roomTemp", ">", 
                  RowBox[{
                   RowBox[{"roomSetTemp", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], "+", 
                   RowBox[{"roomUpperBuffer", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}]}], "&&", 
                 RowBox[{
                  RowBox[{"roomTemp", "-", 
                   RowBox[{
                    RowBox[{"roomTempList", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}]}], ",", 
                "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                "heatingState"}], "\[IndentingNewLine]", "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Tau]", ",", "\[Tau]Start", ",", "\[Tau]End", ",", "d\[Tau]"}], 
         "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"heatingStateList", ",", "1"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Drop", "[", 
         RowBox[{"roomTempList", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9272990597619166`*^9, 3.927299060406548*^9}, {
   3.927299102611973*^9, 3.9272991027246885`*^9}, {3.927299255890185*^9, 
   3.9272995519395905`*^9}, {3.92729962146099*^9, 3.927299665204871*^9}, {
   3.9272997352536774`*^9, 3.927299738451268*^9}, {3.927299902709608*^9, 
   3.9272999330123844`*^9}, {3.92729996810067*^9, 3.9272999687233915`*^9}, {
   3.9273000120360093`*^9, 3.9273001618586802`*^9}, {3.9273001920053644`*^9, 
   3.9273003210465555`*^9}, {3.927300370339628*^9, 3.927300530661478*^9}, {
   3.927300569701741*^9, 3.92730069707845*^9}, {3.9273007758613977`*^9, 
   3.927300776804621*^9}, {3.927301256101053*^9, 3.9273013032368755`*^9}, {
   3.927301338328105*^9, 3.927301379348349*^9}, {3.927301452933256*^9, 
   3.927301496484995*^9}, {3.927301574055316*^9, 3.927301656341563*^9}, {
   3.9273017007892227`*^9, 3.927301709748929*^9}, {3.9273019592698755`*^9, 
   3.9273021862627316`*^9}, {3.9273022252557755`*^9, 
   3.9273022283879805`*^9}, {3.927302295206486*^9, 3.9273024161994333`*^9}, {
   3.9273026007750163`*^9, 3.9273026387411795`*^9}, 3.9273026702295227`*^9, 
   3.927303087988696*^9, {3.9273031760394087`*^9, 3.9273031803737783`*^9}, {
   3.927303218997552*^9, 3.927303244534952*^9}, 3.9273037387927094`*^9, {
   3.927303836966634*^9, 3.927303860518626*^9}, {3.9273038928395357`*^9, 
   3.9273038944381104`*^9}, {3.9273040374985094`*^9, 3.927304061482455*^9}, {
   3.9273042684112277`*^9, 3.9273043580864325`*^9}, {3.9273044060074964`*^9, 
   3.9273044457353077`*^9}, {3.927304489254775*^9, 3.927304703894619*^9}, {
   3.9273047795769205`*^9, 3.9273051188872776`*^9}, {3.9273051497679057`*^9, 
   3.9273051949039555`*^9}, {3.9273055186642575`*^9, 3.927305522879727*^9}, {
   3.9273060542468224`*^9, 3.9273060545858088`*^9}, {3.9273061134958863`*^9, 
   3.927306162794012*^9}, {3.927306228060359*^9, 3.9273062683600388`*^9}, {
   3.9273064430019207`*^9, 3.927306443079611*^9}, {3.9273068722660007`*^9, 
   3.9273068975925503`*^9}, {3.927307106265581*^9, 3.9273071259383698`*^9}},
 CellLabel->
  "In[1768]:=",ExpressionUUID->"c99c97f0-b4ce-4672-b070-0466270a8fad"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"roomSimulatedTemp", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"simulation", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomSetTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"roomSetTemp", "[", "t", "]"}], "-", 
       RowBox[{"roomLowerBuffer", "[", "t", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"roomSetTemp", "[", "t", "]"}], "+", 
       RowBox[{"roomUpperBuffer", "[", "t", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"externalTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"roomTrueTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"roomSimulatedTemp", "[", "t", "]"}]}], "\[IndentingNewLine]", 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{
       RowBox[{"24", " ", "60"}], "-", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "LightGreen", ",", "LightGreen", ",", "LightGreen", ",", "Blue", ",", 
       "Black", ",", "Red"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{
      RowBox[{"roomNames", "[", 
       RowBox[{"[", "room", "]"}], "]"}], "<>", "\"\<, \>\"", "<>", 
      RowBox[{"DateString", "[", 
       RowBox[{"NormalizeDate", "[", 
        RowBox[{"seasonDays", "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9273066958958406`*^9, 3.9273067294632187`*^9}, {
  3.9273067738799067`*^9, 3.9273067990154867`*^9}, {3.9273068451271076`*^9, 
  3.927306845450076*^9}, {3.927306991943189*^9, 3.9273069925842743`*^9}},
 CellLabel->
  "In[1773]:=",ExpressionUUID->"32e62d59-b41b-4e8f-ac3e-90894d3194f9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCU5EhCqnFuKj+yrh1sjjCOHDlyZtzHiIrKNdPk
LEkkVhnqyUTZsroYuYYnR7aJHdE8SpvZSZPGtvs030+f5/k87+f1PJ/n/edH
IyjWNURcTEyM/nX/yw+RunzXVuF+sf9HFytyu8Nm6hlgIutrB/G69fYi83zU
ZWSJTsi40jhstM8D2WTpOnOS6Ysso+G0o2tnEDLhiFZMPi8YmVL/ie7eHoJs
us56tpEPnkzKU19lHIrc3Ei3uOEKPvGS5ekZB45a4szcyBJZD/NQ+BgvTgXv
N5AW97oM1rXdSG2igxOUbogRt4ch/8HZG7fmKph40t/1cEU48qJGllFb0VHk
a+RU6eRjkXA/TmKbuEYjc4l9dYF54LTJbVGFXWBrNQ+X2pdgGf8T+HYBOEao
ov1IKuabDTBWVbPSgDLY1NJWckIbXMGeXOLgwW3T53L21oLHZmwVihVjkdfP
t+gf4IH1Uws1UyOOIQctN2Vs8o+D/uP9zx8cJCHLWrwyM4wBZ/H/Lq/MA+8Z
SesZLgfzbq4WyNSDh7bY03ToYDqlQM+6FZwvHOzy6wCHRyv5pD4U2RBz4Zir
HVoGm/r4svEm8cgSDrXB89fALFPubJ1KAnKzhlva5Y/gAtkO2YrnicjZr09m
4xSTkJM6f+FTXMA8BnmY7g+Oa2pu6YsGtzTYq/slgt/VThXOZ4B3XE5bTj8l
8i4s6oJi5NoCcOjp5K0OjeDAhBfs3G4wQTeyh2yVjGw6KbiVcBd8rPK0Mb4y
BbnRF8dYIKci8/XrdDbdAx/4bFJmvwTmBmUOvFROQ6Yyn0gmmoDTOGMlqvvA
wUKuVqeNyLsxgsqXmyEEsCl+HbbWHSwdauR7KBg8WeGZcoUETjRP9RbMg+VG
L+xxC0tHztJqz833zEBejB1lPbQjI2/3Tht6fBx82Fpt8OkdsIARM9A9DC7R
7+zvWQB3nCmWY/LB0zPhzswvYOkD+4qYEpnfjMd2Vcv3M9eCM4l3nXo3gHtx
wX2928Bmsw3MgTJwbfu7p8OSx5FJL3atHhSAr2T+pP46KQt5Ljq20vI82NCv
bkNFM5jljo09/h2cSHhR+qEXbNuty5caBqvYJHmoT4BXiavlNP4J5j54eNtk
SmQjbJgcwenkgDss5HGEObCjKlluZUs28ujSnNQtb3AMb+Nm2ghY4r2zEcnl
BDKJT5ltw04i23rsdxzQOIUsv7v27bhSDrJ1SKLl7U/g2w2aG5XGc5HVjuaa
RfSeRp7P9hSnNJ1BvrWe/WNDzVnk9g6rWrvzecg6d+VnGfH5yHnG5ZGqYQXI
7pIFVU6OhciH3xB9JLcXIQfav/JqVaUg96ywJIyWwTjV+ymuKVTkpAAH23gu
OPlpjkuI5jnkFMMuL08iuHx38gw9BXzH2IC0pgxsy8g1x18DPzebEvq1gqtS
5KYXO8Ch7RaPzz4CM71ZDPdusKEgvEH9GTjA0Vjjh34w7cJKBXcA/IjLVBgc
Evnr/9lTmt86DHYuu0j1kqUh1y9Wl3y2AY9w13TeewC+cpS409L8PLiYk9jY
AFYT9kxSNIuReVJj6Uk+4F7F16p+xWBGgLBqvAxc3aSsdegiWGlEMwR3CZwn
MKxnVYFXtli8oVaLbIgl2Nnpu9SAHaaSjex/A29Ob7CwagF306UJRvfBpOkI
363PwE8cdpCl58CqNxcuvV1dgiymXrNAwsAzBe5WSxngIz8LwyVPgTlf6qnK
+WCJKBpxogCsPZGhXVUEtrEPexdIFdkAO8I42LaVBr5K0yE0lYA5MZ/ZxhXf
me28063+O/9akxnXCv4L76BGHwJP497f474FKwRoEP8xKEW2vu66tBIJ/hfV
xN/U
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#1"]& ], 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCUnInGUePcVH5kXTvYHGEcOXLkzLiPERWVc5Kz
JJFYZagnE2XL6mLkGp4c2SZ2RPMobWYnTRq77cP30+d5Ps/7eT3P53n/+VEN
iHYOEhYSEqL9t9/yY7gWz7lVcEDo/9mJFbjcZTF26WBrxmsEcLt37UPmeilL
SJIckHGlMdhonxuy0dINxiTDG1lC1UG3Sz8AmXhUPSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRXmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsZb2V2kQDx8ndFCJphyD/wd4Xs+EamHTK1/lIRSjyomqGQVvBMeTr
lGTxxOPhcD9OZhk5RyJzSH11/jnglMmdEfldYEslN6faV2AJ35OEdj44SqCg
8VgsatV4jFnVLDcgDzY2txad0ABXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
+INcMD45Xy057DhywHJT2jbfGOg/0f/i4SEysqTZaxO9KHAG7+/yyhzw3pGU
nuFyMPfWer5EPXhIxbZIkwamFebtsmwF5woGu3w6wKGRcl7Jj9asizmxTZUO
L4ONvbxZBKNYZBG72sD562CmMWe2TiEOuVnVJeXKJ3CeZIdkxYt45Mw3pzJx
sgnICZ2/8AqdwFw6ZZjmC45pam7piwS3NNgq+8SD39dO5c+ngXWvpCynnl6z
PhZxUTZ8Yx44+EziDrtGsH/cS1Z2N5ioFd5DsUhENp7k3467Bz5eecaQUJmE
3OiNoy9QkpF5+DrNbffBB78YldkugTkB6QOv5FOQqYynovFG4BT2WInifnCg
gKPeabXqjN0YUeHrrSAi2JiwCdvoChYPNvA+HAierHBPukoGx5sme/LnwVKj
F/e6hKQiZ6i3Z+e6pyEvRo8yH9lQkLU9U4aenAAfsVQafHYXzKdHDXQPg0vw
nf09C+COs8VSDB54eibUkfEVLH5wfwFDJH3Ve7Dd1dL9jI3gdNI9h94t4F5c
YF/vTrDJbANjoAxc2/7+2bDoCWTyy93rB/ngq+k/Kb9JyECei4yuNL8A1vOp
21LRDGa6YmNPfgfHE1+WfuwFW3dr8cSGwQpWCW7KE+B1wkpZjX+COQ8f3TGa
WjMBG6aEsTvZ4A4zaRxxDmyvSJFaUclEHl2aE7vtCY7ibt1eNAIW+eBoQHY6
iUzmFc62YaeQrd0O2A+onkaW3lP7blwuC9kyKN78zmfwnQa1rXLj2chKx7JN
wnrPIM9nugsXNp1Fvr2Z9WNDzTnk9g6LWpsLOcia96Rn6bG5yDmG5eGKIXnI
rqJ5VQ72+chH3pK8RLULkP1tX3u0KhYi96wwRQyWwTjFB0nOSVTkBD8761gO
OPFZllOQ2nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEH5OdjP3lD1h35w0cWVCs4A+DGHITM4
tOpv/2dvaW7rMNix7BLVQ7IIuX6xuuSLFXiEs6Hz/kPw1WMkfXPTC+Bidnxj
A1hJ0DNZqFaMzBUbS03wAvfKvlH0KQbT/QRV42Xg6iZ59cOXwHIjakG4y+Ac
vl49swq8omL2llq9Zl0szsYG71QDtptKNLD9Dbw9tcHMogXcTRMnGjwAk6fD
vHc8Bz+106WIz4EVby1cfre+BFlIuWaBjIFn8lwtltLAR38WhIqeBrO/1lPl
c8EiEUWkiTywxkSaRlUB2Mo25L0/dc147Cj9UNuOIvC1Ik1iUwmYHfWFZVjx
nVmO+i713/nXmvSYVvBfBDsl2hB4GvfhPucdWMZPlfSPTimy5Q3npZVw8L/7
CgA1
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#2"]& ], 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCm5EzkqnFuKj+yrh1sjjCOHDlyZtzHiIrKOclZ
kkisMtSTibJldTFyDU+ObBM7onmUNrOTJo1t9+H76fM8n+fzvJ7n/Xz+fKsE
RDsHCQsJCdG+7X/3Y7gmz7lVcEDo/9HCClzushi7dLA1a6sHcLt37UPmeilJ
SJIckHGlMdhonxuy0dINxiTDG1lCxUG3Sz8AmXhULSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRWmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsab2V2kQDx8ndFCJphSD/wd4Xs+EamHTK1/lIRSjyokqGQVvBMeTr
lGTxxOPhkB8ns4ycI5E5pL46/xxwyuTOiPwusKWim1PtK7CE70lCOx8cJVBQ
fywWtWpdjFnVLDcgDzY2txadUAdXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
2ge5YO3kfNXksOPIActNadt8Y+D/if4XDw+RkSXNXpvoRYEzeH+XV+aA946k
9AyXg7m31vMl6sFDyrZFGjQwrTBvl2UrOFcw2OXTAQ6NlPNKfrRmfcyJbap4
eBls7OXNIhjFIovY1QbOXwczjTmzdQpxyM0qLilXPoHzJDskK17EI2e+OZWJ
k01ATuj8hVfoBObSKcM0X3BMU3NLXyS4pcFWySce/L52Kn8+Dax7JWU59fSq
M3ZjERdlwzfmgYPPJO6wawT7x71kZXeDiZrhPRSLRGTjSf7tuHvg45VnDAmV
SciN3jj6AiUZmaddp7HtPvjgF6My2yUwJyB94JV8CjKV8VQ03gicwh4rwe8H
Bwo4ap1Wa96DERW+3goigo0Jm7CNrmDxYAPvw4HgyQr3pKtkcLxpsid/Hiw1
enGvS0gqcoZae3auexryYvQo85ENBVnLM2XoyQnwEUvFwWd3wXx61ED3MLhE
u7O/ZwHccbZYisEDT8+EOjK+gsUP7i9giKSvmoDtrpbuZ2wEp5PuOfRuAffi
Avt6d4JNZhsYA2Xg2vb3z4ZFTyCTX+5eP8gHX03/SelNQgbyXGR0pfkFsJ5P
3ZaKZjDTFRt78js4nviy9GMv2Lpbkyc2DFawSnBTmgCvE1bMavwTzHn46I7R
1JoNsGFKGLuTDe4wk8YR58D2eIrUinIm8ujSnNhtT3AUd+v2ohGwyAdHA7LT
SWQyr3C2DTuFbO12wH5A5TSy9J7ad+NyWciWQfHmdz6D7zSobpUbz0ZWPJZt
EtZ7Bnk+0124sOks8u3NrB8bas4ht3dY1NpcyEHWuCc9S4/NRc4xLA/Hh+Qh
u4rmVTnY5yMfeUvyEtUqQPa3fe3Rii9E7llhihgsg3H4B0nOSVTkBD8761gO
OPFZllOQ6nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEHpOdjP3lDlh35w0cWVCs4A+DGHITM4
tOZv/bO3NLd1GOxYdonqIVmEXL9YXfLFCjzC2dB5/yH46jGSvrnpBXAxO76x
Aawo6JksVC1G5oqNpSZ4gXtl3+B9isF0P0HVeBm4ukle7fAlsNyIahDuMjiH
r1fPrAKvKJu9pVav+lu/x9nYaDvVgO2mEg1sfwNvT20ws2gBd9PEiQYPwOTp
MO8dz8FP7XQp4nNg/K2Fy+/WlyALKdUskDHwTJ6rxVIa+OjPglDR02D213qq
fC5YJKKINJEHVp9IU68qAFvZhrz3p65ZFztKP9S2owh8rUiD2FQCZkd9YRlW
fGeWo75L/Xf+tSY9phX8F8FOkTYEnsZ9uM95B5bxUyH9o1OKbHnDeWklHPwv
88gOtA==
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#3"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxM23k8VN//AH7JVlJEFCJbqaSVRHq9kiJJJSFJlCzZ931fKusMMxKSLSQV
pbKFIlmz72PflZJUtvSb7+f3/nV/9x+P58PMPa/zOuee5c69ItdtNG8yMjAw
NDIxMPzf31kLyV+ar1aOxd3/v6MLIi6+6a/ZJYX/n3eLX5+r2nX0n+euCK9d
p3f2n3li7LCj/tI/y8w/qaHV6P/zWpGze97vvf7PkRkLz7QKbqJmvlDQ5wud
8EPE92B+hDmu7Ui1VVzbAY1f9u6qfED42Zv+ba3Z5vitgseb/087hPlH8g0V
maOfThpbznQ73DoL62dqzHHj1MHok33toLr5G9NKlzmmeZZv7fnUDhLDiUvs
k+You+Fipm1pOwy4rkzsYL2Feofs38YntUPJiWf9Mry38HPlKtX95HaIX2/Q
fkLiFnpfJjdX+rWDaxdH/YVDt5Dzy7ar+vbtoJ32tvzaiVto8r+jHbjkt+Z6
GBGua/BMvOdDuGD70kXWecLpXm5rXGwt/jlQdSdDkA9hI+6uX1ERFmg37zfi
ptMOx/ruTCc9sECmUC6bDartIPhYbuRZtgVStyYvpMm1w6LDRHdxkQXuyNkX
KL+zHTqPxTbV1FhgvlLZ+sYt7RDd+rtkbMICaab9YkuLbWD7MOPV3G8LtFm0
fkb63AYat3SyGVktkSF8RW47rQ2kZFhTOXktMUo4oryorg3WMry5LyRhieU/
JfUj37fBByrvbfkThH13OztqGxG28p/bWdlFWK/Lvl9G0+qfS9zWNKGhFTr0
Di+r0y3Kn/T+jLUV8uX9Lv/8sg2CC2XztD2tsCiEPTTkURtM6dU/MgqxwmtG
wpo779HjXbpxzzLWChnlDm6putMGL+IX77ikW2H6epUBE/c2cKftsAx/b4Vf
i6yt0662QZ9nydXYRiuMivKXOXGuDZS2XjqX2meFsuYxy4PYBulvP+OzL1bY
BVnlvgfo9TXwP1CwaIVevCUhwuJtYL2yWbyCzRqF6b01X6gNmhOfb2rgJSwL
p1i7xQnf76fNjxwgbLhtLW1Rg7Ck0eFSTgvCYas+5Qi4EZ5JNk7ZfpuwltJS
9H4q4fwhctDRVGtsipmcNBVoA8EASReVXGt0svqTw8JBbw+xUjPNUmvcoszl
+milFVSNv5wx67FGw+9yLMODrZDNFKDoMGmNTFXq9X4trcD5aMte79/WmJlo
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
BwA1/Iyg
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#4"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
H/2I1Cy/X5Ej+jNHrPSG4CM/V9W0j8OMI6bZ3xf4U47oi4rg5oIrewRGslbA
M9237ZVFYM1Ok4ZHUnDI834NM0X/ufrwSI78rOPn9yawf6XRRMJW2OMs177F
J2BH3663R2rhDC9fE95m/7l6qixP3uxd8iCnAxZ0zZVReQvbOW48W90Hv9zh
HfDhO2xpkmXOwBRA+bTB+qqTbHCbzgtFYW6Yk3hm3FwJm2owLyWiAXP9fuxs
f6Go9sVeCTaW3FcXugmuEzqfm74N3szTFHXPAY7mcB81dIOrF9M7vvKEGZjP
Nu3xDyB/l1eyW55sYlDe8DMUXv/1zOTadHht91Shbxl8zY675Gto4Hw+0Uho
omqrehy8rdpuODodVn/jGSKTHTh3XhEaEZ0MZ225DrNxnkr1L4InZHIkBO7B
dQ51Wm71cPqpIfvCl/CRG3++7OiBD9QsC/49ANv0iC7KGpmfjxONaE+rpOhP
wp93hzW94Q2inFj/hNlPBQ7q7Ty9QhN2mvksWqkTNJd/R2nEmO/3LRdjeK3S
UrLYHF7kqmxn6QR3p+3495IP/KRoz0K9ILigITj5SwSc2h8nknQMjqTPuLnu
5Px8smjEQqX6WWQGLLlnYKChAJ5OZ2Pir4Abm2nCzo1w6WetgkXtcCajhWbB
a/iEkNtT849Bc+tZSSN+qoHWU19ggYyHJxMXB1N+xMxaLyEN5wkLWD1TDJ6P
Hxo5rSHf560Gh1kQ3+WbYHcvM4YH+rBGlr8QixXM3nFWfbsb7FM3/avNE35x
z67C0h9WzX8Q0RkKp2cI6dhEB5Pg2erZMzW7n9Hvancmw9J7M7c4ZsHfTJxb
nQvhUmWJHe4PYQGJo/yfa+FwvoGufc3Bc/3WckXSy2pwYagD1vt9dZfXW7j9
idxe/9+wc+Ktg6ErQyjXRnKu/SMSMp9PikTG7+BkuDQc79ZWxqAEj1qrhB5W
g+9u+EEfow+Hi949cnwH3MuzwmCJA6zHErw4wRW+NtXVwOEJsw+tT0zyC5nP
r9n5t8xwnzkMny+pTEs7BTufixQ6nwnLhutkZdyCE31yXETuwmPOCyWzK0Pm
+pWtisRyh9tn8Vq4zKA273ITrM9lXJI/BLd3N1XcXhxKWb2JFrmOK3Tufcd+
dn4PT+rcXQHTFY8u1BCBnXO3192XgmWP85hUqsJjXh2tVXrwiobrnNUmMJEO
N6u2gN2OmidV28HxvZKt1U6hc/ESpEi6L7SYPvaGpayDWh4fgv25RE2fxMHV
DU+bn5yDB6UzOGoyYc4Y3201V2HVj/qJNTdD5+uHInHQEmyuuQNPlXg21T6H
T8tUNtZ9he/HJLPXT8DvP7qb1P+GF2lrxtczhs3Fa4oioWUsa6xfDIfZlG15
yg8/5XZqeLoG5mtavOWZCux6rPjZM204ri+GrcEQLtbeadxgGjZfnxTJqwzF
Ew1WMP0M07MGBzjdZ8fTxmB4Xf+V+qYU2F4nlLX5Anz4kqlhc07Y/PuWIrk+
Ix7bnAe32k7VNRfBq3mzDFoewvubjepamuCy2HH91tcwi+752tZBWCHTm+X5
6PzzdczG+x9d/ec/4RC7FTHP6Q5Rzro7XPOcGebVqmhP0oFj6xM+mkbAqV17
aj7FwJe/aF+NSDw0f1+nSEp+Cx7nT4Wr2Sc9bl2Ee2h5tJ58eMZs1zhHObzS
j7uUNMCqKbXBB7rhzVcyd7L0Hpqvj4rE4m7IxoxB2LneUlh1DPbpoi1onoJr
w3w+/GEMp9yeYPw4hQ3emapW4sQB92ZIXFbghj2ucqVOL4fHbtEdq1kZPhe/
zEqEo63Y+Ic0LDfhzrFGHS6esaAf04TXM2uPlm8Kn6/PSqRqKe1DrC5syCfY
ZmkAW0n9uD28DXZTb0k5YgVfClNb1ecfPnefIKFEfKaOhP0KhXX8215zRsNy
/wQvuRAD844Ka0qdgP8U1HoUJ8AD+73SN54Kn+vnVZTIcRdWW49LsPzOHP60
Anj5SmMDsSKY7uXovwUl8KczaVfUy8Ln7md0lUirOel8/ADObo5b110N+xl3
nRl9Cm+ulZxgeQ7z6fhbrHoF0zMIRl97DX+uqCpW6Qkn/5UzcyXyPHRvb2Uv
fF9jGbfxALxARu9kDmMEZcMVoex/VsMCZ+r380jCQ8v4GmQU4Pam8l8lShHz
/Z4SKY9zkdVaC182YrNrUIMTFxUdt9KEd0fTDXrqwP/QmxhGG8GCFeOBHFvh
haHnrp4zg4fVtV5KWMIdkwMshdYRc/Xi4Ozz3lFh3/svnOkfySWSAtvlvuBu
vgDztEvyhuXCo/tbeS2uRcytb7QSaWQKWS6bD18/L863oBCOUWnie3Ubnk72
W7n2Mew5vlIoqQ3u2f5o9fAH2LzIXdRwDKYZcYoJ/4CXfLgnNjk1v/7Js/sd
5CLeNAM/4VwqkcsQSTlca/cac1ZYzee2JAMnzMvqIPWSBx69xCJ9kx9uUiuU
PioI57XYytgLR87lS64ScaEvkGWTgoUUGeTLaPDJxCs0XgIzjpgo+2yFWzk6
Fp3bD2coOryrOg6XqdCmYxLgNjV6XpNT8LBmK40rBWbWyjLqPBs5l3+3lYi6
oW7E7kzY06y/5MtVuG23jAj9XVjjoFccTy2cGVU0KdUBsyT/cNrQB4uk1oYt
+Bw5tz+PZ+tdelpa7RBsmbG3OO4b7JWt0WT2Hc7Me834+hfcXnxI3Y0xinL2
C+ZliSKwz0RCfymBHbrLttSbwMaPPhZ12cGzp8uSXbui5s8zJaKtMu3a6wSX
D0dXurvB6lc4VgzthWkrJRq+e8Nr4jXCZ/6FuX1d+5YehRlsThoLn4Ynn+X+
kUqHv268X6iUBe/9uZntTi7cV9jionENdvSwq6i4AXeL9/Pp3Iqau+8YmI2v
B0m3jn2CN1tsMGwSPkz59sBT34visFiI9UUvqcPz55sSSV7aX7dRDl6Q5Tu+
VBF+X5dgcFMVrhy5dmEbgUM29Oif3AqrnVg+1mIP8xUp6fu4whMvt5zn9IRd
9nfVvPeG2+j2jBb6wdrJEwJRgYfn7/eVSeGaw3rbQ2Evv7Jvp07AslUj59rO
wTn2O0csymChqTqdjk741+qPaQHv4C49uq/LB2DDrjj+gUG4zHOlTulXWIrh
qmfM2OG5/6OXKZPU02vTrH7A5h88tNMWRlNeppg19JIHNjevTFouBqcGvF5n
oQTvqRS71KsCqy/yYPVVg1nNig4u0IQ/iN9N7t4I/w95diiH
       "]], LineBox[CompressedData["
1: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
/OP/Aemr5u0=
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#5"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVl3k8VesXxokooW6kUppLOOLsnYjiaS6VCkkyFoqM55gzRM4xHOewxUGD
UinpGjIWklRuKRqUcN0GJVJKqcz6vb+/9uf72fvd79rvWut51l540NvcZYKE
hIShpITE/68/ji7/bV46bnw2zJ9nd00H7g3Wr9dptZu8DJZw08nVwex3RVxp
rS8mCgGCHZJXdfC9x6G6U3PUJMwrSyn7sg7+8y471KwpDzuHhqwvWTqwKHIq
a9ScC7V1S6uPpetAZFH+pl6ThbPSL39n8HSgteTgzweaa3BWsPJIs4MOfh6Y
LydvsxM7djo2uirqQFnsi1cNe5Hmcu7NgrsroDd4rb693hZPgh6OTA5ZAbmF
O7VrdQ7im/pokkBrBRKvDOVb3nRB/5BO5ViHNvoXHqdviNwgk+o9PilVGzat
nDd65p44nd+XqbVNG1rBwkXB7j6ofe6iKCmljY1h9mtVOD74YO85/kxSG/aR
OtbFwT6Q+ez39YKENpLjngl7Y32wXSq6ceM4C4MZM4acrvigeAovPG6IhbqK
s09MP/hgvMSlQqmPhYOjeaFz7X1ReW3XJPo/FkIlItJuuvjivbP/rontLIil
dxdZefpCbt5p8as2Fh7K/+hKCvWFTdLHJaEtLOiqrbKYeNoXfXfOWtY1sTC+
tlrj6ytfeCdb/DpQz0JGRGPz7T0cKDtoHTtVzkLA1+ne/1pzQF+nWqPKWDC3
2yc74MCBuZSh/tFSFuSN3uqv8OKAubK136iYheO/v6efiecgwqOf8y6fhSOe
Mw4E3+UgKLiOp32ZhU3t+/tT6jkw8HSQm5XNwqLtmYLCZxwMOQ6KJlxioX25
elXXGw5Ctmqmv8piYdcHAzWrUQ7CZopyI8+ywLIIK/WV4sJ4irqOxxkWJtXe
2SmU4+LP+O1iq9Ms1J4zDb83i4vD2W/MWRksrDpg+4bS48K1kLO9JYUFpfrz
gWZruFjGTdt29yQLfQadU903cPFRr2pLfjILDVc0cnimXGQPvt2UwbCQq+KF
rD1cuFRO3BidxEIMr6ilypqLpeGa670TWXD++dunxYGLD9gFGxELOGQ0+acr
F+kV4uASsl7teUTWVC8u1L39e9VTWRjGvdVa/lyULbZ0Op3OQnPBpOebQ7nY
1EK9VCTfkyRkJoTHc3FoXV/VrwssSG+7eOjLZS4ylY4m3C1k4V1514hsPhfa
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
DR0y3AFd/A8Wzenj
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#6"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"G\[OAcute]lyairoda, Thu 7 Dec 2023\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9273067088979855`*^9, 3.927306729826426*^9}, {
   3.9273067842956057`*^9, 3.9273067993999343`*^9}, {3.9273068458465977`*^9, 
   3.927306901067723*^9}, 3.927306963000427*^9, {3.9273069931746907`*^9, 
   3.9273070170562863`*^9}, {3.9273070609152336`*^9, 3.9273071278572874`*^9}},
 CellLabel->
  "Out[1774]=",ExpressionUUID->"7b563466-ce43-42c6-be33-8d38c042a442"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["egy k\[ODoubleDot]r, egy nap", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}},ExpressionUUID->"8d641d14-6cbb-45ae-bd28-\
bfde110d03f2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dayN", "=", "78"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cycle", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"roomsOnCycle", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Position", "[", 
    RowBox[{"roomToCycle", ",", "cycle"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massOfAirInRoom", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"roomAreas", "[", 
       RowBox[{"[", "room", "]"}], "]"}], "roomHeight", " ", 
      "airSpecificMass"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"externalWallArea", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"roomExternalWallLength", "[", 
       RowBox[{"[", "room", "]"}], "]"}], " ", "roomHeight"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radiatorArea", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"roomRadiatorLength", "[", 
       RowBox[{"[", "room", "]"}], "]"}], "radiatorHeight", " ", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomHeatCapacity", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"roomAreas", "[", 
       RowBox[{"[", "room", "]"}], "]"}], "roomHeight", " ", 
      "airSpecificMass", " ", "airSpecificHeatCapacity"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.9273074063423433`*^9, {3.9273074696859303`*^9, 3.9273074698669777`*^9}, {
   3.927311234395136*^9, 3.9273112346013346`*^9}, {3.9273113088260703`*^9, 
   3.9273113307928658`*^9}, {3.927311410554267*^9, 3.9273114106653566`*^9}, {
   3.927311484634174*^9, 3.9273114847294407`*^9}, {3.9273117032919245`*^9, 
   3.927311703977828*^9}, {3.927312263097784*^9, 3.927312281482777*^9}, {
   3.92731336185113*^9, 3.9273133655147915`*^9}, {3.9273134409397163`*^9, 
   3.927313441098397*^9}},
 CellLabel->
  "In[2883]:=",ExpressionUUID->"92848241-5b4d-4250-a844-109e4ba94fb5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9273074065666637`*^9, 3.9273074745929565`*^9, 3.9273079192505226`*^9, 
   3.9273099522524223`*^9, 3.9273112352204876`*^9, {3.9273113094151134`*^9, 
   3.9273113310765443`*^9}, 3.9273114159937553`*^9, 3.9273114850586247`*^9, 
   3.9273117043728986`*^9, {3.927312263333686*^9, 3.9273122816499424`*^9}, 
   3.9273129435474434`*^9, 3.9273131838343277`*^9, 3.927313365743182*^9, 
   3.927313446777603*^9},
 CellLabel->
  "Out[2885]=",ExpressionUUID->"4ee29c0e-961c-41e2-bb4d-0245b3c627f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"startTimeBin", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"heatingStateStart", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"heatingStateDaily", "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", "+", "cycle"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "startTimeBin", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"heatingTrueState", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"heatingStateDaily", "[", 
           RowBox[{"[", "dayN", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", "+", "cycle"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
        "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomSetTemp", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"DateDifference", "[", 
              RowBox[{
               RowBox[{"DateList", "[", 
                RowBox[{"NormalizeDate", "[", 
                 RowBox[{"seasonDays", "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
              "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
          "&"}], "\[IndentingNewLine]", ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"roomTempsDaily", "[", 
              RowBox[{"[", "room", "]"}], "]"}], "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
          "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomLowerBuffer", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"DateDifference", "[", 
              RowBox[{
               RowBox[{"DateList", "[", 
                RowBox[{"NormalizeDate", "[", 
                 RowBox[{"seasonDays", "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
              "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
          "&"}], "\[IndentingNewLine]", ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"roomTempsDaily", "[", 
              RowBox[{"[", "room", "]"}], "]"}], "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
          "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomUpperBuffer", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"DateDifference", "[", 
              RowBox[{
               RowBox[{"DateList", "[", 
                RowBox[{"NormalizeDate", "[", 
                 RowBox[{"seasonDays", "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
              "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
          "&"}], "\[IndentingNewLine]", ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"roomTempsDaily", "[", 
              RowBox[{"[", "room", "]"}], "]"}], "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "[", 
            RowBox[{"[", "4", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
          "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"roomTrueTemp", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"DateDifference", "[", 
              RowBox[{
               RowBox[{"DateList", "[", 
                RowBox[{"NormalizeDate", "[", 
                 RowBox[{"seasonDays", "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
              "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
          "&"}], "\[IndentingNewLine]", ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"roomTempsDaily", "[", 
              RowBox[{"[", "room", "]"}], "]"}], "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
          "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"externalTemp", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"externalTempDaily", "[", 
          RowBox[{"[", "dayN", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
        "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"roomSetTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"roomLowerBuffer", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"roomSetTemp", "[", 
          RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"roomSetTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "+", 
         RowBox[{
          RowBox[{"roomUpperBuffer", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"externalTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"roomTrueTemp", "[", 
          RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{
         RowBox[{"24", " ", "60"}], "-", "5"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "LightGreen", ",", "None", ",", "LightGreen", ",", "Blue", ",", 
         "Black"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{
        RowBox[{"roomNames", "[", 
         RowBox[{"[", 
          RowBox[{"roomsOnCycle", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "<>", 
        "\"\<, \>\"", "<>", 
        RowBox[{"DateString", "[", 
         RowBox[{"NormalizeDate", "[", 
          RowBox[{"seasonDays", "[", 
           RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Prolog", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"heatingTrueState", "[", "t", "]"}], "==", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"RGBColor", "[", 
              RowBox[{"1", ",", "0", ",", "0", ",", "0.1"}], "]"}], ",", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{"-", "100"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"t", "+", "5"}], ",", "100"}], "}"}]}], "]"}]}], 
            "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{
            RowBox[{"24", " ", "60"}], " ", "-", "5"}], ",", "5"}], "}"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], "//", 
  "Row"}]}], "Input",
 CellChangeTimes->{{3.927307503543253*^9, 3.927307507271658*^9}, {
   3.9273099564887776`*^9, 3.9273099565539865`*^9}, 3.927311241628481*^9, {
   3.927311783710665*^9, 3.927311857130314*^9}, {3.927312065275762*^9, 
   3.927312090714825*^9}, {3.9273121298699484`*^9, 3.9273121489074073`*^9}, {
   3.927312488927308*^9, 3.9273124918337164`*^9}},
 CellLabel->
  "In[2890]:=",ExpressionUUID->"58feacbd-bd82-4eb4-837f-931154724187"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.029314999999999997`\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"", 2, 2898, 448, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.927308816916219*^9, 3.9273099591728306`*^9, 3.9273112432942443`*^9, {
   3.927311311708377*^9, 3.9273113330680327`*^9}, 3.9273114186145725`*^9, 
   3.9273114877102985`*^9, 3.927311708041856*^9, 3.9273118332968297`*^9, {
   3.9273120708671246`*^9, 3.9273120924129367`*^9}, {3.927312132178934*^9, 
   3.9273121505234737`*^9}, {3.927312267626994*^9, 3.9273122841270247`*^9}, 
   3.927312493532507*^9, 3.927312945538371*^9, 3.927313185898223*^9, 
   3.9273133692296553`*^9, 3.927313449809862*^9},
 CellLabel->
  "During evaluation of \
In[2890]:=",ExpressionUUID->"5cde8d4b-c944-44b5-aa36-ef87be5265c7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1H0w2wcYB3BVa2jNpotN05kl3bq2jHoJRlu/qtNW0S2NhZRjcSgOXTSE
1Uu30Wq8zWupOeasmd6644iGbHJFxS8jGk5Ys2kdjeWoXllO05atO57nufve
9z5/ff976LxUVqypiYkJ/7+86qdJ+wyszrUjJv+fM1FypmuaPOBIbNrhA96K
4sAh8MpZ++2W3GAwtfpLQjMcCmau3iS1ZAR4Oz344zvOPHDpjWe32NJY8DI9
z+12SQKYO8WfZrKScT+zmJGZeB5cmzsy0fsZH6z20OtabC+AiyxllrUTArCH
1th+oTsDfL7+srtrvRDcGkGVLGVngg0OLXvf7UEfe86sObGK1vNyVH+9nQUu
I+9SBEx01uxkFe0wOmZNv0fuv+E8FyLI9mVbbBDaw/UNYgcbbRHnFvF5DFpb
yxE28dECr8xw4wLaSlPnfSb+K3DeHmmBiHMRvJyqUfcdzwbvD8+6N5CLjvKz
Gx3sQhslKSrFGLrKQT4ytISWXam0Ig3omblzIeRLtMWxwyWkWc6GXYmDjdYj
5A50Drc7WLkLraTGDCs/QnvqxKSqBt0sfTw4RskF8+8f3DpqRDflfGL/KD0P
PJ+cWu9bgXaKbNlV+wtazSYmB35FC4LuVz9VogMU+wzmY2hb//RQ+z/QW0zt
8lv/ROt7+zqYDzftRoxlJ87KZ9EyH2tq0Dw6kJZttf7+JbBmdd68PRydsrL7
vfJxtNmTEDf+6a/B6jc1FteT0Y0uUQ/6RGiKX/OpyTp0CksnWfgJ3cQtXEhv
Q4/zHBhbpOjHcS8O3ZWhzZOGOSL5pt0JRmoD/9N+tE9aarGNAj3Rkesdb/YN
mG8o1d0m0NoPdbb+beiA0COBKvq3YGuX5sUpm3ywX6zAt+MZukPM2G0zVQC2
SyjwTFReBi9c4piW/nwF3P7O9OviHwrBUtnR5uMVV8F7u611kjQR+Kr7tSRa
fBGYTSlqCA4sBkf9zT1L2V8C/uLEg7BOWil4aF1t5vYCTaX9JmQJy8Dp0ScD
0vTojMH807GM78BCpzthHC76mkvG3C0husvdkb+tBh0gKfBy/RE94flwLbIT
3SC0mlmWoeOkPgOF/WgyXC1hK9BOxnNi+9/R0YHu9NdG0OV167V6FbpfT+4c
vbfhV//Tu1rUOYYOqbleFmZZDr6x3Fj13B89rt8m7+lFNyVwnX29KtCVs4JW
MdpubUhbyqgEK996RIusRNPalr5f3FoFnitiH129iJ6hPunRL6J3RtO5/zhW
g/1uslbXk9D/Aj4xENg=
          "]]}, Annotation[#, "Charting`Private`Tag$1777695#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$1777695#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1H0w2wcYB3BVa2jNpotN05kl3bq2TBHBaOtXddoZuqUxpByLQ3HooiGs
XrqOVr3EvDZqjjlrprfuOKIhm1xR8cuIJk5YbVpHYzmqV5bTtGXt3TzPc/e9
733++v730Hnp7HhzMzMz/su86icp+4zsrvUjZq+uwJUoP9U9Qx5wJjbt9AFv
VXngEHj1tON2a24ImFr7NaEbCQOz1m6Q02QUeDs95OPbB3lg0fWnNzmyePAK
vYB5qzwJzJ3iz7DYqbifXcbITj4LFuePTvR9wQdrPA36Vvtz4FJrubV4QgD2
nDZ1nOvJAp9tuOTh3iAEt0VRpcu52WCjU+ved3vRx56x6k6soQ28PPXfb+eA
K8g7FAELnTM3WUM7jI5bN+xRBGzanQi2f9EeH4z2dH+D2MFBWyUwo76MQ0+L
w4XNfLTAOzvStIi20dX7nEr8BlywR1ZUEn4evJKu0/QfzwXvj8y5O5iPjvF3
GBvqRpukaWqlFl3jpBgdXkbLL1fbkEb07PyZUPIF2urY4XLSIu9/MwnXJttR
cgc6j9sTotqFVlHjRlQfob30ElJdh26RPRrSUvLB/HuuW8dM6Oa8TxwfZhaA
F1LTG/yq0C7RrbvEv6I1HGJy8De0IPhe7RMVOlC5z2ipRdsHZIY5/oneYu5Q
2PYX2tDX38l6sGkPQpubPKeYQ8t9banBC+ggWq7NxvsXwLq1BcuOSHTa6u73
KsfRFo9DmfyT34I1b+qsrqWim9xi7veXoCn+LZ9N1qPT2Hrp4s/oZm7xYmY7
epznxNgiQz9KeH7ojhxtmTISXqLYNItgpDfyPx9A+2akl9kp0ROd+T6JFhfB
fKNIf4tAT3+otw9oRweGHQlS078D27q1LE3ZFYL94wV+nU/RnRLGbrupIrBD
UpFXsuoSePFCuLnol8vgjndmXpf8WAyWyY+2HK+6At7bY6uXZpSAr3hcTaEl
loI5lNLGkKAycMw/3NOU/eXgr07cj+iiicDDGxoL5nM0lfa7kC2sAGfGfhqY
YUBnDRWejGd8Dxa63I4I56KvumXN3xSiuz2c+dvq0IHSIm/3n9ATXg/Wo7vQ
jUKb2RU5OkHmO1g8gCYjNVKOEu1iOiNx/AMdG+RBf20UXVm/ITao0QMGcufY
3U2//J8+tSVdWnRo3bWKCOtK8PWVpppnAehxwzZFbx+6OYl70M+7Cl09J2iT
oB3Wh6dFjGqw6q2HtOhqNK19+YelrTXg+VLO0bXz6Fnq417DEnpnLJ37r3Mt
2P8Ge20jBf0fXAojSg==
          "]]}, Annotation[#, "Charting`Private`Tag$1777695#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
iZAv/Mw/aKGKurpNa7ofi+DTOVJi6aSKT0b200ufUvNjSjyYsF4VE3MWfgl9
JsL9VO2O6m2q1HtVvczkhQgH2s3H40NUseVbv9XNlyIMxu02+Zeiio9nTwQ0
vhPh/d26nOGrFGb0Xe/+LoJO/Nws+jQ2lp3+MPXTDxGGK5XyjXTZEOk8297+
U4S6/sFyV1M2lTuuKjX+FkHocGpF7ho2SnfEbi0ZE2HXrplC1mE2JvcHVuaN
i7DVyHKnsYgN39jNU05NEGPt8BZz1zNsVEm7bhFPEsO25iA96AI1H6RlBUdK
DBzJ/XrkBhtBasYKKTJiLHG7e7PgARv38zR942XFoD+e8EK3mY0ZhqyrkfJi
DH3bs2FpGxvRVZPlQ6aI8X5y9wf792w8txre7K8kxgPNTf7rv7Ch//jbZR+a
GCWWzb3+vWy8//Rok6uyGDGxVSMpo2zYTBGVG00X4+BJuqKOihq1T870+j1P
jOHfUQcFdmoI6CYufDcQQy5HsznbWQ13IyQlOw3FUFwa8nn2WjVEpX4paTEW
oz3cs99yqxqa6W0THy8So47XGOW2Sw16pxo87puKUVSCcd9QNbwtL5lQuUyM
vV+0FRLj1WC6/PS6i+ZibJY8yeclq4G8zztXCDFWzqSpZqerodv1gESOpRja
5odOXxCqwep1+NosK/H///+fGgb71o2n2v2Hi6WWFkU7/of3et5bvXzjf9jy
nNvQ+O7/8P8AyIdOaw==
          "]]}, Annotation[#, "Charting`Private`Tag$1777695#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxN3Hk8Vd37N3AZUpQKSaYiCUnmjLUzhyQJSaJMmYnMQ8o8z0QSkmRKUiRU
KkSGJIWKTGUIIUV6fH/Ocz73+ed+vV/d5zh7n7Wuda21rr24zznqWlBSUFBk
raWg+N9/Z2z553UfLB9kLlbr92IWJ/ocK853CW4g/r9PlJlVvBHkIHtc50rK
ntIdZD9315Wvu8ZNts3na64sPjxkb1b7Wmh3ZhfZFcV7h54d5CVamldeG8QJ
YxZXzu07d5M9V5607HyLn+zoEw8/NwkKkS3x+N827g37yP7Io67jPgEHhMeG
trwRJoLGjj/iohEn9sx01+0q3U921ZdyVutKEbJN1f/q1FwTJXttqUoYs48Y
2YXbop/anBEn21+zrG/rG1jXv+t33UEJQoHufY7TXzGC7/6frXYl8O9hLrFt
OyXJVq0oyX4+IEV2fBDB5HRLmmyLSvP97CwyhPj/Xj/FCOmJUM2XwTA9d5GV
8y/4k177FQ5rWbKvVm+vdjkiR/Ze3nOzDYLyZHsl94tM5sIN68zsmXYokL3N
+8sd6TTYcuLs8Bmmg8T4yuUGjYkR1B0mZ/NpD5GdXXGme2YRzjpanM/lQZD9
o3bfkNIMzOJpf0V//2GyD4oVcV+wgy3Hxmu97xwmcp1W7shXMSIqV8gkehje
G7b3ffdHRbIb7QV1drUqkT3FZzMpuUGZuJa28vogRrB+uROpfgQm0r4Jng6G
rXQFGu2fwxX1+TQJCipk0xzgV3z0EBaasvrSNAvr3bnt1yeqSrb3uRGOKQc4
m33PY8pCVUL3f5fXLkZMR+X92sOnRjZBwSdxNAuOcbnl5MKmTvanQd6ilER4
baa5ZkE7vM8g91s1w5HV9t+88n02D4a0asI+jbv4BkJhtmKeG0K+GmQ/iudm
dXfWJPuLpllFWLHmavt+IUbQ0tzUyxiDhWu+zBTza5Gt774z7qkFfOvbjZbh
z/Ds6R10G4yOks2c7Ey8bzlJrLR2BboUMWL3hed2tTT6ZEvJb027rQDX7D5Y
kn4KVttk9SLGDW5biOm5Eqe/+v0jxQjDgUfT7kWwV6ixhjqnAdkZwhQ5rFEw
L6tA5YY7cNEa3VaKFwaE+kq0Kg5Z+T5jXkOzX+CazpzF0SW49fbcnnYJQ7K/
eKnpVdrB00fTAm7mwpTcY4VhvXA4HfNz3wWYaVb+gzPzKeL5HL9xTODK9+2z
+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
PwoPsrVyY56zb4K16TJKBFg8VvMJL3FCxyk//QAnrNtVHqLCC5+Qf3rxxF5Y
f91HTUcZ2KhzZleEGmws+29TmjZskkW/lHcSNl3LOlpuDJ+z4+18dt6DtH4s
Tlyg1r/6xx92ygiREMuAXSgTdxI5sKt11gbtAvjSm8KF0/c8SPmtOOEuUTl4
4RHsRdFRHfQS9mv+nnizEw5MpbJ/MgAHm3OofJiCQ5v4RUd+weEikpxzy3Bk
8uH1VGs9V+PrTXEiauno3OaNcGKi/y11AThD6N7JABU4M/7J4WgtOGuhcV/G
CU9SvilOZJt0bS8wgnPqB2gemcF5sYt9bx3hAmPmih++sG+sdIdsFKxTbzwZ
lAHLfnLw2ZvrSco3xYldCwF07XfhDYwJqZfuw/N7b/FxPIYbzzYqWjXBGQkT
JmUf4OCif+MG/bDTqy3ef0dho/5d63OmPFfns8/ECaVFyRT1Bfj7Ob/WTyxe
ZMc2vaR1k4S9BruT2BTg88vfd9Upe5Hy15X+wPr3noUWLCW2iaDXg9dbihvr
n4d70ww8brrAL+9fWKvmBZe0eCeOX4ZTR6J44sPglcle6YE4r9X5zydx4qRk
fXNgFsx/YXS0pQRezNhAs70WftMmwm3+Bn70XbFkfRecTX1SoaQPjuSyeq03
5LW6HjwnTrhJe576Mw5zZD2Ni6X3JvsZLV0TnyBcyM1h2CzqvdqfaCWIJDnh
YWcZ2O8k4brtMGztqEv5RB2Wy7nEtc4QZnh/TfaEFezSuLjU6QC/e2xcq38J
li5+crnbF87I4lI2CvIm5WcSxPmgLw1nEmFBm+yjZjnwtLZ5h3kZ/Eicz8D6
KczBF7L9ewMcwDraY9vmTcqHJIhBuiOZE+9htb93TB0/w10v99lc+gubx967
6MvuQ3ZDIKPUPx6f1f0Vfglir9vFhQBBONqqs4pSDJ45Jel7VQauPPhrTag6
HLCrMjjCAB7cynZk41lYbZ03fYwlXPCnp2WzA8wwIR8b7+ZDyldWvn/7MnPy
Vfh6RV1aWgJsnh7IdT0bFgpQzsm6B8e63LLgqYR/mq/lz63zWe2/shKEvoHV
990NcNWRhsLbrbA6k1ZF8QTc1dta+4Del2zZVpHAA0y+q/MZYuX7PY1TrmSD
Kcpn1srxwOZ5JxqrBWChiK3addLwT8f3Hc/VYLaWu4z12jAhGKBbfxK2CtGL
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
9eEctYRw8npibLVfivZN2LL6ccTJEth4qUn9fRmsK/+R5lQFrO7z7dnHynDy
eK5QveBv/ATml9/252w9zFwt6Xr+NUwhrzdp2QGPPXaxtvkAf1m8vHu8F+6S
ixuw/0K6v3Er7ds768aPr/CzxyXGziNw2uNxHY852OmxgIo/VQTZlovSlGto
YWM59dpAuojV/ha+cr3eBj7UDLDaY0uZ4C2wmFzQ/TBWmOtxzr6oHfDrKk6W
dLkI0vO0K+25yogu+wjsUZWynG8AO/zJeyx4OoK8P2QuW+FRaAIbeb2QFD4H
H6vqnCmxgGVlf9rdt4P5qraMVFyEN3fucrvqDv+ekKTS9YYHaNXjdvjDzdxG
OyYCI8j7ZzdO+smFhsMuYdkGu+JhlScvL9akwazT32NO3YQp6f9y7rkFj/Nu
KpzNjyDvJ3cd5JZ9VgjXGoo3xJTClnXeFC9r4Q389dJLb+D5w10vGzsiyPUM
n0+P6qV0wQ1ufwbMP8JlMRucxT7BQc9FolqGYMNfenesJ2DFLVYHpKbhvXs9
X1DNwcwqESfaFyLI9SjLJtf7M5fg9vinf2WoI8nOfTm0/R097P5nvZQTE6wh
LKxLzw5LqBNfurlgrnO6Dnk8keR6nXU+5ksX+eDppEvhhwXh+sZreb2icOrf
mmfuMnDgtnYdFQXYVvTrJ8bDsJ7mnN0XZfigBe1ikXok6bwHcWKw+Zj4oAEc
LpFqy2YFv6Myl75tA+98u59GwgG2zV5sr3OOJNdvVTi/yjzqBmttPitt5QN/
LZ5vD7gCex2Ntr0WDm8e301THgeffjzdTiTBeeFPMltSI8n1atOnwmyNMmB5
gZPSIzfgC5ZXbdmK4eSc+5lHq+F+F3/bj7WwkKKmtNVz0vXdFyfct2yjmX0J
P/sy0B7QBBv6e9lea4d/cDLSlHfDwdV3Mls+wxynD0uPDMNWghtpXL9HkuYP
4kTZ7+52ikn4b0NuZtQ0rJ7qZMs2B3+SWkcjsQS7vbuReZQqiuy6XFvbj2vh
Da4HpK3oYAMlKprZjXA2Y2t7wJYo0v6fOPHm2DJ1+Q54MXKf9Mg+WNX4N7Wr
KBy/90U7hSTc9yc2M0o6irRfK07wNxnbssnDNdaz1BJKsB5tZOZRDdjcz8VO
6TjsNmcoK2MIL4tocZefhoPtDq3bfxZmyBf7cedcFGk/deX3/7q7i9cSrmif
cd7sCr+vrd24dBk2XSybvRQEj0rl9UyHRpHOFxAnnFzSntlFwgtFkXdGYuB1
uy+69yXDrBmnVN5eh/mZCKbGXFgmnK+/5i787MX2BpkSWGPNxpLysqjV9nNR
nOiQp0jeXwEbefz0KaiEvSzrWJNfwel6UeWX38G8sQHpS924X4WvLwa698IS
tFYXZj7D1YpGOvZf4eZKguv8d7hXZM+44TQ8fntjlfYC/JdrNkT5339+L6MR
h1rKaPL9ZUj+eFJ2LZzc3iL/YD3MtfHpLpGNsPDV29O7meGDi1G17OzwS6nL
eclcsLaLa9QWHriryMo1cjd89pvRaVqBaFI+IE7oHBKX45GGiSR6dgU1uLpg
zVsqTVi67ld4kzZc/m5CMU4Xny8y9vWPgT7Mz9JmM3QG3nm4+qOLBcxql69B
YQ9vTkmsinKFIwvDXfQ8okn51v+ebwoQZPeBr76/NNDvD1NM2F3LvwIvbDtF
JxUBTymqeD2Ph+0M5cTCk+FRe9HvOtdg8yt7srdlwl9SOY0+3YwmreeIE22T
czK/S+E65TfbmetgeaP69o/P4UeOVWE3X8ESQaWHrV9Hk+Nz6bW838KtcP6L
+AvVXXDWlN+HI5/gVHbbI++H4FhVg0rzCXiD8VHnvdPRpPVvcSLUWUlgZham
DpHpf7QAB2TsT/Nfgj1esa/fSB1DttMMrec1enicdlnEbBNszTk7uocJHhT7
njXJApupfzF8wBZDHl+7L94Qb+GHtW+YMAxJwUI2DDS2svB6yZrFKQV4+J/9
zKXDMaTnw1byiSbOb0vKcICpb9c6LVhuvvc58wl4PkL+3k4juIw7I1PIDI4d
10wqM4ftHy5GSFvHkJ5fWsmHAu8G1tjC/EdPeyo7wpkebHrGvvDW3A/CrhHw
jEPY7j/RcJuMDEdAfAy5/rOY+hvj2mQ4sjV1fWQarGaxMJ+SBVMuGgzm3Iaf
xD5sLymGPfi21T5+AOtPv3xwuDKG9Hz0Sj5XfanwVTXMGMKXc7QO/nG8K+3t
c7hgRDLkcxNs6ZvkOtYOK6ur2Dq/g7mZ5sx+dcPLfbmGvr1wb77eMaovMavr
Mb4r851OJkH2SbjxXwe1+BJ8tEPRkpIiluwKXg6NsTUwl/vcvk4qOKTxzZYn
NLHk9WZDh8sfotfDgkwSN003wksPh63FtsAtxmki1FthqRIX5gkWOHON1sI7
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
bOH/B7SVUZQ=
          "]]}, Annotation[#, "Charting`Private`Tag$1777695#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"SZGK, Wed 24 Jan 2024\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{245, -100}, {250, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{250, -100}, {255, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{255, -100}, {260, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{260, -100}, {265, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{265, -100}, {270, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{270, -100}, {275, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{275, -100}, {280, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{280, -100}, {285, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{365, -100}, {370, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{370, -100}, {375, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{375, -100}, {380, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{380, -100}, {385, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{385, -100}, {390, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{390, -100}, {395, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{395, -100}, {400, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{400, -100}, {405, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{405, -100}, {410, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{410, -100}, {415, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{415, -100}, {420, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{420, -100}, {425, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{425, -100}, {430, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{430, -100}, {435, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{435, -100}, {440, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{440, -100}, {445, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{445, -100}, {450, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{450, -100}, {455, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{455, -100}, {460, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{460, -100}, {465, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{465, -100}, {470, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{470, -100}, {475, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{475, -100}, {480, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{480, -100}, {485, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{485, -100}, {490, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{490, -100}, {495, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{495, -100}, {500, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{500, -100}, {505, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{505, -100}, {510, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{510, -100}, {515, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{515, -100}, {520, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{520, -100}, {525, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{525, -100}, {530, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{530, -100}, {535, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{535, -100}, {540, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{540, -100}, {545, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{545, -100}, {550, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{550, -100}, {555, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{555, -100}, {560, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{560, -100}, {565, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{565, -100}, {570, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{570, -100}, {575, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{575, -100}, {580, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{580, -100}, {585, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{585, -100}, {590, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{590, -100}, {595, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{595, -100}, {600, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{600, -100}, {605, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{605, -100}, {610, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{610, -100}, {615, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{615, -100}, {620, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{620, -100}, {625, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{625, -100}, {630, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{630, -100}, {635, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{635, -100}, {640, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{640, -100}, {645, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{645, -100}, {650, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{650, -100}, {655, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{655, -100}, {660, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{660, -100}, {665, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{665, -100}, {670, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{670, -100}, {675, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{675, -100}, {680, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{680, -100}, {685, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{685, -100}, {690, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{690, -100}, {695, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{695, -100}, {700, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{700, -100}, {705, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{705, -100}, {710, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{710, -100}, {715, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{715, -100}, {720, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{720, -100}, {725, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{725, -100}, {730, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{730, -100}, {735, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{735, -100}, {740, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{740, -100}, {745, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{745, -100}, {750, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{750, -100}, {755, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{755, -100}, {760, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{760, -100}, {765, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{765, -100}, {770, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{770, -100}, {775, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{775, -100}, {780, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{780, -100}, {785, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{785, -100}, {790, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{790, -100}, {795, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{795, -100}, {800, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{800, -100}, {805, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{805, -100}, {810, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{810, -100}, {815, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{815, -100}, {820, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{820, -100}, {825, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{825, -100}, {830, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{830, -100}, {835, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{835, -100}, {840, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{840, -100}, {845, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{845, -100}, {850, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{850, -100}, {855, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{855, -100}, {860, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{860, -100}, {865, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{865, -100}, {870, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{870, -100}, {875, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{875, -100}, {880, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{880, -100}, {885, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{885, -100}, {890, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{890, -100}, {895, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{895, -100}, {900, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{900, -100}, {905, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{905, -100}, {910, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{910, -100}, {915, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{915, -100}, {920, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{920, -100}, {925, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{925, -100}, {930, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{930, -100}, {935, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{935, -100}, {940, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{940, -100}, {945, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{945, -100}, {950, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{950, -100}, {955, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{955, -100}, {960, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{960, -100}, {965, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{965, -100}, {970, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{970, -100}, {975, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{975, -100}, {980, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{980, -100}, {985, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{985, -100}, {990, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{990, -100}, {995, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{995, -100}, {1000, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1000, -100}, {1005, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1005, -100}, {1010, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1010, -100}, {1015, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1015, -100}, {1020, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1020, -100}, {1025, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1025, -100}, {1030, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1030, -100}, {1035, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1035, -100}, {1040, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1040, -100}, {1045, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1045, -100}, {1050, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1050, -100}, {1055, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1055, -100}, {1060, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1060, -100}, {1065, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1065, -100}, {1070, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1070, -100}, {1075, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1075, -100}, {1080, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1080, -100}, {1085, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1085, -100}, {1090, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1090, -100}, {1095, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1095, -100}, {1100, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1100, -100}, {1105, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1105, -100}, {1110, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1110, -100}, {1115, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1115, -100}, {1120, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1120, -100}, {1125, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1125, -100}, {1130, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1130, -100}, {1135, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1135, -100}, {1140, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1140, -100}, {1145, 100}]}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCUnInGUePcVH5kXTvYHGEcOXLkzLiPERWVc5Kz
JJFYZagnE2XL6mLkGp4c2SZ2RPMobWYnTRq77cP30+d5Ps/7eT3P53n/+VEN
iHYOEhYSEqL9t9/yY7gWz7lVcEDo/9mJFbjcZTF26WBrxmsEcLt37UPmeilL
SJIckHGlMdhonxuy0dINxiTDG1lC1UG3Sz8AmXhUPSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRXmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsZb2V2kQDx8ndFCJphyD/wd4Xs+EamHTK1/lIRSjyomqGQVvBMeTr
lGTxxOPhcD9OZhk5RyJzSH11/jnglMmdEfldYEslN6faV2AJ35OEdj44SqCg
8VgsatV4jFnVLDcgDzY2txad0ABXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
+INcMD45Xy057DhywHJT2jbfGOg/0f/i4SEysqTZaxO9KHAG7+/yyhzw3pGU
nuFyMPfWer5EPXhIxbZIkwamFebtsmwF5woGu3w6wKGRcl7Jj9asizmxTZUO
L4ONvbxZBKNYZBG72sD562CmMWe2TiEOuVnVJeXKJ3CeZIdkxYt45Mw3pzJx
sgnICZ2/8AqdwFw6ZZjmC45pam7piwS3NNgq+8SD39dO5c+ngXWvpCynnl6z
PhZxUTZ8Yx44+EziDrtGsH/cS1Z2N5ioFd5DsUhENp7k3467Bz5eecaQUJmE
3OiNoy9QkpF5+DrNbffBB78YldkugTkB6QOv5FOQqYynovFG4BT2WInifnCg
gKPeabXqjN0YUeHrrSAi2JiwCdvoChYPNvA+HAierHBPukoGx5sme/LnwVKj
F/e6hKQiZ6i3Z+e6pyEvRo8yH9lQkLU9U4aenAAfsVQafHYXzKdHDXQPg0vw
nf09C+COs8VSDB54eibUkfEVLH5wfwFDJH3Ve7Dd1dL9jI3gdNI9h94t4F5c
YF/vTrDJbANjoAxc2/7+2bDoCWTyy93rB/ngq+k/Kb9JyECei4yuNL8A1vOp
21LRDGa6YmNPfgfHE1+WfuwFW3dr8cSGwQpWCW7KE+B1wkpZjX+COQ8f3TGa
WjMBG6aEsTvZ4A4zaRxxDmyvSJFaUclEHl2aE7vtCY7ibt1eNAIW+eBoQHY6
iUzmFc62YaeQrd0O2A+onkaW3lP7blwuC9kyKN78zmfwnQa1rXLj2chKx7JN
wnrPIM9nugsXNp1Fvr2Z9WNDzTnk9g6LWpsLOcia96Rn6bG5yDmG5eGKIXnI
rqJ5VQ72+chH3pK8RLULkP1tX3u0KhYi96wwRQyWwTjFB0nOSVTkBD8761gO
OPFZllOQ2nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEH5OdjP3lD1h35w0cWVCs4A+DGHITM4
tOpv/2dvaW7rMNix7BLVQ7IIuX6xuuSLFXiEs6Hz/kPw1WMkfXPTC+Bidnxj
A1hJ0DNZqFaMzBUbS03wAvfKvlH0KQbT/QRV42Xg6iZ59cOXwHIjakG4y+Ac
vl49swq8omL2llq9Zl0szsYG71QDtptKNLD9Dbw9tcHMogXcTRMnGjwAk6fD
vHc8Bz+106WIz4EVby1cfre+BFlIuWaBjIFn8lwtltLAR38WhIqeBrO/1lPl
c8EiEUWkiTywxkSaRlUB2Mo25L0/dc147Cj9UNuOIvC1Ik1iUwmYHfWFZVjx
nVmO+i713/nXmvSYVvBfBDsl2hB4GvfhPucdWMZPlfSPTimy5Q3npZVw8L/7
CgA1
          "]]}, Annotation[#, "Charting`Private`Tag$1777757#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$1777757#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCm5EzkqnFuKj+yrh1sjjCOHDlyZtzHiIrKOclZ
kkisMtSTibJldTFyDU+ObBM7onmUNrOTJo1t9+H76fM8n+fzvJ7n/Xz+fKsE
RDsHCQsJCdG+7X/3Y7gmz7lVcEDo/9HCClzushi7dLA1a6sHcLt37UPmeilJ
SJIckHGlMdhonxuy0dINxiTDG1lCxUG3Sz8AmXhULSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRWmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsab2V2kQDx8ndFCJphSD/wd4Xs+EamHTK1/lIRSjyokqGQVvBMeTr
lGTxxOPhkB8ns4ycI5E5pL46/xxwyuTOiPwusKWim1PtK7CE70lCOx8cJVBQ
fywWtWpdjFnVLDcgDzY2txadUAdXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
2ge5YO3kfNXksOPIActNadt8Y+D/if4XDw+RkSXNXpvoRYEzeH+XV+aA946k
9AyXg7m31vMl6sFDyrZFGjQwrTBvl2UrOFcw2OXTAQ6NlPNKfrRmfcyJbap4
eBls7OXNIhjFIovY1QbOXwczjTmzdQpxyM0qLilXPoHzJDskK17EI2e+OZWJ
k01ATuj8hVfoBObSKcM0X3BMU3NLXyS4pcFWySce/L52Kn8+Dax7JWU59fSq
M3ZjERdlwzfmgYPPJO6wawT7x71kZXeDiZrhPRSLRGTjSf7tuHvg45VnDAmV
SciN3jj6AiUZmaddp7HtPvjgF6My2yUwJyB94JV8CjKV8VQ03gicwh4rwe8H
Bwo4ap1Wa96DERW+3goigo0Jm7CNrmDxYAPvw4HgyQr3pKtkcLxpsid/Hiw1
enGvS0gqcoZae3auexryYvQo85ENBVnLM2XoyQnwEUvFwWd3wXx61ED3MLhE
u7O/ZwHccbZYisEDT8+EOjK+gsUP7i9giKSvmoDtrpbuZ2wEp5PuOfRuAffi
Avt6d4JNZhsYA2Xg2vb3z4ZFTyCTX+5eP8gHX03/SelNQgbyXGR0pfkFsJ5P
3ZaKZjDTFRt78js4nviy9GMv2Lpbkyc2DFawSnBTmgCvE1bMavwTzHn46I7R
1JoNsGFKGLuTDe4wk8YR58D2eIrUinIm8ujSnNhtT3AUd+v2ohGwyAdHA7LT
SWQyr3C2DTuFbO12wH5A5TSy9J7ad+NyWciWQfHmdz6D7zSobpUbz0ZWPJZt
EtZ7Bnk+0124sOks8u3NrB8bas4ht3dY1NpcyEHWuCc9S4/NRc4xLA/Hh+Qh
u4rmVTnY5yMfeUvyEtUqQPa3fe3Rii9E7llhihgsg3H4B0nOSVTkBD8761gO
OPFZllOQ6nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEHpOdjP3lDlh35w0cWVCs4A+DGHITM4
tOZv/bO3NLd1GOxYdonqIVmEXL9YXfLFCjzC2dB5/yH46jGSvrnpBXAxO76x
Aawo6JksVC1G5oqNpSZ4gXtl3+B9isF0P0HVeBm4ukle7fAlsNyIahDuMjiH
r1fPrAKvKJu9pVav+lu/x9nYaDvVgO2mEg1sfwNvT20ws2gBd9PEiQYPwOTp
MO8dz8FP7XQp4nNg/K2Fy+/WlyALKdUskDHwTJ6rxVIa+OjPglDR02D213qq
fC5YJKKINJEHVp9IU68qAFvZhrz3p65ZFztKP9S2owh8rUiD2FQCZkd9YRlW
fGeWo75L/Xf+tSY9phX8F8FOkTYEnsZ9uM95B5bxUyH9o1OKbHnDeWklHPwv
88gOtA==
          "]]}, Annotation[#, "Charting`Private`Tag$1777757#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
iZAv/Mw/aKGKurpNa7ofi+DTOVJi6aSKT0b200ufUvNjSjyYsF4VE3MWfgl9
JsL9VO2O6m2q1HtVvczkhQgH2s3H40NUseVbv9XNlyIMxu02+Zeiio9nTwQ0
vhPh/d26nOGrFGb0Xe/+LoJO/Nws+jQ2lp3+MPXTDxGGK5XyjXTZEOk8297+
U4S6/sFyV1M2lTuuKjX+FkHocGpF7ho2SnfEbi0ZE2HXrplC1mE2JvcHVuaN
i7DVyHKnsYgN39jNU05NEGPt8BZz1zNsVEm7bhFPEsO25iA96AI1H6RlBUdK
DBzJ/XrkBhtBasYKKTJiLHG7e7PgARv38zR942XFoD+e8EK3mY0ZhqyrkfJi
DH3bs2FpGxvRVZPlQ6aI8X5y9wf792w8txre7K8kxgPNTf7rv7Ch//jbZR+a
GCWWzb3+vWy8//Rok6uyGDGxVSMpo2zYTBGVG00X4+BJuqKOihq1T870+j1P
jOHfUQcFdmoI6CYufDcQQy5HsznbWQ13IyQlOw3FUFwa8nn2WjVEpX4paTEW
oz3cs99yqxqa6W0THy8So47XGOW2Sw16pxo87puKUVSCcd9QNbwtL5lQuUyM
vV+0FRLj1WC6/PS6i+ZibJY8yeclq4G8zztXCDFWzqSpZqerodv1gESOpRja
5odOXxCqwep1+NosK/H///+fGgb71o2n2v2Hi6WWFkU7/of3et5bvXzjf9jy
nNvQ+O7/8P8AyIdOaw==
          "]]}, Annotation[#, "Charting`Private`Tag$1777757#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
xn/ggvLmssIe+EXltVb1AUdi97+bOCH2qk+uhtqJ4qTu7bm7+eGi3rnaN0Jw
w5eX3XaSTsSz5dYfqyRO9A+nztHLwgvfzjPnHYDFZxkO92vCZxcLfXiM4RSa
E6V6dnAj4/RwnM9/9r/xGbV4kBOh9b/Hd1KcWGRL4n0VCXNstpC1ToQleWW0
adPhK2Je1Z6P4CXFauGJd7CFJnXy2Tm42ViV6h2bM8VDZzdxu/DAfy1HpJkF
nQmnfwsucYLzwqMTRbtgkkPEhaO7YUt30RvBSnCa/+vOmpMwo/znveL2cMDc
VGpGBCzX4dX4NhWevbf6N/1tuG2rWsKOIrgoNkpE6QEcufTm6Zkq2NqO/bTn
M2fif1KMECd6hHZWDffCxwdkefUWYVFt3wdOqy9SvPZp3bFoenhQcs1QHvNF
cv0oTjy9ru5Xzwn7+L4tWtgBy5w26iVJw7zt/jc22MM0R7LPjeXCfQ+HF+iK
4OodoknbHlxcaY/3xYn0ZEfRA1WwB82DesNnMKlf8Ud8G/yt5sX2xl4459px
PaoJ2Ni7K2TvIiw/yrNFe7XLSnt8uvy8T5k9tKeHf7y8dTyCGW6XGR2+xQkH
PN94KXkHLK6zlyt4Dxyc3jTkIw/39J+576IEk0Sm/G2PwOFOQRrmJ1xW6r1m
cWIgps3vkC1MFPDdEwiDr8zc8+WKhSfkVNRZUmCVwC4O+mtwRuOFL6tyXCj9
W3WDBJ+pe/D8UAV7Xw2c69pb9KYF1qFZo1bbDd89msZW0Q9TJ4r2FX+FDT7U
FN6edCHHZ3GimF/b6/pPmP5AVoEfqyvFlkbjn85IwE+yA+7qysBs31g9jinC
F0i3lVWUXcn9yeX26SnHrHgUdlxrli96Cua7EnqIxwpu3l7Uw+AKe5V1uC4E
wm0LVkoz4bDQoQWmb3GuK/0TWgnCLyKmu/8K/E8bf96HTFjyu/2HR5VwFGMV
Y1on3ESn6y30CV63euLrw0FXcn9cglBbCjE4PA6H/NrysnMWppk8mfNjtRvF
l4YuX2JjhWv7eCazueClngfGuwVgxS7NlqfCsM/bYXktKTdyvSlB/GrcvNmJ
gN1qj87FHodny5cDgDHsVFhc0mIHl+SpbTnjCk9k90WP+cBi170WvYPcKOND
tldZLzBEwZah7tuP5MNmLt29IQ1wloOLJscbt5X6RUiC+GSz/smtdzCvZe4u
6V7YyOzA1foh+L2+k/uXH7CeZrYONa07xclHFJ7FM8Idyv9I8bPBLIR9Vgk3
fFKebgOxzZ3cX5MgXkvtGzMmwRpCFxp9D8KNfNdyM07Aquytlx+bwMEbrafV
reB6hlVmH+xharqrrefd3FfqkQAJ4iD17v2/fGGF7ynzMhmwTM/vUpdKWFaJ
7npgnTs53ksQcnmskXENsALTVvfMVljRRfRcQSdMECryDQOwMqMx68A0rNbl
9u0vlQfFGjmxz7g3wJr0GcXCHB7k+C9BnHDMS9/LC2t1loWqCMLaCnUXtXfB
ems/HHXYBxt2TG+LPAwbyf3dkKYJG2cxLObqwqZrOEfKjOCztoIdT895kPOD
BHGeRi/otz/smBG6h5QBO1MnbSWyYRfrLEbNfNjtdcH86Xse5PgrQbjveTRw
vgL2omqvCn4B+zWPJt3ogANTV9s96YdDzHlU3k/CYU1CUsM/4QhJad4fS3BU
ysF1q9d4royHDEkQ0YvHfmxcDycl+d9SE4YzRO/pBqjAmQlPDsZowFnzjWIZ
2p4r9RKzJHHTuHNzviGcXd9PW2EG58YtfHzrAOcbsZV/94V942Tb5aLhE/VG
E8EZsNwne59dOZ4rz4dPktg2H0DfdhdmZElMdbsPz+26tYPnMdxo0qhk1QRn
JI4bl76HQwr/jun3wY4vmb3/jMCGfdvWZU96kvujksShBekravPw6Fm/1k8c
XhTHNb2gc5WGvQa6krkU4XNLo9tqlb3I9aYkocH5556FBixD2kAw6MDrLHcb
6Z2De9L0PW44w8udr5K98bDQ+ZGRlmJ4IYORdnMN/PqNJL/5a7hiVKl4XSd8
k0ZXsfgjHMVn9Upn0Ivc/5QkXGU9T/0eg3my6uLjGLwpfkpH37RDBC7g5zFo
lvJeaY9RkkSyvPiQ0z7YT5dw2XQQtnbQon6iBstnu/GtNYCZ3l2V07aCM7L4
lA2DYRGbm8fMsuEpTfN281K4YvcOfes6mGdH6ObRBjiAc6T7whvvlfrlhiQx
QH8kc/wdfPjPHVOHXrjzhZiN2x/YPO7eRV9uH4obAllk/gr4rNTnJZLELteL
8wEicIxVRyU1CZ4+Je0btA9+tP/nqjA1OGDbo5BIfXiAnevIehP48FpvhlhL
OP93d8tGe5hpXCEuwdWHPJ68fP5tS2wpQfC18tq0tETYPD2Q79pNWDRAOTvr
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
ZC7wiyU8XapxZ9YOrpDPbqV1hduN/1irx8Njl/SpYwvhQ1nBlufu4XhXq+83
7X0AT/X0iTM+gtUWNiR+roLn9tqeDq+Hb7k0bCM1w4sJc6Fr3sA69wTHPryF
77ZqnSh+B1NPBJRd7g5byX/Hl+O9yEcf0S+wsdU+lX9GYQ7DfEuPdeEUt2pw
h3ELwaIv3nLa7YXDDkTdqVaFe89Urk9Uh2V8RpysNOHoqxyd8lrh5PmY5fe1
Qlluox6c8COL+tEZmCD9aTKzgCfsTyXS28EZdx+cvu8CzzR+qQn1CKe8D+oj
zIJGPvDNNctdjAD4l6D9GE0QnGfWVFYYCetl7vDVS4QLq3T6RK7ANN2BKn+v
wqd/ldx5mwmXbupdn3czfGU+3Xr5eShJ05Xeg7VtI6mqauGRuc9+fvWwzyWZ
P0RD+Mr868XleMAY5b26Gc5J6fv1vBVuvhs1p/4Onq3dO9P6Cebp7P+uMwQr
f4seez8Od7l+scmYCqfEa1uqfV+Nf8BUkTFW/L/gZPaBwS+LcLVIbL81TQTF
QwfkescZYK+m2DMlG2Am3cFuZ1b4Zq+cofQmWMYmrusnVwSlfgtJGmpbJQK/
q1Z4xbAPtj2ScOS1AkzVMfwyjoig5O8kY0VVbWVY6GtCPbsafGJJse7qcdiD
9euTLfpwllBSZY4x3KB44KGwJWzUkCQ9dj6CPP6znC+0Ru8X2cFBHw+QnJxg
Tuvkkt2uMOFLFFb4wNYJ3+4oBsGLPAeFqMLguNspuU8jYUHSmGBwLPyo6mD2
4cQI8nzZ8s9X+V3RvAFbVj2O1C2GjRab1N6VwloKH2hPlcNqPl+ffngUsZJf
K0mEYtW8v9ETWEhh02+TepitStrl3CuYSkFnwrId/vbY2drmPfx54dL2sR64
Uz6+3+5zxMr8S+1y+/bOuv79C/z0cbGR0zCc9njshMcP2PGxsIr/6kiKLRdk
qVfRwUbyajWB9JEr8bJp+Xq99X1omODDjy33hTDDJPng++GcMN/jbLHoLfBs
5Wf+JDH4VSUvR7o8fLPSkP7mEdij8spSnj5s/zv3scjpyJX227qcv+TKPQqM
YUOv59LiZ+HjlR3TxRawnNyM7X1beEcl83D5RXhjxzbXIHf417j0ai1vuJ9O
LX6LP9zMb7hlPBDnd13XTz4sAnYOv6m/LQFWefLiYnUazDk1GnvqBkzN8Id3
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
          "]]}, Annotation[#, "Charting`Private`Tag$1777757#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"G\[OAcute]lyairoda, Wed 24 Jan 2024\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{245, -100}, {250, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{250, -100}, {255, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{255, -100}, {260, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{260, -100}, {265, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{265, -100}, {270, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{270, -100}, {275, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{275, -100}, {280, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{280, -100}, {285, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{365, -100}, {370, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{370, -100}, {375, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{375, -100}, {380, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{380, -100}, {385, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{385, -100}, {390, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{390, -100}, {395, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{395, -100}, {400, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{400, -100}, {405, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{405, -100}, {410, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{410, -100}, {415, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{415, -100}, {420, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{420, -100}, {425, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{425, -100}, {430, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{430, -100}, {435, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{435, -100}, {440, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{440, -100}, {445, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{445, -100}, {450, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{450, -100}, {455, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{455, -100}, {460, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{460, -100}, {465, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{465, -100}, {470, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{470, -100}, {475, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{475, -100}, {480, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{480, -100}, {485, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{485, -100}, {490, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{490, -100}, {495, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{495, -100}, {500, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{500, -100}, {505, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{505, -100}, {510, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{510, -100}, {515, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{515, -100}, {520, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{520, -100}, {525, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{525, -100}, {530, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{530, -100}, {535, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{535, -100}, {540, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{540, -100}, {545, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{545, -100}, {550, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{550, -100}, {555, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{555, -100}, {560, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{560, -100}, {565, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{565, -100}, {570, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{570, -100}, {575, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{575, -100}, {580, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{580, -100}, {585, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{585, -100}, {590, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{590, -100}, {595, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{595, -100}, {600, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{600, -100}, {605, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{605, -100}, {610, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{610, -100}, {615, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{615, -100}, {620, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{620, -100}, {625, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{625, -100}, {630, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{630, -100}, {635, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{635, -100}, {640, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{640, -100}, {645, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{645, -100}, {650, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{650, -100}, {655, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{655, -100}, {660, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{660, -100}, {665, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{665, -100}, {670, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{670, -100}, {675, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{675, -100}, {680, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{680, -100}, {685, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{685, -100}, {690, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{690, -100}, {695, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{695, -100}, {700, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{700, -100}, {705, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{705, -100}, {710, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{710, -100}, {715, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{715, -100}, {720, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{720, -100}, {725, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{725, -100}, {730, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{730, -100}, {735, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{735, -100}, {740, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{740, -100}, {745, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{745, -100}, {750, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{750, -100}, {755, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{755, -100}, {760, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{760, -100}, {765, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{765, -100}, {770, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{770, -100}, {775, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{775, -100}, {780, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{780, -100}, {785, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{785, -100}, {790, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{790, -100}, {795, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{795, -100}, {800, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{800, -100}, {805, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{805, -100}, {810, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{810, -100}, {815, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{815, -100}, {820, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{820, -100}, {825, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{825, -100}, {830, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{830, -100}, {835, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{835, -100}, {840, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{840, -100}, {845, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{845, -100}, {850, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{850, -100}, {855, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{855, -100}, {860, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{860, -100}, {865, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{865, -100}, {870, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{870, -100}, {875, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{875, -100}, {880, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{880, -100}, {885, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{885, -100}, {890, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{890, -100}, {895, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{895, -100}, {900, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{900, -100}, {905, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{905, -100}, {910, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{910, -100}, {915, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{915, -100}, {920, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{920, -100}, {925, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{925, -100}, {930, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{930, -100}, {935, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{935, -100}, {940, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{940, -100}, {945, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{945, -100}, {950, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{950, -100}, {955, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{955, -100}, {960, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{960, -100}, {965, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{965, -100}, {970, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{970, -100}, {975, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{975, -100}, {980, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{980, -100}, {985, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{985, -100}, {990, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{990, -100}, {995, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{995, -100}, {1000, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1000, -100}, {1005, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1005, -100}, {1010, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1010, -100}, {1015, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1015, -100}, {1020, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1020, -100}, {1025, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1025, -100}, {1030, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1030, -100}, {1035, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1035, -100}, {1040, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1040, -100}, {1045, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1045, -100}, {1050, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1050, -100}, {1055, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1055, -100}, {1060, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1060, -100}, {1065, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1065, -100}, {1070, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1070, -100}, {1075, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1075, -100}, {1080, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1080, -100}, {1085, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1085, -100}, {1090, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1090, -100}, {1095, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1095, -100}, {1100, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1100, -100}, {1105, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1105, -100}, {1110, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1110, -100}, {1115, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1115, -100}, {1120, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1120, -100}, {1125, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1125, -100}, {1130, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1130, -100}, {1135, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1135, -100}, {1140, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1140, -100}, {1145, 100}]}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1H0w2wcYB3BVa2jNpotN05kl3bq2jHoJRlu/qtNW0S2NhZRjcSgOXTSE
1Uu30Wq8zWupOeasmd6644iGbHJFxS8jGk5Ys2kdjeWoXllO05atO57nufve
9z5/ff976LxUVqypiYkJ/7+86qdJ+wyszrUjJv+fM1FypmuaPOBIbNrhA96K
4sAh8MpZ++2W3GAwtfpLQjMcCmau3iS1ZAR4Oz344zvOPHDpjWe32NJY8DI9
z+12SQKYO8WfZrKScT+zmJGZeB5cmzsy0fsZH6z20OtabC+AiyxllrUTArCH
1th+oTsDfL7+srtrvRDcGkGVLGVngg0OLXvf7UEfe86sObGK1vNyVH+9nQUu
I+9SBEx01uxkFe0wOmZNv0fuv+E8FyLI9mVbbBDaw/UNYgcbbRHnFvF5DFpb
yxE28dECr8xw4wLaSlPnfSb+K3DeHmmBiHMRvJyqUfcdzwbvD8+6N5CLjvKz
Gx3sQhslKSrFGLrKQT4ytISWXam0Ig3omblzIeRLtMWxwyWkWc6GXYmDjdYj
5A50Drc7WLkLraTGDCs/QnvqxKSqBt0sfTw4RskF8+8f3DpqRDflfGL/KD0P
PJ+cWu9bgXaKbNlV+wtazSYmB35FC4LuVz9VogMU+wzmY2hb//RQ+z/QW0zt
8lv/ROt7+zqYDzftRoxlJ87KZ9EyH2tq0Dw6kJZttf7+JbBmdd68PRydsrL7
vfJxtNmTEDf+6a/B6jc1FteT0Y0uUQ/6RGiKX/OpyTp0CksnWfgJ3cQtXEhv
Q4/zHBhbpOjHcS8O3ZWhzZOGOSL5pt0JRmoD/9N+tE9aarGNAj3Rkesdb/YN
mG8o1d0m0NoPdbb+beiA0COBKvq3YGuX5sUpm3ywX6zAt+MZukPM2G0zVQC2
SyjwTFReBi9c4piW/nwF3P7O9OviHwrBUtnR5uMVV8F7u611kjQR+Kr7tSRa
fBGYTSlqCA4sBkf9zT1L2V8C/uLEg7BOWil4aF1t5vYCTaX9JmQJy8Dp0ScD
0vTojMH807GM78BCpzthHC76mkvG3C0husvdkb+tBh0gKfBy/RE94flwLbIT
3SC0mlmWoeOkPgOF/WgyXC1hK9BOxnNi+9/R0YHu9NdG0OV167V6FbpfT+4c
vbfhV//Tu1rUOYYOqbleFmZZDr6x3Fj13B89rt8m7+lFNyVwnX29KtCVs4JW
MdpubUhbyqgEK996RIusRNPalr5f3FoFnitiH129iJ6hPunRL6J3RtO5/zhW
g/1uslbXk9D/Aj4xENg=
          "]]}, Annotation[#, "Charting`Private`Tag$1777815#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$1777815#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1H0w2wcYB3BVa2jNpotN05kl3bq2TBHBaOtXddoZuqUxpByLQ3HooiGs
XrqOVr3EvDZqjjlrprfuOKIhm1xR8cuIJk5YbVpHYzmqV5bTtGXt3TzPc/e9
733++v730Hnp7HhzMzMz/su86icp+4zsrvUjZq+uwJUoP9U9Qx5wJjbt9AFv
VXngEHj1tON2a24ImFr7NaEbCQOz1m6Q02QUeDs95OPbB3lg0fWnNzmyePAK
vYB5qzwJzJ3iz7DYqbifXcbITj4LFuePTvR9wQdrPA36Vvtz4FJrubV4QgD2
nDZ1nOvJAp9tuOTh3iAEt0VRpcu52WCjU+ved3vRx56x6k6soQ28PPXfb+eA
K8g7FAELnTM3WUM7jI5bN+xRBGzanQi2f9EeH4z2dH+D2MFBWyUwo76MQ0+L
w4XNfLTAOzvStIi20dX7nEr8BlywR1ZUEn4evJKu0/QfzwXvj8y5O5iPjvF3
GBvqRpukaWqlFl3jpBgdXkbLL1fbkEb07PyZUPIF2urY4XLSIu9/MwnXJttR
cgc6j9sTotqFVlHjRlQfob30ElJdh26RPRrSUvLB/HuuW8dM6Oa8TxwfZhaA
F1LTG/yq0C7RrbvEv6I1HGJy8De0IPhe7RMVOlC5z2ipRdsHZIY5/oneYu5Q
2PYX2tDX38l6sGkPQpubPKeYQ8t9banBC+ggWq7NxvsXwLq1BcuOSHTa6u73
KsfRFo9DmfyT34I1b+qsrqWim9xi7veXoCn+LZ9N1qPT2Hrp4s/oZm7xYmY7
epznxNgiQz9KeH7ojhxtmTISXqLYNItgpDfyPx9A+2akl9kp0ROd+T6JFhfB
fKNIf4tAT3+otw9oRweGHQlS078D27q1LE3ZFYL94wV+nU/RnRLGbrupIrBD
UpFXsuoSePFCuLnol8vgjndmXpf8WAyWyY+2HK+6At7bY6uXZpSAr3hcTaEl
loI5lNLGkKAycMw/3NOU/eXgr07cj+iiicDDGxoL5nM0lfa7kC2sAGfGfhqY
YUBnDRWejGd8Dxa63I4I56KvumXN3xSiuz2c+dvq0IHSIm/3n9ATXg/Wo7vQ
jUKb2RU5OkHmO1g8gCYjNVKOEu1iOiNx/AMdG+RBf20UXVm/ITao0QMGcufY
3U2//J8+tSVdWnRo3bWKCOtK8PWVpppnAehxwzZFbx+6OYl70M+7Cl09J2iT
oB3Wh6dFjGqw6q2HtOhqNK19+YelrTXg+VLO0bXz6Fnq417DEnpnLJ37r3Mt
2P8Ge20jBf0fXAojSg==
          "]]}, Annotation[#, "Charting`Private`Tag$1777815#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
iZAv/Mw/aKGKurpNa7ofi+DTOVJi6aSKT0b200ufUvNjSjyYsF4VE3MWfgl9
JsL9VO2O6m2q1HtVvczkhQgH2s3H40NUseVbv9XNlyIMxu02+Zeiio9nTwQ0
vhPh/d26nOGrFGb0Xe/+LoJO/Nws+jQ2lp3+MPXTDxGGK5XyjXTZEOk8297+
U4S6/sFyV1M2lTuuKjX+FkHocGpF7ho2SnfEbi0ZE2HXrplC1mE2JvcHVuaN
i7DVyHKnsYgN39jNU05NEGPt8BZz1zNsVEm7bhFPEsO25iA96AI1H6RlBUdK
DBzJ/XrkBhtBasYKKTJiLHG7e7PgARv38zR942XFoD+e8EK3mY0ZhqyrkfJi
DH3bs2FpGxvRVZPlQ6aI8X5y9wf792w8txre7K8kxgPNTf7rv7Ch//jbZR+a
GCWWzb3+vWy8//Rok6uyGDGxVSMpo2zYTBGVG00X4+BJuqKOihq1T870+j1P
jOHfUQcFdmoI6CYufDcQQy5HsznbWQ13IyQlOw3FUFwa8nn2WjVEpX4paTEW
oz3cs99yqxqa6W0THy8So47XGOW2Sw16pxo87puKUVSCcd9QNbwtL5lQuUyM
vV+0FRLj1WC6/PS6i+ZibJY8yeclq4G8zztXCDFWzqSpZqerodv1gESOpRja
5odOXxCqwep1+NosK/H///+fGgb71o2n2v2Hi6WWFkU7/of3et5bvXzjf9jy
nNvQ+O7/8P8AyIdOaw==
          "]]}, Annotation[#, "Charting`Private`Tag$1777815#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
1Qs+ynLDyexmXepbYM+3K1oPycBHMp/UnVA/Q8kfpYjVShvu+VjALW2+qdfO
w5eteq48uAGrzSt7tT2GNzWMOvU2w4tRydajb+GeY7rHfw+fod6PMuH5w0yz
sKR+ucQuGTuqs/28WDzOwoE6ojRB52ELzrczMVftCOf/JsgEefx/CBlPuwHz
3VEYKMiHu3cmdjQ3w7GvflUODsOsNI+S+LfYUx2wzd31iAWsXPPawuU8PHNE
9uDVG/ArgS+aKfnw/bE4ldzHcNQjDenSZvuleDMnRThcnBZteAsP3H1Av7jG
gWqTty4fZfXhSi+WDsLcgaD534tECPKm1eo6wsHlcsVHfOERk9YsizD4fvJc
iEc27N2z1T6iFlbbYHgw4wPManaRVDYHOy7yCNUzO1LqN/J6k1q4po0bltul
xfROCE762DM7QILNN7H2zB2ARSzkq1bZweHLXhSt94InblmmC1+GDdTmY6Xi
4dL+6CCVDEdKvUrOLy3HdG3fw91ftDjiOJ2oVgnupbspAKcJu/68swOmf8Y6
VKwK29rc6q7SdSI2/i/AkwjJnBePX9vAs8PzqaOX4GpR0YvL0uCQM0es1lbA
Y6zjRwSbYb28Szrbu+FiXV4lhUGnpfmyjVzfjRVtU5+GX5YweMlzn6U6+RfJ
dD8JbtVefKWvCP+91rTfmDi7FK8VSITUcFzDcW34lIL5rlMH4GfdM5KOpvA2
rwhBrzNw0vkXXVWHXJbG81kSoX/ciOnXCZhN+ZO8hCP89Y5Q+x43F2o+2sBz
2tbKF864fJfmwiU4YGYyMSUMVnrl3fQyEZ6+RzfHehvu2KQTI1wAF0SGi6k9
hK8sttcer4BtHdYc86pzWVqvg0hEj8jWiqGP8MEBhQ1HFmDxw34PnenOUc1c
W7M/ghX+Isk4mLP63NJ4iSYRtTf3+tfzwL5+LwvmhWG5Y6YfSbLwhMKXlWfU
4VzyXLp1CL4cdL+7whi2nJ45230CJk4ps0xbn6PWKxs6z99a6QhHRUTT+ofB
9HsyTo1lw32PhuaZCuBKYfG4zQ/PLY3HVPL4ij8rvqsC9qR/WG9SB5P6VX9G
d8CjVQ1bmj7CmTcOHqH5Bpv5dAfLL8DKI3wbD9O5Lq1HGSSC56jFI0dW+Oez
rINhq+FOuZGhLB444OmqC/HCsISBPG+QDByU3Dzoqwz39B9/4KoGk8Qmz9vv
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
ZQf2BunCb2aHme8fhSseybKf8YTT3S9yCl6DTbNfc7Wnwmu6RLj9s+Eph05u
w1xc7wsG37XiBXDejS08dPfhENk2nncP4fk4t/VyT2HH6fX8Ma9ggwe2m/f+
gBVdHorQclykOr/j2DYzAZhfilaiXBLuNjfcYasAR0flSHITsKOIvtS4Ory3
el6qXhveapxFSta9SP289BMHpF0OwnY0sanBZnDnqjcsyQ7wGFeOkLnzRUp/
WppgXOe1a4sbvGnDXpMRT1hRYL1boS9sL/okVzEQTpM68anuClwuKzkfEgm/
UlzGfSAW/qbaKcl5DWZSy9Dtvn6R0i8mr0d7NS+cTIcd9YdKxu7At0xCx9zv
wa9ObhNcVgZ/s15QaaiAme1aja5UX6ScX5EmBJ1SXfTqYeVzThFrGuH0Sw9m
Rd/AzHG/Tu0c/OfnExv96UYuUvrT5PoxJSmpcRw+knamOGISdspUbtP/Cafn
99L3LsBdxeeVbOgvUT1RqmcozgyzPhE4O7kcFqqZCitZCas+rcvy4bxE2Y+T
Ic62Wr1nWA9nvmZaHSUId/fe0eIVg5cP6vpmSsFCI3zXTsvCO7+N35NQvESp
Z2UI46nKlh8qsMtM5FApAWsZ7tzbJhC4tH8tIkM8HH7uenMLLOR79KaTaOBS
f0hChohbOdS0aztMl+E6vVIK7m+K3FOkAFdP5KbqEXDq2oYfE9qw784+neiD
8GiH4zmLw4GUekuGMLFauCFlBDfPhjYuOwYrhq/90WEG8zwg6bhYwzNv99/g
cIStHN4/63eGX9GcnrrvBqvHzfBd8gqk9JNliPtbA7UP+8FObuWTseGweN1E
8qtkOPmIf0PmTZh1ZPmka0YgpX6TIbz8ktZr3oaHV23VWpMHN8irJT+8D2eZ
HZ8wLIe5pkZ4hSvhwCBPzZka+AcP49mGp/DJ/NjrCU2BlP1kGYJ4WfBdrgPm
n2vSeNMNL2z6kuTxCX6vTfN97TC8933EuuFRuNxxvUbpd1iU9o5jyI/ApXxD
W4ZIjJdLMv4FG3y2V09iDKJ6tVTG+Ns1cL/XyJHT64Io+/Hk779WqnqWD760
3Es0ZBNsYFAds1YInvlywEpuG5zo0StvSIJPVwvdGpCFlVjsWV0VYVb9B+fo
VOH31+d6YoggyvkD8ngVDy28pw3zV6692H4Arj6YbfDdELbok9nKfhwmiflG
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

          "]]}, Annotation[#, "Charting`Private`Tag$1777815#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"M\[EAcute]rce, Wed 24 Jan 2024\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{245, -100}, {250, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{250, -100}, {255, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{255, -100}, {260, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{260, -100}, {265, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{265, -100}, {270, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{270, -100}, {275, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{275, -100}, {280, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{280, -100}, {285, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{365, -100}, {370, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{370, -100}, {375, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{375, -100}, {380, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{380, -100}, {385, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{385, -100}, {390, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{390, -100}, {395, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{395, -100}, {400, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{400, -100}, {405, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{405, -100}, {410, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{410, -100}, {415, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{415, -100}, {420, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{420, -100}, {425, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{425, -100}, {430, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{430, -100}, {435, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{435, -100}, {440, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{440, -100}, {445, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{445, -100}, {450, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{450, -100}, {455, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{455, -100}, {460, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{460, -100}, {465, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{465, -100}, {470, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{470, -100}, {475, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{475, -100}, {480, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{480, -100}, {485, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{485, -100}, {490, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{490, -100}, {495, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{495, -100}, {500, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{500, -100}, {505, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{505, -100}, {510, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{510, -100}, {515, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{515, -100}, {520, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{520, -100}, {525, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{525, -100}, {530, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{530, -100}, {535, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{535, -100}, {540, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{540, -100}, {545, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{545, -100}, {550, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{550, -100}, {555, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{555, -100}, {560, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{560, -100}, {565, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{565, -100}, {570, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{570, -100}, {575, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{575, -100}, {580, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{580, -100}, {585, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{585, -100}, {590, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{590, -100}, {595, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{595, -100}, {600, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{600, -100}, {605, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{605, -100}, {610, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{610, -100}, {615, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{615, -100}, {620, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{620, -100}, {625, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{625, -100}, {630, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{630, -100}, {635, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{635, -100}, {640, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{640, -100}, {645, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{645, -100}, {650, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{650, -100}, {655, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{655, -100}, {660, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{660, -100}, {665, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{665, -100}, {670, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{670, -100}, {675, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{675, -100}, {680, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{680, -100}, {685, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{685, -100}, {690, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{690, -100}, {695, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{695, -100}, {700, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{700, -100}, {705, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{705, -100}, {710, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{710, -100}, {715, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{715, -100}, {720, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{720, -100}, {725, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{725, -100}, {730, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{730, -100}, {735, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{735, -100}, {740, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{740, -100}, {745, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{745, -100}, {750, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{750, -100}, {755, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{755, -100}, {760, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{760, -100}, {765, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{765, -100}, {770, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{770, -100}, {775, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{775, -100}, {780, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{780, -100}, {785, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{785, -100}, {790, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{790, -100}, {795, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{795, -100}, {800, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{800, -100}, {805, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{805, -100}, {810, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{810, -100}, {815, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{815, -100}, {820, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{820, -100}, {825, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{825, -100}, {830, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{830, -100}, {835, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{835, -100}, {840, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{840, -100}, {845, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{845, -100}, {850, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{850, -100}, {855, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{855, -100}, {860, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{860, -100}, {865, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{865, -100}, {870, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{870, -100}, {875, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{875, -100}, {880, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{880, -100}, {885, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{885, -100}, {890, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{890, -100}, {895, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{895, -100}, {900, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{900, -100}, {905, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{905, -100}, {910, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{910, -100}, {915, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{915, -100}, {920, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{920, -100}, {925, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{925, -100}, {930, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{930, -100}, {935, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{935, -100}, {940, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{940, -100}, {945, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{945, -100}, {950, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{950, -100}, {955, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{955, -100}, {960, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{960, -100}, {965, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{965, -100}, {970, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{970, -100}, {975, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{975, -100}, {980, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{980, -100}, {985, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{985, -100}, {990, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{990, -100}, {995, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{995, -100}, {1000, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1000, -100}, {1005, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1005, -100}, {1010, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1010, -100}, {1015, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1015, -100}, {1020, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1020, -100}, {1025, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1025, -100}, {1030, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1030, -100}, {1035, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1035, -100}, {1040, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1040, -100}, {1045, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1045, -100}, {1050, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1050, -100}, {1055, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1055, -100}, {1060, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1060, -100}, {1065, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1065, -100}, {1070, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1070, -100}, {1075, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1075, -100}, {1080, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1080, -100}, {1085, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1085, -100}, {1090, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1090, -100}, {1095, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1095, -100}, {1100, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1100, -100}, {1105, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1105, -100}, {1110, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1110, -100}, {1115, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1115, -100}, {1120, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1120, -100}, {1125, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1125, -100}, {1130, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1130, -100}, {1135, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1135, -100}, {1140, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1140, -100}, {1145, 100}]}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$1777873#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$1777873#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$1777873#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
iZAv/Mw/aKGKurpNa7ofi+DTOVJi6aSKT0b200ufUvNjSjyYsF4VE3MWfgl9
JsL9VO2O6m2q1HtVvczkhQgH2s3H40NUseVbv9XNlyIMxu02+Zeiio9nTwQ0
vhPh/d26nOGrFGb0Xe/+LoJO/Nws+jQ2lp3+MPXTDxGGK5XyjXTZEOk8297+
U4S6/sFyV1M2lTuuKjX+FkHocGpF7ho2SnfEbi0ZE2HXrplC1mE2JvcHVuaN
i7DVyHKnsYgN39jNU05NEGPt8BZz1zNsVEm7bhFPEsO25iA96AI1H6RlBUdK
DBzJ/XrkBhtBasYKKTJiLHG7e7PgARv38zR942XFoD+e8EK3mY0ZhqyrkfJi
DH3bs2FpGxvRVZPlQ6aI8X5y9wf792w8txre7K8kxgPNTf7rv7Ch//jbZR+a
GCWWzb3+vWy8//Rok6uyGDGxVSMpo2zYTBGVG00X4+BJuqKOihq1T870+j1P
jOHfUQcFdmoI6CYufDcQQy5HsznbWQ13IyQlOw3FUFwa8nn2WjVEpX4paTEW
oz3cs99yqxqa6W0THy8So47XGOW2Sw16pxo87puKUVSCcd9QNbwtL5lQuUyM
vV+0FRLj1WC6/PS6i+ZibJY8yeclq4G8zztXCDFWzqSpZqerodv1gESOpRja
5odOXxCqwep1+NosK/H///+fGgb71o2n2v2Hi6WWFkU7/of3et5bvXzjf9jy
nNvQ+O7/8P8AyIdOaw==
          "]]}, Annotation[#, "Charting`Private`Tag$1777873#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
/bvW9I3z4H8A/Ebdrg==
          "]]}, Annotation[#, "Charting`Private`Tag$1777873#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Lahmacun, Wed 24 Jan 2024\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{245, -100}, {250, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{250, -100}, {255, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{255, -100}, {260, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{260, -100}, {265, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{265, -100}, {270, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{270, -100}, {275, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{275, -100}, {280, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{280, -100}, {285, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{365, -100}, {370, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{370, -100}, {375, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{375, -100}, {380, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{380, -100}, {385, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{385, -100}, {390, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{390, -100}, {395, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{395, -100}, {400, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{400, -100}, {405, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{405, -100}, {410, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{410, -100}, {415, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{415, -100}, {420, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{420, -100}, {425, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{425, -100}, {430, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{430, -100}, {435, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{435, -100}, {440, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{440, -100}, {445, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{445, -100}, {450, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{450, -100}, {455, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{455, -100}, {460, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{460, -100}, {465, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{465, -100}, {470, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{470, -100}, {475, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{475, -100}, {480, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{480, -100}, {485, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{485, -100}, {490, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{490, -100}, {495, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{495, -100}, {500, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{500, -100}, {505, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{505, -100}, {510, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{510, -100}, {515, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{515, -100}, {520, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{520, -100}, {525, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{525, -100}, {530, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{530, -100}, {535, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{535, -100}, {540, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{540, -100}, {545, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{545, -100}, {550, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{550, -100}, {555, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{555, -100}, {560, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{560, -100}, {565, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{565, -100}, {570, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{570, -100}, {575, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{575, -100}, {580, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{580, -100}, {585, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{585, -100}, {590, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{590, -100}, {595, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{595, -100}, {600, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{600, -100}, {605, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{605, -100}, {610, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{610, -100}, {615, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{615, -100}, {620, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{620, -100}, {625, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{625, -100}, {630, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{630, -100}, {635, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{635, -100}, {640, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{640, -100}, {645, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{645, -100}, {650, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{650, -100}, {655, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{655, -100}, {660, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{660, -100}, {665, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{665, -100}, {670, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{670, -100}, {675, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{675, -100}, {680, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{680, -100}, {685, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{685, -100}, {690, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{690, -100}, {695, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{695, -100}, {700, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{700, -100}, {705, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{705, -100}, {710, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{710, -100}, {715, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{715, -100}, {720, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{720, -100}, {725, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{725, -100}, {730, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{730, -100}, {735, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{735, -100}, {740, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{740, -100}, {745, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{745, -100}, {750, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{750, -100}, {755, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{755, -100}, {760, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{760, -100}, {765, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{765, -100}, {770, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{770, -100}, {775, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{775, -100}, {780, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{780, -100}, {785, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{785, -100}, {790, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{790, -100}, {795, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{795, -100}, {800, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{800, -100}, {805, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{805, -100}, {810, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{810, -100}, {815, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{815, -100}, {820, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{820, -100}, {825, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{825, -100}, {830, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{830, -100}, {835, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{835, -100}, {840, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{840, -100}, {845, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{845, -100}, {850, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{850, -100}, {855, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{855, -100}, {860, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{860, -100}, {865, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{865, -100}, {870, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{870, -100}, {875, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{875, -100}, {880, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{880, -100}, {885, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{885, -100}, {890, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{890, -100}, {895, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{895, -100}, {900, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{900, -100}, {905, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{905, -100}, {910, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{910, -100}, {915, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{915, -100}, {920, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{920, -100}, {925, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{925, -100}, {930, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{930, -100}, {935, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{935, -100}, {940, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{940, -100}, {945, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{945, -100}, {950, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{950, -100}, {955, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{955, -100}, {960, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{960, -100}, {965, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{965, -100}, {970, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{970, -100}, {975, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{975, -100}, {980, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{980, -100}, {985, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{985, -100}, {990, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{990, -100}, {995, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{995, -100}, {1000, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1000, -100}, {1005, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1005, -100}, {1010, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1010, -100}, {1015, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1015, -100}, {1020, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1020, -100}, {1025, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1025, -100}, {1030, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1030, -100}, {1035, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1035, -100}, {1040, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1040, -100}, {1045, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1045, -100}, {1050, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1050, -100}, {1055, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1055, -100}, {1060, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1060, -100}, {1065, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1065, -100}, {1070, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1070, -100}, {1075, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1075, -100}, {1080, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1080, -100}, {1085, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1085, -100}, {1090, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1090, -100}, {1095, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1095, -100}, {1100, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1100, -100}, {1105, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1105, -100}, {1110, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1110, -100}, {1115, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1115, -100}, {1120, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1120, -100}, {1125, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1125, -100}, {1130, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1130, -100}, {1135, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1135, -100}, {1140, 100}]}, {
        RGBColor[1, 0, 0, 0.1], 
        RectangleBox[{1140, -100}, {1145, 100}]}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.9273060668247623`*^9, 3.9273060965976715`*^9}, 
   3.9273062072533574`*^9, 3.9273062997306576`*^9, 3.9273063385181804`*^9, 
   3.9273063973293295`*^9, {3.927306476492045*^9, 3.927306527174385*^9}, {
   3.9273065585770316`*^9, 3.9273065849999714`*^9}, {3.927306617944604*^9, 
   3.927306647916992*^9}, {3.927306808324854*^9, 3.9273068337042165`*^9}, 
   3.927306958221428*^9, {3.927306988898182*^9, 3.927307013314025*^9}, {
   3.927307046153123*^9, 3.9273070524310217`*^9}, 3.9273070870272264`*^9, 
   3.927307565549205*^9, {3.927307613804865*^9, 3.927307648425212*^9}, 
   3.927307882293685*^9, 3.9273079233039427`*^9, 3.9273088170222535`*^9, 
   3.9273099592875967`*^9, 3.9273112433722334`*^9, {3.927311312095974*^9, 
   3.9273113332660646`*^9}, 3.927311418841038*^9, 3.9273114877783613`*^9, 
   3.9273117082363997`*^9, 3.9273118334911366`*^9, {3.927312071035017*^9, 
   3.9273120926647167`*^9}, {3.9273121324879847`*^9, 
   3.9273121508697586`*^9}, {3.9273122680474577`*^9, 3.9273122844371657`*^9}, 
   3.927312493862938*^9, 3.927312945847265*^9, 3.927313186223135*^9, 
   3.9273133695791464`*^9, 3.927313450094719*^9},
 CellLabel->
  "Out[2898]=",ExpressionUUID->"65f64649-9169-40c1-beb1-e0c77723a179"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["roomsOnCycle"], "Input",
 CellChangeTimes->{{3.9273112527798777`*^9, 3.927311253932686*^9}},
 CellLabel->
  "In[2371]:=",ExpressionUUID->"9107a2f9-05df-479f-95f7-5ce8fd477bc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.9273112541301384`*^9},
 CellLabel->
  "Out[2371]=",ExpressionUUID->"6971c342-f6d5-43cf-bd0e-7267cab03f09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roomNames", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.927311630973258*^9, 3.927311637048399*^9}},
 CellLabel->
  "In[2503]:=",ExpressionUUID->"2a6719f4-8fe4-4ca1-995e-7de3f5c006dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ovi\"\>", ",", "\<\"PK\"\>", ",", "\<\"SZGK\"\>", 
   ",", "\<\"G\[OAcute]lyairoda\"\>", ",", "\<\"M\[EAcute]rce\"\>", 
   ",", "\<\"vend\[EAcute]gt\[EAcute]r\"\>", ",", "\<\"kisterem\"\>", 
   ",", "\<\"traf\[OAcute]h\[AAcute]z\"\>", ",", "\<\"Oktopusz\"\>", 
   ",", "\<\"Lahmacun\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.927311633080452*^9, 3.927311638020418*^9}},
 CellLabel->
  "Out[2503]=",ExpressionUUID->"7419e081-e280-46b7-812a-e8cf182937ac"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"warmingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1.5", ",", "1.5", ",", "1.25", ",", "1.25", ",", "1.5", ",", "1", ",", 
     "1", ",", "1", ",", "1", ",", "0.9"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9273068847149715`*^9, 3.927306887622798*^9}, {
  3.927311118249137*^9, 3.9273111792730155`*^9}, {3.927311247608919*^9, 
  3.927311259977279*^9}, {3.9273115307459593`*^9, 3.9273115418354297`*^9}, {
  3.9273123914825296`*^9, 3.927312394120835*^9}, {3.927313395899414*^9, 
  3.927313422042155*^9}},
 CellLabel->
  "In[2871]:=",ExpressionUUID->"bb063202-0239-4821-b0da-d29f46e57788"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coolingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1.3"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9273115732412057`*^9, 3.927311589113716*^9}, {
  3.927311640664953*^9, 3.9273116821851993`*^9}, {3.927312352122858*^9, 
  3.927312365017807*^9}},
 CellLabel->
  "In[2690]:=",ExpressionUUID->"c32d98ef-1949-4e0c-9f12-f4ee8e246f8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"warmingCorrection", ",", "1.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.9273111675801997`*^9, 3.927311172633772*^9}},
 CellLabel->
  "In[2373]:=",ExpressionUUID->"4133a3d2-1729-4515-9574-68d31f12b460"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "9", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.927311173456318*^9, 3.927311177696924*^9}, 
   3.927311262106084*^9},
 CellLabel->
  "Out[2373]=",ExpressionUUID->"31b98888-5856-4e16-ae7e-fc8cddffc77c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeScaling", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", "60", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tStart", "=", 
   RowBox[{"dt", " ", "startTimeBin"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tEnd", "=", 
   RowBox[{"24", " ", "60"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomTempStart", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"roomTrueTemp", "[", 
       RowBox[{"[", "roomN", "]"}], "]"}], "[", "tStart", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"roomN", ",", "1", ",", 
       RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulation", "=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "roomTemp", ",", "roomTempList", ",", "heatingState", ",", 
       "heatingStateList", ",", "\[Tau]Start", ",", "\[Tau]End", ",", 
       "d\[Tau]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomTemp", "=", "roomTempStart"}], ";", "\[IndentingNewLine]", 
      RowBox[{"heatingState", "=", "heatingStateStart"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]Start", "=", 
       RowBox[{"tStart", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]End", "=", 
       RowBox[{"tEnd", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d\[Tau]", "=", 
       RowBox[{"dt", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"roomTempList", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"roomN", ",", "1", ",", 
           RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"heatingStateList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "heatingStateVotes", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"heatingStateVotes", "=", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Module", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "warming", ",", "cooling", ",", "dRoomTemp", ",", 
                  "heatingStateVote"}], "}"}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"roomTempList", "[", 
                   RowBox[{"[", "roomN", "]"}], "]"}], "=", 
                  RowBox[{"If", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"roomTempList", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "==", 
                    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}], "}"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"roomTempList", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}], "}"}], "}"}]}], 
                    "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"warming", "=", 
                  RowBox[{
                   RowBox[{"warmingCorrection", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], " ", 
                   "heatingState", " ", 
                   RowBox[{"roomWarmingCoefficientEstimates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], " ", 
                   RowBox[{"radiatorArea", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"HeatingCurve", "[", 
                    RowBox[{
                    RowBox[{"externalTemp", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], ",", "75", 
                    ",", "45"}], "]"}], "-", 
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}], ")"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"cooling", "=", 
                  RowBox[{
                   RowBox[{"coolingCorrection", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
                   RowBox[{"(", 
                    RowBox[{"roomCoolingCoefficientEstimates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], ")"}], 
                   RowBox[{"externalWallArea", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "-", 
                    RowBox[{"externalTemp", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}], 
                    ")"}]}]}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"dRoomTemp", "=", 
                  RowBox[{"d\[Tau]", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"warming", "-", "cooling"}], ")"}], "/", 
                    RowBox[{"roomHeatCapacity", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}]}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"roomTemp", "[", 
                   RowBox[{"[", "roomN", "]"}], "]"}], "+=", "dRoomTemp"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"heatingStateVote", "=", 
                  RowBox[{"If", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "<", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomSetTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"roomLowerBuffer", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}]}], "&&", 
                    RowBox[{"dRoomTemp", "<", "0"}]}], ",", 
                    "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], ">", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomSetTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"roomUpperBuffer", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}]}], "&&", 
                    RowBox[{"dRoomTemp", ">", "0"}]}], ",", 
                    "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                    "heatingState"}], "\[IndentingNewLine]", "]"}]}], 
                   "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]",
                  "heatingStateVote"}]}], "\[IndentingNewLine]", "]"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"roomN", ",", "1", ",", 
                RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"heatingStateList", "=", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"heatingStateList", "==", 
               RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                 "heatingState"}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", 
               RowBox[{"heatingStateList", ",", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                   "heatingState"}], "}"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"heatingState", "=", 
            RowBox[{"Max", "[", "heatingStateVotes", "]"}]}]}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Tau]", ",", "\[Tau]Start", ",", "\[Tau]End", ",", "d\[Tau]"}], 
         "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "heatingStateList", ",", "\[IndentingNewLine]", "roomTempList"}], 
       "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatedHeatDynamics", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "roomTemp", ",", "externalTemp", ",", "tempDiff", ",", 
         "roomExternalWallArea", ",", "heatLoss", ",", "roomRadiatorArea", 
         ",", "heatGain"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"roomTemp", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"simulation", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"externalTemp", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"externalTempDaily", "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempDiff", "=", 
         RowBox[{"roomTemp", "-", "externalTemp"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"roomExternalWallArea", "=", 
         RowBox[{
          RowBox[{"roomExternalWallLength", "[", 
           RowBox[{"[", 
            RowBox[{"roomsOnCycle", "[", 
             RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
          "roomHeight"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"roomRadiatorArea", "=", 
         RowBox[{
          RowBox[{"roomRadiatorLength", "[", 
           RowBox[{"[", 
            RowBox[{"roomsOnCycle", "[", 
             RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
          "radiatorHeight", " ", "2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"heatLoss", "=", 
         RowBox[{
          RowBox[{"coolingCorrection", "[", 
           RowBox[{"[", 
            RowBox[{"roomsOnCycle", "[", 
             RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
          RowBox[{"roomCoolingCoefficientEstimates", "[", 
           RowBox[{"[", 
            RowBox[{"roomsOnCycle", "[", 
             RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], " ", 
          "roomExternalWallArea", " ", "tempDiff"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"heatGain", "=", 
         RowBox[{
          RowBox[{"warmingCorrection", "[", 
           RowBox[{"[", 
            RowBox[{"roomsOnCycle", "[", 
             RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
          RowBox[{"roomWarmingCoefficientEstimates", "[", 
           RowBox[{"[", 
            RowBox[{"roomsOnCycle", "[", 
             RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], " ", 
          "roomRadiatorArea", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"HeatingCurve", "[", 
                RowBox[{"#", ",", "75", ",", "45"}], "]"}], "&"}], ",", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"externalTempDaily", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", "roomTemp"}], 
           ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"heatLoss", ",", "\[IndentingNewLine]", "heatGain"}], 
         "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"roomN", ",", "1", ",", 
       RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9272990597619166`*^9, 3.927299060406548*^9}, {
   3.927299102611973*^9, 3.9272991027246885`*^9}, {3.927299255890185*^9, 
   3.9272995519395905`*^9}, {3.92729962146099*^9, 3.927299665204871*^9}, {
   3.9272997352536774`*^9, 3.927299738451268*^9}, {3.927299902709608*^9, 
   3.9272999330123844`*^9}, {3.92729996810067*^9, 3.9272999687233915`*^9}, {
   3.9273000120360093`*^9, 3.9273001618586802`*^9}, {3.9273001920053644`*^9, 
   3.9273003210465555`*^9}, {3.927300370339628*^9, 3.927300530661478*^9}, {
   3.927300569701741*^9, 3.92730069707845*^9}, {3.9273007758613977`*^9, 
   3.927300776804621*^9}, {3.927301256101053*^9, 3.9273013032368755`*^9}, {
   3.927301338328105*^9, 3.927301379348349*^9}, {3.927301452933256*^9, 
   3.927301496484995*^9}, {3.927301574055316*^9, 3.927301656341563*^9}, {
   3.9273017007892227`*^9, 3.927301709748929*^9}, {3.9273019592698755`*^9, 
   3.9273021862627316`*^9}, {3.9273022252557755`*^9, 
   3.9273022283879805`*^9}, {3.927302295206486*^9, 3.9273024161994333`*^9}, {
   3.9273026007750163`*^9, 3.9273026387411795`*^9}, 3.9273026702295227`*^9, 
   3.927303087988696*^9, {3.9273031760394087`*^9, 3.9273031803737783`*^9}, {
   3.927303218997552*^9, 3.927303244534952*^9}, 3.9273037387927094`*^9, {
   3.927303836966634*^9, 3.927303860518626*^9}, {3.9273038928395357`*^9, 
   3.9273038944381104`*^9}, {3.9273040374985094`*^9, 3.927304061482455*^9}, {
   3.9273042684112277`*^9, 3.9273043580864325`*^9}, {3.9273044060074964`*^9, 
   3.9273044457353077`*^9}, {3.927304489254775*^9, 3.927304703894619*^9}, {
   3.9273047795769205`*^9, 3.9273051188872776`*^9}, {3.9273051497679057`*^9, 
   3.9273051949039555`*^9}, {3.9273055186642575`*^9, 3.927305522879727*^9}, {
   3.9273060542468224`*^9, 3.9273060545858088`*^9}, {3.9273061134958863`*^9, 
   3.927306162794012*^9}, {3.927306228060359*^9, 3.9273062683600388`*^9}, {
   3.9273064430019207`*^9, 3.927306443079611*^9}, {3.9273068722660007`*^9, 
   3.9273068975925503`*^9}, {3.927307106265581*^9, 3.9273071259383698`*^9}, {
   3.9273077272408133`*^9, 3.9273078580909777`*^9}, {3.9273078938675394`*^9, 
   3.927308166633167*^9}, {3.927308394475572*^9, 3.9273084121117454`*^9}, {
   3.9273084571778183`*^9, 3.927308459433817*^9}, {3.9273086090178795`*^9, 
   3.927308666777608*^9}, {3.927309034218475*^9, 3.9273090822681403`*^9}, {
   3.9273091306362667`*^9, 3.927309218714449*^9}, {3.927309280731718*^9, 
   3.927309280841407*^9}, {3.927309637992771*^9, 3.9273096593722296`*^9}, {
   3.927309696765425*^9, 3.9273097444914894`*^9}, {3.9273097937068987`*^9, 
   3.927309796251624*^9}, {3.9273098586853065`*^9, 3.9273098909224586`*^9}, {
   3.9273099832461753`*^9, 3.927309986106593*^9}, {3.927310034828746*^9, 
   3.9273100400263987`*^9}, {3.927310117213577*^9, 3.927310138507227*^9}, {
   3.9273102259630594`*^9, 3.9273102579335203`*^9}, {3.9273103003179817`*^9, 
   3.9273103170356765`*^9}, {3.927310423112226*^9, 3.9273104522665715`*^9}, {
   3.927310490427873*^9, 3.927310501930642*^9}, {3.927310561692873*^9, 
   3.927310569849601*^9}, {3.9273106999663715`*^9, 3.927310781372089*^9}, {
   3.9273108198361983`*^9, 3.927310820922942*^9}, {3.927310876222427*^9, 
   3.927310935693019*^9}, {3.9273109921264677`*^9, 3.9273110946505175`*^9}, {
   3.927311127517973*^9, 3.9273111330679874`*^9}, {3.927311193546997*^9, 
   3.9273111943642063`*^9}, {3.9273115936943846`*^9, 
   3.9273115997443275`*^9}, {3.927312910077343*^9, 3.927312910219472*^9}, {
   3.9273131452581916`*^9, 3.9273131659553947`*^9}, {3.9273133522737184`*^9, 
   3.927313354958418*^9}},
 CellLabel->
  "In[2899]:=",ExpressionUUID->"8f09a539-df1c-4eba-aec4-7de7113e6153"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"5\\\", \\\"}\\\"}]\\) lies \
outside the range of data in the interpolating function. Extrapolation will \
be used.\"", 2, 2903, 449, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9273110953409796`*^9, 3.927311194768429*^9, 3.9273112634265833`*^9, 
   3.9273113381783133`*^9, 3.927311423113311*^9, 3.9273114904628735`*^9, {
   3.927311532611963*^9, 3.927311543216752*^9}, {3.9273116484960375`*^9, 
   3.927311683583292*^9}, 3.9273117137433004`*^9, 3.927312288494772*^9, {
   3.927312355645643*^9, 3.9273123957652125`*^9}, 3.927312910506302*^9, 
   3.927312947983469*^9, {3.927313175246563*^9, 3.9273131897446737`*^9}, {
   3.9273133741481724`*^9, 3.9273134528378487`*^9}},
 CellLabel->
  "During evaluation of \
In[2899]:=",ExpressionUUID->"1d75a883-81ca-43d5-a399-fbfb769b7daf"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"1440\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 2904, 450, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9273110953409796`*^9, 3.927311194768429*^9, 3.9273112634265833`*^9, 
   3.9273113381783133`*^9, 3.927311423113311*^9, 3.9273114904628735`*^9, {
   3.927311532611963*^9, 3.927311543216752*^9}, {3.9273116484960375`*^9, 
   3.927311683583292*^9}, 3.9273117137433004`*^9, 3.927312288494772*^9, {
   3.927312355645643*^9, 3.9273123957652125`*^9}, 3.927312910506302*^9, 
   3.927312947983469*^9, {3.927313175246563*^9, 3.9273131897446737`*^9}, {
   3.9273133741481724`*^9, 3.9273134529398785`*^9}},
 CellLabel->
  "During evaluation of \
In[2899]:=",ExpressionUUID->"74af0ca8-e253-4525-a06f-ad2e87e895d7"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"1440\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 2904, 451, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9273110953409796`*^9, 3.927311194768429*^9, 3.9273112634265833`*^9, 
   3.9273113381783133`*^9, 3.927311423113311*^9, 3.9273114904628735`*^9, {
   3.927311532611963*^9, 3.927311543216752*^9}, {3.9273116484960375`*^9, 
   3.927311683583292*^9}, 3.9273117137433004`*^9, 3.927312288494772*^9, {
   3.927312355645643*^9, 3.9273123957652125`*^9}, 3.927312910506302*^9, 
   3.927312947983469*^9, {3.927313175246563*^9, 3.9273131897446737`*^9}, {
   3.9273133741481724`*^9, 3.9273134529877157`*^9}},
 CellLabel->
  "During evaluation of \
In[2899]:=",ExpressionUUID->"26f245cc-d850-4996-8ed8-f6d81fcfeb7f"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"1440\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 2904, 452, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9273110953409796`*^9, 3.927311194768429*^9, 3.9273112634265833`*^9, 
   3.9273113381783133`*^9, 3.927311423113311*^9, 3.9273114904628735`*^9, {
   3.927311532611963*^9, 3.927311543216752*^9}, {3.9273116484960375`*^9, 
   3.927311683583292*^9}, 3.9273117137433004`*^9, 3.927312288494772*^9, {
   3.927312355645643*^9, 3.9273123957652125`*^9}, 3.927312910506302*^9, 
   3.927312947983469*^9, {3.927313175246563*^9, 3.9273131897446737`*^9}, {
   3.9273133741481724`*^9, 3.9273134530159187`*^9}},
 CellLabel->
  "During evaluation of \
In[2899]:=",ExpressionUUID->"b4e65e98-a41c-4371-94d3-7e65cb5e0bcb"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 2904, 453, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9273110953409796`*^9, 3.927311194768429*^9, 3.9273112634265833`*^9, 
   3.9273113381783133`*^9, 3.927311423113311*^9, 3.9273114904628735`*^9, {
   3.927311532611963*^9, 3.927311543216752*^9}, {3.9273116484960375`*^9, 
   3.927311683583292*^9}, 3.9273117137433004`*^9, 3.927312288494772*^9, {
   3.927312355645643*^9, 3.9273123957652125`*^9}, 3.927312910506302*^9, 
   3.927312947983469*^9, {3.927313175246563*^9, 3.9273131897446737`*^9}, {
   3.9273133741481724`*^9, 3.9273134530492945`*^9}},
 CellLabel->
  "During evaluation of \
In[2899]:=",ExpressionUUID->"a693674e-ab2d-4fc2-9390-4f6929893731"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"heatingSimulatedState", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"simulation", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomSimulatedTemp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"simulation", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "roomN", "]"}], "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"roomN", ",", "1", ",", 
       RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"roomSetTemp", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
          RowBox[{
           RowBox[{"roomLowerBuffer", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomSetTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"roomSetTemp", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "+", 
          RowBox[{
           RowBox[{"roomUpperBuffer", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomTrueTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomSimulatedTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"24", " ", "60"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "LightGreen", ",", "None", ",", "LightGreen", ",", "Black", ",", 
          "Red"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{
         RowBox[{"roomNames", "[", 
          RowBox[{"[", 
           RowBox[{"roomsOnCycle", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<, \>\"", "<>", 
         RowBox[{"DateString", "[", 
          RowBox[{"NormalizeDate", "[", 
           RowBox[{"seasonDays", "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"heatingTrueState", "[", "t", "]"}], "==", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0", ",", "0.1"}], "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"-", "100"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"t", "+", "5"}], ",", "100"}], "}"}]}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], " ", "-", "5"}], ",", "5"}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"heatingSimulatedState", "[", "t", "]"}], "==", "1"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1", ",", "0.1"}], "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"-", "100"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"t", "+", "5"}], ",", "100"}], "}"}]}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], " ", "-", "5"}], ",", "5"}], 
             "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], "//", 
  "Row"}], "\[IndentingNewLine]", 
 RowBox[{"Join", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"100", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"heatStockDaily", "[", 
         RowBox[{"[", "cycle", "]"}], "]"}], "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Total", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Total", ",", "#"}], "]"}], "\[IndentingNewLine]", "&"}], ",",
       "simulatedHeatDynamics"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"Total", "[", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Total", ",", "#"}], "]"}], "\[IndentingNewLine]", "&"}], 
        ",", "simulatedHeatDynamics"}], "]"}], "]"}], "]"}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.9273066958958406`*^9, 3.9273067294632187`*^9}, {
  3.9273067738799067`*^9, 3.9273067990154867`*^9}, {3.9273068451271076`*^9, 
  3.927306845450076*^9}, {3.927306991943189*^9, 3.9273069925842743`*^9}, {
  3.9273083103596582`*^9, 3.927308310746224*^9}, {3.9273084633848066`*^9, 
  3.9273085223446875`*^9}, {3.9273121617556314`*^9, 3.9273122213210773`*^9}, {
  3.9273123166687574`*^9, 3.927312327786693*^9}, {3.9273124414035244`*^9, 
  3.9273124496273165`*^9}, {3.9273129035176105`*^9, 3.927312903676263*^9}, {
  3.927313343369393*^9, 3.927313343620367*^9}, {3.9273134692124176`*^9, 
  3.9273134734353485`*^9}},
 CellLabel->
  "In[2910]:=",ExpressionUUID->"771db8b8-73c8-4e10-87fe-52c2d058da08"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1GlMEwYUB/BuoF2oQph2jGMYDhU6BnNlIIZJEShRoCpO4rAMRyVQ5CiH
QAtYkKMWEGlX5lTQoLZpxqEWUXTaIEIFKVDKMQtO61YShdDAtAMmwtwC773k
5Z/ft/f/8pzi0iLjPyQQCBnv979M7/fceluztJPw/3jREn2eqyeDPGirNj0c
ev4yyB98deKf7B1ZEeBvE0hf7HlxEGzvfIZfYWCCPaRZ694GxIHrM1z3tarj
wZrsAN8SKRvs9P0IIyY5BRy/fKv5My4HbDPVRrSJywBnUf2fiilZ4Ljpxe4N
k8fBTbsyiZcGcsBy+zTDZkUu9nmT9KBRwgUzLuo7rLTohdCozgwrHviooqWk
1xHd72Ad4uqJNtcGSDVfo/0EqWsKvkGn+tfFu4esuHAb7epsb9dIOJqrKqML
jqEZFwIfbS9HXzF6PF4yzwPPB37a18lHJ9Wvjx3i5IN/J5jNvvihALyvZMZA
Po/uID57sluLvpioG4nSo/N6hrUsI3qSG7k/yYQ+RNEMcBbRqrEIRo7ZiRV/
RfOu6FUXWKCnwztUZ7egZZZ32m/sQpeTJXLbFnSqQ1p1kQsf/NdbfnADqRDc
zO5urylFvzwvFnx0Ge2kZjLylGil4cGNm2p09LstZOMYuiiIkJr/DC0X6lQW
f6yaStMMKDadm0DPkStzt75C0y/vpATPoCWes+NH5tBEUSmb/mURmPfadu5z
Nnr7pusyrgFt2kOPehR7ErzUeG0D6QR6rZXtIKMWbdHed43TgLZMP1klvove
W+e19rASXd3ztMClY9XetEGT0DTVhf7Y2TflZg9awhMxQwbRNkNTYaNP0G5n
laoYcjHY77AocGI/umyHzehwB1prW5fUSS0B28mK78ndSsFteko4Y30Z2HF4
JiF7Gk2tETVe0QvAdeavPcUPT4FvBXqNld4Rgn/2Lbde/KUcPDAuLaNWVoBb
I2pdOYWV4NmUA4TUo6fBJrp7ojGoCiyf1s1n+pwBH6qXsmLWVYNbFGGxZgK0
n712QbiAbn7nMNm0TQR20SeMDbLRGxvkOcGn0ObZrzbelqHzx4WsmVb0GxpF
4d6FjozWrpnvRl/P5H2nUqNjCxnFTf1oy9POTRLNit//q/vn/h7N06KTZY8J
rGG0m85OvjyONpCO7a39Ex3dx9SlO4jBmioGK/QgWpJ7iXRcg76nXF5g7f4R
bMWkCah30X5HjPJSbwm46td8dpsMHZppx2n8pAb8m2gzyaUaLSZah/A++Anv
TW52vE9D+2jD5pf56H8BMi4Rag==
          "]]}, Annotation[#, "Charting`Private`Tag$1781973#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$1781973#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxFz2tM0wcUBfBuoF2oQpgyxmMYHip0DNmKIIbJH4ESBaqySRzCcFQCRSjl
IdACAkKpBURay5wONKhtmvFQQRSdNlihghQo5TEBp3UriUJoYNoBE2EzWe+9
ycnJ79u5zgnpUYkfkkikzP/yvjMGvLbe1qzsIr2/Ym8i2fe5ejrYkzDZ+HD4
+cvgAPDVqX9ydmZHgr9Nonyx98VBsIPLmaJKfSzYU5q97m1gArgh021/uzoR
rMkJ9CuTssDO348y4lLTwImrt1o+43LAtjMdZNuETHA2LeCpmJoNTphd7tkw
fRzcvDuLfGkwFyx3SNdvbs3Df96kPGiScMGMizqllRa9FBbdlWnFAx9tbSvr
c0IPOFqHunmhzbWBUs12tL+AvabwazQ7oD7RI9Tkr4ir833doxForqqcLjiG
Zvwc9GhHBfqKwfPxink+eDHo0/6uInRKw/r4YU4B+HeS2fyLHwrB+8vm9DYX
0Erysyd7tOiLyeOj0Tp0fu+IlmlAT3OjDqQY0YeomkHOMlo1EcnINTvxv2mE
T2WfutACPRuhVJ3bgpZZ3um8sRtdYSOR27Wh2Y7pNSWuReC/3haFNFKKwS2s
ns5aPvrlBbHgo8toZ3UsI1+BVugf3LipRse822JjmECXBJPYBc/QcuG4yuIP
k30IzWDrpvNT6AWbqrytr9D0y7uoIXNoidf85JEFNFnEZ9G9S8C813YLn7PQ
OzZdl3H1aONeevSj+JPglaZrGygn0Gut7IYYdWiLzv5rnEa0ZcbJavFd9L76
bWsPK9A1vU8LXZUmbyeGjELjTDf6Yxe/tJu9aAlPFBs6hLYdngkfe4J2P6dQ
xdmUgv0Pi4KmDqDLd9qOjSjRWrv6lC5aGdheVnpP7s4Hd+ioEYz15WCnkbmk
nFk0rVbUdEUnANebv/YSPzwFvhW0bYJ/Rwj+ya/CevmXCvDgpLScVlUJbo+s
c+MUV4Hn074hsY+eBhvpHsmG4GqwfHZ8Mcv3DPhQg5QZt64G3NYaHm8mQPs7
aJeES+iWd47TzV+KwK66pIkhFnpjozw35BTaPOfVxtsydMGkkDnXjn5DUFs9
utFRMdo1iz3o61m871RqdHwxo7R5AG152qVZojHZm7h//u+xfC06VfaYxBxB
u4/by1cn0XrKsX11f6Jj+mPHMxzFYE01gxl2EC3Ju0Q5rkHfU6wuMfecBVvF
EgLaXbT/EYOc7yMBV/9awOqQocOy7DlNn9SCfxNtprjWoMVk61DeBz/i3tQW
p/sE2lcbvrhahP4XlkMl3A==
          "]]}, Annotation[#, "Charting`Private`Tag$1781973#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
Kae0SMBMXodXr5KHtRJnJw5qwafISt0pkqdo8QeZ0FC4OpAgD69WYR2N1YJn
VWvGovfD/Rouk5EHT9HiLTLxYo/Q73BTuFyn40+oDWx4OIfVLxAet3Za55kB
d9lt2uB+5dTifo4wtTwO7QKu+XC+Y8Rm51tworO82MlK2MIza5vDE1j6DLOc
bTv8N9BRybIPbg5vUzcdgyuiwvYYT52ixa9kIjN2x74j83D42WG9Q0xedJ9M
yjxgxA7n36C4qavBQ7XNZ8m+cOujoOTtIXDlE1KaTDSc9exz+rZEOOJFeqbU
ea/F/TgymTjYtnBtSy4s8sauULgc/vXhRfmmOvjxJ9nqDa1wweDAA95OOOXL
+UfrumHfkb0Nawe8aOstMmHzfb5x9Qh898CgvxOrN90c95pkG8Rg6+QGc1Np
uNLxYeyEnPdie9MkE8s1qu5G7YatNt4e3KgJs7flKeschO+EZqR72/7P781S
GzhO/s/fyyVMXvX4n/dzRm9S8P2f938N0X0Z4k1b71Kvb4ZX3lwSbLH/BIN4
Dny73KAiuBZmXS9//F03bBawiZ80B5f1s7TF8p6mm+U+w19BodOL7cmW+v60
WYm74nCZy6/D+2VhFu2xsIGdcOnspx6uPbBJcedOpcPwrciXdu3mMLPV8+Tj
x/7n/QqPaxec/uf93A9GU0+dXpyfTlJ/31Cq+SgMZvbJzf6eApdIpv/hvQof
7Ykz0iqDiysjgrvvwUuSgoo96k4vrl/dqO8/ceY9ayNcrOa5LPsl3PyAe+DH
KPxNvryWYPWhu2JdxtRBLtj/d8jWEzw+i/OhL3V86jxhG7ARXl5hmJEsAme4
C7FWk2BJmQmvfgKu/lY3wK4P6xQkGZLNYe4Yn+g9dj60/Tky8d7B6qHpSfiq
lvZvVw/4hKjstvAz8Ez/v4yiKDg65yVrZxpsEHRXZTgTXm+R7f33GtynFFW8
qhDO3+A6KFrus7heSiYTjec567xb4S+rSi49G4FLxtPaP0zA3i8D2MZnYOWS
YwQzw5nF8fYKtf2d3X96/TL4vM7Gz8RaWIz1+4ETwnBlw/265O2wVli8dLUK
zGlz6lirFvyGMMvs3w9nbdJ4/fvgGVq8RCaOLUixLzeDw880fTb1gXN/OT4q
SoXf3bwoZJwJc1o2hizNPUOLl6jtY830p7JC+MxzUTWL2/AgOWzJ3XpYL6uv
nqsdDjfiEr7/Dq5iVQ47/gkee+A0sGYYFvG8pP5o/MzieqGeTCT0zDDxMfjS
/WfP4SceXLBd+e3wJgG4lX+Vpog0zNyucr1NDlaIclkasBt2Ubp8TELTlxa/
UetnoqmhUxc+8zRSK+okrHdJ9Zl8LBxm4Lblc7LvYnzeSybuLc2OSr4Ij1W3
fNl9BRZ2m98zkg8nvDdmVb8Hz2jcbbz0DJae/Syu/RK2vbUm5tcbON1OfTin
F27l9di7f8h3cT9tikzIh79ky5uCr41tfbHA7Ec3p3Fs7JE1sM/jLzqlwnCJ
D0+hmRQ8sE1zORvZb7E/LaMQ6wc8T95RhPXSrzZZq8HCzua6q63hGdX1LU+C
4F/fbqjuj/Kjra8pxI8LOys7E+ARtWeSFufhoe+Hs4cuwz3q3tHTRXDHxTR3
1vtwm4boUNJjuOlHhQlvE/w0Q+PllXY/WrxEIeo1O9Ql38PVl35u3TUMl01w
8+jOwPl7SP/MlvnTnXPZ8KszD5yp/cns90b4wk+3V4Gi/ov73+IUIiWLQWvZ
Njhhb1J1IgWOyL51LUcd9p9qjS87APvkWDAqmsCe+8a86q1hl98BIzonYMcr
Kyxfu/nT4hMKcXS/7vapBHjPn1imdcWwWi6fT3YFrKxf8G3LfVhxVsG69LH/
Yv9VpBA7rj/vlG+Ct819rd37HhYxZM03GYY33NiSfHIG5v6r5eu/LIBuzvw3
Y8xcMJuRve1ZnoDFeJ6gEMwLU2/XCsAMNyN0s0Th6YVcuVsUeOzgE4E6dXjk
n9E57X3wUMHAslcH4P5Dnv7GJnAPA9PEJ+sAWjxEIc7X/xmZC4ANwscH12bA
tRQXW/4r8NbPo58258MZaSesJG7BbFpfemUqA4j/C/d0qN8nr/+D0hO4fllv
1952OOv4u87DfbDf84522zF45MwBQ8cp+Khk20u3efjp+/16p5kCF8czXQpB
iWtqDmCHv+vWP70gBudxVtWVqcFrHu5QubcXDnWteFBrEEjbn6EQ45tISg1H
YMu2W9VNFrDS9sK7XU7w+pS8is++8K/JK2WT0fAro8sl/87DBPOGbSxZcElF
eiHH9UB6+fiP8UiuLoJj16bm896G59NDMvePwi78rkkhwkF061wjywtKwWKS
Mx9rSfCSsvtR5opwz84QmXnVIHp9pGqyBykYwrpG51q9rWAma36BCle42uW6
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
eEDAO9r3zfwLgv8fYmIk+Q==
          "]]}, Annotation[#, "Charting`Private`Tag$1781973#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
q9OSif8DTr+HlQ==
          "]]}, Annotation[#, "Charting`Private`Tag$1781973#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 15.5}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 15.5}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"SZGK, Wed 24 Jan 2024\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxN03s0FHgUB/ARRZ5rSxJxSMprKHl1xEhGjzErldDkMYgZjPd45/0Wxo6S
RDTs7IbKo9gyW15ZxOxgd4dEGq2IpViUats9/G73nO+553PO95/7x1UlB9h7
bcBgMLe/5L8d1Ivdc5/7yRzz/+zB+RiN9kxZ6eDWvdjaPzppZYbMmnhPPxhq
i3zaW0L3+IszyIpquXFZAhKyTkWo5AcLMvKrLALWcZMnclmwul1DjxeyQO2y
+WHxC8ga/aK6fTZgYwuWz/6z4KO3cKyCC2BH+ZHR5TAwJSlSkZSybk1c5rna
fDUWuMpgevPrFvB+Zu+rDebeyI0Ld1uVmsBtDRGxdrd9kLl0C+PkCgpyBFW8
dS7dF1nVZZB43s8fWWeSo/eABTYKZn+jMAJuGhhP158GmxnvFDq6AuZcPRvp
KkpbszbOcpUxT5cD4x9vGq/YByakRvMGbMHuRURmHgdMr1F1IOgFINtNv3zj
LhaI7PX5Xs3OSLD5ovG5Iv8gZPnpRlF5cjBysYpQe8lFsNrpY4ka18BetBk3
6o9gdjrDouY+uKvgJZbLAU+XGyq/bV+3Lk7yTprU1qdgbDN/1XAAfFCDGm4t
FYKMz30/fxoPPu+u+FdIIzjUwOxZvlYosm9esf0p8TBk8sxq55YpsGRjt367
Bh25IbGokO4BFicx2yV9wW6GOW/Lg7/qS6ermEZ91Z9MIPQlrFsPV18UVvkh
D+xiS8HsvQGuq7Wrj+eAxbab+PCfgZ2rB43NHMKRqw+HiJb2gdmKAYLdtRHI
rAXq4ypmJDKxZKxFhgdesXFoC5aJQvasrUvuVgb3Kslaq2PBIjyLCq4h2DSN
tjH2EJhmdt1L03rN8fo41nx3+yABHNmRik/zBROvWT4xyQTfnNXp+iQSjbxs
uf1pWxyYWibl2h8YgzyCEZ5/4R6LbJc8J5ArAreIPv/zGA9c4sMfdBgDR/86
wPOYBU9F2p+kLoIdtbh9gavgjiFbYrjwxTXvwx3I6u6JFQfPEFo6rmiAK6Wb
Ht09DM6UY7IV6sA0pYC8hF1xyG8/xB25JRGPXEPpfFSQAp4syk8TKwer9pCI
0RwwR/D4bn0P2PmjhtzsEDjBCkOLeQ5mZ/A7xMfXvR/H7atVuToBXpLLjtjz
GowvN9c6MgdmYueH3ZbAoowUCl4/ATnqncKSNgVsonKnMlIAXjyOd3jimohs
eo5hOXEyCZmncJ3aZpCMvKMy6SF7bwpy45gWgSiViqw8MOdNnwEbFDCqbo6l
IV8XeYfNb01HvmepN5TSlIFcaJwpu/pTJnLfcEWqQXYWcoNtsXpgfDbyvP8p
DM3zEtyD1/SZtcpBZs/wl0OMcpEdyyo8zkvmIdfVnnAVTgObKvJWMlbANR+V
pqr3MZB3jXkP/UYBb73FDj+SDhahv956vxIcM5zhMdcAXsBp1Wq2g+2deRuX
O8F3QqKcOnrArvHEpOpesPQltWomd81f/r356j+/R/PAfpVdGI8B8F7+Dvbn
YbBAwve74pdg56ckfpBSPjI3h+hhcwbMjCiVCOOCH3I+r3gc+x5ZhoRLM/gZ
rO4iX0haApu6zbJTDjCRpZdknb49CRZcMtxc6g8mOtm4T0SDm9SdmrQzwTRx
8gSRAVafo8oGF4I/kQN+EC4G8wdDDhWUgvEydDGXsnXr4uqPRvRr3ASrJkaV
/M0C5zyIoTRWgqlXuv1qn4NtQnYEVm0rQJ4+OLJN3BCcu+FGs/cpsPsFIcZl
Mtigi+zZHgRWitnSS4oEb8S2GS/Eg9+nFr/5JRk8OxpalpUO9pF8ER2UCR43
sXU4mw0meTXpH8oB/8HYLbErb93auHqCIru3E5wvKmsdJXQZWeBXo9yMAxvx
Tix/jgP/C9s//K8=
          "]]}, Annotation[#, "Charting`Private`Tag$1782031#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$1782031#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxN1Xs0FHgUB/ARReO1tiQRh6SIoSavjhjJ6MGsVEKTxyAMxnu8834LY0dJ
Ihp2dkM1KLbMllcWMTvYXSTSaEUsxaKUbffwu91zvueezznff+5fV4Xib+ux
AYPB3PmS/3ZgN27PA95nE8z/o0Hw0h/pmjTXIqx7obl3ZMLcGJk1/oF+KMQa
+YynuPaJl2eRFVRzYjMFZGSt8hCJj6YU5NeZVjj7Te7IpUFqNnVdHsgC1Ssm
R7AXkdV7RbV7LMEGpiyvA+fAx24TWPkXwfZywyNLoWDvxAgFcvK69xEyznPy
VFngSvzU5jdN4APM7tcbTDyR6+fvNSs2gFvqwmNs7ngh8+imBknl3sjhVGzz
bJoPsopTP+mCrx+y1gRX5yELrB/E/kZ+GNzQN5amOwU2NtgpdGwZzL12LsJZ
lLZmbYLZCmOOLgsmPtk0Vr4fbJUSxe+zBrsWkpi5XDC9WsXOSscf2Wbq1VtX
sQBkj9X71TsjwCYLBucL/QKR5abqReUoQchFykKtxZfAqmeOJ6hfB3vQpl2o
P4LZaQzT6gfgjvxXOB4XPFWmp/Sudd06BIm7qZJbn4FxjQMren3gQ+rUMAvJ
YGRizoe5M0TwBVeFv4LrwSF44+d5miHIPrlFtqexociU6ZX2LZNgifpO3VZ1
OnJdQmEB3Q2MJTNbJXzALnrZ78qCvupLpSkbRX7Vn4i36olfc5wuobYwtOJj
LtjJ2huz9ya4hmNTG8cFi2039Bp4Dnas6jcwtgtDrjoSLFrSA2Yr+At2c8KR
WfPUJ5XMCGRS8WiTNB+8bGnXEiQdiezOqUnqVAJ3K8pYqOHAInzTcp4e2CiV
tjHmMJhmfMNDw2Ld+wmsuc7WfitwRFsKMdUHTLpu9tQwA3xrRqvjs0gU8pLZ
9mctsWBqqaRzb0A08jBGeO6lawyyTdKsQLYQ3CT64s/jfHCx10C/3Sg46tc+
vtsMeDLC9hR1AWyvyesJWAG3DVqTwoQvrfkA4WBmZ1cMFjxt1dR2VR1cIdXw
+N4RcIYsky1fA6Yp+ufG74pFfvcx9uht8Tjkau/2x/nJ4InCvFSxMrBKF5kU
xQVzBU/u1XaBHT+py84MguPNMbToF2B2+kAbdmzdeAKvh6N8bRy8KJsVvucN
mFhmonl0FszEzQ25LIJFGcneRN145Mj38ov7vMGGyncrIgTghRNEu6fOCchG
5xlm46cSkfnyN6gt+CTkHRWJj9h7k5HrRzWtSJIpyEp9s570aTA+n1F5azQV
+YbIe1xecxryfTOdweSGdOQCgwyZlZ8ykHuGylPwWZnIddZFagFxWchzfqcx
NPfLcA9Rw2vGPBuZPT2wFKyfg2xfWu52QSIXuYZz0lk4FWykwF9OXwZXf1Kc
rNrPQN416jn4mzd462122NE0sAj9zdYHFeDooXS32TrwPEGTo9EKtnXkb1xq
B98NjnRo6wI7x5ESq7rBUpdVq5i8desSGq/983sUH+xb0YFx6wPvHdjBXh0C
C8R9vit6BXZ8Rh4IVMxD5mWT3CzPgpnhJeKhPPAj7uqy2/HvkaXJhFT8z2A1
J7kC8iLYyGWGnXyQiSy1KOPw7Smw4LLe5hI/MMnB0nU8Ctyg5tCwLwNMw1LG
SQyw2ixVJqgA/Jni/4NwEXigP/hwfgmYKE0Xcypd85f/UHssvFf9FlglIbL4
bxY4+2G0d30FmHq105fzAmwZvCOgcls+8tSh4W1YPXDOhpuNnqfBrheFGFco
YHwHxb01EKwYvaWbHAHeiGsxmI8Df0gpevtLEnhmJKQ0Mw3sJfEyKjADPGZo
bXcuC0z2aNA9nA3+g7FbfFfuurUJtVYK7O52cJ6ojEWk0BVkgW+1UiMBrM8/
ubQaC/4XlQsPOw==
          "]]}, Annotation[#, "Charting`Private`Tag$1782031#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
SbUzB6ajOm6sfwuuKD9cGdjwz/exGu9ZHv7z87YqDMUd/xyvoLBPuddzuT7a
uXT8FukTr/phU79tnKRfcNkQbVc021mKaeuo/mznPksezy0dn7YgeGcnXOY0
a6AtBtMemAwZ3guXLrwfYFSHjYt798oZwLfCn9p0H4dpLB4nnbD953iZ+w1/
Hf85nrl+IvXM2eX6JHDp+5ZS1aYQmMYrN/tLMlwidPEn21XYcCBGT60MLq4K
C+y/C69MDCh2azxLzh9Lx58895quFS5Wcl+d/RRur2ce/joBf5YubyDovCiu
ZM34rs8I+/4I2n2SxYsc30UJld6T1n5b4bWVuhlJfHCGKzddDQkWEp32GCLg
ms+Nw/SHYI2CRF2J4zBzlFekuo0XOd6LEq/tLe6ZnIKvqh344ewGn+QXEw49
B88PLWYURcCROU/petPgwwF39o9lwlvMsj3/XIPfyUUUMxXC+RzOI/zlXuT4
LUq0nmdo9OyEPzKVXHo0DpdMpXW/mYY9n/qtmZqHFUpsCRqqc8vzG6NL7S9O
++yW1fB5ja0fiM2wAN2XIyd54aqWusYkcVgtJFakZj/MYHXGtlMNfkGYZg5p
w1nbVJ7/0D+3XD8xiRG2f3fRrzWFQ8+1fTDxgnNnHZqKUuFXN9O5jTJhBvPW
oFW555afH5cYobJp7n1ZIXzuMb+SWQU8IhGy8k4zrJP1rpmxGw7VY+StewVX
0ymEnHgPT9Y7Dm8ag/ncLyk3TZ0jjzfFiPiBeWp2Km+Kf6obPHBjhG3KK0Lb
uOBOTiZVPhGYpnv/9S4pWCbCaZWfPOwkd9lWUNWbXH8u3Z/ptpZeLfjcw3C1
iFOwziXFR9LR8Lzilo4HAT7L7SFWjBj9YpA9ehnuSU9zpauDu1T4RxPvw21f
K43Z2uCHGSpPr3T7LOf3K2JEs2qPstBruObSt937xuCyaWYWrXk4X520aLra
l+Kcy7qfTrPAmQfem/7YCl/45vLMn993uf4tFSOSs6jUVgvD8QcTaxIk4bDs
W9dylGHf752xZUdgrxyzFbLGsLvmpEezJez0w29c4yTscGW9+XMXX/J8rhhh
qK0l/j0eVv8ZTc1aDCvlsntlV8IKhwo+76iDZRdkLEvv+5L7pxix5/rjXuk2
WPjXp4aDr2E+Xbp84zGY48aOpFPzMPMfNW/f1X4UM+S/mKRhhNfo2VnHsfgt
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
qXqvOE/xiGMJVz0B7+nWnF8MgP8PdOfGeA==
          "]]}, Annotation[#, "Charting`Private`Tag$1782031#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
iLk8LzMlywS7fc/P+Wgh9X8jd10p/h+vg4ae
          "]]}, Annotation[#, "Charting`Private`Tag$1782031#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 11.5}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 11.5}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"G\[OAcute]lyairoda, Wed 24 Jan 2024\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1GlMEwYUB/BuoF2oQph2jGMYDhU6BnNlIIZJEShRoCpO4rAMRyVQ5CiH
QAtYkKMWEGlX5lTQoLZpxqEWUXTaIEIFKVDKMQtO61YShdDAtAMmwtwC773k
5Z/ft/f/8pzi0iLjPyQQCBnv979M7/fceluztJPw/3jREn2eqyeDPGirNj0c
ev4yyB98deKf7B1ZEeBvE0hf7HlxEGzvfIZfYWCCPaRZ694GxIHrM1z3tarj
wZrsAN8SKRvs9P0IIyY5BRy/fKv5My4HbDPVRrSJywBnUf2fiilZ4Ljpxe4N
k8fBTbsyiZcGcsBy+zTDZkUu9nmT9KBRwgUzLuo7rLTohdCozgwrHviooqWk
1xHd72Ad4uqJNtcGSDVfo/0EqWsKvkGn+tfFu4esuHAb7epsb9dIOJqrKqML
jqEZFwIfbS9HXzF6PF4yzwPPB37a18lHJ9Wvjx3i5IN/J5jNvvihALyvZMZA
Po/uID57sluLvpioG4nSo/N6hrUsI3qSG7k/yYQ+RNEMcBbRqrEIRo7ZiRV/
RfOu6FUXWKCnwztUZ7egZZZ32m/sQpeTJXLbFnSqQ1p1kQsf/NdbfnADqRDc
zO5urylFvzwvFnx0Ge2kZjLylGil4cGNm2p09LstZOMYuiiIkJr/DC0X6lQW
f6yaStMMKDadm0DPkStzt75C0y/vpATPoCWes+NH5tBEUSmb/mURmPfadu5z
Nnr7pusyrgFt2kOPehR7ErzUeG0D6QR6rZXtIKMWbdHed43TgLZMP1klvove
W+e19rASXd3ztMClY9XetEGT0DTVhf7Y2TflZg9awhMxQwbRNkNTYaNP0G5n
laoYcjHY77AocGI/umyHzehwB1prW5fUSS0B28mK78ndSsFteko4Y30Z2HF4
JiF7Gk2tETVe0QvAdeavPcUPT4FvBXqNld4Rgn/2Lbde/KUcPDAuLaNWVoBb
I2pdOYWV4NmUA4TUo6fBJrp7ojGoCiyf1s1n+pwBH6qXsmLWVYNbFGGxZgK0
n712QbiAbn7nMNm0TQR20SeMDbLRGxvkOcGn0ObZrzbelqHzx4WsmVb0GxpF
4d6FjozWrpnvRl/P5H2nUqNjCxnFTf1oy9POTRLNit//q/vn/h7N06KTZY8J
rGG0m85OvjyONpCO7a39Ex3dx9SlO4jBmioGK/QgWpJ7iXRcg76nXF5g7f4R
bMWkCah30X5HjPJSbwm46td8dpsMHZppx2n8pAb8m2gzyaUaLSZah/A++Anv
TW52vE9D+2jD5pf56H8BMi4Rag==
          "]]}, Annotation[#, "Charting`Private`Tag$1782089#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$1782089#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxFz2tM0wcUBfBuoF2oQpgyxmMYHip0DNmKIIbJH4ESBaqySRzCcFQCRSjl
IdACAkKpBURay5wONKhtmvFQQRSdNlihghQo5TEBp3UriUJoYNoBE2EzWe+9
ycnJ79u5zgnpUYkfkkikzP/yvjMGvLbe1qzsIr2/Ym8i2fe5ejrYkzDZ+HD4
+cvgAPDVqX9ydmZHgr9Nonyx98VBsIPLmaJKfSzYU5q97m1gArgh021/uzoR
rMkJ9CuTssDO348y4lLTwImrt1o+43LAtjMdZNuETHA2LeCpmJoNTphd7tkw
fRzcvDuLfGkwFyx3SNdvbs3Df96kPGiScMGMizqllRa9FBbdlWnFAx9tbSvr
c0IPOFqHunmhzbWBUs12tL+AvabwazQ7oD7RI9Tkr4ir833doxForqqcLjiG
Zvwc9GhHBfqKwfPxink+eDHo0/6uInRKw/r4YU4B+HeS2fyLHwrB+8vm9DYX
0Erysyd7tOiLyeOj0Tp0fu+IlmlAT3OjDqQY0YeomkHOMlo1EcnINTvxv2mE
T2WfutACPRuhVJ3bgpZZ3um8sRtdYSOR27Wh2Y7pNSWuReC/3haFNFKKwS2s
ns5aPvrlBbHgo8toZ3UsI1+BVugf3LipRse822JjmECXBJPYBc/QcuG4yuIP
k30IzWDrpvNT6AWbqrytr9D0y7uoIXNoidf85JEFNFnEZ9G9S8C813YLn7PQ
OzZdl3H1aONeevSj+JPglaZrGygn0Gut7IYYdWiLzv5rnEa0ZcbJavFd9L76
bWsPK9A1vU8LXZUmbyeGjELjTDf6Yxe/tJu9aAlPFBs6hLYdngkfe4J2P6dQ
xdmUgv0Pi4KmDqDLd9qOjSjRWrv6lC5aGdheVnpP7s4Hd+ioEYz15WCnkbmk
nFk0rVbUdEUnANebv/YSPzwFvhW0bYJ/Rwj+ya/CevmXCvDgpLScVlUJbo+s
c+MUV4Hn074hsY+eBhvpHsmG4GqwfHZ8Mcv3DPhQg5QZt64G3NYaHm8mQPs7
aJeES+iWd47TzV+KwK66pIkhFnpjozw35BTaPOfVxtsydMGkkDnXjn5DUFs9
utFRMdo1iz3o61m871RqdHwxo7R5AG152qVZojHZm7h//u+xfC06VfaYxBxB
u4/by1cn0XrKsX11f6Jj+mPHMxzFYE01gxl2EC3Ju0Q5rkHfU6wuMfecBVvF
EgLaXbT/EYOc7yMBV/9awOqQocOy7DlNn9SCfxNtprjWoMVk61DeBz/i3tQW
p/sE2lcbvrhahP4XlkMl3A==
          "]]}, Annotation[#, "Charting`Private`Tag$1782089#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
h9VDv5S9moINWXdaZ/2AzbJiWW1mYEexN5Wis7B3hajDt7k0Wnw/1d5QE/QH
vvzNYd1yunSaK1kYPTIY4TaRq42Cy+H35VM+X1ngz4SaQCkrPNmW+sKfLZ26
f49y/pb9AcrssGSmwFZTLti81fKdDz/sbFEUoyAA+44syP7bBIcf1+trFEyn
1e/il11ISBSGcwWVBnm3wPd3v9t1QwJ+aRaYQZaGh/15vj+WhacZXc6fIsGL
aZVa++TTafVi1s3M01w7Ya6Sg5d6FGDN4TP7ZlVhX4EOOs49cHiRYHG3Tjqt
Hp6g5GN2WRc+21S3zFkfvnJodbmUIXzft5S1ej/cnmzosOcgfLxjgpdsCgtw
p7VvNoMbzeTiVlnA7hdf7563TKfVO6pFuG+9toVZig6vL3aED5EuxMS6wnnV
vdM27rDeYvhNfU94Wm2zraJ3OvV5XUo+F/OYW8wXVntu38p5DO57++VGYwgc
POweGRgFC0qwKzrFUK9nPplo8iid2B8He5UZ5avEw9wzU5aSp2HHUPILphS4
nPH4zr50OCPw8kr/9vSl+50/mSj6ffjZ4Q64MZgzSrkzfWn+5kn5vgvNKpvf
wL9CY+YZu+GtJ+Z8mj/AZiePjqR/hBOi+mzNB+EHMfu7Bb/AncwrM5aNpC/l
Q5Zk4ntcw76RUZh5RfjK1m+wQMLOZ7fH4X2JhSqB03BE8sZK1V/weY63PsJz
cHlq6rbl8/CLNbojowvwYDrj9ba/6bT9YNrnRs5YLTtDc8GFl5Hf2OAHtf9+
O+w9Q9sPKvuYrLBFD85/ciRgVP8Mbb8r/9NLFcWGcFrT62lvIzi0dbfXrDHs
3HFjLMwU3v92jSuTBazcEzKUYA2X9d0WMrQ9s7S/YzmZEPv02XaNPZwzyHe5
0wFeM7yv95wTPDwh/CbPHX7we7atzA+W/SO1yt//DPX3VCjnt2inp3Ac5qc/
F78QCKcxtjyrDYZDWXZoaoXDzqty65pPwh84uhaTo2AjTtbdB2Lgp+tUQ7ji
4F08x6q6T52h7Q8X4++Tt0mEVwvqlH9OgedFy6Xdz8CfJfhvTZ+FzbftH7mb
Bbdvj90SlA1rydU4Keecoc6PSEQ1efLav4twikpDDtt12FEnK5O3CH6v2/q6
pxjeZ8DAmVsKN+zbaeRQdob2PIzSAfdksTuwiOkb1uJKmMOSiCNVwzItBuuZ
a+EDyhY3ux/D9j8/TT1+AvsVuSrdajxDe54p2nEiMuMZnMEf0Bz2HK5MjLI0
aoXf/kn9LvQK/lrBs4PtNTznfil8phNeISr6rO8NzNd7i6Op+wzteTrLh09l
Pfrhyxc/GXN+hW8fdM1ZGIHrVk0MDY3Brxr9t7V9P4PnDcP++N+bgBnHVyxP
+AGLWPNkWc7CWm0i4tsXYGcVuWr6f/DxX/cZxugyaM9PnipR1etkgLOcn555
yATfFDDoyWeGXySbewSxwt8WXRb12OE/lePa8qvhVV7+KQKcsMCWP2+Xr8ug
1vNIhPTHyM1TXLDPo4vqZzfCFZfvO+4ShRtMVYtFtsBdHE9nVoln0J5nHX6m
rzIrAf868Tq2XwpeP9nPc0cGVrQdL4ghw+teT6vwKMDjWrOdBbtgyxO/L/vs
zqDu1yERz+8vuCmpwjum/8ozqsF5knT0Lepw+CWmc1basNmaFdsm9sJPdVfO
3dODydGrnkQYwFceciTv3Qezz64x49yfQd2PRbk+PXwx8ofhoHrhssM28PCC
aKigHWwiv3XPqD382FOC845jBnX/G6V9CqR6Q5zhFRtk/Va5wUNJ8isue8C1
dEqXZXzg834q8vXHYOZigu50AHxsWL3ZODCDun+RRHzapHWWPxg2NNtj9zkE
ZlI1SmKJgqtEzKokE2Axa4von6fhjHNW+x4mZVD3X5II+lc2fLEpsCer/WfD
NHhvmHNIfwYsMum2xjcLXrT3usGYA7/r8tudeRnW5ghgsb6SQc1HKP1XJ/C1
2DVYMDL40kQenFwTeuR+Pqx/s2yFQiHMem745r1ieGQVffDxUrgpeoPuzjI4
f0Geb7YcjvE1Gq2syKDmKySCzrBaorIGDhUXOXq3HrbIVdnl3wAr8ZitlH8K
8yb7ffj5DJ5jSr5V8Zw6Hl0p8XW6Xo/cCvv1z47daYdl2qQSSZ3weI2d1J23
cKtc6B/fd3DRzbMtch/g05vLcqZ7qOPRjkS4nWt2L++Dh33li8s+w3aGl7/f
/gYTjVUPvcdhAeXOJJnJDNrvEfwtH7eanIJ7xFdI3/4BZ/OotG2fhQ8v8/Ms
nYe5f9xg374Id/b3lJTQZ9J8x3Q23JMRTm9bs096WSZ1/zsl/mlJbRpnho0e
aE8Us8At525vL+aA9/jxeRdxw/WXY3XT12fSfp9BuWVaJJAPrpyz/mfFD8uI
Nr/TEIBFwq8lcwjBvG9DND6IwhmMXzc+3gKzy5jM5YvDpyzrOhIlYYZ4qWLf
bZnU5yEo8fgTk72KLDym1MvNKg/3n7nb3KUAd35LiriiDBvyzpvHqcBNWs7y
HkTm0ngnSIS6bweHsTr88JLKqIImnG80YdyuB6cw5D50MYZZt7NlGRzMpNYf
KPmERaAvyRRejBvS5zWDAyuMtvwzh91Xife8sIbtnOnTztrDPekeR0Md4UOP
3mnZO8PtY1qbdVwzqfUKEqG7vnx+mxus4pNQ+tsDJr2wd2z0gbcK7+JN84f5
Q9e2WQbBZwtOFKiHwKu7xiK3hmVSn1ciEQn0h63YT8DLpBt2/oyA52Nzvj2K
hsc/Hrty+hTsyvYpxCcBHlAwOGSaCFs6VcnsTobfpomuFE7NpNZDSITc3oZw
hXNwMp3DtMEl2KlEd9/aXFjZUq6o+wq8lpVvxaVr8Og9emeH65m03+fPWvtq
03gBrO2V+y6wCP75wusM4234qpiqQfIdOKhTrND4LmwUyb6c9x4sJvPLoe9+
JrU+Toknvb1116rhw5mh5KrHcIX+hoK2Jvj0PMOyjBewfcGonVkLdXyvo+Qr
hzpqBdrg1UzVG4ZewrU28V2er2H3msMpv9/ATb6zDBx9sLDE2QCRz/D7rNdW
+37A6cvXaAXTn6V5yL1E4CEB7+jQm/t3Av5/5JV70Q==
          "]]}, Annotation[#, "Charting`Private`Tag$1782089#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwV1Hk4VukbB/DSohBKhRjJUtrIec+xx9eWCFGYFpVEttcSshbKkijvId6R
GDVjq6RorKlIg2ZoEZpEvWSLaBNa/Z7fH+c61+d6znU/93Pf93NWufrvcBea
NWvWn+T5//vIQ/U1lY9/GrrVitwYWM2B4Xge42rWbaSU++vVw8SCXK10FbO3
RoITeQVDqhyUhkU3zDP7buRsYZjzRoWDFQPKeydNxeDQdiRpTIkDW7nJgnFT
eZgO/+f2WYEDT61XLSOmG7Bwo3bafGkOPjc8fTVsaoBfKiPbOMIc5A18DdEL
tsEFtevMsgEKDh6iG616HbFt09IK+m8Kckq86OR+Z/SG5Qo151PYkB8s9s3I
FYsPy0YmxlK4FKhiV97ijt0Ow1JihyiUvaxLlul2x2yjggtRrhTuWe1rihx1
h8BIf+GHgxT6lfiGJiKH4XXtQluHC4XVT4U3PrI4jIhEZ/fc/RSKOaML39w7
jCTPEEtqD4WqidIG+WoPFGfvFP/VnsIDF9uZ6GYPJN+8ZPzAjkJXy4je62ce
+GK31V2f+FuectnlSQ90JGcUr9xOwdAx46IW7YmU2Zv0h60p3C8PO2533ROP
jS1Ew7dSeBxipB2X7wVbB237bCMKvg9zLuT+5YVgg52ei4lFVn+fqWnwQpaK
f3SCIQXzjqrmD71eGJoouBawmUINh9pzQMEb0RnLRcz1KeS9Vzmu95s3QgeW
1I9rUTDeGtvrWOCNOjPNuW7EL3N7zY+Ue2NB3naL5wwF2e2/ixc99cZ51zOt
DTSFlGvSF5dJ+iB/kUPeeYpCmLdIw/tEH3zwrXpqrk5h2T3PNWKZPojx23Ly
1kZSb9mm5DWFPpDwb9+kSTzWHOuw/28fqAe8Pyu/gUKSYl9VeLsP7gREGaSt
p6AWhl8yXvvA5ojYqDCx65ofA//O5oIbqLb101oKM1F7rYYkufgWWDHpSZzd
WV0ipMiFRkFj10s1CnrqMlIKGlxQThcFJ8j6s/iQUF1DLpj5EYMq6ygE97S/
cLDhQqdi59sm4iUMBwHOXOgf3vjRm+xn3f9uQWEEF8aNgh83SH5v9G19753m
wiykZo4DyT/hXPGTnkwuLFanL5wirjfxylpayYVNgsWyzRoUtC71rT/5iQtp
j9a3TZoUVu3vsN3H9UVOuNlAN6lvXp1EU3CELwKbBq2Dtcl8KVsZnUn0hcWy
03+J6pD5Hb6jcSvPFx9vtMbq6ZJ4gUWSsj1kfdhJKZP0zzohsq3dxg87rNZF
2YNCSMkqJ2sNfzxO/2p515KC+0xFyS/hAbh99WZ7rDMF6dEqYWnXQMgnrfz1
aRw5P8egO21dMJjUV7NnLpP6jn1vlho5istrB29KP6RwzSRIOPdRKOKHPyb0
T5B8J7zri9PDcbOseaRChoNpY5nW+9GRiNcv7JIy4qBn1pwPvQePw3JygbyL
Gwd+8v7sCeVotJ6YdOtK4KDEq7kuIz4GaWclPo5f5SDik+zUeq8TMD1bqmb4
kNx3qy1OTQdOInhi/4E5nzjQ3ZtqPGAfC9V9wZ11y2m0yeZ43+fEYdp2QLJa
m8aKgtjaIrV4DAoVjvbuoVElWGdtuygBTW1lOw9G0lBof+8RMpaArtD6mPEs
GpyM1OI/Bafw0+l2WnMtjZy5n9TTGhJxR2+V2I5uGhXGGl3x1achGfXmh9NP
GpnaSYu/X0nCupi5qftWMnj0Ij+BcyYZT0Lspx5sZlBuk60SEHMGSBybdWA/
Q+Z+5yw/t7PY9Pe4pucxBp+3rPUcN03B55zLsdHnGRSNPZ8O0uJBIdTmTnUV
g+9lUkt/6PKQ/nL+i43VDOzCbDQSNvMguqVu6hLxtFC9e6YZDxmLf06ermFg
KVPUVruDfC9cX7G7lsGISUjxPH8eBj34bdN3GWzIXOLyWyEPsiHLvuo0MYjZ
Zx2peJWHIn6O8zXidqUE/uUSHrQrVe+uamZw7NqXllvlPDhOM3EiDxi03hPo
Chp4EJd0DX3xDwO/sRKptQIeJH2llI4/ZLDrUv6hfWIsbreMKNd2MPhdN/2b
hTiLAz3G53Q7Gbx+cvIcJcli1nimUCWxn5BLg/BSFmYSFr2lzxjEHVqhXCbH
wjF/90DBcwbXVXl989ezyCoPOcDrYTBx+3jEhw0sZndGmoi9ZKDnxF3Src6C
MuueSiS+n2BpUkqxyFDMcT35ikHX0Jw/9uqx2PtcQedoL4P5V8IO3rBk8a9i
v/7uAQbWJh5fsrax4MxPyekgTu1yTI23YXFhVHvGfpCBvCinfo89C5+K5HtW
Qww0uWOK83azWBAtFqX/hkHI3O6qd3tYLPqillZJXJv9j12XM4slQeYFnBEG
W1oLY667sJDziHq4fpTBGXe+TJYrC8XerL5C4ic/4m7EubFQ3Vs5qfyWwXJ+
0Fb/wyzWdTwVuUjsrO4q2O3JYrjytfMY8R+NdmFm3izcA5S1vImH9htJanBZ
9Kkdkhgi8QJ58pgbwKLnfF+9gOyf+L4ztySUxZPI3tXtwwy5l9sOzDnFYjLp
59eafgZOLeXhrYks4px840E8PbAy/bckFlJK3RKNrxkYyE40r09hoVldrfKk
j9Q3OptyyGBRcP9q0pCAzIv12Lz8P1lYKg5ELyX9mRxMKd5Sx8Ji6VHGj/Rf
V67ty+kvLBo1JQPlGhkoCzy6nnilIkNhRfBMIYN+UZ/t2a9TIf6iO1brFIPH
KbaHLBzTYFzHeTniySA9LFf06OM0/EsFnXOxJPW9M/PlkOU5DLUFa2M9Awln
nOLUnENM1JW0LAmyn8t4UTydjuiEW6oLPtJIuXXMq6ogHWJH9WNaO2lYBK0I
KF6eAR31Kz//I/f7WaqqqDKbgXat79Uel2ikCS82j5jNR/W6Gr3qUzRqP/bs
DZ7DR6FwrrYl8VDPlUC/eXxk9MfSzxNoGPxldtF1IR8PzBSFvsbTGHQJ+2a1
mA+lKEGJYRwN/ZpXpXKr+OgUdeh8EEOjn1uicBskfrPg3dtwGuK7IplKEz5O
3xH4RBPrmm61LjXj48SE8+olxCmyfeH5W/nA/OWxOmE0dBqXdZy14+PO2kSD
+BAaZ1ceT97vwoeC1kHjlUHk/yZi9ccuVz6YQu20skAafZ+XV+9w42ObjPhr
c2KdlhuDWzz5CPtaE8c9QtbD+o01AvgIuDslWeNPQ8ytdNfaQD5iNmyOsyHW
3h7lrxzMB+/8ySmBH40zqjI50mF8XA9a9FKYuEJy4ObiCD7uCnbYX/Cl0fut
9B/RY3w8ssm8r04sNhTVOy+Kj1c1Pdr3uDS02rZNz0Tz8W6N8lVH4v8BahSR
Ng==
          "]]}, Annotation[#, "Charting`Private`Tag$1782089#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 15.5}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 15.5}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"M\[EAcute]rce, Wed 24 Jan 2024\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1: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
f46D/wXp8nSr
          "]]}, Annotation[#, "Charting`Private`Tag$1782147#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$1782147#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1: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
4c9x8L9QcYdA
          "]]}, Annotation[#, "Charting`Private`Tag$1782147#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$1782147#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$1782147#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 11.5}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 11.5}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Lahmacun, Wed 24 Jan 2024\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.9273067088979855`*^9, 3.927306729826426*^9}, {
   3.9273067842956057`*^9, 3.9273067993999343`*^9}, {3.9273068458465977`*^9, 
   3.927306901067723*^9}, 3.927306963000427*^9, {3.9273069931746907`*^9, 
   3.9273070170562863`*^9}, {3.9273070609152336`*^9, 3.9273071278572874`*^9}, 
   3.9273085231201754`*^9, 3.927308904078432*^9, {3.9273110831018367`*^9, 
   3.9273110975011535`*^9}, 3.9273111963717194`*^9, 3.927311264833619*^9, 
   3.9273113018373933`*^9, 3.92731133979655*^9, 3.9273114245695066`*^9, 
   3.927311491867038*^9, {3.927311534173201*^9, 3.9273115444595737`*^9}, {
   3.9273116502179365`*^9, 3.9273116848757415`*^9}, 3.9273117152015944`*^9, 
   3.9273121629284654`*^9, {3.927312207320969*^9, 3.9273122220097055`*^9}, {
   3.9273122904158516`*^9, 3.927312397351812*^9}, {3.9273124425056643`*^9, 
   3.9273124503965206`*^9}, 3.927312499117035*^9, 3.9273129050971994`*^9, 
   3.927312950143855*^9, 3.927313192709283*^9, 3.9273133441877923`*^9, {
   3.9273133771467338`*^9, 3.9273134250181823`*^9}, {3.9273134554406953`*^9, 
   3.927313474436514*^9}},
 CellLabel->
  "Out[2912]=",ExpressionUUID->"43a23ff3-c236-4e96-9e89-1d412cad2636"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "18500.`", ",", "16294.177454631135`", ",", "34747.80484442823`", ",", 
   "25520.991149529684`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9273067088979855`*^9, 3.927306729826426*^9}, {
   3.9273067842956057`*^9, 3.9273067993999343`*^9}, {3.9273068458465977`*^9, 
   3.927306901067723*^9}, 3.927306963000427*^9, {3.9273069931746907`*^9, 
   3.9273070170562863`*^9}, {3.9273070609152336`*^9, 3.9273071278572874`*^9}, 
   3.9273085231201754`*^9, 3.927308904078432*^9, {3.9273110831018367`*^9, 
   3.9273110975011535`*^9}, 3.9273111963717194`*^9, 3.927311264833619*^9, 
   3.9273113018373933`*^9, 3.92731133979655*^9, 3.9273114245695066`*^9, 
   3.927311491867038*^9, {3.927311534173201*^9, 3.9273115444595737`*^9}, {
   3.9273116502179365`*^9, 3.9273116848757415`*^9}, 3.9273117152015944`*^9, 
   3.9273121629284654`*^9, {3.927312207320969*^9, 3.9273122220097055`*^9}, {
   3.9273122904158516`*^9, 3.927312397351812*^9}, {3.9273124425056643`*^9, 
   3.9273124503965206`*^9}, 3.927312499117035*^9, 3.9273129050971994`*^9, 
   3.927312950143855*^9, 3.927313192709283*^9, 3.9273133441877923`*^9, {
   3.9273133771467338`*^9, 3.9273134250181823`*^9}, {3.9273134554406953`*^9, 
   3.927313474706689*^9}},
 CellLabel->
  "Out[2913]=",ExpressionUUID->"ba08a187-8fb3-490c-85ab-bcb2c2cd290a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536., 831.5999999999999},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
WindowStatusArea->"futes.nb last backed up to futes.nb~ on Fri 14 Jun 2024 at \
2:24:06 AM",
Magnification:>1. Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"34377c11-761e-4748-85ea-d8273b4cdc50"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 207, 4, 69, "Chapter",ExpressionUUID->"de884582-daa6-466c-9130-8dadb65fabe8"],
Cell[790, 28, 1918, 46, 216, "Input",ExpressionUUID->"ef87188f-e7f7-4fd9-aeee-f0dcf1fa0f2a",
 InitializationCell->True],
Cell[2711, 76, 1053, 24, 64, "Input",ExpressionUUID->"517c5a7e-5706-44db-a0a9-1a783629fab8",
 InitializationCell->True],
Cell[3767, 102, 359, 8, 44, "Input",ExpressionUUID->"16e2e7e4-0721-4473-b6d1-e2194096779c",
 InitializationCell->True],
Cell[4129, 112, 1449, 37, 121, "Input",ExpressionUUID->"1067bdc3-f0b9-4316-b2f0-04ff4908391e",
 InitializationCell->True],
Cell[5581, 151, 696, 18, 44, "Input",ExpressionUUID->"282c3f6d-3215-4c8e-8c5b-62a46155ca77",
 InitializationCell->True],
Cell[6280, 171, 5788, 148, 482, "Input",ExpressionUUID->"590f5eab-5099-4966-89d2-f75d3f1dee33",
 InitializationCell->True],
Cell[12071, 321, 2567, 60, 216, "Input",ExpressionUUID->"53f841ca-da66-4840-8d35-ce98d8417550",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[14675, 386, 151, 3, 58, "Chapter",ExpressionUUID->"d81bbbe0-5219-4dcb-b7f7-605c30d91d76"],
Cell[CellGroupData[{
Cell[14851, 393, 162, 3, 67, "Section",ExpressionUUID->"2cb6c7fd-e9ba-4e58-ba29-ac8ddd04cf7d"],
Cell[15016, 398, 1896, 46, 200, "Input",ExpressionUUID->"0400ffef-c102-4bb5-9445-98d4baef5acf"],
Cell[16915, 446, 624, 14, 28, "Input",ExpressionUUID->"59e78a66-3b7f-4c8a-88c8-0845ea2c0116"],
Cell[17542, 462, 337, 8, 28, "Input",ExpressionUUID->"4f0312ec-481b-4601-b221-7746863bf32f"],
Cell[17882, 472, 1427, 37, 105, "Input",ExpressionUUID->"2046797a-0d0a-4004-b120-fa27ac9e2206"],
Cell[19312, 511, 330, 7, 28, "Input",ExpressionUUID->"84235713-8645-473d-b997-e5773f5b0ef7"],
Cell[19645, 520, 343, 7, 28, "Input",ExpressionUUID->"cab43216-a9b4-448f-bf1e-94a85c7104aa"],
Cell[CellGroupData[{
Cell[20013, 531, 15237, 359, 961, "Input",ExpressionUUID->"4edeefdc-67c6-4a5f-a78b-35c2e7d14f88"],
Cell[35253, 892, 11597, 208, 337, "Output",ExpressionUUID->"6505e617-071a-42f6-bd95-7cb73ce9c044"],
Cell[46853, 1102, 357, 7, 28, "Message",ExpressionUUID->"fc00a36d-9c1b-442b-9896-c66cb4f717c8"],
Cell[47213, 1111, 487, 9, 28, "Message",ExpressionUUID->"4eaca1ca-3c66-4449-954c-3b5c39ca3983"],
Cell[47703, 1122, 537, 10, 28, "Message",ExpressionUUID->"add79bdb-8a8f-4eac-84e3-66db977e1366"],
Cell[48243, 1134, 539, 10, 28, "Message",ExpressionUUID->"9c328a8b-0b97-4a6b-b1ac-5032908b739e"],
Cell[48785, 1146, 422, 8, 28, "Message",ExpressionUUID->"eccd7dcb-011f-4978-8f9c-515ae89e47b3"],
Cell[49210, 1156, 377, 8, 28, "Message",ExpressionUUID->"6c33a815-87a9-4906-ba12-d4d9e5e5cade"],
Cell[49590, 1166, 377, 8, 28, "Message",ExpressionUUID->"c189daf7-cbe6-40f4-ace6-942825b4adeb"],
Cell[49970, 1176, 379, 8, 28, "Message",ExpressionUUID->"b29d1902-b7b6-4b1c-ba6d-c19d62e5e04a"],
Cell[50352, 1186, 418, 8, 28, "Message",ExpressionUUID->"1c67b3c4-82c7-4ac3-8d5a-0175fb7a31cd"],
Cell[50773, 1196, 387, 8, 28, "Message",ExpressionUUID->"eb7f36b6-9f55-4c26-aadd-45a9f974c9f6"],
Cell[51163, 1206, 526, 10, 28, "Message",ExpressionUUID->"1fde6bdf-14c7-429c-ad94-8f3622cc3af0"],
Cell[51692, 1218, 387, 8, 28, "Message",ExpressionUUID->"677483fe-0a85-4486-a596-f3a8d0fd98f4"],
Cell[52082, 1228, 416, 8, 28, "Message",ExpressionUUID->"eebb4732-4a5e-4923-81a3-06592ee7e48f"],
Cell[52501, 1238, 524, 10, 28, "Message",ExpressionUUID->"43857139-5ad1-4820-ace7-a9d6a4bfdc34"],
Cell[53028, 1250, 526, 10, 28, "Message",ExpressionUUID->"12147c85-3192-4385-8fde-7e7419eb9188"],
Cell[53557, 1262, 417, 8, 28, "Message",ExpressionUUID->"87972f3e-0bc8-43db-9dec-e7bf27221fc8"],
Cell[53977, 1272, 358, 7, 70, "Message",ExpressionUUID->"6f33cbf9-dfac-45ab-92c5-b90604dc3bc0"],
Cell[54338, 1281, 487, 9, 70, "Message",ExpressionUUID->"4617ef93-bac6-407f-9045-266fdea6a6f6"],
Cell[54828, 1292, 542, 10, 70, "Message",ExpressionUUID->"1d797dbd-91c3-4d8c-909d-80c758fd242b"],
Cell[55373, 1304, 540, 10, 70, "Message",ExpressionUUID->"d0bd7609-3112-40cc-8f38-b842b19a98d8"],
Cell[55916, 1316, 425, 8, 70, "Message",ExpressionUUID->"971394b7-019d-474f-a7a5-bcfd52667843"],
Cell[56344, 1326, 382, 8, 70, "Message",ExpressionUUID->"6e0bebb6-9d18-43ed-92d3-8ef8294ff640"],
Cell[56729, 1336, 382, 8, 70, "Message",ExpressionUUID->"74aa40d9-9c49-43a1-989e-3fc212200b86"],
Cell[57114, 1346, 380, 8, 70, "Message",ExpressionUUID->"42cbb2b9-20a9-4bc6-b790-2cd7a5d5cffa"],
Cell[57497, 1356, 421, 8, 70, "Message",ExpressionUUID->"3e0079fc-af64-4852-95e2-c6c76857d115"],
Cell[57921, 1366, 389, 8, 70, "Message",ExpressionUUID->"714d20bf-5804-4e92-9e45-cb77787b530f"],
Cell[58313, 1376, 528, 10, 70, "Message",ExpressionUUID->"f3534991-af09-4e10-bf9b-dd86c777f38f"],
Cell[58844, 1388, 391, 8, 70, "Message",ExpressionUUID->"691fa287-c970-4cf8-911c-b88ba92e6f27"],
Cell[59238, 1398, 420, 8, 70, "Message",ExpressionUUID->"52420f73-cc4c-4e85-8b04-0a01cefcee98"],
Cell[59661, 1408, 528, 10, 70, "Message",ExpressionUUID->"ebc1d064-c5a6-48e1-9f4f-e495338ad6fd"],
Cell[60192, 1420, 526, 10, 70, "Message",ExpressionUUID->"6d6d46df-77a2-426c-979b-16c762fa6869"],
Cell[60721, 1432, 419, 8, 70, "Message",ExpressionUUID->"f3eaa398-a9fb-4947-b11c-130a76e2d36d"],
Cell[61143, 1442, 355, 7, 70, "Message",ExpressionUUID->"0e246d32-56ba-4d2b-af61-2fd3a8508125"],
Cell[61501, 1451, 487, 9, 70, "Message",ExpressionUUID->"50eebbe6-56a7-4f8a-8efb-1fb52b7dae8d"],
Cell[61991, 1462, 539, 10, 70, "Message",ExpressionUUID->"2c677898-0bf6-4f1c-b2cf-9af637c15120"],
Cell[62533, 1474, 537, 10, 70, "Message",ExpressionUUID->"e6ade439-9a0b-416d-aef4-a2ceb773bc45"],
Cell[63073, 1486, 422, 8, 70, "Message",ExpressionUUID->"3babb71c-19ec-484a-9d34-216d24de2143"],
Cell[63498, 1496, 379, 8, 70, "Message",ExpressionUUID->"779a3319-2f61-472e-a987-77ee3a796621"],
Cell[63880, 1506, 379, 8, 70, "Message",ExpressionUUID->"65e7f7b5-c1c4-45cb-a7b8-db99fa0a6ff4"],
Cell[64262, 1516, 376, 8, 70, "Message",ExpressionUUID->"edc56215-2a74-4e6d-88f1-6258d30e100f"],
Cell[64641, 1526, 419, 8, 70, "Message",ExpressionUUID->"49e46d07-cd36-4094-b9cd-c76c56b34ea8"],
Cell[65063, 1536, 387, 8, 70, "Message",ExpressionUUID->"92e202b8-178d-4f41-8533-6796cb5739ab"],
Cell[65453, 1546, 524, 10, 70, "Message",ExpressionUUID->"72f17fa2-2fb9-4ce0-998b-a0c04d88887d"],
Cell[65980, 1558, 389, 8, 70, "Message",ExpressionUUID->"b0ff2be6-7fa8-46d1-8d08-302779f3635e"],
Cell[66372, 1568, 418, 8, 70, "Message",ExpressionUUID->"e5d4ca5f-b200-4df2-b744-fa87b876f992"],
Cell[66793, 1578, 526, 10, 70, "Message",ExpressionUUID->"d271a6e9-3a4b-42ec-9d01-ae00d038a6f6"],
Cell[67322, 1590, 524, 10, 70, "Message",ExpressionUUID->"f9368bb1-5fa4-4640-97a6-dfbba25a81c3"],
Cell[67849, 1602, 417, 8, 70, "Message",ExpressionUUID->"0a349068-e8dd-4339-ab9e-0cdcce72aeed"],
Cell[68269, 1612, 355, 7, 70, "Message",ExpressionUUID->"d608247f-ffc0-43e0-ac1a-5c498c5dfe9e"],
Cell[68627, 1621, 487, 9, 70, "Message",ExpressionUUID->"dc75ff62-8bd7-43e8-aca7-78984fb407c1"],
Cell[69117, 1632, 539, 10, 70, "Message",ExpressionUUID->"c79ccb66-ef53-4971-9097-1ae0152f5f60"],
Cell[69659, 1644, 539, 10, 70, "Message",ExpressionUUID->"a4fa8bb2-4a92-437b-ab12-ca930c669b56"],
Cell[70201, 1656, 422, 8, 70, "Message",ExpressionUUID->"5cf1528c-17d6-4847-be64-375ea330cc23"],
Cell[70626, 1666, 377, 8, 70, "Message",ExpressionUUID->"6366871b-d8df-4ec2-8bf2-d56e8b2fc287"],
Cell[71006, 1676, 379, 8, 70, "Message",ExpressionUUID->"5f2c98c2-fee5-4774-9144-e3d22ec10f80"],
Cell[71388, 1686, 379, 8, 70, "Message",ExpressionUUID->"ffcba76c-62a0-4fa4-aadc-21829ff750c2"],
Cell[71770, 1696, 419, 8, 70, "Message",ExpressionUUID->"9222602c-c0e8-437d-9ddc-b0266178acc4"],
Cell[72192, 1706, 387, 8, 70, "Message",ExpressionUUID->"7a4c26ea-2ab4-468d-be07-13f9451351b7"],
Cell[72582, 1716, 524, 10, 70, "Message",ExpressionUUID->"b41ebeb9-3fdc-4e5b-b373-66b9a3583319"],
Cell[73109, 1728, 387, 8, 70, "Message",ExpressionUUID->"14d5f4cd-3cf5-4154-b470-6e2cd3000445"],
Cell[73499, 1738, 416, 8, 70, "Message",ExpressionUUID->"a221a849-695b-4a2e-84b3-e7c8215cbeff"],
Cell[73918, 1748, 524, 10, 70, "Message",ExpressionUUID->"fc748c03-3ed2-4d34-9e58-635d22bf6562"],
Cell[74445, 1760, 524, 10, 70, "Message",ExpressionUUID->"d1e49d41-eb5b-4670-ace8-95ea5fcbadfd"],
Cell[74972, 1772, 417, 8, 70, "Message",ExpressionUUID->"f768a5e8-b6cb-42dd-ab63-de1d756756b8"],
Cell[75392, 1782, 355, 7, 70, "Message",ExpressionUUID->"f2d493c4-0c35-45d5-8b5f-2905ecc13d22"],
Cell[75750, 1791, 485, 9, 70, "Message",ExpressionUUID->"c0b2b6db-8e8e-4305-a1d5-f465776d8435"],
Cell[76238, 1802, 539, 10, 70, "Message",ExpressionUUID->"68874fe8-a89a-4756-9a86-05965f078579"],
Cell[76780, 1814, 537, 10, 70, "Message",ExpressionUUID->"d8b441d8-c542-47c5-b9ca-8b550cb18da4"],
Cell[77320, 1826, 422, 8, 70, "Message",ExpressionUUID->"9d2d9938-b261-4e25-86bf-fcb961ae1a3c"],
Cell[77745, 1836, 379, 8, 70, "Message",ExpressionUUID->"5225d770-1c17-4d28-b67c-7dccaa458a27"],
Cell[78127, 1846, 377, 8, 70, "Message",ExpressionUUID->"9b36af11-fb95-4784-bbd9-dfb2949e6fd9"],
Cell[78507, 1856, 377, 8, 70, "Message",ExpressionUUID->"ccc90345-fc8c-493a-8638-890cd6964e51"],
Cell[78887, 1866, 419, 8, 70, "Message",ExpressionUUID->"af456469-1387-4042-857b-57178c3a7abf"],
Cell[79309, 1876, 389, 8, 70, "Message",ExpressionUUID->"e05c5a0e-f78c-40c6-af31-3b961e70a71c"],
Cell[79701, 1886, 524, 10, 70, "Message",ExpressionUUID->"209672b6-27b2-429d-90b8-ac2782bde273"],
Cell[80228, 1898, 389, 8, 70, "Message",ExpressionUUID->"6c5b3c31-ab22-4c3b-ac7e-64286f1bab91"],
Cell[80620, 1908, 416, 8, 70, "Message",ExpressionUUID->"f2a40aaa-1f11-4051-883a-faf151cd57e5"],
Cell[81039, 1918, 524, 10, 70, "Message",ExpressionUUID->"3bc316ed-f12d-47f9-b2c9-4285cbcb4407"],
Cell[81566, 1930, 524, 10, 70, "Message",ExpressionUUID->"6c109b4b-8ffe-42bb-97d1-9ffe14dbfce9"],
Cell[82093, 1942, 415, 8, 70, "Message",ExpressionUUID->"5121acf3-dc00-45b8-9942-d0c2634ed61f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82545, 1955, 23264, 399, 428, "Input",ExpressionUUID->"263fa599-9a3c-4342-95ab-f1676c79c30a"],
Cell[105812, 2356, 182079, 3301, 222, "Output",ExpressionUUID->"83ba5ed7-030b-4a3a-91e8-811c97e75ffb"]
}, Open  ]],
Cell[287906, 5660, 733, 15, 67, "Input",ExpressionUUID->"7b3f0fc7-79ba-4ace-80d8-a41ae892ef8a"],
Cell[288642, 5677, 679, 14, 67, "Input",ExpressionUUID->"70381266-39e8-4fe1-a509-b155bf8e4c74"],
Cell[289324, 5693, 2006, 45, 219, "Input",ExpressionUUID->"5d7f7fc8-36e5-42e5-8c90-f182db080696"],
Cell[CellGroupData[{
Cell[291355, 5742, 2202, 57, 181, "Input",ExpressionUUID->"02535bbc-d905-41e0-933f-ab7e84179df3"],
Cell[293560, 5801, 74472, 1266, 110, "Output",ExpressionUUID->"f2fea14a-9347-4dfd-a03e-887b90a5e82d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368069, 7072, 2840, 68, 276, "Input",ExpressionUUID->"a19b18ab-c0bf-49c5-8458-59e99e4400a1"],
Cell[370912, 7142, 45737, 1027, 248, "Output",ExpressionUUID->"e5411e6f-1057-4e79-a290-45657876472f"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[416710, 8176, 304, 5, 58, "Chapter",ExpressionUUID->"a897956f-ffaa-4728-a7d7-6b6d1ba2f5e3"],
Cell[417017, 8183, 330, 7, 28, "Input",ExpressionUUID->"5ba8a670-4e9c-4a38-87e1-748e19abe0ee"],
Cell[417350, 8192, 344, 7, 28, "Input",ExpressionUUID->"962872a8-cfd6-44ab-be9b-f7824f9496f2"],
Cell[417697, 8201, 581, 15, 44, "Input",ExpressionUUID->"6fb3b0fd-1234-49fa-8da1-cf051addda4c",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[418303, 8220, 288, 5, 67, "Section",ExpressionUUID->"0d1f01c7-6475-4302-bcb4-1817d8ba287e"],
Cell[418594, 8227, 555, 15, 44, "Input",ExpressionUUID->"fbdf59dc-a1c7-47b6-924d-e5445b201b94",
 InitializationCell->True],
Cell[419152, 8244, 1212, 29, 67, "Input",ExpressionUUID->"12daf358-da08-4385-a267-746ec928ac38"],
Cell[420367, 8275, 3267, 76, 238, "Input",ExpressionUUID->"c13ca58b-e763-4bf3-9e44-dfaaf192b42d"],
Cell[CellGroupData[{
Cell[423659, 8355, 1860, 49, 105, "Input",ExpressionUUID->"886786c1-19ad-4d94-9047-927fb84d80a6"],
Cell[425522, 8406, 3400, 88, 43, "Output",ExpressionUUID->"cb03abb9-6aaf-479b-a5e3-0e2a52a21315"]
}, Open  ]],
Cell[428937, 8497, 1266, 32, 143, "Input",ExpressionUUID->"aa3deeb4-ae87-40d2-86b7-8d1c0bb48cd9"],
Cell[430206, 8531, 1318, 33, 143, "Input",ExpressionUUID->"719aee6e-cc9e-4f5c-a6d4-3345960462d4"],
Cell[431527, 8566, 419, 11, 28, "Input",ExpressionUUID->"c1a565ee-0644-42c1-8b5c-090029f6d18a"],
Cell[431949, 8579, 1215, 31, 105, "Input",ExpressionUUID->"278042f6-f663-4163-a89d-c34ef6ba649f"],
Cell[CellGroupData[{
Cell[433189, 8614, 300, 4, 28, "Input",ExpressionUUID->"494308d7-6502-4ef3-95db-2eac161294e9"],
Cell[433492, 8620, 757905, 12474, 380, "Output",ExpressionUUID->"f5bc91a3-4cee-4900-8359-caf38ec066aa"]
}, Open  ]],
Cell[1191412, 21097, 477, 12, 28, "Input",ExpressionUUID->"6c5c0c9b-388e-4d64-be2b-90f621b2363d"],
Cell[1191892, 21111, 520, 11, 44, "Input",ExpressionUUID->"7bc67be2-8b09-4c51-8548-2c981d8a68c3",
 InitializationCell->True],
Cell[1192415, 21124, 2660, 54, 257, "Input",ExpressionUUID->"ced9cfd6-200b-4855-b97a-49afa0f8e6b7"],
Cell[1195078, 21180, 447, 12, 28, "Input",ExpressionUUID->"0367e002-7973-41a1-8eea-fa3f3f2e5c5e"],
Cell[1195528, 21194, 390, 9, 44, "Input",ExpressionUUID->"3fd98778-13e6-4031-9325-c701a544575b",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1195955, 21208, 253, 4, 53, "Section",ExpressionUUID->"b3ebb81b-bc55-401d-bfb7-a225e4d5ebcf"],
Cell[1196211, 21214, 955, 24, 102, "Input",ExpressionUUID->"69a0dc10-205b-48b0-8289-936444c069db",
 InitializationCell->True],
Cell[1197169, 21240, 1314, 31, 67, "Input",ExpressionUUID->"8130f87f-511b-41e4-9af3-71b7679e2a64"],
Cell[1198486, 21273, 2613, 60, 295, "Input",ExpressionUUID->"738eddef-06bc-4837-a52c-42e103b61fc9"],
Cell[1201102, 21335, 516, 12, 28, "Input",ExpressionUUID->"467f7e0e-790c-4c26-99be-752ea6bbb338"],
Cell[1201621, 21349, 438, 10, 44, "Input",ExpressionUUID->"ed56c12a-02e9-432a-805f-7e171ed307f5",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1202096, 21364, 301, 4, 53, "Section",ExpressionUUID->"f810bbdb-380c-45d0-9535-aa12aa79f0a8"],
Cell[1202400, 21370, 660, 16, 44, "Input",ExpressionUUID->"79bbef55-f522-4eaa-b0f4-c5eb60f59181",
 InitializationCell->True],
Cell[1203063, 21388, 1600, 37, 124, "Input",ExpressionUUID->"cc13a883-ffde-4b20-bc5e-e0937714f4a5"],
Cell[1204666, 21427, 3595, 80, 371, "Input",ExpressionUUID->"b2f5234f-b149-4fdc-85f0-68a1a562f1fc"],
Cell[1208264, 21509, 423, 11, 28, "Input",ExpressionUUID->"2571d7d7-809f-461a-a36e-5951c92619f1"],
Cell[1208690, 21522, 491, 11, 44, "Input",ExpressionUUID->"b54f7364-1ff6-4e58-bbc9-ebcc6805e29a",
 InitializationCell->True],
Cell[1209184, 21535, 2009, 46, 219, "Input",ExpressionUUID->"c8a5bb37-fa7a-44aa-8a41-0386add6e761"]
}, Closed]],
Cell[CellGroupData[{
Cell[1211230, 21586, 290, 4, 53, "Section",ExpressionUUID->"ed858940-0571-40f6-ab6b-139142a93738"],
Cell[1211523, 21592, 640, 16, 44, "Input",ExpressionUUID->"bc56cc17-b068-4eff-bf8c-f5adab2e4f3a",
 InitializationCell->True],
Cell[1212166, 21610, 1363, 32, 67, "Input",ExpressionUUID->"bbebe451-7201-4ad7-b5b4-4c60b715e6ac"],
Cell[1213532, 21644, 3626, 78, 371, "Input",ExpressionUUID->"665ad3a5-a1cc-4a37-ab2f-13eabc8e80e6"],
Cell[CellGroupData[{
Cell[1217183, 21726, 187, 4, 28, "Input",ExpressionUUID->"f78a1b69-7636-42b5-93ae-2b8543e54e2c"],
Cell[1217373, 21732, 1617, 45, 52, "Output",ExpressionUUID->"8e43aac1-6e05-4998-8d77-e876a4910335"]
}, Open  ]],
Cell[1219005, 21780, 569, 13, 28, "Input",ExpressionUUID->"6504f392-2100-4f9e-8e26-77418e816665"],
Cell[1219577, 21795, 575, 16, 28, "Input",ExpressionUUID->"7bcd2361-f0f9-4393-b631-c06b2dd52d0e"],
Cell[CellGroupData[{
Cell[1220177, 21815, 2613, 60, 352, "Input",ExpressionUUID->"d3081ea0-ff3a-40db-b2bb-db8bf977a4a0"],
Cell[1222793, 21877, 698, 13, 32, "Output",ExpressionUUID->"6157c357-46cb-41f0-849c-b26d4189c3f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1223528, 21895, 254, 5, 28, "Input",ExpressionUUID->"32571e2b-a8dc-4207-abcc-65b4bc546030"],
Cell[1223785, 21902, 587, 16, 32, "Output",ExpressionUUID->"b416eaaa-76cc-4fb5-b056-4fd48afc4734"]
}, Open  ]],
Cell[1224387, 21921, 479, 12, 28, "Input",ExpressionUUID->"9f282319-065d-47ac-814a-497007c99560"],
Cell[1224869, 21935, 545, 11, 44, "Input",ExpressionUUID->"72d5c33d-2b5a-4711-9873-f45cc90f8ba6",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1225451, 21951, 257, 4, 53, "Section",ExpressionUUID->"555c9be9-0539-44ac-981e-49388949a4af"],
Cell[CellGroupData[{
Cell[1225733, 21959, 452, 7, 54, "Subsection",ExpressionUUID->"d9447d53-23c1-491e-83f5-ca06a0b0fcfe"],
Cell[1226188, 21968, 1327, 30, 64, "Input",ExpressionUUID->"8ec5de7d-2470-4833-add2-e4b0006423a9",
 InitializationCell->True],
Cell[1227518, 22000, 1383, 32, 67, "Input",ExpressionUUID->"35abaf3e-1537-47fd-83b1-5f2d5920a746"],
Cell[1228904, 22034, 2712, 61, 295, "Input",ExpressionUUID->"e82c2067-a019-496d-ab96-a9f0fa0697b8"],
Cell[1231619, 22097, 577, 13, 28, "Input",ExpressionUUID->"5eb3a342-4721-42eb-990a-beba10f1c6d1"],
Cell[1232199, 22112, 497, 11, 44, "Input",ExpressionUUID->"445a4bcf-659b-4088-b51f-fcce5436789d",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1232733, 22128, 372, 5, 38, "Subsection",ExpressionUUID->"1120db96-e918-4e7a-a4d7-0b6f5fd14adb"],
Cell[1233108, 22135, 618, 13, 64, "Input",ExpressionUUID->"c4a06059-452b-4f1a-839b-1cd5f5f1f7ce",
 InitializationCell->True],
Cell[1233729, 22150, 376, 9, 44, "Input",ExpressionUUID->"9e0cac80-a8b7-4062-ad7e-bfcfe631338b",
 InitializationCell->True],
Cell[1234108, 22161, 460, 11, 44, "Input",ExpressionUUID->"ff0df781-06aa-4b87-bdcb-35863fe27b87",
 InitializationCell->True],
Cell[1234571, 22174, 703, 14, 44, "Input",ExpressionUUID->"88d6de6d-987d-463f-98a5-deec46c669b2",
 InitializationCell->True],
Cell[1235277, 22190, 388, 9, 44, "Input",ExpressionUUID->"253327b9-6ce3-47ad-afde-336b56ef892c",
 InitializationCell->True],
Cell[1235668, 22201, 442, 10, 44, "Input",ExpressionUUID->"6b119413-da67-4373-bd4c-db76031b0eb8",
 InitializationCell->True],
Cell[1236113, 22213, 592, 12, 44, "Input",ExpressionUUID->"19c12464-61dd-4ad0-a322-32b3cc0de695",
 InitializationCell->True],
Cell[1236708, 22227, 1021, 18, 44, "Input",ExpressionUUID->"a29d97dc-d539-415e-8682-82344c9d3cd8",
 InitializationCell->True],
Cell[1237732, 22247, 301, 6, 44, "Input",ExpressionUUID->"ba581355-8eb6-47d4-9302-2c543daeabb1",
 InitializationCell->True],
Cell[1238036, 22255, 765, 18, 64, "Input",ExpressionUUID->"05b329d4-5029-469c-ac84-3cc15b321b18",
 InitializationCell->True]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1238862, 22280, 288, 5, 58, "Chapter",ExpressionUUID->"dc9922e6-fbdd-44c1-a252-256656c0538f"],
Cell[CellGroupData[{
Cell[1239175, 22289, 435, 7, 67, "Section",ExpressionUUID->"22e03067-1978-4f33-9737-f65e517786f1"],
Cell[1239613, 22298, 1138, 22, 219, "Text",ExpressionUUID->"9dd4230b-23a7-4fec-a534-05e7be6a657b"],
Cell[1240754, 22322, 933, 17, 173, "Text",ExpressionUUID->"9431fcc0-1c03-4e95-8513-291fa8096922"],
Cell[1241690, 22341, 1024, 18, 104, "Text",ExpressionUUID->"4996c801-a885-4f04-a967-18a4757e5948"]
}, Closed]],
Cell[CellGroupData[{
Cell[1242751, 22364, 463, 7, 53, "Section",ExpressionUUID->"35f34098-9629-481f-ac49-bf55993a888d"],
Cell[CellGroupData[{
Cell[1243239, 22375, 560, 8, 54, "Subsection",ExpressionUUID->"6fafcf14-1237-4212-bffa-3b4af7476df6"],
Cell[1243802, 22385, 4098, 90, 371, "Input",ExpressionUUID->"4d21cc54-38d1-4def-94d3-4b2f65c1b4d2"],
Cell[1247903, 22477, 1413, 32, 105, "Input",ExpressionUUID->"f0f969b1-5ccb-4aeb-ac94-dd8529517478"],
Cell[1249319, 22511, 1019, 26, 48, "Input",ExpressionUUID->"c6f7ee09-6c55-4589-83f7-71c25eeaaa49"],
Cell[1250341, 22539, 513, 12, 64, "Input",ExpressionUUID->"1c0bddee-ba6e-404a-9cd5-4e50bafc9c43",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1250879, 22555, 719, 17, 105, "Input",ExpressionUUID->"c8034530-acf8-49d7-8bfa-72f5a8801c67"],
Cell[1251601, 22574, 39851, 1164, 230, "Output",ExpressionUUID->"503791c4-0536-4003-92d4-954605d3b4c7"]
}, Open  ]],
Cell[1291467, 23741, 1695, 38, 143, "Input",ExpressionUUID->"592ce9cd-9111-4b16-9da0-d6e7f32ddc6a"],
Cell[CellGroupData[{
Cell[1293187, 23783, 1507, 31, 143, "Input",ExpressionUUID->"95f7ef4a-c57d-449b-ad3d-27753b04d77b"],
Cell[1294697, 23816, 92868, 1844, 302, "Output",ExpressionUUID->"fa27aaa2-530d-4085-8798-9e47953f17bf"]
}, Open  ]],
Cell[1387580, 25663, 1406, 27, 86, "Input",ExpressionUUID->"073de429-0274-41e6-8eca-87fd99581cac"],
Cell[CellGroupData[{
Cell[1389011, 25694, 1221, 26, 124, "Input",ExpressionUUID->"70ca8a94-ce9d-483d-8563-430278fdea16"],
Cell[1390235, 25722, 15491, 312, 329, "Output",ExpressionUUID->"22c95140-1a51-4f6a-a7a6-2f6dff85dd37"]
}, Open  ]],
Cell[1405741, 26037, 2047, 47, 219, "Input",ExpressionUUID->"d7002cb0-fd2b-4c38-a968-4baf173e7655"],
Cell[CellGroupData[{
Cell[1407813, 26088, 1194, 25, 124, "Input",ExpressionUUID->"d0336753-a397-47e1-8965-8dad4e286ede"],
Cell[1409010, 26115, 12971, 271, 329, "Output",ExpressionUUID->"3bdbcd6d-b9c1-4cf0-974d-1624a6a428d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1422018, 26391, 1121, 28, 86, "Input",ExpressionUUID->"abb24aa7-a25c-4ac3-a5c1-7cd858c4c1d2"],
Cell[1423142, 26421, 1787, 45, 225, "Output",ExpressionUUID->"69bdc37a-61d2-4983-b1f9-ca496450b191"]
}, Open  ]],
Cell[1424944, 26469, 1087, 26, 124, "Input",ExpressionUUID->"a458843c-823f-4eb1-87c5-c2ad9d01a51c"],
Cell[CellGroupData[{
Cell[1426056, 26499, 507, 12, 67, "Input",ExpressionUUID->"7a8efb37-d6b1-4b15-aafe-ac89da7c32e6"],
Cell[1426566, 26513, 5463, 109, 230, "Output",ExpressionUUID->"0eea645d-f8f1-4303-8f92-d19d9b47028b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1432066, 26627, 591, 15, 67, "Input",ExpressionUUID->"4c875e90-8a3f-4306-9c44-b4336a168871"],
Cell[1432660, 26644, 220, 4, 32, "Output",ExpressionUUID->"13fc5b70-b12f-44ed-9e4c-49397326f225"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1432917, 26653, 1143, 29, 143, "Input",ExpressionUUID->"74dd435f-0895-4ca5-8a3d-8d9e316b7a6d"],
Cell[1434063, 26684, 2964, 65, 237, "Output",ExpressionUUID->"df37885d-c192-49de-a1f4-32180fc5d473"]
}, Open  ]],
Cell[1437042, 26752, 1418, 36, 124, "Input",ExpressionUUID->"61d39b7d-e1d6-47cb-bb2e-b7e73164c7db"],
Cell[CellGroupData[{
Cell[1438485, 26792, 306, 6, 28, "Input",ExpressionUUID->"112bbd8d-22b5-4222-bc0c-1566b7d6711b"],
Cell[1438794, 26800, 274, 4, 32, "Output",ExpressionUUID->"5b8f2c5a-885a-4212-9ff8-827f3a0eea6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1439105, 26809, 227, 3, 28, "Input",ExpressionUUID->"28983e7c-8e9d-4f67-a7ed-4bb7b3102dfb"],
Cell[1439335, 26814, 2625, 59, 235, "Output",ExpressionUUID->"c74a30f8-0d1f-4cce-910a-9ecaf8a1ceb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1441997, 26878, 461, 13, 28, "Input",ExpressionUUID->"85b4ac6d-389b-49f2-91fb-bdcbed39093e"],
Cell[1442461, 26893, 5818, 171, 241, "Output",ExpressionUUID->"52315468-c3d4-4843-af7f-a0002e6c2378"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1448316, 27069, 457, 13, 28, "Input",ExpressionUUID->"fd89b0f0-34f7-4f2d-aa90-cd3c49c33174"],
Cell[1448776, 27084, 2938, 65, 242, "Output",ExpressionUUID->"8b226fdc-0685-4c82-8803-cecefa48eab3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1451763, 27155, 547, 8, 38, "Subsection",ExpressionUUID->"a3d35a0f-7178-4a21-a900-089a509c48e8"],
Cell[1452313, 27165, 2667, 63, 181, "Input",ExpressionUUID->"0c694a4a-041c-4cfc-bf8d-0cc4f728f566"],
Cell[CellGroupData[{
Cell[1455005, 27232, 142, 2, 28, "Input",ExpressionUUID->"8cb978f9-1bc6-49d6-ab82-e8abfcfb05e2"],
Cell[1455150, 27236, 173, 3, 32, "Output",ExpressionUUID->"42d66957-8928-44a9-ad6a-4296e65bcd28"]
}, Open  ]],
Cell[1455338, 27242, 4934, 112, 162, "Input",ExpressionUUID->"e61a79c5-ec88-4b85-a650-ca5f1eb7eeec"],
Cell[1460275, 27356, 1236, 34, 67, "Input",ExpressionUUID->"c194de19-f721-4cc4-b5ac-f1259677c610"],
Cell[CellGroupData[{
Cell[1461536, 27394, 328, 7, 28, "Input",ExpressionUUID->"74976a21-4a01-46a9-839f-8f4d47f1bbdb"],
Cell[1461867, 27403, 7802, 235, 242, "Output",ExpressionUUID->"3ae8a8aa-0f0b-4f50-91be-490b8aa24ba4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1469706, 27643, 580, 13, 64, "Input",ExpressionUUID->"9aed4f95-6012-4267-9a04-bfac2fb1a8bc",
 InitializationCell->True],
Cell[1470289, 27658, 524, 12, 70, "Message",ExpressionUUID->"46881e96-6006-40fc-81be-72a1097fc8e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1470850, 27675, 355, 7, 28, "Input",ExpressionUUID->"70373f55-a090-4e34-8baa-f11be2f9f7ce"],
Cell[1471208, 27684, 5400, 125, 245, "Output",ExpressionUUID->"a87ce478-c2c9-40f7-8c7e-e6d25c1de651"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1476669, 27816, 572, 8, 53, "Section",ExpressionUUID->"761e7f5c-cedf-4ce8-b24b-5f0b0a800606"],
Cell[1477244, 27826, 1409, 35, 83, "Input",ExpressionUUID->"16445620-9a0b-445d-b877-a05acc00d263",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1478678, 27865, 768, 11, 54, "Subsection",ExpressionUUID->"580c38e3-d932-4e6c-8d62-a2436dffefb6"],
Cell[1479449, 27878, 365, 8, 28, "Input",ExpressionUUID->"3ca92447-0df7-4734-946c-a45454a16971"],
Cell[CellGroupData[{
Cell[1479839, 27890, 612, 9, 45, "Subsubsection",ExpressionUUID->"0c603203-47ba-45da-8596-a2a580375841"],
Cell[1480454, 27901, 5673, 125, 295, "Input",ExpressionUUID->"aab28557-2d2f-4535-8c18-2b5d099acba4"],
Cell[CellGroupData[{
Cell[1486152, 28030, 245, 4, 28, "Input",ExpressionUUID->"b82d9c1f-1e30-43a5-8885-337475f80d0a"],
Cell[1486400, 28036, 366, 8, 32, "Output",ExpressionUUID->"631d1733-db2c-4edc-852e-6b3010edc9c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1486803, 28049, 2852, 61, 200, "Input",ExpressionUUID->"30c5115a-e8b1-498b-8c31-4df6654a957e"],
Cell[1489658, 28112, 394, 9, 38, "Message",ExpressionUUID->"2414fa11-82ec-4398-a7a3-0d4f4562442b"],
Cell[1490055, 28123, 394, 9, 38, "Message",ExpressionUUID->"83e2e98f-b224-4ba4-b837-4b281833071d"],
Cell[1490452, 28134, 394, 9, 38, "Message",ExpressionUUID->"0d19d675-b8db-4f61-91bd-3c081d438861"],
Cell[1490849, 28145, 472, 10, 28, "Message",ExpressionUUID->"d5e9023a-7c29-44e6-9374-06abd59f717b"],
Cell[1491324, 28157, 429, 10, 28, "Message",ExpressionUUID->"5f5c41fb-acf8-4f49-886c-fba626717bc0"],
Cell[1491756, 28169, 427, 10, 28, "Message",ExpressionUUID->"dd5040fb-723f-4a05-a005-602cf2d9a8c5"],
Cell[1492186, 28181, 427, 10, 28, "Message",ExpressionUUID->"f48216f7-e5ac-470b-9d1a-4a7bdb2377fb"],
Cell[1492616, 28193, 477, 10, 28, "Message",ExpressionUUID->"c1cbf16c-3e8d-4f7e-a362-f2e4021a7ac3"],
Cell[1493096, 28205, 413, 9, 28, "Message",ExpressionUUID->"59bb630e-24b9-45c2-861b-25341ca02fea"],
Cell[1493512, 28216, 413, 9, 28, "Message",ExpressionUUID->"cdad1f44-1fa8-4810-aa19-d75220b32d23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493962, 28230, 1139, 23, 67, "Input",ExpressionUUID->"5ae85d7a-c12d-40fb-81b6-7f4792cf1c0a"],
Cell[1495104, 28255, 574, 13, 28, "Message",ExpressionUUID->"15d33be0-803e-4e94-afa8-b61a9d6bfe4c"]
}, Open  ]],
Cell[1495693, 28271, 604, 12, 64, "Input",ExpressionUUID->"53d3e1c0-3d73-4b26-b3a0-c06d704bb4ff",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1496334, 28288, 600, 9, 37, "Subsubsection",ExpressionUUID->"8fa84b62-fbf8-43db-97e9-447052cd06f0"],
Cell[1496937, 28299, 8941, 178, 314, "Input",ExpressionUUID->"aa735c46-8fd0-402d-8235-4e6b5a5f9974"],
Cell[CellGroupData[{
Cell[1505903, 28481, 243, 4, 28, "Input",ExpressionUUID->"166f3f00-525b-493c-b099-0492cd79ba12"],
Cell[1506149, 28487, 389, 7, 32, "Output",ExpressionUUID->"29b0eb71-7b14-4f37-bea3-e02fb727a337"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1506575, 28499, 2867, 60, 200, "Input",ExpressionUUID->"d874c59b-64ca-43a0-b816-aca91c57ee1c"],
Cell[1509445, 28561, 667, 13, 28, "Message",ExpressionUUID->"07bdb945-815a-417c-b39c-aa9e90be0cb7"],
Cell[1510115, 28576, 669, 13, 28, "Message",ExpressionUUID->"2ffb341e-4b3c-4691-b1c8-5c147cba1bcb"],
Cell[1510787, 28591, 649, 13, 38, "Message",ExpressionUUID->"2a53d43a-af30-4c97-bb25-be39ee2af502"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1511473, 28609, 136, 1, 28, "Input",ExpressionUUID->"f3809b52-87d6-4e48-80e1-59d4772b3919"],
Cell[1511612, 28612, 465, 9, 32, "Output",ExpressionUUID->"9ba5db5a-e698-4c36-9fb7-ea1b299cc8ec"]
}, Open  ]],
Cell[1512092, 28624, 1181, 22, 48, "Input",ExpressionUUID->"b519c0ae-2cc8-49e5-9fed-26ce83a5e14f"],
Cell[1513276, 28648, 654, 13, 64, "Input",ExpressionUUID->"9e1095c0-0852-4d63-8731-2c841bbb0cea",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1513967, 28666, 709, 10, 45, "Subsubsection",ExpressionUUID->"bf05977b-2c16-4621-90ec-aeb827510e8e"],
Cell[CellGroupData[{
Cell[1514701, 28680, 1232, 25, 105, "Input",ExpressionUUID->"b86e9fb4-a301-4b9d-8fbe-dd699af10fcb"],
Cell[1515936, 28707, 888, 19, 168, "Output",ExpressionUUID->"2cb22c9d-85e0-4e38-ae56-21c549ba95a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1516861, 28731, 2329, 60, 276, "Input",ExpressionUUID->"6313387a-daad-479f-b352-dd15cf33d3bd"],
Cell[1519193, 28793, 3910, 89, 438, "Output",ExpressionUUID->"cac46924-7257-43b3-8628-a1025d354424"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1523140, 28887, 325, 8, 28, "Input",ExpressionUUID->"77f3f3c9-bb97-48e3-adf3-d3325a6e664e"],
Cell[1523468, 28897, 267, 4, 32, "Output",ExpressionUUID->"e49eb3ca-9d4b-4af2-9469-5edd010b99a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1523772, 28906, 1860, 49, 124, "Input",ExpressionUUID->"d44c9857-c69d-467d-b310-9c71d7b1f9d1"],
Cell[1525635, 28957, 3081, 79, 432, "Output",ExpressionUUID->"6e655265-4380-4d9f-9f4b-2b47b9f496ab"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1528777, 29043, 652, 10, 38, "Subsection",ExpressionUUID->"a085518c-7302-4521-b99f-d6c1f10887ee"],
Cell[1529432, 29055, 1161, 24, 242, "Text",ExpressionUUID->"2292f493-3d52-46f0-9fe0-e02e188ccaaa"],
Cell[CellGroupData[{
Cell[1530618, 29083, 2230, 59, 124, "Input",ExpressionUUID->"f05b43ee-4dc2-4e81-99d3-ffcc5accd09b"],
Cell[1532851, 29144, 908, 20, 42, "Output",ExpressionUUID->"5867d5c3-1ccf-4d96-9566-6df374d9066f"],
Cell[1533762, 29166, 12555, 256, 149, "Output",ExpressionUUID->"230c1ce2-d71d-4c69-a980-2f61a30619d2"],
Cell[1546320, 29424, 7446, 146, 274, "Output",ExpressionUUID->"2cc94f97-3f34-4577-b87d-40cee60448b5"]
}, Open  ]],
Cell[1553781, 29573, 7682, 154, 542, "Input",ExpressionUUID->"3cf5f4f8-5eed-4461-a20d-84aa8fcd5e97"],
Cell[1561466, 29729, 7981, 169, 542, "Input",ExpressionUUID->"7d207ef5-2981-4e66-ba01-fa4b9b66b52b"],
Cell[1569450, 29900, 1705, 40, 162, "Input",ExpressionUUID->"96f4cd9e-6287-41fe-bb07-f4061b5f1bc0"],
Cell[CellGroupData[{
Cell[1571180, 29944, 5236, 120, 333, "Input",ExpressionUUID->"5794835a-73b4-4b7a-8017-ca977dbd7a92"],
Cell[1576419, 30066, 23236, 507, 977, "Output",ExpressionUUID->"ea5167b1-ffc7-43da-801b-e65666ce15fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1599692, 30578, 1382, 35, 105, "Input",ExpressionUUID->"ce275e69-733a-4ce6-af36-7811dc6eb4a3"],
Cell[1601077, 30615, 12634, 259, 300, "Output",ExpressionUUID->"10f57a04-4382-48af-b929-941e353ca2e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1613748, 30879, 424, 11, 28, "Input",ExpressionUUID->"a71f6cb5-9734-4f67-b58b-7dee43a80f5b"],
Cell[1614175, 30892, 322, 6, 32, "Output",ExpressionUUID->"17b48cc3-7d65-4d53-9f7e-b556ba8384e2"]
}, Open  ]],
Cell[1614512, 30901, 2333, 53, 200, "Input",ExpressionUUID->"0ca5ae0e-6426-49da-9820-83f57b21abef"],
Cell[1616848, 30956, 639, 13, 64, "Input",ExpressionUUID->"4e876b30-14fe-45cc-948b-c004cf206499",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1617512, 30973, 649, 14, 67, "Input",ExpressionUUID->"a3ac67f5-4ef0-4573-ac38-083ab30d68e5"],
Cell[1618164, 30989, 1819, 45, 241, "Output",ExpressionUUID->"9c462728-9748-43fa-81d7-bd77bfc78eae"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1620044, 31041, 611, 9, 67, "Section",ExpressionUUID->"d60ca7d6-283c-4978-8f29-68c66434c002"],
Cell[CellGroupData[{
Cell[1620680, 31054, 612, 9, 54, "Subsection",ExpressionUUID->"06a82f52-c723-44a2-a4ef-a5d315570948"],
Cell[1621295, 31065, 3134, 70, 311, "Input",ExpressionUUID->"adf34223-21ca-43d6-8946-7f464ea4e7ad",
 InitializationCell->True],
Cell[1624432, 31137, 131, 3, 28, "Input",ExpressionUUID->"15057971-8555-4277-8c0b-cdb808a1791c"],
Cell[CellGroupData[{
Cell[1624588, 31144, 2423, 61, 181, "Input",ExpressionUUID->"62fa2369-41fc-48a2-866e-53619acade3a"],
Cell[1627014, 31207, 3029, 78, 232, "Output",ExpressionUUID->"c1fac1b4-4875-4eed-8275-cdd49f641ea2"]
}, Open  ]],
Cell[1630058, 31288, 2262, 53, 238, "Input",ExpressionUUID->"c9e9b568-d9d8-4658-9cf7-ca7868e992a8"],
Cell[CellGroupData[{
Cell[1632345, 31345, 5139, 134, 352, "Input",ExpressionUUID->"63f12483-9fd5-42dd-aed3-e811813f3f3c"],
Cell[1637487, 31481, 3848, 91, 367, "Output",ExpressionUUID->"12f9f690-04f0-470a-8f17-36b385fb6976"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1641372, 31577, 4773, 129, 352, "Input",ExpressionUUID->"f7bde5ff-899e-4cf8-9c9f-a056a1e9a698"],
Cell[1646148, 31708, 3528, 87, 371, "Output",ExpressionUUID->"4a2404fe-96d7-464d-b76c-e90ad0395f60"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1649725, 31801, 619, 9, 38, "Subsection",ExpressionUUID->"2fcc52e7-cef7-4284-b04e-df02c2ed254b"],
Cell[1650347, 31812, 4048, 86, 368, "Input",ExpressionUUID->"f9b2f7b3-3da4-4f8c-ab89-19a203ff53ca",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1654432, 31903, 765, 11, 38, "Subsection",ExpressionUUID->"db401794-c005-4b95-aa03-03289f8cbafe"],
Cell[1655200, 31916, 5161, 114, 581, "Input",ExpressionUUID->"35e90747-751a-49fb-b281-5f00244ee560"],
Cell[1660364, 32032, 5559, 123, 447, "Input",ExpressionUUID->"973a9be0-7502-4710-8aea-796f50c49236"],
Cell[1665926, 32157, 10825, 225, 1208, "Input",ExpressionUUID->"d7a5d142-145f-4b74-b98c-3cf9fcc2ec03"],
Cell[CellGroupData[{
Cell[1676776, 32386, 184655, 3643, 1074, "Input",ExpressionUUID->"d28e6cb1-99cf-4cd0-8407-05754b53cb3e"],
Cell[1861434, 36031, 180968, 3642, 1047, "Output",ExpressionUUID->"b8e25e39-1f56-4a34-ad0c-cd06210310ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2042439, 39678, 327, 8, 28, "Input",ExpressionUUID->"85ff1c99-8570-4497-ae47-b73629a6c9ca"],
Cell[2042769, 39688, 267, 4, 32, "Output",ExpressionUUID->"19fb043e-8800-45d2-9d7e-8a041e317193"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2043073, 39697, 4046, 96, 352, "Input",ExpressionUUID->"699bc245-6164-4d5d-86f8-53f6b397e77a"],
Cell[2047122, 39795, 18739, 433, 270, "Output",ExpressionUUID->"86e17d55-fcba-4b9c-9d5c-2abd05e11845"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2065898, 40233, 2117, 50, 181, "Input",ExpressionUUID->"7b8003e7-2657-4378-aa75-719d32bb36e5"],
Cell[2068018, 40285, 28984, 611, 279, "Output",ExpressionUUID->"6a18b9f9-ebd8-444a-b3c2-9d194b93fa36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2097039, 40901, 1451, 35, 200, "Input",ExpressionUUID->"b4580477-c00c-42ca-8ba6-6d3d54b9c629"],
Cell[2098493, 40938, 17152, 298, 343, "Output",ExpressionUUID->"b755348a-4b51-4b54-a5ff-15b731e55e63"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2115718, 41244, 398, 6, 58, "Chapter",ExpressionUUID->"0cbbbcca-713f-455b-8835-eef88807c08e"],
Cell[2116119, 41252, 296, 6, 35, "Text",ExpressionUUID->"3a6b7edc-042a-45b8-90a1-dbd6539962a2"],
Cell[CellGroupData[{
Cell[2116440, 41262, 788, 11, 67, "Section",ExpressionUUID->"efa61af2-c2e6-40ee-b70b-93727a205332"],
Cell[CellGroupData[{
Cell[2117253, 41277, 11695, 277, 1342, "Input",ExpressionUUID->"180a4240-394e-47e9-8a3c-aef03d69743e"],
Cell[2128951, 41556, 43012, 737, 253, "Output",ExpressionUUID->"2cbfde59-3791-4689-8a9d-c5a3aa734f2d"]
}, Open  ]],
Cell[2171978, 42296, 237, 5, 28, "Input",ExpressionUUID->"e6b4de6c-5419-4401-97d8-6ee571023b3f"],
Cell[2172218, 42303, 9412, 192, 961, "Input",ExpressionUUID->"c99c97f0-b4ce-4672-b070-0466270a8fad"],
Cell[CellGroupData[{
Cell[2181655, 42499, 2136, 50, 238, "Input",ExpressionUUID->"32e62d59-b41b-4e8f-ac3e-90894d3194f9"],
Cell[2183794, 42551, 49392, 845, 253, "Output",ExpressionUUID->"7b563466-ce43-42c6-be33-8d38c042a442"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2233235, 43402, 796, 11, 53, "Section",ExpressionUUID->"8d641d14-6cbb-45ae-bd28-bfde110d03f2"],
Cell[CellGroupData[{
Cell[2234056, 43417, 2285, 61, 143, "Input",ExpressionUUID->"92848241-5b4d-4250-a844-109e4ba94fb5"],
Cell[2236344, 43480, 603, 11, 32, "Output",ExpressionUUID->"4ee29c0e-961c-41e2-bb4d-0245b3c627f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2236984, 43496, 14099, 348, 1646, "Input",ExpressionUUID->"58feacbd-bd82-4eb4-837f-931154724187"],
Cell[2251086, 43846, 966, 17, 28, "Message",ExpressionUUID->"5cde8d4b-c944-44b5-aa36-ef87be5265c7"],
Cell[2252055, 43865, 262856, 4821, 219, "Output",ExpressionUUID->"65f64649-9169-40c1-beb1-e0c77723a179"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2514948, 48691, 190, 3, 28, "Input",ExpressionUUID->"9107a2f9-05df-479f-95f7-5ce8fd477bc2"],
Cell[2515141, 48696, 211, 5, 32, "Output",ExpressionUUID->"6971c342-f6d5-43cf-bd0e-7267cab03f09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2515389, 48706, 261, 6, 28, "Input",ExpressionUUID->"2a6719f4-8fe4-4ca1-995e-7de3f5c006dc"],
Cell[2515653, 48714, 502, 9, 32, "Output",ExpressionUUID->"7419e081-e280-46b7-812a-e8cf182937ac"]
}, Open  ]],
Cell[2516170, 48726, 639, 13, 28, "Input",ExpressionUUID->"bb063202-0239-4821-b0da-d29f46e57788"],
Cell[2516812, 48741, 477, 11, 28, "Input",ExpressionUUID->"c32d98ef-1949-4e0c-9f12-f4ee8e246f8a"],
Cell[CellGroupData[{
Cell[2517314, 48756, 254, 5, 28, "Input",ExpressionUUID->"4133a3d2-1729-4515-9574-68d31f12b460"],
Cell[2517571, 48763, 433, 12, 32, "Output",ExpressionUUID->"31b98888-5856-4e16-ae7e-fc8cddffc77c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2518041, 48780, 17948, 365, 1513, "Input",ExpressionUUID->"8f09a539-df1c-4eba-aec4-7de7113e6153"],
Cell[2535992, 49147, 946, 17, 28, "Message",ExpressionUUID->"1d75a883-81ca-43d5-a399-fbfb769b7daf"],
Cell[2536941, 49166, 949, 17, 28, "Message",ExpressionUUID->"74af0ca8-e253-4525-a06f-ad2e87e895d7"],
Cell[2537893, 49185, 949, 17, 28, "Message",ExpressionUUID->"26f245cc-d850-4996-8ed8-f6d81fcfeb7f"],
Cell[2538845, 49204, 949, 17, 28, "Message",ExpressionUUID->"b4e65e98-a41c-4371-94d3-7e65cb5e0bcb"],
Cell[2539797, 49223, 947, 17, 28, "Message",ExpressionUUID->"a693674e-ab2d-4fc2-9390-4f6929893731"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2540781, 49245, 7522, 181, 752, "Input",ExpressionUUID->"771db8b8-73c8-4e10-87fe-52c2d058da08"],
Cell[2548306, 49428, 204246, 4237, 219, "Output",ExpressionUUID->"43a23ff3-c236-4e96-9e89-1d412cad2636"],
Cell[2752555, 53667, 1324, 21, 32, "Output",ExpressionUUID->"ba08a187-8fb3-490c-85ab-bcb2c2cd290a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

