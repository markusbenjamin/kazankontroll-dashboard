(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3695209,      74410]
NotebookOptionsPosition[   3622966,      73361]
NotebookOutlinePosition[   3623439,      73379]
CellTagsIndexPosition[   3623396,      73376]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["functions", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 3.9266096544308543`*^9}, {
  3.9266109938395076`*^9, 3.926610994581573*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"InterpolatingFunction", "::", "dval"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"InterpolatingFunction", "::", "dmwarn"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"InterpolatingFunction", "::", "dzero"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.927706727895825*^9, 3.9277067289061375`*^9}},
 CellLabel->"In[1]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToStringWithDateCorrection", "[", "expression_", "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
       "]"}], "]"}], "==", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<0\>\"", "<>", 
     RowBox[{"ToString", "[", "expression", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ToString", "[", "expression", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToStringWithDateCorrection", "[", 
   RowBox[{"expression_", ",", "correctLength_"}], "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
       "]"}], "]"}], "<", "correctLength"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringRiffle", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"\"\<0\>\"", ",", 
         RowBox[{"correctLength", "-", 
          RowBox[{"Length", "[", 
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
            "]"}], "]"}]}]}], "]"}], ",", "\"\<\>\""}], "]"}], "<>", 
     RowBox[{"ToString", "[", "expression", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ToString", "[", "expression", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.925989169233279*^9, 3.925989267992455*^9}, {
  3.9264141352271404`*^9, 3.9264141505005507`*^9}, {3.9264141975496087`*^9, 
  3.9264142132326336`*^9}},
 CellLabel->"In[5]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MinuteOfDayToHourAndMinuteString", "[", "minuteOfDay_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ToStringWithDateCorrection", "[", 
    RowBox[{"IntegerPart", "[", 
     RowBox[{"minuteOfDay", "/", "60"}], "]"}], "]"}], "<>", "\"\<:\>\"", "<>", 
   RowBox[{"ToStringWithDateCorrection", "[", 
    RowBox[{
     RowBox[{"FractionalPart", "[", 
      RowBox[{"minuteOfDay", "/", "60"}], "]"}], "60"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinuteOfDayToHourAndMinuteList", "[", "minuteOfDay_", "]"}], ":=", 
  
  RowBox[{"{", 
   RowBox[{
    RowBox[{"IntegerPart", "[", 
     RowBox[{"minuteOfDay", "/", "60"}], "]"}], ",", 
    RowBox[{
     RowBox[{"FractionalPart", "[", 
      RowBox[{"minuteOfDay", "/", "60"}], "]"}], "60"}]}], "}"}]}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.926407378735193*^9, 3.9264074397457685`*^9}, 
   3.9264075049673653`*^9, {3.9266116962578964`*^9, 3.926611717457899*^9}},
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"HourAndMinuteToMinuteOfDay", "[", 
   RowBox[{"hour_", ",", "minute_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"60", "hour"}], "+", "minute"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926407772516139*^9, 3.926407798893014*^9}},
 CellLabel->"In[9]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"HourAndMinuteToMinuteOfDay", "[", "hourAndMinuteString_", "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"hourAndMinuteString", ",", "\"\<:\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"hourAndMinuteString", ",", "\"\<:\>\""}], "]"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "60"}], "+", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{"hourAndMinuteString", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "60"}], "+", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringTake", "[", 
       RowBox[{"hourAndMinuteString", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926407800975358*^9, 3.9264078464302816`*^9}, {
  3.92640920055725*^9, 3.9264092685148034`*^9}},
 CellLabel->"In[10]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"DateExtend", "[", 
   RowBox[{"dateObject_", ",", "hour_", ",", "minute_"}], "]"}], ":=", 
  RowBox[{"DateObject", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"DateList", "[", "dateObject", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"hour", ",", "minute"}], "}"}]}], "}"}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926616415255797*^9, 3.9266164600834856`*^9}, {
  3.9266164984696054`*^9, 3.9266164998273354`*^9}},
 CellLabel->"In[11]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "normalize", " ", "DateObjects", " ", "to", 
    " ", "the", " ", "same", " ", "granularity"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NormalizeDate", "[", "date_", "]"}], ":=", 
    RowBox[{"DateObject", "[", 
     RowBox[{
      RowBox[{"DateList", "[", "date", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "find", " ", "the", " ", "index", " ", "of", 
     " ", "the", " ", "first", " ", "element", " ", "not", " ", "less", " ", 
     "than", " ", "a", " ", "given", " ", "date"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindFirstIndexNotLessThan", "[", 
     RowBox[{"list_", ",", "date_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", "list", "]"}]}], ",", 
        RowBox[{"low", "=", "1"}], ",", "high", ",", "mid", ",", "normDate"}],
        "}"}], ",", 
      RowBox[{
       RowBox[{"normDate", "=", 
        RowBox[{"NormalizeDate", "[", "date", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"high", "=", "len"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"low", "<", "high"}], ",", 
         RowBox[{
          RowBox[{"mid", "=", 
           RowBox[{"Quotient", "[", 
            RowBox[{
             RowBox[{"low", "+", "high"}], ",", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"NormalizeDate", "[", 
              RowBox[{"First", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", "mid", "]"}], "]"}], "]"}], "]"}], "<", 
             "normDate"}], ",", 
            RowBox[{"low", "=", 
             RowBox[{"mid", "+", "1"}]}], ",", 
            RowBox[{"high", "=", "mid"}]}], "]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "low"}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "find", " ", "the", " ", "index", " ", "of", 
     " ", "the", " ", "first", " ", "element", " ", "greater", " ", "than", 
     " ", "a", " ", "given", " ", "date"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindFirstIndexGreaterThan", "[", 
     RowBox[{"list_", ",", "date_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"len", "=", 
         RowBox[{"Length", "[", "list", "]"}]}], ",", 
        RowBox[{"low", "=", "1"}], ",", "high", ",", "mid", ",", "normDate"}],
        "}"}], ",", 
      RowBox[{
       RowBox[{"normDate", "=", 
        RowBox[{"NormalizeDate", "[", "date", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"high", "=", "len"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"low", "<", "high"}], ",", 
         RowBox[{
          RowBox[{"mid", "=", 
           RowBox[{"Quotient", "[", 
            RowBox[{
             RowBox[{"low", "+", "high"}], ",", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"NormalizeDate", "[", 
              RowBox[{"First", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", "mid", "]"}], "]"}], "]"}], "]"}], "<=", 
             "normDate"}], ",", 
            RowBox[{"low", "=", 
             RowBox[{"mid", "+", "1"}]}], ",", 
            RowBox[{"high", "=", "mid"}]}], "]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "low"}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "the", " ", "function", " ", "to", " ", "select", " ", 
     "elements", " ", "by", " ", "date", " ", "range"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SelectElementsByDateRange", "[", 
     RowBox[{"list_", ",", "startDate_", ",", "endDate_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "startIndex", ",", "endIndex", ",", "normStartDate", ",", 
        "normEndDate"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Normalize", " ", "dates"}], "*)"}], 
      RowBox[{
       RowBox[{"normStartDate", "=", 
        RowBox[{"NormalizeDate", "[", "startDate", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"normEndDate", "=", 
        RowBox[{"NormalizeDate", "[", "endDate", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Find", " ", "the", " ", "starting", " ", "and", " ", "ending", " ", 
         "indices"}], "*)"}], 
       RowBox[{"startIndex", "=", 
        RowBox[{"FindFirstIndexNotLessThan", "[", 
         RowBox[{"list", ",", "normStartDate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"endIndex", "=", 
        RowBox[{"FindFirstIndexGreaterThan", "[", 
         RowBox[{"list", ",", "normEndDate"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "the", " ", "sublist", " ", "within", " ", "the", " ", 
         "range"}], "*)"}], 
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{"startIndex", ";;", 
          RowBox[{"endIndex", "-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
   "\n"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266151105498524`*^9, 3.9266151281307926`*^9}, {
  3.926615263669429*^9, 3.9266152662930775`*^9}},
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapFunctionToGranularity", "[", 
   RowBox[{"function_", ",", "data_List", ",", "granularity_String"}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"extractedComponents", ",", "groupedData", ",", "mappedData"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Extract", " ", "the", " ", "relevant", " ", "component", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", ".", "g", "."}], ",", "month"}], ")"}], " ", "from", " ",
       "each", " ", "DateObject", " ", "and", " ", "pair", " ", "with", " ", 
      "value"}], "*)"}], 
    RowBox[{
     RowBox[{"extractedComponents", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"DateValue", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "granularity"}], "]"}], 
           ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", "data"}], 
       ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Group", " ", "data", " ", "by", " ", "the", " ", "extracted", " ", 
       "component", " ", "and", " ", "calculate", " ", "the", " ", "mean", 
       " ", "for", " ", "each", " ", "group"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"groupedData", "=", 
      RowBox[{"GroupBy", "[", 
       RowBox[{"extractedComponents", ",", 
        RowBox[{"First", "->", "Last"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Replace", " ", "each", " ", "group", " ", "key", " ", "with", " ", 
       "an", " ", "average", " ", "value"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"mappedData", "=", 
      RowBox[{"function", "/@", "groupedData"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Keys", "[", "mappedData", "]"}], ",", 
          RowBox[{"Values", "[", "mappedData", "]"}]}], "}"}], "]"}], ",", 
       "First"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.922259041186428*^9, 3.9222590830296435`*^9}, {
  3.9222598196615105`*^9, 3.9222598318004327`*^9}, {3.9222601836143236`*^9, 
  3.922260249623652*^9}, {3.9222603934282913`*^9, 3.9222604134380503`*^9}},
 CellLabel->"In[16]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"dayNameToDayOfWeek", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Mon\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<Tue\>\"", "\[Rule]", "2"}], ",", 
     RowBox[{"\"\<Wed\>\"", "\[Rule]", "3"}], ",", 
     RowBox[{"\"\<Thu\>\"", "\[Rule]", "4"}], ",", 
     RowBox[{"\"\<Fri\>\"", "\[Rule]", "5"}], ",", 
     RowBox[{"\"\<Sat\>\"", "\[Rule]", "6"}], ",", 
     RowBox[{"\"\<Sun\>\"", "\[Rule]", "7"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9277951872000303`*^9, 3.9277951975660324`*^9}, {
  3.9277952529916573`*^9, 3.927795253486641*^9}},
 CellLabel->"In[17]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["misc", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 3.9266096544308543`*^9}}],

Cell[CellGroupData[{

Cell["heatmeter read-in", "Section",
 CellChangeTimes->{{3.926609631407152*^9, 3.926609640288895*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToStringWithDateCorrection", "[", "expression_", "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
       "]"}], "]"}], "==", "1"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<0\>\"", "<>", 
     RowBox[{"ToString", "[", "expression", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ToString", "[", "expression", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToStringWithDateCorrection", "[", 
   RowBox[{"expression_", ",", "correctLength_"}], "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StringSplit", "[", 
       RowBox[{
        RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
       "]"}], "]"}], "<", "correctLength"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringRiffle", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"\"\<0\>\"", ",", 
         RowBox[{"correctLength", "-", 
          RowBox[{"Length", "[", 
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"ToString", "[", "expression", "]"}], ",", "\"\<\>\""}], 
            "]"}], "]"}]}]}], "]"}], ",", "\"\<\>\""}], "]"}], "<>", 
     RowBox[{"ToString", "[", "expression", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ToString", "[", "expression", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.925989169233279*^9, 3.925989267992455*^9}, {
  3.9264141352271404`*^9, 3.9264141505005507`*^9}, {3.9264141975496087`*^9, 
  3.9264142132326336`*^9}},
 CellLabel->"In[657]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"MinuteOfDayToHourAndMinute", "[", "minuteOfDay_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ToStringWithDateCorrection", "[", 
    RowBox[{"IntegerPart", "[", 
     RowBox[{"minuteOfDay", "/", "60"}], "]"}], "]"}], "<>", "\"\<:\>\"", "<>", 
   RowBox[{"ToStringWithDateCorrection", "[", 
    RowBox[{
     RowBox[{"FractionalPart", "[", 
      RowBox[{"minuteOfDay", "/", "60"}], "]"}], "60"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.926407378735193*^9, 3.9264074397457685`*^9}, 
   3.9264075049673653`*^9},
 CellLabel->"In[101]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"HourAndMinuteToMinuteOfDay", "[", 
   RowBox[{"hour_", ",", "minute_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"60", "hour"}], "+", "minute"}]}]], "Input",
 CellChangeTimes->{{3.926407772516139*^9, 3.926407798893014*^9}},
 CellLabel->"In[123]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"HourAndMinuteToMinuteOfDay", "[", "hourAndMinuteString_", "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringContainsQ", "[", 
     RowBox[{"hourAndMinuteString", ",", "\"\<:\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"hourAndMinuteString", ",", "\"\<:\>\""}], "]"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "60"}], "+", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringTake", "[", 
        RowBox[{"hourAndMinuteString", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "60"}], "+", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"StringTake", "[", 
       RowBox[{"hourAndMinuteString", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.926407800975358*^9, 3.9264078464302816`*^9}, {
  3.92640920055725*^9, 3.9264092685148034`*^9}},
 CellLabel->"In[221]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "rawDataRoot", "=", 
   "\"\<C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\kazankontroll-\
dashboard\\\\data\\\\raw\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.9264072662174683`*^9, 3.926407266512049*^9}},
 CellLabel->"In[88]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "formattedDataRoot", "=", 
   "\"\<C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\kazankontroll-\
dashboard\\\\data\\\\formatted\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.9259888840241904`*^9, 3.9259889122362614`*^9}},
 CellLabel->"In[2]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", "=", "formattedDataRoot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fileName", "=", "\"\<heat_stock_net.csv\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lastLoadDay", "=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dirs", ",", "sortedDirs", ",", "foundFile"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Get", " ", "list", " ", "of", " ", "directories"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dirs", "=", 
       RowBox[{"FileNames", "[", 
        RowBox[{"\"\<*\>\"", ",", "path"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Sort", " ", "directories", " ", "in", " ", "decreasing", " ", 
        "order"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sortedDirs", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"dirs", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"DateObject", "[", "#1", "]"}], ">", 
           RowBox[{"DateObject", "[", "#2", "]"}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Search", " ", "for", " ", "the", " ", "file"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"foundFile", "=", 
       RowBox[{"SelectFirst", "[", 
        RowBox[{"sortedDirs", ",", 
         RowBox[{
          RowBox[{"FileExistsQ", "[", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"#", ",", "fileName"}], "}"}], "]"}], "]"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"StringSplit", "[", 
        RowBox[{"foundFile", ",", "\"\<\\\\\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadDayStamps", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringRiffle", "[", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{"ToStringWithDateCorrection", ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
        "\"\<-\>\""}], "]"}], "&"}], ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2024", ",", "2", ",", "1"}], "}"}], ",", 
       RowBox[{"DateObject", "[", "lastLoadDay", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"heatStockDataOriginal", "=", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{
         "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
          "\"\<\\\\heat_stock.csv\>\""}], "]"}], "&"}], ",", 
       "\[IndentingNewLine]", "loadDayStamps"}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"$Failed", "->", "\"\<no data\>\""}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"heatStockDataNet", "=", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{
         "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
          "\"\<\\\\heat_stock_net.csv\>\""}], "]"}], "&"}], ",", 
       "\[IndentingNewLine]", "loadDayStamps"}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"$Failed", "->", "\"\<no data\>\""}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"badDays", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Intersection", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"heatStockDataOriginal", ",", "$Failed"}], "]"}], "]"}], ",", 
      
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"heatStockDataNet", ",", "$Failed"}], "]"}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"goodDays", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "loadDayStamps", "]"}], "]"}], ",", "badDays"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dayN", ",", "timeStamps"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"dayN", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"loadDayStamps", ",", "day"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"timeStamps", "=", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"HourAndMinuteToMinuteOfDay", "[", 
           RowBox[{"StringTake", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "10"}], ",", 
               RowBox[{"-", "7"}]}], "}"}]}], "]"}], "]"}], "&"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"FileNames", "[", 
            RowBox[{"All", ",", 
             RowBox[{
             "rawDataRoot", "<>", "\"\<\\\\\>\"", "<>", "day", "<>", 
              "\"\<\\\\heatmeter_images\\\\\>\""}]}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringEndsQ", "[", 
             RowBox[{"#", ",", "\"\<.png\>\""}], "]"}], "&"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<day\>\"", ",", "\"\<original\>\"", ",", "\"\<net\>\"", ",", 
           "\"\<diff\>\""}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"loadDayStamps", "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"heatStockDataOriginal", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"heatStockDataOriginal", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", "5"}], "]"}], "]"}], ",", 
             "\"\<no data\>\""}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"heatStockDataNet", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"heatStockDataNet", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", "5"}], "]"}], "]"}], ",", 
             "\"\<no data\>\""}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Dimensions", "[", 
                RowBox[{"heatStockDataOriginal", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
               RowBox[{"{", "}"}]}], "&&", 
              RowBox[{
               RowBox[{"Dimensions", "[", 
                RowBox[{"heatStockDataNet", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
               RowBox[{"{", "}"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"heatStockDataNet", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", "5"}], "]"}], "]"}], "-", 
              RowBox[{
               RowBox[{
                RowBox[{"heatStockDataOriginal", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", "5"}], "]"}], "]"}]}], ",", 
             "\"\<no data\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"heatStockDataOriginal", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"heatStockDataOriginal", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}],
                  ",", "Nothing"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Dimensions", "[", 
                   RowBox[{"heatStockDataNet", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"heatStockDataNet", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}],
                  ",", "Nothing"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotRange", "->", "All"}], ",", 
             RowBox[{"Ticks", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#", ",", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"MinuteOfDayToHourAndMinute", "[", "#", "]"}], 
                    ",", 
                    RowBox[{"Pi", " ", "0.25"}]}], "]"}]}], "}"}], "&"}], ",", 
                  RowBox[{"Range", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"24", " ", "60"}], ",", " ", "120"}], "]"}]}], 
                 "]"}], ",", "Automatic"}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"\"\<cycle \>\"", "<>", 
               RowBox[{"ToString", "[", "cycle", "]"}]}]}], ",", 
             RowBox[{"Prolog", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"If", "[", 
                RowBox[{"showCaptures", ",", 
                 RowBox[{"{", 
                  RowBox[{"Pink", ",", "Thin", ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "10000"}], "}"}]}], "}"}], "]"}], "&"}],
                     ",", "timeStamps"}], "]"}]}], "}"}]}], "]"}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"showCaptures", ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"day", ",", 
       RowBox[{
        RowBox[{"loadDayStamps", "[", 
         RowBox[{"[", "goodDays", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"loadDayStamps", "[", 
      RowBox[{"[", "goodDays", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]",
   "]"}]}], "Input",
 CellChangeTimes->{{3.926487626803466*^9, 3.9264876291320148`*^9}, {
   3.9264879039344945`*^9, 3.926487946153433*^9}, {3.926488511974119*^9, 
   3.92648851432641*^9}, {3.9264886510208015`*^9, 3.9264886957487745`*^9}, {
   3.926489790955743*^9, 3.9264897909880457`*^9}, {3.926490098530619*^9, 
   3.926490098729957*^9}, {3.926490178483502*^9, 3.9264901785258703`*^9}, 
   3.926490317506263*^9, {3.9264908239984217`*^9, 3.9264908497907763`*^9}, {
   3.9264908847250743`*^9, 3.9264908848404217`*^9}, {3.9264913361950026`*^9, 
   3.926491336251018*^9}, {3.9264918570526185`*^9, 3.9264918571108727`*^9}, {
   3.9264920159834485`*^9, 3.9264920160389705`*^9}, {3.9264924372892046`*^9, 
   3.9264924373466125`*^9}, {3.926493371842695*^9, 3.9264933719033117`*^9}, {
   3.92649503118521*^9, 3.926495052835286*^9}, {3.9264954554131327`*^9, 
   3.9264954556830378`*^9}, {3.926495500371458*^9, 3.9264955004271765`*^9}, {
   3.9264968790421133`*^9, 3.9264968790999117`*^9}, {3.9264969092487693`*^9, 
   3.9264969093494167`*^9}, {3.926497526421712*^9, 3.9264975264805517`*^9}, {
   3.92649780337027*^9, 3.92649780343392*^9}, {3.926506902380454*^9, 
   3.9265069026370044`*^9}, {3.9265073593662014`*^9, 
   3.9265073594282985`*^9}, {3.926507833666227*^9, 3.9265078339122815`*^9}, {
   3.9265083603361*^9, 3.926508360626668*^9}, {3.9265084599917655`*^9, 
   3.9265084603003054`*^9}, {3.926510884409176*^9, 3.926510887504158*^9}, {
   3.92651118365746*^9, 3.9265111837609887`*^9}, {3.9265113679032435`*^9, 
   3.9265113684898396`*^9}, {3.926512068518323*^9, 3.9265120685703387`*^9}, {
   3.9265123229490523`*^9, 3.9265123254026546`*^9}, {3.9265125203501453`*^9, 
   3.926512520411183*^9}, {3.926513413831066*^9, 3.9265134139212017`*^9}, {
   3.926514570591022*^9, 3.9265145706926904`*^9}, {3.9265899235810657`*^9, 
   3.926589923660239*^9}, {3.926590291677614*^9, 3.926590291739766*^9}, {
   3.9265923927588134`*^9, 3.926592393276374*^9}, 3.926592432237482*^9},
 CellLabel->"In[6103]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`day$$ = 
    "2024-03-29", $CellContext`showCaptures$$ = False, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`showCaptures$$], {False, True}}, {{
       Hold[$CellContext`day$$], "2024-03-29"}, {
      "2024-02-01", "2024-02-02", "2024-02-03", "2024-02-04", "2024-02-05", 
       "2024-02-06", "2024-02-07", "2024-02-08", "2024-02-09", "2024-02-10", 
       "2024-02-11", "2024-02-12", "2024-02-13", "2024-02-14", "2024-02-15", 
       "2024-02-16", "2024-02-17", "2024-02-18", "2024-02-19", "2024-02-20", 
       "2024-02-21", "2024-02-22", "2024-02-23", "2024-02-24", "2024-02-25", 
       "2024-02-26", "2024-02-27", "2024-02-28", "2024-02-29", "2024-03-01", 
       "2024-03-02", "2024-03-03", "2024-03-04", "2024-03-05", "2024-03-06", 
       "2024-03-07", "2024-03-08", "2024-03-09", "2024-03-10", "2024-03-11", 
       "2024-03-12", "2024-03-13", "2024-03-14", "2024-03-15", "2024-03-16", 
       "2024-03-17", "2024-03-18", "2024-03-19", "2024-03-20", "2024-03-21", 
       "2024-03-22", "2024-03-23", "2024-03-24", "2024-03-25", "2024-03-26", 
       "2024-03-27", "2024-03-28", "2024-03-29"}}}, Typeset`size$$ = {
    1028., {141.3340332872234, 147.06596671277657`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`day$$ = 
        "2024-03-29", $CellContext`showCaptures$$ = False}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`dayN$, $CellContext`timeStamps$}, \
$CellContext`dayN$ = Part[
           Part[
            Position[$CellContext`loadDayStamps, $CellContext`day$$], 1], 
           1]; $CellContext`timeStamps$ = 
         Map[$CellContext`HourAndMinuteToMinuteOfDay[
            StringTake[#, {-10, -7}]]& , 
           Select[
            FileNames[All, 
             
             StringJoin[$CellContext`rawDataRoot, "\\", $CellContext`day$$, 
              "\\heatmeter_images\\"]], StringEndsQ[#, ".png"]& ]]; 
        Grid[{{"day", "original", "net", "diff"}, {
            Part[$CellContext`loadDayStamps, $CellContext`dayN$], 
            If[Dimensions[
               
               Part[$CellContext`heatStockDataOriginal, $CellContext`dayN$]] != \
{}, 
             Part[
              Part[
               
               Part[$CellContext`heatStockDataOriginal, $CellContext`dayN$], \
-1], 
              Span[2, 5]], "no data"], 
            If[Dimensions[
               Part[$CellContext`heatStockDataNet, $CellContext`dayN$]] != {}, 
             Part[
              Part[
               Part[$CellContext`heatStockDataNet, $CellContext`dayN$], -1], 
              Span[2, 5]], "no data"], 
            If[
             And[Dimensions[
                
                Part[$CellContext`heatStockDataOriginal, $CellContext`dayN$]] != \
{}, Dimensions[
                
                Part[$CellContext`heatStockDataNet, $CellContext`dayN$]] != \
{}], Part[
               Part[
                Part[$CellContext`heatStockDataNet, $CellContext`dayN$], -1], 
               
               Span[2, 5]] - Part[
              Part[
               
               Part[$CellContext`heatStockDataOriginal, $CellContext`dayN$], \
-1], 
              Span[2, 5]], "no data"]}, 
           Table[
            ListPlot[{
              If[Dimensions[
                 
                 Part[$CellContext`heatStockDataOriginal, \
$CellContext`dayN$]] != {}, 
               Transpose[
                Part[
                 Transpose[
                  
                  Part[$CellContext`heatStockDataOriginal, \
$CellContext`dayN$]], {1, 1 + $CellContext`cycle}]], Nothing], 
              If[Dimensions[
                 
                 Part[$CellContext`heatStockDataNet, $CellContext`dayN$]] != \
{}, 
               Transpose[
                Part[
                 Transpose[
                  Part[$CellContext`heatStockDataNet, $CellContext`dayN$]], {
                 1, 1 + $CellContext`cycle}]], Nothing]}, Joined -> True, 
             PlotRange -> All, Ticks -> {
               Map[{#, 
                 Rotate[
                  $CellContext`MinuteOfDayToHourAndMinute[#], Pi 0.25]}& , 
                Range[0, 24 60, 120]], Automatic}, ImageSize -> 250, 
             PlotLabel -> StringJoin["cycle ", 
               ToString[$CellContext`cycle]], Prolog -> {
               If[$CellContext`showCaptures$$, {Pink, Thin, 
                 Map[
                 Line[{{#, 0}, {#, 
                    10000}}]& , $CellContext`timeStamps$]}]}], \
{$CellContext`cycle, 1, 4}]}]], 
      "Specifications" :> {{$CellContext`showCaptures$$, {
         False, True}}, {{$CellContext`day$$, "2024-03-29"}, {
         "2024-02-01", "2024-02-02", "2024-02-03", "2024-02-04", "2024-02-05",
           "2024-02-06", "2024-02-07", "2024-02-08", "2024-02-09", 
          "2024-02-10", "2024-02-11", "2024-02-12", "2024-02-13", 
          "2024-02-14", "2024-02-15", "2024-02-16", "2024-02-17", 
          "2024-02-18", "2024-02-19", "2024-02-20", "2024-02-21", 
          "2024-02-22", "2024-02-23", "2024-02-24", "2024-02-25", 
          "2024-02-26", "2024-02-27", "2024-02-28", "2024-02-29", 
          "2024-03-01", "2024-03-02", "2024-03-03", "2024-03-04", 
          "2024-03-05", "2024-03-06", "2024-03-07", "2024-03-08", 
          "2024-03-09", "2024-03-10", "2024-03-11", "2024-03-12", 
          "2024-03-13", "2024-03-14", "2024-03-15", "2024-03-16", 
          "2024-03-17", "2024-03-18", "2024-03-19", "2024-03-20", 
          "2024-03-21", "2024-03-22", "2024-03-23", "2024-03-24", 
          "2024-03-25", "2024-03-26", "2024-03-27", "2024-03-28", 
          "2024-03-29"}}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{162., {36.13403328722343, 41.86596671277657}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.9264879474317265`*^9, {3.9264881365004597`*^9, 3.9264881847184143`*^9}, 
   3.926488514636073*^9, 3.926488653035104*^9, 3.9264886961831264`*^9, 
   3.9264892268364983`*^9, {3.9264897667475677`*^9, 3.9264897913633556`*^9}, 
   3.9264898337198067`*^9, 3.9264900426414423`*^9, 3.92649009905409*^9, 
   3.9264901789681196`*^9, 3.9264903178748956`*^9, 3.9264907814454007`*^9, {
   3.926490825631588*^9, 3.9264908513725615`*^9}, 3.9264908863507414`*^9, 
   3.926491240510536*^9, 3.9264912818390837`*^9, {3.926491320285535*^9, 
   3.926491337761351*^9}, 3.926491476679671*^9, 3.926491858334759*^9, 
   3.926491984977523*^9, 3.926492017679846*^9, {3.9264924216426377`*^9, 
   3.926492438876682*^9}, 3.9264932114111924`*^9, 3.9264932483446736`*^9, 
   3.926493372539054*^9, 3.9264949710879264`*^9, {3.926495013321425*^9, 
   3.926495054295497*^9}, {3.9264952997718134`*^9, 3.9264953281024265`*^9}, {
   3.9264954397161627`*^9, 3.9264954568738775`*^9}, 3.92649550342159*^9, 
   3.9264956335924745`*^9, 3.926496664498308*^9, 3.9264967003324623`*^9, {
   3.926496812625079*^9, 3.926496818695339*^9}, {3.9264968623597107`*^9, 
   3.926496880058401*^9}, 3.9264969114389267`*^9, 3.9264973924077854`*^9, {
   3.9264975079432354`*^9, 3.9264975274429426`*^9}, {3.926497784803477*^9, 
   3.926497805404852*^9}, 3.926497983238365*^9, 3.926506904730691*^9, 
   3.9265071534713707`*^9, 3.926507230206668*^9, 3.9265072668782244`*^9, 
   3.926507325235034*^9, 3.9265073616099386`*^9, 3.926507690844803*^9, 
   3.9265078014398117`*^9, 3.926507835905185*^9, 3.9265082052643323`*^9, 
   3.9265083640014153`*^9, {3.9265084625434256`*^9, 3.9265084809161186`*^9}, 
   3.926510827440632*^9, 3.926510889916275*^9, 3.9265111506245885`*^9, 
   3.926511187742586*^9, 3.9265113239756513`*^9, 3.9265113725692806`*^9, {
   3.926512045792496*^9, 3.9265120711153493`*^9}, 3.926512246849595*^9, 
   3.926512325884589*^9, 3.9265124688077636`*^9, {3.926512500799781*^9, 
   3.92651252100568*^9}, 3.9265130237901373`*^9, 3.9265130944279647`*^9, 
   3.9265131652607565`*^9, 3.926513223183564*^9, 3.9265132858072095`*^9, 
   3.9265133359694247`*^9, 3.926513414573474*^9, 3.926514005907502*^9, 
   3.926514403284069*^9, 3.926514446261652*^9, 3.9265144861010265`*^9, 
   3.926514572485228*^9, {3.9265898922915106`*^9, 3.926589897061067*^9}, 
   3.9265899278736863`*^9, 3.926590255297968*^9, 3.926590292235428*^9, 
   3.926592437257222*^9, 3.9265927792572117`*^9, 3.9265928715278144`*^9, 
   3.9265929354886503`*^9, 3.9265933764323053`*^9, 3.926593512521063*^9, {
   3.9265935852307844`*^9, 3.9265936060169764`*^9}, 3.9265937115467114`*^9, 
   3.92659376027773*^9, 3.9265942216428366`*^9, 3.9265943790136104`*^9, 
   3.926594420433*^9, {3.92659453087303*^9, 3.926594547854407*^9}, 
   3.9265946032241783`*^9, 3.9265948361715374`*^9, {3.926594870921565*^9, 
   3.9265948778432693`*^9}, 3.9265950004811263`*^9, {3.9265951949545755`*^9, 
   3.926595223449504*^9}, 3.9265956200993547`*^9, 3.926595693066337*^9, 
   3.9265957247463207`*^9, 3.9265957558055806`*^9, {3.926595791430488*^9, 
   3.926595815853423*^9}, {3.926596664548005*^9, 3.9265966898490915`*^9}, 
   3.9265967564278555`*^9, 3.9265978156292353`*^9, {3.926597869527507*^9, 
   3.926597890524105*^9}, 3.9265982023385367`*^9, {3.9265982515483823`*^9, 
   3.92659827483115*^9}, 3.9265983713275805`*^9, 3.9265991644955425`*^9, 
   3.9265992246919394`*^9, 3.926600651316723*^9, 3.926600687222706*^9, {
   3.9266009461696987`*^9, 3.926600965837453*^9}, 3.926601104563336*^9, {
   3.926601986030177*^9, 3.926602010309459*^9}, 3.9266024025941243`*^9, {
   3.926602438673465*^9, 3.926602458594005*^9}, 3.926602542207994*^9, {
   3.9266027163355484`*^9, 3.9266027610895953`*^9}, 3.926602807711078*^9, 
   3.9266034808298397`*^9, 3.9266035438934536`*^9, {3.9266036233302493`*^9, 
   3.926603651700077*^9}, 3.9266037477137575`*^9, 3.9266037939321394`*^9, 
   3.9266038482854323`*^9, {3.9266038921726894`*^9, 3.926603961096862*^9}, {
   3.926604570691636*^9, 3.9266045914259005`*^9}, {3.926604764598268*^9, 
   3.926604780731309*^9}, {3.9266050952737646`*^9, 3.9266051186402273`*^9}, {
   3.9266053408053813`*^9, 3.926605383297173*^9}, {3.9266055584189386`*^9, 
   3.9266055858326426`*^9}, {3.926605769633848*^9, 3.926605789078451*^9}, {
   3.9266058671333237`*^9, 3.9266058968060484`*^9}, 3.926606136612389*^9, 
   3.9266063711930785`*^9, 3.926606406620182*^9, {3.926606562294856*^9, 
   3.9266065798745093`*^9}, 3.9266078227188663`*^9, 3.9266078827420373`*^9, 
   3.926608298541871*^9, {3.9266083659886184`*^9, 3.9266083879245005`*^9}, {
   3.9266085209316316`*^9, 3.9266085711103106`*^9}, 3.926608633834733*^9, 
   3.9266087963572545`*^9, 3.9266088366100907`*^9, 3.92660912648716*^9, 
   3.9266091662657022`*^9, 3.926609205175126*^9, {3.9266092538848815`*^9, 
   3.926609272838417*^9}},
 CellLabel->"Out[6111]="],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 39, 1, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708677827234`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 39, 2, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708678398542`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 39, 3, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867855852*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 39, 4, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708678658524`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 39, 5, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867876005*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 39, 6, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867888008*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 39, 7, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867897009*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 39, 8, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708679060287`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 39, 9, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708679200344`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 39, 10, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867937038*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 39, 11, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708679510374`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 39, 12, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867964033*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 39, 13, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870867996535*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 39, 14, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926870868027907*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 39, 15, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708680553646`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 39, 16, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268708680881343`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 598, 513, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496441149*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 598, 514, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92687949644616*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 598, 515, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794964581637`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 598, 516, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496488475*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 598, 517, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496520047*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 598, 518, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794965511103`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 598, 519, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794965825033`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 598, 520, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496617985*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 598, 521, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794966458206`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 598, 522, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496677255*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 598, 523, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794967091365`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 598, 524, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794967400455`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 598, 525, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794967718534`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 598, 526, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794968010406`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 598, 527, 
   30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.926879496832575*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 598, 528, 30409937948626207043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9268794968641443`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 47, 2, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199237415*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 47, 3, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161992655134`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 4, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161992755322`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 5, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199283532*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 47, 6, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199291713*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 7, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161993008356`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 8, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161993078375`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 9, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92711619931584*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 10, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161993240027`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 11, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199333107*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 12, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199350232*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 13, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161993757534`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 14, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161994879675`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 15, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161995035844`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 16, 
   30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927116199533416*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 17, 30411545265711765201, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161995662413`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 47, 2, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153497158*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 47, 3, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221535349965`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 4, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221535479984`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 5, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221535600014`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 47, 6, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153571132*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 7, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153585151*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 8, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221536112213`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 9, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221536232233`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 10, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221536366963`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 11, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153676272*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 12, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153704366*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 13, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153733773*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 14, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153765457*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 15, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153796212*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 16, 
   30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927122153828998*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 17, 30411584788879746653, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271221538602896`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 47, 2, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293945919055*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 47, 3, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293945965062*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 4, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939459770727`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 5, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293945991074*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 47, 6, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946007077*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 7, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939460230837`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 8, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946149046*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 9, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946165052*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 10, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939461750674`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 11, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939462036753`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 12, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946235196*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 13, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9272939462714834`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 14, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946302933*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 15, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946332472*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 16, 
   30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946353145*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 17, 30412707440436210352, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927293946385004*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 47, 2, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9273549047355466`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 47, 3, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927354904798973*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 4, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9273549048069754`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 5, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927354904817978*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 47, 6, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927354904825979*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 7, 
   30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927354904838984*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 8, 
   30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927354904981554*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 9, 
   30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9273549049965568`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 10, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9273549050115585`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 11, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9273549050397253`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 12, 
   30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9273549050710917`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 13, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9273549051032486`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 14, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927354905137345*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 15, 
   30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927354905166001*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 16, 
   30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927354905198235*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 17, 30413110122207804161, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927354905227538*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 175, 2, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274562029626083`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 175, 3, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927456202981879*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 175, 4, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927456202993046*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 175, 5, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927456203003049*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 175, 6, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927456203013051*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 175, 7, 
   30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927456203022355*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 175, 8, 
   30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274562030320544`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 175, 9, 
   30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274562030410576`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 175, 10, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274562032192154`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 175, 11, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274562032327213`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 175, 12, 
   30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927456203265832*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 175, 13, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92745620329683*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 175, 14, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927456203327038*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 175, 15, 
   30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274562033592467`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 175, 16, 
   30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927456203389814*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 175, 17, 30413765474041793544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927456203419222*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 47, 2, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927458593798312*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 47, 3, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274585939515233`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 4, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927458593985298*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 47, 5, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274585940155497`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 47, 6, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274585940483584`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 7, 
   30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927458594085866*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 8, 
   30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274585941240177`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 47, 9, 
   30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274585941554575`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 10, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274585942112937`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 11, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274585942413216`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 12, 
   30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274585942727313`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 47, 13, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92745859430556*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 14, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927458594336419*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 15, 
   30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927458594366818*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 47, 16, 
   30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927458594395958*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 47, 17, 30413789474180578739, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9274585944254727`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 2, 1, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992217986546`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 2, 2, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992218006535`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 2, 3, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927699221810688*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 2, 4, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992218249526`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 2, 5, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992218287244`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 2, 6, 
   30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992218432093`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 2, 7, 
   30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992218456025`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 2, 8, 
   30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992218628798`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 2, 9, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992218635683`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 2, 10, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992218804417`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 2, 11, 
   30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92769922189325*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 2, 12, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992220115337`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 2, 13, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992220285783`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 2, 14, 
   30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992220460925`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 2, 15, 
   30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992220780334`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 2, 16, 30415366290338175321, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9276992221124563`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 577, 145, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927783172992816*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 577, 146, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277831729974737`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 577, 147, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927783173008483*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 577, 148, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927783173039157*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 577, 149, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927783173075926*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 577, 150, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927783173103386*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 577, 151, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277831731400642`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 577, 152, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92778317317377*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 577, 153, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277831732068367`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 577, 154, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277831732411227`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 577, 155, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927783173273591*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 577, 156, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277831733069606`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 577, 157, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927783173340221*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 577, 158, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927783173374524*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 577, 159, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277831734068775`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 577, 160, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92778317344022*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 666, 174, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879032846084`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 666, 175, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879032915983`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 666, 176, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879033187475`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 666, 177, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879033384695`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 666, 178, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879033692656`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 666, 179, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927787903401359*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 666, 180, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879034311056`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 666, 181, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92778790346441*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 666, 182, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92778790351503*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 666, 183, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92778790355707*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 666, 184, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879035893598`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 666, 185, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879036201253`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 666, 186, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879036514645`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 666, 187, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.927787903680586*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 666, 188, 
   30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879037104945`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 666, 189, 30415410566862133022, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9277879037423067`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 64, 2, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.928390845694217*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\heatmeter_images\\\\\\\\\
\\\\\\\\\\\\\\\"\\\"}]\\).\"", 2, 64, 3, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908457634325`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 64, 4, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908457874355`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "StringJoin", "string", 
   "\"String expected at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"rawDataRoot\\\", \\\"<>\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\2024-03-29\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\heatmeter_images\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\"}]\\).\"",
    2, 64, 5, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908458114376`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"StringJoin\\\", \
\\\"::\\\", \\\"string\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 64, 6, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.928390845835459*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 64, 7, 
   30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908458628316`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 64, 8, 
   30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908458788404`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Symbol", "argx", 
   "\"\\!\\(\\*RowBox[{\\\"Symbol\\\"}]\\) called with \\!\\(\\*RowBox[{\\\"0\
\\\"}]\\) arguments; 1 argument is expected.\"", 2, 64, 9, 
   30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908459041185`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Symbol\\\", \\\"::\\\", \
\\\"argx\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 64, 10, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908459436393`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 64, 11, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.928390846103798*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 64, 12, 
   30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908461358085`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \\\"]\\\"}]\\) does not exist.\"",
    2, 64, 13, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908461550913`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"partw\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 64, 14, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908461965733`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 64, 15, 
   30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9283908462216363`*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"2\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) in \\!\\(\\*RowBox[{RowBox[{\\\"Symbol\\\", \
\\\"[\\\", \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\\\"-\\\", \
\\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\).\"", 2, 64, 16, 
   30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.928390846252152*^9},
 CellLabel->""],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Part\\\", \\\"::\\\", \
\\\"take\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 64, 17, 30419898590193766127, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.928390846279645*^9},
 CellLabel->""]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cycle", "=", "2"}], ";", 
  RowBox[{"timeSpan", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"15", ",", "24"}], "}"}], "100"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"day", "=", 
   RowBox[{
    RowBox[{"loadDayStamps", "[", 
     RowBox[{"[", "goodDays", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dayN", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"loadDayStamps", ",", "day"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"timeStamps", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringTake", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "10"}], ",", 
            RowBox[{"-", "7"}]}], "}"}]}], "]"}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"FileNames", "[", 
         RowBox[{"All", ",", 
          RowBox[{
          "rawDataRoot", "<>", "\"\<\\\\\>\"", "<>", "day", "<>", 
           "\"\<\\\\heatmeter_images\\\\\>\""}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"StringEndsQ", "[", 
          RowBox[{"#", ",", "\"\<.png\>\""}], "]"}], "&"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cycleImagesForTimeSpan", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
       "rawDataRoot", "<>", "\"\<\\\\\>\"", "<>", "day", "<>", 
        "\"\<\\\\heatmeter_images\\\\\>\"", "<>", 
        RowBox[{"ToStringWithDateCorrection", "[", 
         RowBox[{"#", ",", "4"}], "]"}], "<>", "\"\<_\>\"", "<>", 
        RowBox[{"ToString", "[", "cycle", "]"}], "<>", "\"\<.png\>\""}], 
       "]"}], "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{"Select", "[", 
      RowBox[{"timeStamps", ",", 
       RowBox[{
        RowBox[{"Between", "[", 
         RowBox[{"#", ",", "timeSpan"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", 
            RowBox[{"heatStockDataOriginal", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"heatStockDataOriginal", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}], 
            ",", 
            RowBox[{
             RowBox[{"Between", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Map", "[", 
                RowBox[{"HourAndMinuteToMinuteOfDay", ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ToStringWithDateCorrection", "[", 
                    RowBox[{"#", ",", "4"}], "]"}], "&"}], ",", "timeSpan"}], 
                  "]"}]}], "]"}]}], "]"}], "&"}]}], "]"}], ",", "Nothing"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", 
            RowBox[{"heatStockDataNet", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"heatStockDataNet", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}], 
            ",", 
            RowBox[{
             RowBox[{"Between", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"Map", "[", 
                RowBox[{"HourAndMinuteToMinuteOfDay", ",", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ToStringWithDateCorrection", "[", 
                    RowBox[{"#", ",", "4"}], "]"}], "&"}], ",", "timeSpan"}], 
                  "]"}]}], "]"}]}], "]"}], "&"}]}], "]"}], ",", "Nothing"}], 
         "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"MinuteOfDayToHourAndMinute", "[", "#", "]"}], ",", 
                RowBox[{"Pi", " ", "0.5"}]}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{"24", " ", "60"}], ",", " ", "10"}], "]"}]}], "]"}], ",",
          "Automatic"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"day", "<>", "\"\<, cycle \>\"", "<>", 
        RowBox[{"ToString", "[", "cycle", "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"timeStamps", ",", 
         RowBox[{
          RowBox[{"Between", "[", 
           RowBox[{"#", ",", "timeSpan"}], "]"}], "&"}]}], "]"}], ",", 
       "cycleImagesForTimeSpan"}], "}"}], "//", "Grid"}]}], 
   "\[IndentingNewLine]", "}"}], "//", "Column"}]}], "Input",
 CellChangeTimes->{{3.9264072364799986`*^9, 3.926407242347778*^9}, {
   3.9264114890920258`*^9, 3.926411514643262*^9}, {3.926411598249937*^9, 
   3.9264116330357466`*^9}, {3.9264118607799263`*^9, 3.926411864325836*^9}, {
   3.9264119510724287`*^9, 3.9264119603458567`*^9}, {3.9264121185204477`*^9, 
   3.926412143979905*^9}, {3.9264122536895223`*^9, 3.9264122629305477`*^9}, {
   3.926412430247726*^9, 3.926412444454441*^9}, {3.9264124935751667`*^9, 
   3.926412503986397*^9}, {3.926412831902872*^9, 3.926412858882677*^9}, {
   3.926413049455408*^9, 3.926413055794054*^9}, {3.9264131369562607`*^9, 
   3.9264131514140043`*^9}, {3.926413377894293*^9, 3.9264133836841326`*^9}, {
   3.9264135684369793`*^9, 3.926413588400985*^9}, {3.926413738095464*^9, 
   3.926413738431554*^9}, {3.9264138112320404`*^9, 3.926413822677439*^9}, {
   3.926413883178423*^9, 3.9264138942690415`*^9}, {3.9264139771290407`*^9, 
   3.9264140035005226`*^9}, {3.9264141136866302`*^9, 
   3.9264141145018735`*^9}, {3.9264142287295146`*^9, 3.926414250225365*^9}, {
   3.9264142961313615`*^9, 3.926414329857622*^9}, {3.9264143830373096`*^9, 
   3.926414383712015*^9}, {3.9264144499065847`*^9, 3.926414467132888*^9}, {
   3.926414498189108*^9, 3.926414534177368*^9}, {3.926414642651273*^9, 
   3.9264146520237527`*^9}, 3.9264148536191406`*^9, {3.926414906706523*^9, 
   3.926414908528827*^9}, {3.926415014458276*^9, 3.926415025251234*^9}, {
   3.926417254095313*^9, 3.9264172682435417`*^9}, {3.9264177212978153`*^9, 
   3.9264177542025614`*^9}, {3.9264179712613697`*^9, 
   3.9264179717704678`*^9}, {3.9264181145483203`*^9, 
   3.9264181151057806`*^9}, {3.9264182561715975`*^9, 
   3.9264182857882495`*^9}, {3.9264184938369036`*^9, 3.926418542176159*^9}, {
   3.9264188238238153`*^9, 3.926418841784096*^9}, {3.9264188812111683`*^9, 
   3.9264189714602594`*^9}, {3.926419431463194*^9, 3.926419441329981*^9}, {
   3.92641957579563*^9, 3.926419576356077*^9}, {3.9264196363595095`*^9, 
   3.9264196366391926`*^9}, {3.9264197013025217`*^9, 3.926419707068026*^9}, {
   3.9264197383271437`*^9, 3.9264197583023252`*^9}, {3.9264199396754093`*^9, 
   3.9264199500675783`*^9}, {3.9264199806164474`*^9, 3.926420022561701*^9}, {
   3.9264201816706567`*^9, 3.926420257516055*^9}, {3.9264204874521255`*^9, 
   3.9264205351928663`*^9}, {3.9264205948905783`*^9, 3.926420636574979*^9}, {
   3.926421438192114*^9, 3.926421460025833*^9}, {3.926421507813038*^9, 
   3.9264215178069825`*^9}, {3.9264215482570553`*^9, 
   3.9264215624520054`*^9}, {3.9264218036962004`*^9, 
   3.9264218186654224`*^9}, {3.9264218587204585`*^9, 
   3.9264218851028605`*^9}, {3.926422055330397*^9, 3.926422115489357*^9}, {
   3.9264221536323624`*^9, 3.9264221972178006`*^9}, {3.9264223051671877`*^9, 
   3.926422306695257*^9}, {3.9264223418914566`*^9, 3.926422376489458*^9}, {
   3.926422605680974*^9, 3.926422616663299*^9}, {3.926422661380201*^9, 
   3.926422705641957*^9}, {3.9264228001770563`*^9, 3.9264228494886227`*^9}, {
   3.9264229360077972`*^9, 3.9264229380246124`*^9}, {3.926423025474284*^9, 
   3.926423031147933*^9}, {3.926423079333934*^9, 3.9264230829608173`*^9}, {
   3.926423128586128*^9, 3.926423135392316*^9}, {3.926423176885584*^9, 
   3.926423176917591*^9}, {3.926423328187042*^9, 3.926423335818595*^9}, {
   3.92642339121998*^9, 3.9264233915692034`*^9}, {3.9264234818333454`*^9, 
   3.9264234831846485`*^9}, {3.9264235302181053`*^9, 3.926423568845829*^9}, {
   3.9264236463228426`*^9, 3.926423648099578*^9}, {3.9264236880452166`*^9, 
   3.9264236948031836`*^9}, {3.926423830770077*^9, 3.926423871721944*^9}, {
   3.926423912454385*^9, 3.9264239126682615`*^9}, {3.9264239693493423`*^9, 
   3.9264239709767036`*^9}, {3.92642405410944*^9, 3.9264240559357867`*^9}, {
   3.926424327829755*^9, 3.9264243300686536`*^9}, {3.926424376885307*^9, 
   3.92642438030267*^9}, {3.926424504297844*^9, 3.926424538754779*^9}, {
   3.9264246215089974`*^9, 3.9264246229773407`*^9}, {3.9264246855532317`*^9, 
   3.9264247162751827`*^9}, {3.926424835995689*^9, 3.926424847112885*^9}, {
   3.926424880931615*^9, 3.926424891706197*^9}, {3.9264249965622187`*^9, 
   3.9264250061235447`*^9}, {3.926425053053873*^9, 3.9264250600891867`*^9}, {
   3.9264251831740127`*^9, 3.9264251936682014`*^9}, {3.9264252423300695`*^9, 
   3.926425280239729*^9}, {3.926425339626813*^9, 3.926425355757595*^9}, {
   3.9264254571946507`*^9, 3.9264254685984945`*^9}, {3.9264784970181427`*^9, 
   3.926478507415406*^9}, {3.926478672852271*^9, 3.92647871667943*^9}, {
   3.926478822247656*^9, 3.9264788545432816`*^9}, {3.92647902932172*^9, 
   3.926479037669276*^9}, {3.9264791959495673`*^9, 3.926479199072749*^9}, {
   3.9264793291374736`*^9, 3.926479333103403*^9}, {3.9264794162812004`*^9, 
   3.9264794190587134`*^9}, {3.9264794821629906`*^9, 3.926479489245285*^9}, {
   3.9264796680195327`*^9, 3.9264796812129097`*^9}, {3.9264797914531283`*^9, 
   3.926479792487379*^9}, {3.9264798543561974`*^9, 3.9264798544484844`*^9}, {
   3.926479894254093*^9, 3.926479895423129*^9}, {3.926479950374217*^9, 
   3.9264800036297674`*^9}, {3.9264801071862745`*^9, 3.926480112713807*^9}, {
   3.9264802884955444`*^9, 3.9264802961389704`*^9}, {3.9264804139372287`*^9, 
   3.9264804491785545`*^9}, {3.9264804950360823`*^9, 
   3.9264805039932747`*^9}, {3.9264810027215977`*^9, 3.9264810116418395`*^9}, 
   3.926481122073368*^9, {3.926481650194172*^9, 3.9264817238407817`*^9}, {
   3.9264818628127055`*^9, 3.9264818674781837`*^9}, {3.9264819495277805`*^9, 
   3.9264819525770783`*^9}, {3.926482149372571*^9, 3.9264821816622477`*^9}, {
   3.9264822688326826`*^9, 3.9264822747686453`*^9}, {3.926482546485586*^9, 
   3.9264825483460574`*^9}, {3.926482719183716*^9, 3.926482722489172*^9}, {
   3.9264829239047036`*^9, 3.9264829239962983`*^9}, {3.9264857111377573`*^9, 
   3.9264857184828835`*^9}, {3.92648596422296*^9, 3.9264859694970655`*^9}, {
   3.9264860485851912`*^9, 3.9264860508896303`*^9}, {3.926486082065776*^9, 
   3.9264860844015484`*^9}, {3.9264861957399063`*^9, 3.92648620971955*^9}, {
   3.926486281119507*^9, 3.9264862811988688`*^9}, {3.926486352446354*^9, 
   3.9264863543144636`*^9}, {3.926486698351147*^9, 3.926486702461261*^9}, {
   3.9264867594948354`*^9, 3.926486800742699*^9}, {3.926486894578614*^9, 
   3.926486895674225*^9}, {3.9264869771917305`*^9, 3.926486978300516*^9}, {
   3.9264871313755193`*^9, 3.926487146586138*^9}, {3.926488525885645*^9, 
   3.9264885610941095`*^9}, {3.926488713931363*^9, 3.926488724542784*^9}, {
   3.9264887653668523`*^9, 3.926488769812092*^9}, {3.9264888142465334`*^9, 
   3.9264888182451315`*^9}, {3.926488859469617*^9, 3.9264888853249416`*^9}, {
   3.926488957071605*^9, 3.9264889586408153`*^9}, {3.9264890686910925`*^9, 
   3.9264890969520435`*^9}, {3.9264891724341583`*^9, 
   3.9264891745847025`*^9}, {3.9264898571119533`*^9, 3.926489858793618*^9}, {
   3.926489890241003*^9, 3.926489900627371*^9}, {3.9264899351250496`*^9, 
   3.926489939165303*^9}, {3.9264901276881123`*^9, 3.9264901503600154`*^9}, {
   3.9264902298953223`*^9, 3.926490295307829*^9}, {3.9264903705703382`*^9, 
   3.9264903844923267`*^9}, {3.9264904529049377`*^9, 3.926490455475918*^9}, {
   3.9264905068930306`*^9, 3.926490514252988*^9}, {3.9264905881420846`*^9, 
   3.926490591607292*^9}, {3.926490676695923*^9, 3.9264906779913397`*^9}, {
   3.9264907184378743`*^9, 3.926490758255999*^9}, {3.926490864154056*^9, 
   3.9264908642290397`*^9}, {3.926490902842174*^9, 3.9264909122090797`*^9}, {
   3.9264910204747443`*^9, 3.9264910250184097`*^9}, {3.926491070273568*^9, 
   3.9264911167217484`*^9}, {3.926491867781844*^9, 3.9264918770179095`*^9}, {
   3.926492051025815*^9, 3.9264920744447703`*^9}, {3.926492148657339*^9, 
   3.9264921488847775`*^9}, {3.926492229664424*^9, 3.926492229869747*^9}, {
   3.9264923031958036`*^9, 3.9264923049722614`*^9}, {3.9264923574078383`*^9, 
   3.9264923947331514`*^9}, {3.9264924740929604`*^9, 
   3.9264925194891233`*^9}, {3.9264926080425234`*^9, 3.926492612734022*^9}, {
   3.9264930224187946`*^9, 3.9264930241523848`*^9}, {3.926493058602172*^9, 
   3.9264930622832384`*^9}, {3.9264933901331844`*^9, 3.926493460498402*^9}, {
   3.926494798373819*^9, 3.9264948151181197`*^9}, {3.926494852633193*^9, 
   3.926494853674925*^9}, {3.926494889694126*^9, 3.926494894284453*^9}, {
   3.9264950902318773`*^9, 3.926495092022811*^9}, {3.9264951253589363`*^9, 
   3.926495137263161*^9}, {3.926495204177394*^9, 3.92649523880643*^9}, {
   3.926495467532956*^9, 3.926495476923521*^9}, 3.9264955256716957`*^9, {
   3.9264955733535614`*^9, 3.9264955734205494`*^9}, {3.9264956464874945`*^9, 
   3.9264956496881485`*^9}, {3.926495892760736*^9, 3.926495914322797*^9}, {
   3.926496065870363*^9, 3.9264960742634335`*^9}, 3.9264961587036586`*^9, {
   3.9264962352811522`*^9, 3.9264962360540676`*^9}, {3.926496297267731*^9, 
   3.9264962997197466`*^9}, {3.926496480960392*^9, 3.9264964835674267`*^9}, {
   3.926496523001401*^9, 3.9264965260016727`*^9}, {3.9264965903892813`*^9, 
   3.926496594501753*^9}, {3.9264967243684845`*^9, 3.926496729440487*^9}, {
   3.926496780630255*^9, 3.9264967812521796`*^9}, {3.926497023944377*^9, 
   3.9264970534446063`*^9}, {3.9264975754019575`*^9, 3.926497583395594*^9}, {
   3.9264976657860093`*^9, 3.9264976679293146`*^9}, {3.926497702378953*^9, 
   3.92649775756929*^9}, 3.9264978165744534`*^9, 3.9264978541360984`*^9, {
   3.9264979015726647`*^9, 3.926497932429932*^9}, {3.9265069926591215`*^9, 
   3.9265070050228224`*^9}, {3.926507167363351*^9, 3.926507179551921*^9}, {
   3.926507385962431*^9, 3.9265074307249546`*^9}, {3.926507867769854*^9, 
   3.9265078809181614`*^9}, {3.9265079986008*^9, 3.92650800572902*^9}, {
   3.92650805321025*^9, 3.9265080543214054`*^9}, {3.9265080877418127`*^9, 
   3.9265080990081177`*^9}, {3.9265081694483824`*^9, 3.926508170951696*^9}, {
   3.9265083751449313`*^9, 3.9265083756572437`*^9}, {3.9265084091967773`*^9, 
   3.926508409533721*^9}, {3.926508565768799*^9, 3.9265085719371667`*^9}, {
   3.926510899287006*^9, 3.926510913676368*^9}, {3.9265112222033043`*^9, 
   3.9265112282677937`*^9}, {3.9265121434791365`*^9, 3.926512160881693*^9}, {
   3.9265122235461583`*^9, 3.9265122236051717`*^9}, {3.9265124119190893`*^9, 
   3.926512411994759*^9}, {3.926512613952675*^9, 3.926512622723754*^9}, {
   3.9265127065112906`*^9, 3.9265127065863576`*^9}, {3.9265128366246953`*^9, 
   3.9265128379339867`*^9}, {3.926512890625114*^9, 3.9265129038137*^9}, {
   3.9265131127817144`*^9, 3.9265131369073095`*^9}, {3.9265134962180223`*^9, 
   3.926513541943781*^9}, {3.9265135776964417`*^9, 3.9265135975197325`*^9}, {
   3.926513930761111*^9, 3.9265139377372274`*^9}, {3.9265139715083942`*^9, 
   3.9265139753654876`*^9}, {3.9265142545512266`*^9, 
   3.9265142639830675`*^9}, {3.9265145980290422`*^9, 
   3.9265146065303135`*^9}, {3.9265896924303684`*^9, 3.926589750122533*^9}, {
   3.9265898238042765`*^9, 3.926589825848877*^9}, {3.9265899770522914`*^9, 
   3.9265899879497695`*^9}, {3.926590024363508*^9, 3.92659002644074*^9}, {
   3.9265901000756283`*^9, 3.9265901001375933`*^9}, {3.926590179132101*^9, 
   3.926590219507428*^9}, {3.9265905532789373`*^9, 3.926590559654626*^9}, {
   3.9265905899481916`*^9, 3.9265906000121183`*^9}, {3.9265924923874063`*^9, 
   3.926592492422541*^9}, {3.9265925424458294`*^9, 3.926592557691854*^9}, {
   3.926592642876705*^9, 3.926592645387694*^9}, {3.9265927223014417`*^9, 
   3.9265927620963826`*^9}, {3.9265929082696505`*^9, 3.92659291393556*^9}, {
   3.9265932275926657`*^9, 3.9265933141377115`*^9}, {3.92659341248956*^9, 
   3.926593415539278*^9}, {3.926593474122782*^9, 3.9265934795384717`*^9}, {
   3.9265935454986143`*^9, 3.926593546279192*^9}, {3.926593626522566*^9, 
   3.926593660418043*^9}, {3.9265937793541183`*^9, 3.9265937862497797`*^9}, {
   3.9265938594350834`*^9, 3.926593874328164*^9}, {3.926593958170705*^9, 
   3.9265939604244847`*^9}, {3.9265940377059884`*^9, 
   3.9265940404244823`*^9}, {3.9265941194347925`*^9, 
   3.9265941493847494`*^9}, {3.926594284201833*^9, 3.9265942911293507`*^9}, {
   3.9265943365393753`*^9, 3.926594338727977*^9}, {3.926594482731041*^9, 
   3.9265945173371234`*^9}, {3.9265945596265087`*^9, 3.926594584201765*^9}, 
   3.9265946165702405`*^9, {3.9265946532428236`*^9, 3.9265946532968245`*^9}, {
   3.926594684330827*^9, 3.9265946854179745`*^9}, {3.9265947628586264`*^9, 
   3.926594764408784*^9}, {3.926594814907276*^9, 3.9265948155935993`*^9}, {
   3.9265949379630485`*^9, 3.926594966634853*^9}, {3.9265950430828533`*^9, 
   3.9265950620265503`*^9}, {3.926595373964401*^9, 3.9265954187634335`*^9}, {
   3.926595579149962*^9, 3.9265955987141*^9}, {3.9265956596929893`*^9, 
   3.926595662776512*^9}, {3.926595847258791*^9, 3.9265958639046745`*^9}, {
   3.9265960717239494`*^9, 3.926596077513362*^9}, {3.9265962036911464`*^9, 
   3.9265962619461155`*^9}, {3.9265963731319532`*^9, 
   3.9265964095964193`*^9}, {3.9265964789393873`*^9, 
   3.9265964790341434`*^9}, {3.9265967156632195`*^9, 3.926596715720251*^9}, {
   3.926596813226695*^9, 3.92659681868176*^9}, {3.9265969328961296`*^9, 
   3.926596945801445*^9}, {3.926597043644322*^9, 3.926597046027336*^9}, {
   3.9265971431031837`*^9, 3.926597164753826*^9}, {3.926597317132826*^9, 
   3.926597319018307*^9}, {3.9265973982582836`*^9, 3.9265974010825953`*^9}, {
   3.9265974842044497`*^9, 3.9265974969864883`*^9}, 3.926597575179427*^9, {
   3.9265977398538456`*^9, 3.926597741018979*^9}, {3.9265977796922445`*^9, 
   3.926597798762704*^9}, {3.9265979240120964`*^9, 3.9265979455370007`*^9}, {
   3.9265979816453075`*^9, 3.9265979884427967`*^9}, {3.9265980483960505`*^9, 
   3.9265980529070387`*^9}, {3.9265982273400803`*^9, 3.926598230590615*^9}, {
   3.9265983218036118`*^9, 3.9265983474672613`*^9}, {3.9265991042689056`*^9, 
   3.9265991359795074`*^9}, {3.926599186285351*^9, 3.926599202428766*^9}, {
   3.926599242525693*^9, 3.926599245643672*^9}, {3.926600435550279*^9, 
   3.926600445292051*^9}, {3.9266007003799515`*^9, 3.926600702029422*^9}, {
   3.926600745469157*^9, 3.9266007599810143`*^9}, {3.9266007921424236`*^9, 
   3.9266007929403143`*^9}, {3.926600877198592*^9, 3.9266008794272447`*^9}, {
   3.926600980112239*^9, 3.9266010635016003`*^9}, {3.9266017178065653`*^9, 
   3.92660179141125*^9}, {3.9266020550881066`*^9, 3.9266020697421265`*^9}, {
   3.9266021187818313`*^9, 3.926602118835182*^9}, {3.926602248238006*^9, 
   3.9266022618215427`*^9}, {3.9266023111038914`*^9, 
   3.9266023127330513`*^9}, {3.9266023470861797`*^9, 3.92660235432199*^9}, {
   3.926602468638667*^9, 3.926602493117902*^9}, {3.9266027708145213`*^9, 
   3.9266027875893574`*^9}, 3.9266028192461834`*^9, 3.9266029203355618`*^9, {
   3.9266030400777035`*^9, 3.9266030416458125`*^9}, {3.9266031650555253`*^9, 
   3.9266031663174753`*^9}, {3.92660322276658*^9, 3.9266032247492404`*^9}, {
   3.926603263821638*^9, 3.9266033049322777`*^9}, {3.9266034402230015`*^9, 
   3.9266034418691053`*^9}, {3.9266035602707148`*^9, 
   3.9266035626539974`*^9}, {3.92660366303956*^9, 3.9266037087499313`*^9}, {
   3.92660386396581*^9, 3.9266038640198107`*^9}, {3.9266039990087767`*^9, 
   3.926604003086095*^9}, {3.9266041714402013`*^9, 3.926604196176862*^9}, {
   3.9266042918228903`*^9, 3.9266043121106863`*^9}, {3.9266043959202056`*^9, 
   3.926604433138178*^9}, {3.92660460599979*^9, 3.926604611102824*^9}, {
   3.92660464916741*^9, 3.9266046492634306`*^9}, {3.9266047087045946`*^9, 
   3.9266047464296494`*^9}, {3.926604802144213*^9, 3.9266048072670913`*^9}, {
   3.926604838047488*^9, 3.926604838191593*^9}, {3.9266049382082796`*^9, 
   3.926604949727723*^9}, {3.9266051401601343`*^9, 3.9266051535357046`*^9}, {
   3.92660519257547*^9, 3.926605197118415*^9}, {3.926605315443164*^9, 
   3.926605319324845*^9}, {3.9266054079206543`*^9, 3.926605408942788*^9}, {
   3.9266056781752906`*^9, 3.9266056784305906`*^9}, 3.926605723599819*^9, {
   3.9266058309583*^9, 3.9266058420480156`*^9}, {3.9266059383041945`*^9, 
   3.926605946287346*^9}, {3.926606171568403*^9, 3.9266062125429926`*^9}, {
   3.9266064305453825`*^9, 3.9266064359682055`*^9}, 3.9266066032316823`*^9, 
   3.92660696092901*^9, {3.9266072745931845`*^9, 3.926607274736044*^9}, {
   3.92660739031996*^9, 3.92660739678619*^9}, {3.9266076502413177`*^9, 
   3.926607650287957*^9}, {3.9266078979691916`*^9, 3.926607930897621*^9}, {
   3.9266080485621624`*^9, 3.926608057952242*^9}, {3.926608309041431*^9, 
   3.926608312176104*^9}, {3.926608401056396*^9, 3.926608426161214*^9}, {
   3.9266085818899307`*^9, 3.92660858673546*^9}, {3.9266086826265497`*^9, 
   3.9266086859039755`*^9}, {3.9266088071158743`*^9, 
   3.9266088087376237`*^9}, {3.926608847568605*^9, 3.926608858432624*^9}, {
   3.9266088904656305`*^9, 3.926608905984905*^9}, {3.9266091324822044`*^9, 
   3.926609132512784*^9}, {3.9266091745619087`*^9, 3.926609178385852*^9}, {
   3.9266092944016695`*^9, 3.926609331473093*^9}},
 CellLabel->"In[6130]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxdzj1IQmEYxfFLODg0NDQ4NBg0ODg4NDg03MGhoUHCoKFBosDAyMFBSCgo
QkLLzERCQkIi7AMJCYkGhwaHhoaGhgaHBocGB4eGhtR7JO7/gZfDD87L80yv
bi2ujxmGEe2/QQ7HnTaXBrNxZw49n7ZyU46lzZtqf2JyUf243FQ/IXfU35Yn
MlZ/R/ZnrNyTwxmrfyCn1D+Ua+ofyR9yVjaOrMzJHjkvB+WCnJCLclk+l1ty
Se7KF7LrWP9kU76UI3JFzspXckO+lttyVXZkrbwd7ZPvZa9cG+2XH+SQXB/d
Iz/KSbkxuk9+kitwA36F23APdp7YPQX74AC8DEfhXTgPX8PP8Bv8Bf/A4zm7
3fAsPA+vwDF4Hy7Ct3ATfoc78C88cWr3DOyHF+AwHIdTcAmuwS/wB/wNG3m7
J2EPPAcH4TU4AafhMlyHW/An3IUdZ3a7YC9swiE4AifhLFyBG/Ar3IZ7sLNg
9xTsgwPwMhz99x/o00xJ
         "]]}, {{}, {}}},
      AspectRatio->0.25,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{888.8541666666666, 3762.425925925926},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"2024-03-29, cycle 2\"", TraditionalForm],
      PlotRange->{{888.8541666666666, 1435.}, {3762.425925925926, 3805.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{{{0, 
          FormBox[
           RotationBox["\"00:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {10, 
          FormBox[
           RotationBox["\"00:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {20, 
          FormBox[
           RotationBox["\"00:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {30, 
          FormBox[
           RotationBox["\"00:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {40, 
          FormBox[
           RotationBox["\"00:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {50, 
          FormBox[
           RotationBox["\"00:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {60, 
          FormBox[
           RotationBox["\"01:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {70, 
          FormBox[
           RotationBox["\"01:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {80, 
          FormBox[
           RotationBox["\"01:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {90, 
          FormBox[
           RotationBox["\"01:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {100, 
          FormBox[
           RotationBox["\"01:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {110, 
          FormBox[
           RotationBox["\"01:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {120, 
          FormBox[
           RotationBox["\"02:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {130, 
          FormBox[
           RotationBox["\"02:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {140, 
          FormBox[
           RotationBox["\"02:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {150, 
          FormBox[
           RotationBox["\"02:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {160, 
          FormBox[
           RotationBox["\"02:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {170, 
          FormBox[
           RotationBox["\"02:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {180, 
          FormBox[
           RotationBox["\"03:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {190, 
          FormBox[
           RotationBox["\"03:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {200, 
          FormBox[
           RotationBox["\"03:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {210, 
          FormBox[
           RotationBox["\"03:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {220, 
          FormBox[
           RotationBox["\"03:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {230, 
          FormBox[
           RotationBox["\"03:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {240, 
          FormBox[
           RotationBox["\"04:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {250, 
          FormBox[
           RotationBox["\"04:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {260, 
          FormBox[
           RotationBox["\"04:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {270, 
          FormBox[
           RotationBox["\"04:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {280, 
          FormBox[
           RotationBox["\"04:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {290, 
          FormBox[
           RotationBox["\"04:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {300, 
          FormBox[
           RotationBox["\"05:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {310, 
          FormBox[
           RotationBox["\"05:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {320, 
          FormBox[
           RotationBox["\"05:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {330, 
          FormBox[
           RotationBox["\"05:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {340, 
          FormBox[
           RotationBox["\"05:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {350, 
          FormBox[
           RotationBox["\"05:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {360, 
          FormBox[
           RotationBox["\"06:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {370, 
          FormBox[
           RotationBox["\"06:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {380, 
          FormBox[
           RotationBox["\"06:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {390, 
          FormBox[
           RotationBox["\"06:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {400, 
          FormBox[
           RotationBox["\"06:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {410, 
          FormBox[
           RotationBox["\"06:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {420, 
          FormBox[
           RotationBox["\"07:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {430, 
          FormBox[
           RotationBox["\"07:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {440, 
          FormBox[
           RotationBox["\"07:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {450, 
          FormBox[
           RotationBox["\"07:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {460, 
          FormBox[
           RotationBox["\"07:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {470, 
          FormBox[
           RotationBox["\"07:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {480, 
          FormBox[
           RotationBox["\"08:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {490, 
          FormBox[
           RotationBox["\"08:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {500, 
          FormBox[
           RotationBox["\"08:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {510, 
          FormBox[
           RotationBox["\"08:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {520, 
          FormBox[
           RotationBox["\"08:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {530, 
          FormBox[
           RotationBox["\"08:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {540, 
          FormBox[
           RotationBox["\"09:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {550, 
          FormBox[
           RotationBox["\"09:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {560, 
          FormBox[
           RotationBox["\"09:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {570, 
          FormBox[
           RotationBox["\"09:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {580, 
          FormBox[
           RotationBox["\"09:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {590, 
          FormBox[
           RotationBox["\"09:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {600, 
          FormBox[
           RotationBox["\"10:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {610, 
          FormBox[
           RotationBox["\"10:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {620, 
          FormBox[
           RotationBox["\"10:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {630, 
          FormBox[
           RotationBox["\"10:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {640, 
          FormBox[
           RotationBox["\"10:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {650, 
          FormBox[
           RotationBox["\"10:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {660, 
          FormBox[
           RotationBox["\"11:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {670, 
          FormBox[
           RotationBox["\"11:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {680, 
          FormBox[
           RotationBox["\"11:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {690, 
          FormBox[
           RotationBox["\"11:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {700, 
          FormBox[
           RotationBox["\"11:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {710, 
          FormBox[
           RotationBox["\"11:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {720, 
          FormBox[
           RotationBox["\"12:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {730, 
          FormBox[
           RotationBox["\"12:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {740, 
          FormBox[
           RotationBox["\"12:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {750, 
          FormBox[
           RotationBox["\"12:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {760, 
          FormBox[
           RotationBox["\"12:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {770, 
          FormBox[
           RotationBox["\"12:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {780, 
          FormBox[
           RotationBox["\"13:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {790, 
          FormBox[
           RotationBox["\"13:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {800, 
          FormBox[
           RotationBox["\"13:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {810, 
          FormBox[
           RotationBox["\"13:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {820, 
          FormBox[
           RotationBox["\"13:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {830, 
          FormBox[
           RotationBox["\"13:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {840, 
          FormBox[
           RotationBox["\"14:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {850, 
          FormBox[
           RotationBox["\"14:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {860, 
          FormBox[
           RotationBox["\"14:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {870, 
          FormBox[
           RotationBox["\"14:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {880, 
          FormBox[
           RotationBox["\"14:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {890, 
          FormBox[
           RotationBox["\"14:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {900, 
          FormBox[
           RotationBox["\"15:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {910, 
          FormBox[
           RotationBox["\"15:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {920, 
          FormBox[
           RotationBox["\"15:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {930, 
          FormBox[
           RotationBox["\"15:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {940, 
          FormBox[
           RotationBox["\"15:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {950, 
          FormBox[
           RotationBox["\"15:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {960, 
          FormBox[
           RotationBox["\"16:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {970, 
          FormBox[
           RotationBox["\"16:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {980, 
          FormBox[
           RotationBox["\"16:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {990, 
          FormBox[
           RotationBox["\"16:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1000, 
          FormBox[
           RotationBox["\"16:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1010, 
          FormBox[
           RotationBox["\"16:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1020, 
          FormBox[
           RotationBox["\"17:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1030, 
          FormBox[
           RotationBox["\"17:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1040, 
          FormBox[
           RotationBox["\"17:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1050, 
          FormBox[
           RotationBox["\"17:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1060, 
          FormBox[
           RotationBox["\"17:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1070, 
          FormBox[
           RotationBox["\"17:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1080, 
          FormBox[
           RotationBox["\"18:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1090, 
          FormBox[
           RotationBox["\"18:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1100, 
          FormBox[
           RotationBox["\"18:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1110, 
          FormBox[
           RotationBox["\"18:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1120, 
          FormBox[
           RotationBox["\"18:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1130, 
          FormBox[
           RotationBox["\"18:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1140, 
          FormBox[
           RotationBox["\"19:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1150, 
          FormBox[
           RotationBox["\"19:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1160, 
          FormBox[
           RotationBox["\"19:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1170, 
          FormBox[
           RotationBox["\"19:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1180, 
          FormBox[
           RotationBox["\"19:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1190, 
          FormBox[
           RotationBox["\"19:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1200, 
          FormBox[
           RotationBox["\"20:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1210, 
          FormBox[
           RotationBox["\"20:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1220, 
          FormBox[
           RotationBox["\"20:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1230, 
          FormBox[
           RotationBox["\"20:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1240, 
          FormBox[
           RotationBox["\"20:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1250, 
          FormBox[
           RotationBox["\"20:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1260, 
          FormBox[
           RotationBox["\"21:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1270, 
          FormBox[
           RotationBox["\"21:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1280, 
          FormBox[
           RotationBox["\"21:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1290, 
          FormBox[
           RotationBox["\"21:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1300, 
          FormBox[
           RotationBox["\"21:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1310, 
          FormBox[
           RotationBox["\"21:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1320, 
          FormBox[
           RotationBox["\"22:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1330, 
          FormBox[
           RotationBox["\"22:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1340, 
          FormBox[
           RotationBox["\"22:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1350, 
          FormBox[
           RotationBox["\"22:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1360, 
          FormBox[
           RotationBox["\"22:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1370, 
          FormBox[
           RotationBox["\"22:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1380, 
          FormBox[
           RotationBox["\"23:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1390, 
          FormBox[
           RotationBox["\"23:10\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1400, 
          FormBox[
           RotationBox["\"23:20\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1410, 
          FormBox[
           RotationBox["\"23:30\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1420, 
          FormBox[
           RotationBox["\"23:40\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1430, 
          FormBox[
           RotationBox["\"23:50\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1440, 
          FormBox[
           RotationBox["\"24:00\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, Automatic}]},
    {
     TagBox[GridBox[{
        {"1500", "1510", "1520", "1530", "1540", "1550", "1600", "1610", 
         "1620", "1630", "1640", "1650", "1700", "1710", "1720", "1730", 
         "1740", "1750", "1800", "1810", "1820", "1830", "1840", "1850", 
         "1900", "1910", "1920", "1930", "1940", "1950", "2000", "2010", 
         "2020", "2030", "2040", "2050", "2100", "2110", "2120", "2130", 
         "2140", "2150", "2200", "2210", "2220", "2230", "2240", "2250", 
         "2300", "2310", "2320", "2330", "2340", "2350"},
        {
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
cGf/zPC9xV0b44YzgAo8Wf4/AQId4g==
            "], {{0, 19.}, {36., 0}}, {0, 
            255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVAlb09oWbZlERWSGwkVAEFC8AjIIosjF2Xv5lElFppbSkSZtkraZmnlq
hrbpXCarXt97f/NF862zvpOTnbPPXlnZQ0fhDW+NzWZDGi3acKF/wbAL32yx
brZBJOADPcdvwajH54EXjmqtxXZrjFjj17zH8edvTLR1DF270fHHH7191tU7
4OgZ7OoY6Gwf7O0ZHbx1v69v7Nate93dw803+trbBh09o22tQw31nRY3XXc0
NnQ0NrQ21N+w2xpstpp6W12tva6upr6urqG2tt5mq/sFuzXpsdm77LbmGtt1
m72h5vcje80Vu/3qlSut1kpt3dWa2sa6+qv2+sbaK9dstQ31jTesgKabXTda
ujvbHN0d1tkGO9odnR29Ft/qvz02OjE1NTU5Oflwdmb+0eLT5ZW5xcfTcwtb
O4DrKB4M4VGEJEg2ipE4wUSjCRimMUwkSSlB8TQj4hRN8wIvK2JSZwRZUo2k
bsp6RleSqpLUNMPQUulMQU8XU7mKnMobqYympyxWU6aWzmaLlcsf/2XECi9V
jPR5pfLNzBSKxcts4VIzznXjmyidxVF9Y9Ozvunc2jn8uOt6v7nn9kVIJsnL
2e2d493DoMt54HK5fL7AyQkShnEjfRaG6A+bR192nU6X98v+8YfNL1ufDvyh
WK5UjVMZSsh7ArAvBIcAGIAIBOVpLifK5yx/SiSy+07E40f3nIHdQ38QxBOs
TnEGK+R29gNhhAmHoRAAQTAqq6Yo5wzzwgr2g7QV7/KAh94IjAuskg2ESUbK
kmIRxuT5x6+abvbYbJa3Gpua++YX35B0Vk9Xtz8H+ofu1V9rrmloq7/aOXRn
yuWBtNSFlWtpee16c39DY6e9tqW1fXDro0fRTlXj8t3aQXvXmBXf2NTT3Xv3
/babU4rBCIvSaSSRwlkTow0AYfwhbP849M+Gs6P3HojItFjQzAtGNgiBR1Ah
CBL3p568/vuTlCyLSimpn1ngpRLBmjt7wMjYgiCXE4z5YHolgvDW/krqXEld
pvL/pgo/fSCbEIpekIvRGas6gsmLapWScvvH8Y7eKXeA45PfcDbHa0Vez0l6
meRSt8fnV15tSfopRqcZqWhBSX8X9a+7TsQxMCmoZRBih4YfhgBGMi54rSzq
56r5Q0pX3SEK5wpALBmjcrFExgKMq5Radp+w3f2PXD6GEk5xNm/VTskZUkiT
vHH3/tPVl5/5ZIXkc5RcppUKLpa41OX2Qbhn4CGj5IIRuqfvnvUdraIE7cyq
i1VOE1LpwIf9zmXEydN4ohTFDZSWca3wyZXo6n98HEhI2iVOF1Aqj3I6KWUZ
2Rwdn3v1ek/S/0X5QlwuocrXOF/hMhfvd0+6bz0WjLzTgzv650GYtuSVjTNR
qXBiWdK+fj6ECC4PxlUono+RRVGryGkzQivru/HeoeUTiBP0EkaX4lQ5xmUg
RotS8p+TTzY3TzilGmbNmFyJKVVMuSD04oYTGLj7IqGkdo9if9x+Yr1rZH5k
cv8xc/9LZX7KqW87TphVygilAoj6z/rxhy3nm7UPi6tvV17sT89t+EDa0ipC
5BH6AuGLAJPCRHNj+/jIjVHcGUIXMKkC05UoWyLVwnGYW3rhYbXCgZtt7Zgb
GFloc8wP3nm+vHoYBlOCcHl4FKPlX/rsuZGB0QV7favdXlvTcLO5ZWx5dR9E
ZYhQAbIIEGcAVQox6YR6CsVVlEhx8lmMLWBCOc6eEvJFlM8EorI7pHN68c1a
sMux0NM/0+xYbGydaumceba87/NxTnc8aZ6jnIYk9DCm+mHaC9NHXujJyu7k
7FYE0wMxCcDzUOIMpkuYfnEckRdXNt3BhKV8lMkjVAnlzgixGmXNpecf1zYR
WjFnF99Pza5Zzo/KX3GpuvraMzr2EgRlr58SjHNKMU9iHEhoqJBFOAOKccNj
qw8XP1oG88ckkCiE0CJI5AA6t+Omu/tnInGRkosIUwyTecsYuHAB4OrA+OK7
dYBVzfvTL+eX3luWgOQyqX1/txEYHHmKxNJuPy1nvlk/lA/hQFIP4eoJmQzD
wu3RvxZX9mEmB9GZEJYD0UIEzVtJt/fw1rYHECrgQgph8yBViFAmxuWCCO8Y
nNr8HOPV/OjEs6WnW1bDifAmoZ0+eb07cv95JJryhkRarTJqMRgX/VEeoizR
uBMgMXh7aebxxxhXBqhUAM2GiUoQMUNofm0DdvQvQKhkmSTC5MJMyWKcz3sg
pn9kdufQapXG8PjyyupOUqtCnMkYlxPz7+5MvfKGZBjPJ+QqLuUBVABjEsGm
45QSBojhkcXpR+sQlUekUz+W9aMliP0O4sWNz8TYxJsARGNyxnJmmLaQJbmy
F2An59982iOsnmbpv/TsC0GXWf07RBZmnu3MreztBaVIooQK55hY2PfGJmdf
j008ujM+PToy7eh9MHBnaf0AChDpE6oYJE99aAXizn2RzJ6bwvg0rpgxsQyS
aZjKRgkzEk/7w7z3RMXp7Mu3x119000td69cH29qezj84N2Gi94FJD+W4dM/
/w8fZjDj
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
NbQONbSMv5MsyHu2T/TU5S3tDvEI+/A/aEv5TA==
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
uLTrbmH34+q+5rZ53REHdsrlTZJi5n9xdojT
            "], {{0, 19.}, {36., 0}}, {0,
             255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVAlX2loQRtHqc68gCrggKi5F6oLaTbHWarVFLWpx94kiggKyhyWBkARC
EkjYKWrVLq/nvF/5bt85X+bc3EzuzP3mm+k12HXnlTwez1ULjO7E99bpPPFv
toCXbZvLbLIZz1ZsbqPJ6Hxh4INNAXj6wfNnLezoF4r6hCK5WNwnlfZ1SYcA
ujuHOyUD4nZ5e5usTdgJ0CXp6xTL21rFLXXCxhpBw5OWplpRa4Okuba5qaa5
oaaxprqOz6/mVfArKqt4/KrKiif8yhqACrDDqwbgAVQ+5VUIKnhNPF4Dr7L+
j+XVVVY2VFTUV1WBdS2fX19ZWVfNq2qoqa/l//VXTUNdTVNLo7CtpV0kkLS3
dkjapJIOqVgslXZ2S3u6+0eGRsZU4xNq9dTMpHpaM7+48G55Uv1ifGLm2Ogx
GL1mq9/hht0+BIYTgQAOw3FgURSso8ACYCgehiNkjKYSKRwjWS5P09k4lWaZ
bDqV59gcy+W4dCGVybO5Is1lOWBT2SSXZ9hcKl0q3Xy/e/iNUXdx5p7iHrjc
H6Sz30nqa4q7j5HFKJ62XPn3Dsy6rZONtV2d7mB359xk9oYxFsEz+kPr9o55
a+NoXbt3sGM6NTjhcIrN/Li8xnR6y/6Rae/gQrf1t3b9QLd16g+SpfLvEFZA
sILNjVusoXOL98oecfti4Wg6wdwEYObU5Do+tV1cQWfnrrMLFxSkXAEKp8ow
XljZOLU4iWs7bLuGvVA8iLBs5hfFPO4dew4NkP7QvHt8abbD3hAFIczmrjmZ
/RHCb07N4YGR2boWWUWVgMdvrWvsfKNZi2CZOF20OuCu3tEndaKqOhH4qlIv
XFyGcPrGfI2JusdrmvtrGlobnraPT825ISydfwxFOc3CZqOgj1/XWtsk6e4f
u3IiCfZu99gaJQtBrHxsDE6++Li1ZzFfBc8s0OrGQe/gpN2DxlMlOnMbjnH+
COUKEccXjm7FuG7PRKUfV9cN6tdafyQTpTmAOFdEyUzm6w/w1zPVLIiIJnIk
d4PRJbb4k84+HBk9IMNQ7H5dbxtUzltdGJYowrGi/sjW0fPcfB1ByRISyxLJ
cix1gzFpCI11Dig/6g5QIj39chUAj5fAOYn0N+ATIbPA7fDULh+eBLmh1A2V
+YUmbknuB7DXUDLO/uPHy3NLh2LZpBMi0XgW+GzuXUllk6DEOH3nDaegSBIm
MiBWAKNEPQr90RmRyAwrZ+febtGpeziWx5gbYMNxcJG77X2TVK7E6Tye/BZj
HwCi9C1MlA0WoOVvXpibev25b3DeE0xEElwgml9dP+2WzdgdJJCNJ5SCwiyQ
CkqkgkiyXaowmCwQSgKHtfVLjLzxE9koUwpgmQCaTuZ+Ln3aAfeKxtJoPE/Q
X3GqFCFKEJLbPYGI5Hennx5SLckVGqCWSDxpDzDLnwwDA7M+PxeM5oN4Nkrl
iUQ+gnOX1qikS2lzeWGckfa8ev/BBEcLOPtIZX+C5ENYFlRkcfXLkOoVcGbY
h3TxV/brr0zx30js27EJAWTavPT49Gb/4JJ243Rdt7/y+eLTZ9Os5ovbRwVw
7uTSM7e8NjEz+0azsbh0+EylcfhDwSgzrt6UKz7KFHNDzz++eXd4YY9SmXsy
davVGWXyl92yl9Iuda/i1fz7XZuHdEKZg7Mgk//HEfgTq75FweOLwETiVYuf
ikbWPp8B/i1u5NnU3JNmEa+6vqKqrb6xv7d/ygEhMaZktJCKEW2TcKS2Wdkq
nlYoF+y+KNjXLO5IO1+IJdPNT4eaBMPi7omlTwariwb1SuV/g8zlwy9Bja5d
+LUzfHDqEveMLq7ueBHajVIOJO6DE0GY8UAJnf5S2jvuDMAEA9r/IYg+hokb
BL812+i+oblTswenCqrJ5VnNDhzOobFyOFaaX959Pr1i9TBmBxlnv+8bbY1t
sg9rR6Dx/QEGyE/c8/ztyhd3JGX1Ez486fWTYPgAYaxvmTrlY+5QGEjaBxfd
/oIXTiJEyepkhZIxg9kB6tgln15cOsZiRYTIY1R5elY7oNQ4A+w1xOLMvf7s
qr5VvrFtDoeLPohxOGOCDiXgGSbL1kDSFUpee3EwzXwwrXm/LR9SB/FECGch
pOBDSt4wh+C5cwvR2Kq4dEIIQQPStLoLMgUuVfCjudGpDxOv1h1+zhXMgP7a
NXrqW/sBP+FIzhegL68i7Z0T8x8OXeG8LcA54OSfGehBXRA9qNT0Dc940bgf
TbkDGWcgDTIBfbF/HGoWjvjCUSiCCTpUui8OMMwjoB3wkmJ8Wf16+8KeAOEi
5L3u0NXeNbOiPQeBQhHm8goRikeXNswe7M5P3OHMI+iUaIz1IemFlf1R9RII
FI6Xg9F7hHgEB0bwx019QCCehGOABEwoUa9or/3ITYj46QyWB1Tr7z5d/n0V
84TLMHGrPwkMqT60SScHn83IBkf7BiaahYO9yoUVvePIgo+90A6Ovu5RjMkU
b4afv9dumf4np7Chd0l6XzcJlS0CdU/fClAyliwE8aRqStfSNlvbpKoTqNu6
Nf3KjUNj4tzOOEN5jP7+H2KIBr0=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
+/t//MCiig==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
2PZGo18/PEdPrXgQLcH03f8BDTD1NQ==
            "], {{0, 19.}, {36., 0}}, {0, 
            255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
FA==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
3IcDRCEm//gf9zQMxg==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVQlb2swWRkArIgLKoiDiUsVdWz9bqTvSuisuSEGRfUkgIQlZIYEgq7j1
s3a5z739r3dsnnfOM5nMzHnnvOdMhsKZ07hUIpFk24E5DTGbBBHizjTgxY1m
oQQai+6iZCwRI5bCMjDYA9pb0F77Kv2gStuvUpu1WrOux9ytNep1JqNhQK/r
12p61V06rUav0xn6TAMGY79Ga1B2ajuUmq4ug1ptBOhUDKg7rVq1RanQtco7
ZNI3MplMKpW0yuSyFulfyOUt7TKJAnQkUu0r5IBYh1TaKWlplbSAKW8kLW1S
GaAul8nbWsAjAWeRS2Wv42AO+AQgl3e2tmplMlVbW1drm1LVpekG1Ho61TqV
Xt9jNOq1WnVfX9/wkG3AMjI4OLx3Ejn1wBdX8HUQCUexaDQNEAqlYJhEUTab
zWM49RdZIsuQFEczeZbL0wwvFMqFYkUQ64VSTRCrhRuAslgpF8s3wk2hUquK
N6VqvVYolqrVh2bz+fn7L1b8zonfc+K3SuOl3vxea/xq3P63WvvNcg8IKiZh
bmfPs+E42vy8s+7Y3tjaOXR5SKYAI+Tuwdn23plz27Wzfw5weHyZTJGl8tPV
Nbz1+cThONjePt7c3LfbP6+tHocCZLXyksTKKaIagZgLX9znj3v8qWCERvEK
yTQBfEFs99DruUy4vwauAsloAktAVE6oESSgQYM4hJKviCMMzpTJXIMtPLov
U24fApb4riF/CMkQZYyoH58kOf4JYe+9IXrQZv8rXBdQTd6uW908zBClIiAZ
TClUhpY2oKOqpVUzOWt3e2P5YtPrh3TGsdZ2I1gilWv1vbbrKFm5+4Mxt7OL
O3KFRdLS1dZhUPdYAVs6/6/rHEGIGso9nXixyXfOrS/ugyPf4Ylvzeky9I9/
vYbZQrPcfMEYAcaZaDJ7ehEaGJ7ZcLqE0oNz53xw5D2EcDhXI/lbhKyEYUas
/ycQZ7v7psIQT4vNXOUbsHz1RWz8ObskEKoRw28396OjU5vhGFsQnyih4fYn
2zUWTyCdxASYEOAsTwoVki0DdwbT6PL6Pi/erzmOes2TBFXhSi9c6Weaql3F
aLCt+xpRGUd8UYwp3TGlB2BJ4RFjn3yhPLBJ8v79itsyYg9GSCjFMsX7g/OA
XGn2BrEMW0foKvCIUCLF1xBcUPcMbGwdEHRxZmHdOrrICLes+AMmbiG8EkMF
vva8ueeVqfqCMDjQS1aoU6UHjL9H2EeXj0rRzRhen3jntM2sRhM0SQN9a45t
Hwj4VYTCc3dJrJrK1pIoH0nn46miqrN//8BFc6K+f+7t9CZRrOPMQ4Z6SiBl
KCNQQnPV4VZqxmBEpPkmkatm2FtS/BYnms7DNH/zO56tjc6uj01/ghAWxXMw
Vvi0fqbWTUZTAqAEkQ0i95ATH4lcPRjm+i3vDl1ugivpBj/Y5r5kciJT+Je/
+V+GvgXRJvn62taFumc2kb4Ry8+Vux/l+z9c9QdE3e2e4nz5Z5JsLq4cDAzO
gFrYdGyvOi+W17/apr7AICx4afcCcuz5QbYsr+7u7QeXV0890XSCEsf/OdCZ
5q3Dton5Dfu6+8yXzuYqNN/YP07qehfN1k9KzYjeMr72+WsQykXQytZegik+
h9HazOKepFUPUvr1/pHqtfrZhY8uUHSn16jtw6680yqRKOXyLqViwNg/H8E4
4ubpPJIzmOfaOlSvOa8wq3ttgTiWLz2sOS6V6mmFaryl3dSiMGiNM3NLu94o
7fLgfOWXJ1gcGnfOfzjyhbK+cOboIjQ0tjI1twNkCqElb0yIpWsxuACl80dH
8U7VcDhNZYRGhnvOUA8g5hBacvswVffokTuQK91NzDpsU04gH5X7ls6WF+wn
g7ZPwQTnj/FAuJ0TQtG9sLIVhIl6DC0Cd0Cs6fldkFqBVOkaroSSN3CmjNK3
605fm8IUS5MoexOACyFIRLJlnL6NQMU3ndaDMz9bvDUPLszMOUnunhKecbY5
OvW51/o+lGT9MRaov3tCq/R2kCfXyVIoLfpCeLdhbm7hKI6Wg4gYTIMiLUWS
eVCGC/azdoU5lcZAHkZhMZqqRzMlmn24DnLyNyaXJ0Tmy0bLzMLSgVj9DZMP
gLzJumoZ/hBO0tF0kSp/2z1jOro/bB+lfGEqnimcX6Ig2ksrXgiveeNcIFUO
w8VgnHZHhOl/9pVaK4bTGCmEID6UqgRTRYJqHB4n25X9QC+E5DX6cfvaaa78
ApNPOPdoGd6wvl3yR/DLKIUX77+cZHqtK9sHwVQmj2VzF36sz2pf/OTxBMgr
iEf5n1j+KZtrRvHKisPXa5pLETzBNyC8wQi/wA+CZCvRRK5L9xbcwHA21903
bV/3YvQjUfgZx1/P9f7jvtsPA3Vgpr5zjpqGlnWmyX7r2NDwW/Pwe6NlEbhb
374C+08vnw5MrFvHlozD/wxPrHxcc4GbJEFWHYcR89BHtX7UaJroNc+OTHxk
CrUknpta2Ok0vJN32eSaSW3/vMmysu+Kui8hEEM0f/d/0eadiA==
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwllPlX2toWxyNgq9ZaZ1ARERSpONBq61CtVWvVilKnKxW1CkVB5jGBBBIg
IYEwhFHQ2sHbe99b74f3N75z11vre/Y6+/xw9t7f80kGDc69Sx4EQd4GEPYu
4GWP5yK43wqSQ4fXcuUwfd10+ExXJs+sgQ8OO8AaAuufvbBHKep93iv+R329
SpFwBEjcNy7sGu3ufN7RPgTSHpFSLFZKJKN9fSPtbQNtrZLuLjlQe9ugpG+o
VyjtaBU2N7Y+rm+q5z8S8Orr+QJeHcTnQTwej8+v5/Me83iCOp4A4nfXQe11
UGsd1ALx2njQE4jfDEHN/0+huta6uqcQ1FTHewTV1T9ueFr/6AmP39DY2NbU
1Nnc3Nn8pONZS2d7m/BZS0dXl1Ak6hUKhUtLSyDKZEODMoVcoRpVqYeV4+Mv
pnf2r/7QO67MIZsdtzsj3kAYDsWd7nAAIeEg5YfjQYzC8EQ4QqAYgRMkEaWA
KCqTSGSpBMuyxXS6xKbz+cINl6+kWC7HlTJZLp3Jg8NstpJMl4uVH0B3P/9O
pn/EkzU6dcdm79PZ+2SmSjJFmq2QdAXDs25/9EBnPNJfHupOD47OP+2dmcxO
iskHUUZ/atOfWvT6q6Oji+PjS6PRiaJ0Jn3rceM726f7+18+aU+3tWcHh1dA
1/ZIsfwbwXNIJOuDE+Bajy/qD5IIxpBMiWJuIlHOYkN1+mvjlQeUuDT7HK4w
ijN0shzB8zZ71OXBbS7UYg863IQPIRPJaqH8t/ESNlsjX68Ruytqc5P+UBbG
uM9nHjL5LZwoX3vwMfWCoKETEjyDeI2PW0SrW3+gcS5V+LG9/6W9Rw41tkL8
pjpBx4Bs6szkzBa+W+0x+fB801PJo6aO+sbOyam3oEM6VQMdzi1st7TJGp/2
CB53i/rGLq0RgqoazWiYLEXoyrHBOTW3pvmk/3xqPjq73Px0LBlS2zwEThUT
6WqUKfjQuM0NGy/90zMbO3unVLKs2TFOqNfRSA6LZXEqH0+W6cwdV/kNh9mB
4Vd+lCUSBTJVpTP3yeyvfPU/Dj8dT91GU3fLG7qh0VmrO0yzNyRb3jk4F0nH
L+3hGFMN4hlQjsnVqBSH4dzI6Nz7jQMmXV1ePR6bWCfpWyr9ncn9whNV0DZb
eDBY0D652hGIJzL3seQdW/iLq/w3krw3WokwVcWoytu1Q6li+toViZCFGFvS
Hhq7xaNXdjQQzsARDo0VEDwZZbKhcFYyqN7W6gFI6pebk2oN4Iqgb/FEDafu
0FgpXfp19MUG+rR5Ka74AJCLMndk6meQrB4b4GjyGxLlZha3J168d/mZWPJb
hCl83DX2Dry8tMORVMUVKvrRfJBIYQnGi6T7xaM6nSFOFWSK5cUlE539jsWL
EeoGRDxRoTO1XZ2hX/7CA7PF/A8OzEveEMy9Dy/vn7kypX+5I1n1zObY5Ior
kPBjuUA8/XH3q3hw2uZFMabkIe4I+k9gI5EpWhykWKIyGq14PCd/vjrz5jwS
rwCvgFF05k8sXk6kbze1+n7ZKwQr59laIf8rW/ybLf7bR1SODAEm92AL514v
H/bLXm9pzg91V7ufv65rDPMLu75QAiXLX0zUuuZ68Z12anlndcM0PPIaQWJh
Ivdydm9IuTM+tTmzePhuzWA0U2TqN8v93tCYRP3zStVHuUw9Mb60uWOwe1lv
qHRqwnD61kmU5t7rBI399Q09giYRJGitfyJfXNEFsJQ7xL5ePG54quLVd0KN
vfwGRW//WACNxlLlczPeK33f8EwGPZIKGhV90rd2b5JOP6x+MMkVa62dL9q6
pE2t0gHF3Pa+1RngjJYomft17oxNvN6aW9CCT8Bkw45NQbnyw/KawQXTMJF3
+PPXniRA9MJDfti2dIuVHjgUTeUwpgoT92BwJFKyedJi2fyB3hpL1sC86ld7
nmAaEBWOVZbWTiemd5y+/IWVRBO3OhPSJZ5cfn8EQPLiOXCzYlIz9+7Ei2Wc
oXSAqCHxsh9P2tDsrs7XM6Dyh/EgyXgi2QBxh5IAiZrFSYsk08cGO0bmFaPr
0/MHdO4bTOQAeK8WD4ZUa3YfZ/VnE/m/Tr7CXSLVxtZJIJyzI6lze0SiXJ5d
+oyQJRvCXAeydpgLUmUvXl7VWIT9KiSaAqzCeMETrISipSBeBo/V1ffixOQA
swwMrSysntP5e4yuUZmHiVda1UutzV+wIRzG/jy5Qrv7Jg/1FowqWWHa7Gd6
h98srp97Cc4Ck04sZw9lwMbspQED3f3jQYILxQsuNOcMFN0IGyIqx2doe8+Y
2R0CtTp75ja0tihbDlE3Yebb4PiacmrX4GKvg5yfrO2c+lp6Jj9qjU4/5cGY
K2eiu3/u7cYFGDOAZ3GmBoyKpcvA0s3ty5HRN0iYC8VuAuGbcOyBYmoE+cNo
TkgVb91BEjxfz8DyB40NIcEP6idG3w+pP85tGvVW6hophFP3+8ZQ38him0gl
V80qpt4oxlZauyf6hxc0+6ZrHzGzpFGqF6WjU7Kx2ZGxd1s7pyhRgvHK5q75
+cSWVD7d1auWDq8srOhC8TToCnDbJZ5tl4y2Ccd7huYlYx+056ETR8KKFtDU
/f8ACv3/Hw==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
f0xb0VM/e/0/mXFtLA==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVIlT2tobBbdWbXFDRQVR626r1fpcW59La7W/2ld3LAU3EGUJayAhgewh
JISwiKC4tb6+zvymf+RLX+a733w5M7ln7sk5t/PIvXFSolAo/I/ltnEYWvD5
DuHNWvllG/Cf2QCrZRUIWG1W39RRqQw2yKtbXr9nddOQquZZZZW2StXa0KCv
q9PV1+mbm7p12uc67WBzc6dG06XV9nboehtqdO2tA/VP1apqtVql1TZ111Q2
qp48VT2peVpdW/X4aXlZZUnpo5KSspLfj+J3U1aUKCoUynKlDJaWK5RNZWXt
clcq6pUKlULxWFlWqSx7qlRWy7OitEpZ8uj3J0rFk0eqCuXj6sqqykdVFaVV
Typra1V1tTXNNSp1o7qlpaWtWdPa2NTarn+m0/W0tbW0trTrO3oGB8fG/5gZ
eTUxPvl6y+A1H4CnjqgDiIBQzB9EAiE0GIwGYRKN8jDKgDCKYDgaRjCUYime
pmmCIGiGj/MSn5RSyWKCzwlCVkykU+mcmCnw4gXHX6Qy6YSYTqUKgpATkvni
7c+b+5/x1IOQ+ptL3vKpWyl7lz5/kDLfUtnvNH8VJTJuH7FrtBlMh1+Nx3t7
1i97tlOHj2IlGBONh27Dvu2LwbVvBra3LFZLgCTSUvre5Y5ubNrW1/d2d/eN
ZuvG1uHO7lkgxErZaxBNQghvsUMnAHzihAAvLuM4dR6L3xJUIQgnAF/UcuY+
PHbbXSgIxSn+HGczoWjK4aM9Ydbjpbw+GoJFTriVS0w9nALRL/s+iw2w2b1e
PyZrFSXOAS/NSZcQkQpGxPHXqxWqNkV5naKkrrJGt/r5gGCvqNj9xq5L3dpb
UlmjLK+rqG7Xd0/aPdG4dHfqolo6J8pVukeVTaVlTY2aoe1dJ5/4JmZ+uEFK
3zNaUV1TUdXYqBnoG5jzw3FviIpLRZmLTRYRKmUDohYHcnwGG8zOts5Rl4+N
EFcvxlb29h1n3oATjJosgb7huc+GY5LP7xjdAy+XICxNxbJIVDQd+AeGF3Cm
kC38EnPf+cwNL2W5RAEMJQaG39rdZCgi8Jm7MJkL4WmUuSDjRU76jjHZfau3
sW3g1IVDkWxHz/SW0UoJSVYqwHiqa2hm+aOBjl0sLBlGRpcpNs+J9xR7abYE
OvunKP6Kil9G2UtGvCe5cy55HYykdN1zhzYCRNKsdA/j2UAkKRdC5iAsg1LZ
/RNIPpcsO+CPa9ontowuLl2gkueyArru8bV1E81m+gcX5uZ3GaFICzeseL9h
8Oj7pxmxgMfyGHeJczkueSXlHvyQoO2aMVuigXCGTnxDuYI3LKCUTJT+TYfn
doxQY9uoF8IdHralfW7HBOPiTTgmBYlsR9esbEWSuejrX373zkal7olkHuNv
F1dOO/sXyUSBiN1EqMtYOktz2Zh46Q6yjbqXFifhRzI4ew2EeQ/M+8MJhDyn
+GsPJKx+crbpp1AiZjT5GppfGw8JmClGYmkASXb3vzs+CiBEenx6d3MnBJKZ
SPIC4YpTC0eD42uMVKT572TsbyGXz+YfZA3PPOSzobljB37qYeTj+yJpZyBu
tkKGfe+6wb64ure6Zp99s0HHkhZruE49KW87u/zlzeL2+zXXq4ltH8j6UWFt
0+UC+ECUj8TzaOzSaMXXtu2seMPEf525skMvl9o7Jjt6ZrsHF/9cPrB6WA8k
cqkHmC4c2bHB0bfKx61yKSqaqmtfrH46QjDSZPY0NE0+qR+UQUWZpqphvHdo
1QexfkxyBoQIdhHEE0gsD9HnNh8biCQ46e7rAaNpe6tqGKhreK7WjL6c+Lx/
gp/6BJubxrkiwtx64SQAcnI25dq3Ilr9/JtFQ4Tg1zaPZW/sHQYAObMQ83bN
Wd88HoRiNoB4PvrJ7mYgKic7AaFz47Of9g4BOnE5MrY58/oIY3IUd0vE7mjh
ByH84wyJBw6MTtzB1LWsoezACH2BkBl3KKHrWpya24FJYWZpS983J//QMJdF
2cyHbVCteRWEGLMl3KybPHUREFOgxVsPIjZpx0w2P8nnegbeTs4aaP4Cwc+j
9BVKF0NkwebjZC4h+w/CXrtADgBjXog7cUXkWdu1OLdsgonkiz8+9I1+DLPX
3qgUotKLH90yVxiOfTHDdc2jDj/uxqQolXe4eRmXI0ZwKTksH/46YhMFlDiX
04TSlzKXPZg48TJc9kcAy3nhhCtAy5uDEe7UQzVopv7a8ThBtm9sZWLeCOIZ
L5ryh/mR6a/1mpcQym0ZQVXTC2cA8+NZjL4y7qO16hEgQKKUIF9on7dPxey3
/zS8gfB8iLhaN4F+JIWwBdkbAVSCMEnmCkbjhq+hevXMlgHc/eqZmNlceG+C
ySweL8i38eL/nD1DSwiVXDOCDa3jgJughO8k+81mj7d3vYExIRhhWvQjKx+t
KHZLx3+y4v9p8RdM36+bQi5YopL3EJU3WsDhiaXe4emuofG+gXmNZqZ3aGV6
fvPP9+Zm/VhX/0TP89fdva86Bt+tfD5GuLTRQas0o1r9WEv7rMzSN7Qy9Wad
jKcDCDP/zqBSD9eqJxtbZ3TPluben/ijV5vmsB/LEYnbfwFqhw2+
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
dtMB6jqaqv4NEmT90g==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
Ct/muQ==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
vX1O3fNmbNq4Z4JNbtoVK2L84/8AbD/mzg==
            "], {{0, 19.}, {36., 0}}, {0,
             255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
tTKs+5dcYzy9jts9VBhppuj2/wBBgZsB
            "], {{0, 19.}, {36., 0}}, {0, 
            255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAlXGlsSBpFEo8nTaHzuaIJGYqJ5o9mMWd5Tk6iRGJUoKiIgSws0S9Mb
vdELNNDsyirRLDMn8zPn5sw5detUV3fXV1Vf1R23B7ZcLSqVCmkDasuG/x0O
28jtLvBgghHIDTtPVuGI0+0MP7drgLMHHD04v+2+wcn+wft9/fq+gbsDw/du
dvZ2d/WPDE2ODE2NDhv6+8bb27p6bg+Cx6EB/a2bd260dwNPX6/uTs9YT7eu
t0vX1TnUcf2OtqWjRaVtUak1LapWjVqt1mjUrddbrrW2aIGt/v1Kq1Z1qTS3
VapOlapNpb4GnMDQaDq02j9UqhtqdQfQrdob6pbrrdp2TWub9tqNjs6u9vbu
jo47t7t1Pbf7BwdG7929P6E3jI9N6HTjk5NTBoNhauoB8BimHj0wzD598vL1
q6VnTxf3LEG7E3NDKEaySISIUjGS5FGUoyiZppMsm4xGBZoRGF6g6BgvSEA4
MSHJmVSmnExXEnIqpaRFKaFkCsVSFUg2d5YvlLO50v+NQqEGpFK5bDb/zcZr
SaUpK1Uld1YsV5RcNV+8TKYupHhdEKthJL61Y9vZPd4yHQIx7VlcEMwJMs0l
DyyQcdOytW/ZMO193DYf2E+RqCSlK04vubHteLdherexu7RqWts82ja7T4Ns
ofIDpfMEUzg5xY6d0IEVqEgoItJcScn+wOmCy8seO8IWm8/jjThcARjG+ERG
Vs65RCFMJMJEkornqHieV8q8UqWks1TpJ86VTsNxmOAJISMoDVauhaKKKxAD
NsZXPQHBMPvqxq0/VdrrKk3nzT+Gl9/vCVI9JlQPjgIDIwZt++0Wbe+19n79
1LzHGxVTdSp2FkQVXzgNhRIOb2zfjiNUQVS+SZnvOHdug1h3iHEFWD8mO7ws
yVfC0TyTqGJMleSqR27i0A7bvUE3jBl3jnX6Zw4Py4p1B0Q6vXiEEgNh0WpH
pqYXNr+4YnIdiWb9aCaR/SVkfvHpX55w1h1OUokGk2xy6UsheyWfXSVK3yJc
8enfJgcsIWwJOANo2RvOm20EwZe4VDkqZHeP4BH9Myggo9TZ5z2vDxHZRDGu
XICmDY7NvDOaxXQDxlJQKInzDVb8xsvfw0Th6ISmhZqkXDJShU/WOLmULl3h
bGFUv3BoJyJUTs59g/GK1RPfs1O4cI6yWSZeMh36BsfnbG7OH8lt7gVOQyIT
L0hyJcpkRsZm1z9bBaXpQWQfUSCkJp/8QQnN03DKbMNI/jyWvIilAEeVeLYB
UvIh8f7ReQfEBfF0InvlRrKuoGKFJJQqonSG4qurn6y6u38BiBNYXtn0gTg0
CMJlSSw1OjJr2oOYZOMYTkF4iZCbfOqSiJUPT8gTH0+JDSBRoR5LXiXyl8nC
zyMXNTr50uqmvUgSpBFgqma34AykSa4spWthIre8tqefmgvisiucfrcTALzE
xBLLKDSZGdPNHli9pFTZsOAQUQ1wFUKs4kINkAUEjVVIqRGNX1CJJp+up0v/
OQ3LD+dXgfajaSlzhfDNLzb+xT/Wj9vO9a3998bj9xsHL96uEXwBYM29MT95
tTX7ZGn+2YflJdPjx4tgeJhU2eyWdmzigSthg7KuQMHqkSEkB7AANCVXo/Eq
KZwx8RrGnlmcUVAXmENaqsJ0fcfK9Y4sqlq61W1dqms9PQMTK+u7UfHcAvEz
C5vt3XqVtlvTNtTeqRvTP4owApUseiKZ3RNpdSe8th1Z30Fevz85gVMx5Tsg
nZBKKF8EvwOsCF0EFQEsUBpoqTOYWTLCu0fREy/r9GH7dv+Dx68X/9kCmVi9
4q6DdAcEPyICvbJ2NDg8DeMsKua80WKQqmKxOiHWXSH5wZN1i4fmM98Q9hx4
QFdBXZzc+GyGX7+zADY9wTho6REUX/7k3zKjZKwUwkUfyuomnrxZ3gd7d+Dm
9120H02CzcX4s5V1x53BRxE2iUl5hCvD0VKYKTKpuhsRe0Yf79ojMeUK3AyA
MtBMOl4R0l/nFz9Pz60deziw4ICvLzZmYxv5fIARXNGPcG6YGB6ff7viQKmv
Byf8kYcPkQUwoqeR/OKSpXdoJkwnQ3wBZqu/S2NygB0HHOvom9p3ktF4HY39
rgvAgdxouT7518rMi0/OYMKHK2zq4tAt7h5zx6eiF4lBQcLlx2/13F81wpHo
pXEXs3mEAJ6LREt+vHB/5sOfI3OEkAtwOS9X81JlAAdKOHQzN/tnQECAAioF
AkABcVSiNv107dFzo80nhOgCQDcdsyCmC46TTBKlSIc7OD65sLQK2X15s50H
60zyNUa6xNna/MLOw7kVLJaOJM69dAMV/xvhf2L05baZGrm35PKnmXgTpSvg
ezZxQYhlMJMfd/3Pl8xGc8CLZdjUVwskGuaM4w9ejhse6qf14xMzg7p/TU6v
vvkAbZqxiUfL96bfjkwsDutfjuoXN3ZcXOoM5vJfoNTLtdDix+DCW/vrZdcH
YzCIn7Px72SsQXB1jC2DHQQXI6DvFFX2HGSQKoKr8n/+jDV0
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAlX01oX7cAgqEyCFPoYbQErooAKqCCioMikzPIsg7S0dJ4yNU2TNEmT
tmk6D7Slgr6nf/Ndvi9r37tOhnX32Wefk4Hvzs0zhUwm894C2+YJ8tbjOcG2
WsDNjsN7bnIYDcsOn9Fk9Ex/V4KH98DSgHUTq9SaTrVGpRoEUKu13aoHPeqR
vp5HverR7s6R++2DnR2DqvsD/eqBB72arvbujpbO1qaO5jv3Otq7O1U9rS0d
LS1td+82NzY01d2qr6mtV9bWKGqUCoVM/r9LoVAolbUAclmtXH5bprwjr70l
k9fK5Eq5XFkjb5TLGhWyu/W1bTLZLYXsdm3NHYVcVqNQ1tfWKeU1dTX1Dbfu
gsNbmtvb2m7Q3NKm6lK3tHa0q9TqvsHeQa1mSKsdHhrRPRwdezw+OfHk6cTz
F9Nf9Wb9ieXM6nZ6EKcX9kF+lwuFYcrtJlCUxXEOw2g/TlFBmiRpigqF6DDN
CVw4Fk/mwhGJD8e4iCjEk2IiK2UKYqoQiecB4lIylc7GREmMJ6REqly5qlxe
8/HLWOqaj5YT6X9T2T+Zwi8xUY0nb54E6bTZGtAfO7f3DZ/Wttc297d2j4zn
EMFKFg+xe2j9vG9cWd8D2N03GE1ekkkIsZLJgq2s6z+ubC6vbq1/2Qf4+u3U
4faXLv9BiaQHie4fub8bMJOFOLP57V4myOQprohTGauLOTYhf584zyyQyQp7
UDYQTgvpKhMt+cN5PFwUxKIgVaLJalis0HwhWfjDRCsA8VQlmf2RLf6KJUqh
cEp/YpPSl0GuaPfxjybn65tUsroWmaKpsal7beuI5LMkl3n/abehWa1sbJfL
mpQNnRrdS4MVZ8RLwEIIlWCsCuQzQhnGJS8ao4VSLP0vGb7gpWshVgGvpNQV
GUrBmACKw0cvfHgcpOHFw0YbrDfYdr4Znk697R8eh3AeI2OPJl5v7B67UcqL
8VYHMTAy/WnrexCI4ouU+JMQf3BilRN/7Om9c4v7BFcUUj/ZeBXs4VhVyvwG
St8s7pzZAh5USOZ/+wIZjC3ioRzB5gEpyyffL2329j92e0MWGw6Cw2ObIGTD
Qs7rZ9s6NBs7RiF+hdFZMnpF8pUgW4qm/3z8bBwZXyCFCzJWJiIXRKRAC2Wg
DiYS2tG5U0vA5mUS+d9wMOfCU25M8mAi5I8Df9+82/irfxTBwmdm5H6X7sQA
hYQssA8hYl09D78eWUFKPjKFC2WMK7PiNcDkq/XhsXlO+gG4gGpKKpPRipj9
c2zCerVTDoh3IbyQukJCWac/CVFZJJiEUS7A5V+8Xn34eDoQCOsPXV3d0yaH
APIkhCrkl1TdQ4cnFuqmK0oQe4Hx//yfTjfxYWxySYhf05EKEb1E+UpAKIq5
3/tHnj7NS4uT8+ESHS2jTOEcigGuIJ+PxApuVHjxav3J83cEHd3cs3T1zJ+7
RJSTILrggqW/+kbOzl1M5AIKZbxsHuGvvaEcxuZfvt2end+KJ38FwxcBoYoI
JSJaYhI/Tsz42OSy3SN4/XHADjI0uiNr+46llcON9W+rq9vvl/SziwcEn9k+
8t5uefHoyerM7Nzcsn7p06lu+DWCMDdjQiQgLusO5VEu76OSegP8ZdsIGhK0
B8zkPUwB47M4X4CDqV29y+JmXWgM1Bamc/pzumNgSlarktfcq69ram0enls8
gkPJjzvmjp6FhsahmsY6WV1bfcOgbmSOJGMIEQcN4KISULiEC0U4lLb7WLuL
BlOJUhmMu8SiVYRLg2+8uGS0kQZr0IlEgZUOOGZGJBsqWaCIxc0cfDX91TMz
t6BH6Pj0/M748wODmUZwvx3GPy4danpf4hgPOhnU3B3KOoI5P1+yQPyzV+vn
VoqLXiFkHmEu3XQZDWfA4Ws75sXVo1ML4fHHgS47FDUjoj2Qgai0BxfBr+N+
9+TK5zMwUFrd7Mz8NzeWdPtJnBTevP7ar57xYzzJp6FQDhTKCU5mcyYP29U7
brLdcGF0EaIv4PAVzKZQNvt0euXJ1KczB+0LJIB93mDagUvnWMQZEM881KmF
vdf5dGfXgqFhzeDUwruTIFsxw4yfSD6bOND2vb2pIRl1EZKPK1gCSYzLHZmx
VpXO5KDAkOJMyUteeKgyTGeAO0PjH6bn94x21hvM0uIVyNCGiQZ3yEvGrRD9
7ZS42z7896Hdbgv0904urxvAAIJkPL748NDmg8EFkpGwcMJJZe1kxs3mwDhs
622tqhEkKGFUGiLSAQGIqoL2DvDlPt387Ifjo/MQROUBNXAKOIiHsgSVIkhp
58DV3KHdO7Bu7lm1DxdWNiwIkcHoPBYsT704nprew2gRCqUd5IU7VLHRWT+T
PjTBA7oZlEzAZBIJ5XGuirJVjC2BYOL13rP5g+Udp8ufIyM/7YHU8heD7unc
6Ngrzcgz7chUU/vgo4n3M293x55vdA/MDgy/GRpdUA+9VPctrm3Zg9G8i845
6J828tJMpL2BOMCXA2uQy/mZLJCDMRXQHhBZBFwONKM3s5t6DASs9Oc/5Fk7
CA==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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

            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVPlX2loXBbHaamvFAQVHrENbtOrT2lpbp2ptnepcZ0FBQIZAICEJhIwk
JAwBEQHp/H55f+Z3/dY6uevmrJzse+7eZxvPoa3LCpVKFXgIli1LaA6GLfh2
PXjZ9Qacdq/N+sUbtNlt8NtzDUg2gqcXPPd7nf55U0t/c0tva2uvofWZoaWz
Xd/T1dlvMPTqdJ265rZWXVtnexdIdugHutpedBiM+pb2Zm1XQ1279mlTbXVz
4xN9c0NHQ31bzSPtg8qaCk21phKco1KteqDR3EdFRSUITUW1Sq1TVWhVmgaV
6rFK9bDyQY1KXaVWP7qPylqwv69S35+qQv1IU1FzX6V5UKl59LD6SU3N45pH
ddr65sYGQ722GUTd06a6huamVn1Xd29HZzeI7h5jb3/f8xeml6ah9e3L/VOv
zYk4XEHIi0LeIBzAPL6QN4D70QiCkRhOkiRFUpEIyTKMxHAszTIcl+D5ZEwU
RCkuyUlJTmeyeUFKJ5VbKZm7DzktJ5RU+hqsSuYmf3v3/ccfVirxibKklJOZ
cvamlMuVFaWUVIox6SbKpmwOaGNzb2Nzd3Nrb3l5b3vLbLN5GFbEsfjujtVs
dpyeXWxtf1td3Tk1uxkuE5d+uLzM8qpl7+D88Nixs2c7PPJsbF5cucP5wr84
nUHJlAPCrU7IBcEuDw7jXJTPCMkiEhYhlN4/sjrdgTOr3eYIeXwUHUsIiWwA
la48tC9IevwwjOIIQdO8olz/kdJ/T86x4bHV3QPrxSVitROQP46E0uYLVEqW
MTp3don1D72pqtWqKqvVqnpt07PFlSNKuAUtf9290DZ2qyrqVJoaTZW+3zRt
dwXldOH0FG3Rj9TU6dXV1VW1daaR8TAV56R8lL9ZXD7RtQ1X1+rUlY2Pn/bM
zh8EkKQvIAhSMcwVtw7co28WN3ZOzJbL41PP3NJu3+B7p4+mxYKQLkfYNE7G
kQhrucQHRxc2981iuvh57cI08ilA8DE5RfFyNJbKFf7SYjaZ+1fO/hFSvxgx
x0kFt59/OfzR6iSDeFJMlQmmPDm33zc4Da7rvoq/Xtk2txpHLtxhUsgHozId
z1FChpaTLpjtHpj8vLkX5hMjE6um0SUumWeEEghKKJH8LVgjXD4KMtJ3Jl6U
Mn8BOz0vpo4vECSSjCV/QmhmYnq31zQNhfhoLAG6+LR+0Nj23O4nw7FsgJYI
LolSAp/Igg+aOl7tWxwEJ+s7xydnvvHpAiPcRbkSyZUiTIEW7yJ8gYwVCbZA
8YW48uvKzzToTWY77g0JYuYXTKRMY59fji34cJbghTCTmv241Wn8J4BLCKP4
yQRMiJFoIsIlArjYYBjeP3cTjNii/2dm4ZyUcwSbIvkblMxQsTIZu4vEbgEp
Eb5MiyUp8/vQ4td3vba6GQ8a45JlDyr2Dc0PTSwhVJySkwE89vrtkmlwOsxk
PbgYil2zcgGIOUqnnBBVq3t54kQwSuzoervwxY7wEpcoCqnfVOxHlP8eorM4
C9DzYe6O4G7YZBEQ8cw0b3HSPlwOi3k3IpjGPvW9mln6eri0sft5/fj99Nrk
+zXAJsrldsze6U/b7z6szsxvLi6bde0T7gAHhmLAtDA8vjU2+2Vian9lw3cF
KULiP9AXgPt/XyWczZJiFsLE9R33hYsOEDJGpwDi6OTq4+Z+9YN6ddVjYFYt
hhdbu5dhOucnU8ahKU1tK1CvStOk0nR29c2AKjJ2bXZQhu63qie6iuq+qlpT
d9/HK58MVIEx12HuFo3mgqyCCQoh3PiwlM3DOiAqlro7h9jWzvGZTwdumL7y
4lv7jvrG/i8rZqePQ+hrDyb7MRmCOdtV9MPsWXPrG0+AAwQB9RJsCRw1zOa/
nfq7+ifPnWE2cYdS6RAF6CthsTyVKq4dOUamvtpczKk1mFR+Hl0StdqBj8sn
ITIB5gj8SqcfXFo1uwOCC43DpALjCQSTkKgy9na/WT8BY3FwURB+7Q6KAAuj
FLM9VKd7dnTh41KlEK2g0XyE++2jFUzKvf648XxsyeUXzZdoOvt75wx5WNf7
dceB4QnITwPnaWwdXPhy5kUTdlgANwDjSYRI+YnEyNiOwTCBU6kQe+vBFS8h
Q0ERp/JmO1Hb0GtxYJHYDXAhJHKLRX8G6FyQyXabPgyNr7tgMJs8Gy9uHsPa
lqGjE+BqcjDAnduwJw39q1sOmFDcoQTAcsExT1A4c4W6n80PDS2CAQR5KJx1
IhwcksNMee84CLCAz/gJ6V6KTBGnv2P8nT+qGAenB8fWrC4REAEcb3nXBUZg
e9+NhdM4kQRYwM3ml89gMufDFD+eBlwDN/CRwrvZ/Tfv1kKkhDI5mLqOxG+j
sSIe/bm4YmvUD/tCIjAZlMqA1kLULUoDNvOgZOTNzomVCYQznPxjzxLq6pvq
6HndO/DO2DMO1odPjLrOsdkVix0SRifX+1/NGV9Otb8YfT48D5QD/CoQzawc
QrqekZbOUV3bVJtxauDVXITLhfkc0CFCZoA8AsRtVPjhRVNnl9z2YQhgAZX+
DzNnBt8=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
c37TgoAWiyZ+/Rc6qRph
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwdVAdT29oSNqYkJNRgTE8cMJDQEkJIKC+BEK5vKCGEdulgMLjgIkuWZFnN
KpZkuXdjU8K8ee93vsObOfvN7o5mV/vtd87rM8/GpVaj0SBPAWyY8W8wbCY2
m0Cw7UbsVveFZcntu7BewFNnlSDZAswI7NFvbTO2tvXp9H0tANuNrbrejvaB
zo63He1DHe1vQNjY2NXY2NHZ2q1vbgfYoetqb+3u7jC26V92tBtam/SNz5qe
VT9/WllbU1VbXfm0SvukqvJpRUWFRqPVaquA/d/XPGJFk7aisUJTp9E2aDTP
NNpajQZ8Wa/R1GmrmjTa54+hprpaUwOOFjjaWm3Fk6dP6muq6+vrW1/UNzfU
NbY063QAGl/odPqenlddXT29xld9/YbBt8aJyY8zs18mPn4aeze+uWc/PvVY
HYjdiXp9pAt6RBhlML9IMaoPZ/xkMMBwNBkEJ8iKihzjxDDPq5IUF+V4JBKT
JEVVo8BJpjKRaDysRsOxeDiuRpJqOK7IETWazOSKt8XyH0bMCuFcLHUTSxaS
2UI0WY4kykr8jg3l/GTUbEG29yyr63traztra/tLq9uHxw6SjXhxYWvfZlo7
+LGytfRzZ23jYO/oEgnwYiRjdWNL67t/La2aln8C/G5aMS1t2BxYrvjgIyNX
XvrI4tw7PjNbrTan3wNzLJ9T1HuazVqsfusVfulAT86ujsxOGOMoPs6rBVrO
4MEEKedENS8nSpHMnZIsi9FCNP+HDWcCYpxT0pF0KZzMh5NFP6MeW2BaSPjZ
lBsTPn9ZqnreUqGt0Wgba2o7l9bOaD7Py7d/r55UP2/T1DRoKutqnrWOTHw5
vYQJLs7IeTZSJkI5VixSQh6jkw6vGFTKvHrLSNeCeqvEHkS1JMfKjJjm5ILV
RRNsDMJVJfGABaNnTvTY7to5tC2vH3e+mrDYWTSQNL7919rW6RUcsF75dk/s
xuHJ5Y0jKpQlQhlSKQbkAh++keIPl27u09ffoAsXveNj95R8TfFFUJYSU5+/
rh2eYw5IooQchEUxJkPwGUpKB5QULcY3di9ftA1dOBiMTHS9Hv+1c8pK0XA4
R5DyS8Poyq+DkHJN8tmAkCWFPMXlpMj99r77Zf9UgMuSfI6VrsGAdKjIR0oI
HTa8ndozYy40KkTukEDMiUc8VNQdkJBgmJYSq1vmlvbhK0hwQ6FmXf/Wwbmg
poVQCifltq5B0+o+KxUxNomwCVIq0WJejNyafp4YBqdBnlPLtFRglWtaysmp
2yuUazOMn1gZO6SK0QeUjbgDiodWQS8fIyO8PPfXQXvXCOGXzs/pFt3A0ZmN
k3NMMIZRarOub+X3kRz7D8HlUS7lF64JqUCJhZm5zVeDM3SoxEhl8AMBucSG
03KqfGIjdN3jRxbm/IoPp/6LB8MQEybkNJAWEVQgkps3Hb40fqBYZXvb29k1
arbYCSpCMjGrk9d3D20eXgWVe5wvwmwS40uYkA2ECj/Wz0cnl1n5hhCLfrGE
gaZKSowXL1zBvuF5QKDdK/GRG5hSzp3k+p5jeW1/ceGnybQ+v/DP6KcvhKj8
PoQ7DBMDw+9mZ35MzqxNf9ntfTNvgwQ/e4PQeZhNo1wZZuKUUjy2+rePIFYu
YVwG5XO4dA22SYXyPiphtjO7p6jNy0uJO5hUT2x4S/dohaahurKpStvU/GJw
ct6EhZTlHXfv0Fzls6aqmhaNtq22bljf/QkmozhThKkCzGQRtoDxaaD8nRMI
DsQexc9lMCHvE/I4mwbyQMj4lS904aYdCB/O3CNk2uWPOn0Rh4d3Oan9f5z9
/XNDYzNYUJ1eMHf3ze+feVyIYHUGZ+csXb1fgSoI4cZLZr1MCtDIqCV3QB2Z
NFkhDtT3sSmUz8B8GmfzgNIfv8/eTy9bIfbEjnLqtcURdKBhuz+CMgkYFSFI
7Xk583FqEaXVkfHfhv7vbr8YkLIMl/26cNGsn/ASEs5nYSoHOITomF/MWlzM
i66RvTMEDALTCbBBNJTD2SwIx2dWhiYWbN6gHeakxB+MSdlQ6QLmXQHBiZBe
PKbXf/i+uEsFEgO930ferwChetmoGw1NfT3W90yDWw8KQoEMRKVB3kvFjy+J
Bv3bo3MCiBBh0oBD/FGNRcCn8d23wQ+Ll14BjMPH/g0RKmhkgVmrj3YixKWT
b2h5v75u88FKT+f03LddLyG6ccnp48Y+brV2TwXEJMIkPf6cA4u7mRgoeHCO
1ekGzVbaR4FbUAA6RHiAWVzI9I0tjE3/PHMJNjiCBa8hMuGlkhAZwwNhny94
eEoaDItbm8j6L/fY8PKPpWOcUIJCHkz37W+7cXQVZqJuIoGQ9zBdBlvzBwt7
Zr9h4KvVFcIo8DAWfEwBF27B7QuEynPLx9MLJxsH/itfCuduAAkbR56hicWB
N5/7e0df9820tc0a+kyfZ3enZzc6u4f7+8eNrz929L0bGFmdX7JBVBQI3oOX
UebWQ2QxJgfUtbnn9aAxlMwRwRLo5SFzYF5aufOS+UtPfPOQdCBJRnn4Hzxz
Jpg=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
LENsDlfrfwLLuPWc
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
P13y03mIKZ6giR0HYw+ooDuFpKv/AnNKPfE=
            "], {{0, 19.}, {36., 0}}, {0,
             255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
qIM7BOhpd2es56QPz1NS619EGbmM
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVIdX22gStylLKKEsGIwpwaxJILAQlhBC4HGbkJBAQq+hBhtj3LFlq9iS
rOYiybLcC2WTvc39nzfcvTfy0zfPmplfmc9o9m5dVmk0GuQR/GydY2/9/nNi
uxUOux7EbvNYL5Y9AavN6n9troZkOzwmeB7euwyjXfrnXd1D+t5n3f2mnp6h
jo7+7m6jTten1w/0PzHpOnv03f09emN/j0nf9aS1pau5qauhoaOxUQf/1OsH
DQaTvtMIyV9qWmpqmqtqm7W1zY31Tb/U1NZUa2ura6o0tf8PTVWXprpTq2nV
ah9DaDQNmuomTVWzRvNIW/NYU9WoranXVtVpNbXVVXW1NfV1jx7XN7TU1bXU
17c1NXU8bm5vamzrbDf82tLZ1qzr1PV09xq7DE8M3cb+/oHBwcHhZ7+/mJie
fPF6ZHh8ZfPi67H33BywX+FOJ+b1MS4P5bmOuL10EBMg8FAMgiTpcCjCcQIv
JCgmGhESgqjyUjqpZMSEIoupVDKTTuXSal5U0sl0TpZzkqwmFTWTqRQKfxcL
/9zd/eSl+2TmpyjdpdV7Vb1VUv9Oqj/E5Hc+eiPEyzZHeH3Lsr1n2z84gdjd
Ozoz2yOcTHPymcW1d2jZ2j3e2TneWN8/Ob4IIOFkMu/HqIMTy/L60fLGwdLq
9vuVg7Wdiws7qRb+CbE5jFJsDsLpDrm9YaeHRYlkEJcjTD6aqFw5SbMVhTg9
vbRYnNdICLrwUp4SUlhEisSzfDwtKUVFKUHE45l07o6XsiQvh/gslyyKubuo
eovSuUtPlIqVCC4TIMU3CysNTd0gk1bzq6a2fXnzNBLN0UJ2++iy3/RC86hN
U9VS36gfG5+zXmG0kA9zeSZ+Q0fLJJdlhUKYTKGYyAtFOfWdS5R56YaT7nml
wiulAJXy4VkkVMSZnBePc1IJpcVzG7J37Ng/ca5un/UYfzfbkUg0Mz2/tPXV
Yr8OgYInZ57RsYXl9TMmXglxJVKosMkfnHyXzP3H4eUWFvcCRFLO/hSUvyLy
LS3eRzPfKbGwuPbt46bLFcwSQtkTSiCUiNEpmCeu3PNiZe/E3WF4br5CiYhi
fDYNrQWpGJOKBCnDcX5xm5VusUgW50uhaIWMFqXczwsnNTzxFqVUPnlPJso0
4BLvosoN8Dw29eHzhtuHPvAAGIO0gpAKEpJQQgL5vtkIXc+IxRFAyYSud2J1
55IRyxSfAbqMpqm5d1uCfBuIZMj4LR4tkokiq9weX2D9T2fJWJZJ3oQTFTxa
YBM3cu4HzigDT+f3jggfmiP5oo/OXOMyTqVRIkEAQC6/feRv0w9bPQhCRrv6
Zjb2AXclzGbQsNpjnFxZO+TFAskXgkweehFsPizkdo59prG3XLIMU4X5MiuX
6EReKf195eP6TH+eWeNXXpmX/0LZko9I4ZEMqBON5xA6vXUcbDOMuHDcG2J0
vbObhwRQHUlUrE52YOj19r6Zi2UILkeKd0EuSwolnEsdmomJmbVwVGWkIhW9
oWIF6BtL30Dl0cnNc1vc5o2BjoFIwY1LO0dO2IjVzcPlNfOHz9aRl0sIK1z4
iCcj72cXTv+Y+Ty3uLf0xTw2vnhm8XKJPBJSfGQaEwrg5yCtgqX3TjCMVUJC
GmwDk4C9OfnGH1JPLti1nYDdJ4SjKfjkzEUZn89VN3Zq6lu1dV31LSP/WjlF
eXHrzNYztNDSMamp0WuqdDUNA32Dr7xIhIaCbB6hswE2S7BFqHxuZ4JkmYrn
CF6FDKwSeAbQAZ+eQN7hU84dYUbKOYIiUOREEw5EsHmYo3Pv8PjSmz8PcEZe
27O0dr7YPcT8mOwIxtd33Y/bR688NBMvIeEsEIIwGagWpNLToL+ZhF5gMziC
SwGXkCofnPsnX+9YHLFvdlxQCy5MdGHydVgFK4In3Wjk6dj7qdltT0CA66XD
8MLll3A6D5+v7bhaO8chT/I5LFL0kVnwBjCG0pnugTfvli3R1D20eEDK5kFE
Mpae/7BnGv0YCBcuvTSXLPjI1FUw5saT7qB0jSadQXpweGH2zVcipL7/sN8/
MINRBZzNQrsvW64Ow0s/kQzzRTxSQaiih1BAEXcw2do19Wndzop3GJPBmQLO
lIBMOpGdml+deLXhQlQvJoF8hFB0oDEbwnuwxJWXvfLhhoFXcwtn/oA8O7/6
fGIRbGC/5mGMpRVrZ++rIKnCpnjRNPQCYwAKMEazbvLYQgGcB1c84CqHoxlW
Loy+XBybWj21sg9rxWYxoeTFRYJNwbaGacVq94+Mvnv/8XL3KPj209HnDUuY
yjJ8Hn/g0ANcBamHG+M6lIMIMllAYfMkhsaWvl1FAmQGCoa4QoirBFkVLqgv
+/aRP9Y3DzEgHC6Zayr1ecfy+8zbobFXpuGpoZHpdv24vu8NyL2w9LX3t2nj
09nfns70mWZGJpZfzu3C2ChbCND/a4fLAVJFqdLJBe3wiwATOAzxeVK4xfkC
r373U5lzR/zT5vWlLw6Z/wLqUTZR
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
/gAjPzy87ZAGWsDX/wFB7ivi
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
u/D5G+zCkoRw8181QSKE
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
g6v3X905CiA=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
j5YPL8lzNw9qCKzyP4Vf1as=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAlbUt0WBoecEidAATVNSzFNTbHSSm85ZGaaOGRqCgmIIDMczjzDOQzn
MINT5fd17/2bd/fd87x7PXs6+13v2muvfqt3y16lUCiC9cBsWaB/BQIW2NwK
BjueoNPhsZ2uekI2hy3wwloNJjtAGwTtn762R2voNxgeGQxDOt2jbl2fvrMX
2B5Dn76rR9PRpelQ6zr1YINON9DV9RCgs3NAq33Y3t6rajao7utbmvXNTV0N
der6upbGhpaG+ubamobamqrqPx4pqqqqqpVVSqVSoQQTqupatULRqFQ2KWua
Fcp7/4dSUVtT3VClqAWdKuW9quo6gPoGVU1tY21tc11dS0NDm0qlbWrqAFbV
om5t06o1urZ2tUbb1dml7+3tffTP92zK9OLl3OSz6dHx6e29s8Njn/084vJA
viDi8yGBAOb3o14vBMM0irJRmEAxGicoDKcBGDbOciLDCmJCBojFJEkqpVIF
gLSUlzM5Sc6m0tlEKplKy9lcAfRTcqF4eXN1+xcVK7HipZT9FU+WU5nrjHxb
Lv3OZn4kk2WCSASDpN0eWF/f2zR/+fR5F1jb2QXJiCGI2D/8fnTi+Hro3Nk7
3d61Wb77whAXF0tOV3Rr2/L58/62+cBsPnq/tr1pPnQ6w9niryghRTDB6cVP
Tn0OFwRw4cdJVgbUCCGeuaHN7WOr3W+1uV2ecDCCc3GJ4aVwlPYGUACw2XkB
h6AYTsm8UC5W/ut0o7v75wfH56f2gPMiGkF4CI3vHTlF+RrjsrYLpG94ql7V
q6zTKKpa7rd2L63uiOkKxcmfd040usGa+rbqunZFtWpweOrcAyfla3D+g4Hx
uiZtdb2qrkk99GTaYvMJqYqcu1v9eKDVDd9r1CprOppUPUNjc+4A5fSSovwT
oTLHtqBx8tWn7VOLAzo9j3zYPBwwmhwXcFyqMGKe4GWYSvjD9Der5/HIzO5X
O/B/5cO+cXQOyCFjKTaRoYVMpvQ7nb9LZu/AmfHUz5hYYfgCTEvTs+/tbiyE
JmmxFKXyyxsnQ2OvnX6CEsDJxdXNk84Ho2DIJisoK2GcDJCQLkE0uvuerK5/
Af6/WzEbx15yQoFPXzGJMsbmqfglzpUJ7opP/s0l/uKTZS5RQun0g6Fn3+z+
MJkkxWIIk5/Pbxkn3vpDbBiLUfzl5o5TrR858+F0shjABISRcTb7Rx2Z1hiM
QDUYPp1eHJt6J0g3wFuUybGJW5K/JvlbRviFs7c485OM54TMrQ+J6R+Onzgg
bzTOy9dROjNhWpueWcfIHEYlUbayseHQG8bPPQgtlXyECFM5GEsCoggqaw2T
5n0nQub6Hy28WjjixBuCkSi2hFIlnL4BovBYmRZvcP6GFMqp4u/vblzTM2Fx
YnYvJWR/AXXDT5eHR1cCIRHEJIRLy8vfHg++BMmDp/JoskILVxybpYSiy59U
62ZOXSiIWO/Agmn2SwRPJ+VKIv0rlvibid2hdBnjSyhXxPkrOn1Jp69tfnp4
asnhZTyQEJN/hAnZNLvX0zc/89z8bunr6ufDjxtWk2k9jKR9eHrzxPd+w7K8
ZH6xsDa/eNrzcMEXZRE2ZZrb6Xv8pn9kfPrF4tulL/ZzVpD+A7ggKgsSAOYq
EU5GhGKUKxyfY8cOxBsV6cRlhJTAj6qOCUVNj0LZoWxsu9egX1k6grCM1ctM
v9u919xXW9Ne1dhZd39E1zsXxgUiLlnPiP6h141qLUj75tb+vkdzvkiKil8h
bA7oitB5NJ7HhFKYzjoCnN1D++AEl74585KDo/Nr5jNvJGb3Q0d2b2f3+Ozc
JkRkwkzehWQvwolgKAZWlz9aNYZJPxwjYnmELuBciYwXUDJhPQsZ+idPHDCX
vI4yEsTKMJ+PskVcuHlvds4uHlmdrDuUhOnSN3uwWTu0uGGB6DTCi36E7RuY
efn8TwzdcOIskvFE0jiRA9RLaxa14aknzINrCiEZAH9U4ISsJ0R16IzfbBAj
XkaoFMSlI0wmypaZ9N347Obws7VTFx9AskTs+uv3kEpr/LTrCiKpABIHqd6l
H194ewCTxXNI8KL5IJqLwKkgkp5ftHT1zMJUBmOLYTQfJUoBOAnKqcUOt3c+
sblJnK9gXBnhyxBTivIlcGsjprXBpyuuQMoXlbnU3b4l1NI5unccipI54KfD
i7S0PV5aOYkSBS8mX8BZPywFwjFXgJ8wmQEXyhTAK/BFMoFoLogkQNnZ3ne3
aoz2CwplSxh36ccyIHp/rixWGZ5aMU5/sF1w7pAIVjcOXOru8XWzEzwfBJdc
gEs9Mjd/CFNXYbKCxH6AlwJKUJTOPX/zZXxmC6YLwHmIuKKFf5PxK5Ivrm/Z
9P1TQGOEyIapHGBB4lcQU8Di1/MfTiZfbW3seUAMwUM4cECDY290fRP9QyZQ
7noHJ1o1TwwPXq18OrO6+aezm0MT8z2DIw+Mpq7+ZyCFKOEa0G0fhPuG3ml7
TR36se7+6cEnrwm+DHwA6RSmCgEyB3KDEG+DRMHuE3ePIBBDIPl/6XIRwQ==

            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
oXJWl7S2Q7lDKmiN/wNgZ7Vz
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAdTFEkYJQcR4QTJKFFQRFBBUZFTwACKJyjoCaIgK7A5h9nZmZ2cd2dn
c4BNhruruv94H3VVb77q7t3q1+8Lb3DfsvGtqqKiwtEAYWPP88Ru3/O9bYXN
ptlxfGjWHayYnbpDnX1uvxoO2+Abge9s3dsz3tkx0nZxqL1tuKtrpK/vak/X
cF/PaHfXwIWm9obaC83nfmtr7eztvtzfM3y5f7Spqbm+7nx722Bzc3fjuZa6
2qbqqoaqyvqa6kZYVFbUAmprztXU1FVV1VRUVFVWVsMCUF1dW1XZUlFxvqYG
HgYPbaisqquqrofb6usb4Z+NDc11NfUNdY31teeaGzubmjqbL7S1t/ddbB+8
1Dnc0391cODqyPA1wNDg2NjVG9NTs7MzDwA3J+9M3Zz5fWH5/tzCo/nFhw8e
Ly2+MJoDdifhRTgPQmEEj1FcgGR9KBGkOZLiKJoXRZlhOJaTBT6hyBlBjgpy
XAkV1GgplipHEyfxVD6RLgCSmWI6V4aoxXP/n6RShUymlM2WC4W/CuV/MEIj
mQQvZdRYPhzNC1qRFNKMkqHFFC2nQ9opHMYSZU3LxKI/ItpPXopxQlyUy5xQ
EOQsJSUAjJLi1awcyyvxAkQhkuPCmVCsIEVOtERJVnNKNA9bD6oieNSHRQJk
HME1L5NAuJSXjmFcyhOMmJz09p5tc9vwYfvg4BDxImFRyVFCHKdyBFOgxYwQ
LzORPK2eslqBixYhkqFcUM6QoYycKIWT32WtAFDiJdjidMZkEw0W0eFRPajm
IuNuIu4Kxmi5qLczT199bum41tA8WNPwW13DldGxBSfCgmSXLxFkSqSQRZik
l4pDxMUcHS6SSh4TsiiXJkOnTChPiic6I0ZLJ2r6Hyn2A2fTr98ZF5Z3LS4F
o3NmLGQjgTHqoePHLuba7aWvejRAJ/wkb3UJE9PLBwYXxkYeP/uy8d6ppf+m
I9+JUDGoFCi1zGg/YEuGSwA6UuSiZS+hzS9t+slYNPevnPqLFPPzy3/efrCG
kHH4yUFF7WTEFlBo5fTTgXPk+gODGae5FBOO2LxSW8/kvsGJ0KHxqZXXmzYx
WmIjv6jQd1wsAIJSEUAqZTihwnkl8ctkZ8YnFpCAqiXPdAWY1OTs6t2FdS+h
uoOyl4nbcNGOySif2vpsvjw66/JLGB0L8CE7orT3TuodiBPjeocfbH3ysVoJ
E04wAfKWx8XToJT/n+5sLWdE7cfOvrd/6C50QjjxEx7vRrWxqWdPnn8i+Awp
xp101BoMQwL9bGp187B3eM6NxXEu52MiBrfcfWXW6PC7A1zf4MKHLzQf/fuM
iy/6mdMAnwMKIAVRUDgon5r6d/296croQ4zOEHxWiPw8trHT99ZfvD7y4prT
L9kIFbjspOZjk8/eHozfeQ4UCJN2BNUjuzQ68cTmDboDzPjk6tYuGRCKPjrl
ITIIfQKXB6UTlDvxszk/l2SUAikWP+757zzcoKQCaBS1X0dW6uWG8dNB0ObV
HH712M0afYI1oDgw9bMefbmlNzh4my9kx0J2X2L9vQUhJKub/OOd7cgcAgpv
MIkQp75gDm6G1iX4EiV+J4QczmVQOuv0J7d2oZeyUCloDJ0ZX9s06m2KyRky
OiVrIGRBFYOXN/ukfRN+YCFcAdXiEQ8dlNGh6q08KUT3j9xfdCRCnJh9ihON
WtzRtx/d8E43Ft3eRx1IDGPTlHSKsSceLGXzqVz4jB107ejcA+OP9gy0h0xZ
A6reJVkQ1YZqVq8yPLG4uLrnRDSUTPnIyNLK8fziDsFF32we37q37gpoKJ0m
hMKRRZ6cWYeyAt3kzJtdHQ5jBUMHDbnwYm/5Dx0VKsHEQef8uedu7ZrUGVmY
X5NPMHlDVn/EgcWAq613+snKLkImUSqBUNrQ+OrErZdgGs9Wvw6OPXEGQmAs
kJldHdE9MI/SSatXutR3d+fAz4YLrqAGhRu68XRx7SsdLgf4DMR3u57Wzpmv
etbikmxeXm8XzG7JiUYgb71Dt19vHvqCqt0noKTW3b90f2GbFhO/L+2OXF9G
6TBOJwN0bOODGfqT4FPHNqzz8i0wCrBEMBCEyXYPzz/fOOK0n4R8CureffZf
6n34zSRYPaId4ezIGQuIsvnk1s6xd9smZ0A2OiiLm+3qW1xe+UbyiXsPP1we
WQgKGkpFcTb17NV+39AcJWY+f3Nf6ps6MGDgftCTkB/gevXeRCpFyCEMxdoH
GLdF0IXiGkYqXjxr9URcaEJnotu6p3RG3INFwPdA3Z17O6/fWjEmOffo09jk
khtng3zcE4i/WDOM3VhlpKLOQHT0zh1bBIxJwQh4qfT1mbWtPQ+wnDmkUnyz
4+4ZfNQzMDc0OjMwMjl2c3XljR7oIJnjN5c7+qfBe1s7AWOj11693/ERYvbj
l2Bn/2zjxe76lr7zF2909N5//PRrkD21e9WJ6bWW9luNLaPVFwY6Bu/dnFs3
+8IolwWZjPr9P44+aFM=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
5gEGBKeE6/8B3SMcWg==
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
w/67c/ceLVtdUoSpAIvgzv8LGDw9kA==
            "], {{0, 19.}, {36., 0}}, {0, 
            255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
TAQc/g9bWh2R
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
qSNYPwjIMGvGlfJ/AaDRNH8=
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
37d1DnX2O4cnlvdOGJyrxJgzSq79D3Wi7/8=
            "], {{0, 19.}, {36., 0}}, {0,
             255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlUwlXE8kWTiCCogMqkIWwSFBZngyKggiyOCKKEIEgi6wBskACgSS9r+kl
3el0ts4GSQjM6Jn3O1/NvHOq6ty6XX2++33fvd2H5w5PjU6nC98Fh+MA/RAK
HeCrD8FlLRA+8QbcrvkA5Pa6Q2OHtSDZDPZTsP+J29r7W01PW1tsRqPNbLaZ
TN2trd0dHf3gNJufNjVZjMbO5mZrm+lJd2evxdjV+rijq73X1NJ1r+7Rb/dM
4Nr62GpqsTb+1nzHcM9QU19rqNPXGO7U1hlqau8Yagw1d2p0dbW6+7W6e3rd
Q72uUacHhTXpdA90+jpd7QM9CGoadboGEOt0htr6BoP+bp2hvr7mbr3hfl1t
Q9OD5n9Xa/Nj86OHxpZmi9FkbTW2tVm7LO3dT3r6emwDtu7nvb29IyNvR0cm
3o6+f/N6bGf/4tANuU/g0wAZDEcQPILTEowKGCEhmEjQEk5xBMMRBMVxAs+L
sqQKYkyOJZKpnCQnlHgikUwnU9lUOhdTM9lCWU0VYmo2kSj+m9TiajKXL1Vv
flVvfvKxopwsJbVqSvszk79N5260wl9qqiopZZbP+c/JlfUdx8bu5rZzY3vv
28q60+0XYimYiKztHC6ubi/YF1cc3xftK7sHLpTgZKVw5IG/rTjtjnW7Y21p
bXVuYcnu2Dw+RTP5KkLFz8LskQ/acfoPPUHXMXQWpCNCnuULJKOFYHF7//jQ
c757eHx0HDgN4ygjick8LSUhTmFjWlLLaIViKnepFa/jqZJ2+XdUrUSiV7ya
jWnFdKms5ks4lzjyY5FYgRbz56g4NbfS8LD9H3fqGvX1ze+m7RibjkjFucXN
xtYO3d37IFn3wNw7OOH0IZxSBH/RUkFIVDgpEVWyJBsPwhwbzanaX9H4DVic
XBXiZTldJvksyedhUqPFIkwkRbVCChnPKQFcc5+Gtg5O+ocmz8ICSqVfDE9t
7rshijkLc24/PvDqw/KGN5qqRoDCaoWJlwU5p6QrRyf4+z+WKT6rZH6yUima
uBUTv+T0T1DM9JcfXx3eMJnllOszOB7EExirUUIhIl/ikfj3LY+546XHz8JE
ytL5an55S4hnRKmAYLKl/T9fl51ysgqqBe+paJGXboXYzfYB+nRgBo/keKUS
iVUE9UaIXSvpW5JL9/RNrG+f40yeFa8gKgdRaYhMokwKeMfFsnaHu8Uy6PaT
Z6GY0Tq0+sPNKzlBLBJ0ytI1uOhwRpNlRi4y8hWtlCLSnyRXcmxemDvfiOoN
IAsKAJ9YqcjHLy+waHvP610XEkSTvHINsTmEzaC0ilEyWASfnJ0/aXsyFsTF
44BktI6tbvlY6Yrh8iieMbUPLW0ecIksxmVI6QqLFhjllhJLM5+3njx7J6k3
JF/g47eYcAmAFO360Idanrx0+WlfUBTjP4noZZhSGSkHGDG8ijDq1AdfT9/c
Bc47PUyzeWxjL0hweSFadvsiVtubbZefTWYwMQ9xeUQqhpkMHb2as+8/G5gU
YhVavMS5IiVXyagWy964A3T/8IdDP3GGyJFYFeXznhD/+dvexIeV2c/r03M/
Bl7sjIxvgUbd3MPauiZHJ5cmZzemPq5/+rrX92rmFKUhRg7SSVSoBOkCwuVY
ubx1EP68uE9xecALZfO4WCaFIugfhNEOfKTrjPFecInCf+FIfnXvwtw9XHPP
qjO06A2mxkfj03NHgOD3rZClc6KhyabTN+sNrSCw2oYRTkYiCsIVwmwJ5kpw
JAuwjs+5MKZyUgkoAHjh4hVAIYUrVr4+hRRfKHqBx4DFfiRxhiW8IekMjp2G
o7uu0xbT2Oz8PsEpdoen+9mM041BeAIi4l+XjlqsgyFKwvhUmMmj/E2YvaTk
UohIvh5f3D2Eab5ACUWEyWFCiY5e88qvzX18dGptx4WHyAQlZV3n0SCV8SNx
gBVAY94AZGwfnfq4AVPi+LSj+9nUBSLRQg4hUwDL3DUMsyoupIloBeYqAAvY
Dcpu636970J5uQywgIbALyxSYOWbt1ObfUPzR34ejBWfuAJVhWjtBJJAAJEp
lw9r63g/82kbY5W+36eG39pRYA2dhIjMZ7v3kWmIELKkmEP5IkJfnhMJOlY+
OKGajH1HxyTgBUYMSAf8AkqSQnn43eqL18vH5ypEaWAWwHsfrASpFIAOYuqe
C2q1jH5ZdAdRwdY7PvPpB0wqEBE7hdSpj87H5mGUzQYJBUxKkMriYhFitR8H
0ENT/0mAIyM5lNHACADWWCRHR8tDo8uDb1acXiGIZ2jp8pzMwXQ+iKZhPHsR
UoE7A78vLCx7ltaOXo58+WI/wJgEI2ZhMje74LXa3ofJFMZlEaZA8CXQhAAO
8LL1TwAsoDPoDYIHwlZAe5PS9R+L3sHR1ZUtNIBpjFI5DEjzK8f9r2af9k8+
75tstw03ND0bGPr4aWEDxJ09o929I89fjNv6poDyM1/2GakEZj9EaCE8B8QP
0WnAdGXTF0QUgPV/vyAWzHiVS/y8IAq7HsHpAy2RJeXL/wH1kjbC
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
SF8f2COHdgFkhBJL/wOzxBgH
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlUwdbU8sWVbqNLt5HkSpFQEIgXJrSmwpIUVAuXSEooQSSQEgh5SSnn5ye
nHQCCWAQ0U/v33vje+fbs7995puZNbPW2qUr25NrCbdu3dpLA2lyWdejVi8f
TmWCn7dbexvrW58+jmztf1r/pG5dSQSTOWBUgPGnrqiQ5RdWFxfXlpTUPXxY
mpVRVFRQU13ZXFkhL/hPZU7W47zc0sL8qsqypuqKpuonstLHVX/llmWnF2an
F+dmVTzMLs/KyL9/Lyst7W5KSlpy0t3kxPSk29m3byUn3k5KTEhNSryTcDs1
MelOQiK43N2klOyE5PSklJzk1JyEhLvJKffu3ctJTXuQdic9PQMU9+8/yMrM
yM3IyMp7WFCQX1xUWFpWWvm0uqmmWlZVXV9XL69/Jm+UtzQr2kBu7+ju7hn8
3zc8Mjz2ZnxmcvLD7OzS+w8LWxrz4ZHTaMHtDsYBcyjK2O24w0FCDowgWYJk
MNxFUixOEiDTjMiwoiD6BCHAMBLHe0QpCIJ3+72BiOQ/AQEKwRMQRK/kDbnd
J77AZSAUj138isV/cFKU4sO858ztO/cH44Hgjdvz1Re44sVTFxM2mFDlZ+3S
6ub8ytri6ub6F61aa7E6aAQP6o04qFXbJrBgY1OzpzWiBOcNxPQGeHfPurmp
3dw8WF7ZX17RrqzqjMd0KPLDjnkhzGswu7Z3rCBU23aThcPIsOC5RAmfVu/Y
2DxaXVdv7Gh3tFYzxBJskOROEPJEZ6C29q3rqqNtjc0M0Tjr94Quw7Gfn3eO
PyztLK7srm0c7GkROxK0OUNqHcb54yhzZoLcTa2vM7OrklIKktMKikqapmeU
NBdhhbNDA/ZM/jw7rzQ181HmX09q5b37BifrjW5pYHnrWE7+04yH5UXljS/6
p/VmhpeufCc/lFuGBkVfdl5xelZJweNGRfsbgHUMeWjpghQuVj8bWzrG1fvI
4ZFr/5CYnd9pbBk5MJEu4fQPw0IIY3xHVvTIQrV3jy0pv7jE4PuF3b7hBSce
xLkwxpxgzCnvvaHFK//p78DZL853ATbSYsyOBboG5rUGwYIEAJYF9U7Pqdpe
TJjtIidewmR0ed3YoHh1ZOVo9znKBGnPKR+I8VLI5mTBG1eVX3CaHxz5MDSy
AHj2RK6F4HfOd0MKVwQfZ6Rryn0hhq4ZKcZ5r5xERNE5q9p3QcQpH/phw70j
4/OdfVNHVoZkowR/+c+KQdY8qjFQlDvmdAWdZAB2eVk+DGNSfWOncmuLoLmu
njfDLxcl341LAlvOKTEOAsChzAU4AXDFeC+FwI3GyMn+nto94ExwmAv+tKHS
wNjii4EZlIqg9CnGRt++17Z0zOnMHOWLQ2zA6GRRUuSZCAR7qp617hwcISQn
bxr6Z/6Q4r8Cn5BsDGPPEe6ckK5I9w3JX4N53H3Ohb4rd6D65jGNQdAZATG/
gQ+7hmdaeyYNdhFlYibEO/Fuv6F5GnZFMF8U4k8IzwXoCIoM7B0i9X/3aUw2
GBdl8qHRiU0nfSl44pz7D4EAy8FGETaOs1eMJw6wKO9XtZ7qfbmst4rAfrzv
2gyLvSPvqxt6Xk+tjU5tdA8tT81qR0Y/E0LMiEpz68bn/Qv18kF5c1/34LvO
/gmTk4RJaeTVx7rGidrGCblievDltmqXE4O/MeEScV3+EU44I9xx0nPlpKKA
RrWeNkNeSriwYr7B0fmCMnnmo6p72RVpGTWFZZ3jU5soe7J3THe9Wi2u7M3N
q895VJ5fImvqGARYOBNSaynAc2FZf15BR2HJAOABOI1wXyL0OXCI0xV2MlEA
bUXDIFQaXG/hBP+1zszUyHqX1vbtqGCBXBs7tqq63tHJNSvig1xRoz0MYRGU
lI4dAvB5zbMesIzgQwgVw9nvmOsKSLOv52QtY3t6nPF8dZLnDioOM19BAO3m
P5reLWiA9BoDLoV/AtCymk6AZYEZGOO0R9TThr43b5UmSDQh/iObdOyUHCjr
oEKTM6oG2YCT8NpJyU5FrMiZHT0lxXOtgXlS16XWQ7QnCrtiMP3t/1iM71fX
4FJn/5zB7tFbWHfwek3lrG0YVqqOcSrggHmjSaqs7Zlb2kPpMGg9oKkVdkMI
Z3L4B1+uKxQTKHUCkcFjNGKGzxzomcv/7cseWlbVfmjGMNoPk6codw1zccAJ
wl22vHg7MPpRZxZAUwOslQ1HefWAUmVDiZDVxh/q3YUlbQurOgj3mWDOinhs
iAjB4oHV+7x7sa11xomHwKP0UNgAnTrQGDhwQWmpqOywwhwphAGWnYzhnjgl
fXPQZ209s0PjazsHBFCEEqLT86aK2uG5RT1OnjlRv1YnVNcNTc6q7XgYtAPJ
nYKHkK6zYyw8/m7vRdeCE4s6mDjM/+sgf6HkT5T+tvgJqm98bYZ4io9AWBgT
4k4u5qAjKH8x+WF7ak69rcPtaIjgYus7RK38dXZubWllW3Vte92zoaLS9gbF
6MzCwe4B1tk7Wd/UV17VXVLb1dT6dn7ZhDNxG3XxbhUqrRl7kKN4kKd4KnvT
3b+IUEFOjOLMOVDK5oqgQtTlvYKIE2D4lc8WGxIEnv8v8uqRIg==
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
Qxuz
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAlXE1sShoCiIwIDBDBCZAtieCiMPPAh6iAgiAO4IcsDQvY9nXS60/ua
7nTSnXT2FVDP+EfneqZPdZ3q2/fU952qr2rCAX32GNra2uJ3gPtsx9Zh2E58
6QMfh5G43xtxu95HELfXDb9wdIDDAfBOg/d3PDg8Dsw4MgEMBCbT9MiwZXDA
YhycGTXNjpoeDw1O9PeZ73QbH4zNPHxkHTJZ+gYf9Q9NmsxW4wNLf7+pu3uo
s7PH0H633dDVYegytN8G1mno6jTc6mg3dBjaDO2/DQRtnffb2u78ts777cC3
32rv6G1v62kz9BoM3Z0d99rbbv3fg1S3u7pv3+65c6evq6u3r2/k7t1/9t03
9/eN9dx/ODAwZhx6CKBHHpiHTY8s09ZH5qmpyccWy2PwzM3NLS0tHdu8dl/U
H8XDCA0TAs4kETyZINIhiIURnmJljORwSiJogeYkYIKkZbJlQcqJUiGbb+Qy
dV1vaVpd0+v58rVeutIKNUWvaFo5myuWK818vg58o3lz8/2/glKlRV1MV1LZ
hla8yRSv5ey1mv8lKlecXIXxFIymfH7GHyXPndClB4bQZILOopTmDXHH59HT
U8/Fhc/lgf1BLEHKIA9KKedu+NLtd/oiF47g8ZnX5UNQQs4WruNkNk6q3ghr
8ySCsBhGUiFESbBVQfnBSLUIKvshzhPk7H7EGUxEcZkUirzSIoUyl2rI2R9q
riam8plcI6lWlFxTrfyUsk2Mz0t6QSnU5VwjU/gJLgdhiVeaCbYMkv+1/nV8
9mW/ad44vmyeXf98gmJchZKq2x9PeobH22/1tHX2dvxjcPbpqt0bl7Umzuq8
3KD4sqQ2BKVM8ro3DOpdTWZv+ExLyFxz6byglsXMdYKuhOM5GC+wcgMm8wDO
H0vZvLQjwB1fYrufgi/e/B2AFZzPWZ+vnnuCKJuEKdEZii+ubuwfXaYLVxiX
xVidTpZJqZDMNT0Q++b9IZ+qZUq/BLXJpZucWsiUfyS17y83Tt/t+UGhQBxE
ZAhTvZCIMgU21RTSrYPDoOXJW5efiRPK8Ojkmd3NyxlZryNManT62caH46T6
u4Z0skoKFTZzJeRujl3I/PI2LVcosUQLFUm7Ao2T1BZO1yemN76d4FzyWtau
4mzBBQn+323KYFwJsP10BFnm1gMxIRBle41TdndESOuEmEFZZdA8u3/kAcxD
WCZCaDiAU1qJZOXgLDyzuCGoV4AAl6pRUplPV5PqNYRqQ6PL7qCcYAop/SpM
qg6I90WVYCLLpL+Dw529oHVhN4ILl3783oDVCTGMUqCTGZRJD44+ObT56XQt
RGSjXC0uVqlUA3Rna88xt7gtpr9zSosQy6zaYuRGuvDrzIUZxxZcIQ6msqn8
zxCbdcSkYxcZIfJADzFc2z2A5p/vxWj+2A73DS+deRlEUFlR84aZYfPChQ8h
UxUflvUTBUgsJkAxpfrOR/eL1185+UrIfKeSNUCASrV47ceJG51b2QpiMsLr
dLqBSnVXNLW15wKl2//i3dlzftiHNnbOcE4+tsVM5vWF5Y8rr/e3di/+vXk+
ZlkLwDLCFcN0OcJUYmIJZoqAoTPI2r0MSoG4RIpNTKwRQoUUqwidv/AQdj8N
VCHrP6Jc6YsNnXr69m6v5fY9891749OWze3/ODBWOjyNWKy7RtPKrW6zoWvM
+GD54eRagi2CFoepaoQphVkdT9ZxvnpiR0JxMHplnC8DYSNcGVwT1RuACBQO
GoQwOsDCpPp5gHGEk8GY4oPECxc8YXm7tn6EUMlXm18t1u0zBx3DimFYfrfr
NI2/iBHZGK1HiGqErkWYAq3cxAjd+q8tmwcHwohTOsqUEkIdSFRSfx4chl+8
/nbupGJYDvwNkxrQRhDXAJkYk4sg/OjYX2+2/iZE7dnyzsTsJkwAqkVKKG6+
t/WPPAUMYSbvR/MBsgjxJUxsBOPp3mHrhRsFgvdFk4RQA4eUWGWSzZVXh0+X
9l0BCcZ1sGd8aNoeEdywHMW1EJoCy2p06tWHz644ozxZ2H325yHCVYOJNErn
196eDo4+x/himMj40RxoGSyWUK7hj0ndxpkLT1xU6yBDnCok+CbQIZVsWP7Y
sS7ueyNanKwAiQYSuhNSnBHJA4vBOGtzx0ZGVw6++cF8TT7eXNu4BP2Nkiko
kVlc+TRgWgItCKCKD8kG8FKYyWFC68SeGBx7eulDwZ6JEipCFyn5JyZWgBSn
5ncWV4/sASWUyDPpljuq2wMaxjYILoczvMsXezS+9ulr/PO32Ix1+/2ehxB0
XqmTfO3NO8fssw84XweTGMZrXrgQJasA68iGTP3x0hHAEDoTpzUgFZiuglkA
lXy5dTm/fPjpFIOIEsCyBdTl144p67uJx8+nrbNTM/PjE68Wnn9dWT158scH
0/jypPVP88zixOzq7LP3OwdBIOkQlvPEigGkbg+pl0HBFRJOnTAAAgZTahhV
IbIA0TmIKvoQ/cTFH17SYaII1sv/AL60NYI=
            "], {{0, 19.}, {36., 0}}, {0,
             255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1: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
            
            "], {{0, 19.}, {36., 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}], 
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJwlVAlTE1sWRlkVrVFkdFQeu8MiiIILouJjERARAoiCr0RAFtkhgSyQtdNJ
r+ktnV6TTmchCUQWlzc1P2+uNVXfvXW7T3d955zvO7dqbnNs8XxOTo6pCGxj
s5Yuo3HWNn4FPExsmJaXNhbmX2/sLCwtGNvncsHLa2DVgvX7XFndUl3VUlXV
XF19r7KyqaK8pqa6vqa6saaqqba6uaqyvqK8trKitr6msaLsd+iPstqy2zXl
5f8uKblVWlr2z5KbVy6XFhVezs+7CJCXfzE378K584W5ubl5eQXnz/3GuZz8
nJz83PNFOecKCi5cyckvyskrzM0ryM0rAl8WFF7Ky7tUVHQlv6A4v+BiQWFx
cfHlCxeKS0uvXy25fuNfZbduV/xRVt3Y0HK3vgXs9XXNjx89a21rf/T4WfvT
zq7e1y9edr7s+rOnt2/g9ZvhkdG3w2MjhrFts23X6thzejw+v8+PwiiBEowL
IiAf5Ud5PCDQnExQIk2zGEaEghIXFANMiJcjghrjxEiQlxVVB5BUPRxNarEU
CIUUTY3qohpWtCiAFj9IZ0+OTr4TbISXErwUU6IHcjgha0lFO1S145CURfGo
w8XPzlv+mt6cnV0F+PrVuGdHiYDsRYIra9bpuY25uTWAL4ub2zsOkJIUPrDs
w7MLG5/nlheXt1Y3LEsrpsVlo8dL6/ETHyEzvG40ezZNdpPZtWXxuHxBKpgO
cBmESEFIxGSl1rZho9Fps/k8XkZQUoyQZMU0r2YBtPgxQDRxIkTSnJyIps5Y
JcFHUpHEdy35Q0/9kqPHECrZXLQQPiKYhMsX6uwdu3G7rrD4xoWr5beq2j59
seHMEUanh8a+ltW0XSypKLp4vaS08t79Fy6I5aQMFQJcx7x6woWSLJ9ACcVs
x0lOFyNZQctK+rEYPgNQoj8xKu7DdZBzSDlDyCjO6BAq2N2kwxMw7vn63n56
3j3p9ms+ItbR9e7LqtWNcTgp2faRxx19S+v7oBxGPsKDSULICOoJwKYZNXxY
5uRsSDsNRk859ZsQ/qHo/6FD2fGpzXUT5ieTQvgXSsfdPgkJRHBGo0OJAKuM
vZ97+GTA41Wc7tCDh/3bOz5eStLBsBdh7rY+n183s2oaIhQ3qRBimhG+ydG/
P86Yuwc/c8opIx3TygkbPmPlEzH6y+FTOro/bFs5mDgQtJ9eMuJBFS8mw7gA
YSwjRj5OLz980ocQonWfrG98ub2DsFKc4nXQqIamF1+WdzkljTAxXEgScooV
T0Pqz96hLz1vZgAXF/lJiMeUfEqGUnL8+7oZufdkYN8reAldTfwXZnQ3ouxD
vI8QEZIhgtqb0dmevgkMY43brobGgX2XwshxOhTz+PSGu90bRgfQCAkkUDZO
SDFaOGTF486eqe7+T7x8ijMpWjyh5V+8klL0k6U11/1HA06v6ICEcOxvmIva
EdUX0FFGJXnBS6qvBqd7+scpml1e3r3/wGCzqwirkHxsZZ1qan5ttsK8cIBT
WT8VQ0Ma4GLEo4G3M8Pji0A4VsqC7mH8USAYiyRON3agzt53QCMXLEmR715G
NzqCUzN7I++Xh9/NjE5tDY+tj00sYiS7ZfRUVfW0tI529k92D00YJoxtTwwu
L+XHwn4iA5MJ0BOcOyC4pMlK7O4TAXAOpjA2hfEZjNVE7QQmIjNLNouT2YdC
UvSHk1BXd6nmJ4ZLpXWFV/8o/EdtefWL2XmTH6OWV+z1DQPXbty/fL2u6NrN
azfbWh+PIJSEUTEYS/sDaZiOEfyBPxAxWlEElwk2hlA6aJGPiWOMDuAjNaCO
zc3Z3EFQspfSLV7Z5ovYEdkKEdPzew0t/ZOfl5BAoG/wfVv7kMVJOWDeibJ/
zTlb2w0EGyXZNExkICLj5zLAA15c6R78YHEQtJgE/vSzCX8wibOJoPJt9uve
+09bW2bSi8V45QegMLlCDizqIlQnwe+5habWwamZRRgj7zZ3//lqEmFkmFA9
hNj3duVRxwcIF4GTHbAObOyhYrR0aHYEGh50glkOhHQPLgMuhD9AKC3Apzq6
xt+MLTjhMOCiQ6cQpVl9kgWSPJjmxiSzXWi4NzQ5s+7w0rV1fa9HFghedflU
0K7ugZXmhwZQCFAKItNuMu5lEmBq5tdcd5o6XX4J1IKxSYTLwEwKYSMYF2t9
NjRgWNjzqG4kwUq/nJj6fy4Ij0KYurYVqLzz6uumx2gja+sMU59tGCdD/qgF
EhpaxlvaJwLyoROLeoikk9BcZIQSstNL1prG5yBPoA5Cx/HQIaWc4cG4n9Yf
d46+eju3aweTe0AGzyx+dQ+O/D4zh+DWWjfS5TU9K0ZsYQXt6jGtmWg/LYG7
0Y3ExqccfYZVjE/t+TU7qkO07iCjwAmrO77OVxNuRCS4ODAeKWZhNokyCUrM
GCbXRyeNm2YG/M6IP7ed7MjHrQdPh5vbesCNBIxxo6zjZf/005efq+68u139
/M69R433++62DXb2Ls6uwkALF3UAMxk7pjhx3Y1GIDyyvoMAFiqUQZkDL5UE
UV8gySnfgVfXd8mlDRTCwdSf/Q9nJLEL
            "], {{0, 19.}, {36., 0}}, {0, 
            255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSizeRaw->{36., 19.},
          PlotRange->{{0, 36.}, {0, 19.}}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.926605678897298*^9, 3.9266057248666134`*^9, {3.926605831446455*^9, 
   3.926605844785308*^9}, 3.92660590406386*^9, 3.926605949098161*^9, {
   3.9266061749686112`*^9, 3.9266062152796183`*^9}, 3.9266064384063253`*^9, 
   3.926606607694276*^9, 3.9266069662667575`*^9, 3.9266072778693895`*^9, 
   3.926607401344831*^9, 3.926607654039076*^9, {3.9266079016792283`*^9, 
   3.926607932476842*^9}, {3.926608049864786*^9, 3.9266080606548424`*^9}, 
   3.9266083134358034`*^9, {3.926608408185783*^9, 3.9266084275005465`*^9}, 
   3.926608587256486*^9, 3.9266086877465477`*^9, {3.9266088492362585`*^9, 
   3.9266088590607057`*^9}, {3.9266088911644077`*^9, 3.9266089098784275`*^9}, 
   3.926609135440962*^9, 3.926609178841306*^9, 3.926609214965289*^9, {
   3.926609282677844*^9, 3.9266093326269255`*^9}},
 CellLabel->"Out[6135]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatFlowDataOriginal", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
       "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
        "\"\<\\\\heat_flow.csv\>\""}], "]"}], "&"}], ",", 
     "\[IndentingNewLine]", "loadDayStamps"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.925988919373435*^9, 3.9259890219945683`*^9}, {
  3.925989294842729*^9, 3.9259893310958586`*^9}, {3.9259901842672005`*^9, 
  3.925990185178087*^9}, {3.9259910587689404`*^9, 3.9259910886032476`*^9}, {
  3.9259919301350513`*^9, 3.925991936939896*^9}},
 CellLabel->"In[82]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatFlowDataNet", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{
       "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
        "\"\<\\\\heat_flow_net.csv\>\""}], "]"}], "&"}], ",", 
     "\[IndentingNewLine]", "loadDayStamps"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.925989335339324*^9, 3.925989341252754*^9}, {
   3.925991091675246*^9, 3.9259910943459015`*^9}, 3.9259912208488703`*^9, 
   3.9259913642529616`*^9, {3.925991939327469*^9, 3.9259919436306667`*^9}},
 CellLabel->"In[83]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"heatFlowDataOriginal", "[", 
              RowBox[{"[", "day", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"heatFlowDataNet", "[", 
              RowBox[{"[", "day", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"1", "+", "cycle"}]}], "}"}], "]"}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "->", "All"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"day", ",", "goodDays"}], "}"}]}], "]"}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.9259893529914694`*^9, 3.9259895005415983`*^9}, {
  3.9259895576443224`*^9, 3.925989559020027*^9}, {3.9259901929262886`*^9, 
  3.925990253888524*^9}, {3.9259902976781044`*^9, 3.9259902977413597`*^9}, {
  3.9259908540578456`*^9, 3.925990855813833*^9}, {3.9259919663301735`*^9, 
  3.9259919681667*^9}, {3.925992000322381*^9, 3.925992002017271*^9}, {
  3.9261471355049934`*^9, 3.9261471363126907`*^9}},
 CellLabel->"In[84]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"weibullParameters", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "10.3", ",", "0.001"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2.3", ",", "20", ",", "0.001"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "20", ",", "0.001"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1.5", ",", "10", ",", "0.001"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"WeibullDistribution", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"weibullParameters", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"weibullParameters", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"weibullParameters", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "power"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"power", ",", "0", ",", "100"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "50"}], "}"}], ",", "All"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "150"}]}], "\[IndentingNewLine]", "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "Row"}]}], "Input",
 CellChangeTimes->{{3.9259926854052496`*^9, 3.925992702320949*^9}, {
  3.9259927611506276`*^9, 3.9259928624334116`*^9}, {3.926147212770434*^9, 
  3.9261472262577868`*^9}, {3.9264151596715803`*^9, 3.926415179166992*^9}, {
  3.9264176342388725`*^9, 3.9264176359279437`*^9}, {3.9264191441500235`*^9, 
  3.9264191649017982`*^9}},
 CellLabel->"In[1091]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$387234#1"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 150, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 50}, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wv8A9XM3Hg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$388612#1"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 150, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 50}, All}, PlotRangeClipping -> 
     True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
pw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$390446#1"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 150, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 50}, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3Gux70HxgQbVJEhvbNuOOVODXbXXOubcQQIL9UPFC3OVmJfgeEZMFwn+2yq/
FphXiTmO+bA86SaBeNZ40ca5SkzXPPfP2hsS0EY6Rb0crcDY9P70Xx/a9Yf8
QS+DiXLsoWTF1ewvJNiw+RxmxvUEu8i5sln3jQTGQRTXreJSTHZL0q9/fnec
du4Nn1op1tpe7k67TALz2J6SWu8S7AO5nOK2QQLl8haatplibF9ombQ8gznU
yIYfPri3COu1Xyo1OWAOMVKrl5krHmIp2hKirkzmYAmqGGb9EBNiKTt8j9Uc
DJeo2nhqCzHFB08YaXjNgbvuWpFFQAHm0l069+aUOVxUKde7L/4AO/Pkh/0X
cXPY7EcCXV/ysLWk0xNUEuawtMJcNfkgDwu3Lh2UkTGHs5Wkr1OCeVj6Uknr
XRVzWPPo1mg7fB97yVmS4WRoDk0hw3PpKdlY3NY8Z5ixOXhaMedfOp6NkT6J
JaYTzMGcdbPsTX0WNln0OOo1yRzKqbzt9n++h22oPPaVsjEHIt3+oTXDTEzU
odj4r6c5jHMf+6B6Lh17maVcvnrJHL59ORXExJiOXRh5xfrV2xzU03V8lxrS
sHzC/LsBP3NwDg+KHOFLw4SQ+NmiUHMQi1J4O/ftDsbF/8SZeNscuqgmjQ5W
J2M1Fni3brw5INFMiqt3MkZK7j2FJ5pD6NGnLfclkrHE/Us/Tt4xh1+vvynl
PUnCGDclfP/dM4eKu3pyKbWJGM1QRfijEnOIsDIoGhqOx+6zqk9nPzEHvWI8
6617PAZGAxop5eawdbGBQ5o6Hgt9sUofVm0ODNoVG0KScdhGpcxtUpM5SJ6W
Gj6RHYstxtfc3XltDszPCw+z193Ebr/W2vWXOaSW2HHcsb2Jie8dsv7+1hy+
K1fUqjLcxFyvrh9+P2gOO8kuUz9so7FZD4XC4jFzeH0uK9qLNwob06uvNJ83
hyk/Gs+Z1khM3SSf4vfDHKzte+yO+UZixaT4fylL5uBb0UgKOxmJBds66b/7
aQ51d6ji3FMiMF4/1mmzbXMwXecLawi8jlFyXVkJTGT4Y6NF2esVjrUWkOou
HSTDJ7lTVswy4djJx8gmnpUMT/j5uL/9CMM2ajgf9XKSIVTXdOYBTRiW9vo5
GAmSYfJOVu86CsWG1g956UuQgXk6YD81XTCGb9NyuUmR4Yr370zJ/CCskHq5
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$391962#1"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 150, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 50}, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.925992690616478*^9, 3.925992702999118*^9}, {
   3.9259927732489214`*^9, 3.92599286406723*^9}, {3.9261472183320394`*^9, 
   3.926147226863081*^9}, {3.9264151612764606`*^9, 3.9264151800226517`*^9}, 
   3.9264176374405885`*^9, {3.9264191466763372`*^9, 3.926419166251113*^9}},
 CellLabel->"Out[1092]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Differences", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"heatStockDataOriginal", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", "+", "cycle"}], "]"}], "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"dayN", ",", "goodDays"}], "}"}]}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"0.01", "<", "#", "<", "100"}], "&"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "4"}], "}"}], ",", "All"}], "}"}]}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Differences", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"heatStockDataNet", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", "+", "cycle"}], "]"}], "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"dayN", ",", "goodDays"}], "}"}]}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"0.01", "<", "#", "<", "100"}], "&"}]}], "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "4"}], "}"}], ",", "All"}], "}"}]}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.925992047687208*^9, 3.9259922271487494`*^9}, {
  3.9259922687225695`*^9, 3.925992349749931*^9}, {3.9259923854596443`*^9, 
  3.925992448282816*^9}, {3.9259927249372835`*^9, 3.9259927464138184`*^9}, {
  3.92614717544269*^9, 3.926147193460128*^9}},
 CellLabel->"In[41]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 449.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 267.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 411.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 560.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 788.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 1719.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 1290.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 1563.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 1187.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 578.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 1001.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 387.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 181.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 33.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 151.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 114.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 16.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 95.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 26.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 10.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 7.},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 4.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 2.},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 2.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 13.},
          RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 8.},
          RoundingRadius->0], RectangleBox[{3.2, 0}, {3.3, 1.},
          RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 18.},
          RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 2.},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 1.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 3.},
          RoundingRadius->0], RectangleBox[{4.2, 0}, {4.3, 1.},
          RoundingRadius->0], RectangleBox[{4.4, 0}, {4.5, 9.},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.7, 1.},
          RoundingRadius->0], RectangleBox[{4.7, 0}, {4.8, 1.},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 3.},
          RoundingRadius->0], RectangleBox[{5.3, 0}, {5.4, 2.},
          RoundingRadius->0], RectangleBox[{6.7, 0}, {6.8, 2.},
          RoundingRadius->0], RectangleBox[{8., 0}, {8.1, 2.},
          RoundingRadius->0], RectangleBox[{40.5, 0}, {40.6, 1.},
          RoundingRadius->0], RectangleBox[{84.4, 0}, {84.5, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 339.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 221.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 206.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 460.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 104.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 555.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 512.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 654.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 596.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 459.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 1356.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 558.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 404.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 323.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 73.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 379.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 198.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 160.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 51.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 47.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 223.},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 40.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 69.},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 42.},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 296.},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 61.},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 10.},
          RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 22.},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 4.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 6.},
          RoundingRadius->0], RectangleBox[{3.2, 0}, {3.3, 1.},
          RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 17.},
          RoundingRadius->0], RectangleBox[{3.4, 0}, {3.5, 6.},
          RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 10.},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 11.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 5.},
          RoundingRadius->0], RectangleBox[{4.3, 0}, {4.4, 22.},
          RoundingRadius->0], RectangleBox[{4.5, 0}, {4.6, 2.},
          RoundingRadius->0], RectangleBox[{4.7, 0}, {4.8, 4.},
          RoundingRadius->0], RectangleBox[{4.9, 0}, {5., 1.},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 2.},
          RoundingRadius->0], RectangleBox[{5.1, 0}, {5.2, 13.},
          RoundingRadius->0], RectangleBox[{5.2, 0}, {5.3, 1.},
          RoundingRadius->0], RectangleBox[{5.3, 0}, {5.4, 15.},
          RoundingRadius->0], RectangleBox[{5.4, 0}, {5.5, 6.},
          RoundingRadius->0], RectangleBox[{5.8, 0}, {5.9, 1.},
          RoundingRadius->0], RectangleBox[{5.9, 0}, {6., 14.},
          RoundingRadius->0], RectangleBox[{6.9, 0}, {7., 15.},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.1, 1.},
          RoundingRadius->0], RectangleBox[{20., 0}, {20.1, 1.},
          RoundingRadius->0], RectangleBox[{37., 0}, {37.1, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 703.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 429.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 871.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 861.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 395.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 1244.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 940.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 636.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 659.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 409.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 702.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 75.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 88.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 141.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 5.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 66.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 42.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 33.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 6.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 35.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 56.},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 6.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 7.},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 11.},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 2.},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 17.},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 140.},
          RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 24.},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 1.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 30.},
          RoundingRadius->0], RectangleBox[{3.8, 0}, {3.9, 1.},
          RoundingRadius->0], RectangleBox[{4.2, 0}, {4.3, 4.},
          RoundingRadius->0], RectangleBox[{4.8, 0}, {4.9, 1.},
          RoundingRadius->0], RectangleBox[{5.9, 0}, {6., 1.},
          RoundingRadius->0], RectangleBox[{6.9, 0}, {7., 54.},
          RoundingRadius->0], RectangleBox[{7.3, 0}, {7.4, 22.},
          RoundingRadius->0], RectangleBox[{14.2, 0}, {14.3, 3.},
          RoundingRadius->0], RectangleBox[{35., 0}, {35.1, 2.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 106.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 71.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 55.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 152.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 13.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 127.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 112.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 63.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 9.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 1.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 39.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 11.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 4.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 4.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 32.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 172.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 647.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 445.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 521.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 493.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 1640.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 1508.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 1199.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 898.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 578.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 1095.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 212.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 239.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 167.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 136.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 285.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 138.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 36.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 33.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 81.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 10.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 21.},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 2.},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 7.},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 16.},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 6.},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 1.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 5.},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 1.},
          RoundingRadius->0], RectangleBox[{3.7, 0}, {3.8, 11.},
          RoundingRadius->0], RectangleBox[{3.9, 0}, {4., 1.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 4.},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.7, 6.},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 2.},
          RoundingRadius->0], RectangleBox[{5.9, 0}, {6., 2.},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.1, 1.},
          RoundingRadius->0], RectangleBox[{8., 0}, {8.1, 1.},
          RoundingRadius->0], RectangleBox[{8.4, 0}, {8.5, 1.},
          RoundingRadius->0], RectangleBox[{9.4, 0}, {9.5, 3.},
          RoundingRadius->0], RectangleBox[{9.9, 0}, {10., 1.},
          RoundingRadius->0], RectangleBox[{35.3, 0}, {35.4, 3.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.40599999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.1, 182.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 283.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 280.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 271.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 112.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 333.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 257.},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 469.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 648.},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 380.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 1163.},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 578.},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 435.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 317.},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 74.},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 362.},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 178.},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 143.},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 87.},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 49.},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 168.},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 46.},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 150.},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 99.},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 33.},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 88.},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 18.},
          RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 3.},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 4.},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 16.},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 26.},
          RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 6.},
          RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 7.},
          RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 2.},
          RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 6.},
          RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 1.},
          RoundingRadius->0], RectangleBox[{4.1, 0}, {4.2, 1.},
          RoundingRadius->0], RectangleBox[{4.4, 0}, {4.5, 12.},
          RoundingRadius->0], RectangleBox[{4.5, 0}, {4.6, 1.},
          RoundingRadius->0], RectangleBox[{4.6, 0}, {4.7, 6.},
          RoundingRadius->0], RectangleBox[{5., 0}, {5.1, 2.},
          RoundingRadius->0], RectangleBox[{5.1, 0}, {5.2, 21.},
          RoundingRadius->0], RectangleBox[{5.4, 0}, {5.5, 4.},
          RoundingRadius->0], RectangleBox[{5.5, 0}, {5.6, 2.},
          RoundingRadius->0], RectangleBox[{6.9, 0}, {7., 4.},
          RoundingRadius->0], RectangleBox[{7., 0}, {7.1, 1.},
          RoundingRadius->0], RectangleBox[{11.3, 0}, {11.4, 1.},
          RoundingRadius->0], RectangleBox[{11.6, 0}, {11.7, 1.},
          RoundingRadius->0], RectangleBox[{15., 0}, {15.1, 2.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0., 0}, {0.2, 1607.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{27.960139154675037`, 
               35.87025478791544}, {-48.73659972289899, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1607]& ,
            TagBoxNote->"1607"],
           StyleBox["1607", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1607, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0.2, 0}, {0.4, 1617.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{35.37025478791544, 
               43.28037042115585}, {-49.27371686492076, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1617]& ,
            TagBoxNote->"1617"],
           StyleBox["1617", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1617, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0.4, 0}, {0.6, 1652.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{42.78037042115585, 
               50.69048605439626}, {-51.15362686199697, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1652]& ,
            TagBoxNote->"1652"],
           StyleBox["1652", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1652, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0.6, 0}, {0.8, 1496.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{50.19048605439626, 
               58.10060168763667}, {-42.7745994464573, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1496]& ,
            TagBoxNote->"1496"],
           StyleBox["1496", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1496, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0.8, 0}, {1., 863.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{57.60060168763667, 
               65.51071732087708}, {-8.775084356479042, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 863]& ,
            TagBoxNote->"863"],
           StyleBox["863", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[863, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1., 0}, {1.2, 1009.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{65.01071732087708, 
               72.92083295411749}, {-16.61699462999693, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1009]& ,
            TagBoxNote->"1009"],
           StyleBox["1009", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1009, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1.2, 0}, {1.4, 304.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{72.42083295411749, 80.33094858735788}, {
               21.24976388253809, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 304]& ,
            TagBoxNote->"304"],
           StyleBox["304", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[304, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1.4, 0}, {1.6, 203.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{79.83094858735788, 87.7410642205983}, {
               26.674647016957998`, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 203]& ,
            TagBoxNote->"203"],
           StyleBox["203", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[203, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1.6, 0}, {1.8, 144.}, "RoundingRadius" -> 0]},
              ImageSizeCache->{{87.2410642205983, 95.1511798538387}, {
               29.843638154886463`, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 144]& ,
            TagBoxNote->"144"],
           StyleBox["144", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[144, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{1.8, 0}, {2., 89.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{94.6511798538387, 102.56129548707911`}, {
               32.797782436006216`, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 89]& ,
            TagBoxNote->"89"],
           StyleBox["89", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[89, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2., 0}, {2.2, 104.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{102.06129548707911`, 109.97141112031952`}, {
               31.99210672297356, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 104]& ,
            TagBoxNote->"104"],
           StyleBox["104", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[104, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2.2, 0}, {2.4, 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{109.47141112031952`, 117.38152675355992`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2.4, 0}, {2.6, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{116.88152675355992`, 124.79164238680033`}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2.6, 0}, {2.8, 19.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{124.29164238680033`, 132.20175802004073`}, {
               36.55760243015863, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 19]& ,
            TagBoxNote->"19"],
           StyleBox["19", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[19, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{2.8, 0}, {3., 22.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{131.70175802004073`, 139.61187365328115`}, {
               36.3964672875521, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 22]& ,
            TagBoxNote->"22"],
           StyleBox["22", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[22, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3., 0}, {3.2, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{139.11187365328115`, 147.02198928652157`}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.2, 0}, {3.4, 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{146.52198928652157`, 154.43210491976197`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.4, 0}, {3.6, 4.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{153.93210491976197`, 161.84222055300236`}, {
               37.36327814319129, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.6, 0}, {3.8, 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{161.34222055300236`, 169.25233618624276`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{3.8, 0}, {4., 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{168.75233618624276`, 176.66245181948318`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{4., 0}, {4.2, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{176.16245181948318`, 184.0725674527236}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{4.2, 0}, {4.4, 4.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{183.5725674527236, 191.482683085964}, {
               37.36327814319129, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{4.6, 0}, {4.8, 3.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{198.3927987192044, 206.30291435244482`}, {
               37.41698985739347, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{5., 0}, {5.2, 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{213.2130299856852, 221.12314561892563`}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{6., 0}, {6.2, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{250.26360815188727`, 258.17372378512766`}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{10.8, 0}, {11., 1.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{428.1063833496571, 436.0164989828975}, {
               37.52441328579782, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{15., 0}, {15.2, 2.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{583.7188116477056, 591.628927280946}, {
               37.47070157159565, 38.078125}}],
             "DelayedMouseEffectStyle"],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.49699999999999994`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.49699999999999994`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.05, 806.},
          RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 40.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 144.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 39.},
          RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 1.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 63.},
          RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 28.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 24.},
          RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 1.},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 7.},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 52.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.08, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0, 4}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9259920589703493`*^9, 3.925992228055667*^9}, {
  3.92599227457625*^9, 3.9259923514224377`*^9}, {3.9259923931934385`*^9, 
  3.9259924493514495`*^9}, {3.925992743343773*^9, 3.9259927471616726`*^9}, {
  3.926147182359342*^9, 3.926147194214856*^9}},
 CellLabel->"Out[41]="]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["adatok", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 3.9266096544308543`*^9}, {
  3.926609698670888*^9, 3.92660970001445*^9}, {3.9266098156146207`*^9, 
  3.9266098168798327`*^9}, {3.9266109417756853`*^9, 3.9266109423195133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "rawDataRoot", "=", 
   "\"\<C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\kazankontroll-\
dashboard\\\\data\\\\raw\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.9264072662174683`*^9, 3.926407266512049*^9}},
 CellLabel->"In[88]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "formattedDataRoot", "=", 
   "\"\<C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\kazankontroll-\
dashboard\\\\data\\\\formatted\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.9259888840241904`*^9, 3.9259889122362614`*^9}},
 CellLabel->"In[154]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"seasonDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266633315472913`*^9, 3.9266633684587975`*^9}, {
  3.9266864509294653`*^9, 3.9266864704119587`*^9}},
 CellLabel->"In[18]:="],

Cell[CellGroupData[{

Cell["h\[ODoubleAcute]", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatDataDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", ",", "22"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "3", ",", "29"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.9266162771246805`*^9, {3.9266163075883827`*^9, 3.92661631126453*^9}},
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockPre", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
         "\"\<\\\\heat_stock_net.csv\>\""}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToStringWithDateCorrection", ",", 
             RowBox[{
              RowBox[{"DateList", "[", "#", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<-\>\""}], "]"}], "&"}], ",", "heatDataDays"}], "]"}]}], "]"}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266110710573893`*^9, 3.9266111312977343`*^9}, 
   3.9266113710905857`*^9, {3.926612050754913*^9, 3.926612058257547*^9}, {
   3.926616227060459*^9, 3.9266162395086555`*^9}, {3.926616270163266*^9, 
   3.926616273252042*^9}, 3.9266163268353047`*^9},
 CellLabel->"In[72]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"heatStockDated", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "dayDateList", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"dayDateList", "=", 
             RowBox[{"DateList", "[", 
              RowBox[{"heatDataDays", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dayDateList", "[", 
                  RowBox[{"[", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
                 RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
                  RowBox[{"heatStockLine", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                    "4"}], "]"}], ",", 
                   RowBox[{"heatStockLine", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "5"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"heatStockLine", ",", 
                 RowBox[{"heatStockPre", "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"dayN", ",", "1", ",", 
           RowBox[{"Length", "[", "heatDataDays", "]"}]}], "}"}]}], "]"}], 
       "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"1", "-", 
    RowBox[{"es", " ", "k\[ODoubleDot]r", " ", 
     RowBox[{"\[AAcute]tfordul\[AAcute]s", ":", " ", 
      RowBox[{
       RowBox[{"jan", " ", "20"}], "-", "21"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "-", 
    RowBox[{"es", " ", "k\[ODoubleDot]r", " ", 
     RowBox[{"\[AAcute]tfordul\[AAcute]s", ":", " ", 
      RowBox[{
       RowBox[{"feb", " ", "4"}], "-", "5"}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9266116112514324`*^9, 3.9266116188654027`*^9}, {
   3.926611743456129*^9, 3.9266117684806967`*^9}, {3.9266118120005856`*^9, 
   3.9266119265780196`*^9}, {3.926611969040595*^9, 3.9266120291735673`*^9}, {
   3.9266120624339485`*^9, 3.9266120724812126`*^9}, {3.9266121172819843`*^9, 
   3.926612122290862*^9}, {3.926613199377989*^9, 3.926613230864958*^9}, 
   3.9266168193009434`*^9, {3.926619639494442*^9, 3.9266196541827917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cycle", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SortBy", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"heatStock", "[", 
        RowBox[{"[", "cycle", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ";;", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], "]"}], "]"}], ",", 
      "First"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Differences", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"heatStockDated", "[", 
             RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "#"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"heatStockDated", "[", 
           RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "<", 
         RowBox[{"-", "10"}]}], "&"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.9266122072202215`*^9, 3.9266122163689213`*^9}, {
  3.9266124518430166`*^9, 3.9266127024170876`*^9}, {3.926612738034088*^9, 
  3.9266127455804243`*^9}, {3.9266128223068824`*^9, 3.9266128251533375`*^9}, {
  3.9266131671390133`*^9, 3.9266131672821875`*^9}, {3.9266168157806997`*^9, 
  3.9266168174779644`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Thu 14 Dec 2023 23:55:00\"", 
           StyleBox[
            RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
              StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
            FontColor -> GrayLevel[0.5]]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2023", ",", "12", ",", "14", ",", "23", ",", "55", ",", 
                 "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
             ",", "2.`"}], "]"}]},
        "DateObject",
        Editable->False], ",", "4247"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Fri 15 Dec 2023 00:00:00\"", 
           StyleBox[
            RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
              StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
            FontColor -> GrayLevel[0.5]]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2023", ",", "12", ",", "15", ",", "0", ",", "0", ",", 
                 "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
             ",", "2.`"}], "]"}]},
        "DateObject",
        Editable->False], ",", "4228.808510638298`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Sun 4 Feb 2024 23:55:00\"", 
           StyleBox[
            RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
              StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
            FontColor -> GrayLevel[0.5]]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2024", ",", "2", ",", "4", ",", "23", ",", "55", ",", 
                 "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
             ",", "2.`"}], "]"}]},
        "DateObject",
        Editable->False], ",", "9937"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
         RowBox[{"\"Mon 5 Feb 2024 00:00:00\"", 
           StyleBox[
            RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
              StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
            FontColor -> GrayLevel[0.5]]}], 
         RowBox[{"DateObject", "[", 
           RowBox[{
             RowBox[{"{", 
               
               RowBox[{
                "2024", ",", "2", ",", "5", ",", "0", ",", "0", ",", "0.`"}], 
               "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", "2.`"}], 
           "]"}]},
        "DateObject",
        Editable->False], ",", "125.00000000000182`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9266122179796953`*^9, {3.9266124585001974`*^9, 3.926612480575667*^9}, {
   3.926612515198098*^9, 3.926612519526372*^9}, {3.926612567425124*^9, 
   3.9266125766486893`*^9}, {3.9266126092992077`*^9, 
   3.9266126394891963`*^9}, {3.926612669971921*^9, 3.926612702880772*^9}, {
   3.926612738443687*^9, 3.9266127463465*^9}, 3.9266128274918957`*^9, {
   3.926613140236714*^9, 3.926613167637991*^9}},
 CellLabel->"Out[6307]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"heatStockDated", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"DateObject", "[", 
          RowBox[{"{", 
           RowBox[{"2024", ",", "1", ",", "20", ",", "23", ",", "59"}], "}"}],
           "]"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", "10000"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "#"}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{"heatStockDated", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266132588860426`*^9, 3.926613267760889*^9}, {
  3.9266133105134697`*^9, 3.9266134409571953`*^9}, {3.926613484225718*^9, 
  3.9266135208830414`*^9}, {3.926616810485431*^9, 3.926616811061192*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"heatStockDated", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"DateObject", "[", 
           RowBox[{"{", 
            RowBox[{"2024", ",", "2", ",", "4", ",", "23", ",", "59"}], "}"}],
            "]"}], "<=", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "+", "10000"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "#"}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", "&"}], ",", 
      RowBox[{"heatStockDated", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926613410420236*^9, 3.926613426177553*^9}, {
  3.926613463346624*^9, 3.9266134736182923`*^9}, {3.926613509282502*^9, 
  3.926613524018397*^9}, {3.9266168092526135`*^9, 3.926616811860566*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockDated.mx\>\""}], ",", "heatStock"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.926616070947394*^9, 3.9266160870272923`*^9}, {
  3.9266167909957237`*^9, 3.9266167924674215`*^9}},
 CellLabel->"In[6459]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockSeason", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"heatStockDated", "[", 
           RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"heatStockDated", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"heatStockDated", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.926615960739093*^9, 3.926615995122423*^9}, {
  3.9266168238924475`*^9, 3.926616845538967*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "heatStockSeason", "]"}]], "Input",
 CellChangeTimes->{{3.926615912183075*^9, 3.9266159362923145`*^9}, {
   3.926616000435626*^9, 3.9266160021481776`*^9}, 3.926616848005881*^9},
 CellLabel->"In[73]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
hi63JR58h2lz+ycTwO+Y9g49+kkiePjO+vkdnqWz7FdyeI3Osl8p4X06y36l
hs83PT1N6eG/0sL3m/beN/jzy4zwR6ZzNN3e9UY2eLQuof3r24dHx3LDc5k+
PTdn0+0F4PVNLy7Q6eLqovBBpjteXF1lVin4MtNFet4PHlkOfsR01Ngpi/Ss
DH9p+vKmRlta1IDH6RraoUdnqlEXXtB032dnlxRvBPcyXX5s9ETZmsFd03Ez
VJyctBV8jenQs0WI0h5+yrR/i9Ab7Ax/b9o1N9QDnrib+XheGHoDfeHFTac0
FzwI3sr06yuhFzgcPs70zj6hFzQa7mvaJ17oBfjAL5huvCX0hFPgX01nqRF6
gpnwlN3N4+dl6ILz4GVNHzELLIZ3MD07U+gBK+BTTLc1A2vhAabztA79D5vg
17vL48Ef/ttuJ0MP2yvb7XQnn0W+i/wuecSetme126lF3pd8IfkB8ifk0XvZ
nsdutwH5EPLl5EfJX5HH6217IbudZuQjydeRnyb/SJ6kj+0l7XZbk/uQbya/
RP6NPHVf28vZ7XQin0oeRH6D/C+5Rz/bq9rt9iCfQ76b/D55pP62Z7fbrU3e
n3wR+UHyp+QxB9ie126nEflQ8pXkx8jfkMcfaHsRu93m5KPJ15OfJf9EnmyQ
7aXsdtqSTyDfQn6Z/Ad5msG2V7Db7Uw+nXwb+S1yZ4jtmex2q5H3Ip9Lvpf8
AXmUobbnsNupSz6AfAn5IfLn5LGG2Z7fbrcx+XDyVaa94wd2WbwdfsJ0yn6H
3lXZB39r+vK1C32+HoYnHJ7B/D2eB19Xn4QXNV15yfshdS/AWw6X9a/Dx2jf
hm/Uvg8/p/0Y/ln7OTz5iAz/nv++gnuaDnv+Dm83QuY/wifp/Ge4v85/g1/V
+V/wn9rOcuPpXOnwpt2K2hHhXbUjw2doR4Xv0I4Ov216oXk+FAMefmSGf8+f
YsEzm8bzo9jwGqbxz9viwnuPlPXiw+ePlPUSwPfpeongj3S9xPCoo2S9pPBc
o2S95PB6pvHj2RTwQaYb4vfp4Ut1Pg38iM6nhb/Q+fTwOKNl3gNeQDsj3Es7
E3yEdhb4Gu1s8JOj5X6zw9+PlvvNCU80Ru43F7z4GLnfPHDvMbJePvi4MbJe
fvimMbJeQfgFXa8Q/IuuVwSecqysVwxeRrs4vIN2CfhkabckPEC9NPyauif8
t3pZePpx0uXhlbUrwrtJu5Xgs9SrwHeqV4XfVa8OjzBe3n814FnHy/u3Jrzm
eJmvDe+r83XgC3S+LvyAzteHP9ZuCI/uI90YnlvbC95Auxl8sHYr+HLt9vD/
tLvAX2n3hMed8K+De8ALSbtot6m0Z5iPlHbCfK0e3x1+Wo9Hux/0+DBPMlGO
D/MSE631nNYT7esbr90bvlm7L/yidn/4N+2B8FSTrHbK2e12JJ9KHkh+g/wP
ucdk26vY7fQgn02+m/weeaQp5uPv+vMdTQbBs5l2opdNlnYovLbpfMUXDX46
HN7PdPuuIbd8R8IXmV64pEbJPmPgwVjv7NqlRcfDn06R802Ex5gqPRmeV3sq
vKH2dPhQ7ZnwFdqz4ce058Jfa8+Dx58mPR9eWHshvLn2Yvgo7aXw9drL4We0
V8I/aa+GJ50uvQZeSnstvI32OvgE7fVwP+2N8MvavvDv2n7wNDOk/eHlZ8jn
1wB45xny+TQIPm2GfD7eDt82Qz7/7oTf1PX2wJ2Zst4+eMaZst4BeLWZst5B
eM+Zst5h+NyZst5R+B7p4GPwB9LuCXjkWfLxfQqeQ9o5A68jHXwWPkDaPQ9f
rMdfhB/S4y/Dn2lfgceaLX0Vnk/7Oryx9k34sNlyf7fgq2bL/d+BH58t+3MP
/na27N8DeII5st4jeNE5st5jeIs5st5T+Jg5st5z+IY5st5L+Dld7zU8RPsN
PPlc6bfw0trv4O2038Mnan+A+2t/hF/R/gr/qf0Lnnae9B94RW1nhfEu2uFN
OzO0I8K3a0eG39aOCg83X97f0eCZpZ0Y8OrqMeG91WPD59nt7CN/SB51ge05
7XbqkQ8kX0p+mPwFeeyFthew221CPoJ8NflJ8nfkiRbZXsxux9u0+f7jSgL4
WPG0CeGbTOPX0dHueZnfFuZfdL1E8BSL/81XRTtlFv+bnxPm7Rf/m78f5pNl
Plti+FaZ74d2rsl8cJj/kvnoSeDpl/ybb4B2Ky35N788zLst+Tf/MsxnynzB
pPCdMu+i3TsyfzLMIyz9N58oGTzL0n/z3min5tJ/8xvDvI/Mfw7zBTLvmRy+
X+Ynop3HMn8lzKMtk/1PAc+9TPYf7dZfJvsf5oNl3kkJX2a38x/5S/K4y20v
aLfTlNwlX0t+ivwDeeIVtpew221FPp7cl/wi+VfyVCttL2u305F8Cnkg+XXy
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
wJfqfBD8sOnXsUpu2I92Xqhvh8d+YrVTwG63CfkI8tXkJ8nfkSd6ansxux1v
7WD4WLudTdpH4Oftdr5oH4WneGa1U8Zutz35ZPKt5Ne0T8N/2e2kf257JdN3
Jw/M//AMvJv6efhMu52d5HfII7ywPYvdTk3yPuQLyPeTPyaP9tL23Ha79ckH
ky8j/4/8JXncV7YXtNtpSu6SryU/Rf6BPPFr20vY7bYiH0/uS36R/Ct5qje2
l7Xb6Ug+hTyQ/Dr5H/IMb22vYrfbnXw2+S7ye+QR39mezW63Fnk/8oXkweRP
yGO8tz2P3U5D8iHkK8iPkr8mj/fB9sJ2u83IR5GvIz9D/pE86UfbS9rttCH3
Ifcjv0T+nTz1J9vL2+12Ip9GHkR+k/wvecYQ26va7fQkn0O+h/w+eeTPtme3
26lD3p98MflB8mfkMb/Yns9utxH5MNOVZ/fPEfMCfKXptMkXHy11CX7c9I9l
B717XYG/MX0x47Mfq67BE3w1X+83xZxz9Qa8iOkxefPljnYb3sJ0sx2NThS/
Cx9tukDJYW2634dvMB378Mrfyx/Cz5p+Wvn4vEuP4SGm9599kzfyM3iyb6E9
v36C00VewEub7nmzSPsur+BtTVf2buEsfQOfaDr909ELz7+DbzH9o8uGAhE+
wq+Yvvjh7NmCIfAfpn0HhHTs+AWe9ru5n9/JIiz6Bq9gutno0kvO/IB3MV0o
WrvCzm/4dNOxp028kO8vfLvppwn9u7QLt8r4LdPBC69Emh/BtBPuh7mftD+X
nYwEz2S659q0xX5HgVc3XTVHxcu5o8N7mU4f0KV765jweaZ/FJ4RdU5s+F7T
l/dtX3ksLvyhad9yt0v8iA+P8tPcz4lw13Ikguc03aJW5l4tk8Drmi50pXqM
mcngA03Hbtp7zZEU8CWmn9+fV/prKvhh08Ht993Imhb+3PT81w/7NEsPj/0r
tHv3jhp7mgc8v+mq33KuP5gJ3sR0+uH1yoZkgQ83/SvCoNuZssNXm748YWn/
JjnhJ0z7xTkSd3Ju+DvT4+a82Lg/Lzzhb3M/KeJU+JAfXsx0kRUF7mUoBG9p
Om5mr0ENi8DHmn7uOyLBhGLwjaYP5VuzeU8J+HnTC3eerPS2FPyz6d6l3j9I
Wwae4k9oVz+SaGi9cnBP0x5ViyceVwHe3vSvc97+OyvBJ5m+2mBc1VdV4FtN
+93a9DhVdfhV0+NaXRheuyb8l2nvZ1+Sjq4NT/fX3E+3lIHb6sIrmY77qUyN
5/XhXU2/HNjhWfJG8JmmD/2ZPLJGE/gO0wvHBKRwm8LvmO4b/fq2gObw8I5H
6P1M/13rSUt4FtMeiTO8TNIaXsP0n0WVx1RtC+9j+mq67qmHtYfPN+23btbO
LR3h+0375NxV92Fn+CPT3oF3XyfsBo8WLrSLFI04vlIPeC7T8Q9kTTe4F7y+
6Zfla+3x7QMfZPrQyb4N7vWDLzO9uPbCd/EGwo+Y7nv1wITyg+EvTVdv9iTD
gKHwOOFDO9PD6Ps3DIcXNP2nQ57Gt124l+mrbxp8jD0a7pr27zNkcpmx8DWm
fb4vz9R3PPyUae8RR4PXToC/N10s0muvG5PgiSOY+5kU73OMqfDipl/HLTyt
1HR4K9NH5jbL2msmfJzpxSlHHV41G+5ruv/Kdc2vzoVfMF0zy5mvURfAv5rO
5PdxRvFF8JQRQ9spkDRH9yXwsqav7yp5dPkyeAfT/qXbeF9aAZ9ieuJ/Pj8i
rYYHmG5dzW92kbXw66aLXbiUq8t6+G/TCRt9P75kIzxDJHM/t1O3Oe8Lr2z6
SOvyv8NvgXc3vfR5p3kFt8Jnme7ffVrejoHwXaZrhgSdWrgNftd0lsE3253Z
AY8Y2ePf16vd8Kx2O7XI+5IvJD9gumbGSB6/9sKfqAfDo0ex2sljt9uAfAj5
ctNZqnlfGh7mR9WPwl/Z7cSLanshu51m5CPJ15GfJv9IniSa7SXtdluT+5Bv
Jr9E/o08dfTQjr57U8IEJ+HlTEe802BitPPwTtFl/ip8qt1OEPkN8r/kHjFC
O2rfNktLXYdXjSF+F97DbmcO+W7y++SRYtqe3W63Nnl/8kXkB8mfmr7e8P78
fk/hMWOJv4fntdtpRD6UfCX5MdP+n7sF1/4Af6MeAo8f22qniOn4V4r9TB/m
zU2fTdO1xMIwH23ap/OSYfE+w9ebLr/t7H4ftHNW1/sC/2S3kyyO7aXsdtqS
TyDfQn6Z/Ad5mri2V7Db7Uw+nXwb+S3TaafGrvHxN9yJF9pxK43P9D3SauOZ
4sl8bNNuNbudXuRzyfeavl/5QtwRYf7AdM/VHX1Kx4VHiS/z8eE5tBPD62on
hw+QdlPAl6ingh9STw1/rp4WHivBvw5GO/ml3XTwxtKe6eHDpZ0M8FV6PNo5
ocd7wN/q8RnhCRPK8ZngRbWzwltq54CP0c4J36idC35OOw/8s3Y+ePJE0gXg
ntqF4O20i8AnaReD+2uXgF/VLgX/qe0JT5dYuiy8onZ5eFftivAZ2pXhO7Sr
wm9r14CHTyJdG55Zuy68hnZ9eG/thvD52o3h+7S94I+0m8GjJpVuDs+l3QJe
T9sbPki7NXyptNsWfkS9A/yFeid4nGTiXeEFtLvBvbS7w0fY7awhP0n+Xrs/
PFFy6YHw4tqD4d7aQ+HjtIfDN2m78Avao+BftMfAU6aQHgcvo+0D76A9ET7Z
NF6PnwwPMI3X46fCr+n8DPhvnZ8FT59S5ufAK6eU+fnwbtoL4bO0F8N3ai+F
39VeDo+QSnolPKv2anhN7bXwvtrr4Qu0N8IPaPvCH2v7waOnlvaH59YOgDfQ
DoIP1t4OX669E/6f9m74K+298LhppPfDC2kHw5tqH4KP1D4CX6t9FH5a+zj8
g/ZJeJK00qfhJbTPwltrn4eP174I36x9GX5R+yr8m/Z1eKp00jfh5bRvwztq
34VP1b4PD9R+CL+h/Rj+R/sp3CO99HN4Fe2X8B7ar+Gztd/Cd2u/h9/T/giP
lEE6BJ5N+wu8tvY3eD/tH/BF2r/gwdp/4E+1nTXGY3hIhzPt5NUOD2+oHRE+
VDsyfIV2VPgx7ejw1x7y8RsDHj+jfHzHghfOKPNx4M0zynxc+Cidjw9fr/MJ
4Wfsdj6RJ81keym73TbkE8j9yC+TfydPk9n28nY7ncmnkW8jv0nuZLE9o91O
NfKe5HPJ95A/II+c1fYcdrt1yAeQLyY/RP6MPFY22/PZ7TQmH0a+ivw4+Vvy
BNltL2q324J8DPkG8nPkIeTJc9he2m6nHflEcn/yK+Q/ydPmtL2i3W4X8hnk
28lvk4fLZXtmu93q5L3J55HvI39IHjW37TntduqRDyRfSn6Y/AV57Dy2F7Db
bUI+gnw1+Unyd+SJ8tpezG7Hm3ws+Sby8+RfyFPks72M3W578snkW8mvkf8i
T5/f9kp2O93IZ5LvJL9DHqGA7VnsdmqS9yFfQL6f/DF5tIK257bbrU8+mHwZ
+X/kL8njFrK9oN1OU3KXfC35KfIP5IkL217CbrcV+XhyX/KL5F/JUxWxvazd
TkfyKeSB5NfJ/5BnKGp7Fbvd7uSzyXeR3yOPWMz2bHa7tcj7kS8kDyZ/Qh6j
uO157HYakg8hX0F+lPw1ebwSthe2221GPop8HfkZ8o/kSUvaXtJupw25D7kf
+SXy7+SpS9le3m63E/k08iDym+R/yTOWtr2q3U5P8jnke8jvk0f2tD273U4d
8v7ki8kPkj8jj1nG9nx2u43Ih5GvJD9O/oY8QVnbi9jttCAfTb6B/Cx5CHmy
craXttttSz6RfAv5FfIf5GnL217BbqcL+XTy7eS3yMNVsD2T3U518l7k88j3
kj8kj1LR9px2u3XJB5IvIT9M/pw8diXb89vtNCEfTr6a/AT5O/KElW0vZrfb
knws+Uby8+SfyVNUsd3Tbqc9+STyreRXyX+Rp6tqeyW73a7kM8l3kN8hD1/N
9ix2uzXI+5DPJ99P/og8WnXbc9nt1CcfRL6M/Aj5S/I4NWwvaLfrRe6SryE/
Rf6ePHFN24vb7bQiH0fuS36B/Ct5ylq2l7Xb7UA+hTyA/Dr5b/IMtW2vbLfT
nXyW6emfwtU+nxK+y/TAuKtSHcgIv2u6Rc7yrzbngkesE9oVqz7ZubgwPKvp
XB3GjZvkCa9lOvGYzPUHV4H3Nf1n+fF0nerCF5p+uq/Tu0ZN4QdMn70ZfV/F
tvAnpoO+bppYsBs8et3QXpywRmOP/vA8psfkfZsxwQh4A9Nda077FM4HPsR0
/S55Dr6fDl9uuoTPhan3FsCPmvZY07vZ2ZXwV6ZjHkqQbd8meLx6of3xbugV
BMELmb75s8F/C/fBm5k+lPTrzAlH4SNNbyw433vgOfg60zPrFs3V4Tr8tOnB
PUJXeAD/aLr15CEnyr+EJ6kf2pU3pJyX/xO8pOk8R/e1Tf8L3tp00kct8sWL
tNa4T315/8U27W42jdcL48AvmcbrhfHg33Q+ATx1A5lPCC/XQOYTwzs1kPmk
8Kmm8fcUksGDTOPvL6SA3zCNv6+QEv7XNP4eQ2q4R0NZLy28akNZLx28R0NZ
LwN8TkNZzwO+u6Gslwl+X9fLAo/USO4H7WRvJPeTFV67kcxng/fXebS7SOez
ww/qfA74U2kX7cRsLJ4TnlfaRTuN1HPBh2rnga/Uzgc/pl0A/ka7EDx+E1kf
7RSRdgrDm6ujndHqReDrm8j9FYWfbSL3Xwz+SedLwJN5yXxJeCkvmS8Fb+sl
857wCdpl4Vu0y8Mva1eA/9CuCE/T9F8Ho50K0m4leGdpz8rw6dJOFfg2PR7t
3NLjq8KdZnJ8NXgmaac6vJp2DXgv7Zrwudq14Hu1a8Mf6Pp14FGay/nrwnNI
B9eD15V2GsAHSHs2hC/R4xvBD+nxjeHP9XgveKwW0k3h+bWbwRtrN4cP124B
X6XdEn5C2xv+VrsVPGFL6dbwoi3l8dIG3rKlPF7awsfofHv4Rp3vAD+n8x3h
n3W+Mzy5t3gXuKe3HN8N3s5b5nvAJ+l8T7i/zveGX9X5vvCf0m4/eLpW4gPg
FaXdgfCu6oPhM7SHwHdoD4Xf1uOHwcO3Fh8BzyztuvAa6qPgvdVHw+erj4Xv
Ux8Hf6TuA4/aRnoCPJf2RHg96WC0M0janQRfKu05GX5Ej58Cf6HHo504beX4
qfAC0p7T4F7SznT4CLudNeQnyd+TJ2pne3G7XW/yceSbyC+QfyFP2d72MnY7
HcgnkweQXyP/TZ6+g+2V7Xa7kc8i30l+lzxCR9uz2u3WJO9LvoD8APlj8uid
bM9tt9OAfDD5cvL/yF+Rx+1seyG73abkI8nXkp8m/0CepIvtJex2WpOPJ99M
fpH8G3mqrraXs9vtSD6VPJD8Bvkfco9utlex2+lBPpt8N/k98kjdbc9mt1Ob
vB/5IvJg8qfkMXrYntdutyH5UPIV5MfIX5PH72l7Ybud5uSjyNeTnyH/RJ60
l+2l7HbbkE8g9yO/TP6dPE1v28vb7XQmn0a+jfwmudPH9ox2O9XIe5LPJd9D
/oA8cl/bc9jt1iEfQL6Y/BD5M/JY/WzPZ7fTmHwY+Sry4+RvyRP0t72o3W4L
8jHkG8jPkYeQJx9ge2m7nXbkE8n9ya+Q/yRPO9D2ina7XchnkG8nv00ebpDt
me12q5P3Jp9Hvo/8IXnUwbbntNupRz6QfCn5YdOeCf5U/zYL/sK0u+PPnR/z
4LGHhHZw07/dfy+CFxgixy+HN9FeDR+hvR6+WtsXflLbH/5O2kU7iYaKb4UX
k3bRjrd6AHysOtrZpB4IP6+Odr6oB8FTDBNHO2WknW3w9upoZ7L6dvhW0zM9
qsz02AG/ZtpklZ3wX6a3m///8C54+uGhXdUcsBteyfRtM7AH3s1099DxW3vh
M4fL+fbDdw6X8x2A3xku5wuGRxgh5zsIzzJCzncIXnOEnO8wvM8IOd8R+IIR
cr6j8P3ax+CPtY/Do7nSJ+C5tU/C62ufgg/WPg1fpn0G/p/2WfhL7XPwuCOl
z8MLal+AN9W+CHe1L8HXal+GnzKN54dX4B9M4/njVXjiUTJ/HV5ilMzfgLca
JfM34eN1/jbcV/sO/KL2XfhX7XvwVKOl78PLaj+Ad9R+CJ8i7T6CB6o/gV9X
fwr/o/4cnmGM+At4FWnnFby7+mv4bPW38F2m8frdO/g903i97j084liPf6/3
fYBnM43X9z7Ca42V9ULg/cbKep/hC8fKel/gwbreV/gTXe8bPMY4We8HPI/p
0+8690rwE97Q9Px7Vx5m+gUfYrrtOc/6xX7DV5jOc2DTfzX+wI+a/uWXuHCr
v/DXpo8vHbm+r7POeLzxoT136utkPuFMO4VNtx7eaNKi8PBmpnN1P/TLLwJ8
lOkfzXN2PxQRvs700RqhVxQJfsb0zJIR6ryIDP9oukXo+K8o8KQ+oZ0t1Y38
caPBS5r+ErP8mgzR4W1MHzIXHAPuY9pcXtWYcD/TXrfHfG8eC37JdCazQbHh
302H7AmdiANPPcF8/g/djvlx4eVNT14UukPx4J1MN54U+h/iw6eZ9hgSeeXF
BPAg0+9Dt/9pQvhN03vNBSSC/zXtU7XSl5hJ4Bknhnb9YgEd0iaFVzWd1txw
MnhP0+Z2KiWHzzG9M9qnPV4p4HsmysdnSvj9if8+PrOlgkeeJI+P1PDs0m5a
eB31DPD+6hnhi9WzwA+qZ4U/U88OjzlZPAc8n7STC95IOzd8mHYe+ErtfPDj
2gXgb3T9gvAEU8QLw4tIu0XgLdSLwUerF4dvUC8JP6teCh6i7glPNlW8DLy0
tFMO3la9PHyiekX4FmnPSvArOl8Z/kM6uAo87TQ5vhq8grRndXgXabcGfLp0
cE34dj2+NvyWHl8HHm66HF8Xnkk6uB68urTTAN5L2rMhfJ4e3wi+V49vDH+o
x3vBo8yQbgrPqd0MXle7OXygdgv4Eu2W8MPa3vDn2q3gsWdKt4bn124Db6Ld
Fj5cux18tXZ7+Am7nXfkCWfZXsxutyX5WPKN5OfJP5OnmG27p91Oe/JJ5FvJ
r5L/Ik83x/ZKdrtdyWeS7yC/Qx5+ru1Z7HZrkPchn0++n/wRebR5tuey26lP
Poh8GfkR8pfkcebbXtBu14vcJV9Dfor8PXniBbYXt9tpRT6O3Jf8AvlX8pQL
bS9rt9uBfAp5APl18t/kGRbZXtlupzv5LPJd5HfJIy62PavdTi3yvuQLyQ+Q
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
zA+Zxu8fhPlz0/h9hTCPFSLnWwLPHyLnQ7uNQ+R8YT48RM4X5qtC5HxhfiJE
zhfmb0PkfGGe8LOcbym8qN1OS/Ix5BvJz5F/Jk/+RXoZ3FN7Obyd9gr4JO2V
cP8vsh9o5+oX2Y8w//lF9iPM032V/Qjzil9lP8K861fZjzCf8VXOtwq+46uc
D+3e/irnC/Pw3+R8YZ75m5wvzGt8k/OFee9vcr4wn/9Nzrcavs9u5xF51O+2
57LbrUc+iHwp+RHyF+RxfthewG7Hi3wE+Rryk+TvyRP9lF4DL669Fu5ttzOO
fBP5BfIvpvH8KcxT/vL49/wqzMuYxvOvMO9gGs/PwnzyL1lvHTzgl6yHdq/p
emH+W9cL8/S/Zb0wr/xb1lsP72a3M4t8J/ld8gh/bM9qt1uTvC/5AvID5I+1
N8Cj/5XeCM9tt9OAfDD5cvL/yF+Rx3UyWl7Ibrcp+UjyteSnyT+QJwlnewm7
ndbk48k3k18k/0aeKrzt5ex2O5JPJQ8kv0H+h9wjgu1V7HZ6kM82nSv+5fo+
/vDd6rvh96TdPfBIEcX3wbNJu/vhtdWD4f3UD8IXqR+GB6sfgT9VPwqPESnj
v++P0E5e0/j+6Ri8YSSZPw4fqvNod4XOn4Af0/mT8Nd2O/Ej217Ybqc5+Sjy
9eRnyD+RJ41ieym73TbkE8j9yC+TfzftuybTds8wTxM1tGPuHr47zhl4edOd
z17df/ccvLPpkw9zHd58ET7NdLav444NvQLfZtonxr1T1a7Db5p+nqbw+eS3
4E600K5cYNrlF3fgGU2vrfzs+s778GqmIzcvfWf8I3hP0+17zXvQ8Cl8rukj
Y989yfgCvse0x8JKL0NewR+YHuW37O3ht/DI0UP74aGvH2d+gOcwXfZara+t
QuB1TC9/te5nnq/wAdFlf37AF2v/gh/S/gN/pu1sNB4rhnR4024+7QjwxtoR
4cO0I8FXaUeGH9eOAn+rHRWeIKZ8fESDF5V2YsBbqMeEj1GPDd+gHQd+Tjsu
PEQ7Hjx5LOn48NLaCeDttBPCJ2ongvtrJ4Zf0U4C/6mdFJ42tnQyeEXt5PAu
2ingM7RTwrdLu6ngt9XTwMPFEU8LzyztpIdX184A763tAZ+nnRG+TzsT/KF2
ZnjUuNJZ4DnjyuefrPB6ceXzUzb4QJ3PAV+q8znhh3U+F/yFzueBx44nnRde
QDsfvIl2AfgI7ULw1dKeheEnpd0i8HfSwUXhieLL8cXhxaQ9S8C9pd2S8LHS
waXgm/R4T/h57TLwL9pl4SkSSJeDl9EuD29vtzOZfCv5NfJf5OkT2l7Jbqcb
+UzyneR3yCMksj2L3U5N8j7kC8j3kz8mj5bY9tx2u/XJB5MvI/+P/CV53CS2
F7TbaUrukq8lP0X+gTxxUttL2O22Ih9P7kt+Ubsi/KtpfL9fCZ4qWcZ/zw+q
wMuaxvf/VeEdTeP5QnX4lGSyXk14YDJZrxb8uq5XB/5H16sLz5Bc1qsPr5Jc
1msI7263M5t8F/k98ogpbM9mt1uLvB/5QvJg8ifkMVLansdupyH5EPIV5EfJ
X5PHS2V7YbvdZuSjyNeRnyH/SJ40te0l7XbakPuQ+5FfIv9OnjqN7eXtdjuR
TyMPIr9J/pc8Y1rbq9rt9CSfQ76H/D555HS2Z7fbqUPen3wx+UHyZ+Qx09ue
z263Efkw8pXkx8nfkCfIYHsRu50W5KPJN5CfJQ8hT+Zhe2m73bbkE8m3kF8h
/0GeNqPtFex2upBPJ99Ofos8XCbbM9ntVCfvRT6PfC/5Q/IomW3Pabdbl3wg
+RLyw+TPyWNnsT2/3U4T8uHkq8lPkL8jT5jV9mJ2uy3Jx5JvJD9P/pk8RTbb
Pe122pNPIt9KfpX8F3m67LZXstvtSj6TfAf5HfLwOWzPYrdbg7wP+Xzy/eSP
yKPltD2X3U598kHky8iPkL8kj5PL9oJ2u17kLvka8lPk78kT57a9uN1OK/Jx
5L7kF8i/kqfMY3tZu90O5FPIA8ivk/8mz5DX9sp2O93JZ5HvIr9LHjGf7Vnt
dmqR9yVfSH6A/Al59Py257HbbUA+hHw5+VHyV+TxCtheyG6nGflI8nXkp8k/
kicpaHtJu93W5D7km8kvkX8jT10otANOZtvkG+blTD+cmN1vpxe8k+n41XJs
PdICPtV02Rg5g863hgeZ7n0q547b7eE3TK+clGv3887wv6YvVsu9L6Q73KNw
aIePmSfY6QOvarrA6TyHYw6A9zDddnLeo0mHwOeYnl093wmPEfDdpo/EzH86
z2j4/cJyP2PgkYqEdvpl/UZnRTvZTR9K+N03xTh4bdPeE4dejeUD719Ejp8I
X2Qar3+gnYOm8frIJPhTnZ8Mj1lU5tFu3qIyPwXeqKjMT4UP1Xm0s1Lnp8GP
6fx0+BudR7vxi8n8DHiRYjI/E97cbmc0+Xrys+SfyJMVt72U3U5b8gnkW8gv
k/8gT1PC9gp2u53Jp5NvI79F7pS0PZPdbjXyXuRzyfeSPyCPUsr2HHY7dckH
kC8hP0T+nDxWadvz2+02Jh9Ovor8BPlb8oSethe122lJPoZ8I/k58s/kycvY
7mm32458Erk/+VXyn+Tpytpe0W6nK/kM8h3kt8nDl7M9s91ODfLe5PPJ95E/
Io9a3vZcdrv1yAeRLyU/Qv6CPE4F2wvY7XiRjyBfQ36S/D15ooq2F7fb9SYf
R76J/AL5F/KUlWwvY7fTgXwyeQD5NfLf5Okr217Zbreb6fQTLi35Phc+y/Qh
/8Kd1i6G7zTtfX1RgXor4Xf1+PXwCFXk680GeNYq8vVmE7xmFZnfDO+r837w
BTrvDz+g8wHwx9pB8OhVpbfDc2vvhDfQ3g0fbNq8nplsL3y5abyeuR/+n2nz
cmb1YPgr03g98xA8brV/67lH4IWq/VtvwVF402r/1gs8Dh9Z7d96p0/C11b7
t97T0/DTsp5zDv5B1kt2AZ6kulzfJXiJ6nJ9V+Ctq8v1XYOPry7XdwO+ubpc
3y34RVkv8A78m6x3+h48VQ25vgfwcjXk+h7DO0q7T+BT1Z/BA9Wfw2+ov4T/
UX8F96gp/gZeRdp9C++h/h4+WzsEvlv7G/yeHo92ItUS/w7PJu2indrqP+D9
pIN/whfp/G94sLTnX/hTPT7cJuMxasvx4U07eaXdiPCG0p6R4UOlnajwFbXl
8R8Nfqy2fHxEh7/W+Zjw+HVkPha8cB2Zjw1vXkfm48JHSbvx4OvVE8DPqCeE
f1JPDE9aV86XBF6qrpwvKbxNXZlPDp+g8yngfjqfEn5Z51PDv2ungaepJ50W
Xl47Hbyzdnr4NG0P+DbtTPCb0sGZ4U59ud+s8IzSntnh1aSdnPCe0sG54HP1
+DzwPXp8PvgDPb4APHID6YLwHNqF4HW0C8MHaBeBL9YuCj+kXQz+TLs4PFZD
6RLwfNol4Y21S8GHaZeGr9L2hB/XLgN/q10WnqCR3H85eFFptzy8hXRwBfgY
aacSfIMeXxl+To+vAg/R46vCkzeW46vDSzeWx1sNeLvG8nirCZ+o87Xh/jpf
B35F5+vCf+p8fXjaJnI9DeAVpZ1G8C7qjeEz1L3g25vI5/Om8NtN5PN3M3g4
L/l83Rye2Us+P7eAV/eS9bzhvb1kvVbweV6yXmv4Pl2vDfyhrtcWHrWprNce
nrOpfH3pAK/XVI7vCB/YVL4+dIIvbSrn7wI/LOu5XeEvZL3T3eCxm8nXtx7w
As3kenvCmzSTr0+94COayfX1ga9uJtfXF35S1lvQD/5O1nvaH56ouVzfQHix
5nJ9g+DezeX6BsPHNpfrGwrf1Fyubxj8vKwXOBz+RdYL/dbPeIoW8vgZCS/T
Qh5fo+HtW8j8WPhknR8H36rzPvBrOj8R/kt7Ejx9S+nJ8Ep2O93IZ5LvJL9D
HsHb9ix2OzXJ+5AvIN9P/pg8Wivbc9vt1icfTL6M/D/yl+RxW9te0G6nKblL
vpb8FPkH8sRtbC9ht9uKfDy5L/lF8q/kqdraXtZupyP5FPJA8uvkf0wfuboj
XLkZ8AztQrv1q1vuirnwKu1kfjG8u3TwEvhsaXcZfJe05wr4PT1+FTxiezl+
NTybtLsWXkvacz28n7SzEb5Q2xcerO0Hf6LtD4/RQToAnkc7CN5Qezt8iHTw
DvgKaXcX/Ki05x74az1+HzxeRzl+P7ywtBsMbybteQg+Sto5Al9nt3OG/CN5
0k62l7TbaUPuQ+5Hfon8O3nqzraXt9vtRD6NPIj8Jvlf8oxdbK9qt9OTfA75
HvL75JG72p7dbqcOeX/yxeQHyZ+Rx+xmez673Ubkw8hXkh8nf0OeoLvtRex2
WpCPJt9AfpY8hDxZD9tL2+22JZ9IvoX8CvkP8rQ9ba9gt9OFfDr5dvJb5OF6
2Z7Jbqc6eS/yeeR7yR+SR+lte0673brkA8mXkB8mf04eu4/t+e12mpAPJ19N
foL8HXnCvrYXs9ttaTrt90/ZJh2DjzVd81iz9CVOwTeaHjznv2RvzsLPm17b
Jle8pRfhn01fzjsvaq2r8BT9ZP2bcE9p9y68vfoj+CT1Z/Ct6q/hV+12fpGn
6297JbvdruQzyXeQ3zHdOnP/1pnDPPwA8bfwLKaXXp+w5Po7eA3TJbYmKL71
A7yPacMTPsHnm+5vFvwM3286YfHQA77CH5kOCD08wXd4tIFm/18fqfn6BzyX
aZNHfsHrm54YuvySP/BBprOYEzi+xpeZNuM1w5t2jwyU+4kIfzlQ7icyPM4g
uZ8o8IKD5H6iwb0Gyf3EgLuD5H5iwdcMkvuJAz81SO4nHvz9ILmf+PDEg+V+
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
TKCc7zr8Y6Cc7yY8aZCc7za8pPYdeBvtu3Afafce3E/9AfyS+kP4d/XH8NTb
5OvZE3j5bfL17Bm80zb5evYcPm2bfD17CQ/aJuu9ht/U9d7A/+p67+AZt8t6
7+FVt8t6H+E9t8t6IfA52l/ge7S/we9r/4BH3iH9C55d+w+8jrbjZ7y/dnjT
zmLtiPCD2pHhz7SjwmPulI4Oz6cdE95IOzZ8mHZc+Ert+PDj2gnhb3bK4ykR
PMEuebwkgRfZJY+/ZPAWu+TxlRw+epc8XlPCN+ySx2Nq+Nldcr608JBdcr7/
ubjnKLmSKADjFdvGxraNiW3btp1UbNt2NjYntm3b2ZibvjP1zrnf/Pft7756
9VrTPemzicXj7HTnSypecKc7X3Lxpjvd+VKIj9rpzpdKfN1Od7404pd3uvOl
E/++0z0e0osn2uUePxnFi+1yj4/M4m12ucdTVvEJu9x62cW37nLr5RC/6a2X
SzzIbrdeHvEUu916+cTL7nbrFRDv5LWf+HSvC4vv9rqo+AOvi4uH2uO6pHh6
r0uLV3btX0a8p2tbTnyua78K4ge94yuJP/OOryweca87vqp4Vtd+1cVruTY1
xft7XUt8ide1xY97XUf8rdd1xaPvc91YPI/XLcUb6DZD4avg57xuK/7J63bi
8fxdtxf387qDeHOvO4qP9rqT+AavO4tf8bqr+E+vu4sn3u+6p3gJr3uLt/W6
r/gkr/uLb/Pait/2epB40AOuh4in8nqYeDmvR4h38XqU+Ayvx4jv9Xqc+EOv
J4iHOeh6kngGr6eIV/V6mngvr2eIz/d6lvgh1/dmi79w7T9XPNKhwF4wXzy7
a7tQvLbrhovFrWu/peJLXSdaLn7StVkp/s71vVXiMQ+7868Rz+t6wVrxRq7t
evFhrhtuFF/j2m+z+HnXibaKf3FttovHP5I88P9Pv0O8sK/l/dAu8RZH3Pn2
iI9189X2iW9082n2i19z8+ag+C9v/UPiSY+69Y+Ilzzq1j8m3v6oW/+E+GQ3
n+aU+A43b86I33Hzl8+KBz/m1j8vnvqYW/+ieIVjbv3L4l3dfJqr4rPcvLku
vs/NX74h/thb/5Z42ONu/TvimY679e+JVzvu1n8g3sfNm0fiC7x+In7E62fi
L71+IR7lhOtX4jm8fiNe1+t34gO9/iC+3OuP4qdOuN+Xn8Q/nHC/L7+Ixzrp
fl9+E89/0v2+/C7e+KT7fflTfMRJ9/vyt/i/J935zDqfXzzpzhfE1/brSXe+
YOIJTrnzhRAvcsqdL6R4q1PufKHFx51y5wsrvvmUO1948eu+lu+zRBD/42v5
vkok8WSnkwd+HyWyeGlfy/dNoop38LV8Pyaa+FRfy/dfYojv9LV8vyWm+D1f
y/dXYouHOJM88Ps2ccTT+lq+TxNPvKKv5fsy8cW7+1q+D5NAfPYZdz2JxPef
cdeTWPzJGXc9ScXDn3XXk0w881l3PSnEa5x115NSvO9Zdz2pxRedddeTRvzo
WXc96cRfn3XXk1486jl3PRnFc51z15NJvN45dz1ZxAefc9eTTXyFr+X9S3bx
M76W9zc5xP/ztbz/ySke53zywPdHucQLnHfr5RFvet6tl1d85Hm3Xj7xdefd
evnFL3nrFRD/7q3nJ57wgns9LSRezPXfT74+b+3av4j4BNemmPgW7/ji4je9
40uIm4vu+JLiKVyb0uJlXPuVEe/k2pYVn+YdX058t3d8BfH73vEVxUNdcsdX
Ek/n2r+yeGXXpqp4D9d+1cTnesdXFz/gHV9D/Jl3fC3xCJfd8bXFs7q2dcRr
uvavK97ftakvvtg7voH4ce/4huJvvOMbiUe/4o5vIp7btV9T8QaubTPxIa79
m4uv8o5vKX72inv8tBL/dMU9XlqLx73qHm9txf2uusdXO/FmV916HcRHX3Xr
dRRff9Wt10n8irdeF/Ef3npdxRNfc+t1Fy9+za3XQ7ztNbdeT/GJ19x6vcW3
XXPr9RG/5a3XTzzodbdef/GU1916A8TLXXfrDRTvfN2tN0h8xnW33hDxPb7e
+WzR6AxDxR/6uuv5YrHqDRMPfeNvZ/ANDBfP4Gvf+M4R4lV8Lf//lpHivXxd
37fAaPF5vo5d7+9/GCN+yNcX/i7fdaz4c1+P8Z1gnHikm3+7+F8+P1482023
34nitW+6/U4SH3DT7Xey+NKbbr9TxE/cdPudKv7uptvvNPEYt9x+Z4jnveX2
O1O84S2331niw265/c4WX33L7XeO+Plbbr/zxD/72vd+45O0iX87ecD7jRfz
xQvdDpy/t0C8xe3A+csLxce4+ROLxDe6ef/F4lfd/JYl4r/c/Kql4knuBM4v
WCZe8k7g/NTl4u3uBM6PWiE+2c3bleLb3Xy3VeJ33Hzr1eLB7gbON1wjnvpu
4Hy1f8XL3w2cL71WvKub91snPtPNZ18vvs/Np9kg/sjNJ9ooHvZe4HyMTeIZ
7wXOh90sXu2eu/23iPd285+kzQI3/2Kr+GE3f2+b+Es3f3m7eOT77vbfIZ7j
vrv9d4rXue9u/13iA938qt3iy9z8gj3ip9z81L3i7938qH3isR64299fPN8D
d/vvF2/8wN3+B8SHu/mGB8X/dfPVDolfcPOlD4t/dfN+R8T/eehu/6PiRR66
2/+YeMuH7vY/Lj7Ozcc4Ib7JzYc9KX7dzZtT4r91m2SPtJfSbTrAp8B3wu/C
QzzWnka3qej1GfFuru058dmeXxT39/yy+BPPr4mHe+L8hnhm1+a2eHXP74r3
9fyB+ELPH4of9fyx+CvPn4hHfer8mXhO1/a5eD3PX4oP8vyV+ArP34if9vyt
+H+evxeP/cz5B/ECrs1H8Sa6zUj4Wvgl+Dd4wufai+o2reHj4VvgN+Dmhfbk
uk0ZeEf4NPgu+H14yJfa0+m2leA94HPgB+BP4RFeac+i29SE94Mvhh+Dv4FH
e609t25bHz4EvhJ+Fv4RHveN9oK6TTP4KPh6+GX4D3iit9qL67Zt4BPhW+G3
4EHeaU+p25aFd4ZPh++BP4CHfq89vW5TBd4TPg9+EP4cHvGD9my6bS34APgS
+An4W3iM/7Tn0W0awofCV8PPwT/D433UXki3bQ4fA98Avwr/CU/ySXsJ3aYd
fBJ8O/w2PNhn7al0m/LwLvCZ8L3wR/AwX7Rn1G2rwnvD58MPw1/AI3/Vnl23
qQO38GXwk/D38JjftOfTbRvBh8PXwC/Av/i6ea+oM4d9Ev/n+98e9vrvf/ki
XtjXyxrtqjXvq3hLXx+5HClPmu/iY339pFTTuFt/iG/ydci9278X+iV+zdfJ
skS4efq3+G9fJ7m4/nY6s97nSX/8bR9/kDalfF24RIi924OIt/d15YEZ1/YP
Kj7F143/bqdoMPEdvu70afC4sMHF7/raN35O2gb/+bcntrrWfloI8TS+Xrg4
aIO6IcUr+HrD7XQVkoQS7+br/bFqFHwmbWf5+lylvyuGFvf39b3RqxN2DSP+
2NfvDv+9QcKKh/vlbt9w4plcL5A21V37hRfv4/qetFno2kYQP+I6UUTxV679
pW2U34HdMJJ4Ttcmsnhd1wukzSDXflHEl7u+J21Ou7ZRxT+4ThRNPPYfd35p
m991w+jiTVybGOIjXC+QNmtd+8UUv+j6nrT55trGEk9gUgSeP7Z4Udf+0raV
64ZxxMe7NnHFN7teIG1uuPaLJ/7H9T1pkzxIYNv44qVdJ/pHvKNrf2k71XXD
BOK7XJuE4vd87fs4NVXahAz6t1f7Ph8lEk8b1K0nbSoFDZyvlli8u5t/IW3m
uHmbRHy/m4+RVPypm18lbcMHc9ebTDxLsMD5y9K2RrDA+dbJxfu5eZNCfJFr
f2lzzLVNKf7aWz+VeLTg7vjU4rl8LX8/kjb1fS3/PJ5GfLCvT/v+/iRtVvpa
/j6VVvyMt1468Y/eetI2Tgi3XnrxgiHcetK2aQi3XgbxUSHcehnF17m20uay
55nEv3subRKFdJ5ZvFhIdz5p0yak218W8Qkh3fmzim8N6fabTfymt1528SCh
3HrSNkUot14O8bKh3Ho5xTuFcuvlEp8eyq2XW3y3ayttHnieRzxUaOfSJr1r
k1e8suv10qan64b5xOe6jpxf/KBrf2n7zHXHAuIRw7jnU0HxrK7PSZtarq2f
eH/XmQqJL3F9T9oedz2hsPhb135FxKOHDex30iaP6wVFxRu4rlhMfKhrU1x8
ldclxM95XVL8k+t70iZeOHf9pcT9XC8oLd7ctS0jPtp1w7LiG1z7lRO/4jpR
efGfrk0F8cThXVcUL+F1JfG2XlcWn+R1FfFtrv2lzW3Xtqp40AhuP9XEU7k2
1cXLeV1DvIvXNcVneF1LfK/XtcUfel1HPExE13XFM7j2lzZVXdt64r1c+9UX
n+8d30D8kHe8tHnhHd9QPFIkd3wj8eyuTWPx2q79pf8e4I5vIr7UO76p+Env
+Gbi77zjpU3MyO745uJ5Xfu1EG/k2rQUH+Z1K/E1XrcWP+96vbT54rphG/H4
Udzzs614Ydf+0raF647txMe6TtRefKPrc9LmmmvbQfyX60wdxZNGdc8HaVvS
9YRO4u1d+3UWn+z6nbTZ4XpBF/E7rit2FQ8ezV1/N/HUuk0FeFf4LPg++GN4
2OjaM+m21eB94AvgR+Av4VFiaM+h29SFD4Qvh5+Cf4DHiqk9v27bGD4C/i/8
IvwrPEEs7UV0m1bwcfDN8OvwP/BksbWX1m07wKfCd8LvwUPE0Z5Wt60I7w6f
Dd8PfwIPH1d7Zt2mBrwvfBH8KPw1PGo87bl023rwwfAV8DPw/+Bx4msvoNs0
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
hXd8HPHT3vFxxf/zjo8nHvuTO17aFHBt44s3ce33j/hI1yaB+Frd5hL8Gzzh
Z+1FdZvW8PHwLfAbcPNFe3Ldpgy8I3wafBf8PjzkV+3pdNtK8B7wOfAD8Kfw
CN+0Z9FtasL7wRfDj8HfwKN9155bt60PHwJfCT8L/wiP+0N7Qd2mGXwUfD38
MvwHPNFP7cV12zbwifCt8FvwIL+0p9Rty8I7w6fD98AfwEP/1p5et6kC7wmf
Bz8Ifw6P+Ed7Nt22FnwAfAn8BPwtPIZJpTyPbtMQPhS+Gn4O/hkeL4j2Qrpt
c/gY+Ab4VfhPeJKg2kvoNu3gk+Db4bfhwYJpT6XblId3gc+E74U/gocJrj2j
blsV3hs+H34Y/gIeOYT27L6W9xcBXsfX8v4jwK2v5f1JgC/ztbx/SSh+0q1n
pc17t96pAI8ZMnC9OInE84UMXK+5tG0UMnC9TQE+PKTbX2LxNV4nEb/gdVLx
L66ttPknlPNk4oVd+0ublq5tcvGxrv1SiG/yjk8pfs3X8v5e2vz2tbz/D/Ck
od16AV4qdOD8qgBvHzpw/nKAT3HzJpX4Dtf+qcXveuulFQ8exu0vvXga1yaj
eAVf+063Stp083V13wkzic/y5jOL+3vz0vaxN59FPFxYN59VPJNrK22qe55N
vI/X2cUXep1D/IjXOcVfeZ1LPEo4tx9pkzOc209u8brh3Hwe8UHevLRd7s3n
FT/tzecT/+DaX9rEDu+uJ794ftd+BcSbuDYFxUe49pc2a73j/cQvescXEv/m
HV9YPEEE10XEi3pdVLyV18XEx3tdXHyza39pc8O1LSH+x7VfSfHkEd3xpcRL
6zYdI7rbL8Cnel5afFdEd3tK23vefICHjOTmy4injeTmpU2lSG4+wLt782XF
53jz0na/Nx/gT735cuLhI6s2WXTbGvB+8EXwY/DX8GhRtOfSberDB8NXws/A
P8LjRNVeULdtCh8FXwe/DP8OTxRNezHdpg18Anwr/CY8SHTtKXSbsvBO8Onw
3fAH8FAxtKfXbSvDe8Lnwg/Cn8EjxtSeVbepBe8PXwI/Dn8Ljx5Lex7dtgF8
KHwV/Bz8EzxebO1+uk1z+Gj4BvgV+E944jjaS+i2beGT4Nvgt+FB42pPpduW
g3eBz4DvhT+Eh4mnPYNuUxXeCz4ffgj+Ah4pvvbsum1tuIUvhZ+Ev4PH/Ed7
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
1679z4hH7RLYic6J53Jtz4vXc33vgvhg136XxFe4XnBZ/Ixrc1X8P1/L5yVp
E6drqsDPS9fEC3R189fFm3Z189J2pDd/Q3ydN39T/JLXt8S/e31bPGG3VAGf
L19Lm2K+ls+fd8Rb+9r3+fT4XfEJvpbPr/fEt/ja9/l2yX3xm76Wz78PxE13
d3s9FE/RPfB87R6Jl+keeL46j8U7dQ88X6kn4tO6B54vx1Px3d0Dz5fsmfj9
7oHni/pcPFQPd30vxNP5etzDXOMeSpvKvo5/tFP8oy/Fe/Rwt+cr8bm+zuU7
4LX4AV8f+zve6Y34sx7u9n4rHqHn337kO+CdeFZfd/ad4L14zZ5uPx/E+/d0
+5G2i3u6/fwnfryn289H8Tc93X4+iUfv5fbzWTx3L7efL+INern9fBUf0svt
55v4ql5uP9/Fz7rjL0ubT73c+X+Ix+3t7r+f4n693fl+iTfrHTif5rf4aDdv
/oivd/OXpc0VN7/KbPT5D2/9IL42ifu49YOKF+/j1g8m3raPWz+4+EQ3f1na
bHPzq0KI33LzNqR40L5u/VDiKfu69UOLl+vr1g8j3tnNX5Y2M9z8qrDie9y8
DSf+0Fs/vHjofm79COIZ+rn1I4pXcW2lTS/PI4nPc31P2hxy7R9Z/LnrBVHE
I/V360UVz+a6YTTx2q79oosPcJ0ohvhS1yam+AmvY4m/8zq2eIwBruOI5/U6
rnhD11baDPM8nvhqX8vfS6TNeV/L31fii3/2tfz95B/x+DZV4N9bEogXsm69
hOItrFtP2o6xbr1E4hutWy+x+FVvvSTiv7z1koonGej2L21KujbJxNt5nVx8
stcpxLd7nVL8jtepxIMNcp1aPLXXacTLD3Kvv9Km6yD3+ppWfOYg9/qZTnzf
IPf6mF780SD3+i5twg52r98ZxDMOdteXUbzaYPf6m0m892D3+ppZfMFg9/tB
2h4e7F7/s4i/HOxe37OKRx7iXr+ziecY4q4vu3gd1wukzUDXfjnEl7m+J21O
ubY5xd+7TpRLPNZQ9/yQtvlcN8wt3ti1ySM+3Ou84v96nU/8gtf5xb96XUD8
n2GuC4oX8dpPvKVrK23GeV5IfJNrf2lz3ZsvLP7btV8R8WTD3fFFxUt5XUy8
g9fFxad4XUJ8p9clxe96XUo8xAjXpcXTeF1GvKLXZcW7eV1OfLbX5cX9va4g
/sTriuLhRrquJJ7Z68ri1b2uIt7X66riC0e611tpc3Ske30O8FfefDXxqKPc
vLTNOcrNB3i9UW6+uvigUe7xLG1WjHKP/wA/Pco9X2qI/zfKPb+kbezR7vlY
U7zAaPf8lbZNRrvz1RIfOdqdT9quHe3OF+CXRrvz1Rb/NtqdT9okHOPOV0e8
6Bh3PmnTeow7X13x8brNFvgNuBmrPbluUwbeET4Nvgt+Hx5ynPZ0um0leA/4
HPgB+FN4hPHas+g2NeH94Ivhx+Bv4NEmaM+t29aHD4GvhJ+Ff4THnai9oG7T
DD4Kvh5+Gf4DnmiS9uK6bRv4RPhW+C14kMnaU+q2ZeGd4dPhe+AP4KGnaE+v
21SB94TPgx+EP4dHnKo9m25bCz4AvgR+Av4WHmOa9jy6TUP4UPhq+Dn4Z3i8
6doL6bbN4WPgG+BX4T/hSWZoL6HbtINPgm+H34YHm6k9lW5THt4FPhO+F/4I
HmaW9oy6bVV4b/h8+GH4C3jk2dqz6zZ14Ba+DH4S/h4ec472fLptI/hw+Br4
BfgX+D9ztRfWbVrCx8I3wa/Bf8OTztNeSrdtD58C3wG/Cw8+X3sa3bYCvBt8
Ftwf/hgeboH2TLpNdXgf+EL4EfgreJSF2nPqtnXhg+DL4afhH+CxF2nPr9s0
gY+Ar4VfhH+DJ1isvahu2wo+Hr4ZfgP+B558ifbSuk1H+FT4Lvg9eMil2tPq
NpXg3eFz4PvhT+Hhl2nPotvWgPeDL4Ifg7+GR1uuPZduUx8+GL4Sfgb+ER5n
hfaCum1T+Cj4Ovhl+Hd4opXai+k2beAT4FvhN+FBVmlPoduUhXeCT4fvhj+A
h1qtPb1uWxneEz4XfhD+DB5xjfasuk0teH/4Evhx+Ft49H+159FtG8CHwlfB
z8E/weOt1e6n2zSHj4ZvgF+B/4QnXqe9hG7bFj4Jvg1+Gx50vfZUum05eBf4
DPhe+EN4mA3aM+g2VeG94PPhh+Av4JE2as+u29aGW/hS+En4O3jMTdrz6jaN
4MPga+Dn4V/g8TdrL6zbtoCPhW+EX4P/gifdor2kbtMePhm+A34HHnyr9tS6
TQV4V/gs+D74Y3jYbdoz6bbV4H3gC+BH4C/hUbZrz6Hb1IUPhC+Hn4J/gMfa
oT2/btsYPgL+L/wi/Cs8wU7tRXSbVvBx8M3w6/A/8GS7tJfWbTvAp8J3wu/B
Q+zWnla3rQjvDp8N3w9/Ag+/R3tm3aYGvC98Efwo/DU86l7tuXTber7e7N+x
Z/F64oN9HfbQ0FmT64uv8HX9o7N232sgfsbXG0+su5O+kfh/vg595pDp01g8
zr6/Xff89STHmogX8PXGS2+Kxmgm3tTXIa8Fa9G4ufhIX9e+GXvkuhbi63y9
/k761T9bil/ydfAHhU+Xai3+XeYf13g7rY14Qv+/vfZZ2yiP2ooX83XwVwOz
Zm4v3trXNd9Oq9a/g/gEX6/5sLrHyY7iW3wd9LP/zNidxW/6uvq3y7uadRE3
+33zP1/c3thVPMV+d/t1Fy/j+py06eR6QQ/xaa479hTf7dqvl/h915F7i4c6
ENj3pG061+v7iFd2bfuK93BdsZ/4XNeJ+osfcP1O2jxz7T9APMLBwJ5gxbO6
bjhQvKbrTIPE+7s2g8UX+1r+/4jS5riv5d8vh4i/8bXv3yc3DRWPfihV4L9n
DhPPfchdz3DxBocC12s+QnzIocD1yo4UX3UocL2so8TPuvXijBb/5NYzY8Tj
HnY9VtzP63HizbweLz7a6wni672eKH7F60niP3wt//4ibRIfSRX47zOTxYsf
cfNTxNsecfPSdqI3P1V8mzc/TfyWr4v+/TkkbYIe/dsjfD/TxVMedbfPDPFy
vo4a5e/PTPHORwPXvyxtZhx1t/8s8T2+vnP79u16s8Uf+jqJ72eOeOhj7v6V
NhmOuf3PFa/i6zd/f9rPE+91zN0/88Xn+bpnjx49vkibQ77evevvzwLx58fc
/b9QPNLxwOstukg82/HA6w29WLz2cff4krYDjgde78Ql4kuPu9tzqfiJ4+7x
sUz83fHA670tbWOcCLzeRcvF855wj78V4g1PBF5vmpXiw04EXu8babv6hHt8
rxI/fyLwenusFv98IvB6864Rj3/S3b//ihc66W5PadPipNv/WvEx3vw68Y3e
vLS96s2vF//lzW8QT3LKzUubkqfc/Ebxdqfc/Cbxyd68tN3uzW8Wv+PNbxEP
dto9vqRN6tPu+K3i5U+7+3ebeFc3X227+Ew3n2aH+D43b3aKP/LWlzZhz7j1
d4lnPOPW3y1e7Yxbf494bzefZq/4Ajdv9okfdu0vbV566/mLRz7rXq/3i+dw
bQ6I1znr7n9pM/Cse/wcFF921j3+DomfOusev9L2vVvPHhaPdc49f46I5zvn
nn/SpvE59/w9Kj78nHv+HxP/95zb33HxC66ttPnq+Qnxf867/UubIufd/k+K
tzzv9n9KfNx5t39pu+m8W/+0+HW3XtYz4r/dek+kTbILbv9nxUtdcPs/J97h
gtvfefEpF9z9LW12XnD37wXxu978RfEQF928tE1z0c1fEq940c1fFu/meoG0
me3a74q4v+t70uaJa3tVPNwl9/v2mnhm1/7StrrrhtfF+7o2N8QXurbS5qjn
N8VfXXLXI22iXnbXc0s852U3f1u83mU3L20HefN3xFd483fFT3vz0uY/b/6e
eOwrbv6+eIErbl7aNrni5h+Ij/TmH4qvdW2lzSXPH4l/89aTNgmvuvUeixe9
6uafiLe+6ual7Xhv/qn4Fm/+mfgN55el/34Adsc/F09+ze3vhXiZa269l+Id
3XyaV+LT3Lx5Lb7L176vJ4aSNvd97fv6YsQAD3k9cL0YAZ7O1/J9xgCv5Gvf
1yOTBniP6+58AT7H177vS2YO8AO+lu9HBvjT6+7xGuARbgTup0SAZ7kRuJ/y
AV7zhru+AO93I3A/dQN88Y3A/TQJ8GM3AvfTOsDf3AjcT6cAj3YzcD89Azz3
TXd7Bnj9m4H7GR7gQ26mct9PFV95M3A/UwP87M3A/cwJ8I83A/ezOMDj3nL3
X4AXvBW4nw0B3uxW4H62B/ioW+75GODrbwXu52iAX74VuJ8zAf7jlnu8BHii
24H7uRXgxW8H7udhgLe5HbifFwE+8Xbgft4H+Nbbgfv5GuC3brvHzxvxIHdU
m5S6bVl4Z/h0+B74A3jou9rT6zZV4D3h8+AH4c/hEe9pz6bb1oIPgC+Bn4C/
hce4rz2PbtMQPhS+Gn4O/hke74H2Qrptc/gY+Ab4VfhPeJKH2kvoNu3gk+Db
4bfhwR5pT6XblId3gc+E74U/god5rD2jblsV3hs+H34Y/gIe+Yn27LpNHbiF
L4OfhL+Hx3yqPZ9u2wg+HL4GfgH+Bf7PM+2FdZuW8LHwTfBr8N/wpM+1l9Jt
28OnwHfA78KDv9CeRret4OvfcX6m6P1WvJvn78Vnef1B3N/r/8Qfe/1RPNxL
15/EM7m2n8Wre/5VvI/n38QXev5D/IjnP8Vfef5bPMqrVIHvh6VNTl/L++c/
4nV9LW+3pc0gX8v7c7PJ58tfufWC+Nqc9taTth+89YKKx37t1pO2+V+79YKJ
N3nt1gsuPsLrEOJrvQ4pftHrUOLfvA4tnuCNu35pU9S1CSPeyuuw4uO9Die+
2evw4je8jiD+x+uI4v9zdZfRTS1RGIY37u5enBZ3hwDFi1Ncirt74cLg7u7F
obg7BHd3L+5Q3OFmvpw9a83uv5dnnzkSaQhpyfyeOx68CrdCU3fj8eEzTSeA
7zWdEB5mOhE8ajh3Ynh200ngtUwnhfflVmhaYDwZ/JBuvN5A03PdeH2THB77
A2+fAp7vgzMfmBJe/4Mz75cK/h/PU2r4UrM9mk4aTwN/y+tdQ1Oij7z/tPAi
H3n7dPBmH3n/PvDhPO+XHr6G5ykD/LzpjPDPpjPBU3zi/aGp9CdePzO89See
zwIfZ+bRaqOZzwq/ZuazwX9yu9Hk85nPxxdentvlB+/ETdnhU7jdaNphts8B
v2O2zwmP8IW3zwXPwq3QFGA8N7yHcTTNNp4Hvs90Xvgj0/ng0b5y54fnNF0A
Xptboam/8YLwhdxuNB0x84XgL7hdheFxv/H2ReD5uRWaGhovCh9sHE3LjReD
n+J2o+m9mS8OT/yd918CXoybSsKbcys0jTReCh5qujT8omkX/IvZHk2pfrCX
gbu43Whqy63Kwsdzu8rBN5vt/eHXf/DjC02/f/D9tzw8/U9erwK84k++P1eE
d/7Jj69K8Gk8T5XhO832aLpnvAo84i92NGXjpqrwasbR1Mt4AHzOL+d4ZqLp
wC8+nmrwxzzvRlOM33z81eG5fjvzr9BU9zfvrwZ8AM8nqQlfzPOhaHWU5121
4K94/hpaxfvjzHesDS/4h4+/DrwRt0KTMl4XvsJ0IPyM6XrwcLM9mpL+Za8P
L86t0NTCeAP4KONoWme8IfyS6Ubwb6Ybw1P/4+3RVJabmsDbGUfTRONN4VuM
o+mm8WbwP9xuNGUkX2e+ObwStysI3pWbWsCnm3k07TbeEn7fOJoiR2BvBfc1
3Rpew3QbeG9uhaZ5xtvCDxpH01Pj7eAxIzrtRlMebtUeHsjt6gAfyE0d4SFm
Hk3HjXeCv9aNxwOaEkTyde7/Xi8Uibf3epNIznyo14fy/DWvr+J56gw/azd9
FJ4ssu0l7VYthY8Rvl74FeHfhaeNYns5u6mD8EnCtwm/Jfyf8ExRba9it+om
fKbwPcLDhEeJZnt2u1VN4X2Fzxd+SPgz4bGj257XbqovfJDwpcJPCH8rPGEM
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
TbqPHjlypNwH+HXdl/UXWv3S/ejhw4ctPsLTl/R0uP5Cqwol+Xp+gncu6VyP
eJ/hU0s612MRmnaWdK5Hzi/wuyWd67EPTRFLOdej6ld41lLO9biNpmqlnOvR
4Ru8ZynnenxH05xSzvUY/R2+v5RzPZL+gD8u5VyPFWgVvbRzPQr8hOcq7VyP
I2hVp7RzPWr/gg8o7VyPh2i1qLRzPbr/hh8tzfePP/CX3ApN8Vzsf+EFuBWa
Ghn/Bx9iHE0rjNNO7aeNoynceAR4kjLsaCrOTRHhQcbRNMp4JPha42i6ZDwy
/KtxNKUuyx4FXkZ335ZZ+7ZEUzvdb45Wf3PU6xN0a84aFb5F982xC2+ORasb
uqvrDbz+R7fevHo0eIZy+v6zOVHxzWiqpHuLJxNFh3fRnU0fAJqm616kd+D1
XboTe8aLx4Df1z3Os/uFaBXJn88nJtzXn88Hrar78/l4vbc/n08s+Fx/Ph80
HfTn8/H6E38+n9jwmOX5fNAqd3k+nzjwwPJ8PmgVXJ7Px+sh5fl84sKPlefz
QdPr8nw+8eDxK/Dth6ZC3BQf3tg4moYaTwBfaRxNZ40nhH8wjqZkFdkTwUtw
KzS1NJ4YPto4mtYbTwK/zB2Epu/cbq+nqeS0T1J4OW6FVu25w7w+iduVDL6V
OwRNt7gpOfyvWQ9NmSqzp4BX5lZo6mY8JXyGcTTtMZ4K/sA4mqJUYU8N9+NW
aKppPA28j278/gQ0zdeN36+QFu7Wjb9voumZbvx+hnTwWFX9nN/fgKa8uvH3
Tx94Pd34/Q9oGqQbvx8iPXxJVT6eDPATVfl40OpNVT6ejPCEAXw8aFU4gI8n
E7xpAB8PWg0L4OPJDF8dwMeDVucC+HiywD8F8PFkhSevxtcPTaW4KRu8lXE0
jTXuC99gHE1XjfvBfxhHU7rq7Nnh/tX5fNHUsTqfTw74ZDOfE77dzKPVbTOf
C041eD43PDO3QlNV43ng3Y2jaZbxvPC9xtH00Hg+eNSa7GjKwU354bW4u6Op
H3eY1xdw1ywAP8ztRqvn3HkKwuPU4scjWuXjjl8I3oBbodV/3OFeX8YdVBh+
kvsimt5xu4rAE9V2ehOainL7FIU3456CphHcVAy+htuNpgvcqjj8M7erBDxl
Hd6+JLx0Hef2vYamNnX49i8FH8fzqjR8E88HuuDXeN6vDPyXWb8s3Kcuz6Op
Ql1e3+ud6vJ8OfhUM49WO8y81++aeX94hECeR1PWQJ73ekAgz5eH9zTzaDXb
zHt9v5mvAH9k5tEUvR7Pez1nPZ6vCK9Tj+fRqr+Z9/oiM18JfsRueik8bn3b
C9itGgofIny58NPC3wtP0sD2YnZTkPCRwtcKvyj8q/BUDW0vY7dqK3yC8M3C
bwj/LTxDI9sr2k1dhE8Tvkv4PeGRGtuezW6qLryX8LnCDwh/IjxGE9tz263q
Cg8Wvlj4MeGvhMdvantBu6mxcCV8pfAzwj8IT9rM9hJ2qxbCRwtfJ/yy8G/C
0zS3vazd1F74ROFbhd8U/ld4xiDbK9utugqfIXy38AfCI7ew3c9uVUN4H+Hz
hLuFP9W9q1Lsbhu8Hqulp7Pc2fI5bRV4Ht3TujQMnlwVXq8lb18NPrAlPz+i
aUlLfv6sDj9u5mvA35h5tErQiudrwgu34vla8CateB5Nw8x8bfgqM18Hfs7M
o9VHM18Xnrw1zwfCS3K70NSKW3l9DLfb6xvM9vXgV0zXh/8w3QCetg13Q7i/
6UbwDqYbwyebbgLfxq3QdNt4U/g/42jK3Ja9GbyK3dRd+Ezhe4WHCY/azvbs
dlMt4X2FLxB+SPhz4bHb257PblVf+H/Clwo/Kfyt8EQdbC9iNzUTPlz4GuHn
hX8WnqKj7aXtVq2FjxO+Ufg14T+F+3Syvbzd1En4FOE7hN8RHqGz7VnspgDh
PYTPFr5P+CPh0brYntNuVVt4f+ELhR8R/kJ43K6257ebGgofLHy58FPC3wtP
3M32Ynar5sJHCg8VflH4F+GputvuspvaCh8vfLPw68J/627ZtU8FP6+n7+Hp
fDuLZUzSHF6xB88HwTtzKzRNM94CvtM4mu4ZbwmP2JMdTdm4qRW8mnE09TLe
Gj7HeBv4AePt4I+Nt4fH6MXeEZ5LN36+Dk11dePn77w+QDd+Ps/ri3Xj5/c6
wY/qxs/3oemVbvz8n9fj9fZzfj6wM7ygbvz8IFo10o2fL/S60o2fP+wCX9Gb
jx9NZ3o7x3vJ6+G9nePN0BWetI9zvL3Rqngf53iPeb1FH+d4k3WDj+rjHG97
NK3r4xzvHq9f6uMcb6zu8G99nONtilap+zrHu8HrZfvy9e0Bb6cb/58Pmibq
xv/n0xO+Rbf3/xeH39SN/88Hrf7oxv/n0xuesZ+f8//59IFX6sf76wvv2o/3
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
m7oInyZ8l/B7wiN9sD2b3VRdeC/hc4UfEP5EeIyPtue2W9UVHix8sfBjwl8J
j//J9oJ2U2PhSvhK4WeEfxCe9LPtJexWLYSPFr5O+GXh34Sn+WJ7WbupvfCJ
wrcKvyn8r/CMX22vbLfqKnyG8N3CHwiP/M12P7tVDeF9hM8T7hb+VHis77bn
sZvqCR8ofInw48LfCE/ww/bCdqsmwocJXyX8nPCPuvH+hNeT//Rz3o8YAy+p
G+9njIW30o33L8bBx/zk9cbDN/zk9dDqillvAvyHWW8iPO0vXm8S3P8XrzcZ
3oFboWmy8SnwbcbRdNv4VPg/3fj8Bpoy//bjn4eCV/nN20+Hd//tzAfOgM/k
eb+Z8L08T7PgYWZ7NEX9wz4bnp1boamW8TnwvsbRtMD4XPgh42h6bnwePPZf
djTl46b58PrG0fSf8QXwpcbRdNL4Qvhb42hK9I99EbzIP76+aGr2j6/vYvhw
nlch8DU8H7gEfp7n/ZbCP5v1l8FTUHZvx0dTaW4fr7fmzuP1cdwur2/krun1
a9xBXv/J3d3rPhGcVl4vzz3F6524Q7w+hXuT13dwu71+h/ui1yNEdDrM61m4
w70ewE3L4T3sptnC9wl/JDxaJNtz2q1qC+8vfKHwI8JfCI8b2fb8dlND4YOF
Lxd+Svh74Ymj2F7MbtVc+EjhocIvCv+ie1Hd5qd+ez1VVE8nfjzjzp8VcJfu
cT1Ov/27Et42Km+/Gj6eW62Bbza+Fn7dOJp+G18HTx+N709oqsit1sM7c7s2
wKdx00b4Tt34/xrQdE83nn83wSNGz+78fxCb4dl04/kbrapF5/1tgfeK7qyX
fyt8TnRnvWdoOsDrzd0Gf8zrBWyHx4jBx7cDnsv0Tnhd07vgA7jdaFrMrXbD
j3K79sBfme33wuPFzO48H6GpoG48/+yDN4rJ8/vhysyj1QozfwB+xswfhIdz
u9GUNBYfnxtenNt1CN6Cmw7DR5l5NK0zfgR+yTiavhk/Ck8dmx1NZbnpGLxd
bD4fNE2MzedzHL7FzJ+A3zTzaPXHzJ+EZ4zD86fglbjdaOrKrU7Dp3O7zsB3
m+3Pwu+b7dEUOS5vfw7uy+06D6/BTRfgvbndaJpntr8IP2i2vwR/ara/DI8Z
j7dHUx5udQUeyO26Ch/ITdfgIWYeTceNX4e/Nn0DniA+9014IW6FpibGb8GH
GkfTKuO34WdN34F/NH0XniwB9z14SdP34S25FZrGGH8AX28cTVeMh8G/J+D7
C5rSJuT7y0N4uYQ8/wjeISHPo9UkM/8Yvs3MP4Hf4naj6R+3egrPlIhvn2fw
Ktz0HN7N9Av4TNMv4Xu4FZrCjL+CR0nMjqbs3PQaXjMxnw+a+ibm83kDn2/m
38IPmXm0embm38FjJ+H59/C8Sfj5FE31k/Dzbzh8UBJ+vkbT0iT8/P4BfsKs
9xH+1qyHVgmT8nqf4EWS8npo1TQpr/cZPjwpr/cFvjqpc/zX0HQ+KZ/fV/gn
nlff4CmS8fl+h5dK5sz7/YC3Tsbr/4SPZQ9F00az/S/4VTP/G/7TzKNVuuQ8
/wdePjnP/4V3tJumCN/O7fL6HW7ldUrB90+vZ+Gmf/Cq3CFo6sHtot3aZ3GH
oWkft4oAf8jtExEeLSXvD61ycAdFgtfmpsjwfin59kHTwpR8faLAD/O8igp/
wfOB0eBxUvHtEx2ePxWvHwPegFuhabDxmPBlxtF0yngs+Du7KXFq24um5uPx
evPUfPxeH2HmY8NDzTxaXTDzXv9i5uPAU6ZhR5MrDW8fF94mDc/Hg48382i1
yczHh1838wngv7gVmtKnZU8Ir8Ct0NTZeCL4VG43mnaa+cTwu9yuJPCI6Xj7
pPCs3ApN1Ywng/c0jqY5xpPD9xtH02PjKeDRfbhTwnOZTgWvYzo1fIDpNPBF
3ApNR42nhb80jqZ46dnTwQtwKzQ1Mu4DH2IcTSuMp4ef5nahKdzMez1JBr7+
Xi/OTRngQdwuNI3iVl5fa7b3+iWzfUb41wz8fIym1Bn5+TgTvExGfj5GU7uM
/HycGT4hI6+XBb4lI6+HVjfMelnhf8x6aJUhE6+XDV4pE6/nC+/CrdA03bgf
fFcmfn5B0/1M/PjIDo+UmbfPAffNzI+XnPDqmfn5JRe8N89Tbvhcnr+GpoM8
H5oH/sSsnxceMwuvnw+eOwuvnx8emIXXLwAP5lZoCjFeEH7MOJpeGy8Ej5+V
HU2FuKkwvLHxIvChxovBV3K70XTWzBeHf+B2lYAny8bbl4SX4A5CU0tut9dH
c/uUgq/nVmh1mTvM69+5XaXhaXz5+xeaynGTC97ebpokfKvwW8L/Cs/kZ3tl
u6mb8BnC9wh/IDxKdtv97KaawvsIny/cLfyZ8Fg5bM9rt6onfJDwJcJPCH8j
PGFO2wvbTU2FDxO+Wvg54Z+EJ89leym7VSvhY4VvEH5V+A/h6XLb7m83dRQ+
Wfh24beFUx7bM9tNVYV3Fz5L+F7hD4VHzWt7DrtVLeH9hC8Qflj4c+Fx8tme
z25qIPw/3QGdvjfa5/VlukMjn1w8rAz8pO7oi2Y/qVQW/k5328LtfOOVgyfK
7+mjFwt1vYamorozdIy6db4/vJluFen6txbl4SN031+wokS2CvA1uksU6jP0
HZou6J53wf/4torwz7q/t08ca2AleMoC+vk/4pMaZSrDS+veNn/rjGhV4G10
xy84/NY5tBqnu+v52mlnVIVv0n22XYZWjQLg13T7Rfi4yqca/JfuMfMOvXmG
Vj4FPf0s/9S866vDK+j2PxfUt1cNeCfdS9vm2Vu0JnxqQb6+teA7uBWa7hqv
DY9QiB1NWbmpDjyAOwRNPblddeGzucPQtN+sFwh/xO1TDx69MH//QKuc3EH1
4XW4qQG8P3cImhZxuxrCj3CHoeklt2oEj1uE998YXoDbjVYNuYOawIdwU1P4
cu4QNJ3mdjWDv+cOQ1OSorz/5vBi3D5B8CBuN1qN5A5qAV/LTS3hF03/z9Vd
hlW1RHEYX167uwu7sLuPha3YrditWNg6dnc3dnf3sVuxW7G7uy/z33vN88zy
23t/c9bM2WwOwkVoCf9quhU8eRHu1vBSptvA2+jG10/RNF43/n7WFr5ZN75+
2w5+XTf+ftce/pvnqQ7wtEXdeW06wssXdedV6QTvXNSdl7czfGpRd17SLvBd
Rfl8XeF3ef1WNIUvxvMD4ZmL8eO7wasV4/OjVY9ifL7u8DnFeP8e8AM87yma
HvO8OT3hUYvz+XvBcxbn8wXBa+vWv99mF5r66cbvq+kNX6Qbf//rAz+mG/++
F61e6ta/P2d+X3icEtncvz/2g+fXrX99Tqz+8Ea68ftz0EqV4Oc3AL6ihHue
QgPhZ0q45/mApg8l3POsGQRPVNI9T8vB8GIl3fOkUPDmJd3zXEXTqJLueSYO
ga8r6Z6n/FD4pZJ8fYbBv7GPQlNKDz+f4fDSHnf+DDS18/D+I+ATPO75lqJp
q4ev50j4DY/7/Daj6a+Hn/8oeLpS/P6Epoql+Lyj4V1Kuec5j6bppfj6j4Hv
LuWe5w6a7pfi6zUWHqG0e56XaMpamt/+4+DVS7vn+Y6mXqX57TUePre0e57I
E+De0nx90epJafc8CSfCo5fh+wWtcpVxz5NuErxuGX77olX/Mu55ck+GLy7D
9ytaHS/Dr1dT4K/L8P2FVnHLuuepNhVesCzfD2jVuKx7nsbT4EPL8v2NVivL
uufpMB1+rizfj2j1sax7nj4z4EnK8f0zE168HN8/aGpZju+fWfDR5fj+QdOG
cnz/zIZfLsf3D5p+lOP7Zw48lR/fP2gq68f3z1x4ez++f9A0yY/vn3nwbX58
/6Dplh/fP/Ph//z4/kFThvJ8/yyAVyrP9w+aAsvz/bMQPqM83z9o2lue759F
8NDyfP8EwyNV4PsHrbJV4PtnMbxGBb5/0CqoAt8/S+DzK/D9g1aHKvD9sxT+
rALfP2gVoyLfP8vgeSry/YNW9Sry/bMcPrAi3z9otaQi3z8r4Ccr8v2DVm8q
8v2zEh6/Et8/aFWoEt8/q+BNK/H9sxo+TLf+9tYxaFqtG/+eaQ38vG79/bDz
0PRZN74fdi08aeVszvfDrkdTSd3491br4K0q8/2BprGV3f0qrodvrOzudwlN
Vyu7+zXaAP9Z2d3vMZp8qrj7dd4IL1fF3e8rmjpW4bf/JvjkKu5+UTfDd1Rx
95uKVreruPsl3wIPV9XdbxlaZazq7pd9K7xKVXe/HWjVrSq/fbfBZ1V19zuF
VvuquvvV3A5/WNXd7zZaRa7m7tdqBzx7NXe/N2hVs5q7X9BOeJ9q/PbbBV9Q
jZ8Pmo7wvPS74c/58TvQFKs6X/898LzV+TxoalCdr+9e+KDqvN8++LLqvB9a
narO++2Hv6vO+6FVAn/e7wC8iD/vh1bN/Hm/g/AR/ryfF77GbgoR/kV48hq2
e+ymNsLHCd8s/Jrw36aPwtPUtJrK2606CZ8qfKfwu8L/q2V7ZrtVVd3eXBcL
hTjeQ/fXZVnqHT4Gn607R9KhvbYdhx/Q3WbCrWkrTsAf6V4YLu+W2SfhUWuH
9ZVe40LGnoLn0B3j5aO3A07Da+su27RYzK5n4H11D7g0PVvzs/BFurf4valY
6xz8qO6Xe8q1K3ce/lJ32pwLRxa8AI9dJ6wbLg07cQg8v+7JiasfSX4R3lD3
yXErH8S8BFd1+Plfhi/nVmg6Y/wK/H0dfr1GU6K6/PHnKrxoXV5/Dd68Lq9H
q5Fm/XX4OrP+BvyiWY+mb2b9TXiKerz+Frx0PV6PVm3r8frb8Alm/R34Ft34
+zaabujG38/vwv/oxt/n0ZSufjb++XPwCvV53n14l/o8D62m1ed5ofDd9Xke
Wt0z8x7AIzTgeQ/hWeym6sJ7Cp8r/KDwJ8KjNbQ9l+nn8Dp2U3/hwcKPC38l
PG4j2wvYTY2FDxG+UvhZ4R+FJ25se3G7VQvho4WvF35Z+HfhqZrYXsZuai98
ovBtwm8K/yc8fVPbK9mtugqfIXyP8FDhEZvZns1u5S88SPg84YeEPxUeI8D2
3HZTPeEDhC8RfkL4G+HxmtteyG7VRPgw4auEnxf+SXjSFraXsJtaCR8jfKPw
K8J/Ck/dMqxnvpqYuNELeDndCfpu8j3xEt5B99RIl0rlfQ2frDvO9E91F72B
b9c9MU3CTtHfwW/rjrGxwJDe7+HUKqzHFqs/89EHeEbdUU73XVv9E7yy7pH1
5nn3foZ30x3hyb6rmb7CZ+oe2v3ey2nf4Pta8fl/wB9we9EUuTV/PPoJ9+X2
/ILX5Kbf8N7coWhawO39Az/MHfwX/tzM/weP2cbtANqjPS+3J5xuVZ/b5z/4
IG4KD1/KrdB0yngE+FvjaErQlj0ivDC3QlMz45Hgw42jaY3xyPALpqPAv5iO
Ck/Wjjsa3GM6Orx1O/54iqZx7fjjaQz4JrM+JvyaWY9Wv8z6WPA07Xl9bLgf
twdNnbiV41O4vY7vNI+PA79jHo+m/zrw4x3PxO11vCo3xYV3Nx0PPtt0fPj+
Dvx80PSoAz+fBPAoHXl9QniOjrwerWp15PWJ4H3N+sTwhdxeNB3lVkngL7g9
SeGxO/Hjk8HzcSs0NTSeHD7YOJqWG08BP20cTe+Np4Qn7MyOpqLclAoeYDo1
fKRpH/ha7mA0XeT2pIF/5Q5FU4ouvF9aeClun3TwttxetBrPHZAevoWbMsCv
d+G3B5r+dOG3R0Z42q68PhO8Qldej1adu/L6zPBpZn0W+C5uL5rucaus8PCB
/HyzwbNwky+8GncAmnpyex2fw+2THX6QW6HVY+5Qx6N14/1ywHNyB6OpDjfl
hPczjqZg8/hc8GPcoWh6xa1yw+N05/PlgRfg9qJVI+6AvPAh3JQPvoI7GE1n
uT354R+4Q9GUuAfvXwBejNunILwFtxetRnEHFIKv56bC8EvcwWj6zu0pAk/Z
k/dHUxluVRTejtunGHwitxettnIHFIff5KYS8L+68fV9NKXvlc39/MHxirrx
/wcc76obn0+UhE/vxedB055e7ryzjt/neUk98IhB7rw2aJU1yJ231XH/ID5f
KXivID4fmuYF8fkc9/K8p44/5Xl5S8Oj9+bzoSl3bz6f43V78/nKwAf05vOh
1eLefD7HT/A8Kgt/ze1FU7w+vF85eEFujx+8CTeVhw/Vja+noGmVbny9pAL8
nO6pzhd0tH/Sja+voFWSvtncr9dUgpfQjeWV4S378n5V4GP68n5otaEv71cV
fqUv71cN/qMv74em1P14v+rwsv14P394h368Xw34JG4fNG3n9jh+izvAcerP
18/xDNzBjlfm9joeyB3q+Exuqgnfy+2DpgfcHscjDeD9HfflVo7X4A52vDe3
1/H53KGOH+amWvBn3J7a8JgDeX4deB5ub114fW6qDx84kD8eoGnpQP540AB+
0qxvCH9r1qNV/EG8vhG88CBe3xjedBCvR9Nws74JfLVZ3xR+waxHq89mfTN4
ssG8PgBekjsYTa25Pc3hY7lD0bSJW7WAX+X2aQn/xe1FKx/Fb79WcD9uag3v
yB2MpincnjbwHdyhaLrDrdrCww3h/dvBM3F70aoKd0B7eHdu6gCfxa3QtN94
R/hD42iKMpS9Ezw7t0JTLeOd4X2Mo2mh8S7wI3bTC+Gxhtmez27VQPhg4cuE
nxb+TnjC4bYXsZsChvPrSXf4iOHu69EyNK0163vAQ+ymr8KTj8jm/jx9x0vp
PrtzwJmdjrfRfckn5iWfnvDxuvHz8NFqs+7Qj9nvf3T8uu6njQ48adQL/ls3
fj4/mtKODGu9PHsQvLzunzO7/piJps4j+Xy94VPtpl3C7woPP8r2zHZTNeE9
hM8RfkD4Y+FRR9ue025VW3g/4YuEHxP+UnicMbbnt5saCVfCVwg/I/yD8ERj
bS9mt2oufJTwdcIvCf8mPOU420vbTe2ETxC+VfgN4X+Fpxtve0W7VRfh04Xv
Fn5feIQJtme1W1XX3WJXaNR1jvfSnXHoopAGfeBzdb+s3HRW5L5wr+4NCVM2
3Y5WT3QH3r+dvmU/ePSJYZ1v9dxXcfrDc+n+3r3BlgNoqqt7X7EkfTsNgPfX
PSjS9ZLJBsIX6y4dMiPSSbQ6rjvS3Nrneg2Cv9Z9smX86ekGw+NOCuvx2S81
vIimgrr9v01OM1jBG+tOcKj6c98h8KG6r42NtfEWWq3UrcePHgo/p7tpqvHF
CgyDf9Tt87xS+MdoSjI5rB9vjnp6ynB4cd2r+p+cXHIEvKXuTuVG1XuDVqN1
54jtl2reSPgG3R9vRHhSYRT8su4dS46s/YqmH7r7dRrafdloeKop2fT395Uq
XHMMvOwUfvuNhbfnVuPgk4xPgG8zjqZbxifC/xlHU4ap7JPglbgVmgKNT4bP
MI6mvcanwEN1Oz9fAB5pWjb++QLwbNP48dPgNaZl458vAA/i9VlnwOfzepoJ
P2R6FvyZ6dnwGNP1xwv/pmX6oimP7k2L94386Hg93SM/JjvdcQ58oO6w1TGf
oNUS3QWmX/dvOhd+UnesJ/mnX0erN7ofh6X/PHj8Gfr+1gPRqpBu/fAy8+FN
dXfKvHHxPrQaprts2Hb5F8BX605xumPmjWh1Xrc+XuaF8M+6NS9Gq6Qzw3qJ
3nARvKTufmHjpqNVK9366ccMho/VrbcfiVYbZ/L1Wgy/OpOvF1r9nMnXy3Gf
WXy9lsDLzeLrhaaOs/h6LYVPnsXXC007ZvH1Wga/PYuvF5rCzebrtRyecTZf
LzRVmc3XawW822y+XmiaNZuv10r4vtl8vdD0cDZfr1XwyHP4eqEp+xy+Xqvh
Nefw9UJTnzl8vdbAF+jG97Og6YhufH/PWvjzOXy/oynW3Gzu9++sg+fVje9H
QVODuXz/r4cP0o3vN0HTMt34/psN8FNz+Twb4e90O9+fAU8wL5v7+aHjRXTj
72+b4M104/NNNI3Qjc8vN8PX6Ha+XwMeMo/32wL/Ms99fh3QlHw+v7877pnv
rvdshbeZz9cDrcbx+oTb4Jt5vUKra7z+peO/eX2d7fA0C9z1XjSVX8CvFzvg
nRa462egaSqvp53wnbrx++7RdFc3fv/8Lvh/C7M5v79+CZoy69bLc+yGV9WN
30ePph669e+zL7cHPlu3X+Kw/4CmA7rx++n3wh/p1g9/jqaoi8L6Uhj33AfP
sYjPux9eexGfF636LuLzHoAvWsTnRauji/i8B+EvF/F50Sp2MJ/XC88fzOdF
q4bBfN5DcBXM50Wr5cF83sPwM8F83iPw98F8v6Ep0WK+nxwvupjvT8ebL+b7
7yh85GK+n9G0bjHfr45fXMz7HYN/W8z7oVWKJbyf46WX8H6Ot13C+x2HT1jC
+6HVliW8n+M3lvB+J+B/uBWa0i1lPwmvwK3Q1MX4Kfg042jabfw0/J5xNEVY
xn4GnoVboam68bPwnsbRNNf4OfhB42h6Yvw8PNpydjTl4qYL8DrG0dTfeAg8
mNuLpuNm/UX4K27PJXjcFfz4y/AC3ApNjY1fgQ8xjqaVxq/CzxpH00fj1+CJ
V7KjqTg3XYe3MI6m0cZvwNcbR9Nl4zfh342jKdUq9lvwMtwKTe2N34ZPNI6m
bcbvwG8aR9M/43fh6Vfz9b0Hr8St7sO7cntD4TO46SF8D3cwmkLNvEfwiGvc
DkVTNm71GO7P7fMEHsTtRat53AFP4Ye46Rn8KXcuNMVYy+sdz8092fF63F7H
B3C/d3wJt89z+AlufzS94VaOx1vn9ibHC3GHOt6EO84L+DBuD1qt4g50/Dx3
sOOfuEMcT7qen/9LeAm7qZXwMcI3Cr8i/Kfw1BtsL2e36iB8svDtwm8Lp422
Z7RbVRbeTfhM4fuEPxAeeZPtvnZTTeG9hS8Qflj4c+ExN9ue125VX/gg4UuF
nxL+VniCLbYXtpuaCR8ufI3wC8K/CE+21XaP3aq18HHCNwm/JvyX8DTbbPez
mzoJnyJ8p/A7wv/bbnsmu6mq8O7CZwvfL/yR8Cg7bM9ht6olvK/whcKPCn8h
PPZO2/PZTQ2FDxa+XPhp4e+FJ9xle1G7VYDwkcLXCr8o/KvwFLttL2U3tRU+
XvgW4deF/xGedo/tFexWnYVPE75L+D3h4feG9eeOsXevczyL7jYDBi8LeAWv
pvvW+HeTEryG99RdbUGz/ifRao5u7/oLbQa8gR/Une9AyZq53sIf615xfmPx
x2iKti+sk91PnWX2O3hO3Xp8lffwOvv4fB/g/bgVmoKNf4QfM46mV8Y/wePs
Z0dTAW76DG9kHE1DjH+BrzCOprPGv8I/GEdT4gPs3+DFuBWaWhj/Dh9lHE3r
jf+AXzKOpu/Gf8JTHmRHUxlu+gVvpxuff6Bpom58vvEbvlU3Pr9A003d+Pzl
D/yvbny+gqb03mzu5yd/4RW9vN8/eFcv74dW0728H+3VvsfL+6HVfS/vFw4e
8RDvh1ZZD/F+/8H9D/F+4eG9DvF+aJp3iPeLAPce4v3Q9PQQ7xcRHv0w74em
3Id5v0jwuod5v8jwAYd5P7RafJj3iwI/cZj3Q6vXh3m/qPB4R3g/tCp4hPeL
Bm9yhPeLDh/K7UHTKm7l+Dlur+OfzONjwJMc5fVoKsFNMeEtub1oGmPWx4Jv
4PbEhl8xj48D/2HWoyn1Mfa48LKm48E7mI4Pn2Q6AXy76YTwW9zB6LBP4Pg8
ieAZuEPRVJlbJYYHcvskgc/k9qLVXu6ApPAH3JQMHulENvfra2jy1Y2vryWH
19CNryehqbdufH0tBXy+bnx9DU2HdePrRynhz3Tj62toinkym/v1tVTwPCf5
PKnh9U/yedBq4Ek+jw986Uk+D1qdPMnnSQN/e5LPg1bxT/F50sILn+LzoFXT
U3yedPDhp/g86eGrT/F+aLpg5mWAfzbrM8KTneb1aFXyNK/PBG99mtdnho/l
9qBpE7dy/Cq31/Ff5vFZ4D5n+P0LTX5n+P3P8Y5n+P0zK3zKGX7/RasdZ/j9
Oxv8zhl+/0ercGd5P194prO8H1pVOcv7Od79LO+XHT7rLO+Hpv1neb8c8Idn
eT80RTnH++WEZ+f2oqkWt8oF78PtyQ1faB6fB37kHF9/NL04x28fx2Od5/V5
4fnO83q0anCe1zs+2KzPB19mOj/8tOkC8HfcCk0JL7AXhBfhVmgKMF4IPsI4
mtYaLwwPMY6mr8aLwJOHsKOpFDcVhbcxjqbxxovBN+vG93+h6bpufH9Ycfhv
3fj+sRLwtBezud9fhlblL/L8kvDOF915eT3wqRfdeU/RtOtiNv7+Nvhdnlel
NDz8JT5fGXhmbg+aqnErx3twex2fYx5fFn7AdDn4Y9N+8KiXucvDc5quAK9t
uiK8n+lK8EWmK8OPma4Cf2m6KjzOFe5q8Pymq8MbmfaHK9M14CtM14Sf4VZo
+mC8FjzRVXY0FeOm2vDmxtE0yngd+DrjaLpkvC78m3E0pbzGXg9e+hq/f6Gp
3TV+/6sPn2DWN4BvNevR6oZZ3xD+16xvBE93nfdHU0VuagzvYjdNF75b+H3h
EW7YntVuVV14L+FzhXuFPxEe/abtueymusL7C18s/Ljw18Lj3rK9oN2qsfCh
wlcKPyf8o/Akt20vbje1FD5a+Abhl4X/EJ7qju1l7VbthU8Svk34LeH/hGe4
a3sluylQ+Azhe4WHCo90z/ZsdlMN4UHC5ws/JPyZ8Bj3bc9jt6onfKDwJcJP
Cn8jPH6o7YXspqbChwlfLfy88M/Ckz6wvaTdqpXwscI3Cr8q/Kdwn4e2l7Ob
OgqfLHyH8NvCwz2yPaPdVEV4N+GzhO8T/lB45Me2Z7db1RTeR/gC4UeEPxce
64ntee2mBsIHCV8m/JTwd8ITPLW9iN2qmfARwtcIDxH+RXjyZ7Z77KY2wscJ
3yz8mvDfwtM8t7283aqT8KnCdwq/K/y/F7ZntltVFd5D+GzhB4Q/Eh71pe05
7KbawvsKXyT8qPCXwmO/sj2/3aqhcCV8ufAzwt8LT/Ta9qJ2U3PhI4WvE35R
+DfhKd7YXtpu1Vb4BOFbhN8Q/kd4ure2V7CbugifJny38HvCI7yzPYvdVF14
T+FzhR8U/kR4tPe257Jb1RHeX3iw8OPCXwmP+8H2AnZTY+FDhK8Uflb4R+GJ
P9pe3G7VQvho4et1D5pwqFJTxy/rrtD39PrITeDfdcdrfTnOZjSl+hTWt/zv
9GjYFF5G97JiT66FbwZvr7tL5reF16PVRN0FEnybXzcAvu0T798cftNu+ic8
/WfbK9mtugqfIXyPbnw/n+OhuvH9ci3hEb9kc79/rzU82xd+fDu4v90UJHye
8EPCnwqP8ZW7Czy37mKb4xfNjaZ6uoNaZApq4fgA3VviF908zfEluvHvARw/
oTtz2AO+Ov5Gt354pq7weN/CeuGNMQvqo6mQbvz7A8eb6E5QdHP8vY4P063/
OcNrx1fpHhu2PGUg/Lxu/HsHtPr0zX0+yvGk393ns9nxEt/d5/PQ8Vbf3ecT
vxt8zHf3+ZRF08bv7vMJcvzKd/f5rHT853f3+dxwPPUP9/lE7Q4v98N9PkXR
qsMP9/l0cnzyD/f5LHB8+w/3+Zx3/PYPfvv0gNNPPg+aMv7k6+N45Z/89uoJ
7/aTz4dWM3/y9eoF3/eT335o9eAnnzcIHvkXXz+08v3Fb8/e8Jq/+Pxo1fsX
X88+8AW/+O2LVod/8fPpC3/+i58PWsX8zc/H8by/+fn0g9f/zc8HTYN+8/Pp
D1/6m58Pmk795uczAP72Nz8fNCX4w89nILzwH34+aGr2h5/PIPjwP/x80LTm
Dz+fwfAL3CFo+sIdrODJ/rodOATu4fYMhbfmjjMMPo47FK02cW8aDr/GrUbA
f3H7j4Sn+ee2zyi4H/d7NHXi9o6GT+GePAa+kztgLPwOd65x8P/I133+4+GZ
uBWaqhqfAO9uHE2zjU+E7zeOpkfGJ8GjhGNHUw5umgyvZTf1Fb5Q+FHhL4TH
/s/2fHZTQ+GDhS8Xflr4e934+voceMLwvu7Pm5sLLxqe18+DB9hNI4WvFX5R
+FfhKSLYXspuait8vPAtwq8L/yM8bcSw9k/n+6224xV061/nPXw+vLNu/fvA
ty6AT9Otf5/3o4XwXbp9v+U7HC8Yfk93+rD/UHoxPHyksE7WfPfKbkvgWXTH
m9k/2eKl8Gq69a8TD1kG7xmJz7cCPoc7F5oOcgc4/ph7suPRIrvtdTwn93vH
63D7rIT34/ZHUzC3cvwY9ybHX3GHOh4nittxVsELcHvQqhF3oONDuIMdX8Ed
4vhZbloN/2A3JY5qezG7qYXwUcLXC78k/LvwlNFsL2O3aid8ovCtwm8K/ys8
fXTbK9pNXYVPF75H+H3hEWPYntVu8hfeS/g84V7hT4VHj2l7brtVXeEDhC8W
fkL4a+HxYtle0G5qInyo8FXCzwn/JDxJbNtL2K1aCh8jfIPwK8J/CE8dx/ay
dlMH4ZOEbxd+SzjFtT2D3VRZeKDwmcL3Cn8gPFI8233tVjWE9xY+X/hh4c+E
x4xvex67qb7wgcKXCj8p/K3w+AlsL2y3aip8uPDVwi8I/yw8WULbS9pNrYWP
Fb5J+FXhv4T7JLLdz27VUfgU4TuE3xEeLrHtmexWVYR3Fz5L+H7hD4VHSWJ7
druplvA+whcKPyL8hfBYSW3PZ7dqIHyw8GXCTwt/JzxhMtuL2E0BwkcIXys8
RPhX4cmT217KbtVG+Hjhm4VfF/5beNoUtpe3mzoLnyp8l/C7wsOntD2z3VRN
eA/hc4QfEP5YeNRUtue0W9UW3k/4IuHHhL8UHie17fntpkbClfAVws8I/yA8
kY/txexWzYWPEr5O+CXh34SnTGN7abupnfAJwrcKvyH8r26fFcO3BDieLm1Y
N46bb/6VNfCKumcPeDSiwjp4F91Xnk3tum89fLruOLVKN8i1Eb5bd5UDH0ov
2wS/r3t0lsW+SbbAI6QL66PT/RON3wrPmo7Psx1e3W7qJXyucK/wJ7rPJpw1
O43j0dOH9e/xz281cjyXbt8IRVLOdLyu7qb9xzULcby/7okf7yyOtgO+WPeB
9jkel0Wr47rfhg7OONjx17pT1b/YbrfjcTOEdbULadd+cryg7kF+Pd9k3wlv
rHvD/mM526FpqO57+RJ3X+L4St1x1rXbdsfxc7o96fZ8TbQL/lF34NzohWug
KUnGsA6O26T/OMeL6w4ZHbaD4y0z8vXZDR/NrdC0wfge+GXjaPphfC88VSZf
99+z7oOX1Y3vJ9kPb5+JH38APonXrzkI38brr3rht3g9HYb/4/agKUNmnud4
JW6v44HcdAQ+w6xH017jR+GhxtEUKQv7MXg2boWmGsaPw4OMo2m+8RPwQ8bR
9Mz4SXiMrOxoysNNp+D1jKNpoPHT8CXG0XTS+Bn4G+Noip+N/Sy8ELdCU1Pj
5+DD7KbVws8L/yw8qa/tJe1WrYSPFb5R+FXhP4X7ZPd1v//tGrycbny/3XV4
R934/rkb8MnZ+fE34Tt04/vv0Oq2mXcLHi4Hz7sNz5iD592BV8nB8+7Cu+Vw
7+8ZaJqVg99f7sH38Xovmh7y+jr34ZFzuutfoil7Tn57hcJr5nTXJ3wA78Pr
16DVAl7veQg/wuuvotVzXt/hETxWLj7/Y3jeXHx+NDXIxed/Ah/E671oWsbr
6zyFn+L1L9H0jterZ/AEufn8z+FFcvP50apZbj7/C/gIXn8Vrdbw+g4v4SG8
nl7Bv3ArNCXPw/4a7uFWaGpj/A18XB6+H9C0OQ/fD2/h1/Lw/fAO/jsP3w/v
4Wny8rwP8PJ5eR5adcrL8z7Cp+bleZ/gO/PyvM/wu2beF/h/+Xg9mjLn4/mO
V83Hj/8K75GP90Or2fl43jf4ATMPrR6ZeY5Hzc/zvsNz5Od5aKqdn+f9gPfN
7z5+HZoW8foGP+FH87v7RfoFf8nzt6JV7ALuvIDf8PwF3Hkx/sAbFnDn7UaT
KsDn/wtfXsCdF/8f/AzP86LVe57XifZpT1TQnZc0nG5VtKA77ziamhd05/X4
Dz6yoDvPJzx8XUG+Xmh1kef1jQD/xvMyRoSnKOTOu4ym0oX4fowEb1vInecb
GT6hkDvvJlptKeTOGxkFfoPn5Y0K/8PzQtGUrrA7b3w0eIXC7rzC0eFdCrvz
nqLVtMLuvGkx4LsL8/tjTPg9nvcaTRGK8P0QC56liDvPLza8ehF33ie06lnE
nRccBz63iDuvSlz4QZ73A01PeN6KePBoRd15teLDcxXl+y8BvA63QlN/4wnh
wcbRdNx4Ivgr42iKW4w9MbyAbv3zKGqgqbFu/HwLx4fo1j9/4rPjK3Xj51kk
gZ/VrX8+xiw0fdSNn1/heOLivs7PwyiSFF5cN36+Blq10K1//sVdx0frxs/T
SAZfX5zPj6bLxd3zXnT8e3H3vGmTw1OVcM/bE63KlHDPe8zx9iXc8yZOAZ9Y
wj1vOzRtK+Ged4/jN0u4542eEv6vhHveJmiVvqR73g2OVyrJ1zcVvGtJ934Y
gKYZJfl+cHxPSfd+CEoNDy3J9xdaRfS48wJ94Nk8fL+ilb/Hndc+DTzIw/c/
Ws3zuPNapoUf4nmhaPWU5zVOB49Rit8/0Sp3KXde3fTweqX4/R2tBpRy5/ln
gC8pxa8faHWC51XMCH/D846jVbzS7rwymeCFSvPrG1o1Ke3OK5YZPqw0v16i
1arS7rwCWeDned5WtPrE83JlhSctw6/naFWijDsvSzZ4qzL8/olWY8q489L5
wjeW4fd3tLrC81Jkh//keXPQKnVZd16iHPByZfn1CK06lHXnxckJn1yWX9/Q
antZd17UXPDbPG8kWlE5d1743PCM5fj9Ba0ql3Pn/Xa8Wzl+Pc8Dn1nOnfcV
Tft4Xo+88Ac87z2aIvvxx5t8cF8/d94LNNX0449f+eG9/dx5j9C0wI8/HhaA
H+Z5d9D0nOc1KAiPWd6ddw1Necvz62UheP3y7rwQNA0qz6+/heFLy7vzTqHp
FM/zKwJ/y/OOoClBBf74UBReuII7bx+amlXgjzfF4MMruPN2oGlNBf74VRx+
gedtQtMXnudbAp6sojtvNZo8Ffnja0l464ruvKVoGleRP1574JsquvPmo+ka
z0taCv6L581EU5pK7rz4peF+ldx5k9HUqZI7L0YZ+JRK7rwxaNpZyZ0XqSz8
Ds8bhqb/KvPrXzl4psr8/oCmqpX5+vjBu1fm1ws0za7M9095+H4zrwL8kZmH
VlGq8LyK8BxVeB5a1arC8yrB+1bheZXhC6vwPDQdNfOqwF+YeWiKXZXnVYXn
q8rzqsEbVuV5aDW4Ks+rDl9eleeh1Wkzzx/+3syrAU9YjeehqWg1nlcTHlCN
56FpZDWeVwu+thrPqw2/aOah1Vczrw48RXWeh1alqvO8uvC21XlePfj46jwP
TVuq87z68OtmHpr+mHkN4Gn9eV5DeAV/nodWnf15XiP4NH+eh1a7/HleY/g9
M68JPHwNqymL3aqa8J7C5wg/KPyx8Gg1bc9pN9UR3k94sPBjwl8Jj1PL9gJ2
q0bChwhfIfys8A/CE9e2vZjd1EL4KOHrhV8S/l14yjq2l7FbtRM+UfhW4TeF
/xWevq7tFe2mrsKnC98j/L7wiPVsz2o3+QvvJXyecK/wp8Kj17c9t92qrvAB
whcLPyH8tfB4DWwvaDc1ET5U+Crh54R/Ep6koe0l7FYthY8RvkH4FeE/hKdu
ZHtZu6mD8EnCtwu/JZwa257BbqosPFD4TOF7hT8QHqmJ7b52qxrCewufL/yw
8GfCYza1PY/dVF/4QOFLhZ8U/lZ4/Ga2F7ZbNRU+XPhq4ReEfxaeLMD2krp/
B5wckrEpvLXuFsk6h6vZDD5W9+nLcYcMDIBv0p1nwg5a3Rx+Vfdsv0bqSgv4
LzO/FdynudsKTX7c1Bre0TiaphhvA99hHE13jLeFh2vBjqZM3NQOXkU3vt6J
pu668fXT9vBZZn0H+H6zHq0emvUd4VFa8vpO8OwteT2aarXk9Z3hfcz6LvCF
Zj1aHTHru8JfmPWB8FitfN3Pt9CUT7fz++ThDXTj80E0DdaNv490hy9r5c7z
ouk0z6vSA/6O591EU8LW7rw2PeFFWrvzPqEpoDVf717wEa3deTGC4Gtbu/Pm
oFUIz8vYG/6V521Fq+Rt3HmePvBSbdx5Z9GqTRt3XoO+8PFt3HlP0WpzG3de
j37w6zyP+sN/cys0pW3LPgBenluhqbPxgfCpxtG0y/gg+F3jaArfjn0wPDO3
QlM14wrewzia5hgfAj9gHE2PjQ+FR23Pjqac3DQMXts4mvoZHw5fZBxNx4yP
gL80jqY4HdhHwvNzKzQ1Mj4KroyjaYXx0fAzxtH0wfgYeKKO7Ggqxk1j4c2N
o2mU8XHwdcbRdMn4ePg342hK2Yl9Arw0t0JTO+MT4ROMo2mr8UnwG8bR9Nf4
ZHi6zm4Ho6kit2cKvAt3KJqmc6up8N3cPtPg97m9aBWhi9sB0+FZuWkGvDp3
MJp6cXtmwudyh6LJy61mwZ9w+8yGR+/K+6NVLu6AOfC63DQX3l83ft84mhbr
xs9jcfy4bvw+9Hnw17rx/edoFTfQ1/19344X1I2f3zIf3jiQz4umoYHufrcd
Xxno7ldgAfxcoLvfVLT6GOju98bxJN3c/SouhBfv5u63DE0tu/HzWwQf3Y1f
v9G0oRu/fgfDL3fj1280/ejGr9+L4am68/VEU9nu/Pq9BN6+O79+o2lSd379
Xgrf1p1fv9F0i+epZfB/PC/GcniGHvz6jVaVevDr9wp4YA9+/UarGT34flkJ
39uDX7/RKpTnNVgFj9STX7/RKltPfv1eDa/Rk6/fGngQt0LTfONr4YeMo+mZ
8XXwGL3Y0ZSHm9bD6xlH00DjG+BLjKPppPGN8De9+H5EU/wgvr8cLxTE98sm
eNMgvr/RalgQ36+b4auD+P5Dq/NBvN8W+Ocg3g+tkvbm/Rwv2Zv32wpv1Zv3
Q9PY3rzfNvjG3rwfmq725v22w39ye9Dk04evh+PluL2Od+SmHfDJ3B407TCP
d/y2ebzj4fry43fCM9pNVYR3Ez5L+D7hD4VH7md7drtVTeF9hC8QfkT4c+Gx
+tue125qIHyQ8GXCTwl/JzzBANuL2K2aCR8hfI3wEOFfhCcfaLvHbmojfJzw
zcKvCf8tPM0g28vbrToJnyp8p/C7wv8bbHtmu1VV4T2EzxZ+QPgj4VGV7Tns
ptrC+wpfJPyo8JfCYw+xPb/dqqFwJXy58DPC3wtPNNT2onZTc+Ejha8TflH4
N+Ephtle2m7VVvgE4VuE3xD+R3i64bZXsJu6CJ8mfLfwe8IjjLA9i91UXXhP
4XOFHxT+RHi0kbbnslvVEd5feLDw48JfCY87yvYCdlNj4UOErxR+VvhH4YlH
217cbtVC+Gjh64VfFv5deKoxtpexm9oLnyh8m/Cbwv8JTz/W9kp2q6660xbL
UuGv4zOM74bv4VZ74KHG98EjjmNHUzZu2g/3556MpiBunwPwedyb0HSI23MQ
/pQ7BE0xxrsd4IXn5n6Ppnrc6hB8AHecw/Al3MFodYI71xH4G24vWsWb4Lb/
UXgh7lC0asIdeAw+jJuOw1dxKzSdN34C/onbcxKedCKvPwUvwe09DW/FTWfh
Y7g9aNpoHu/4FfN4x3+ax5+Dp57Ej0dTOW7leAdur+OTuek8fLt5PJpum8c7
TpP58Y5n5KYL8MqmQ+DdTF+Ez9SN70dE0z7d+PrZJfgDXq8uwyNPcdfXuQL3
neKuz3oVXnMKz78G783tQdMCbuX4YW6v48/N46/DY07lx6MpL7dyvD631/FB
3HQDvtQ8Hk2nzOMdf2se73iCafz4m/DC3ApNzYzfgg83fRu+xvQd+AXTd+Ff
TN+DJ5vOfR/uMR0Kb60bn6+iaZxufP7p+Cbd+HzS8Wu68fmh47/MvAfwNDN4
Hlr5zeB5jneawfMcnzKD5zm+cwbPewi/w+1B038z+Xo5nonb63hVbnoE784d
jKbZ3J7H8P3coWh6ZOY/gUeZxa93T+E5uL1oVYs74Bm8Lzc9hy/kVmg6avwF
/IVxNMWezf4Sno9boamh8VfwwcbRtNz4a/hp7kA0vecOdTzhHH59fAMvyu1F
qwDuXG/hI7mD0Wotd5x38IvcCq2+cr93PMVcvl7v4aW4Q9DUltvzAT6eexOa
tnD7fIRf556Mpj/c9Amedh6fB00VuOkzvPM8fr1B07R5/Prk+C6z/gv8nlmP
VuHn83rHs8zn9V/h1bgD0NST2+v4HG6fb/CD3AqtHnOHOh5tAV+f7/Cc3MFo
qsNNP+D9FvD7G5qCF/D750/4sQX8/oemVwv4/fUXPM5CnvcbXmAhz0OrRgt5
3h/4kIU8D61WLOR5f+Fnzbx/8A8L+XqiKfEivp6OF1vE62m/9haLeD1ajTLr
HV9v1oeDXzLr0fTdrHc8ZTCv/w9eJpjXo1W7YF7v+ESzPjx8K7dC003jEeB/
jaMp/WL2iPCK3ApNXY1Hgk83jqY9xiPD7y/m86Ip4hI+r+NZl/D6KHD/Jbwe
rXqZ9Y7PM+ujwr1201Ph0ZfanttuVVf4AOGLhZ8Q/lp4vGW2F7SbmggfKnyV
8HPCPwlPstz2EnarlsLHCN8g/IrwH8JTr7C9rN3UQfgk4duF3xJOK23PYDdV
Fh4ofKbwvcIfCI+0ynZfu1UN4b2Fzxd+WPgz4TFX257HbqovfKDwpcJPCn8r
PP4a2wvbrZoKHy58tfALwj8LT7bW9pJ2U2vhY4Vv0p1jUJRh82PDr+pOlbLP
hZ1o+qU71r5nyS877rMurP82rNfureN+ut//OL4tahx4R92hswuEy4CmKbpD
Cq6o6nF8h27vtYRzGzl+R/emXiOeBjkebn1YByf4kmeq45l0T97aavB6x6vo
VjWvnDnpeHfdgR/KJHns+CzdAWEP+Of4ft01c6bbnCwu/KHu0uen/smPpigb
wjpP5/8q1XA8u+60MbrP7OR4Ld3x1j54OMrxPrrDVudc6vhC3R+fe/sfcPyI
7sejcp286fgL3Vcyhj0jx2Nt5OsfD57PbtVA+GDhy4SfFv5OeMJNthexmwKE
jxC+VniI8K/Ck2+2vZTdqo3w8cI3C78u/LfwtFtsL283dRY+Vfgu4XeFh99q
e2a7qZrwHsLnCD8g/LHwqNtsz2m3qi28n/BFuqvNiNcvZXz4Md1l4zW4VjwB
/KXuQpMW5WmaEB5ne1j7xng6cVAieH7dacf4vlqYGN5Id6JIPcofTAJXumMM
2730flL4iu28f3L4Gd379ob9QdMH3X16h/1JAU+0w9f9+2FKeDHd79+G/UGr
5rrx949U8FG68ffF1PB1utPqPz7wS7rv3Q37g1bfdOPvo2ngKXf68u9jgZfW
HSdu2J908Ha68fdTtJqge7T+kx6+VXdZ/ScD/MZOfr4Z4X938vNFq3S7+Plm
glfcxc83M7zLLn6+aJq+i59vFvjuXfx8s8Lv7+Lnmw0eYTc/XzRl3c3P1xde
fTc/3+zwXrv5+eaAz93NzxdN3t38fHPCn+zm55sLHn0PP9/c8FzcCk11jeeB
9zeOpsXG88KP69a/X2c+ml7rxu/TyQePu9c9/1U0FdSN35eTH95Yt14eqwB8
6F6+fmi1Urf+fTzlC8LP6cbv30Grj3v5fIXgSfa550lRGF58n3ueXWhquY+v
ZxH46H3ueT6gacM+9zwTi8Iv73PPk7UY/Mc+9zwn0CrVfvc8LYvDy+7n61MC
3l43/v8tmibpxv/fLQnfphv//xdNt3Tj/w974P904/8foynDAV/3/y+Xglc6
wPuVhgce4P3QasYB3q8MfO8B3g+tQg/wfmXhkQ7yfmiV7SDvVw5e4yDv5wcP
Osj7oWn+Qd6vPPzQQd4PTc8O8n4V4DG8vB+a8nh5v4rwel7erxJ8oJf3Q6sl
Xt6vMvykl/dDqzde3q8KPP4h3g+tCh3i/arCmx7i/arBhx3i90c0rT7E7//V
4ecP8fsfmj4f4vd3f3jSwzyvBrzkYZ6HVq0O87ya8LGHeR5abTzM82rBr5p5
teE/zTw0+RzheXXg5Y7wPDR1PMLz6sInH+F59eA7jvA8tLpt5tWHhzvK89Aq
41Ge1wBe5SjPawjvdpTnoWnWUZ7XCL7PzEPTQzOvMTzyMZ7XBJ79GM9Dq5rH
eF5TeJ9jPA+tFhzjec3gR8y8APhzboWmWMfZm8Pzcis0NTDeAj7IOJqWGW8J
P2UcTe+Mt4InOMGOpiLc1BrezDiaRhhvA19jHE0hxtvCvxhHU/KT7O3gHm6F
pjbG28PHGUfTZuMd4NeMo+m38Y7wNKfY0VSemzrBOxlH01TjneE7jaPprvEu
8P9Oc3eFZzYdCK96ml8f0NTjNL8eOD77NL//O37gNL++OP7oNL+eOB71DL9+
OJ7jDO/XDV77DO+HVn3P8H6OLzrD+zl+9Azv5/jLM7yf47HP8n6O5z/L+3WH
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
HV0cxwd3CO40uLv74q4tXkoKFGuhSKGUF8pQ3N2lwYq7++JOcZfg7i6Flznn
nvs855f/vs9nZu7cSbLp0k2WvJXfS8mHzPR+nuSgNstnys8T9lMy3rK/l/GL
2dPN8safYa84S9ZfRt5eOkBtRktb9rXSQfaL/vzl5F/88dQm89/iK8ir+72S
vLPfq8gnSltqs8X31eQRuk30cO05dZt64D3AZ4DvBL8LHne29gK6bSPwPuBz
wA+APwZPPEd7Md3mB/D+4IvAj4G/Ak85V3tZ3bY1+DDwFeBnwD+Ah87TXkm3
+Rl8DPh68EvgkeZrz6Lb1ATvAj4ZfCv4DfAY/2jPrdvWB+8JPhN8N/g98PgL
tBfUbZqA/wk+D/wg+FPwJAu1l9BtW4APBF8Mfhz8NXjqRdoDuk0b8OHgq8DP
gn8CT79YexXd9hfwceAbwK+AR16iPZtuWwu8G/gU8O3gN8FjLdWeR7f5DvwP
8L/B94A/AE+wTHth3bYpuAWfD34Y/Bl4suXaS+o2P4IPAl8KfgL8LXiaFdrL
67ZtwUeCrwY/D/4feMaV2qvqNp3Ax4NvAr8KHnWV9uy6TR3w38Cnge9w3TLn
yzu72G+77lSnw6ARa8hjr/7avbpdz9xwLXk+14MmN977zTryBq7Hbfm39X1q
8z/Xs65VjrpmPXm468VRts/tvYF8n+v1WQtXqLyR/KHrPTWW3kiwiTzhmq99
/NeMf12gtkVcXx4/Lf3czeTfu763IeHOX7aQ93P96tKQsCJbyReskfvbRn5E
2lKbF75vJ0++VpzalJY2O8hb+k5thvgeJF/mO7U55ftO8nd+7yJPt056N3kF
6TBq0146yD5KOnQP+VppS20vSEewf5EO7CXPtN7rcGpTXdrsI/9V2lKbib7v
J9/sO7WJ8P0AebQNub3/nqU2OV3Tf7+y190g4w+S9/DHU9vp/nj2nf74Q+R3
/D5MHnej9BHy/K7p9QzUppFrev0De2/X9HqJo+RzXNPrK6jtfn+9Y+SP/fWo
baJNsh57sU2y3r/kzTfJetSm/yZZ7zj5Qtfu76u2ozbHXNPfU2V/6dr9udQS
J8hTbs7t/b1UalvGtcs4J8lbu6a/30pth7p2f071CvsK1/T3WU+Rn3bt/rzq
cmrzwTX9/dXT5N9skc8vtam0xdvvPfYOW7z91jtDPmaLt9/N1HbdFm+/Gc6S
X9ri7Xc4tTVbvf2+Ys+y1dtv83PkNbZ6+91Lbbps9fab5zz5pK3efidTm61b
5XwvkF/f6n0+ulGbGNu8z98d9lzbvM9Pk4vk9bfJ55Pa/r5Nvl8ukc/c5q23
htrukvWyXCa/J+tNpbbxtnvrxb1CXnC7nCe1bbzdW+8l+5/b5evrKvnc7d56
F6i/fpd469W8Rv5E1gtSmyQ75Osvgrz4Dm+9f6hNix3eeimvkw/Y4a03gtos
3iHnd4P8X9fu9ZjNqM1r1/T6TfZUwdz8es9EN8kDrun1mtT2J9fu9Z0H2Ye7
pteD3iJfGZTzoDZng971LrF/DHrXK3KbPP1O73rjqG3lnd71HrP/stO7XrU7
5GN3etebR2027JT7u0t+eac83lCbyLvk8YY96y4Zf4+81i4ZT227+uPZp/jj
75Nvk7bU5qbvD8hj7hanNnmkzUPyb32nNn/4/oh81m7v+h2ozZ7d3v7OsN+X
8YHH5An2yH6pbaE93vikT8ib7pHrUdu+Mv4B+3wZ3+Ap+SEZH6Q2z2R8jmfk
Sfd64ydSm5J7Zf/PycP2yv6pzSAZf4Z9iYwPvCA/IeMXU9s3Mj7pS/I0+2T/
1LbcPtk/e9t9sv9X5CNkfJDarJbxOV6Tn5PxE6nNfzLevCHPsF++H6lN1f3y
/c/ecb883rCP3y/fn2/JN+6X/VKbq7LeEfYoB+T79R159gPy+EBtax+QxyP2
3w7I/t6TTz0gj4/UZscBefz8QH7rgDy+UpvYB+Xx9yN53oPy+ExtGhyUx+9P
5L0OyuP7f+ThB+Xxn9ruPSg/Hz6TPzwoPz+obcghuf8v5EUOyc8fs8N5s0Py
84na9DskP78ikf9zSH6+UZsjh+TnX2Ty54fk52MU8uSH5ecntS11WH6+RiVv
eVh+/lLbwYfl53M08mWH5Xyjk5/Ubd6Bpz2ivYJu2w58FPga8Avgn8EzHdVe
Tbf5FXwC+Gbwa+DRjmnPodvUBe8OPh08CH4HPM6/2vPrtg3Be4PPBt8P/gg8
0XHtRXWb5uB/gS8EPwr+EjzFCe1ldNtW4EPBl4OfBn8P/s1J7RV1mw7go8HX
gV8EN6e0Z9ZtaoB3Bp8EvgX8Onj009pz6bb1wH8HnwG+C/wueLwz2gvoNo3B
+4DPBT8A/gQ88VntxXXbH8AHgC8C/xf8FXiqc9rL6jY/gQ8DXwl+BvwjeOh5
7ZV125/Bx4KvB78MHumC9qy6bU3wruCTwbeB3wCPeVF7bt3mW/Ce4LPAd4Pf
B49/SXsh3bYJeF/weeCHwJ+CJ72svYRuEwY+EHwJ+HHwN+Cpr2gvp9u2AR8B
vsp1zx+XhBeJQX7O9YhvO739PSb5J9fhlfLX3hSLPMPVr7226Kt5H2KTV3G9
L/uGjyXjknd0fTF1r/p94pGPc/0oXulF2+OTb7wq1w8hv+Kang9RmyjXcnvP
b9izuabnKwnJa7um51fUtptrer6UiHyqa3r+Q223X5PrJSa/dU2uR21jRcj1
2PNGyPWSkH8XIdejNr0i5HpJyf+OkOtRm70Rcr1k5A+kLbUJuS6enLywtKU2
zXxPQW79Tkn+j9+pyA9LB6jNc3899mQ3vA6yl5I2qcl/lA6kIR8sbdOSL/Xn
pyM/6c8PJX/rj6c2aW+KpycvL22pTTvfM5CP9J3arPE9I/l536nNZ98zkWe8
ldt7PkJtqrmm5y/snW7JfPYJMn4x+yYZf4b9mow3mcmj3pb51CaHtMlCXsd3
atPd96zk03ynNkHfs5Hf9p3axLkjnp08n7SlNg19z0H+P9+pzWzfc5Lv853a
PPI9F3nCu+LUpqi0yU3+ve/U5i/f85Av8J3aHPU9L/kL36lNinvi+chLu6bn
c9SmlWt6fpiffIhrej5XgHy5a3p+WJD8lL9eIfL3/nrUNt19Wa8wecX7sl4R
8vb3Zb2i5KPvy3rFyNdKB6nNRWlbnPyLdKAEeeYHMr8keXXpILXpLG1LkU+U
DpQm3+LPL0Me4c+nNtEfyvyy5DmlAwHyetKmHHkP6SC1meHPL0++059fgfyu
P78iedxH8nhHbQo8ksdH9kaP5PGUvc8jeTxkn/NIHj/ZDzySx1v2x4/kepXI
Ez+W61HbYo/leuw/PJbrsfd/LNdjX/RYrsd+7LFcj/3VY7leZfKUT+Q8qE1Z
aVOFvLXv1GaY71XJVzzxHj8mUpszT+TxqBr5BxkfpDahT+XxqTp5pafe+AfU
5uencr0a5GNkfNKa5Otl/GJqe0nGB2qRR3omj2fUNsszb3yH2uQ1n8n+65B3
EV9MbSbL/AZ1ybf64+uR3/DHU9sYz2V8ffLcz2X8t+T1n8t4atPTH/8d+Ux/
fAPy3f54anvPH9+QPP4LGd+IvKB0KLVpIh1g/1M6jH2etGU/KB3O/lQ6yJ7k
pdcR7CWkTWPyFrrNQPDF4MfBX4OnfqU9oNu0AR8Ovgr8LPgn8PSvtVfRbX8B
Hwe+AfwKeOQ32rPptrXAu4FPAd8OfhM81lvteXSb78D/AP8bfA/4A/AE77QX
1m2bglvw+eCHwZ+BJ3uvvaRu8yP4IPCl4CfA34Kn+aC9vG7bFnwk+Grw8+D/
gWf8qL2qbtMJfDz4JvCr4FE/ac+u29QB/w18GvgO8Nvgsf/Tnk+3bQD+P/Bw
8H3gD8ETftZeRLf5Hrwf+ALwI+AvwJN/0V5at20JPgR8Gfgp8Hfg6Uwe5RV0
m/bgo8DXgl8A/wKeKZL26rrtr+ATwTeDR4BHi6w9p25bF7wH+HTwneB3wONG
0Z5ft2kE3ht8Dvh+8MfgiaJqL6bbNgfvD74Q/Bj4S/CU0bSX0W1agw8FXwF+
GvwD+DfRtVfSbTuAjwFfB34J3MTQnkW3rQHeBXwS+Fbw6+AxYmrPpdvUB/8d
fCb4LvB74PFiaS+o2zYG/xN8LvhB8CfgSWJrL67btAAfAL4Y/F/w1+Cp4mgP
6LY/uS6VvkeRNuzDXSf7GD9wiX2l6yenF1Sr24T8rOt9ywPf7qW2H12HD7nw
fYmm5Onjfu2eLbu2WUFtK7uuWypO50zNyH9xnS3ZvD+mUtuxriM/K9U//vfk
G1xfPHhmRH9qe9n16rmdJr1jjxzvaw/rEyO8Y3PyrK5bNwpfdIPa1HJdKn/x
NY1+IO/qOkmck1uPUJsprh/d6rCvXAvyba73bY9yfD21uel61pQZF3KGkceM
/7V7dC18M5za5HFdt+axR0l/JP/WdbYsbd8MozZ/xJfzbUk+y7V7v9FW1GaP
a3r/Uvb7run5WivyBAnyeO9nSm0LuXbvR/qcvalr/v1M8r6u3fuTbqQ2813T
+53+RH4ogbcfS22eJfD2c5M9aYi3nyptyEuGePtZTG3DQrz9xG9LPijE208X
arskxNvPGfYTId5+irUjfxPi7WcGtUmTUM6nPXk51/R8mtq0dU3Pl9lHuKbn
3x3IV7um59fU9pxrer7+M/l/run5OLXNkEiu9wt51URyPWrbMZFcj318Irle
R/KNieR61OZqIrleJ/IoieV61CZ7Yrner+S1pQPU5jdpyz5VOsi+w5/fmfyW
P57axE4i3oU8r7TtSt7A99/Ie0kHu5GH++Op7V7pAPtDfz57SFLvfJqxF0kq
58HeLKl3/4noeqZfUjlfvv4/Sb3zPMh+JKmcX3fy50llP9QmeTL5fLCXSuZd
r0gP8pbJ5Lyp7eBk3vUesy9LJp+/38lPJvOuN4/avEsm99eTPG1yuT61qSBt
/iBv5zu1GeV7L/I1vlObC77/j/xzcvl+pTaZUsj3F3u1FDK+N/mvKWQ8tZ3g
j2ff7I/vQ34thXx/UZtoKeX770/yHCnl+5Pa1E0p3799ybunlO9vSz49pVyP
2gZTyuNDP/I7KeXxg9rGSSX3/xd5/lTy+NOfvGEqeXyiNr1Tyf0NIJ+dSh7f
qM3+VPL4N5D8USp5fBxEnii1PH5S26Kp5fF1MHnz1HI+Q8j/ck3/vkptFrqm
f39lP+qa/n2W/aVr+vdb9hRpZL2h5GXSyHrUtlUaWY99aBpZj315GlmP/bS/
3jDy99KW2nyTVnw4eUVpS206+D6CfLRusw78IrhJpz2zblMDvDP4JPAt4NfB
o3+jPZduWw/8d/AZ4LvA74LHC9VeQLdpDN4HfC74AfAn4InTay+u2/4APgB8
Efi/4K/AU2XQXla3+Ql8GPhK8DPgH8FDM2qvrNv+DD4WfD34ZfBImbRn1W1r
gncFnwy+DfwGeMzM2nPrNt+C9wSfBb4b/D54/CzaC+m2TcD7gs8DPwT+FDxp
Vu0ldJsw8IHgS8CPg78BT51Nezndtg34CPBV4OfAP4FnyK69im7TEXwc+Ebw
K+BRcmjPptvUBu8GPhV8O/gt8Fg5tefVbb8D7wX+N/he8AfgIbm0F9ZtmoFb
8H/AD4M/B0+WW3sp3fZH8MHgS8FPgr8FT5tHe3ndph34SPA14OfBP4NnzKu9
mm7bCXwC+Cbwa+BR82nPodvWAe8OPg08CH4bPE5+7fl0m4bg/wOfDb4P/BF4
wgLai+q234P/Bb4A/Cj4C/AUBbWX1m1agQ8BXw5+Cvw9eLpC2ivqtu3BR4Ov
Bb8I/gU8c2Ht1XWbzuATwbeAR4BHL6I9p25TD7wH+AzwneB3weMW1V5At20E
3gd8DvgB8MfgiYtpL6bb/ADeH3wR+DHwV+Api2svq9u2Bh8GvgL8DPgH8NAS
2ivpNj+DjwFfD34JPFJJ7Vl0m5rgXcAng28FvwEeo5T23LptffCe4DPBd4Pf
A49fWntB3aYJ+J/g88APgj8FT1JGewndtgX4QPDF4MfBX4OnLqs9oNu0AR8O
vgr8LPgn8PQB7VV021/Ax4FvAL8CHrmc9my6bS3wbuBTwLeD3wSPVV57Ht3m
O/A/wP8G3wP+ADxBBe2Fddum4BZ8Pvhh8GfgySpqL6nb/Ag+CHwp+Anwt+Bp
Kmkvr9u2BR8Jvhr8PPh/4Bkra6+q23QCHw++CfwqeNQq2rPrNnXAfwOfBr4D
/DZ47Kra8+m2DcD/Bx4Ovg/8IXjCatqL6Dbfg/cDXwB+BPwFePLq2kvrti3B
h4AvAz8F/g48XQ3tFXSb9uCjwNeCXwD/Ap6ppvbquu2v4BPBN4NHgEerpT2n
blsXvAf4dPCd4HfA49bWnl+3aQTeG3wO+H7wx+CJ6mgvpts2B+8PvhD8GPhL
8JR1tZfRbVqDDwVfAX4a/AP4N/W0V9JtO4CPAV8Hfgnc1NeeRbetAd4FfBL4
VvDr4DG+1Z5Lt6kP/jv4TPBd4PfA432nvaBu2xj8T/C54AfBn4AnaaC9uG7T
AnwA+GLwf8Ffg6dqqD2g2/4EPhx8JfhZ8I/g6Rtpr6zb/AI+FnwD+GXwyI21
Z9VtaoF3BZ8Cvg38JnjMJtrz6Lbfgv8BPgt8D/h98ARNtRfSbZqC9wWfD34I
/Bl40mbaS+q2YeCDwJeAnwB/A57me+3ldJu24CPAV4OfA/8PPENz7VV1247g
48E3gl8Fj/KD9uy6bW3w38Cngu8AvwUeu4X2vLpNA/Be4OHge8EfgoeEaS+i
2zYD7wf+D/gR8OfgyX/UXkq3aQk+GHwZ+Enwd+BpW2qvoNu2Ax8Fvgb8Avhn
8EyttFfTbX4FnwC+GfwaeLTW2nPoNnXBu4NPBw+C3wGP85P2/LptQ/De4LPB
94M/Ak/URntR3aY5+F/gC8GPgr8ET9FWexndthX4UPDl4KfB34N/0057Rd2m
A/ho8HXgF8FNe+2ZdZsa4J3BJ4FvAb8OHr2D9ly6bT3w38FngO8Cvwse72ft
BXSbxuB9wOeCHwB/Ap74F+3FddsfwAeALwL/F/wVeKqO2svqNj+BDwNfCX4G
/CN4aCftlXXbn8HHgq8Hvwwe6VftWXXbmuBdwSeDbwO/AR6zs/bcus234D3B
Z4HvBr8PHr+L9kK6bRPwvuDzwA+BPwVP2lV7Cd0mDHwg+BLw4+BvwFN3015O
t20DPgJ8Ffg58E/gGX7TXkW36Qg+Dnwj+BXwKN21Z9NtaoN3A58Kvh38Fnis
Htrz6rbfgfcC/xt8L/gD8JDftRfWbZqBW/B/wA+DPwdP1lN7Kd32R/DB4EvB
T4K/BU/7h/byuk078JHga8DPg38Gz9hLezXdthP4BPBN4NfAo/5Pew7dtg54
d/Bp4EHw2+BxemvPp9s0BP8f+GzwfeCPwBP20V5Ut/0e/C/wBeBHwV+Ap/hT
e2ndphX4EPDl4KfA34On66u9om7bHnw0+Frwi+BfwDNb7dV1m87gE8G3gEeA
R++nPaduUw+8B/gM8J3gd8Hj/qW9gG7bCLwP+BzwA+CPXX//5dCsreyJ++fx
3i9kJHkx1we+TLlWZhT5D/1l/mjy/q7p9dLUZpFren3zGPJj/vix5K/88dQ2
5QAZP4687AAZP568tbSdQD7M90nkK6QD1OaMP579g3SQPXSgzJ9MXknaUpuf
fZ9CPmagt98c1Gb9QNkv+yV/PnukQXJ/7FkGeePPsNccJOtPJe/i9zTyyX5P
J9/q9wzyG37PJI8x2LteB2qTe7Bcj73+YDmfWeQ9ZfxiajtTxif9m3y3jLfU
9p6Mf8Aef4jcfzh5wSFyvtSmyRA5r9nkf8r4idRmnow3c8gPuqbfb6A2T13T
70+wJxmax/v9BfYSrun3I9hbuKbfv5hLPtA1/f4DtV08VO6H/fhQ73rr2V8P
9a73mD31MO96meaRB4Z512tGbdoM8643jn34MO96B9lXDZP7m09+VtpSm0++
/0Oefrg4takibRaQ/+I7tRnn+0LyDb5Tmyu+LyKPPEKc2mSTNovJa0mHUZtu
0kH2KdKhS8i3++tR25vSEeyxRsrX21LyPNLh1OY7abOM/I+R8vVEbf4eKV+f
7Hv88cvJH/jjqW2CUTKevfAoGb+CvKm0pTbW95Xk832nNod9X0X+bJRcj9ok
Gy3XYy85WsavJv9xtIyntoP88exL/fFryE9IW2rz1ve15GnG5PF+v4LalHdN
v0/B3tY1/T7GOvKRrun3L6jt6jGy3nry8/561PY/fz32jGNlvQ3kVcfKetSm
01hZbyP5eOkAtdkkbdmvSgfZo46T+ZvIs0tbalPH983kv/lObab5voV8h+/U
5rbvW8ljj5f9UZt80pa9gXSQ/X/SZht5uD+e2uzzfTv5Q9cnv37UpzYJJ3zt
f+Z//WAv4rrn14937N+7rlnj68cO8n6u0339mEVtFrh+5j7Yj7jes3v37gpB
8heuJ7kPapt84tfu0L59+/vspV2Xch87yVu6DkmQIMFoajPE9Y3rXz/Yl7le
+/Wj0C7yU66HDP76QW3fuW769eMie7pJXztP7q8fu8krTJLzoTbtJ3nncZJ9
1CTvPDLvIV87yTuPntT2wiTvPA6zf5nknUe6veSZJnvn0ZnaVJ/sncdu9l8n
e+eRbB/5xMneebSntpsne+exlT1isnceCfaTR5vinceP1CbnFO881rLXneKd
R4wD5D2meOfRlNpOn+KdxzL2nVPk6+Mg+R3pILWJO1XO6xB5funAYfJG0uYI
eW/pILWZ488/Sr7fn3+M/LE//1/yRNNkPrUpJm2PkzeXDpwg7y9tTpIv9MdT
m2O+nyJ/6Tu1STld/DR5GWlLbVr7foZ86HTv8bEDtVkx3Xv8PMN+WsYHzpJ/
kPGLqe03M7zxSc+RV5oh16O2HWZ44x+wj5HxDc6Tr5PxQWpzScbnuEBuZnrj
J1KbLDNl/xfJa4gnpTZdZsp89kkyPsC+VcY3YL8u4zuwx5gl+2fPNUuuz15/
ltw/++8yPsg+U8afYd8l4x+w35Px5hJ5vL9Vm4K6bWPwP8Hngh8EfwKeJFx7
cd2mBfgA8MXg/4K/Bk81W3tAt/0JfDj4SvCz4B/B08/RXlm3+QV8LPgG8Mvg
kedqz6rb1ALvCj4FfBv4TfCY87Tn0W2/Bf8DfBb4HvD74Anmay+k2zQF7ws+
H/wQ+DPwpP9oL6nbhoEPAl8CfgL8DXiaBdrL6TZtwUeArwY/B/4feIaF2qvq
th3Bx4NvBL8KHmWR9uy6bW3w38Cngu8AvwUee7H2vLpNA/Be4OHge8Efgocs
0V5Et20G3g/8H/Aj4M/Bky/VXkq3aQk+GHwZ+Enwd+Bpl2mvoNu2Ax8Fvgb8
Avhn8EzLtVfTbX4FnwC+GfwaeLQV2nPoNnXBu4NPBw+C3wGPs1J7ft22IXhv
8Nng+8EfgSdapb2obtMc/C/wheBHwV+Cp1itvYxu2wp8KPhy8NPg78G/WaO9
om7TAXw0+Drwi+BmrfbMuk0N8M7gk8C3gF8Hj75Oey7dth747+AzwHeB3wWP
t157AddZmj6qNJ+9se9XyPtIW2oz1/er5Ad8pzZPfL9GnniDOLUpLm0iyH/w
ndoM8P06+SLfqc2/vt8gf+U7tUm1UfwmeVlpS21+8v0W+TDfqc1K32+Tn/Gd
2nz0/Q556Cbpu+SV/b5H/rN0GLUZKx1kXy8dep/8srSltpE2ex3BnlU68IC8
pnQ4tekqbR6ST5a21Gab74/Ib/hObWJuEX9MnlvaUptvfX9C3tN3ajPL96fk
u32nNvd9f0Yef6s4tSkkbZ6TN/Gd2vT1/QX5PN+pzSHfX5I/9Z3aJN0m/oq8
hLSlNmG+vyYf6Du1WeL7G/LjvlObN76/JU+9XZzalJM278jb+E5tRvj+nnyV
79TmnO8fyD+5pn+vozYZduTx/r2OvYpr+ve6j+QdXdO/11HbcTtkvU/kG3fI
etRfv+tlPfYoQVnvP/JsQVmP2tQOynqfybsFZT1qMzUo67Fv99f7Qn7LX4/a
xtop65mg87yu6c+LU9vvdsr67L12ynz2v10fdddj3+uvF4n8gXQ+ahOyS75f
2QtLj2FvJh1kt9LP2P+RDo1Mfli6LrV5Lm3Zk+2W9dhLSX89aec/SgeozWBp
y77Un89+0p8flfytP5/apN0j89nLS4ezt5MOso+UjmBfI22ikZ+XDlCbz/76
7Bn3ynrs1aRNdPJO0pbaTPA9Bvkm10vcv5dQm2uu3T+PNGCPuk/ms+fY541f
zF5nnzf+DHt3GW9ikk+TDlCboL8e+23pIHuc/TI/Fnk+6VBq01A6wP4/6TD2
2dKWfZ9u8wg84QHtRXXb78H/Al8AfhT8BXiKg9pL6zatwIeALwc/Bf4ePN0h
7RV12/bgo8HXgl8E/wKe+bD26rpNZ/CJ4FvAI8CjH9GeU7epB94DfAb4TvC7
4HGPai+g2zYC7wM+B/wA+GPwxMe0F9NtfgDvD74I/Bj4K/CU/2ovq9u2Bh8G
vgL8DPgH8NDj2ivpNj+DjwFfD34JPNIJ7Vl0m5rgXcAng28FvwEe46T23Lpt
ffCe4DPBd4PfA49/SntB3aYJ+J/g88APgj8FT3JaewndtgX4QPDF4MfBX4On
PqM9oNu0AR8Ovgr8LPgn8PRntVfRbX8BHwe+AfwKeORz2rPptrXAu4FPAd8O
fhM81nnteXSb78D/AP8bfA/4A/AEF7QX1m2bglvw+eCHwZ+BJ7uovaRu8yP4
IPCl4Cdc108Uv/hx9reuLyY80jdjbPI0l752y4TD9vWgNuVd3w+pGu8Qe1vX
XUKif5c2DvlI1+8T7JnWmdqudt0vwV/Xd7Ofdx0zQSBb8rjk/7keE/9zpw7U
JuPlr50i/tZ129irug6P1+tTSDzyTq6zxitWoTW1He96Rdw3Qzewb3JdNO7a
47Hjk191vT1O1+Q/UJuoV7525Tj5fljFnt31sdhP5kVNQF7HdcPYSx82ora/
ub4aq0OBJezTXP8UK9sfn9l3uH4c886OeiHkt113jzkv+nxqG/vq1/4Uo2Wt
d+z5XA+IETqhRkLyBq7jxrh6cRa1+Z/rCdFnpH/BHu46dfSm7SolIt/nem60
FCumUNuHrnNGO/v6IXvCa197TdQJpcomJi/iukTU+v3HUZvvXe+KEnLoNns/
19WjHAspnoR8geuTkUc0GkFtj7huErn6rGvsL1xfjxTzdoGk5Mkjvnb7SPty
DqI2pV0/MwO6XmBv6bqnKb8pVzLyIRHy9Udtl0kH2U9Jm+Tk76QD1CbddZnP
XkE6yN5e2qQgHyUdoDZr/fnsF/z57F/8+SnJM92Q+dSmurRl/1U6yD5R2qQi
3+zPpzYR/nz2aDdlPntOaZOavK50gNr0kLbs0/357Dv9+WnI7/jzqU3cWzKf
Pb90IC15I2mTjry3dCi1meOPZ98vHcb+2F+fPdFtr8PZi0kH2ZtLR7D3lzbf
kC90Tc/HqM0x1/T8i/2lPz6UPOUdGU9ty9yR8eyt78j49ORDpQPUZoW0ZT8t
HWT/4M/PQP7NXZlPbSpJW/YO0kH2MdImI/k6fz61ueTPZzf3ZD57FmmTibyG
dIDadJG27JP8+exb/fmZya/786lNjPsynz2Xa/d+0WvZ67ue696fmv131+79
pdNmIZ/pmt7Pmtrucu3eLnog+z3X9937X7PHe5CH37/6CXtB1/R+2VnJG7t2
b2fdiNr86ZreX5t97gO5P/aDD7z9vmJ/8sDbb7Zs5EkeevttTm2LP/T2O5a9
xUNvv3vZBzz09vuBffFDb795spP/+9Dbb0tq8/qht9/J7Kkeefs9zB54JOef
g/wn6QC1GS5t2VdKB9nP+vNzkn/051Ob9I9lPntl6SD7L9ImF/nYx973S2Fq
s+Gx9/3Sgf2yjA9nj/zEG3+GPesTb3zs3OS1nsh+qG1XGd+dfYqMX8y+TcZH
sN+U8UnzkMd86o2vTm3yPJX7Y//WNb2+iv0P1/R6N/ZZrte515flJd/j+rl7
PRe1ve/avZxsGXuCZ3m817OxF3JNrx/LR97UNb1ei9r2dU2vn2Of75per8Z+
yDW9Piw/+TPXp9zr9aht0udf270cbDR7Sdfu5XmH2cNc0+u/CpAPck2vx6O2
S57LebCfeC7nwf7muZwHe5oXch4Fycu9kPOgNm1fyHmwj3gh58G++oWcRyHy
cy/kPKjNfy/kPNgzvJTzYK/6Us6jMHnHl3Ie1Gb8SzkP9o0v5TzYr76U8yhC
HuWVnAe1yf5KzoO9tm7zG/hU8B3gt8Bjv9aeV7dpAN4LPBx8L/hD8JA32ovo
ts3A+4H/A34E/Dl48rfaS+k2LcEHgy8DPwn+DjztO+0VdNt24KPA14BfAP8M
num99mq6za/gE8A3g18Dj/ZBew7dpi54d/Dp4EHwO+BxPmrPr9s2BO8NPht8
P/gj8ESftBfVbZqD/wW+EPwo+EvwFP9pL6PbtgIfCr4c/DT4e/BvPmuvqNt0
AB8Nvg78Irj5oj2zblMDvDP4JPAt4NfBo5u8ynPptvXAfwefAb4L/C54vEja
C+g2jcH7gM8FPwD+BDxxZO3FddsfwAeALwL/F/wVeKoo2svqNj+BDwNfCX4G
/CN4aFTtlXXbn8HHgq8HvwweKdrXrjo9ZFXxouRZXQ9qG3b4I7Wt6Xp3wZW3
txUj7xpN5hcnn+ya/nuQ2mxzTf8/rQT5DX88tYkZXcaz544u40uSfxtdxlPb
nuKL2Wf589l3y3hTivy+vx61jR/DG9+AvVAMWZ+9iXSQva+0KU0+zzX9/19q
c8g1/f9e9qeu6f8XlyFPGjOv9/+HqW2JmLJeWfKwmLIetR0YU9ZjXxJT1guQ
H/fXozZv/PXKkaeO5XUItSknHcreRjof+wjpAPsq6brs56TD2D9Jd2bPEFvO
j71KbPn8sHeMLZ8f9nEy3pQn3yjjc1DbKzK+AXuUOLI+ezbX9PyTvbZrev7J
3s01Pf+sQD7VNT3/pLbbXdPzT/Zbrun5J3usuHm955/seV3T88+K5N+5puef
1KaXa3r+yf53XPn6Yd8b19vvK/YHcb39ZqtEHhLP229zals4nrffsezN4nn7
3ctu43n7/cD+Tzxvv3kqkx+O5+23JbV5Hs/b72T2ZPG9/R5mLxVfPh9VyH+U
Dqc2g6UDVcmXSkdQm5PSthr5W+nQ6uRpE8h5UNvy0mE1yNtJm5rkIxPIeVOb
NQm8+6/Efj6Bd37t2D8nkPNnzxjincdy9moh3nmeYO8UIp8P9gkh3vkkr0W+
KcQ73xLU5lqIfH7YoyaU+2XPkdDb7xz2Ognl88XePaF8fbJPS+jtN05t8mBC
+fxR29sJ5euVPU4ib7+/sedLJJ9P9oaJ5OuX/X+JvP1eYZ+dSM63Dvm+RN73
V2Fq8yiR9/3XgT1hYvn8sxdNLN+/7N8n9sbHrkv+l4wPUNsFMr47+1EZv5j9
hYyPYE+RxBuftB556STe+OrUplUSOW/2IdJB9uXSpj75KekAtXnvz2dPl9Tr
4+wVpUO/JW8v3ZnajJYOsq+VDvmO/KJ0GLX9Ir2SPXMy2V8D8urSAWrTWdqy
T5QOsm/x5zckj/DnU5voyWU+e07pIHs9adOIvId0gNrM8Oez7/Tns9/15zcm
j5tC5lObAtKWvZF0kL2PtGlCPsefT20O+PPZH/vjm5InTilObYtJm2bkP/hO
bfv7/j35It+p7THfm5O/8p3apkwl/gN5WWlLbVv73oJ8mO/UdoVr9/vXQ9nP
uHa//j2O/YNr9/vb09lDU+f1fp+cvZLrDR0vrV/G/rNr+v1w9jGp5XzZ16f2
rneQ/VJq73on2SOl8a53iT1LGu96t9hrpvGu95i9Sxrvem/YJ6eR+w0j36rb
3ACPkVZ7bt22PnhP8Jngu8HvgcdPp72gbtME/E/weeAHwZ+CJ/lGewndtgX4
QPDF4MfBX4OnDtUe0G3agA8HXwV+FvwTePr02qvotr+AjwPfAH4FPHIG7dl0
21rg3cCngG8HvwkeK6P2PLrNd+B/gP8Nvgf8AXiCTNoL67ZNwS34fPDD4M/A
k2XWXlK3+RF8EPhS8BPgb8HTZNFeXrdtCz4SfDX4efD/wDNm1V5Vt+kEPh58
E/hV8KjZtGfXbeqA/wY+DXwH+G3w2Nm159NtG4D/DzwcfB/4Q/CEObQX0W2+
B+8HvgD8CPgL8OQ5tZfWbVuCDwFfBn4K/B14ulzaK+g27cFHga8FvwD+BTxT
bu3VddtfwSeCbwaPAI+WR3tO3bYueA/w6eA7we+Ax82rPb9u0wi8N/gc8P3g
j8ET5dNeTLdtDt4ffCH4MfCX4Cnzay+j27QGHwq+Avw0+Afwbwpor6TbdgAf
A74O/BK4Kag9i25bA7wL+CTwreDXwWMU0p5Lt6kP/jv4TPBd4PfA4xXWXlC3
bQz+p+s+N9JlrcE+13WZLqPH32Y/KOPtj+RPXNPzUWqTpEhe7/kte/Eisn5L
8hZFvPE5qO0AGd+AfbGMt+z/yvjF7K/99dlTFZX1W5EHisr61PanorI++3AZ
b9lXSoezn5UOsn+UjmBPX0yu15q8snRdavOLdDj7WOln7BukAz+RX5YeQ20i
F5frsWeVzteGvJa0pbZdpY+zT5EObUu+TboztbkpHWSPWcLrkHbkeaTDqO23
0ivZ/5A27clnlfDOOza12VPCO++k7PdlfCh7gpLy+WEvVNIbX5i9aUk5H/a+
Mr46+3wZ34D9kIwPY38m4zuwJy3lje/OXrKUnB97mPQY9kHS4exLpFeyn5AO
sr+RPs6eprR8/tjLST9jbyttOpCPcJ2k5KrEJanNatfZerTM2oP9nGvHq9j/
c13n0Z7aj9gzlPnaX0e3zPozeVXXbnpLatvR9bCZ54fOZB/vetbXPM++0bVb
PvEv5Fdd76399QLUNkrZr+2GD2XP7tpdfg977bJyPx3Jfysr90Ntp5aV+2Hf
UVbuh/1WWbkf9tgBuZ9O5HkDcj/UpkFA7oe9V0Duhz08IPfzK/negNwPtXkY
kPthDykn98NepJzcT2fyZuXkfqhNv3JyP+z/lJP7YT9STu6H/Xk5uZ8u5MnL
y/1Q21Ll5X7YW5aX+2EfXF7upyv5svJyP9T2ZHm5H/Z35eV+2NNWkPvpRl6h
gtwPtW1XQe6HfVQFuR/2NRXkftgvVJD7+Y38cwW5H2qTqaLcD3u1inI/7L9W
lPvpTj6hotwPtdlcUe6H/VpFuR/2aJXkfnqQ55AOUJu60pa9u3SQfbo//3fy
oD+f2tzx57PHqSzz2fNLm57kDaUD1Ka3tGWf7c9n3+/P/4P8kT+f2iSqIvPZ
i0oH2ZtLm17kf0kHqM1Cfz77UX8++0t//v/IU1SV+dSmjLRlbyUdZB8qbXqT
L/fnU5vT/nz29/589m+qyfw+5BWlA9Smg7RlHy0dZF/nz/+T/KI/n/rrEwiZ
z55ZOsheQ9r0Je8sHaA2k/z57Fv8+ezX/fmWPHoN1SaXblsP/HfwGeC7wO+C
x6upvYBu0xi8D/hc8APgT8AT19JeXLf9AXwA+CLwf8Ffgaeqrb2sbvMT+DDw
ldJ2APkZ3eYjeGgd7ZV125/Bx4KvB78MHqmu9qy6bU3wruCTwbeB3wCPWU97
bt3mW/Ce4LPAd4PfB49fX3sh3bYJeF/weeCHwJ+CJ/1WewndJgx8IPgS8OPg
b8BTf6e9nG7bBnwE+Crwc+CfwDM00F5Ft+kIPg58I/gV8CgNtWfTbWqDdwOf
Cr4d/BZ4rEba8+q234H3Av8bfC/4A/CQxtoL6zbNwC34P+CHwZ+DJ2uivZRu
+yP4YPCl4CfB34Knbaq9vG7TDnwk+Brw8+CfwTM2015Nt+0EPgF8E/g18Kjf
a8+h29YB7w4+DTwIfhs8TnPt+XSbhuD/A58Nvg/8EXjCH7QX1W2/B/8LfAH4
UfAX4ClaaC+t27QCHwK+HPwU+HvwdGHaK+q27cFHg68Fvwj+BTzzj9qr6zad
wSeCbwGPAI/eUntO3aYeeA/wGeA7we+Cx22lvYBu2wi8D/gc8APgj8ETt9Ze
TLf5Abw/+CLwY+CvwFP+pL2sbtsafBj4CvAz4B/AQ9tor6Tb/Aw+Bnw9+CXw
SG21Z9FtaoJ3AZ8MvhX8BniMdtpz67b1wXuCzwTfDX4PPH577QV1mybgf4LP
Az8I/hQ8SQftJXTbFuADwReDHwd/DZ76Z+0B3aYN+HDwVeBnwT+Bp/9FexXd
9hfwceAbwK+AR+6oPZtuWwu8G/gU8O3gN8FjddKeR7f5DvwP8L/B94A/AE/w
q/bCum1TcAs+H/ww+DPwZJ21l9RtfgQfBL4U/AT4W/A0XbSX123bgo8EXw1+
Hvw/8IxdtVfVbTqBjwffBH4VPGo37dl1mzrgv4FPA98Bfhs89m/a8+m2DcD/
Bx4Ovg/8IXjC7tqL6Dbfg/cDXwB+BPwFePIe2kvrti3Bh4AvAz8F/g483e/a
K+g27cFHga8FvwD+BTxTT+3VddtfwSeCbwaPAI/2h/acum1d8B7g08F3gt8B
j9tLe37dphF4b/A54PvBH4Mn+p/2Yrptc/D+4AvBj4G/BE/ZW3sZ3aY1+FDw
FeCnwT+Af9NHeyXdtgP4GPB14JfAzZ/as+i2NcC7gE8C3wp+HTxGX+25dJv6
4L+DzwTfBX4PPJ7VXlC3bQz+J/hc8IPgT8CT9NNeXLdpAT4AfDH4v+CvwVP9
pT2g2/4EPhx8JfhZ8I/g6ftrr6zb/AI+FnwD+GXwyAO0Z9VtaoF3BZ8Cvg38
JnjMgdrz6Lbfgv8BPgt8D/h98ASDtBfSbZqC9wWfD34I/Bl40sHaS+q2YeCD
wJeAnwB/A55miPZyuk1b8BHgq8HPgf8HnmGo9qq6bUfw8eAbwa+CRxmmPbtu
Wxv8N/Cp4DvAb4HHHq49r27TALwXeDj4XvCH4CEjtBfRbZuB9wP/B/wI+HPw
5CO1l9JtWoIPBl8GfhL8HXjaUdor6LbtwEeBrwG/AP4ZPNNo7dV0m1/BJ4Bv
Br8GHm2M9hy6TV3w7uDTwYPgd8DjjNWeX7dtCN4bfDb4fvBH4InGaS+q2zQH
/wt8oeszN+5FLGM/6npf6tHbX7K/dL3+u8Izig8kTzH+ay8YeemPvtSmjOsp
+/o12sveyvXQL1kLxxlEPtR1r2LHEtWjtstdd+jy27NJ7KddN1uc6thl9veu
a94MLskwmPybCV+7dJq2Q9tR24qu8zSI13Y5ewfX6UatqfiKfbTrBPubZCgx
hHzdBLlfanvRNb0ekN1MzOu9vmwoeeaJMp7a1Jgo49k7++OHkU/yx1PbLdJB
9uvSZjh59EleB6hNLmnLXk86yP67tBlBPsOfT212+fPZ70qHs8ebLOuxF5CO
YG8sbUaS95EOpTZzpQPsB6TD2J9IW/bEU7zzWcxefIqcH/sPU+R6o8gHyPgc
1HaRjG/A/q+Mt+yv/PXZU02V9dnLTpX1R5P/NFXWp7bDZHwD9pUy3rKfkfGL
2T/667OHTpP1x5BXnibrU9ufp8n67GNlvGVfr9tcBo80XXtW3bYmeFfwyeDb
wG+Ax5yhPbdu8y14T/BZ4LvB74PHn6m9kG7bBLwv+DzwQ+BPwZPO0l5CtwkD
Hwi+BPw4+Bvw1H9rL6fbtgEfAb4K/Bz4J/AM4dqr6DYdwceBbwS/Ah5ltvZs
uk1t8G7gU8G3g98CjzVHe17d9jvwXuB/g+8FfwAeMld7Yd2mGbgF/wf8MPhz
8GTztJfSbX8EHwy+FPwk+FvwtPO1l9dt2oGPBF8Dfh78M3jGf7RX0207gU8A
3wR+DTzqAu05dNs64N3Bp4EHwW+Dx1moPZ9u0xD8f+CzwfeBPwJPuEh7Ud32
e/C/wBeAHwV/AZ5isfbSrl+ahX03sbdy/eHV5/Ev2Ye4jnS/wcLcY8mXu451
ZenWttT2lOuQE1FOzGZ/7zr53qa3L7GnW/K1021a9T7pOPKKrrMsixm/LrVt
7zr37BYZhrGPdl1o4voie9jXui41NF6Nz+wXXVfo07pFsfHkX1xX77KlW1dq
k3np167/U6IhS9mru27SpP2MO+ydXYfVCq4MnUA+0XU7t2Nqs8X1r4U7XZjA
HuG6R/a9j4+xR1/2tf9MmyZyrInkOV0PTNgtWQVqU8/1iGiHcvRh7+F6wvvQ
shvYZ7ie/vj3b5+z73Q95/qxtjknkd91vehM5t4/Udu4y7/2yoO9x/zNXsD1
xm2n5l1gb+R6x6ocmxJPJu/jet/8fkdrUds5ro9NPX99MPsB12dG5n2zk/2x
68v9BsX+xJ54xde+1f1KuiJTyIu5fti+UMHO1OYH1y+aD6+ymL2/6w/1bjS7
xb7IdaTKxTunm0p+zHXMEmMGNKY2r1yH5Lk7ZRx7ypXu6yVDmWVH2Mu6Tpds
4s7o08hbu84S+9GZALUZ5jr35/IPerGvcF3oxdTPa9nPuC5551mip+wfXJe/
WCVr9unkoavc18uxWSVbUdtKruvtel1nJvvPrhuvr9n6HPsY12GL5/ZMOIN8
veu2sz6MqEFtL7nuNK7e7IHskVa7r5dBC9ftYM/iuk+vLwffs9d0PaBTw6sF
Z5J3cT2i5bIXHanNZNfjG0aNsZB9q+tp1ZulvsF+w/WcMqvzpplFHmON+3op
EKtiQ2qT2/XKLGGNx7DXd70x1YZfDrH3dL0jfvx+Uf8mn+l6X+SfJpahNrtd
H32zZVFP9nuuzzxItH01e/y17uvlavuTj9gLur55MngnSzh5E9cP9iX/GEZt
/3T9YnOnBNPZ57l+v3xvxjPsB12buWmKJZhN/tR1zMndalajtknWfe0Eww+F
9Wcv4TpZ3/Tdt7G3cJ2uW8+hb9kHus7c9t+Z+eeQL3adq1mW1T9Tm+OuC9Xp
s28++2vXJSucvniNPfV69/VSNOfTlHPJA66r5/wrynfUpo3ret9cSD6Kfbjr
xonz5TrAvsp1ixiDA5HnkZ913fbjle9KUZtPrjs9LdS+B3v6DV+7+83hfVay
V3Hd+9yNsQ/Yf3E94HDxfzLNJx/neviOMZt/oLYbXI9bc/fYFPYrrqctKHPz
JHvkjV979vSJb+P+Q57N9cLRj+JUoba1XK/sXyG0H3s31xt+n1ZoC/sU19t/
fl71Nft21/taVG2edwH5TddHv/27S3tqE2vT1z5d5c3Auex5XF8uWWvaFfbv
XN/MO2958oXkf7h+kPHjrnrU5m/XL5LXPzecfY/r93EWPdzL/mCT9/PLLCJP
sNk9XhUbdTMFtSnsen+XNPvzszd1Tb8fxm5dj7pZbFQr9vmuu6bZ36U3+2HX
7uncRPZnrot/nbCcPdmWr53GXYC95BZvPxHsP27x9vOOfdAWbz8JF5Mv3eLt
Jwe1PbHF208F9rdbvP18z55mq7ef7uzlt3r7GcXedqu3nwXsI7d6+wmyr97q
7ec8+/mt3n6es/+31dtP7CXkGbd5+8lIbatu8/ZTir3TNm8/DdjHb/P204l9
0zZvP4PZr27z9hPOHnW7t5+N7Nm3e/s5wV5nu7efB+y/bff2E2Up+bTt3n7S
UNsd2739FGa/vd3bT2322Du8/bRlz7fD249lbyAdXE7+P2mzijxcOkBt9vnz
2R/689kTBmX+avIi0gFq8720Ze8nHWRf4M9fQ37En09tXvjz2ZPvlPnspaXN
WvKW0gFqM0Tasi/z57Of8uevI3/nz6c26XbJfPYK0kH29tJmPfko6QC1WevP
Z7/gz2f/4s/fQJ5pt3z/Upvqu+X7k/3X3fL9xz5RxufYSL5ZxnenNhEyPsge
bY98/W8iz7lHvr6pbd098vXL3kPGP2CfLuMLbybfKeMttb2j28Tdqz2/btMI
vDf4HPD94I/BE+3TXky3bQ7eH3wh+DHwl+Ap92svo9u0Bh8KvgL8NPgH8G8O
aK+k23YAHwO+DvwSuDmoPYtuWwO8C/gk8K3g18FjHNKeS7epD/47+EzwXeD3
wOMd1l5Qt20M/if4XPCD4E/AkxzRXly3aQE+AHwx+L/gr8FTHdUe0G1/Ah8O
vhL8LPhH8PTHtFfWbX4BHwu+AfwyeOR/tWfVbWqBdwWfAr4N/CZ4zOPa8+i2
34L/AT4LfA/4ffAEJ7QX0m2agvcFnw9+CPwZeNKT2kvqtmHgg8CXgJ8AfwOe
5pT2crpNW/AR4KvBz4H/B57htPaqum1H8PHgG8Gvgkc5oz27blsb/DfwqeA7
wG+Bxz6rPa/rdbdHX825hbyB65GbMofcoLa9XLcZuaXclK3k4a7L/FivW+1t
5HtdJyt8d17U7eQPXT+J2efsZmobcu5r77+cKGaXHeRFXP+9cmHxrEHyZq5/
H1Dm5yvUpp/ruo1Pzxi/k/wf19lydThWbRf5kXPe/s1u8ufS+ahN8vNeh7GX
kh7D3lI6yD5Y+hn7MunQPeQnpetSm3fSlj3tBdnPXvIK0pbatvN9H/ko36nt
Gtfu/STOsl9w7d6/Ivd+8s+u3ftD9Kc2mS7m9d6Pgr2aa/f+F/kOkP/q2r2/
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
XNanNi2Sy/rsA2S8ZV8s4xez/yvjz7C/9tdPRJ4qhaxPbQIpZH32n1LI+uzD
Zfxi9pUy/gz7WRlvEpN/9NenNulTyvrslVPK+uy/pJT12cfK+DPsG2S8SUJ+
WTpAbSKnkvXYs0oH2WtJm6TkXaUD1GaKP599mz+f/aY/Pxl5zNSqTR7d9lvw
P8Bnge8Bvw+eII32QrpNU/C+4PPBD4E/A0+aVntJ3TYMfBD4EvAT4G/A06TT
Xk63aQs+Anw1+Dnw/8AzfKO9qm7bEXw8+Ebwq+BRQrVn121rg/8GPhV8B/gt
8NjptefVbRqA9wIPB98L/hA8JIP2IrptM/B+4P+AHwF/Dp48o/ZSuk1L8MHg
y8BPgr8DT5tJewXdth34KPA14BfAP4Nnyqy9mm7zK/gE8M3g18CjZdGeQ7ep
C94dfDp4EPwOeJys2vPrtg3Be4PPBt8P/gg8UTbtRXWb5uB/gS8EPwr+EjxF
du1ldNtW4EPBl4OfBn8P/k0O7RV1mw7go8HXgV8ENzm1Z9ZtaoB3Bp8EvgX8
Onj0XNpz6bb1XEfteWjLNvbfxW1y8hnSoSnId0kHqe1d6bCU5PFyy/qpyAu4
dv+/NRO1aezaZTX2Pq7d/2/tyD7XNb1/KvsB1/R+qOxPXNP7m7InziPXS01e
PI9cj9r+kEeuxz4gj1yPfVEeuR77v3nkeuyv8sj12FPlleulIS8rHaA2P0lb
9mHSQfaV/vy05Gf8+dTmoz+fPTSfzGevLG3Skf8sHaA2Y6Ut+3p/Pvtlf/43
5JHyy3xqk1XasteUDrJ3lTah5JP9+dRmmz+f/YY/nz1mAZmfnjy3a/rvV2rz
rWv671f2njLess+S8YvZd8v4M+z3/fUzkMcvKPujNoWkLXsT6XD2vtJB9nnS
EeyHpE1G8qf+eGqTtJCsn4m8hHSQ2oRJm8zkA6UD1GaJP5/9uD+f/Y0/Pwt5
6sIyn9qUk7bsbaSD7COkTVbyVf58anPOn8/+yZ/PnqGIzM9GXkU6QG06Slv2
cdJB9o3+/OzkV/z51CZKUZnPnk06yF5b2uQg7yadj9pMlQ5j3y49hv2Wvx57
rGJeP2PPKx2ak/w76brUppe0Zf/btft9n2Pse13T7wflIn9QzPt67UBtQorn
837/iL2wazc8Rm7yZsXl65/aWtfu94/msv/jmn5/iv1wcTm/POTPi3v7GUVt
k5Xw9nOZvVQJ+X7LS/5jCW8/PanN4BLefvazLy3h7SdpPvKTJbz9tKK2b0t4
+1nFnrakfH7yk5cv6Xl+atOupMxnH1nSW38i+5qScn328yW9/b1j/1xS9l+A
PGMp7/6+pzbVSsn9s3cqJZ9v9gml5PzYN5Xy9pOxIPm1UnL+1DZqaW8/g9lz
lJbPH3ud0t5+HrB3Ly2f/0Lk00p7+6lNbYKl5euH/bZ0kD1OGTm/wuT5pAPU
pqG0Zf+fdJB9tj+/CPk+fz61eeTPZ09Y1usD7EWlQ4qSfy/dmNr8JR3OvkD6
HvtR6XzFyF9I96Q2KQKyX/bS0jGLk7eSrktth0hPYV8uHcF+SjpbCfL30p2p
bbpyXm9kryhtSpK3lw5Qm9HSln2tdJD9oj+/FPkXfz61yVxe5rNXlw6yd5Y2
pcknSgeozRZ/PnuEP74MefQK4tQ2p25TD7wH+AzwneB3weNW1F5At20E3gd8
DvgB8MfgiStpL6bb/ADeH3wR+DHwV+ApK2svq9u2Bh8GvgL8DPgH8NAq2ivp
Nj+DjwFfD34JPFJV7Vl0m5rgXcAng28FvwEeo5r23LptffCe4DPBd4PfA49f
XXtB3aYJ+J/g88APgj8FT1JDewndtgX4QPDF4MfBX4Onrqk9oNu0AR8Ovgr8
LPin/3N11+FVHGsAxgcr7u7u7g7BXYo7wd3dB3d3Le7uTqC4FffibheKFO/N
zuzkeb43/733N7szszmc3J7knIWnrCK9nGzdET4Nvgv+Nzx0VekZZOsq8B7w
OfCD8EfwiNWkZ5OtasH7wf+AH4W/hEevLj2vbN0AruEr4Gfg7+DxfpdeWLZq
Bh8FXw+/CP8XnqSG9JKydRv4RPhW+A34T3jqmtLLy1ad4dPhe+B34WFrSc8o
W1WD94TPgx+CP4FHqi09h2xdGz4Avhh+HP4KHrOO9HyyVSP4UPgq+Fn4P/D4
daUXla2bw8fAN8Avw7/Ak9WTXkq2agefBN8Ovwn/D56mvvSKsnUX+Ez4Xvh9
eLgGwd26yZyJj61n9rpB19EZKhU3Xt3rasN6/7nFtOrtdekZrZokCDA+3+sC
K2t9HWxaHfY66+5SM55Yf+p1qtO5slcuYTxKw+COdyfl6a2mdU6vI7+N0Sph
SeN1G7r1mdYDvfb+c2iH9aVem//esX7CjU9RyvgbN762aR2rkT9+nPUCjfzx
QdYbN/LHf7I+3I3PVNr4ajc+0LQ678bPtP7BjT9tPWFjf7wqY7yY197rfVlN
q5Zem/drWB/rtff64Fjrm7w2r/9Zv+K19/LgY+vfvDbvBylrPHkTf74A06pM
E3++TtbbN/Hnm299ShN/vlPWdzTx5/ts/XYTf7405Yyrpv58NUyrdE3d98d6
JddB1ru5VuWNz3IdYFrtDzne+oOQ462HD3THVzCexXWAaVXDtbbex3WQ9YUh
x1c0fiTkeNPqecjx1qM2c8dbz+1aVTJez3WAaTXYtba+LOR466dCjq9s/G3I
eNMqTnPnVYwXdK1Nq6YhXtX4iObu8WharW3uHt/W/wo53vonN36t9UQt/PFX
rQe0cOevZrxVC3d+02q8G1/b+mY3Xlu/5savtf495PzWU7Z0569uvGxLN960
6tjSnf9341NDxtcwvitkvGl9J2R8TeOhW7nxtYynd53AtKriOof17q7LW5/j
OtD6Add9rT9yPcV6hNZ+r7aezXWQ9Zqub1jv5/qd9UWuI9Q2ftR1CtP6hesC
1qO38bu69Tyu21pv4FpbH+Ja1TG+IsRN69MhXtf4uxA3reO2dV7PeGHX2rQO
dB1kfVTI+PrG17kOMK0uhhxv/XPI8daTtHPHNzBewnWAadXGtbY+wfVm61td
37d+3XWMhsZ/hpzPtE7V3u+u1su7Xmy9k+sL1qe7Vo2M73adw7S66zrQepgO
7vFiPaPrIOtVXb+z3tN1isbG57qublodcq2tP+7gPx8ftR6po//8HbGJ8ewd
/ef7KqZV7Y7+8/U06/07+s/v16wv7uj/PEjc1Pixjm4/ptWrjv58y63H6OTP
98J6vk7u51mg8Yad/Pm6m1ZDO7mfX9ZXdvLn+279bCf3/Wlm/H0nf74RplX8
zu7nk/Uinf35ojY33ryz+3lkWo/u7M83y/qGzv58t61f6uyudwvjXzr787U0
rZN28edbY71UF3++N9bbdvHny9XS+KQu/ny9TettXfz59lm/2cU9floZ/+U6
wLRK09V9f61XcH3fehfXAa2Nz3C92LTa61q1MX7Pa+/t02VNq3Ddctj3S0+w
nslr8/Zy69W99t5fnbCt8V7d3PfftJrfzT/fSutB7nyvrT9158vdznjk7v75
+plWObu7x7/1Ot398/3W3vjA7v75KpvWS7r755tu/YQ7303rr935UnQwHquH
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
ttcDsoybEKaL8VB3g3vrkJ/nm5jW6bx+calrzL3WK3udIt3jmnG7Gu/mdb1+
dWd1Na1mez3p7OkbZ6zv9/p48mKJ03cz/tDrn923NB5mWoe/F9x5jqdZ/Lf1
rF53SDjnYYHuxmt4vbRj5LQzTKu+Xt88NLjN/6wv9DpG7H/WVOxh/E+vy7Vu
9XqFaf3c68F7bmQL1dN4tPvBvTNK5W6NTOvcXr9uemjbLuv1vU6zLdfnWL2M
D/a64W8rC3Q2rZZ7Pa1+wgGnrJ/y+tT6CQfS9Db+v/vu+2Nax3mQw38/lPVC
Xpv3W1lv+sAfr/oYH+nGZzKt17rxta1fcOO19U8h57ee+KE7v/WAh+78fY23
fujOb1qPd+NrW9/ixmvr11wHWf8Rcr5+xlM+8jvAtCrnWlvv6DrI+jTXqr/x
XSHHm1Z/hxxvPfRjf307rGd47K//pfUqj/3xKQYY7+HG1zat57jx46wfdOOD
rD9y4z9Zj/jEXZ+BxrM98ccHmla1nvjjZ1rv58aftv6HG68GGT/qxuc1rV66
8e2tR3/qj19sPe9T9/2z3uCpPz7SYOPajQ8wrVe48b2sn3Hj11p/58bftx7v
mT8+7hDjhZ/54yuaVs2euetvfZQbv8P6ejf+pfWLbnwKbfxfN762aZ3kubv+
1ks+d9ffepvn7vpbn+jGZxpqfKsbH2ha3XDjZ1r/6caftp76hbv+w4yXdx1g
WnV2ra1Pdx1kfU/I8cON3/XavN/FtAr7Mod/f0PrGb323s7y1Ho1r837a0YY
7/nSzWdazXvpn++s9UPufAlHGn/iztfatI70yj/fNus5Xrn1jTJe2+v+i571
S2ZaDfD6Y5G/PhSxvthr835l68e9ft4v+ADrr9z5tPWYr0XrfLJVI/hQ+Cr4
Wfg/8PhvpBeVrZvDx8A3wC/Dv8CTvZVeSrZqB58E3w6/Cf8PnuZ/0ivK1l3g
M+F74ffh4d5JzyxbV4f3hs+HH4Y/hUd5Lz2nbFUXPhC+FH4C/gYe6x/pBWTr
xvDh8NXw8/AP8IQfpBeTrVrCx8I3wa/Av8GTf5ReRrZuD58C3wG/DVefpKeT
rSvBu8FnwffDH8DDf5aeRbaqAe8DXwg/An8Oj/qv9NyydT34YPgy+Cn4W3ic
L9ILylZN4SPga+F/wT/BE32VHiBbt4KPh2+GX4N/h6f8Jr2sbNURPhW+C34H
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
w7QakM9dD+uL87nr8Zfx4/nc9TCtX+Vz18N6zPzuelwwni+/ux6mVaP87npc
ND7Ua/P6s2m1ymvz35/Wz7rx2vo/bvxa6/EL+OOvWi9awJ3/kvHmXnuvl4U1
rcZ47b3cFtH6Bq+91/OiWb/stXk9zfoXr73X5xJYT1Ywp329L6n1Ul57r7el
st7Oa/P6nfVJXnuvB2axvt1r7/W4nNZveu29vpfP+n9em9cLracp5P79Wa9Y
yN9PaetdCvn7qWB9ZiF/P1Wt7y3k76em9fuF/P3Usx6usL+fxtYzF/b309x6
9cL+ftpY713Y309H6/ML+/vpZv1wYX8/va0/LezvZ4D1KEXc99N6TtmqLnwg
fCn8BPwNPFZR6QVk68bw4fDV8PNeN6qW8P5p6x+87hM/box2l40nLBbc0+7F
CAh/xXgxrzeuitJ1hWnV0utTXSIsLnXV+FivH+cPe+GBabWpmJvvmvErXpu/
DzKtvnlt/p7ouvHkxXP6f99jWpXx2vw90A3j7Yu785lWU4q781nfUdyd76bx
2yHnM61VgDvfLePpAtz5TOtKXk/Itvf5MOvdvI7fuOfFkdZneb1sfLa9Y6zv
9zp4+NLx1h947eUk6+FLBHfZ4BNMtZ7F60tl4jeeYb2G18GnLzPbeh+vXywd
n22e9YVeB3P8hdaPlHA/760/L+Gvd6n1qCX99a6wnrukv97V1uuV9Ne7zvrg
kv56N1pfVtJf7xbrp0r6691u/W1Jf727rMcp5a93r/WCpfz1HrDetJT7eWp9
RCl/vUesry3lr/eY9b9K+es9af1TKX+9Z6wnKu2v97z1gNL+ei9ab1XaX+8V
6+NL++u9bn1zaX+9t6xfK+2v92/r30v7671vPWUZf70PrZct46/3ifWOZfz1
Prc+tYy/3lfWd5Xx1/vW+p0y/nrfWw9d1l/vR+vpy/rr/dd6lbL+er9Z717W
X+9P63PKup8Pt40fkK0ewSOUk55Ntq4J7wdfBD8KfwGPXl56HtmqAXwIfAX8
NPwdPG4F6YVl60D4KPg6+EX4Z3iSitJLyFZt4BPgW+HX4T/hqSpJLy9bd4JP
h++G34WHqSw9o2xdFd4TPhd+CP4YHqmK9OyyVW14f/hi+DH4K3iMqtLzydYN
4UPhK+Fn4e/h8atJLyJbNYePhm+AX4J/gSetLr2UbN0WPgm+DX4T/gue5nfp
FWSrLvAZ8L3we/BwNaRnkq2qw3vB58OD4E/hkWtKzylb14EPhC+Bn4C/hseq
JT2/bNUYPgy+Gn4O/gGeoLb0YrJ1C/hY+Eb4FfhXePI60kvLVu3hk+E74Lfg
qq70tLJVJXhX+Cz4PvgD+G/1pGeRrX+H94EvgB+BP4NHrS89l2xVDz4Ivgx+
Ev4WHruB9IKydRP4CPgar0NN3NermPW/vO5RetySwdY/ev34e71zB60nahjc
dbal//rLenGvT7b/nKb4HeOtvC6U6lj1Iab1OK/X3Zw+8JD1zV4nndp89X/W
r3o9qXzOK8X/Nv69ob8+bVqnaBTcowKTdrprvazXUQ4XulXkrvEOXk9PWa/c
fNNqqtcJh/Xa/tX6Tq8XP5yWst4943e8Tldq86SdpnWoxsG9ftm573HuG0/v
da6wr9r2MK0re72nZYRrF61397r4sbSlcjwwPtvr4Nw8ybQ64HXl4AW/sf7Q
6yZVD5/J+NB4hCbBXetd90hNTOusXpv75Viv6XXxPNdGH7fe12svv1lf5HWm
vgXDZX9k/E+vkyd6VaqFafXC67j7FwybbT1a0+CO5C3Aep6m7vv/2Hh91wGm
1RDX2vpy2eq015MP7Gh2y/r/vK7cI/6PvE+Mxw305svYb9ZU07qQ1yfu3srx
xnqg1yNnFDlT/qnxkV6XrLio1XLTal2gW98z4xdkq8/wxM2kl5CtW8MnwLfA
r8N/wFM1l15OtuoEnwbfDf8bHqaF9AyyVVV4D/hc+EH4Y3jEltKzy9a14P3h
f8CPwV/CY7SSnle2agjX8JXwM/D38HitpReRrZvBR8PXwy/B/4UnbSO9pGzV
Fj4Rvg1+A/4Lnrqt9AqydWf4DPge+D142HbSM8nW1eC94PPgQfAn8MjtpeeQ
rerAB8CXwI/DX8NjdpCeX7ZuBB8GXwU/B/8HnqCj9KKyVQv4GPhG+GX4V3iy
TtJLy9bt4JPh2+G34P/B03aWXlG26gqfCd8Hvw//rYv0zLLV7/De8AXww/Bn
8ChdpeeSrevCB8GXwk/C38Bjd5NeQLZqAh8OXwM/D/8IT9hdenHZuiV8HHwT
/Cr8GzxFD+llZKsO8CnwnfDb8FA9paeTrSrDu8Fnw/fDH8LD95KeVbauAe8L
Xwj/E/4cHq239NyyVX34YPhy+Cn4/+Bx+kgvJFs3hY+Er4VfgH+CJ+4rPUC2
ag0fD98Cvwb/AU/ZT3o52bojfBp8F/xveOj+0jPI1lXgPeBz4Afhj+ARB0jP
JlvVgveD/wE/Cn8Jjz5Qel7ZugFcw1fAz8DfweMNkl5YtmoGHwVfD78I/xee
ZLD0krJ1G/hE+Fb4DfhPeOoh0svLVp3h0+F74HfhYbX0jLJVNXhP+Dz4IfgT
eKSh0nPI1rXhA+CL4cfhr+Axh0nPJ1s1gg+Fr4Kfhf8Djz9celHZujl8DHwD
/LLXa2K9jxzD+heva439Eq689WQj/PHaeinZqh18Enw7/Cb8P3iakdIrytZd
4DPhe+H34eFGSc8sW1eH94bP9/pNxVCLJlk/7PXWHkWTPLf+1Os+C/rNK/Hc
eJTRwV3k2I4E803rnF6rt+9nfbRe1+vj8bLFrfrC+ECvxxVvP32VabXU62pt
V8YM9dL4Ca/jTH04uYFp9cbrm3uSRdtuPdaY4F70sMGEqK+MF/C6ReTZkdqY
1o29zpDn8pgg68O9ft0oevhEr42v9nrLyEoje5hW573uvXF0mHPWP3hd+Pqf
Q9O9MZ5wrLs+pnUx15utt3R93/pY1zHeGt/kOsC0vuK6q/VvrhdbTz7O7wvW
y7hW/zPe3mvv96uVTKspXpvfn1vf4bX5fa312157v3/N9s64Gp/T/j61v2mV
zmvz+2frlbz2fj8b873xbl57v29tbFrP8tr8Pt36fq/N72+tPxjv9vuP8fAT
/PWON62zTPDXe916jQn+elN9MN5ngr/ezqbVwgn+evdaPzLBX2+4j8afT/DX
+7tpHXWiv96F1nNP9Nf73Hq9if5683wyPnii+/6a1stcn7R+ynWMz8bfuq5n
WsWZ5L5/1gu6fm69qesc/xof4bqvabXWdZD1v1xH+GL8k+vqpnWiyX7PsR7g
+r71Vq4zfDU+3nVX03qz693Wr7lW34x/99r7e6xCplXKKTn9zxOyXnaKe/xb
7zjFH//S+lQ3Pu1347vc+EDT+o4bP8966Kn++KvW00911/uH8SpT/fEVTevu
bvxI63Pc+CDrB9z4b9YfufF5fxqPMM1dD9Mq2zR//FrrNaf5459Y7+fGp/hl
fJEb38C0OurGz7T+wo2/YD36dH98pP+M55nujy9jWjWY7h5/1oe4vm99hesA
dcTz064Xm1bvXKtQxuPOcONNq8KutfVA10HWR7lWoY2vCznetLoYcrz1zyHH
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
9ca7mXs9sN7L60jrfiT9x/p8r1v2OXc8dCzjQV4HlVrUJbZp9dTrxDG6JEhj
PXKe4O59p/jhPNZzen1xdYz2ZazX8TpLrwex6lgf6PXoElv3tba+xOuHUYe3
7GP9hNdFb9WMOsb6a6/nrEyzc471WHmD+0P3T03WWM/vddXix8Pvtd7Y6zWR
Z28+bX2Y12FvtKl/2/pqrwOXFwj92vo5r/d2jbjuh/UPef3rr2IbT5BPtCom
W7fw+sXUtO8HWh8b4nGMb3StTasrIR7X+FfXAaZV8vxuvPXSroOst3et4hmf
7LV3//MKptUOr83nmVu/5bV3//Tb1lWBXP791eMbT+u1ud+7aVXJa3P/eetd
C7j5EhifVcDNZ1rvK+Dms/6ggJvP+m8F3XwJjWcp6OYzrX8v6Oaz3qegmy+R
8QWuE5hWR1znsP7MdXnrUQv5HWg9l+u+1uu5nmJ9kOvV1pe5DrJ+0vUN629d
v7Meu7DfERIbL+g6hWndxHUB6yNcV7e+xnVb63+51tY/ylaJikgvLlu1go+D
b4ZfhX+Hpygqvaxs3QE+Fb4Tfgceqpj09LJ1ZXh3+Gz4AfhDeITi0rPKVjXh
feGL4H/CX8CjBUjPI1vXhw+BL4efhv8PHreE9EKyVSB8JHwd/AL8MzxxSekl
ZOvW8AnwLfDr8B/wVKWkl5OtOsGnwXfD/4aHKS09g2xVFd4DPhd+EP4YHrGM
9OyydS14f/gf8GPwl/AYZaXnla0awjV8JfwM/D08XjnpRWTrZvDR8PXwS/B/
4UnLSy8pW7WFT4Rvg9+A/4KnriC9gmzdGT4Dvgd+Dx62ovRMsnU1eC/4PHgQ
/Ak8ciXpOWSrOvAB8CXw4/DX8JiVpeeXrRvBh8FXwc/B/4EnqCK9qGzVAj4G
vhF+Gf4Vnqyq9NKydTv4ZPh2+C34f/C01aRXlK26wmfC98Hvw3+rLj2zbPU7
vDd8Afyw1/u2dzn+zvozr+9lW1CsZRLjUX4P7jBrTu68blrl8jpD6k/ZKiU1
XtfrygtTrjpoWg3yumv8qslzJTO+1OsZU/vPXmFanfR6d+RV0RMmN/7G6zsj
L4+eYFrFruGvT6UwXsBrc79d06qJ1979dsdaH+61d7/d89bXeG3uH5zS+Hmv
zf12TauPXnv3211oPWHNXPZ+uw+tF/fa3D84lfGWXpv77ZpW47z27re7xfom
r7377X62ftVrc//g1Ma/1XTX27RKUcvfz1HrZWr5+4mYxniHWv5+qprWU2r5
+5lufWctfz83rN+u5e8naVrjoWr7+2luWqer7e9nlfXKtf39vLberba/n5zp
jM+u7e+nt2m9v7a/n33WH9Z235/0xsPXCe6Ckx4VmGRaZfXafJ5dBuM1XFc2
rfq6nmB9oeuz1v8MOT6j8echx5tW0eoGd8oRMUqOsZ7b6+MJWkzYYr2+1x02
7Lh2y/pgr2OUjJAybCbjy73eea1Bh6ym9SmvGwYfUMf6/+q675f1OPWCe8ST
RWVvWC/kdcQzRSfmyGy8qdcTN9+5PMa0Gul1rFkDEj2wvtbr4GxWMIvxC/Xc
+k3rT/Xc+q0nru/Wbz2gvlt/VuOt67v1m9bj67v1W99S363f+jXXQdZ/uFbZ
jKds4HeAaVXOtbbe0XWQ9WmuVXbju0LGm1Z/h3gO46Eb+p3CtMrgOsB6FdeB
1nu41tbneO19/uFN6we9Np+PmNP4o4bu8WRaRWyUy/98RevZGrn5chmv1cg/
31zTul8j/3wfrP/RyD3echs/6s630rR66c6n8hiP3tid37TK61pbb+A6yLp2
rfIaXxFyvGl1JuR46+9Cjrcer4k7Pp/xwq4DTKtmrrX1Ua6DrK8POT6/8Ysh
x5tW/4Ycbz1JU3e89ZKuVQHjbZq65yvTamJT9/xqfWtT93xj/UZT9/xY0PjP
pu753LRKHeie36yXD3TPx4WMdw50z0+m9fRA93xqfU+ge/4vbPxuoHs+NK3C
NnPP39YzNnP7KWK8WjO3H9O6ZzO3H+vzmrn9WD/UzO2nqPEnzdx+TOtIzd1+
rOdo7vZTzHjt5m4/ptWA5m4/1hc3d/spbvx4c7cf0/pVc7cf6zFbuP0EGM8n
WzWCD4Wvgp+F/wOP31J6Udm6OXwMfAP8MvwLPFkr6aVkq3bwSfDt8Jvw/+Bp
WkuvKFt3gc+E74Xfh4drIz2zbF0d3hs+H34Y/hQepa30nLJVXfhA+FL4Cfgb
eKx20gvI1o3hw+Gr4efhH+AJ20svJlu1hI+Fb4JfgX/z+nrBi/fjWk/eIbgX
xNqVppT1Ml43e7WgbVfr7b1Od3TY+oXWp3j9ekHbd6et7/B6c6+qeb5Yv+11
76p5+qYtYVx19P59p0+0v4Zpla6je362Xkm26gafBd8PfwAP30l6FtmqBrwP
fCH8CPw5PGpn6bll63rwwfBl8FPwt/A4XaQXlK2awkfA18L/gn+CJ+oqPUC2
bgUfD98Mvwb/Dk/ZTXpZ2aojfCp8F/wOPHR36ellqyrw7vA58APwR/AIPaRn
k61rwvvBF8GPwl/Ao/eUnke2agAfAl8BPw1/B4/bS3ph2ToQPgq+Dn4R/hme
pLf0ErJVG/gE+Fb4dfhPeKo+0svL1p3g0+G74XfhYfpKzyhbV4X3hM+FH4I/
hkfqJz27bFUb3h++GH4M/goeo7/0fLJ1Q/hQ+Er4Wfh7r9e1HB+zSEnj8QcE
97TnNZb8MK2LeN2/Y6KcB0oZb+5183cPggaVNj7a6wo911QvVsb4Bq9zful6
/5dpfcnrBAMLdD1U1viXAW7+csaTDnQ/X8sbL+Vam9ZtQ7yC8UkhblpvC/GK
xm+GuGn9K8QrGU8zyLlpXcFr7+WLR9a7eJ3kRLck5Sobn+G1ud+IabXXa+/1
jmhVjN/zOnj4iW6mVbjBufz7o1jP5PXj4NMXqGq8utfdg4cvMK17DXbrq2Z8
/mB/PS1M66DB/npOWH862F9PpurGIw/x1zPJtMo5xF/Pe+t1hvjrqf278YFD
/PXsNq2XDPHXk6SG8RND3PUxrV+7VjWNx9LOTev8roOsN3atahkf5jrAtFod
crz1cyHHW/8Qcnxt4wmGilbFZOsW8LHwjfAr8K/w5MOkl5at2sMnw3fAb8HV
cOlpZatK8K7wWfB98Afw30ZIzyJb/w7vA18APwJ/Bo86Unou2aoefBB8Gfwk
/C089ijpBWXrJvAR8DXwv+Af4YlGSy8uW7WCj4Nvhl+Ff4enGCO9rGzdAT4V
vhN+Bx5qrPT0snVleHf4bPgB+EN4hHHSs8pWNeF94Yvgf8JfwKONl55Htq4P
HwJfDj8N/x887gTphWSrQPhI+Dr4BfhneOKJ0kvI1q3hE+Bb4NfhP+CpJkkv
J1t1gk+D74b/DQ8zWXoG2aoqvAd8Lvwg/DE84hTp2WXrWvD+8D/gx+Av4TGm
Ss8rWzWEa/hK+Bn4e3i8adKLyNbN4KPh6+GX4P/Ck06XXlK2agufCN8GvwH/
BU89Q3oF2bozfAZ8D/wePOxM6Zlk62rwXvB58CD4E3jkWdJzyFZ14APgS+DH
4a/hMWdLzy9bN4IPg6+Cn4P/A08wR3pR2aoFfAx8I/wy/Cs82VzppWXrdvDJ
8O3wW/D/4GnnSa8oW3WFz4Tvg9+H/zZfembZ6nd4b/gC+GH4M3iUBdJzydZ1
4YPgS+En4W/gsRdKLyBbNYEPh6+Bn4d/hCdcJL24bN0SPg6+CX4V/g2e4g/p
ZWSrDvAp8J3w2/BQi6Wnk60qw7vBZ8P3wx/Cwy+RnlW2rgHvC18I/xP+HB5t
qfTcslV9+GD4cvgp+P/gcZZJLyRbN4WPhK+FX4B/gideLj1AtmoNHw/fAr8G
/wFPuUJ6Odm6I3wafBf8b3joldIzyNZV4D3gc+AH4Y/gEVdJzyZb1YL3g/8B
Pwp/CY++Wnpe2boBXMNXwM/A38HjrZFeWLZqBh8FXw+/CP8XnmSt9JKydRuv
x00aFWeB9YleD04T1KVIHeNbve629+vpO6bVDa9bVs+dblBd4z+9rve049Ck
9YynXhfclQauvHPAtC7vdfFY9/M3qW+8s9e5Viec/su0nu51umI13y5qYHyP
1wmvTKhQvKHxu15HaX98+T3TKux6f/26kfGMXpu/LzGtqnlt/r6ksfGeXpu/
LzGt5nlt/r7E+iF3voAmxp+48801rSNt8M/3wXqODf75Kjc1XnuDf76VptWA
De76Bhpf7LqraXXc9X3rr1xXb2Y85ka/g0zrfK5zNDfeyPVi03qo6xgtjK9y
rU3rs16b1wut/+O1eX3RevxNufzXI1saL+q1ef3StG7utXm90/oYr83ro9Y3
eG1eT21l/LLX5vVX0/rLJrce68k2u/VYL7XZrcd6u81uPa2NT9rs1mNabd/s
1mP95ma3Huv/bXbraWM8zRa3HtOq4ha3Hutdtrj1WJ+5xa3H+t4tbj1tjd/f
4tZjWofb6tZjPfNWtx7r1be69bQz3nurW49pPX+rW4/1w1vdeqw/3erWYz3K
Nree9sZzbnPrMa3qbnPrsT5wm1uP9aXb3Ho6GD+xza3HtHqzza3Heqztufz7
t3c0XsBrc39307qx1+b+752MD/fa3B++s/HVXpv7x3cxft5rc3950/qD1+b+
812NJ9yRy78/fTfjxbw29683rVp6be5v39342B3u328P45t2+Ov9aFpf2eGv
d3VP4992+Ott3Mt48p3+emP2Nl5mp7/eY6Z1+53+evv3MT5lp7/ebH2N79jp
r/ehaXV7p7/e2f2Mq13+eiv1N55ul3t+GGC8kmttWnUL8YHGZ4W4abU/xAcZ
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
+AH4Q3iEFNKzylY14X3hi+B/wl/Ao6WUnke2rg8fAl8OPw3/HzxuKumFZKtA
+Ej4OvgF+Gd44tTSS8jWreET4Fvg1+E/4KnSSC8nW3WCT4Pvhv8ND5NWegbZ
qiq8B3wu/CD8MTxiOunZZeta8P7wP+DH4C/hMdJLzytbNYRr+Er4Gfh7eLwM
0ovI1s3go+Hr4Zfg/8KTZpReUrZqC58I3wa/Af8FT51JegXZurPXCSoceDXP
+gyvM+QuGD3COON7vM6fdEeuXqbVPa/Lhc9Z56H1sJmDu8779f2qjTeeyevW
tzMs3G9aV/O617HlQRknGO/l9YhNKR7PMq3neT1j7oLwYScaD/J62fAEmbuZ
1k+83tZpRtW71iNnCe4jdWN0rzTJeA6vL5WYMHO3aVXH6weZI+xJO9n4AK/f
xR1xZ5pptSSLv381xfhx10Gm1WvXeqrxmFlz++9XMK3ye23e/zDNeKOsbrxp
NSxkvPVVIeOnGz8XMt60/sdrcz8i6wmy5fbfHzDDeFGvzf2LTKsWXpv3F1gf
47W539FM4xu9Nu9PMK0vZ3P7nWX8azZ/voamdbLs/nw7rZfO7s8Xa7bxdtn9
+TqZVpOz+/Odsr49uz9fmjnGb2V3+zOt/3MdZD1tDreeucYruq5nWnV1vdn6
TNcR5hnf5zrQtL7verf133L6HWO+8cyu25pWv7sOst7bdYIFxhe47mpaH3Z9
0voz1ykWGo+Sy+++plUu1xes13WdYZHxQa61ab3UdZD1k67VH8bfuK5nWsXO
7a6P9QKuIyw23sR1oGk93PVu62tcx1hi/LzrtqbVR9dB1hPmcddnqfHirrua
1i1dn7Q+znWKZcY3ue5rWl11fcH6N9cZlhtPkdddH9O6TF73eLPeIa97fK4w
PiWvezybVjvzuse/9dt53b8X66HyuX9fK42ny+fmM60q53PzWe+Wz823yvjs
fG4+03p/Pjef9Yf53HzWw+d38602njW/m8+0riFb9YUvhP8Jfw6PVkB6btmq
PnwwfDn8FPx/8DgFpReSrZvCR8LXwi/AP8ETF5IeIFu1ho+Hb4Ffg/+Apyws
vZxs3RE+Db4L/jc8dBHpGWTrKvAe8Dnwg/BH8IhFpWeTrWrB+8H/gB+Fv4RH
LyY9r2zdAK7hK+Bn4O/g8YpLLyxbNYOPgq+HX4T/C08SIL2kbN0GPhG+FX4D
/hOeuoT08rJVZ/h0+B74XXjYktIzylbV4D3h8+CH4E/gkUpJzyFb14YPgC+G
H4e/gscsLT2fbNUIPhS+Cn4W/g88fhnpRWXr5vAx8A3wy/Av8GRlpZeSrdrB
J8G3w2/C/4OnKSe9omzdBT4Tvhd+Hx6uvPTMsnV1eG/4fPhh+FN4lArSc8pW
deED4UvhJ+Bv4LEqSi8gWzeGD4evhp+Hf4AnrCS9mGzVEj4Wvgl+Bf4Nnryy
9DKydXv4FPgO+G24qiI9nWxdCd4NPgu+H/4AHr6q9CyyVQ14H/hC+BH4c3jU
atJzy9b14IPhy+Cn4G/hcapLLyhbNYWPgK+F/wX/BE/0u/QA2boVfDx8M/wa
/Ds8ZQ3pZWWrjvCp8F3wO/DQNaWnl62qwLvD58APwB/BI9SSnk22rgnvB18E
Pwp/AY9eW3oe2aoBfAh8Bfw0/B08bh3phWXrQPgo+Dr4RfhneJK60kvIVm3g
E+Bb4dfhP+Gp6kkvL1t3gk+H74bfhYepLz2jbF0V3hM+F34I/hgeqYH07LJV
bXh/+GL4MfgreIyG0vPJ1g3hQ+Er4Wfh7+HxG0kvIls1h4+Gb/C6fO4KeRqt
MX7J695P86V/st74F6+Xz02TqPNm40kbB/elyrGi/rvNeKnG7ny7jLf12nt9
8bRpNclr83kpu41vc+MDTaubbvxa67/c+E/W0zTxxwfsMV6hiT9+nGnVpYk/
/qr1GW58ir3G97rx7U3re278Duvhmvrj1T7jmVznMK2quw603sv1FOvzXQdZ
D3L9zvpT1yn2G48c6Hd10yqna229TqC7XgeMDwx018e0XuLGBxw0fsKNv2pa
v3bj2x8yHquZ21+Q8fxem88zM60ae20+/8z6MK/N56X9n6u7jI4i6eIwXriz
uEtwZ/GFFwvu7h7c3b1wd/fg7u7BHYI7BJfF3Rbe1L1955z7z7fn/Kqrqns6
EwaGCfsq1/T5aofIz8l8ltp8lPnOsidq5s2X+DB5kWbefK2obfNm3nxb2cc0
k/0dId+g21wB/w6esrn2krpNO/BJ4NvBb4GbFtrT6TYVwLuAzwTfC/4APGJL
7Vl122rgvcHngx8GfwYeo5X2XLpNXfCB4EvBT4K/AY/bOrSvzN8TZwl7Adc7
Er04fugoeWPXs6Yn7P/gGPlw131jlf47zAny1a4bjO/xyO8k+QXXhSIvneV/
ivyT6xTDL1YIOE2epI3cr2fIi0pvojYtpUPYx0rHOku+Sdqf2l6V7sL+UzqQ
3a+t18HspaXNOfL2us0U8B3gd8DDtNOeQbetCN4NfBb4fvCH4JHba8+m29QA
7wO+EPwI+AvwmB2059Ft64EPBl8Gfhr8LXj8jtr/p9sEgI8AXwseDP4FPGkn
7cV021bg48E3g18H/wWeurP2MrpNR/Cp4LvA74KH66I9o25TGbw7+BzwA+CP
waN01f63blsTvB/4IvBj4C/BY3XTnle3aQBuwVeAnwF/D56gu/ZCum1T8FHg
68AvgX8FT95De3Hdpg34BPCt4DfAf4On6am9nG7bCXw6+G7w++Dhe2nPrNtW
Ae8JPhc8CPwJeLTe2nPoNrXB+4MvBj8O/go8dp/QTlQxz9T57P+4bvjHPCx0
nryh68At53LepTZDXT9qOXfIwAvkK11nSNz6YvJg8nOu253NneoAtf3gesNg
07XxRfJEfUP7Q65zQb+pbWHXeZ/OibXoEnlz133ntAooepl8tOt9FXNvuk9t
NvSVn79XyC+7ps93pDbfXdPnO14lT9HPGx9EbUr288Znvkbetp83fga1mSTj
zXXybdL+1OaWtGX/45ufPV1/Of4GeXlpf2rTRdqyz5AOYt/rO/4meYjveGoT
cYAcz55lgHc+p9mrDfDOJ/4t8l4yPoDazJfxa9gPyfjP7M9kvP9t8ugDvfFj
qU2ugd74q+x1Bnrj/e6QD5Tx7ajtEhm/nf2kjDd3yV9L+1ObuIPk/Njzu6bX
A+yNXdPrgXvkw1zT6wFqs9o1vR5gPy/zmfvkn2S+itQ28WBvvjnsRQd78z1l
bzHYmy93CPnYwbI/artxsFzvB+RXB8v1pbY/ZLz/Q3I/K9eP2paycr0ekbe3
st/H5JOl/anNDmnLfls6iD3MEDn+CXl6aX9qU1HasneVDmKf5Tv+Kfk+3/HU
5qHvePZIQ+V49mzS5hl5dWl/atNH2rIv8B3PfsR3/HPy577jqU3MYXI8e27p
IPZ60uYF+SDX7v0N1anNMtf0fgb2U67d+xe+sL91Te83ekkeb3hufj/EPGrz
P9f0/gf2JsNlf/+SjxjurTeV2q4Z7q33mD14uLdevlfkn4d7642hNklHeOvd
Zvcf4a2X7TV5qxFy/tR2nHQQ+2Zp84b82gh5PqQ2v0bI/cmeaqSMf0teZqSM
p7YdRsp49qm+8e/Id0r7U5u70pY97CjZH3tGafOevJK0P7XpLm3ZZ/uOZz/g
O/4D+SPf8dQmymg5nj27dAh7TWn/j+R9pQOpzSJp84n86Gjv+SA9tXk5Wp4/
2P8a4z0/dGfPO0aeT9jrj5H9s9sx8vzCvnyMN1/0z+RnZL7c1PadzFePPcFY
OT/2grpNU/CR4OvAL4J/BU82Tntx3bY1+ATwLeA3wP8DTzNee1ndppPr/SM/
JBnLPs31hySn20f+Qr7bdcaNi/eNpLb3XDcu0TdGhK/k4SeE9vTrVRsPo7aZ
XJ9un3FjmG/kVSbIetS2h24zF/wg+BPwqBO159Bta4H3Bw8EPw7+L3jsSdrz
6TYNwYeAr3T9Pnf5X9G/k591/S1xukHHqc0H3/gf5Akny/cXtSks7f+TvJl0
ILUZLW1+ka+XDqA2l6WD2L9J+/1HnmKKrE9tS0iHsLeV9v9NPlE6kNpskzZ/
yG9KB1CbP9JB7GmnyvrmiPPy0pbadtZtZoDvAQ8BjzBNexbdtip4L/B54IfA
n4JHn649p25TB3yA6/QtAmo/ZV8ibsKSn5BuQ21eSwezx5nhdf5w5PmlA6lt
I+nI4cmHSXehtqukb7Cfl/aPQP5RehW1STzT61gRyYtI96E2LaRD2MdIl41E
vlF6E7W9Ip0oMvkPaUttU85SbUrptu3AJ8/ynt+3RiHfLm6ikt+eJT9fqK2Z
LT9P2NPPlp8f7BVmy8+LaORdZ8t61HambrMP/AF4pDnas+o21cF7gy8APwz+
HDzGXO25ddu64IPAl4KfAn8DHm+e9gK6TRPw4eBrwC+AfwZPMl+7v27bEnwc
+Cbwa+A/wVMt0F5at+kAPgV8J/gd8LALtWfQbSqBdwOfDb4f/BF45EXas+u2
NcD7gi8EPwr+AvyvQO15dJv64IPBl4OfBn8HHn+x9oK6bQD4SPC14BfBv4An
W6K9mG7TGnw8+Bbw6+D/gadeqr2sbtsRfBr4LvB74OGWhXa7tm3bRolOnsn1
TPdFbSu7PnrkyJE0Mch7uH7/7t27TdR2jusUoV9FYpIfdF0h9OsMtX3suk/o
V92/yKMuD+0Vy5cvf0Jt/3Z9+dKlS91ikddaLs/nscn7SftRm0Bpf/Zj0gHs
/0pb9lgrcnuvB9nzuabXj3HIG7im15vUZohren3KvsI1vZ6NS37WNb3+pbbv
V8h+45EnXOmt14DaFlrprbeDvdlKb7048clHrfTW60ht1q/01jvFfmmlt17a
BOTfVsr5Udvkq1SbErptG/CJ4FvBb4L/Bk+7Wns53aYz+HTwPeD3wSOs0Z5Z
t6kK3hN8HngQ+FPwaGu159Rta4MPAF8MfgL8FXicddr/0W0agQ8FXwV+Dvwj
eKL12ovots3Bx4BvAL8C/h085QbtJXWbduCTwLeD3wI3G7Wn020qgHcBnwm+
F/wBeMRN2rPqttXAe4PPBz8M/gw8xmbtuXSbuuADwZeCnwR/Ax53i/YCum1j
8OHgq8EvgH8CT7JVe1HdpiX4WPBN4FfBf4L7bdNeWrdtDz4FfAf4HfAw27Vn
0G0rgncDnwW+H/wheOQd2rPpNjXA+4AvBD8C/gI85k7teXTbeuCDXd86vXdd
8oTky1x3fNLo2nlqc9o3PhH5W90m/i7t/9NtAsBHgK91PfDIoXUf2INd15n5
IEyPxORfXOdsG6bOZ2qbdHdoRyuUal2vJOTFXD+OWSzMN2rbyvWBBwG1+yYl
H+969ja79ge13ey626hAMyAZ+XXXFesH1fqP2v5ynT5byJpByclT7/H2a1KQ
l5G21Kajz1OST/U5tdnlcz/yu9L+1CbcXhnPnlE6iL2ytElF3l06MrWZIx2L
/YB0IvbH0n7sUfZ5nZH9b+kc7DWl87P3k/ZnXyRdlv2YdFX2l9J12WPt9zqA
Pa90G/YG0l3YrXQf9hXSlv2MbvMePMEB7YV026bgo8DXgV8C/wqe/KD24rpN
G/AJ4FvBb4D/Bk8TpL2cbtsJfDr4bvD74OEPac+s21YB7wk+FzwI/Al4tMPa
c+g2tcH7gy8GPw7+Cjz2Ee3/6LYNwYeCrwQ/B/4BPNFR7YV1m+bgo8E3gF8G
/w6e4pj2krptW/BJ4NvAb4H/AU93XHt53aYL+AzwveAh4BFPaM+i21QD7wU+
H/wQ+DPw6Ce159Jt64APBF8CfhL8NXjcU9rz6zaNwYeBrwY/D/4JPPFp7UV1
2xbgY8E3gl8F/wHud0Z7Kd2mPfhk8B3gt8HDnNWeXrepCN4VfBb4PvCH4JHO
ac+m21YH7wO+APwI+HPwmOe159Zt6oEPAl8Gfgr8LXi8C9r/p9s2AR8BvgY8
GPwzeNJg7f66TSvwceCbwa+B/wJPdVF7Gd22A/hU8J3gd8HDXtKeUbetBN4d
fDb4AfBH4FEua8+u29QE7+t6+unys+KkJl/keuGYbllXUdujrleVnXuocBry
l643Rzpc+zK1/etKaO89/uLfNmnJ87o+NiL2kN/Utr7rCyULJJiejty6vhmu
6dpM6cmXu354eLT/QWpzxvWrIZuu1sxA/s71F/8b7V5SmwRXZf8ZyQtKB1Ob
ptJ+mchHSnehNuukg9gvSsfKTP5VOoDaJrvm9Sb24tImC3lr11VeHa2cldpM
cL3wxpgFddm3uA7lV8PZb7guuDluwc3s/7keu+DGmLvsaa6HdujhN6JkJS/r
OmOvZhnyUZtOrkOzVzP2aa6PVX51dCL7btfxQhfYy37PtRv+jD38Dff4hS4f
Nxt5phve+fhTmyo3vPPpwN7jhnc+s9nn3vDO5yj7wRve+bxnf3LDO5/k2cmj
3vTOpxy1yXHTO59e7LVueuezhL3/Te98zrMH3vTO5yf78Zve+WT4m/zfm975
1KA2sW/J/cGeT7dpCD4EfCX4WfAP4Alvay+s2zYDHw2+Hvwy+DfwFHe0l9Bt
2oJPBN8GfhP8D3jau9rL67adwWeA7wEP8XVu8gj3QjvZia7JRlGbLK4LTHyU
fyJ7Vdf0/lT2Xq67hR4wn32eazd8Kfsh1/R+LfanrkOnP7GZPfr90H6cf+Kj
Xew578vzAXud+95+TrAPuO/t5zz7kvvefq6yn7jv7ecO++v73n4esccJ8fbz
kj1/iLef9+yNQrz9fGMfFiLPL3nIV4V4+4lEbc6HePuJyf4xxNtPfPbED7z9
JGMv8sDbTxr2Fg+8/WRmH/PA209O9o0PvP3kZ7/yQJ4f2H888PZThj3lQ28/
ldlLPfT2U4u93UNvPw3ZJz/09tOcfftDbz/t2G8/9PbTld088vbThz39I7l/
2CvoNl3BZ4LvA38AHumx9qy6TXXw3uALwA+DPweP8UR7bt22Lvgg8KXgp8Df
gMd7qr2AbtMEfDj4GvAL4J/BkzyTn5/s/tIh7C2lY+UlHyftT203SXdhvyYd
yP5TOpg91XP5/slHXlo6B7XpIB3APkV6MvtO6SD2O9Lv2MO+8NrvH/IM0lWp
TSVpy95N2uQnn+1zarvf5wXIH/mc2kZ+qdpk121rgPcFXwh+FPwF+F//as+j
29QHHwy+HPw0+Lt/5fu/MHn8V/J8TW0KvpLnR/aAV/J8VIR85CuZj9qu1W0u
gn8BT/ZaezHdpjX4ePAt4NfB/wNP/UZ7Wd22I/g08F3g98DDvc3N75dax57J
tXu/1E32yq7d+6UiFiXv4ZreL0Vt57yV7wf2gzLfePbHMt9u9qjvvPmesv/9
zpsvrj95rXfy/Utt+73z5uvAHvjOm28O+zGZ7zj7vzLfR/ZY7+X7rRh5vvfe
fBWpbYP33nx92Ye89+Zbwb7ivTffZfazMp8pTv5et0n4QXsh3aYZ+Cjw9eCX
wL+BJ/+ovYRu2wZ8IvhW8Jvgv8HTftJeTrfpDD4dfA/4ffAIn7Vndv30fZi6
Mdmruq5+8eDK9Ow9XR/YNPBrEfZ5rrNMLlimDnuQ61mdv8/szP7UdbgqO5+O
Yo/2JbQ7Z++ZL5A9p+s7MXKP3MVe23XZ1++uBrMPcL3t7IZ0L9gXu/Zb16Fn
mBLkJ1yPH5f5WGJq+8r1t3bP4+Vij/M1tFuWX9GiPPs/ri9marGtGXsj14Wj
pA7fn32o69XP79eYxr7KdYKTC5auZT/neujKBh+PsH90/WZk4hJ32BN9C+36
ra5P/cRexPXxUjMeRi9J3tx1rnQ1cqWjNmNcLwwfe2hh9g2uoz0+f7EW+xXX
vY+MT9WJ/bvrR0vKdx3JnvJ7aFcZGvnQQvaSrvc1PR5rJ3s71xmLDQ+4wD7J
9XS/4puesW//Lo9/KfJbukP/AKk9nW5TAbwL+EzwveAPwCP+1J5Vt60G3ht8
Pvhh8GfgMX5pz6Xb1AUfCL4U/CT4G/C4/2kvoNs2Bh8Ovhr8Avgn8CS/tRfV
bVqCjwXfBH4V/Ce435/Qftglf7KY7KVdP//4fcAB9vau3/Tae7dTafIprj99
H1AkZRnyHa5/DCiy6AK1ufNHfn6WJQ9j8nj/f5DaZHBNr6fKkVd07cYHUJtu
Mn4N+ywZ/5l9v4z3L0/+UMaPpTaRw3jjr7JnC+ON96tAXiOMN74dte0j47ez
L5TxpiL5EfFa1OaFHL+GPWZYGV+JPE9YGU9t64WV8eyDfeMrky+TrkptTksH
sr+VfsceP5ycfxXy/0lPpjYB0iHsI6RzVCVfK22pbbBr9/669exfXNP7AdmT
hs/D77eLUo28mGt6fyC1beXavf+uBft41/R+QfbN4b31gtivh/fWe83+K7y3
XtLq5KkjeOuVo7ZlInjr9WLvGMFbbxn71AjeepfYd0WQ61uD/K7rbO6L2oSL
GNr13Rd7RtejR4V+sVd2vX1b6Bd7d9cPH4R+sc9x/Zf7qkl+wHUh90VtHrt2
7xdtyx4lUh7v/aLsf7t27xc9wl7TtXu/6Dv2fq7d+0VT1CJf5Nq9X7QCtTnm
2r1ftA/7S9fu/aLL2WNFzsPvF73EnjeyXI/a5A0iy/WgtjayXA/2FZHlerCf
iSzXg/19ZLke7AmiyPWoQ14oilwPats0ilwP9lFR5Hqwr4si14P9UhS5Huxf
o8j1qEuePKpcD2pbPKpcD/Y2UeV6sE+IKteDfWtUuR71yG+4pj/vUpvfrunP
z+xpouXx/jzOXs41/fm+PnmnaPL9RG2mR/PmO8u+O5o3X+IG5PdlvlbUNnx0
b76t7Jmjy/4akleR9qc2PaUt+1zpIPYg3/GNyJ/4jqc20WLI8ew5pAPZa0sH
sfeXDmFfLG0akx+XrkptXvnmY48dU56/2P+R9m9C3lB6MrUZKh3CvlI6RwD5
OWlLbT9IB7Mn+kue75uSF5buQm2aSwexj5aO1Yx8g3QAtb0svYn9u7RpTp4i
lpw/tSkpHcjeVvod+yRp/xbk26QnU5tb0iHsf6RztCRPF1vOn9qWlw5m7yLt
14p8hnQXarNXOog9RDpWa/KIceT8qW0W6U3s1aRNG/Je0lWpzXzpQPZD0u/Y
n0n7tyWPHlfOn9rkkg5hryOdox35QGlLbZdIB7OflPZrT/5augu1iRtPzp89
v3SsDuSNpQOo7TDpTeyrpU1H8vPSVanNJ+lA9sTx5fzZi0r7dyJvIT2Z2oyV
DmHfKJ2jM/lVaUttf+g2fgmku5CXck1/HqI27V3T3093JZ/sG09tdvjGs9/2
je9GHiahjKe26aWD2StK+3Un7yrdhdrMkg5i3ycdqwf5Q+kAahspkVx/9mzS
pid5demq1KaPdCD7Aul37Eek/XuRP5eeTG1iJpbrz55bOkdv8nrSltoOkg5m
Xybt14f8lHQXavNWOog9XhI5/77k/5MOoLZNpDexj5A2/cjXJPEer1rUJjiJ
93itYf/sG9+fPGlSGU9t/ZPKePZWSWX8APJx4v+jNpvl+J7s12T8JvZfMv4l
e6pk3vh0A8nLJJPzo7Ydknnj57JPlfFX2XfK+FiDyO/K+PLUNmxyb/wI9ozJ
5fqyV0rujf/B3l3G5x1MPlvGd6E2B2T8GvZHMv4Je5QU8vha8uwpvPH1qU3N
FN74Gex9ZXww+yIZH3UI+VEZX4ravJTxlv2vlPJ4DCXPK22pbX3pIHbrGz+M
fLm0P7U54zue/Z3vePYEfnL8cPKC0v7Upqm0ZR8pvYl9nXQI+0XpWCPIv/rm
o7bJUsn1Zy8uHcjeWjqYfYK0GUm+RToHtbkhHcD+n/Rk9jSp5XzZy0q/Y+8k
7TeKfJp0VWqzW9qy30st9yt7+DTyfDmaPFMaGU9tqqSR8ew9fOPHkM/1jae2
B8XXsD/xHc8eNa1cj7HkOdLKfNS2Vlr5fmfvL+Mte6CMX8N+XMZfZf/XN/84
8tjpZH5qmy+dzM/eMJ3Mzz5Exq9hXynjr7KflfFmPPkH3/zUNmF6mZ+9cHqZ
n72Z+FX20enl+Ank633jqc1l33j2b77xE8lTZJDx1LaEdBB7W2kziXyibzy1
2ebzyeQ3pf2pzR/fePa0GWV+9vLSZgp5Z2l/ajND2rLv8R3PHuI7fip5hExy
PLXJIm3Zq0oHsfeSNtPI5/mOpzaHfMezP/Udzx49sxw/nTyntD+1qSNt2QdI
B7Ev8R0/g/yE73hq89p3PHucLHI8e35pM5O8kbQ/tRkmbdlX+Y5nP+87fhb5
R9/x1CZxVjmevYh0EHsLaTObfIy0P7XZ6Due/YrvePYfvuPnkKfMJsdTm1LS
lr1dNrmf2Sdnk/t5Lvl233hqc9s3nt1kl/HzyNNnl/HUtkJ2Gc/e1Td+PvlM
33hqs883nv2Bb/wC8kh/y3hqm9U1/XsSe3XX9PqZvbdr+vcq9gWu6fX0QvLD
Mp8/tXku87Vij5HDm288e+4c3nxb2evm8Oa7yT4oh1z/ReRLc3j7L09tTuWQ
n+/sb2R8CHu8nHK+geQFcnrje1KbJjnl8WYfLuOjLiZfI+NrUdsLMj6Q/bOM
f8meJJc3Pu8Scv9ccn2pbUvpTezjpEPYN0nHWkp+Tdqf2v6U7sKeKrfsh720
dDB7B2mzjHxKbu/xSE9tdub2Ho+K7Hdye49Hd/awebzHYw57hjxyvdgr5fHm
e8reLY83X/Tl5LPzePPlprb7Zb567I9kPsseOa88/uzZ88rxK8hr5JX7h9r0
zSvrsy/MK9drJflRmW8OtX0h831k/yufnP8q8jz55P6nNvXzyfVbTT5YOoDa
LJcOYj8t7beG/J20pbbx/5Hx7AWlzVryAGl/ajNS2rKv9R3PftF3/DryL9J+
1CZZfpmPvZh0AHtracs+XtqsJ9/ic2p7XTqI/T/f+A3kqQvI/Uttykr7sXeU
zsE+TdqffZd0VfZ70gHs4f4n9z97JmnLXll6MnsP6UD2OdKb2A9KB7E/lg5m
j1pQvj/Z/5Z+x15L2mwk76fbBIIfA/8XPFYh7fl02wbgQ8BXgJ8Ffw+esLD2
QrpNM/BR4OvBL4F/A09eRHsJ3bYN+ETwreA3wX+Dpy2qvZxu0xl8Ovge8Pvg
Efy1Z9ZtqoL3BJ8HHgT+FDxaMe05ddva4APAF4OfAH8FHqe49n90m0bgQ8FX
gZ8D/wieqIT2Irptc/Ax4BvAr4B/B09ZUntJ3aYd+CTw7eC3wE0p7el0mwrg
XcBngu8FfwAesbT2rLptNfDe4PPBD4M/A49RRnsu3aYu+EDwpeAnwd+Axy2r
vYBu2xh8OPhq8Avgn8CTlNNeVLdpCT4WfBP4VfCf4H7ltZfWbduDTwHfAX4H
PEwF7Rl024rg3cBnge8HfwgeuaL2bLpNDfA+4AvBj4C/AI9ZSXse3bYe+GDw
ZeCnwd+Cx6+s/X+6TQD4CNe/l30cUYl9reunxV8FzmcPdn0h5PHef9m/uN41
6O61/20iT1oltBcnu/Z+DLUp5nrsnvPRb7K3ct2t7okMGTeTj3fd4MvB4r2p
7WbXJafvanSc/brrbLk294m/hfyX6wTBq6e1oDapq7r9dlyyYSt7GdfPos07
FXYreUfXocMfV6O2U13vLjP+TyD7LtdLngxP8o79ruuxwwbmLbqNPFy10O6e
qlfVidQ2o+uGBzu1v8te2XWpRq1HZt1O3t119p9NFvenNnNcJ5hTd99p9gOu
/+Srdj3xDvLHrp9fKfehDbWNUj20L3YrHmMX+9+u98QqmDHSTvKarpdsyF2i
NrXp53pcxayNl7Mvct3jZdq+n9iPuW40Ovn0ErvIX7ounT7BxqnUJlYNt9+j
MU8/YM/rOmGzSE9y7CZvUMO7Pyy1ta7p/RPsK1zT5yntIT/jmt5/QW3eu6bP
X2JPUDOP9/6NveSFXNPnNVHbpjW99YLYR9X01ouzj3xdTW+9FtTmUk1vvR3s
X2t660XZT568lrdeA2pbvJa33nr2NrXk/j9APkE8G7XZ6jue/UYtb/4x7L9r
yfrsaWp7+3vMXq627P8geafa3nr+1GZ6bTl/9t21vfXmsd+vLdePPXwdb70v
7JnryPUPIq9Sx1uvOrXpWUceP/a5run9VIfIg1zT37dS2ycy3v8webS63vir
1DZHXW98uyPktevK9TtK3l+3WQx+HPwVeOx62v/RbRuCDwVfCX4O/AN4ovra
C+s2zcFHg28Avwz+HTxFA+0lddu24JPAt4HfAv8Dnq6h9vK6TRfwGeB7wUPA
IzbSnkW3qQbeC3w++CHwZ+DRG2vPpdvWAR8IvgT8JPhr8LhNtOfXbRqDDwNf
DX4e/BN44gDtRXXbFuBjwTeCXwX/Ae7XVHsp3aY9+GTwHeC3wcM0055et6kI
3hV8Fvg+8IfgkZprz6bbVgfvA74A/Aj4c/CYLbTn1m3qgQ8CXwZ+CvwteLyW
2v+n2zYBHwG+BjwY/DN40lba/XWbVuDjwDeDXwP/BZ6qtfYyum0H8KngO8Hv
godtoz2jblsJvDv4bPAD4I/Ao7TVnl23qQneF3wR+FHwl+B/tdOeV7etD27B
l4OfAX8HnqC99oK6TVPwkeDrwC+CfwVP1kF7cd22NfgE8C3gN8D/A0/TUXtZ
3aYT+DTw3eD3wMN30p5Jt6kC3gN8LvhB8CfgUTtrz6Hb1gLvDx4Ifhz8X/DY
XbTn020agg8BXwl+FvwDeMKu2gvrts3AR4OvB78M/g08RTftJXSbtuATwbeB
3wT/A562u/byum1n8Bnge8BDwCP00J5Ft60K3gt8Hvgh8Kfg0Xtqz6nb1AEf
AL4E/AT4a/A4vbTn120bgQ8DXwV+HvwjeOLe2ovoNi3Ax4BvBL8C/gM8ZR/t
pXTbduCTwbeD3wY3fbWn120rgHcFnwm+D/wBeKR+2rPqNtXBe4MvAD8M/hw8
Rn/tuXXbuuCDwJeCnwJ/Ax5vgPYCuk0T8OHga8AvgH8GTzJQu79u2xJ8HPgm
8GvgP8FTDdJeWrfpAD4FfCf4HfCwg7Vn0G0qgXcDnw2+H/wReGSrPbtuWwO8
L/hC8KPgL8D/GqI9j25TH3ww+HLw065DFn8a6sf+zvW2Q9UnLmCPPzS0xzzY
NCfJMfKCrhuF+Wv5LGob4DpXqo6b4h0nH+k6YrEze6dQ27WubwVkOhHzBPlF
1xvsqEvjqO0X18MCn9yNfJI82bDQrhNU4sUIalvMddbQDYY9Rd56mLd/S23H
Swexb5E2p8mvS/tTm/98x7OnHp7H+/su9rKu6e+32DsOl/nOkE+T8Zmp7S4Z
X4v9noy37OFGqDaZdNvK4D3A54AfBH8MHnWk9r91m1rg/cADwY+B/wsea5T2
fLptA/Ah4CvAz4K/B084Wnsh3aYZ+Cjw9eCXwL+BJx+jvYRu2wZ8IvhW8Jvg
v8HTjtVeTrfpDD4dfA/4ffAI47Rn1m2qgvcEnwceBP4UPNp47Tl129rgA8AX
g58AfwUeZ4L2f1wfnV41QfSz5I18fo58qHQItVkl7X+e/Jx0ILX5KG0ukCea
qNoU0W2bg48B3wB+Bfw7eMpJ2kvqNu3AJ4FvB78FbiZrT6fbVADvAj4TfC/4
A/CIU7Rn1W2rgfcGnw9+GPwZeIyp2nPpNnXBB4IvBT8J/gY87jTtBXTbxuDD
wVeDXwD/BJ5kuvaiuk1L8LHgm8Cvgv8E95uhvbRu2x58CvgO8DvgYWZqz6Db
VgTvBj4LfD/4Q/DIs7Rn021qgPcBXwh+BPwFeMzZ2vPotvXAB4MvAz8N/hY8
/hzt/9NtAsBHgK8FDwb/Ap50rvZium0r8PHgm8Gvg/8CTz1PexndpiP4VPBd
4HfBw83XnlG3qQzeHXwO+AHwx+BRFmj/W7etCd4PfBH4MfCX4LEWas+r2zQA
t+ArwM+AvwdPsEh7Id22Kfgo8HXgl8C/gicP1F5ct2kDPgF8K/gN8N/gaRZr
L6fbdgKfDr4b/D54+CXaM+u2VcB7gs8FDwJ/Ah5tqfYcuk1t8P7gi8GPg78C
j71M+z+6bUPwoeArwc+BfwBPtFx7Yd2mOfho8A3gl8G/g6dYkcf7fE72kq7p
81PZ27qm/6/BPsk1fd5eMPk21/T5rNTmlmt6/cr+xzV9vuhF8nQr83if30lt
y6/09hPE3mWlt5+Yl8hnrPT205Da7F3p7WcNe8hKbz/f2COu8vZT5jJ5llXe
fmZQm2qrvP08Yu+1yttPzivk81d5+7HU9tAqbz/n2Z+t8vaT7Cp59NXeftpR
m1yrvf3sYq+z2ttPpGvkA1d7+6lFbZes9vazlP3kam8/79lfr/b243+dPO4a
bz8TqW3+Nd5+7rA3XuPtJ/MN8mFrvP30oTar13j7OcF+fo23n/g3yT+t8fbT
nNomXuvtZzN70bVy/9wib7FW7h9qM3at3D/sG9fK/cN+da3cP7fJf6yV+4fa
+K2T+4e91Dq5f+6Qt18n9w+1nbxO7h/2Hevk/rlLfnud3D/UJsx6uX/Y06+X
+4e94nq5f+6Rd10v9w+1mbVe7h/2fevl/rlP/nC93D/UNtIG1SabblsdvA/4
AvAj4M/BY27Unlu3qQc+CHwZ+Cnwt+DxNmn/n27bBHwE+BrwYPDP4Ek3a/fX
bVqBjwPfDH4N/Bd4qi3ay+i2HcCngu8Evwsedqv2jK7PzszWIF8IeSXXiXI2
Oxr5AXl3163OzMx2m9rOdr215ZmZ6x+SH/DN94j8kXQItYmyTZ5PHpNnlw6k
NjWlzRPyvr7x1GaRtGU/Kh3E/tJ3/FPyv7bL8dQmr7Rlry8dxG6lzTPy5b7j
qc0Z3/Hs73SbBDu0F3TtPu9pMXtT1/R5TewjXdPvK2Vf59p9flSk5+QXXbvP
f8pEbb66ps9vYk+2Mw9/HlVH9uKu3cdJTWJv7Zp+nyr7BNf0eU7sW1y7z6f6
xH7Dtft4qQQvyP9z7T4eKj+1SbMrj/d5V+xlXbuPqxrA3sm1+7iphezTdsn1
Zd+9y7seD9jv7fKuR7iX5OF3e9cjHbXNtNu7HmXYq+z2rkdb9h67vesxjn3u
bu96rGc/uNu7HhfYn+z2rsc79qh7vOsR51/yHHu865GH2tba412P2uz993jX
ow974B7vesxlP77Hux772P/d412Pe+yx98r99Yo8n3QAtWkoHcQ+RNrvNflK
aUttz/rme0P+wefUNuE++fnHXnif/Px/S95sn6xHbUbL+MzvyNfL+BnU5rKM
N+/Jv0kHUJsU+2U+9hLSfh/I20pbajtROoR9m7T/R/Kb0oHU5o+0+USe9oCs
T23KSwexd5b2+0w+Q9pS2z26TYivv5BHOJjHe/8ytcnimj5f7yt5Vdf0/mlq
08s1vb/5G/k81/T+b2pzyDV9PiD704Nyvt/Jowd56y2jtjmDvPWi/CCvE+St
15HaDgjy1rvEviTIWy/fT/ITQd5686jN6yC5fr/I4xzyugu1yS8dwt5Iuup/
5MOkg6jtKukcv8nPSwdS24/Ssf6QJz4s15faFnG9dFz2PavYW7gunbBRj4vs
Y1y/WDIu+w/2ja7HZ9/zPLU56vyK69BcUoHa/HB9qVToBOwpj4R2j4ulEi5g
L+XaTX+MvZ3r0MPHvWGf7LqROyAM+fYj8vhQm9tHvP22YTdHvf1OYU9/1Nvv
HvYKR739PmTvetTbb7Sw5DOPevvNQ232HfX224j9wVFvvyPYIx3z9ruBPesx
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
9ylvftuPvKa06U/ez+fUdpF0EPsx3/gB5C+l/alNrNNyPHte6SD2BtJmILmV
9qc2K3zHs5/xHc/+3nf8IPIEZ2Q8tSkkHXqnO2/q2r3+bEFtRrmm15vs61y7
15fZLPkl1/T6ldp+dU2ft8qe/Gxe7/XwEPLiZ2V/1KbNWW+9tEPJJ5z11htD
bbae9dZ7zX7jrLde9WHkv8966+2gtmnOeeslHU5e7pycL7XtJB3IPl06iH23
dAj7fWkzgjz8ebn+1CaztGWvIh3E3lPajCSf6zue2gT5jmd/4pp+vzl7tAt5
vd8fPoo8h2t6fwS1qe2afn86e3/X9PvJR5Mvdk3vP6C2x13T72cfQ/7KNf3+
c2obO1j2z/5PsLefZGPJGwZ7++lDbYYGe/u5yr4y2NtPznHk54K9/Uykth+C
vf28ZE900dtPmfHkhS96+1lKbZpflOs3gXy0dCxqs0Haj/2ydA7279L+7Cku
eV2VvaR0AHtb6S7sk6Qt+zbpyey3pAPZ/0hvYk93Wa4ne3npYPYu0iHsM6Tf
se+VNhPJQ6RjUZuIV+T82bNI52CvJu3P3ku6Kvt86QD2Q9Jd2J9JW/boV+X8
2XNJB7LXkd7EPlA6iH2JdDD7SekQ9tfS79jjXpPzn0SeX7dpDD4MfDX4efBP
4Imvay+q27YAHwu+Efwq+A9wvxvaS+k27cEng+8Avw0e5qb29LpNRfCu4LPA
94E/BI90S3s23bY6eB/wBeBHwJ+Dx7ytPbduUw98EPgy8FPgb8Hj3dH+P922
CfgI8DXgweCfwZPe1e6v27QCHwe+Gfwa+C/wVPe0l9FtO4BPBd8Jfhc87H3t
GXXbSuDdwWeDHwB/BB4lRHt23aYmeF/wReBHwV+C//VAe17dtj64BV8Ofgb8
HXiCh9oL6jZNwUeCrwO/CP4VPNkj7cV129bgE8C3gN8A/w88zWPtZXWbTuDT
wHeD3wMP/0R7Jt2mCngP8LngB8GfgEd9qj2HblsLvD94IPhx8H/BYz/Tnk+3
aQg+BHwl+FnwD+AJn2svrNs2Ax8Nvh78Mvg38BQvtJfQbdqCTwTfBn4T/A94
2pfay+u2ncFngO8BDwGP8K/2LLptVfBe4PPAD4E/BY/+SntO3aYO+ADwJeAn
wF+Dx3mtPb9u2wh8GPgq8PPgH8ETv9FeRLdpAT4GfCP4FfAf4Cnfai+l27YD
nwy+Hfw2uHmnPb1uWwG8K/hM8H3gD8AjvdeeVbepDt4bfAH4YfDn4DE+aM+t
29YFHwS+1PWqU8WeLmc/5dqvU5gR1SaTv3E9O86hNP9Rm3gfQzvWTnt41RTy
Aq5HN/BvWnMqeZOPMv808uHSeajNGuk27Bek57N/lg5mT/LJ6/DTyf2l81Pb
ltId2MdJB7Jvkr7Cfk068gzyn9KFqE2qz153YS8tvYy9g/QN9inS0WeS75T2
p7Z3pHuwh/3i9Sr2DNJ32CtJx5pF3k26JLWZLd2Hfb/0OvZH0iHskb96HW82
eXbpstS2hvQA9r7Sm9gXSj9mPyqdaA75C+mK1Oavb15b9jy6TX3wweDLwU+D
vwOP/117Qd02AHwk+Frwi+BfwJP90F5Mt2kNPh58C/h18P/AU//UXla37Qg+
DXwX+D3wcL+0Z9JtK4P3AJ8DfhD8MXjU/7T/rdvUAu8HHgh+DPxf8Fi/tefT
bRuADwFfAX4W/D14wj/aC+k2zcBHga8HvwT+DTy5yae8hG7bBnwi+Fbwm+C/
wdOG0V5Ot+kMPh18D/h98AhhtWfWbaqC9wSfBx4E/hQ8WjjtOXXb2uADwBeD
nwB/BR4nvPZ/dJtG4EPBV4GfA/8IniiC9iK6bXPwMeAbwK+AfwdPGVF7Sd2m
Hfgk8O3gt8BNJO3pdJsK4F3AZ4LvBX8AHjGy9qy6bTXw3uDzwQ+DPwOPEUV7
Lt2mLvhA8KXgJ8HfgMeNqr2AbtsYfDj4avAL4J/Ak0TTXlS3aQk+FnwT+FXw
n+B+0bWX1m3bg08B3wF+BzxMDO0ZdNuK4N3AZ4HvB38IHjmm9my6TQ3wPuAL
wY+AvwCP+Zf2PLptPfDB4MvAT4O/BY8fS/v/dJsA8BHga8GDwb+AJ42tvZhu
2wp8PPhm8Ovgv8BTx9FeRrfpCD4VfBf4XfBwcbVn1G0qg3cHnwN+APwxeJR4
2v/WbWuC9wNfBH4M/CV4rPja8+o2DcAt+ArwM+DvwRMk0F5It20KPgp8Hfgl
8K/gyRNqL67btAGfAL4V/Ab4b/A0ibSX0207gU8H3w1+Hzx8Yu2Zddsq4D3B
54IHgT8Bj5ZEew7dpjZ4f/DF4MfBX4HHTqr9H922IfhQ8JXg58A/gCdKpr2w
btMcfDT4BvDL4N/BUyTXXlK3bQs+CXwb+C3wP+DpUmgvr9t0AZ8Bvhc8BDxi
Su1ZdJtq4L3A54MfAn8GHt1Pey7dtg74QPAl4CfBX4PHTaU9v27TGHwY+Grw
8+CfwBOnDu0Fn6JVeshe1PWWxpnelJpL3sL1iZOlJ62mNmNd38nVIkeMeeQb
Xb+bP+RiF2pz1XXESIu6XWH/4TpJ131x888n90sT2jlu39w2j9qWcl2y1Nda
f9jb/7+Lew+tOYzjOP4QiRbRouVEMsfOOdvsYrMz0YlcEk1Ya3LJ0kRr0iSa
9GhZLk2ylkWzYzabNS2SWy5nLpMsES2XaE0ks9zSEOH5fp/nl+/nz3evvp8/
fv8/P9OF7fEDRXXkh0yXJmTUdlKrC6YrKvLCwePkL0zX9pc8r6JWgxL/dVvB
/vLP7H7TNzuaffn15ItNd4fuXLtErbeY7qvpXeOLkh9JdN+HWl91HWPvda1O
kA+bYjtCrVJca/ZlrmPs212rBvI6755a3fLu2d959+wj/e7+JHmm6wi1KnSt
2Xe5jrE3eveN5Pe8e2r10btnj5/q7tlzXasm8rWuI9Rqj2vN3urdsz/07k+R
f/PuqdX4JHfPHnEdYy92rZrJD5g27/mSqdVZ0/T/I/Zu0+Y5XyX7L9P0no99
UsDu9bAvCNi9uBbykoDdC1OrwwG7V8x+MWD3qtlfur0Y++Cg3fvAnhS0ewmn
yZcE7d58alUWtHtl7LVBuxdlv+72uthfu70f7MNDds/fSp4asnvLqdWKkPu+
7Dtkq3rw2+DvwUclS8+SrVeCa/Am8Pvgn8DHpkifKVutA68EbwN/BD4A7kuV
Pke23gBeBX4O/Cn4b/DJ06QvlK1KwavBL4O/Ah+SJj0gW+WBbwU/Cn4D/A34
iHTpabJ1Png5eBS8E7wPfHSG9GzZahX4bvBm8C7wL+DjMqXPkq2LwPeCnwF/
DP4dfMJ06XNlq43gB8HPgz8D/wOemCV9kWy9GbwG/Ap4D/jQbOkh2Xop+Dbw
Y+Ad4G/B42ZIT5etCsB3gjeA3wXvBx+TIz1Htl4NXgHeAv4A/Ct4Qlj6bNlq
Pfg+8HbwJ+A/wSfmSp8nW2/6v/8C6hu/cg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxc3Xdczf3/x/G3UCFkb7K3skPI3rvMJITIyA7hTUZ2FEII2StkhyJkh+yQ
vcnO/p3X6/p+Pr/b63muP763x/f+Op/1Pp2uc25d5xTvN6LzACullMNipeh/
LTevNId3jZR50zNlq+3gieDfwAv9kN5Ith4IPh98D/gt8N/gJX5KbyFbDQNf
An4I/D54+l/Sy8lW7cFHg68APw7+FDzTb+mOsrUb+ETwteCnwV+D2/+RXlO2
6gWuwTeBXwD/CJ73r3QX2bov+GzwHeDXwL+DF/knvbFs5QO+AHwf+G3wv+Al
VXHhrWTr4eCh4IfBH4JnSCe9gmzdAXws+ErwWPBn4FmspDvJVl3BJ4GvAz8D
/hY8R3rptWVrD/Dp4JvBL4F/As+fQXp92ao/eBD4LvDr3MnTrc7bfm5o+T9+
cJeyDshTLb2rxYtmpL59/tvph3aWVk25z551Pto8F/lg7hIVxoUUyU++iDtg
/j7fL4XJo6m17/i0dc8cyO+yryiXL1unkuT/uM/cqTkxpjR5aWua/zzX7XnZ
cuStqVVxl9GdQyqQ+7G3f7f4+N9K5Eu5J62JqjDEkfwod9LmQRdeO5GnULv6
qvHTHKqRW9tYOjZdj1m1u1Ynr0itw/YsfTevBnknalfHzBs3xNUkH8fzp/tF
9/heizyc5z2Onspe2Zk8juc/57p+ul8d8hc8P2fo40lhdcntbGne4fTHqpfr
kVejdj1YJN3L9PXJu1HHthtnv6ZOA/LJPP/0cjG3EQ3J11NHHAvJN7OzK3kC
dYqtazGvd9T6HW/P7W2ZekGNyHNlovm1YVXylmxM7pzJWO9YauVJHTvs3oFh
hZqQB/J8qVZLSrWiVlupvSx8bxz7ZfP+mv2LbF0gs/SGsrU3+Fzw3eA3wH+C
O2SR3ky28gUPBj8Afg88nZ30MrJVW/CR4MvBY8Afg9tklV5Ztu4M7g++GvwU
+EvwbNmkV5eteoBPAY8EPwf+ATx3dul1Zes+4DPBt4Engn8FL2Qv3VW2Ggg+
D3wP+E3w3+DFc0hvIVsPBV8CfhD8PrhVTunlZOt24KPBw8CPgz8Bz5SLnh+u
b7qa5wR7FeqIwXnWJzVsSu5Grf8FjgqJpdYTqL2WfmrcuVEz8rXUrhX75spx
klrHUzvEXXlypXFz8tfUqluD6IWnqHX23PR89nbHjHZNW5DXpI6dXsjd7jS1
7kkdkX9u6QvNWpJrar0r7eucM9R6I3fTQWdatmhFfoHa6+6NZTYJ1DqV2tWP
BlqT581Dx2O9r/bMc9S6HrUKL27btHUb8r7UKVWDb1tdoNazqGPP/t0S16Yt
+Q7qiN7DJuiL1PpqHvP3aTvy77J14bzSG8vWg8AXgO8Fvw3+B7xkPuktZavh
4CHgh8EfgGfIL728bNUBfAz4SvAT4M/AMxeQ7iRbu4NPAo8APwP+BjxHQem1
ZCsP8Gngm8Evgn8Cz1dIen3Zuh94EPhO8OvgaeBFC0tvIlsNBl8IHg1+B/wf
eKki0lvL1iPAl4IfAU8Bz1hUekXZuiP4OPBV4HHgz8HtikmvKlt1Aw8AXw9+
FvwdeE4H6c6ydW/wQPAt4JfBP4MXKC69gWzlDT4HfDd4EvhP8GIlpDeTrYeA
B4PvB78HrkpKLyNbtwEfCb4MPAb8EbhNKemVZKvO4OPBV4OfBH8JnrW09Oqy
dXfwKeAbwM+BvwfPXUZ6HdmqD/gM8G3gV8C/ghcsK91Vth4APg88Cvwm+C/w
4uWkN5ethoIvBj8IngxuVV56WdmqHfgo8DDwY+BPwG0rSK8iW3cBnwC+Bjwe
/BV49orSa8hWPcGngm8EPw+eCp6nkvR6srUX+Czw7eBXwb+BF64svZFsNQh8
Pvhe8Fvgf8BLVJHeUrYeBh4Cfgj8AXh6R0t7DbTcnrOX//9uT97+/7sD+Rhq
p+qW2+iO5Cscze11Ij9hdgS1fkodtS5m1qeCnckzO1k6pWborY6e1NqR2uG8
b7nd69jdqTt6NpmQ9Rn7RCdj/2W6kEeYPZBan6aOWGG5HWZ/Y3YBN3L7qsbx
+FGrWmbHsveijtpmuWV2J59muiu13kTtRIcbyH6R2s9ytDFn2D9SR9DpZe5K
nq+asb3W1NqlmrE9zd6PuqO75baffbbpsew7Zetr4GngRapLbyJb+4AvBN8H
fgf8L3ipGtJbme3VjXyE2SnUOtRsp+7kR6i9aHnHUuuH1MGWy9vkMHvGmpZO
pIfDb/YKNc316EHesaZx/cZS67HcS0q1WhLJvoragd7OusYea95f9SR/brY/
tc5Sy/Re5FXNdqDWXc12ZQ8w24d9HXUUvZ+2iv2s6Snsb2sZx1fKgzxnbTpf
ysHUujZ1ygHLBnay965tHP8n9uk8f7Zrhqxle5NvobZvdKrV/W7U+hL7EcdF
O4PYP7PXCE+afJg9vzP5TtuC7V+zN6C2Lzu2T9FCnuT92SMeRb5vQ63msFum
jwew76LWIbQD9iRqldWygQfsP9hnWQay9yEvVse8XtS6qWw1BHwR+H7wu+Cq
rvTSslUbcD/wZeBHwR+BW9eTXkm27gQ+Hjwc/CT4C/CsLtKryVbdwSeDbwBP
AH8Pnqu+9DqytSf4DPCt4FfAv1D7rXS12+bNXrABPd4WqmK5QtgbUkdNj60a
EMc+gDpxnG767AP7XGr/mhEVy2b3Io+iDnJU+3uVodY3qMPKezUIrs/+i3pL
ydiz8W7sDg1p+0UcOv3wZW9OHZtP360cyO5LnZgjpX+/leyLqVOyuL5btof9
AHVqxohxFxLYkxuaP9/s6VxFq7KydVvwUeDLwY+Z7dCX/LHZXtTKtpH5+5W9
stmJ7F3MVv3I/c12pVZrzNbsp/5/e+yvzI5lz9bY3D57DbNT2HtQd6fn46/s
U6m38O/T/uSR5rwDtTpvztdk/2DOt2bP08Q8X/a6spUX+Ezw7eCJ4N/ACzWV
3ki2Hgg+H3wP+C3w3+AlmklvIVsNA18Cfgj8Pnj65tLLyVbtwUeDrwA/Dv4U
PFML6Y6ytRv4RPC14KfBX4Pbt5ReU7bqBa7BN4FfAP8InreVdBfZui/4bPAd
4NfAv4MXaS29sWzlA74AfB/4bfC/4CXbSG8lWw8HDwU/DP4QPENb6RVk6w7g
Y8FXgseCPwPP0k66k2zVFXwS+DrwM+BvwXO0l15btvYAnw6+GfwS+Cfw/B2k
15et+oMHge8Cvw7+A7xoR+lNZevB4IvAo8Hvgv8DL91JemvZyg98KfhR8BRw
687SK8pWncDHgYeDx4G/ALfrIr2abN0NfDL4evAE8HfgudykO8tWnuCB4FvB
L4N/AS/gLr2hbO0NPhd8N/gN8J/gDl2lN5OtfMGDwQ+A3wNP1016GdmqLfhI
8OXgMeCPwW26S68sW3cG9wdfDX4K/CV4th7Sq8tWPcCngEeCnwP/AJ67p/S6
snUf8Jng28ATwb9Sd/z0sFJcJHuhXpb27/W8ZI3X7K7UYfFvC2529CYfSH2o
8uccBcdS63nUKct+2C44wr6nl7F9NYD8JjX/+2ppavWb+r9/X2Uv7mHM+7G3
8DDml7IP9TDmj7AvMedT2A+ancp+32w1kNyqt9FO1Kqc2V7s7czW7KPNjmAP
MzuW/bjZKexPzFaDyDN5Gu1ArauY7cXuZnYE+wRP8/zY13oa53+DPd6cT2V/
bc5n9iHP3se8vtSqZh9j3pW9p9maXZsdy77R7ET2C2ansKeancqe18s838Hk
9cy2p1Z9zXZgn2W2K/sOs73Yr5odxP7d7Cj2wn2Nvs3e2Gw1hHyQ2U7UaoHZ
Xux7zfZjv222Zv9jdjB7yX7m+rC3NDuWfbjZKewhZtv7kh8225VaP+hnrFdP
9gz9jfUay16+v7l/9g79jflt7GPM+dPsK835FPYTZquh5M/MdqDWmb3N68Pu
ZLYru7vZHdknme3FHmF2MPsZs2PZ35idyp5jgLn/YeS1zHaiVh5mu7JPM7s7
+2az/dgvmh3E/snsCPZ8A83rwV7fbIfh5P3MdqJWQWa7su80uyP7dbO92NPM
1uxFB5n7Z29idiz7YLNT2BearUaQR5vtQK3vmO3K/s9sL/ZSPub+2VubHcE+
wuxY9qVmp7AfMVv5kaeYbU+tMw42j4e9otlO7B3NdmUfZ3ZH9lVme7HHme3H
/txsf3a7Ieb5sFc1O5i9m9kR7AFmb2Jfb/YO9rNm72V/Z/Yh9py+Rh9ndzY7
nr232efZA81OZN8iW10G/wxeYKj0BrKVN/gc8N3gSeA/wYsNk95Mth4CHgy+
H/weuBouvYxs3QZ8JPgy8BjwR+A2I6RXkq06g48HXw1+EvwleFY/6dVl6+7g
U8A3gJ8Dfw+ee6T0OrJVH/AZ4NvAr4B/BS84SrqrbD0AfB54FPhN8F/gxUdL
by5bDQVfDH4QPBncaoz0srJVO/BR4GHgx8CfgNuOlV5Ftu4CPgF8DXg8+Cvw
7OOk15CteoJPBd8Ifh48FTzPeOn1ZGsv8Fng28Gvgn8DL+wvvZFsNQh8Pvhe
8Fvgf8BLTJDeUrYeBh4Cfgj8AXj6idLLy9btwceArwA/Af4UPPMk6Y6ylTv4
RPAI8NPgb8DtA6TXkq17gU8D3wR+EfwjeL7J0l1kq37gs8F3gl8DTwMvMkV6
E9naB3wh+D7wO+B/wUtNld5KthoBHgp+BPwheEYtvYJs1RF8LPgq8Fjw5+BZ
pkmvKlt3BQ8AXwd+FvwteM7p0mvLVr3Bp4NvAb8E/hk8f6D0BrJ1f/A54LvA
k8B/gBebIb2pbDUEfBH4fvC74Gqm9NKyVRtwP/Bl4EfBH4Fbz5JeSbbuBD4e
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
3F4wu/Ug0aqSbN0JfDx4OPhJ8BfgWX2kV5OtuoNPBt8AngD+HjzXYOl1ZGtP
8BngW8GvgH8BLzhEekPZagD4XGqnHRsfLlzCHkXtt7Dj9+/L2G9QR/n9ytZ3
Ffsv6tTOm8qcX8vu4EvrXbNTg+qR7M2px+T77R6+hd2XOvrHpmEZd7Ivpv5y
r9PM4XvYD/D9j/8Ov7WfPZnaP2JztOsR9nRD6fl0eueLW4+zl6VO8/7zJOcp
9rbUzi22/Jp0ln0UtX/5LrmeXWBfzvfP8rdC+0T2Y9S/321pfDCJ/TG1S2KX
ng532G2H0fP93r8j59xnr0wdE7p1zqdH7F2of49zW9frObs/tUuPf4fiX7Ov
odb1tiVW/sB+ijq2iPvLZZ/ZXw0zrn8ae7bholUN2boH+FTwSPDz4B/A84yQ
Xle28gKfCb4dPBH8G3ghP+mNZOuB4PPB94DfAv8NXmKk9Bay1TDwJeCHwO+D
px8lvZxs1R58NPgK8OPgT8EzjZbuKFu7gU8EXwt+Gvw1uP0Y6TVlq17gGnwT
+AXwj+B5x0p3ka37gs8G3wF+Dfw7eJFx0hvLVj7gC8D3gd8G/wtecrz0VrL1
cPBQ8MPgD8Ez+EuvIFt3AB8LvhI8FvwZeJYJ0p1kq67gk8DXgZ8BfwueY6L0
2rK1B/h08M3gl8A/geefJL2+bNUfPAh8F/h18B/gRQOkN5WtB4MvAo8Gvwv+
D7z0ZOmtZSs/8KXgR8FTwK2nSK8oW3UCHwceDh4H/gLcbqr0arJ1N/DJ4OvB
E8DfgefS0p1lK0/wQGr7nhdX1cg4j3wrdYY2fXrPy0mtL1On1ftU9HEx9i/U
byvNTHGuzF5gmqVTiuRfv6gue0PqpGzb+z9vwe5NnfCvfun67uxzqWNSE5+H
9GPfTR31qP+W1yPYb1BHXvs2uNFk9p/UYafmVAyby+4w3dLB0YXfvV/O3ox6
xsbdu5ptZPel9l/W2C98L3sw9dDZN6p+PsF+gNrL3+dzq0vs96jdBv+KjrjL
ni7Q0i17Lhz3/QV7GWqXNsWd239lb0vt5BL9I9JqPvlI6lKVWxz9lZ1aLafO
X/RuQOci7DHUdtmHNdhagf1xoHH9ndltZlj6S6u1X1o1ZK9M/TKkwauQ5uyd
qZPvW27t2P2pk8pOvlbWnX019X9/D8N+ijrmqOXWn/0ldVTGXlEZfdmzzaTr
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
72P2gq/o+ap03wxln7O7UrfOHzfn8Sv2AdTzsxTPvuYd+zzqy391aI+P7FHU
9p9SCuT5yn6T2u2Z69rENPZf1MtuR5Sa/5u9+Gv6ebqgtrVQi8mbUxc84eWY
PgO1GkrtuTc2+rgN+2LqiI0OdSdmYT9I/ThMn6iZnT2ZutT8lKYfc7JbvaHn
z6mu53fkZS9LvW1URAefguztqN8OUDdKFmUfRV2lh1fPh8XZw6hHtY19uLI0
+zHq6IYOA7qWZ39C/a2afp2jMrvtW0s7l0kZccmJvQp1QAHXr0E12LtQH7eL
mNjUmX3CW/P3O/sa2Soe/BV49nfSa8hWPcGngm8EPw+eCp7nvfR6srUX+Czw
7eBXwb+BF/4gvZFsNQh8Pvhe8Fvgf8BLpEpvKVsPAw8BPwT+ADz9R+nlZev2
4GPAV4CfAH8KnvmTdEfZyh18IngE+GnwN+D2n6XXkq17gU8D3wR+EfwjeL4v
0l1kq37gs6mnHMqYu3kj9p3UDZKtMm9ozn7NnG/LnmZ2R/YiX412Y29idnd2
H7M92Bea7cW+z2xv9jtm+7D/NXsoe6lvRvuxt5KtRoCHgh8Bfwie8bv0CrJV
R/Cx4KvAY6nvTvB26RTA/pw6pcna17eC2LOkWfp51rthnkvZq1K/vpW7xbN1
7F2pU9d1+Oq7iz2A+pvv3A2fjrCvo/5Z83SnCWfZz6YZ+09ifytb5fwhvbZs
1Rt8OvgW8Evgn8Hz/5TeQLbuDz4HfBd4EvgP8GK/pDeVrYaALwLfD34XXP0u
8b+/P7/BXpqa/hw+6il7m9/G/Bd2P2r++N2f7Muou9J/j5JuCflRc96WWj0y
57OxW/8x5vOwV/pjzBdm7/THmC/BPt6cL88ebs47sZ+UrV+AZ/0rvZps1R18
MvgG8ATqywXzZSlVnf09dVEv5/FN6rHn+mfp4Rt7POnXhL0O9fHXEztMb8Pu
SZ3NKfzoui7sM6i9xh4rG9eLfSt11JEHISn92a/8M58v2L/8M67HSPaCquT/
rtc49obUPB/APoCa56exzzXnZ7FHmfPz2W+Y80vZf5nza9gd0hnzW9ibpzPm
97D7pjPmj7AvNufj2Q+YnciebHYyezoro1+yl7Uytv+Wva2Vsf1U9lHm/Ff2
5eb8D/Zj5vwf9sfmvFUIuW16Y96aWldOb8xnZu+S3pjPzu5vzudiX2PO52M/
Zc4XZn9lzjuwZ8tgzJdir5HBmC/P3iODMV+Zfao5X5U90pyvxX7enK/L/sGc
b8CeJ6Mx34S9bkZjvgW7V0Zjvg37THO+I/t2c96dPdGc78n+zZz3Yi9kbcwP
YG9kbcwPYR9obcz7sc8358ey7zHnJ7LfMuc1+29zfiZ7CRtjfi57CxtjPph9
mI35eGZfYs6vZD9kzkew3zfnN7KntzXmt7GXszXmo9jbmx3NPtrsQ+wrzI5h
P252LPtTs+PZM2UyOoHd0eyL7G5mJ7JPNDuJfa3Zt9lPm53M/trsFHb7zEY/
Za9p9kv2Xma/Zddmp7JvMvsL+wWz09g/mv2bPW8Wo1UouYvZGah1X7Nt2Web
bce+w2x79mtm52b/bnZ+9iJ25s8je2M7Y31Ls/vYGetbhX2BOe/Mvs+cb8R+
25xvzf7XnHdjL5nVmO/G3iqr+fPCPjyrMe/JHmrO92U/bM57sz80533YM2Qz
5n3ZK2Qz5oezd8hmzI9iH2vOj2Vfac77s8ea8wHsz2SrLNmlO8lWXcEnga8D
PwP+FjyHvfTasrUH+HTwzeCXwD+B588hvb5s1R88iDqi+ZNG6aew76K2v3Mm
3ZcZ7Nepp/hui3s6j/0H9fs/C6bdWMJeNKelPYJHNjqzgr0p9cUS7ukORrAP
pq673zlu82b2RdTbWhSeFraLPZo6/91/rnP2s9+lDhr6RE2MYf9H/e3vmdgh
p9hL57L0wMXbdK/z7K2pk0oudG17ld2PuumBkar+bfal1HtbusdWfsh+lLrE
PWdd9Dl7CnXwsMKu2d+xW+c2f/7ZK8pWncDHgYeDx4G/ALfLI72abN0NfDL4
evAE8HfgufJKd5atPMEDwbeCXwb/Al4gn/SGsrU3+Fzw3eA3wH+CO+SX3ky2
8gUPBj8Afg88XQHpZWSrtuAjwZeDx4A/BrcpKL2ybN0Z3B98Nfgp8Jfg2QpJ
ry5b9QCfAh4Jfg78A3juwtLrytZ9wGeCbwNPNDuN/atsVaiIdFfZaiD4PPA9
4DfBf4MXLyq9hWw9FHwJ+EHw++BWxaSXk63bgY8GDwM/Dv4EPJOD9CqylRv4
BPC14PHgr8GzF5deU7buCa7BN4JfAE8Fz1tCej3Zqi/4LPAd4FfBv4MXLim9
sWw9CHwB+F7w2+B/wEuWkt5SthoOHgJ+GPwBeIbS0svLVh3Ax4CvBD9BPXf7
0YcHf7E/o/Zesu7R1H/smctY2mXC7Cct0i8ld6LO6zXsWXYbau1Ondq8y4tb
mdknUZ+vXOfV2mzsEdSRuYu9GZST/Qz1lF8Z3jnmZX9D3f3x6/ffC7DnKGvp
aucSU08UYa9FbRd14NPs4uwe1M+XhX/pUJp9GnXs5Onf8pVn30wd5u2T9rAS
+0XqUW3a/9zsxP6Jum21Gr9H1GDPV87SZQoU/Fvbmb1+OeP6uLD3k62CwHdS
n2kX9vBGA/br1ImubnX3NmFPo75b3X7pwpbsRctb+nGZix+GtGNvQv22QFDr
Fp3ZB1N/s2u6sWQ39oXljf15sEdT//d6mf0O9X//Ps/+z5z3Zy9VwZifxt66
gjE/l31EBWM+lH2pOb+c/Yg5v5I9xZxfw56xojG/jr1iRWM+kr1jRWN+C/s4
c34/+ypz/iR7nDmfyP6cmr+f6Aa7XSVLr6fvP7rLXpV6FH0+y0P2btT0dUyl
n7IHUNPXEzm+Yl9P/d/nzbCfpebvS/rM/o6av48pjT1nZeN4/7A7U5ehO1gt
I+9NTeM+NtQqkPq/77dm30L93/c3sV+m5u+Hysv+mZo/D6YQe4Eqls5M32/l
wN6Amg5/XWl27yrG9arAPoeav0/KkX03NX9fVQ32JGr+vJ467D+p39P3NzVg
L+Zo6eN0wk3Ym1HT4TxpyT6Emi7/u3bswdT8/Vmd2fc7GuvVnf2ebK2cpJeR
rduAjwRfBh4D/gjcpqr0SrJVZ/Dx4KvBT4K/BM9aTXp12bo7+BTwDeDnwN+D
564uvY5s1Qd8Bvg28CvgX8EL1pDuKlsPAJ8HHgV+E/wXePGalg79XbuN02D2
5tQPlv2wXTCRfSh1mapHz7yax76YeviFgBnNV7MfpD40oEHjDbvYk2sa249l
t6pl/PyfZC9by/h5jWdvV8v4+TrDPqqW8fOQwB5Wy3i+ucB+rJbx/HCJ/Ukt
4+f5CrttbePn7yp7ldrG8SSxd5GtJoCvAY8HfwWe3Vl6DdmqJ/hU8I3g58FT
wfPUkV5PtvYCnwW+HfwqNX/ez032b9Qvw0dfrnOPvXBden63LT7DPoW9ETXx
i6fsg6jTHkz6cOwV+3zqzq3Lbwx9z76Xetf+mz19P7PfoqbNNU5j/0PtTQfw
h71EPXp+/G7ZYLrl5C2p6eOHzlhT62HUYyy7D8/CHkJNOdqe/RB1hY2hnVvn
YX9AbdmbbfGC7Old6PFtOdzvRdnLU9e13P1ySfb21KF0AuXYx1CnHrMcUGX2
FdR0ep2rsZ+g3kR3qM3+1MW4vi7smeuL1o6ylTv4RPAI8NPgb8DtG0ivJVv3
Ap8Gvgn8IvhH8HwNpbvIVv3AZ4PvBL8GngZexFV6E9naB3wh+D7wO+B/wUs1
kt5KthoBHgp+BPwheMbG0ivIVh3Bx4KvAo8Ffw6epYn0qrJ1V/AA8HXgZ8Hf
gudsKr22bNUbfDr4FvBL4J/B8zeT3kC27g8+B3wXeBL4D/BizaU3la2GgC8C
3w9+F1y1MNqLvbRs1QbcD3wZ+FHwR+DWLaVXkq07gY8HDwc/Cf4CPGsr6dVk
q+7gk8E3gCeAvwfP1Vp6HdnaE3wG+FbwK+BfwAu2kd5QthoAPhc8CvwG+C9w
h7bSm8vWvuCLwQ+AJ4Onaye9rGzdFnwU+HLwY+CPwW3bS68sW3UB9wdfA34K
/BV4tg7Sa8jWPcCngkeCnwf/AJ6no/S6spUX+Ezw7eCJ4N/AC3WS3ki2Hgg+
H3wP9bfMXzN/Hch+izuT5Z9h7L+p02y/234fw16iM7WN5Z9J7C2of1r/sP4x
nX0Yd0bLP3PYl1D/zvArw69g9kPc6S3/LGe/T/3X6o/VnzXs6btQp7P8s5G9
HLVK90/928Hevotx/NHso6n/+/sX9hXU/Hoijv24OZ/A/pSaX19cYs/kVvJ/
r0euszu6Gdu7ze5Gza93HrBPpObXI0/Y17oZ+3vFfpqaX++8Z39Nza+PvrDb
uxvH85O9prtxPP/Ye7kbx5MxjFy7G8eTmVptcjeOx579grtxPHnYP7obx1OI
PW9X43gc2F26GsdThr1vV+N4KrHP7mrsrwr7jq7G9qqyXzPna7B/N9uZvUg3
8/cde2OzXdl9qPn9oibsC6j5/Zzm7Pu6GefTiv02Nb9/1Y79LzW/v9SRvWR3
4/p1YW9Fze/PdGUfTs3vd/VkD+1unE9v9sPU/H6RF/tDan4/pz97hh7Gegxi
r0DN718NYe9Aze8vDWMf28O43n7sK6n5/bQx7LHU/H7XePZnPYzrPZE9S8+S
/3u/aDK7EzW//zaNvWtPY/1msE+i5vevZrOvo+b3l+ayn+lpPF4Wsr+l5vfT
FrPn6FXyf+93hbLX7mWsVxi7Ry9jvVaxT+9lrNca9s29jPVax36pl7FeG9k/
9TLWawt7fg9jvbaz1/cw1msXe38PY732sgd5GOu1n32Xh7Feh9ivexjrdZT9
h4exXifYi/Y21uske9PexnqdZh/c21ivBPZFvY31usge3dtYryvsd3sb63WN
/V9vY71usJf2NNbrDntrT2O9ktn9PI31esi+1NNYr8fsRz2N9XrOnuJprNcr
dus+xnq9Za/Yx1ivVPZO1C/rNh+56zP7OOqhs47sG5jGHk6derXKt6J/2OOo
xxTZ4Hwr3QryF9RpPvkmLbKm1nZedLzR8461yMJezcvYnz17Ny9jffKwT/Yy
rk9B9vXmvAN7gjlfmv2dOV+BPVdfY96J3dlsZ3ZPs13ZA81uzr7V7Lbsl2Wr
L+AF+klvKFt7g88F3w1+A/wnuEN/6c1kK1/wYPAD4PfA03lLLyNbtaXeMm9B
62Lt2EdSRw3Z0cOmC/ty6gOtLvh86M4eQ3283OvxtzzZH1Ofsck0+4Q3u80A
S198XnbZ5iHslamTTjffuMiPvTN1cuSA6PHj2P2pHwfOONUngH019et+G661
mM5+ivpTo5OPHIPYX1KnOTxKzbeQPdtA43xC2aubvZK9h9kR7FPM3sQeafYO
9nNmR7F/MDuaPfcgow+x1zU7hr0PNX/+PbeaSZ2TPs//GPs26pX0/QTcKpGa
Pp6+xHH2r4OMxz+3KuRT8n/fH3CC3ZWavw+BWw2k5s/Dj2WfR82f78+t9vgY
P19x7DepH9D3L3Cr39T08fsDT7IXH0zPv3TjVi2o+fsRTrEPHWycbzz7ksHG
+XLrg4ON8z3Nfn+wcb7c2mqIcb5n2MsNMc6XW7cbYpzvWfbRQ4zz5dZhQ4zz
TWA/PsQ4X279ZIhxvufYM/ka58utq/ga53ue3c3XOF9uPcHXON8L7Gt9jfO9
yB4vW70Gzz5Uek3Zuie4Bt8IfgE8FTzvMOn1ZKu+4LPAd4BfBf8OXni4pSMb
FYxs9J83pm4ZWKNl4H8+iPptfPu38f/5Aupg68HB1pfY91LXoDtwq9vUt+es
vj3nP/9DHXDhYMCF/7zkCEs7ZL3mkPUye0tq2nx7bjWcegjt4D8Poc5mGb/2
nx+m3pur3p5cV9gfjDAeH9wqg5+lfy4b8WPZf16eeg0d0H/ewc84/0T2MbLV
SvAT4M/AM4+U7iRbu4NPAo8APwP+BjzHKOm1ZCsP8Gngm8Evgn8Czzdaen3Z
uh94EPhO8OvgaeBFx0hvIlsNBl8IHg1+B/wfeKmx0lvL1iPAl4IfAU8BzzhO
ekXZuiP4OPBV4HHgz8HtxkuvKlt1Aw8AXw9+FvwdeE5/6c6ydW/wQPAt4JfB
P4MXmCC9gWzlDT4HfDd4EvhP8GITpTeTrYeAB4PvB78HriZJ/z+u7jqsqiwK
4/Cxu7sTRFTsLizs7sZuRcWuYxd2F2IrIio2FurYiYqJio3dhYhz94d7P8/6
mL9+866zzr4M6vUCg7Nsuz75YPKl5EdUB9Vr/7hoGPyx6v7ffTNtD4cnGuto
l/VPGjo/gxdW7agp697Am6n2/dUnOPsX+AjVbTbt+LgsCr5Gdfqmn5zTxV2p
/KTqK9GlOs5NotqKVD1r68hFSdLAU4xTf763OHJ+SmZ4yXH6vLnhbWRb48k3
kJ8nf6+6VUi7OP0KwtOP114KXt50eXhn01XgU0zXgPubrgO/qhrPRxrAv6nG
85+m8KwT8v17/tEK7q4az3faw3tM0Ps84bMn6H3d4bsm6H194LfMvoHw32bf
UHgeW+8bCfcwPR7e3/QU+ALTM+AHTPvAw3XbC+BxJ2pfBi+g214Nb2h8PXyI
8S3w5cZ3wI8aD4I/NX4QnnhSvn/PF4/A3SbpP89PwJtP0vNn4KPM/AW4r5m/
Cv/PzN+Ev5qk39934Kkm6/f3A3ipyfr9/QTebrJ+f7+ET5is972Fb5qs932E
XzD7vsE/mn1R8AxT9L6/8IpT9L74q5R7mk6s2ppmOjl8u+nU8FDT6eHfTWeF
Z59qfn3Aq03V7x8neK+p+v3nCvcx88XgQWa+NPy2ma8A/2Pm3eF5p+muCa9j
ug58gOmG8EWmm8EPmm4Nf2i6AzzedN1d4AVN94Q3Mt0P7m3aC77C9DD4cdOj
4c9MT4AnnWF+/cCLmp4Gb2l6Bnz0DP3x4AP3m6E/HhbAT8/QHw9L4W9m6I+H
VfDUM/U+P3iZmXrfRnj7mXrfNvjEmXpfIHzzTL1vD/yS2XcQ/sn0YXimWbqP
wSuZPgHvavo/+HTT5+A7TF+CXzd9Df7T9E14jtm678BrmA6H9zYdAZ9r+hl8
j+lI+F3Tb+Expj/C8/vo/gqvK9saRL6YPJj8EXmCOdJdZVtNyIeRrzL9Ex5i
Ou5q5S9MJ1dtJ5urOyO8uOnc8FamneBjTbvC15kuCj9ruhT8reny8LTzzJ+P
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
AF5Yt+0Fb6rbcyh8hG734fDVunOPgp/UbY2Fv1SNv6+Oh6dwdbT662rJifAS
qi+rv69OhrdRjb+vToOPc9X7ZsI3uOp9s+HnzL658Pdm33x4ukJ63yJ4+UJ6
31J4p0J6fjl8SiG9fxV8m7neF361kL7fOvhXs28jPGthvW8zvGphvW8bvEdh
vS8APquw3rcTvquw3hcED9Nt74X/Nn4AnruI9kNwD93WEXg/48fgC4yfgO83
fgoebvwMPI6bPv85eAE3fd6L8AZu+vFehg9x04/vGnyZm953A37U7AuDPzH7
7sATF9X77sGLFNX7HsCbF9X7IuAjTT+B+5p+Bj9l+iX8lenX8JTFdL+DlzL9
Ed7W9Gf4BNNf4RtNf4dfMP0T/kE1vj0vCp6huKO3q6/vjoZXKK7n/8I9i+v5
OOuUTzXz8VRb2818Qvg13SGJ4d9128ng2UroX68p4dV0W2ngPXWHpIP76LYz
wneb67PAb5vrs8OjzXxOeN6S2vPAa+u288EHGHeGLzRdEH7QdGH4A9lWvFLS
XWRbjciHkq8gP0b+jDxJaelFZdstyEeTr1WdrENE3EzF4KeNe8Bf67brwFOX
0V4fXlq33RDe3ngTuG28GXyz8Zbwi8Zbwz8ZbwfPWFZ3B3gl053gXUx7wqeb
7goPMN0dft10T/iPsv8+nsN6w3OU0x/P/eDVy+nzDYT3Lqc//gfD5+h5V2/4
Hj1vjYDf0fNho+AxZv9YeL7yev8EeN3yev8k+MDyev9U+GI9b82AH9LzYbPg
j/S8/xx4/Ap6/3y4awW9fxG8cQW9fyl8mJ63VsBX6vmwVfAQPe/vC39u9q+D
J6uo92+EF6uo92+Bt6qo9/vDxxhHW+vM9bF+Rs/bsf5Wz/vHeppK+nyxXraS
3r8d3qGS3o+2Jun5lrG+Rc/bsX5Zz/vH+mezP9YzV9b7A+CVZVvdyGeQB5Lf
IP9FnrOK9Jqy7T7k88j3kt8j/0vuVFV6PdmWF/kS8sPkEeQJ3aUXkm01JR9O
vpr8BPlL8uTVpJeQbbcmH0e+nvwc+TvydNWll5NtdSKfTL6N/Ar5V/IsNaRX
lW13J59FvpM8jDyKPHdN6bVkW/3I55PvJ79PHqeWdGfZVgPyweTLyI+QPyFP
5CG9iGy7GflI8jXkp8gjyVPWll5SttWWfDz5RvLz5B/I09eRXkG23Zl8Krk/
+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
XzPzI+HfZFvZHkl3l231JJ9Nvpv8Fnk0eZ4I6bVl2/3JF5IfIH9AHvexdBfZ
dkPyoeTLyY+RPyVP8kS6m+oqafYc8h4Nb6E6xn3e4vnj4KNUh3j1GxRgw9eq
tv1q1zs3Gf6favdr+ZyeTYO/NvtnwVM91e0DL216Lryd6flw2/RC+CbTi+EX
TS+FfzS9HJ7xme6V8IqmV8O7mPaFTzPtBw8wvR4eanoj/IfpzfDsz0Vb1WXb
vcjnkAeR3yH/Q57vhfQ6sq2B5IvID5E/JI//UnpB2VZjcm/yleTHyZ+TJ42U
Xky23ZJ8DLkf+RnyN+RpXkkvI9vqQD6RfAv5JfLP5JleS68s2+5KPoN8B/kN
8p/kOd9IryHb6kM+l3wv+V3yv+T530qvJ9seRL6EPJg8gjzBO+mFZNtNyIeT
ryI/Qf6CPPl76cVlW63Jx5KvJz9L/o487Qfp5WTbHcknk28lv0L+hTzLR+lV
ZFvdyWeS7yS/SR5FnuuT9Fqy7b7k88n3kd8ntz5Ld5Zt1ycfTL6U/Aj5Y/JE
X6QXlm01Ix9Bvob8JHkkeYqv0kvKttuQjyffQH6e/D15+m/Sy8u2OpNPIfcn
v0r+jTzrd+nusu0e5LPJd5HfIv9NnueHdA/ZVn/yBeQHyMPJ4/6UXkC21ZB8
CPly8qPkT8kT/5LuJttuTj6K3Jf8P/JX5KmipJeSbbUjn0C+ifwC+UfyDL+l
V5Rte5JPI99OHkr+nTx7tPRqsq1e5D7kQeS3yf+Q5/0jvY5sewD5IvKD5A/J
48VILyjbbkTuTb6C/Dj5M/Kkf6UXlW21JB9N7kd+mvwNeWrLSXgZ2XZ78onk
m8kvkX8izxRHeiXZVlfy6eQ7yK+T/yTPEVd6Ddl2b/K55HvI75LHkOePJ72u
bGsQ+WLyYPJH5AniS3eVbTUhH0a+ijyE/AV5sgTSi8u2W5GPJV9Hfpb8LXna
hNLLyrY6kk8i30p+mfwLeeZE0qvItruRzyQPJL9J/os8V2LpNWVbfcnnke8j
v0duJZHuJNuqT+5FvpT8MPlj8oRJpReWbTclH0G+mvwk+UvyFMmkl5BttSEf
R76B/Bz5e/J0yaWXl213Ip9Cvo38KvlX8qwppFeVbfUgn0W+izyM/Dd57pTS
PWTb/cgXkO8nDyePk0p6Adl2A/Ih5MvIj5I/IU+cWnoR1SX2PwottA3eXHXP
Y39vdQ6Aj1S98kyu8EU74b6qL12p+vhsEPwU9t3u/OL3Pvgr1aUeTXhT9BA8
ZRq17+Xaj92OwEupXvnh+Ldlx+FtVV/68Sjq4kn4hDT6fGfgG02fh18wfQn+
wfQVeIa0uq/BK5i+Dvc0fRM+1fQt+HbTd+DXTN+DfzcdDs+W7l+7P4RX021H
wHvqDnkC99FtPYfvNte/hN8217+CR5vr38DzptfXv4fXNv0JPsD0V/hC09/h
B03/hD8wHQWPl0F3NNzFdAy8kWlrs/KhpuOqtlaYjg8/Zjoh/JnpxPAkGXUn
gxc1nRLewnRq+GjTaeFrTaeHnzadEf5atpU6k9O/zz9lgJdWrT6/tAdttVeN
z0fFup1J//eI9c2q8fmpWL+o9zWI9U96X8lYz5j5374ssV4psz5PrHfJ/G/f
i9jzT8+sz4e2AzLr88X6db1vRaz/0PvsWM+RRZ8v1qtn0eeL9d5Z9PlifU4W
fb5Y35NFvD/tO7KtGPJ8WaXXlW0PJF9Mfoj8EXn8bNJdZduNyYeRryQPIX9O
niy79GKyrVbkY8jXkZ8hf0ueJof0srLtDuSTyLeQXyb/TJ45p/TKsq1u5DPI
A8lvkP8iz5lLek3Zdh/yeeR7ye+R/yV3yi29nmzLi3wJ+WHyCPKEeaQXkm01
JR9Ovpr8BPlL8uR5pZeQbbcmH0e+nvwc+TvydPmkl5NtdSKfTL6N/Ar5V/Is
+aVXlW13J59FvpM8jDyKPLeT9FqyrX7k88n3k98nj+Ms3Vm21UD1+oEfQupm
hg9WHbVwT5MDOeDLVDc5MCIifz74EdVb71f0WugCf2L2ucETFXD69/ntYvAi
qvH575LwZgX0fBn4SDNfDr7GzFeEnzLzVeCRqpeqN7SV0sXRbkUcb1XhJVX/
d8rxhrbaqm6n3tzh41V/VG9oa6PqGdMdb9Xg51XnVG/V4R9U71VvaDt9QUc3
qO94qwGvoPrJY8cb2u6seqR6qwmfqjp1KsdbLbi/6s2bHG9o65rqTt6htTLV
hn9T7ZGpo3doXXg2V/X4giPXz24Ad1ed2cG1GsN7uur3TzP4bNWRq4deKd8S
vlv1lfIvVw9tA7+lev+tdv12tIdHq1bjLzvB8xRy9JTU1RPn6Qqvrbr/jn23
2vWA91ed/ezg7Gd7wRcW0vfvCz+gGt9f1g/+QDW+n6w/PG5hp3/fPzYA7qIa
3582EN5QNb4fbRB8qGp8/5kXfHlhfb8h8GOF9f2Gwp8W1vfzhicpou83DO5W
RN9vOLxFEX2/EfBRRfT9RsLXFtH3Gw3/T7b1mjyVm/TSqu+827103Rh4O9UJ
s+a7EDMObqsu5bH4T3sbvkl11yEJih+aBL+oer7v8O4Zp8I/qj524eWyodPh
GYs6+u33NhevzYRXVK3WF/GBd1Fdp3HFErPnwqepHj4moEfkfHiA6o1bcqyo
tQgeqvr6jbmX1i+B/yiqH89yePZi/9p9Jby6bns1vJfuEF/4HN3WOniQuX4D
/I65fhP8j7l+CzxfcX29P7yObGsg+SLyQ+QPyeOXkF5QttWY3Jt8Jflx8ufk
SUtKLybbbkk+htyP/Az5G/I0paSXkW11IJ9IvoX8Evln8kylpVeWbXdV/blT
ePXqAfAZqpuVefMoLBC+Q3VQiqixfXbDb6hO/Txx1j974D9Vex3JdGD+fnjO
Mo6+tsi5Rf5D8Bqqi/Ur/enAYXgf1fOr15xb/xh8ruqPWZoXehQC36u6yacu
54acgt9VHXjOq0fCM/C/qlP6TYi78hw8f1n1+8OIuWuLXITXU32l0ZpKJy7D
B6l2cw642+IafInquX+Ch0dehwerfnvzfLqxYfCIsvr3r9vwBOX070934IXK
6fffPXgT2dZw8lXkJ8hfkCcvL724bKs1+Vjy9eRnyd+Rp60gvZxsuyP5ZPKt
5FfIv5BnqSi9imyrO/lM8p3kN8mjVB9xj3OoS6znquRon48h9c4/hNdS3cnP
Di/2FN5XtVsT94HLX8LnV9L73sL3mf4Av2/6M9yqrPsr3Nn0d3h90z/hg01H
wZeqxvMrtHVENZ5/xfpjM/8bnqiKnkfbhavo+VhvVkXPR8NHmHm0tcbMx/pJ
M/8HHmnm0XaKqno+1ktW1fMx8DZV9TzaGm/mY32Dmf8LP2/m0fZ7Mx/r6d31
vLVFeXl3PY+2Orvr+VifYubjwP3NPNq+auZj/ZuZjwvPWk205S7b7kE+m3wX
+S3y3+R5qkv3kG31J19AfoA8nDxuDekFZFsNyYeQLyc/Sv6UPHFN6W6y7ebk
o8h9yf8jf0Weqpb0UrKtduQTyDeRXyD/SJ7BQ3pF2bYn+TTy7eSh5N/Js9eW
Xk221YvchzyI/Db5H/K8daTXkW0PIF9EfpD8IXm8utILyrYbkXuTryA/Tv6M
PGk96UVlWy3JR5P7kZ8mf0Oeur70MrLt9uQTyTeTXyL/pPptid/bqyWAZ2rg
6JpFMhcISAyvpHp1gdLrMyaHd1X9NU+zHBNTwaerrpd90PI3aeE7VK/P6JOu
VUb4ddVRqbfNDckC/6m6WbIzSQrlgOdo6OitCZ5OWZIbXqOhPl9+eG/Z1lzy
PeR3yWNUN6sbdDSrMzx/I/Xn9/EXk8Nd4HVVO5fJVs+3EHyQ6vkBjVN7usEX
q47KO+VWnuLwYNXdVxxc/bQk/JHqK6nedd1UBp6gsaPLTMtTsFd5uKtqv+iW
H1wqwZuoTjp01r7XVeDDVHu/OjYmoBp8leqHnb9UG1gTHqK6zq0CiYvVhr9Q
HdSgw5VPdeHJmjg6+6n5i/c0gBdXPa386XbDGsNbqf6481fuss3gY1W3cXZ7
+bMFfJ3qk6u77ghuDT+runC6ZUPHtoO/Vb105sXyVTrC0zbV719PeFnTXeEd
TXeHTzLdE77VdG/4ZdN94V9M94dnbqZ7ILyKaS94N9ND4DNNe8MDTQ+H3zQ9
Ev7L9Gh4rua6x8Jrmh4P72vahs9rrv/8nwjfpxrPDybD75n5qXCrhZ6fBndq
oednwOu30POz4F6mfeBLTc+FHzY9H/7Y9EJ4wpa6F8MLm14Kb2p6OXyE6ZXw
1aZXw0+a9oW/bPnv/GFr4Sla6ce3Dl6i1b95ewO8TSv9eDfBx+l51y3wDXre
2gY/p+fD/OHvzf4AeLrWen8gvHxrvX8XvFNrvT8IPkXPW3vh27T774NfNdcf
gH8184fgWdvo+WB41TZ6/gi8Rxs9fww+S7cdAt9l/BQ8zPhp+G/j5+C52+r7
nYd7tNX3uwjv11bPX4YvMPNX4PvN/DV4uJm/Do/Tzunf5/tuwAuoxuf3wuAN
VOPzebfhQ1Tj83d34cva6X334UfNvnD4E7PvITxxe70vAl6kvd73BN68vd73
DD7S9Au4r+lI+CnTr+GvTL+Fp+yg+z28lOmP8LamP8EnmP4M32j6G/yC6Z/w
D6aj4Bk66o6GVzAdA/c0bW1VPtV0XNXWdtPx4ddMJ4R/N50Ynq2T7qTwaqaT
w3uaTgn3MZ0avtt0Wvht0+nh0aYzwvN21p0ZXtt0VvgA09nhCzvrj7+c8IOd
9cdnbvgDM58PHs9TzzvBXTz1fAF4I0897wofaroQfIXpwvBjpovAn5l2gyfp
orsovKjpYvAWpovDR5suAV+rev1st+BItHVaNV7PLwl/rTpSDZSCp+7qaB/1
An9peGnVeL2/DLy96uu1HAvKwm3V6tMFHcvBN6vG5wPKwy+qVpe7VYB/Uo3P
L1SEZ+ymz1sJXqmbPi/a7tJNn7cyfHo3fd4q8IBu+rxV4de76fO6w3900+et
Bs/RXZ+3Orx6d33eGvDe3fV5a8LndNfnrQXf012f1wN+R7YVQ56vh/S6su2B
5IvJD5E/Io/fU7qrbLsx+TDyleQh5M/Jk/WSXky21Yp8DPk68jPkb8nT9JZe
VrbdgXwS+Rbyy+SfyTP3kV5ZttWNfAZ5IPkN8l/kOftKrynb7kM+j3wv+T3y
v+RO/aTXk215kS8hP0weQZ6wv/RCsq2m5MPJV5OfIH9JnnyA9BKy7dbk48jX
k58jf0eebqD0crKtTuSTybeRXyH/Sp5lkPSqsu3u5LPId5KHkUeR5/aSXku2
1Y98Pvl+8vvkcQZLd5ZtNSAfTL6M/Aj5E/JEQ6QXkW03Ix9Jvob8FHkkecqh
0kvKttqSjyffSH6e/AN5em/pFWTbncmnkvuTXyP/Rp5tmHR32VZP8tnku8lv
kUeT5xkuvbZsuz/5QvID5A/I446Q7iLbbkg+lHw5+THyp+RJRkp3k221IB9F
vpb8P9VN1i5L+Lo+/LXqiPQ94q9uBk81ytFes0rEbdQWXnqUvt4T3k41nh91
hduq8fyrO3yTajxf6gW/qBrPx/rAP6rG86f+8Iyjnf49PxsIr6gaz6cGw7uo
xvO1ofBpqvH8ajg8QDWev42Eh47W5x0D/zFan3ccPPsYfd4J8Opj9HknwXuN
0eedAp8zRp93OjxojD7vTPidMfq8PvA/Y/R558LzjdXnXQCvM1afdxF84Fh9
3qXwRarx94UV8EOq8feF1fCHZt4PHn+cnt8ALzhOz2+GNx6n5/3h3qYD4CtN
B8KPq8bXm+yCP1eNrycJgicd7/Tv61P2wYupxtefHIC3VI3PBwfDx6jG54OP
wP3G6/sdh58Zr+93Av5mvL7fKXiaCfp+Z+BlJuj7nYN3mKDvdxE+cYK+32X4
lgn6ftfgl3S7h8I/67avwzPZ/zrkBryybisM3lW3+y34DN32bfgOc/0d+A1z
/T34T9lWzonSa8i2+pDPJd9Lfpf8L3n+SdLrybYHkS8hDyaPIE8wWXoh2XYT
8uHkq8hPkL8gTz5FenHZVmvyseTryc+SvyNPO1V6Odl2R9XX07Tr2TTWJ6uO
GfvIL/oBfKtql8ju97c8hl9R3aL56wzNn8O/qB5/bFCTmEh4lmnq13PBb7O2
vYVXUX1z8ejTLT7Cu0/T9/8Kn6nb/gHfafw3/KbxGHiU8bjblOearn8/iafa
qjVd/34SH953up5PCJ9v5hPB95n5xPD7Zj4p3Jqh59GW8ww9H+v1Z+j5ZPDB
Zh5tLzXzsX7EzCeHP5ZtJZopvbBsqxn5CPI15CfJI8lTzJJeUrbdhnw8+Qby
8+TvydPPll5ettVZtfOVuTP3pIBPUZ2+19n/7qaD+5v5rPCrqvF6Znb4N9V4
/TMnPKuP07/XN/PA3VXj9dB88B4+ep8zfLaP3ucC3+Wj97nCb5l9ReC/zb6i
8Dxz9L4ScA/ZVn/yBeQHyMPJ486VXkC21ZB8CPly8qPkT8kTz5PuJttuTj6K
3Jf8P/JX5KnmSy8l22pHPoF8E/kF8o/kGRZIryjb9iSfRr6dPJT8O3n2hdKr
ybZ6kfuQB5HfJv9DnneR9Dqy7QHki8gPkj8kj7dYekHZdiNyb/IV5MfJn5En
XSK9qGyrJflocj/y0+RvyFMvlV5Gtt2efCL5ZvJL5J/IMy2TXkm21ZV8OvkO
8uvkP8lzLJdeQ7bdm3wu+R7yu+Qx5PlXSK8r2xpEvpg8mPwReYKV0l1lW03I
h5GvIg8hf0GebJX04rLtVuRjydeRnyV/S552tfSysq2O5JPIt5JfJv9CnnmN
9Cqy7W7kM8kDyW+S/yLP5Su9pmyrL/k88n3k98ittdKdZFv1yb3Il5IfJn9M
ntBPemHZdlPyEeSryU+SvyRPsU56CdlWG/Jx5BvIz5G/J0+33tEed/943C0L
L6+62IvmRV9UhndSnfnLtkxfasCnrNfX14Nv0203gF813hj+1XhTeNYN2lvA
q+q2W8F7GG8Ln2W8PXyX8U7wMOOe8N/Gu8Fzb9TeA+6h2+oN72e8L3yB8QHw
/cYHwcOND4HH2aTdG15AtzUC3sD4KPgQ42Phy4yPhx81PhH+xPhkeOLN2qfB
i+i2Z8CbG58NH2l8DtzX+Hz4KdXqrzd9F8JfqcbXiyyGp9zyb959GbzUln/z
/ivgbbf8m8+wGj5Bz9u+8I16/rUf/IKeb7kB/kHPh2yCZ9j6b951K7zC1n/z
S/zhnlv1+XfAp+r5vjvh2/V82G74NT3vvhf+Xc/774dn26bPfwhebZs+/2F4
z236/EfhPnq+ZQh8t54POQm/reddT8Oj9fySs/C8/vr8F+C1/fW+S/AB/vp8
V+ALzXwo/KCZvwF/YObD4PG26/k7cBfT9+CNTIfDh5p+CF9hOgJ+TLX6cdkF
nsCfqVY/T7vRM3iSAKfYn589/AW8qGr187LXRMJbqFY/H/u/1/DRqtXlb9/C
16oOSldxd7oP8NOq8fO7P8Ffq8bP6/4CT73D6d/P5/4GL60aP4/7B7y9avz8
7V9we4d+PNHwzTv044mBX9yhH4/lr/zTDv144qq2MwbqxxMfXilQP56E8C6B
+vEkhk8P1I8nGTwgUD+eFPDrgfrxpIL/CNSPJw08x079eNLBq+/UjycDvPdO
/Xgyw+fods8K36Pbzg6/ozskJzzGXJ8Hnm+Xvj4fvK5u2wk+UHdIAfhi3ZYr
/JC5vjD8kbneDR5/t76+GNxVt1US3li3e2n4MN12WfhKc315eIi5vhL8ubm+
CjxZkL7eHV5Md0h1eCvdVi34GN3uteHrzPV14WfM9fXhb831jeBp9ujrm8DL
6rabwTvoDmkBn6Tbag3fYq5vC79srm8P/2yu7wjPvFdf7wmvrNu9K7ybbrs7
fIbukJ7wQHN9H/gNc30/+C9z/QB4zn36+kHwmrqtIfA+ut3R1jzddqzvNdfH
+j1z/VD4X3M92nLar6+P9Xq6Q2LdS7flDV+i2x1tHTbXx3qEuT7WEx7Q1w+D
F9Ltjraa6rZjfbjukFhfba4fDj8h23pJnvyg9BKy7dbk48jXk58jf0ee7pD0
crKtTuSTybeRXyH/Sp4lWHpV2XZ38lnkO8nDyKPIcx+WXku21Y98Pvl+8vvk
cY5Id5ZtNSAfTL6M/Aj5E/JER6UXkW03Ix9Jvob8FHkkecpj0kvKttqSjyff
SH6e/AN5+uPSK8i2O5NPJfcnv2Z6PPybbhttZQvRPgHurttGWz2N2/DZxtHW
buMT4beMo61o45PgeU5oR1u1dVuT4f2No62FxqfAD8i2HpDHPSndRbbdkHwo
+XLyY+RPyZOcku4m22pBPop8Lfl/5K/JU/0nvbRsux25Tb6J/CL5R/KMp6VX
lG11IZ9GHkAeSv6DPPsZ6dVl273I55AHkd8h/0Oe76z0OrKtgeSLyA+RPySP
f056QdlWY3Jv8pXkx8mfkyc9L72YbLsl+RhyP/Iz5G/I01yQXka21YF8IvkW
8kvkn8kzXZReWbbdlXwG+Q7yG+Q/yXNekl5D9cayY8d8nwbvo/rFtcgyP2bC
56p26dvy8w8f+F7VfeOd3PFzHvyu6oDVbn1+LYT/Vf2+9Kr8UUvg+S87usTV
RBFRy+H1VHv39l71exV8kOr9cR63ivaFL1H9c2XDtH/WwYNVVygVfPnPRniE
6rGXnWfGbIEnuOLoYz0X1fzrDy90RT++QHgT2dZw8lXkJ8hfkCe/Kr24bKu1
6grbm5UtH+tjVfe3xr9yDYKvV+3bctuq7PvhZ1Vf8b/ZMGUw/J3Zdwye9pqj
5z4tN/fpcXg51fj/yZyAd1SNv/+fgk9WXU5dcBq+VfU5x/jgs/ArqvH6wXn4
F9XP1AUX4VlCHT1E3eAyvEqoPs9VePdQfZ5r8Jmh+jzX4TtD9Xluwm+G6vPc
gkeF6vPcgee6rs9zD17ruj5POLzvdX2eh/D51/V5IuD7TL+A3zf9Fm7d0P0e
7mz6I7y+7pBP8MG67S/wpbrdv8GPmOt/wB+b63/CE93U10fBC+t2j4Y3023F
wEfoDvkLX2Ouj7Nd+UlzfTzVVqS5PgE8RZi+PiG8pG47MbyNbvek8PG6reTw
Darx9Usp4edV4+ub0sDfq8bXP6WDp7/l9O/rozLCy6vG109lhndWja+vygaf
ckvfLyfc/5a+X2741Vv6fvng327p+znBs97W93OBu9/W93OF97it71cEPvu2
vl8x+C7ddnH4LeMl4b+Nl4LnuaO9DNxDt10W3t94efgC4xXgB4xXgocbrwyP
e1d7VXgB3bY7vKHx6vAhsq3l5EfJn5InvifdTbbdnHwUuS/5f+SvyFPdl15K
ttWOfAL5JvIL5B/JM4Q7+nPWC/1casMrqp6m/kUDuKdqxTubwqep3rXuyLTP
reDbVdccleJ56Q7wUNV3mnSqMaoL/Lvq/i471x3pCc/+QN+/P7ya6QHwXqYH
wn1MD4IHmfaC3zY9GP7H9BB43oe6h8LrmPaGDzA9DL7I9HD4QdMj4A9Nj4TH
e6R7FLyg6dHwRqbHwL1Nj4WvMD0Oftz0ePgz0xPgSSN02/Cisq2W5KPJ/chP
k78hT/1YehnZdnvyieSbyS+RfyLP9ER6JdlWV/Lp5DvIr5P/JM/xVHoN2XZv
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
fgGdDc9R0NKWr/4JL8Orq1Zfbh/DfVSry/EzfLrqdVMtOzZ8u2p3dcCGX1et
vr0GGv5dtTq+oYbnL2RpxSMMr6s6Sk1oeG/V6tt5nOGzVKsvl7/h+1Sr7QQY
flt1h3eWGQz/rfqH5a/PDMOLFrb0MnVghjdWXd1y+XMMH6j6gavlO8jwENWT
1BfI8EOqi1i+HZca/lB1hOW4Vxguili6p/qGMLyUalvLy8M6w1uq3mr59t9o
+AjVzdQ3oOHLVL9XB2D4SdVzV1u+ooY/U11BfcMbnr6opW+oAze8nOqRluM6
ZHgH1bnUXzDDx6k+rL7Ahq9V3cXy7XvG8HNF9eud4W+L6tc7w7M46Nc7w10d
9Oud4V0c9Oud4QEO+vXO8E0O+vXO8MsO+vXO8M8O+vXO8FzF9Oud4TWK6dc7
w3sU0693hs8opl/vDN9ZTL/eGR5TTL/eGZ5YTL/eGV6guH69M9y9uH69M7xP
cf16Z/ic4vr17iR5GG9xB/wPeLES3JvwFoPBF4IfAX8EntaRe2neojX4SPAV
4KfAX4D/V5J7Bd6yI/gE8HXgF8DfgWcrxb0Kb+EFPgV8C/gV8ATw3KW51+It
fcEDwXeB3wRPAi/kxL0+b9EPfC74AfC74Kngxctwb8ZbDgFfDH4U/Am4jTP3
MrxlG/DR4CvBz4C/BM9YlntF3sITfCJ4KPhF8A/g9uW4V+MtvcGngm8Fjwb/
Cp63PPfavEVP8CDwPeCx4D/BC1fg3pC37A8+H/wg+H3wv+COFbk35y2GgS8B
Pw7+FNzOhbszb9EOfAz4avAI8NfgmSpxr8RbdgKfBL4B/BL4R/Aclbm78RY+
4NPAt4NfA/8Ons+Ve13eshf4LPC94LfBf6mWqwZt8YsgL1pF/ff+mvzz6gJ5
I9WbxbL2Ay+TD1R92HXXts/XyBeovtI3InVkLPkh1Y9WxnVMvkP+QPXn6Pc7
/B+Si6p6/XjykqqN/72BvKVqej/7Jflw1fR++BvyZarp/e935CfM+T6SPzPn
+0yerpqeL4G8XDU933fy9tX0fInk46rp+X6Sr6mm5/tNfs6cL4X8jTnfP/Is
bnq+NHuUV3bT89mqFl3c9HzpyCe76fn+I9/kpufLRB5lzpeF/LM5nz15zuql
rL9fm4O8hmr6/dtc5N1V0/vVechnqKbf381HvkM1/X5vAfIY1fT+eCHyH6rp
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
v4Pnb8a9Lm/RG3wW+D7w2+C/wYs2596YtxwIHgJ+CPwhuGjBvRRv2RJ8BPgy
8JPgz8DTt+RejrfoAD4OfC34OfC34FlacXflLbuAB4BvAr8M/hk8V2vuNXiL
HuAzwHeCx4Anghdow92dt+wDPgc8DPwO+B/wYm25N+EtBoMvBD8C/gg8bTvu
pXmL1uAjwVeAnwJ/Af5fe+4VeMuO4BPA14FfAH8Hnq0D9yq8hRf4FPAt4FfA
E8Bzd+Rei7f0BQ8E3wV+EzwJvJAH9/q8RT/wueAHwO+Cp4IX97R05ikjv0s/
8maqK9dMf+1ib/Ihqr0SV2/N2J98sWoZ5iLbDiI/qnrroItdlwwlf6I6upSX
6/0R5DadLP3j2efMRcaQl1FdYO301z3Hk7dR7d4lX8Q2f/LRqvvm3LPyYwD5
StVzr9cfVWka+RnV4bPutBo7k/yl6geNBpU6EUyesbO+vrnkFXkLT/CJ4KHg
F8E/gNt34V6Nt/QGnwq+FTwa/Ct43q7ca/MWPcGDVN8Y3iH51ULyPaavII9V
fXjIw8NDVpH/VD3Ukg/XkBf2srRj80WOzdeTN1T9SD1hA3l/1YvUgM3k81W3
UH+wlfygl15vB/l9L73eLvK/Xnq9PeSO3nq9MPLm3nq9A+TDvPV6h8iXeOv1
jpAf99brHSd/6q3XO0lu102vd5rcuZte7yx5u256vfPkY7rp9SLJV3fT60WR
R3TT610lf91Nr3eNPJOPXi+GvJKPXi+WvJOPXu82+SQfvd5d8g0+er375Jd8
9HqPyD+qrnD87cY5T8hzdLd099E3G+d9Ru6meq4a8ILcR7UaXuE1+TTVKo+/
Jd+uOp+PZYIP5NdUN8lr+YNP5N9Vq+l9Esjz9bA0Pf0beV3VsRYenUjeq4fe
70/yWT30fn+T7+2h95tKfruH3u8/8l899H7T7lVe1Ffv11a1bOSr95uefKCv
3m8G8gW+er+ZyQ/56v1mJX/gq/ebnVz46f3mIi/JW7QEHw6+DPwE+DPwdD25
l+Mt24OPA1+j+uRIx1Pt85OfU+2UfM7pWRHyN6qX+PstGe5InqWXfr4zeWXV
9P8nX5a8i2r6/5MvTz7ZHF+RfJM53oU8yhxfmfyzOb4Kec7euquR1zC7Onl3
s2uSzzC7NvkOs+uSx5jtTv7D7AbkBfrobkRez+wm5H3MbkY+m7cIM7sleZxu
2Yr8j+ltyB36shZNeMtB4AvBD4M/Ak/Tj3tp3rIV+Ejw5eCnwJ+D/9efe3ne
oiP4ePB14OfB34FnHcC9Cm/ZFXwK+GbwK+BfwHMP5F6Tt/AFnwm+C/wGeBJ4
wUHc6/OWfcHngu8HvwueAl58MPemvMUQ8EXgR8Efg9sM4e7EW7QBHwW+Evw0
+EvwDEO5V+QtPcAngq8Hvwj+Htx+GPeqvIU3uATfCn4V/Ct4nuHca/OWfuBB
4LvBY8GTwQuP4N6At+gPPg/8IPg98L/gJUZyb85bDgVfAn4M/Cm47Sjuzrxl
W/Ax4KvAI8BfgWcazd2Ft+gE7g++ATwS/CN49jHc3XjLbuDTwLeBXwP/Bp5v
LPc6Y63/fY8zvNdY/d//tuTBerxsR75Xj/dsT35Lj3fuQP7LnL8jeZFxen5q
0Wicnt+DfMA4Pb8n+QI93rMTebge79yZ/IEeL7qQ/zPnpxYlx+v5u5K3GK/n
9yIfPl7P702+VI937kZ+Qo8XPuTxenwctUg3Qc/fnbzsBD1/D/L2E/T8vuRj
9XhnP/I1erzoSX5WdV/1oBZvVEerh+GZJ1q6iqvl0Yu8supVKy0Patl5op6v
N/nkiXo+arlxop7P8Chzvj7kn8z5qEVOfz1fX/LqqnuWHtuzNLXorvpCm48X
2hg+XbWThccavkP17LX3Zq01/Lrqj+oJhv9QrZ7+0fD8kyx9IGet/Tn7kddT
ncuStahlb9Vq+p6Gz1Ztmf3eLMP3qa5tGb7f8DjV69QAw39P0tfTn9xhsr4e
atl4sr4ewwdN1tdjeMhkfT2GH56sr8fwh5P19RieJkBfzwDyUgH6eqhFqwB9
PYaPCNDXY/jyAH09hp8M0Ndj+PMAfT0DydNPYS3K85YdwMeDrwU/D/4WPKvk
7spbdAUPAN8Mfhn8C3iuqdxr8pY9wGeC7wS/AZ44Vf/9HkxecJr++z2M3H2a
/vs9krzvNP33ewz5HD3eeTz5fj1e+JPf0ePjJpOnmPNL8mLT9fzTyZtO1/MH
kg+eruefRb5IjxdzyY+ots9mecwnf6y6iHqEkKedYekK5S2PReROqmurxxLy
1qpbtbQ8lpGPUu2lHivIV6geOMDyWEV+WvV49VhD/kJ1cJDlsY48w0xLL1OP
UPIKqrdusTw2knuoDlePzeQTVF84b3lsJV+vOlY9tpNfUP38meWxk/y96gT1
2E2eLVCfxz7yqoH6PPaTewXq8zhILgP1eRwi3xKoz+MI+dVAfR7HyBMC9Xmc
IM8TpM/jFHmtIH0eZ8j9gvR5nCUPDNLncZ58d5A+j4vkN4P0eVwiTw7S53GZ
vFCwPo+r5A2C9XlcI+8XrM8jhnxesD6PWPIDvMU98FTwErO4N+MthoIvBj8G
/gTcdjb3MrxFW/DR4KvAz4C/As84h7sLb+kJ7g8eCh4J/gE8+1zu1XiLbuBT
wbeBR4N/A887j3sd3rIneDD4HvBb4D/Bi8zn3pC3GAA+Hzwc/D74P3DHBdxb
8JbDwJeCHwePN7vcPuV2IaxFWd6yHfhY8NXgZ8Ffg2deyL0Sb9EZfBL4RvBL
4J/AcyziXp239AGfDr4d/Dr4d/D8i7nX5S16g88C3wd+G/w3eNEl3BvzlgPB
Q8APgT8EF0u5l+ItW4KPAF8GfhL8GXj6ZdzL8RYdwMeBrwU/B/4WPMty7q68
ZRfwAPBN4JfBP4PnWsG9Bm/RA3wG+E7wGPBE8AIrubvzln3A54CHgd8B/wNe
bBX3JrzFYPCF4EfAH4GnXc29NG/RGnwk+ArwU+AvwP9bw70Cb9kRfAL4OvAL
4O/As63lXoW38AKfAr4F/Ap4Anjuddxr8Za+4IHgu8BvgieBF1rPvT5v0Q98
LvgB8LvgqeDFQ7k34y2HgC8GPwr+BNxmA/cyvGUb8NHgK8HPgL8Ez7iRe0Xe
whN8Ingo+EXwD+D2m7hX4y29waeCbwWPBv8Knncz99q8RU/wIPA94LHgP8EL
b+HekLfsDz4f/CD4ffC/4I5buTfnLYaBLwE/Dv4U3G4bd2feoh34GPDV4BHg
r8EzbedeibfsBD4JfAP4JfCP4Dl2cHfjLXzAp4FvB78G/h08307udXnLXuCz
wPeC3wb/BV50F/dGvMVA8AXgh8AfgIvd3EvyFi3Bh4MvAz8B/gw83R7u5XjL
9uDjwNeAnwN/A55lL/fKvEUX8Mngm8CjwD+D59zHvQZv2R18BvgO8BjwH+AF
wrjX4y36gM8GDwOPA/8D7rCfexPechD4QvDD4I/A0xzgXpq3bAU+Enw5+Cnw
5+D/HeRenrfoCD4efB34efB34FnDuVfhLbuCTwHfDH4F/At47kPca/IWvuAz
wXeB3wBPAi94mHt93rIv+Fzw/eB3wVPAix/h3pS3GAK+CPwo+GNwm6PcnXiL
NuCjwFeCnwZ/CZ7hGPeKvKUH+ETw9eAXwd+D2x/nXpW38AaX4FvBr4J/Bc9z
gntt3tIPPAh8N3gseDJ44ZPcG/AW/cHngR8Evwf+F7zEKe7Necuh4EvAj4E/
Bbc9zd2Zt2wLPgZ8FXgE+CvwTGe4u/AWncD9wTeAR4J/BM8ewd2Nt+wGPg18
G/g18G/g+c5yr8Nb9AIPBt8Lfgv8F3iRc9wb8ZYDwBeAh4M/AP8HXvI89xa8
xXDwpeAnwOPB013gXpa3aA8+FnwN+FnwN+CZL3KvzFt2Bp8MvhE8CvwTeM5I
7tV5i+7g08F3gF8H/wGe/xL3erxlb/DZ4PvA48B/gztEcW/MWwwCDwE/DP4Q
PM1l7qV4i1bgI8CXg58Efw6e/gr38rxlB/Dx4GvBz4O/Bc96lbsrb9EVPAB8
M/hl8C/guaK51+Qte4DPBN8JfgM8EbzgNe7uvEVf8Dng+8HvgKeAF7vOvSlv
ORh8EfgR8MfgaWO4O/GWrcFHga8APw3+AjzDDe4VeAsP8Ang68EvgL8Hz3aT
e1Xe0gtcgm8BvwqeAJ4nlnst3sIPPBB8N/hN8GTwQre4N+At+4HPAz+gelHM
8bO5qpLfU30ny9aofl3JU1UXarUw5vhk8hK3Le07e9KdLBvJm6m2jH7sG0k+
VPXHdB1fHnxPvlj1iuLrx0xPH6b8mOoTZ3P92p1ftXyi+rGasCy5bZzeX13y
MmbXI29rtjv5aLPrk68yuwH5GbMbkr8yuxF5xjuWVr9O40ktXFTvUr9QY7jn
HT2+Mbm/OZ5ahprjDY80xzch/2COpxbZ7+rxhle7q8c3Je92V4+nllPN8YZv
M8c3I482x1OLb+Z4w/Pe0+Obk9e5p8dTy5739HjDg83xLcj36PFxrchvmePb
kv/U42UH8iL39fye5A3vW8c7dyEfcF/P700+X7fsRh5uenfy++bze5D/M+f3
JXd8oJ/vR97igd5fT/JhD/T+e5Ev1eNFH/LjvEU8uN1D7mV5y3bgY8FXg58F
fw2e+RH3SrxFZ/BJ4BvBL4F/As/xmHt13tIHfDr4dvDr4N/B8z/hXpe36A0+
C3wf+G3w3+BFn3JvzFsOBA8BPwT+EFzEcy/FW7YEHwG+DPwk+DPw9M+4l+Mt
OoCPA18Lfg78LXiW59xdecsu4AHgm8Avg38Gz/WCew3eogf4DPCd4DHgieAF
XnJ3V73kbrvu50eR91E92GnfhhRqMUd1wwlZXlUdTR6muuCVQU7DqMUd1d8L
XBm03fA/qi2875nhxV5ZeuPJwG8FxpA3Ua2m86AWg1W3795wwjzDF6q2LH8y
0vAjr/R+x5I/4i3SvuZemrdoDT4SfAX4KfAX4P+94V5B9YQ2Je0cDe+oeuGv
2At+hk9QvXOznLHe8HWqz7Wt0Oix4RdUP/z90KbgOPJ3qr9vmXW+C7XI9tbS
mdu7TV9meBXVjikvG9w23Et17W2L0uYYTz5FtWcH93NtqcUW1UNSP02dZ/gV
1YHbV9e/aniC6nUdm6fJMIE89ztLH/mbFNGEWtRSHbPDcgGG+6p+62FZwPDA
d/o8JpLv4i1ugieBF3rPvT5v0Q98LvgB8LvgqeDFP3BvxlsOAV8MfhT8CbjN
R+5leMs24KPBV4KfAX8JnvET94q8hSf4RPBQ8IvgH8DtP3Ovxlt6g08F3woe
Df4VPO8X7rV5i57gQeB7wGPBf4IXTuDekLfsDz4f/KDqofZrrjTyJ7+vOqFX
Vf9Fk8j/qh555HrZ+Mnkjl8t/SNj/0flp5A3Vz22e5p5/pJ8mOqf+1fVuTyV
fInqiXZVPueZTn5cdUqXa+t6zyB/qjpgd9+2B2aS233T+wsid1ZNP08Gk7dT
TT8/ziIfY46fQ77aHD+XPMIcP4/8tTl+AXmm76WNz8/kDyGvpFp9vMZ1IXkn
1deio6NbLSKfpJo+n7OYfMN363xyCfklPd/KpeQf9XwHl5Hn+GGdL3o5udsP
63yvV5D7/ND7W0U+TXXJ5oscM6wm365a3Z4gxxrya6rV/QsKriX/rpruT7CO
PF+ien0c8vBw+fXkdVWr2x1UCyXvlWhdz30D+axE63rNN5LvTbSu12ET+e1E
63rem8l/JVrX672FvGiSdb0hW8kbJVnXG7uNfGCSPq/t5AuSrOvN2kF+KMm6
3qKd5A+SrOut3kUukq3rbd5NXjLZut6ePeQtk63rHd5LPjzZul7EPvJlydb1
LoeRn0i2rhe7n/xZsnW9hwfI0/20rvfyIHm5n9b1PoWTt/9pXS/pEPm4n/rr
d4R8jWr1cYN31OKc6lvq8wBHyd+oVh9fOHmMPMuv0tbPFxwnr6xafRxiwQny
Lqrp8wonySerVp8n8DtFvkm1+vhDy9PkUaoPhYeHVzlD/lk1fZ4igjzn79LG
5x3SnyWvofqr+jwCteyuWn184sE58hmq6fMN58l3qFYfx9hzgTxG9XL1eYmL
5D9+6693JHmBP9bzGHCJvN4f63l0iCLv88d6HrUvk8/+Yz2PklfIw/5YzyPb
VfK4P9bz+Ekt/vyxnsezaHKHFOt5XL1G3iTFeh7h18kHpVjPY10M+cIU63kE
3SA/nGI9j+E3yR+lWM/DK5Y8Tar1PBreIi+daj2P8rfJW6VazyNPHPnIVP39
cYd8udl3yU+ZfY/8udn3yf/7q/sBeXmzH5J3NPsR+XizH5OvM/sJ+Xmzn5K/
MzuePOs/3c/Iq5j9nLyrarqfB7WYotq4nwn5ZtXq9h6jX5JfUa2GN35F/kW1
yryvyXMLp0/1N6n7f1DLmqrfqRuCvCH3VV1R3XDkLflM1XT/kHfku1TT/Uje
k99QTfv9QJ6kmvZLLQumcbLu9yN5fdW030/kfVXTfj+Tz1VN+/1Cvj+N3i+1
uJtG7zeBPCWN3u9X8uJp9X6/kTdNq/f7nXxIWr3fH+SL0ur9UoujafV+E8kf
p9X7TSK3sdH7TSZ3stH7/Unexkbvl1qOstH7/UW+0kbv9zf5aRu93z/kL230
flPIM9jq/aaSV7TV+6WWHrZ6v3/JJ9rq/f4jX2+r9yv2K79oq/ebRrV8b6v3
Sy3s7fR+05JXtdP7tSH3ttP7tSWXdnq/duRb7fR+05Ff5S2+gudJx702b+kH
HgS+GzwWPBm8cHruDXiL/uDzwA+C3wP/C17iP+7Necuh4EvAj4E/BbfNwN2Z
t2wLPgZ8FXgE+CvwTBm5u/AWncD9wTeAR4J/BM+eibsbb9kNfBr4NvBr4N/A
82XmXoe36AUeDL4X/Bb4L/AiWbg34i0HgC8ADwd/AP4PvGRW7i14i+HgS8FP
gMeDp8vGvSxv0R58LPga8LPgb8Az23OvzFt2Bp8MvhE8CvwTeM7s3KvzFt3B
p4PvAL8O/gM8fw7u9XjL3uCzwfeBx4H/BnfIyb0xbzEIPAT8MPhD8DS5uJfi
LVqBjwBfDn4S/Dl4+tzcy/OWHcDHg68FPw/+FjxrHu6uvEVX8ADwzeCXwb+A
58rLvSZv2QN8JvhO8BvgieAF83F35y36gs8B3w9+BzwFvFh+7k15y8Hgi8CP
gD8GT1uAuxNv2Rp8FPgK8NPgL1QvtK93+NB/5BkKWjqy8pQK4zKRV1D92+PM
1upZyT1UVxz3r8hve/IJqnutrLf8RE7y9aqXn5iSbXIe8guqox+fCaqbn/x9
Qb1+IfJshZys//thYfKqqun9myLkXoWs42VRcqnH73Qg36LHxxUjv6rHixLk
CWY7kucprLskeS2zS5H7mV2aPNBsJ/LdZpchv2m2M3my2WXJCxXRXY68gdnl
yfuZXYF8ntkVyQ+Y7UJ+z+xK5KlmVyYvUVS3K3kzs6uQDzW7Kvlis6uRHzPb
jfyJ2dXJbR101yAvY3ZN8rZm1yIfbXZt8lVm1yE/Y3Zd8ldm1yPPWMzaCdTC
RXe8O7mn7hv1yf11RzQgD9Ud1pA8UndoI/IPukMak2cvrr/fmpBX0z28KXk3
3b7NyKfqbtecfJtu9xbk0bpdWpJ/0+3QijxvCWvbtyavo1u0Ie9pdnvyYLM9
yPeY3Zn8ltle5D9V0/t11KKIo5P1/THDG6qm9xO9yQeopvfvqOV81fR+meHh
qun9xW7k9x31eVGLf47W9R4a7ljSul41H/IWJa3rLaKWw0pa1/tk+NKS1vWa
dyc/XtK63mZqEV9SX18PcrtSun3Jy5rtR97O7J7kY83uRb7a7N7kZ83uQ/7a
7L7kmUvr7kdeyez+5J3NHkA+yexB5BvNHkJ+SXcEtfikWw4lz+Gkv5+GkVfX
LYaT+zjp1z9qMd1Jvz6OIN+ux8uR5Nf1eM9R5N/1eOfR5PnL6PnHkNcto+en
Fr3L6PnHks/S4+U48n16vOd48tt6vPME8t/m/BPJizrr+alFY2c9vz/5QGc9
/yTyED3eczL5IT3eOYD8oR4vppCLsroleSmzp5K3NHsa+Qizp5MvM3sG+Umz
Z5I/MzuQPH053UHk5XQ7BJN30O0+i3ycbt/Z5Gt1yznk53SHziV/qztiHnmW
8vr1cD65q24RQt5FdwS1CNAtF5Jv0u2+iPyy+fzF5J/NXkKeq4LupeQ1dEtq
0cP0ZeQzTKcWO01fTh5jOrVINH0FeYGK2qmFu26xkryP6dRijumryMNMpxZ3
TF9N/sd0alHMRfsa8ia6JbUYbPpa8oWmU4sjpq8jf2Q6tUhbSft68tK8RWvw
keArwE+BvwD/rzL3CrxlR/AJ4OvAL4C/A8/myr0Kb+EFPgV8C/gV8ATw3FW4
1+ItfcEDwXeB3wRPAi9UlXt93qIf+FzwA+B3wVPBi1fj3oy3HAK+GPwo+BNw
GzfuZXjLNuCjwVeCnwF/CZ6xOveKvIUn+ETwUPCL4B/A7Wtwr8ZbeoNPBd8K
Hg3+FTxvTe61eYue4EHge8BjwX+CF67FvSFv2R98PvhB8Pvgf8Eda3NvzlsM
A18Cfhz8KbhdHe7OvEU78DHgq8EjwF+DZ6rLvRJv2Ql8EvgG8EvgH8Fz1OPu
xlv4gE8D3w5+Dfw7eD537nV5y17gs8D3gt8G/wVetD73RrzFQPAF4IfAH4CL
BtxL8hYtwYeDLwM/Af4MPF1D7uV4y/bg48DXgJ8DfwOepRH3yrxFF/DJ4JvA
o8A/g+dsbG37UPIauh02kHfX7bKRfIZu903kO3S320weo9t3C/kP3cO3khdo
Ym25jbye7pDt5H10h+4gn607bCd5mO6IXeRxum/sJv+jO34PuUNTayfsJW+i
W4SRD9Jtv598oW6HA+SHdbscJH+k2z2cPE0zff2HyEvr9j1M3kr38CPkI3XL
o+TLdYccIz+lO/Q4+XPdYSfI/2uur/8keXndN06Rd9Qdf5p8vO6EM+TrdIuz
5Od1258jf6fb4Tx51hb6+i+QV9HtfpG8q+52keRTdPteIt+se3gU+RXd8jL5
F90hV8hzt9TXf5W8pu6waHJf3RHXyGfqvnGdfJfu+BjyG7oTbpAn6Rax5AVb
6eu/RV5ft8Nt8r66XeLI5+p2v0O+X3e7u+R3dfveI0/RPfw+efHW+vofkDfV
HfKQfIju0Efki3SHPSY/qjviCflj3Teektu00dcfT+6kO+EZeRvd4gX5KN32
L8lX6nZ4RX5at8tr8pe63d+QZ2irr/8teUXdvu/IPXQPf08+Ubf8QL5ed8hH
8ou6Qz+Rv9cd9pncvp2+/i/kVXXfSCD31h3/lVzqTvhGvlW3+EF+VXVbdf9n
avFVNd2vOZE8T3sn6/2ik8hrq1a3g96fTO6nmu4v/ZM8SPV9dT/oX+S7Vavb
VY/9TR6rmu4f/Yc8WfVFdQPqFPLCHZys95tOJW+gmu53/Ze8v2q1fM5/5PM6
6OsRB5Qf7KCvh1re66CvJw353w76etKSl+ior8eGvHlHfT225EM76uuxI1/S
UV9POvJjHfX1pCd/2lFfz3/kth76ejKQO3vo68lI3tZDX08m8jEe+noyk68y
Owt5hNlZyV+ZnY08k6due3IXs7OTdzI7B7m/2TnJN5idizzS7NzkH83OQ569
k+685G5m5yPvZnZ+8mlmFyDfZnZB8mtmFyL/pltSi3ydtRcmr6M7nlr00h1R
hDxYd2hR8r26pQP5Ld2+xch/6XYvTl6ki349KEHeSLdwJB+gO55aLNAdUZI8
XHdoKfIHumVp8n+6fZ3IS3bV65chb6HbwZl8uG5Rlnyp2eXIT5hdnjyet0jn
xb0sb9EefCz4GvCz4G/AM3tzr8xbdgafDL4RPAr8E3jObtyr8xbdwaeD7wC/
Dv4DPL8P93q8ZW/w2eD7wOPAf4M7dOfemLcYBB4Cfhj8IXiaHtxL8RatwEeA
Lwc/Cf4cPL0v9/K8ZQfw8eBrwc+DvwXP6sfdlbfoCh4Avhn8MvgX8Fw9udfk
LXuAzwTfCX7DbBfyRN6iYC/u7rxFX/A54PvB74CngBfrzb0pbzkYfBH4EfDH
4Gn7cHfiLVuDjwJfAX4a/AV4hr7cK/AWHuATwNeDXwB/D56tH/eqvKUXuATf
An4VPAE8T3/utXgLP/BA8N3gN8GTwQsN4N6At+wHPg/8APg98FTwEgO5N+Mt
hoIvBj8G/gTcdhD3MrxFW/DR4KvAz4C/As84mLsLb+kJ7g8eCh4J/gE8+xDu
1XiLbuBTwbeBR4N/A887lHsd3rIneDD4HvBb4D/Biwzj3pC3GAA+Hzwc/D74
P3DH4dxb8JbDwJeCHwePB7cbwb0sb9kOfCz4avCz4K/BM4/kXom36Aw+CXwj
+CXwT+A5RnGvzlv6gE8H3w5+Hfw7eP7R3OvyFr3BZ4HvA78N/hu86BjujXnL
geAh4IfAH4KLsdxL8ZYtwUeALwM/Cf4MPP047uV4iw7g48DXgp8DfwueZTx3
V96yC3gA+Cbwy+CfwXNN4F6Dt+gBPgN8J3gMeCJ4gYnc3XnLPuBzwMPA74D/
AS/mz70JbzEYfCH4EfBH4GkncS/NW7QGHwm+AvwU+Avw/yZzr8BbdgSfAL4O
/AL4O/BsAdyr8BZe4FPAt4BfAU8Azz2Fey3e0hc8EHwX+E3wJPBCknt93qIf
+FzwA+B3wVPBi0/l3oy3HAK+GPwo+BNwm2ncy/CWbcBHg68EPwP+EjzjdO4V
eQtP8IngoeAXwT+A28/gXo239AafCr4VPBr8K3jemdxr8xY9wYPA94DHgv8E
LxzIvSFv2R98PvhB8Pvgf8Edg7g35y2GgS8BPw7+FNwumLszb9EOfAz4avAI
8NfgmWZxr8RbdgKfBL4B/BL4R/Acs7m78RY+4NPAt4NfA/8Onm8O97q8ZS/w
WeB7wW+D/wIvOpd7I95iIPgC8EPgD8DFPO4leYuW4MPBl4GfAH8Gnm4+93K8
ZXvwceBrwM+BvwHPsoB7Zd6iC/hk8E3gUeCfwXOGcK/BW3YHnwG+AzwG/Ad4
gYXc6/EWfcBng4eBx4H/AXdYxL0JbzkIfCH4YfBH4GkWcy/NW7YCHwm+HPwU
+HPw/5ZwL89bdAQfD74O/Dz4O/CsS7lX4S27gk8B3wx+BfwLeO5l3GvyFr7g
M8F3gd8ATwIvuJx7fd6yL/hc8P3gd8FTwIuv4N6UtxgCvgj8KPhjcJuV3J14
izbgo8BXgp8GfwmeYRX3irylB/hE8PXgF8Hfg9uv5l6Vt/AGl+Bbwa+CfwXP
s4Z7bd7SDzwIfDd4LHgyeOG13BvwFv3B54EfBL8H/he8xDruzXnLoeBLwI+p
bv3pfk2/SuRPVRfNM/9NTGVy2/WW/la3wZK6VcidVV/sl+S+pyp5W9UrQnZ+
KuhGPkb1wGPdV82uTr5KdZ3nOZr+qkEeodo+06Xv/WqRv1L93NU/9E5t8kyh
lj7UrWLrxnXJXVQHz3zx62A98k6qvfcu31q8Prm/6vJ3W3Zc2IB8Q6i+vkbk
karp8ynU4qNq436y5Nk3WMfLJuRuG5z0/WHJu22wjnduRj5NjxfNybfpdm9B
fs2cryX5N90RrcjzbdTPb0NeR7d7W/JeumU78mDdEe3J95rP70h+SzXdf4pa
/FJN96fyIC+yycl6/ypP8kaq6f5WncgHbNLrdSZfsMk6X98u5OGbrPO16kr+
QM/n6kX+T8+X35u85Ga9v27kLXiL4eBLwU+Ax4On28K9LG/RHnws+Brws+Bv
wDNv5V6Zt+wMPhl8I3gU+CfwnNu4V+ctuoNPB98Bfh38B3j+7dzr8Za9wWeD
7wOPA/8N7rCDe2PeYhB4CPhh8IfgaXZyL8VbtAIfAb4c/CT4c/D0u7iX5y07
gI8HXwt+HvwteNbd3F15i67gAeCbwS+DfwHPtYd7Td6yB/hM8J3gN8ATwQvu
5e7OW/QFnwO+H/wOeAp4sX3cm/KWg8EXgR8BfwyeNoy7E2/ZGnwU+Arw0+Av
wDPs516Bt/AAnwC+HvwC+HvwbAe4V+UtvcAl+Bbwq+AJ4HkOcq/FW/iBB4Lv
Br8JngxeKJx7A96yH/g88APg98BTwUsc4t6MtxgKvhj8GPgTcNvD3MvwFm3B
R4OvAj8D/go84xHuLrylJ7g/eCh4JPgH8OxHuVfjLbqBTwXfBh4N/g087zHu
dVT/sln52N2HvKfqzFXbBIZ3Jw9W7dDXpqKTL/ke1VWWH7272o/8lupmUUNk
tl7kP1V3+1W8zPTe5EWOW3q4872bSX3IG6qe4T1v4sB+5ANUr5jboMST/uTz
Ve8+lXy1/UDycNURn3ePvjiI/L7q20V7Fq4xhPyf6rft8kbuHkrueMLSKVOj
hzoMJ2+h2v7g1LxLRpAPU+34slpE+lHkS1VXz/2xv/9o8uOqWzXZkP3LGPJ4
1b7jOh3vOY7c7qSlR2/P1OvOePKyqoPvR2RqMZG8neo1GceGn/InH6s6rFZZ
n0qTyVervjA43m5LAPlZ1ffWLt2bT5K/Vv3xeovOc6eSZz6lv17TySuppp+P
qUVn1fTz7wzySarp59uZ5BtV08/X1PKSnk8Gkn/S87kGkec4bZ3vNbWofto6
38pgcp/T1vlazSKfflrvbzb5dt7iOvh38PxnuNflLXqDzwLfB34b/Dd40Qju
jXnLgeAh4IfAH4KLs9xL8ZYtdUfMIR+hW84jX6bbfQH5SfP5C8mfmc9fRJ7+
nH7+EvJyut2XkXfQLVaQj9MdsZJ8rfn81eTnzOevJX9rPn89eZbzls5zIGRm
uVByV9XlexfL1HUDeRfVDdWAjeQBqrtGNchzYBP5JtXDJt5a/WQz+WXVgeUs
E2wl/6x6zZMfW922kee6YGm1XO/t5DVUq+lCdpD3UP3UMvzUTvIZqhMt+W4X
+U7VmdQG9pDHqC6m/mAveaLq6qfetR62j7zARUu3URsMI3dXrS4vaj95H9Vq
+z8OkM9RvdCyvWLh5GGqt1mWb32I/I5qNf3Ew+R/VKunbz1CXizS0u8tfOso
eZNIfd7HyQdH6vM+Qb4wUp/3SfIjkfq8T5E/itTnfZo87SV93mfIS1/S532W
vPUlfd7nyEde0ud9nnzFJX3eF8hPXdLnfZH8xSV93pHk/0Xp844irxClz/sy
eccofd5XyCdE6fO+Sr4uSp93NPmFKH3e18jfRenzjiHPdlmf9w3yKpf1ed8k
97qszzuWfMplfd63yLdc1ucdR35Ft7xDnmD6PfLcV7TfJ6+lWzwk9zX7EXmg
2Y/Jd+l2pxY3zfkMT9IdYXihq/r5T8jrq6b701CLfqrp/jVPyeeqpvvbUIsD
qun+N/Hkd1XT/XGekaeqpvvnUMvi0Xo/z8mbRVvXc3xBPiTaut5larE42rre
kJfkR6Ot6+V4Rf4k2rreYWppc826nvdr8jLX9PW9IW+jmt7/eks+WjW9//We
fKUeLz+Sn9HjPT+Tv9TjnRPIM17X838jr3hdz/+d3PO6nj+RfKIeL5PJQ/V4
z1/kF/V45z/kH8z5U8ntY/Tz/5JX0y3EQeXepqdRLaaabkO+1XRb8mjT05F/
NT09ed4b2jOQ19YtM5L3ND0zeZDpWcj3mJ6NPFb1pRGFLo2gFj9Vz39Rff4L
wwvf1OdhT95QdSH1BGrZX/VLy/Dq2cnn39TnSy0Pqh6pnpCD/L7qGmoBavn3
pt5PTnLHWL0fatk8Vu/H8GGxej+5yJfE6v1Qi+Oxej+5yZ/G6v1QC7tbej95
yJ1v6f1Qi3a39H7yko9RTT8v5SNfrZp+/spPHqGafl4qQP5aNf38VZA80209
X2HySrf1fEXIO93W8xUln3Rbz+dAvuG2nq8Y+SVzvhLkH2/r729H8hxx+npL
kbvF6a+/E7lPnD4/Z/JperxzOfLteryoQH5N9wpq8V23S0XyfHesHUUt6ur2
dSHvpfsntZilO6QS+V7dTpXJb+uOoJa/dHdxJS9619oJ1LKR7uAq5AN1O1Ql
X6D7KLU4pLtdNfIHut9SW1729Xm5kZfUna86eUvdYdRyuO5mNciX6Y6nlid0
j69J/ky3fS3ydPetvZ1alNPtXpu8ve571GKc7uF1yNfo/q8u+TndodTyje7q
9cizPLD2DWpZWXd/d/IuukV98sm8xSbwKPDP4Dkfcq/BW3YHnwG+AzwG/Ad4
gUfc6/EWfcBng4eBx4H/AXd4zL0JbzkIfCH4YfBH4GmecC/NW7YCHwm+HPwU
+HPw/55yL89bdAQfD74O/Dz4O/Cs8dyr8JZdwaeAbwa/Av4FPPcz7jV5C1/w
meC7wG+AJ4EXfM69Pm/ZF3wu+H7wu+Ap4MVfcG/KWwwBXwR+FPwxuM1L7k68
RRvwUeArwU+DvwTP8Ip7Rd7SA3wi+Hrwi+Dvwe1fc6/KW3iDS/Ct4FfBv4Ln
ecO9Nm/pBx4Evhs8FjwZvPBb7g14i/7g88APgt8D/wte4h335rzlUPAl4MfA
n4LbvufuzFu2Vd0ldF7fOg3Ix6gefSvl9MyG5KtUL0w3OO/1RuQRqvfWeDgs
TxPyV6qvDm4R1b0peaYPln6z/pjDtmbkLqptbzlN+NKcvJPqYulW3HRrSe6v
um6N9M6yFfkG1d6Dx06Lak0eqXrc+lcP7NuSf1S9JNbDtWs78uwfLb3f7sKc
De3J3VRfr+768l0H8m6qPwzaWLuyB/k01enXZ1860ZN8m2rHWPnpXCfya6rr
2yU0ztSF/Jvq7tV7rOvYlTzfJ0tPHHQ9abUXeR3Vy9fVafvSm7yX6vCbu7eV
8yEPVn3TtpAY0518r+rPbnO6nOpBfkt1xkG/w+z8yH+pLr1uQIY2PcmLfLZ0
o5v3/Jb1Im+k2s+22fEnvckHqA5wO5KjdF/yBapXDSw1aFg/8nDVR9YuPX+k
P/kD1bdvWDY0kPyf6q82o0c3G0Re8ouls7i9iA4ZTN5CtfPADiXvDyEfrrrp
2rOTiw0jX6q69w2XOwOGk59QPdUmtMKBEeTxqtdWyxb0eyR5ugRLHx8Q8LTB
aPKyqu+u+eQ2Zwx5e9U/YrqF3BpLPlZ1dpvotwXHk69RXb5arfq9J5CfVd1i
wM6VuyeSv1Hdb03+bz/8yTN/tfSMmOAWdSaTV1YdmvbnxpkB5J1Vn6ra78+1
KeSTVT/of6djnqnkG1Unr268u/s08ijVuWLCbbdNJ/+k2iWto8+XGeQ5v1m6
ddXFh9wCyaurHtg/bVYZRN5dddDqEX2jgsmnq958Pf60/WzyHaoj0rTL23UO
+XXVj6ucGbZhLvkP1b/7VYh6N488/3dL51291qHyAvJ6ql2vZ54wMYS8t+p2
aSbdPLeQfLbqIVU+lMm0mHyf6tn9vKZ1XEIep3rbqssPVi8l/636/DXLX6hl
5A4/LB0vts8pt4K8sepU17wvR68kH6S6QL/A2qdWkYeorrYqcYndGvLDqjte
6/2p9Vryh6qHi9uNl60jT5No6XmuDdc9WU9eSvXOvgeSSm0gb6U6cmWxtsM2
ko9Qbflu3XZkE/nyRP36toX8pGr69yG1eK6a/v24lTx9kpP135fbyMurpn9/
bifvkKTn20E+PknPRy3XJun5dpKfN+fbRf7WnG83edZkPd8eclfV6p+bufeS
d1VN/97cRx6gx7uHkW/W4z33k1/W4wceIP+ix8uD5Ll+WscvDSev+dM6fuch
8h4/reMjDpPP1OPjjpDv1OPfHyW/oceL4+SJ5nwnyAv+0vs7Re7+S48/Q973
lx4fQT7HHH+OfL85/gL5HT3+PbVI0ePjLpIX+633H0ne9Lee/xL54N/6+qPI
F+nx8jL5ET1+4BXyx3q851XytH/0+UeTO/3RX59r5K3/6K/fdfJReryIIV+h
mt4vvEF+WjW9P3mT/IVqer8wljxDipP1/clb5BVU0/uFt8k9VNP7k3HkE1L0
enfJ16fo9e6RX0jR690nf5+i13tAni1Vr/eQvGqqXu8RuVeqXu8xuUzV6z0l
35Kqz5taXE3V5xdPnmCOf0ae568eTy1r/dXjn5P7/dXjX5AH6nZ/Sb5bt3xF
flN3xGvyZPP5b8kL/dPPf0feQLd8T95Pd8QH8nm6xSfyA+bzP5PfM5//hTzV
fH4CeQlRxvr8b+TNzP5OPtTsH+SLzU4kP2Z2EvkTs5PJbdPo/kleRjWd5y/y
tqrpPP+QjzbHp5KvMsf/JT9jjhfhyl+Z49OqlhnTljHuR1WYWriopvtJGe6p
Wt3fqovh/qrp/lSGh6pW95dabHikarrfleEfVKv7VV03PLtNGev9swyvplrd
/yqDDXk31XT/Kmo5VbUa3sjwbarpfliGR9tYr0ca/s3Gej1rDc9ra72eE4bX
sbVezz3De9paryfJ8GBb6/XktCXfY2u9nkrU4pat9XraGP7T1no9gw0vYme9
nlmGN7SzXs82wwfYWa/nguHz7azX89zwcDv99bEjv89b/AN3TMf9f67uOq6K
JQzj+Njd3diK3a3Y3aLY2C2o2LV2d18Lu7sbu7sbu7v7Ms+edz6fefjvd7/v
zs6eBa4HDlDFbieAfAb5bvJQ8khRbM9mt1OLvBf5XPKD5E/JY0a1PY/dqgH5
APLF5MfJ35DHj2Z7YbudpuTDyFeSnyP/RJ4suu0l7VatyceQbyC/Qv6TPE0M
28vb7XQkn0y+jfw2uYppeya7nark3chnku8lf0AeJZbt2e1Wdch7k88nP0T+
nDxWbNvz2e34kQ8iX0J+kvwtecI4thexWzUnH06+mvw8+Rfy5HFt97HbaUM+
jnwj+TXyX+Rp49lewW7VmXwK+Q7yO+Th49ue2W5Vnbw7+WzyfeSPyKMmsD2n
3U5d8r7kC8iPkL8gj5PQ9vx2q0bkg8mXkZ8if0+eKJHtxex2/MlHkq8hv0j+
lTxlYttL263akY8n30x+nfwPeboktley2+lCPo18p+62k8ouvRAZfk/3Vv/s
m3NGg0dIGtbh8yYKGR8DnlV3rQh/z76MBa+he8GVp7crxYUH6X617PyL5fHh
c3QX6b3zW8RE8AO6R1VaFKlVEvhj3VeTjU1wMBk8erKwTv+qe9o0KeG5dHfb
2zjXwNRwX937J5QrcdsL3k93zOY5qhZJDw/W3Sh34oazMsKP6l4Z7l/bL5nh
r3R/vfQsqK43PG7ysC639MLQTdnhBXVP6blrcpxc8Ma671dYvKBLHvgQ3TmS
jlt7Oh98ue7+L3rszloQfkb3yd1NTowqDP+gO8n48teeFIUnSRHWrZvmfFy2
BLy47s05k3xcVAreMoXcnzLwUabLwteZLge/ZLo8/LvpCvBUKT3toFVZaVUR
3l43vj6AVhN14+sBleBbdOPrCWh1Uze+flAZ/tesVwWeIZWsh3Yqp5L1qsID
Usl6aGd6KlmvGnx3KlmvOvy+bjw/rgGPlDqr5/ltLbh3as98SG14rdSeed+6
8J4y/7IefK7MO/XhITKfyA/+VOZXN4THSOOZ92kMz5PGM3+1Cbx+Gs98x2bw
ATKv/OGL0sjj0QJ+PI08Hq3gr9PI49EaHt9LHo+28EJesl57eFMvWa8DfKiX
rNcJvtJL1usMP2vW6wr/ZNYLhCdNK48XWpVMK9fvequ0Mt8NPsbMo531Zt71
K2a+O/yHmUerNOlk3vVy6WS+B7xjOplHO5PMvOvbzHwQ/Jb0e3TYE1xPh/aE
Z5S+0AteVTqkNzxQemMf+Ezp4L7wPdKT+8EfSDv94ZEzeDpwADy7tP9AeG3p
WoPgvaV9BsPnSed24IekvYbAn0nHHQqPlVGufxg8r3TS4XA/6dwj4AOlK42E
L5H2HwU/Id1nNPyt9OQx8ASZPL1yLLyIdMg4eDPpG+Phw6XfT4Cvko46CX5e
2msy/LN04Snw5Jnl8ZoKLyXdfhq8jbQzHT5WevYM+EbpjTPhV6VPzIL/kg6d
DffK4unvc+AVpOPOhXeSzjIPPkXaZz58u7TfAvgd6cCF8HBZPT06GJ5ZOngR
vJr0zsXw7tIXlsBnST9fCt8nrZbDH9qtonrbnsNuVZe8D/kC8sPkL8hjZ7M9
v91OQ/LB5EvJT5G/I0+U3faidit/8hHka8gvkH8lT5HD9tJ2O23Jx5NvIr9O
/ps8XU7bK9qtupBPJd9Jfpc8Qi7bs9itapD3IJ9Dvp/8MXm03LbnstupR96P
fCH5UfKX5HHz2F7AbtWY3CFfTn6a/AN54ry2F7fbaUE+inwt+SXyb+Sp8tle
xm7VnnwC+RbyG+R/ydPnt72y3U5X8unku8jvk0csYLu33U5N8p7k/5GHkD8h
j1HQ9tx2q/rk/ckXkR8jf00er5Dthex2mpAPJV9Bfpb8I3nSwraXsFu1Ih9N
vp78MvkP8tRFbC9nt9OBfBL5VvJb5P/IMxa1vYrdKpB8Bvke8lDyyMVsz2a3
qk3ei3we+UHyZ+Qxi9ue126nAflA8sXkJ8jfkCcoYXthu1Uz8mHkq8jPkX8m
T1bS9lJ2O63Jx5Jv0N2qYPHMN1fAr+pOO6b8wkOr4D91379dI8naNXCvUmG9
IKffpBnr4OV1NxnSIsrgDfBOupNf6Ti4/Sb4ZN03MwV9q70Fvl33rL4DA4pt
g9/W7Xtm5LMMO+DhfMI6YZrJzWPvgmfSfanbnOvfdsOr6Z5yZHHNB3vh3XTX
TLL2+Kn98Fm6Y3XcVmprCHyv7jN79++Yfwj+UPfYOCdyjToCj1I6rCu1vLgi
8Bg8h+4o226laXQCXkf30SiPZ5U9Be+je1ijN3FynIHP111m3ddRic/BD5eW
x/cC/Lnpi/DYZaQvwfPZrRqSDyJfSn6S/J3uO/lyLva7DE9YNqzX5Tzc7MUV
eFHdA7P6peh3Dd5cd/UMb65HvwEfoTt1mqHT596Er9b9NlmS2tlvwy/o3p9w
bax9d+BfdE+KU/pU9XvwFOXCunn0ayPv3Yf76M4dqVPZgAfwtuVkv4/g43Q3
DbpYPslj+Cbdu58vHpfzCfya7iR64Cn8t2493vQZPG35sNYZ9BxeUXcuvcAL
eGfd43OG/YeX8Km6X4Qtv/sVfIfuCvoEr+F3dS8J4+dv4OEryH7fwbNUkP2+
h1evIPv9AO9RQfb7ET67guz3E3x/BdnvZ/ijCrLfL/BoFWW/X+E5K8p+v8Hr
VZT9fof3rSj7/QFfWFH2+wt+RDe+/vIb/lI3vr7zBx6nkmfe5y+8QCXPvO8/
eKNKnvmOapt2R+adcLqdZTI/Izz8tMyvjgB/L/MhEeGJK3vmr0aCF6vsmX8Z
Gd6isuw/KnykzCeKBl8r897R4Rdl3icG/JvM+8aEp6wi+48FL1NF9h8b3q6K
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
LPkn8qQ7bC9pt9OKfAz5evIr5D/I0+y0vZzdqiP5JPJt5LfI1S7bM9qtqpIH
ks8k30P+gDzybtuz2+3UJu9NPo/8EPkz8lh7bM9rt/IjH0i+hPwE+VvyBHtt
L2K304x8OPkq8vPkn8mT77O9lN2qDflY8o3kV8l/kXvtt72C3U4n8ink28nv
kIc7YHtmu51q5N3JZ5HvI39IHjXE9hx2q7rkfcgXkB8mf0Ee+2BYrw8K8EmW
CZ5f9+MNN2uPywxvqDv5q7Kt/mSBD9ZdK1PYEd7wpbpHtkg68kE2+Cnde+cN
nVU3B/yd7o/XX688mhOe6FBYZ0nQYHeh3PCiupvVOHh6VR64v+7pY7LdTZEP
PkL3qSMz3k7ID19zSPZfEH7BbvWVPMVh20vb7bQlH0++ifw6+W/ydEdsr2i3
6kI+lXwn+V3yCEdtz2K3qkHeg3wO+X7yx+TRjoV17ZvFywUUgec6Jl4CXk83
/l4QWvXTjb8X5PpC3Xi9Tkn4Ud34e0Fo56Vu/L2gUvC4x7N6Xv+Ddgroxt8L
8oE31o2/F4R2nOOyn9Lw5cdlP2jn9HHZj+sfjst+ysATn5D9oFXxE7KfsvAW
J2Q/aDXqhOynHHztCdkPWl06IfspD/9mt0p10vYydqv25BPIt5DfIP9Lnv6U
7ZXtdrqSTyffRX6fPOJp273tdmqS9yT/jzyE/Al5jDO257Zb1SfvT76I/Bj5
a/J4Z20vZLfThHwo+Qrys+QfyZOes72E3aqV7tPViwWUqgAfrTv+47pDklSC
r9ft16/ztHeV4Zd1L4w7YtnxqvAfup8un79jYXV46vNhnb3E9pO9a8LL6e5x
+dztmrXhHXTv6vDsTea68EnnZT++8K3SXvXht6R9GsD/Sfv7wTNe8LTTEF5F
OrgRPFA6pDF8hnRoE/geadUMHnrB8/GcqDk88kXPx6u3PzzbRdlPC3jti/Lx
3xLeS+Y7toLPk3mnNfygzM9oA38m86vbwmNekv22g+e95Jm/2h7e4JJn/mUH
+ECZV53gi013hp8w3QX+RtpBqwSXxbvCC0s7aNXMeAB8mHG0WmU8EH7OOFp9
Nt4NnuyKOFqVklbd4a2No9VY4z3gG4yj1VXjQfCfxtHK66p4T3h5aQetOhnv
BZ9st9pOfps83DXbM9mtqpF3I59Fvpf8IXmU67bnsNupQ96HfD75YfLn5LFv
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
Bfko8rXkl8i/kadKaHsZu1V78gnkW8hvkP8lT5/I9sp2O13Jp5PvIr9PHjGx
7d52OzXJe5L/Rx5C/oQ8RhLbc9ut6pP3J19Efoz8NXm8pLYXsttpQj6UfAX5
WfKP5EmT2V7CbtWKfDT5evLL5D/IUye3vZzdTgfySbo7BQ6pMtIfvlX3v6Yt
/Me3hN/SPa1q6V5TW8P/6c5cJO342W3hGVOE9d5M4RYvaA+vortWwgc7lnaE
B+p+HO7g2dWd4TN093kX/GhjV/ge3bHuOj+2B8JDdS865R9nX3d45JRhXWCn
T8bDQfBsuk8t8yp2she8tu5m01Tt833gvXR/dELbXu0Hn6d7ZNeQAbcHwA/q
TtEkeOqDQfBnujdUdlY+c+AxU4V12UL++98MhefVfT2Dz5VPw+ENdHeO7/Xy
x0j4wFTyeI6BLzY9Fn7C9Dj4G9Pj4QlSS0+AFzY9Ed7M9CT4MNOT4atMT4Gf
Mz0V/tn0NHiyNNLT4aVMz4C3Nj0TPtb0LPgG07PhV03Pgf80/R/cy0t6Lry8
6XnwTqbnwyebXgDfbnoh/LbpYHi4tNKL4JlML4ZXM70E3s30Uvgs08vge3Xj
62Vo9VA3vr62HB4lncyvgOdIJ/Nop046mV8J72PmV8HnSzur4YeNr4U/N74O
Hju9+AZ4vvRyPrRqmF7OtxE+yMxvgi8182jnpJnfDH9n5rfAE2aQ+a3wohlk
fju8eQaZ3wkfYeZ3wVeb+T3wC2Z+H/yLtM9+eIqMcr0H4D7SISHwttLqEHxc
Rs/5vA/DN2WU8x2BXzPrHYX/lvnVx+BpM3nmrx6HV8wk65+Ed84k65+CT5V5
39PwHTLvnIHflfnVZ+HhM8v65+BZMsv6F+DVM8v6F+E9ZN73Eny2zDuX4ftl
fvUV+COz/lV4tCyy/nV4TmmvG/B60j434X2l/W/BF0o7t+FHpIPvwF9Kh9yF
x8nq6dB78ALSKhTeSNrnAdyRdh7Cl0mHPIKfNsc/gb/XjddfolVib2/P6zOf
wot5y+OBVi104/Wdz+AjdeP1n2i11lvWfw6/aLf6Rp4ym+1l7HbakU8g30x+
g/wPefrstleyW3Uln0a+i/weecQctme1W9UkDyL/j/wA+RPy6Dltz22340ve
nzyY/Bj5K/J4uWwvaLdqQj6EfAX5GfKP5Ely217Cbqcl+WjydeSXyb+Tp85j
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
bz083lFZD+0UPCrrud7kqKzn+pCjsp7rK47KehvgZ8x6aPXRrOd6kmOynusl
jsl6rrc8JutthI8+JuuhnXXHZD3XL5v1XP9u1nM99XFZbxO8rN2qA/lE8q3k
N8n/kWc4YXsVu50A8hnku8lDySOdtD2b3U4t8l7kc8kPkj8lj3nK9jx2qwbk
A8gXkx8nf0Me/7Tthe12mpIPI19Jfo78E3myM7aXtFu1Jh9DvoH8CvlP8jRn
bS9vt9ORfDL5NvLb5Oqc7ZnsdqqSdyOfSb6X/AF5lPO2Z7db1SHvTT6f/BD5
c/JYF2zPZ7fjRz6IfAn5SfK35Akv2l7EbtWcfDj5avLz5F/Ik1+y3cdupw35
OPKN5NfIf5GnvWx7BbtVZ/Ip5DvI75CHv2J7ZrtVdfLu5LPJ95E/Io961fac
djt1yfuSLyA/Qv6CPM412/PbrRqRDyZfRn6K/D15ouu2F7Pb8ScfSb6G/CL5
V/KUN2wvbbdqRz6efDP5dfI/5Olu2l7JbqcL+TTyneT3yCPcsj2r3U4N8iDy
OeQHyB+TR79tey67lS95P/Jg8qPkr8jj3rG9oN1OY/Ih5MvJz5B/IE9y1/bi
dquW5KPI15FfIv9Onuqe7WXtdtqTTyTfQn6T/C95hvu2V7ZbBZBPJ99Nfp88
Uqjt3narWuQ9yeeSh5A/JY/xwPY8djv1yQeQLyI/Tv6aPP5D2wvZrZqSDyVf
SX6W/BN50ke2l7TbaUU+hnw9+RXyH+RpHttezm7VkXwS+TbyW+Tqie0Z7VZV
yQPJZ5LvIX9AHvmp7dntdmqT9yafR36I/Bl5rGe257Vb+ZEPJF9CfoL8LXmC
57YXsdtpRj6cfBX5efLP5Mlf2F7KbtWGfCz5RvKr5L/IvV7aXsFupxP5FPLt
5HfIw72yPbPdTjXy7uSzdN99+y5082b4Pt3ZVp4NCdoKf6i7b4s1wQW3w6O+
Duvjycc433fAc+hOdKWt/+5d8Lq6W08o5zNgD7yP7s0V0nmV3Adf8FrOfwB+
WNoJgb8wfgge+43VKr/dTkPyweRLyU+RvyNP9Nb2onYrf/IR5GvIL5B/JU/x
Lqz7n2hz1OcwvLTu2n0bPZ94BN5Wd2bvmjHuHoWP1/3nVtmc2Y7DN+m+PK5w
7b4n4Nd1ryqeI+j4Sfhv3YPepJ2V6DQ83fuwrrcg8e5WZ+AVdevlN52Fd3kv
+zsPn2q32kl+lzzCB9uz2K1qkPcgn0O+n/wxebSPtuey26lH3o98IflR8pfk
cT/ZXsBu1ZjcIV9Ofpr8A3niz7YXt9tpQT6KfC35JfJv5Km+2F7GbtWefAL5
FvIb5H/J03+1vbLdTlfy6eS7yO+TR/xmu7fdTk3ynuT/kYeQPyGP8d323Har
+uT9yReRHyN/TR7vh+2F7HaakA8lX0F+lvwjedKftpewW7UiH02+nvwy+Q/y
1L9sL2e304F8EvlW8lvk/8gz/ra9it0qkHwG+R7yUPLIf2zPZreqTd6LfB75
QfJn5DH/2p7XbqcB+UDyxeQnyN+QJ/hne2G7VTPyYeSryM+RfyZPprJZXspu
pzX5WPIN5FfJf5J7hbO9vO6o9wrnmOJ6J92OX9Qloy/AJ+v+ful6UucifLvu
wOorJva+BL+t+/nxXhEDLsPDhQ9r/zIV+rW9As+k+8beRO+bXoVX012r0JM2
vtfg3XSf2LT1drXr8Fm6fbIPr13uBnyv7p3L6x4vdhP+UHfutOlL5LsFjxIh
rFfO/bjZ+zY8h26vxIeypLsDr6N79uQpC5LdhffRHTdGi4Tx7sHn6x49IvfY
qPfhhyPI4xMKf263ih3R9nx2q4bkg8iXkp8kf0eeMJLtRe12mpOPIF9NfoH8
C3mKyLb72K3ako8j30R+jfw3edootle02+lMPpV8h26f9JfTTnoAv6s7ple/
KBkfwcNH1e9/KdO+2f0YnkX34mQnLtV6Cq+uu2vigJ1Pn8F76C6aIPGCAS/g
s3VHjrtvWPxX8P26L8Vs3WHla/gj3QuixahZ8i08WrSwbh95c/4r7+A5deeP
0DB5xw/wetFk/5/gfaUdtFpo/DP8iG798k3vL/CXuuvr13d+hceJLsd/gxeI
7plf/R3eKLpn/uoPuCPz6hd8mbjvb/hpc/wf+Hsz/w+eOIbMq93ai8WQ+XC6
VYsYMh8BPtJ0RPha05HgF3Xj5zciw7/pzq+/PxsFnjJmWOtvv1aLCi+jG9+v
jQZvF1OuPzp8QkzPenNiwDfH9Ky3JSb8hqx3Jhb8j6z3NDY8fSzZX1x4JbtV
V/Jp5LvI75FHjG17VrtVTfIg8v/ID+g+NWbomeXx4E90F+/aPnBEAnj0OGG9
tk6NhK0TwXPrTl0o/84ySeC+uiemSN4kbTJ4/ziyfgp4sOmU8GOmU8FfSTup
4fHiinvBC0o7aeFNjKeHDzGeAb7CeCb4GeOZ4R+NZ4UniedpH7QqIe243lI6
xPXR0sobvs7MZ4NfNp4D/t14Tnjq+OK54WWlnTzwDsbzwSfqxs9j5Ydv1Y2f
7yoAvxlfPp4Kwv/pPqF//qwQPEOCsNbjEwvDqySQj7ci8ADd+HmyovAZuvHz
acXguxPIfkrAQxPIfkrCIyWU/ZSCZ0so+/GB10oo+ykN75VQ9lMGPjeh7Kcs
/GBC2U85+NOEsp/y8JiJZD8V4XkSec6XqBK8QSL5fFcZPkDmfarAF8u8b1X4
cZnvWA3+Ruad6vD4iT3zM2rACyeW/daEN00s7x+14MNk/mpt+EqZf1kHfk7m
VT34p8Ty+coXniyJfH6qDy+ZRD4fNYC3TiKff/zgY5LIeo3gG5LIeo3hV8x6
TeA/zXpN4WmSynrN4OWTynr+8I7SDlpNNt4Cvs04Wt023hKukomjVSZp1Qpe
1ThadTPeGj7TOFrtNd4G/sA4WkVJLt4Wnl3aaQevY7wDvLfxjvD5xjvDDxnv
An9uPAAeK4V4IDyftOoO9zPeAz7IeE/4khTy/opWJ1PI+6frb83xridMKe9/
rhdJKe9vrjdPKev3gg+XdtBqtfHe8PPG0eqL8T7w5KnE0cpHWvWFtzHeDz7O
+AD4RmmfgfBrZn4Q/Jd0yGB42tRy/BB4BWkHrTobHwqfYhytdhgfBr9jfDg8
fBrxkfDM0s4oeHXjY+Dd03g+f31Aq9lp5PPRWPi+NPL4j4M/SiOfv8bDo3p5
Pj/unADP6SX3byK8rpfn8+m8SfC+XvL5cTJ8gZfsbwr8iJd8Pp0Kf+Hl2U+r
afA4aeX9Zzo8f1rPfirOgDdKK5+vZ8IHp5X3v1nwZWnl8/ts+Km0nv3EngN/
n1Yen//gidLJ8WhVLJ2c33X/dLJ/10fK/GrX18j8VdcvyryaC/9q5ufBU6aX
9RfAS6eX+WB4u/Qyvwg+3swvgW8288vg16UdtPpjfDk8XQZ5/10BryTtrIR3
kQ5ZBZ8mrdbAd5peC79neh08Qkbp9fCspjfAa5jeCA8yvQk+x/Rm+AHTW+CP
TW+FR88kvQ2eK5M8Xmjlm0ker+3wfmZ+BzzYzKOdo2Z+J/yVmd8Fj5tZHq/d
8ILSai+8sXRctBoi7eX6cuncrp+R9nH9g3Qt15Nk8bS/68WlA11vKe24Pkp6
suvrpINdvyS90fXv0iGup8rq6Quul5UOdb299HvXJ0qrffAtdqub5H/JM3jb
XtluFUA+nXw3+X3ySNls97Zb1SLvqTuhfnN9ru6dLWPtbLkfHqK7yabITTYd
gD81xx+Ex8gufQiex/RheH3TR+ADTB+FLzJ9DH7c9HH4a9Mn4PFzSJ+EF7Jb
NSUfSr6S/Cz5J/KkOW0vabfTinwM+XryK+Q/yNPksr2c3aoj+STybeS3yFVu
2zParaqSB5LPJN9D/oA8ch7bs9vt1CbvTT6P/BD5M/JYeW3Pa7fyIx9IvoT8
BPlb8gT5bC9it9OMfDj5KvLz5J/Jk+e3vZTdqg35WPKN5FfJf5F7FbC9gt1O
J/Ip5NvJ75CHK2h7ZrudauTdyWeR7yN/SB61kO057FZ1yfuQL9B9Z+zKvzVd
P6w7+8ZZpxOehr/QPeDqyNk3z8BjFw7rcz97tllwDp5fd2qvNnlbXYA31N21
fL1/mS/BB+ve37HsmdeX4Ut1x56cd86mq/BTuv23pW3b6zr8ne6Nt+LmK3YT
nqiI7Pc2vGgRz//fr6KVfxH5//8d+AiZd+7C18i87z34BZn3vg//atYPhaco
arUqbbfTlnw8+SbdK5tkrvLR9eu6vxb/0m3mQ/hv3eVSHZ5T9DE8XbGwnvpn
8sF7T+AVdYfebfZi6DN4F93Z92ePl/kFfKrufgt+Fj79Er5T94lBJ/wDXsPv
6k7cfOboBG/hEYqHdetSrTfueAfPontzmrw3Gn+A1ygu+/8E76EbXz9Eqzm6
8Xz8M3y/bnz98Qv8sW48f/8Kj1ZCHv9v8FwlPOu1/Q6vV8KzXrUf8H4lPOvl
+wlfWMKzXrJf8KOynvoNfynt8wcet6Sc7y+8gHTIP3hjaRVuj3ZH2ie8brXc
HB8BftocHxH+wRwfGZ64lBwfBV5c2okKbyEdEg0+SlrFgK81x8eEXzLHx4J/
M8fHhqfykePjwstI+8SDt5d24sMnSIckgG8xxyeC3/CRjwe0+usjHz+upy8t
84nhlUvLPNrpWlrmXZ9u5pPAd5l5tLpv5l2PWEbmk8K9y8g82qlZRuZd72nm
k8H/092nd+/e39AqRPdb/ZYc/qSMvP+mgMcoG9b37oa9pYTnLiufP1LB65eV
9+/U8P66y4W9HUkDX6R7756wNy/4sbLy/p8W/rqs7DcdPF65sE4X9rY4PbxQ
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
+IMgd972meERDrvz7ssCz3zYnTdaNniNw+68TbPD+xx2592UA77gsFzfXPAg
03h/A62emcb7H7nh0Y7I+jzwXEdkPVrXOyLr88IHe9fngy+V9aFodVLWX8sP
fy3rgwrA4x6V/QvCCxx1188qBG96VK53YfgIWd+xCHyNrK9bFH5O1vsWg3+S
9ZmLwxMdc9cnKAEvfkzm94W3ktYl4eO9Xhq+yetl4Fe9Xg7+w+vl4SmPi1eE
l5HWleAdvV4FPsXrVeE7vV4dfls6CO35Bk7W14Cnk/atCa8srWrBu3u9Nny2
9/F14Pulg+rCH3ofXx8e8aQ8n2iV9aQ8fw3gNU/Kfg3h/WR93UbwhbI+c2P4
EVmvmsCfy/oETeExTsn6ZvDcp2T+5vAGp2R/P/gQWd+xBXy5rNct4adk/axW
8Leyfl1reLzTcv5t4IVOy/m2hTc7Lfd3O/goWa86wNdKh6DVBe9+HeGfpQM6
wZOckfk6w0tI+3WBt5H27QqfIO3TDb5FWnWHX5MOQatf0kE94D5n5fg94eWk
dS94J2m/3vBp0r594LukffrC70qrfvAwwfJ6i1YZguX1sT+8SrC8ng2A9wyW
1/eB8DnB8no8CH4wWF4/B8MfBcvr3RB45HPy+j8Unu2cvF4Pg9c+J6+vGt7/
nMw7HL74nMyL1kfPybwj4C/Pybwj4THPy7yj4HnPy7yj4Q3Py7xj4MPOy7xj
4SvOy7zj4GfOy7zj4e/Oy7wT4AkuyLwT4YXtVn7ko8nXk18k/0qe9KLtJe3W
bcknkW8lv0H+mzz1JdvL2626kE8n30N+jzzcZdsz2q2qkfcin0ceSP6EPMoV
23PYreuQDyRfQn6cPJQ89lXb89mtGpNr8lXkZ8k/kP93zfaidusW5GPJN5Bf
Jv9Gnvy67aXsVu3JJ5NvJ79J/pc8zQ3bK9qtu5LPJN9L/oA8/E3bM9utq5P3
IZ9PHmS6wt04/Y45/tR0/2PJe5x0PNotT6/akKnTGcdzmr4+M1+bc47XMx1x
SMnmFx0fZDp/m6oNrzi+1HTbqg1rX3f8hGnPw6vecvy1ac/hyt91PM5tT3+O
MKTkA8cLmE77dlyRR443MV3HM8BTx0eYHhEYkOOF46tNb/MM/Mrxc6Yf+e9J
89bxj6bj9juW/IPjie54ulTziwk/O17MdM/yd+N8c7yVac/u0X46Ps60Z3WE
P45vuiPXcxL8it3qB3mKu7aXsVt3IJ9CvoP8Nvk/8nT3bK9kt+pOPot8P3kI
ecT7tmexW9Uk70u+kPww+XPy6A9sz223rk8+hHwZ+SnyN+TxQmwvaLdqRj6S
fC35efLP5Ikf2l7Cbt2afAL5ZvJr5D/JfR7ZXtZu1Yl8Kvku8jvkYR7bnt5u
VYW8B/kc8gPkj8gjPbE9m926Fnl/8kXkR8lfkMd8anseu1VD8qHkK8hPk78j
j//M9sJ26+bko8nXkV8k/0Ke9LntvnartuQTybeSXyf/TZ7qhe3l7dadyaeT
7ya/Rx72pe0Z7dZVyXuRzyUPJH9MHiXU9ux2qzrkA8iXkB8jDyWP9cr2fHbr
RuSafCX5WfL35P+9tr2I3aoF+RjyDeSXyL+RJ3tjeym7dTvyyeTbyG+S/yFP
89b2CnarruQzyPeS3ycP/872THar6uS9yeeTHyJ/Sh71ve057dZ1yQeRB5Cf
IH9FHueD7fntVk3Ih5OvJg8m/0ie8KPtxezWLcnHkW8kv0L+nTzFJ9tL2606
kPuT7yC/Rf6PPO1n2yvZrbuRzyLfRx5CHuGL7Vns1jXI+5IvID9M/ow8+lfb
c9mt6pMPJl9GfpL8DXncb7YXtFs3JR9Jvob8PPkn8sTfbS9uumWDsSOqOd7a
dKmpm8M8cHy8aZ9TN3S3yfDN3sf7w69Kh6DVT+mgKfCUP9wOmAovK62nwTtK
+02HT5X2nQHfKe0zE35HWs2Cq59Wq/R268rkPchnkx8gf0ge6ZftWe1Wtcj7
kS8iP0L+gjzGb9vz2K0bkA8lX05+mvwtefw/theyWzUnH0W+jvwC+RfyJH9t
97VbtyGfSL6F/Dr5L/JU/2wvZ7fqTD6NfDf5XfKwKqvlGexWVcl7ks8lP0j+
mDxyGNuz261rkw8gX0x+jPwleaywtue1WzUiH0a+kvwM+XvyBOFsL2K39iMf
Q76e/BL5V/Jk4W0vabdqRz6JfBv5DfI/5Kkj2F7Bbt2FfAb5HvL75OEi2p7J
bl2NvDf5PPJD5E/Io0ayPYfdqi75QPIA8uPkr8hjR7Y9v926Mflw8lXkweQf
yBNGsb2o3aol+VjyjeSXyb+TJ49qe2m7dXtyf/Lt5LfI/5KnjWZ7RbtVN/KZ
5PvIH5BHiG57ZrtVDfI+5AvIg8ifkUeLYXsuu3U98sHkS8lPkr8mjxvT9gJ2
q6bkI8jXkJ8j/0SeKJbtxe3WrcjHk28iv0r+gzxlbNvL2K06kk8h30l+m1zF
sT2d3aoyeXfy2eT7yR+SR4xre1a7dU3yfuQLyY+QPyePEc/23HarBuRDyJeT
nyJ/Sx4vvu2F7NbNyEeRrzWdxG9sjFyz4RdM/6fSXNk7B/7ZdPyAwLml5sGT
JPB0bN9Gzc7Oh5cwHTPkS5o6C+FtTEfX017eXQSfYDqyT7bNbZbAt5iOGHSq
99sA+DXTYf1aF+63DP4rgcy3Au7zn9u+K+HlpPUqeCfpoNXwadJqLXyXaXx+
zTr4XdP4fJv18DAJs7qff7MBnsE0Ph9nI7yKaXx+ziZ4T9P4fJ3N8DkJZZ4t
8IMJ3eNN3wp/lNA93opt8MiJ3OPt2g7Plsg93ukd8NqJ3OPd2Qnvn8g93ptd
8MWJ5Pz2wI96ey/8pbf3wWMmlt4Pz+vtA/CGpvH7Img1zDR+v+QgfIWs14Hw
M7K+7iH4O1mfOQieIInsfxheWNr3CNxPWh+Fj5YOOgZf7338CfhFb5+Ef/X2
KXjSpNKn4SW9fQbeVjoIrSZJ67PwrdK+wfAb3sefg/9OKueHVqmTyfk7Xj6Z
7Od4l2Ry/RyfLuuvOb5H1qvz8Ht2q3DJbc9ot6pG3ot8Hnkg+RPyKClsz2G3
rkM+kHwJ+XHyUPLYKW3PZ7dqTK7JV5GfJf9A/p+P7UXt1i3Ix5JvIL9M/o08
eSrbS9mt2pNPJt9OfpP8L3ma1LZXtFt3JZ9Jvpf8AXn4NLZntltXJ+9DPp88
iPwpebS0tue0W9UjH0S+lPwE+WvyOOlsL2C3bkI+gnw1+Tnyj+SJ0ttezG7V
inwc+SbyK+Q/yFNksL2M3boD+RTyHeS3yf+Rp8toeyW7VXfyWeT7yUPII2ay
PYvdqiZ5X/KF5IfJn5NHz2x7brt1ffIh5MvIT5G/IY+XxfaCdqtm5CPJ15Kf
J/9Mnjir7SXs1q3JJ5BvJr9G/pPcJ5vtZe1Wncinku8iv0MeJrvt6e1WVch7
kM8hP0D+iDxSDtuz2a1rkfcnX0R+lPwFecyctuexWzUkH0q+gvy06dRFM1X4
6/g7r1+Ex8/ltt8leGHpoMvw5tI+V+GjpfU1+DrpkOvwi9K+N+FfpANuwZPm
luPfgfuaxu+folVb0/j9Vccnmsbvvzq+1TR+H/Uu/Lpp/D4rWv02jd+HdTxV
nqzu79M6Xt40fr/1Hryzafx+LFpNN43fr3V8dx6Z9z78Xh6ZF63D5pV5Hc+Y
V+Z1vGpemfcBvFdemRet5+aVeR0PzCvzOv44r8wbAo+ST+ZF6+z5ZF7H6+ST
eR/CB9itlpAfIw8lj5Xf0wGXU8wc8Aiez3SVPk/v/nwMb2T6Z8IN6QY/hWvT
q/b17PrnGXyl6TpNC+0e+gJ+Nr/sHwp/b3rCopvjk7+C/1fA0/GLbI1X5DW8
iOnFN8cvavAG3sJ0xr4tM/R9Cx9jelu8IltnvINvMF3U8/Ct7+GXTB+r9vrY
+Q/wb6Y9We31R3iygp72bH8zymd4KdOe3Vtm+AJvZ9osL/MVPtm0OXzLb/Bt
BeXr4Tv8ZkH3fBb9gP8p6J7P/p/wNIXc87n5C16hkHs+X3/DuxZyzyfeX/iM
Qu755PoH31vIPZ9qKtD4/ULu+XQOY1qFL+yez/iw8EyF3fNZHQ5evbB7PsfC
w3sXds/nUQT4/MLy/ESCH5LWkeFPvR4VHrWIeDR4TmkVA15XOgStBkkHxYQH
SAfEgp/w7hcb/kraLw48TlF5fYkLzy/tEw/eRFrFhw83je/vEsBXm3b+/Sx4
sKzXCeEfZf26RPCExdz11xLDixWT/ZPCWxaT/ZPBx8n6usnhG2W9TgG/IuvX
pYR/9+7vA09RXPZPDS9d3H19SJ0G3qG4vP6khfsXd18v2qeD7ygur0fp4beK
u68fmzLA/xWX16eM8LQl3NeTz5nglUrI61UWeLcS7utL4azwWSXk9SsbfF8J
Ob/s8JAS8nqWAx7B1533eE54Fl95fcsFr+HrzhstD7yvr7ze5YUv8HXnrZkP
fthXXv/yw5/5uvPOKQCPXlJeDwvCc5V0571XCF6/pFzfIvDB0kFotUxaF4Wf
lPYtBn/jfXxxeNxSWd33c9CqoGm8/1MC3tQ03i/yhY80jfeXSsLXmMb7UaXg
503j/avS8E+l5Hhl4IlLy/HQunhpOV5ZeOvScrxy8PGl5Xjl4ZtLy/EqwK+W
luNVhP8sLcerBE9ZRo6HVmXLyPEqwzuWkeNVgU8tI8erCt9ZRo5XDX6njByv
OlyVlePVgKcvK8dD68pl5Xg14T3KyvFqwWeXlePVhh8oK8erA39YVo5XFx6p
nByvHjyraXzeDVrVMo3Pr3G8n2l8Xo7ji0zj828cP+Ldrz78hXc/tI5RXvZz
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
ePq6uQCOF97iPt+fHPfb4j7fuZ7CR29xn+9uaLV+i/t8b3T84hb3+X7l+Nct
7vOd6Rk86Vb3+W6HViW3us/3SsfbbnWf78eOT9rqPt+pnsO3bnWf72ZodWOr
+3wvdPz3Vvf5vu146m3u853oBbz8Nvf5rodWXba5z/dMx6dvc5/vy47v2eY+
37Ffwu9tc5/vamgVbrv7fE9yPON29/k+43i17e7zHTkU3mu7+3yXQ6t5293n
e5Tjgdvd5/uI40+2y9fjK3iUHVarHHbrOuQDyZeQHycPJY+90/Z8dqvG5Jp8
FflZ8g/k/+2yvajdugX5WPIN5JdNj1tfJcwnx7+Z/ujf8fqSN/Dku8390NOz
4h28lOljdVfpH+/h7U1nL+T5Xz7CJ5uenexR5tqf4dt3y/G+wm9K+3yD/5X2
/Q5Ps8dtvx/witL6J7yrdMAv+EzpoN/wvdIhf+APpNU/ePi9WZ3vTyOqIOOZ
TZ8z7wehdXXT5tvZeGHgfUzj+1e0nr9X5g8LD5L9VqH1U9kvazh4tH3uftvR
Ouc+d79C4eH19sn8aD1on7tfuQjwpfvc/YLR+oTsVzsi/LXsdwut4+yX6xcJ
XmC/u98ztG6y392vc2T4iP3ufp/QevV+d78BUeDnZD8VFf5R9huDVokOuPtF
jwYvdsDdbwZatTrg7pc4OnzcAXn+0GrTAXe/9DHgV2S/DWj1Q/bLExOe4qC7
3160KnNQ7p9Y8A4H3f1OoNWUg+5+VWLDdxx097uCVrdlv4Zx4P9kvxC0Shfo
7tc2LrxSoLvfa7TqHuju1ysefFagu98PtNofKPdvfHiItEoAj3hIHK2zSKv/
4DW9jtZ9vZ4QvtDraH3Y64ngz72O1tGD5P5NDM8tHYTW9aX9ksCHSKuk8GVB
cj3Q6lSQ3J+OvwmS5ysZPN5h+fpB64KHZb/k8GaHZT+0HnlY9nN87WHZLwX8
vHc/tPrs3S8lPPEROV+0KiGtfOCtvY5WE7yeCr7Z62h1zeup4T+9jlY+R8XT
wMtKa7Tq5PW08KleR6tdXk8Hv+N1tApzTDw9PL20RqsqXs8A7+F1tJrj9Yzw
A15Hq0dezwSPdNzT5u2OWWiVzfR6835HZnit43K/oFV/WV83C3yRrA9Fq6Oy
XmeFv5D1X9Aq5gl3fcds8Dwn5OsPrRqekP2zw4fK+jNotULW++aAn5b1O9Hq
nazPnBMe/6S8/qBV4ZPu+gS54M1PuusnoNVoWe/5SjG+TtoXrS5Ka8e/mL7V
ekbVXY4nPeXpbafTL3jtuK9p/P3WPPC2ptvMqJq/IVpPNF38e8jIKY5vNW1+
feO449dNvz8cKeVvx3+bPpN+QefceeGpTnt6ufn7sWhV3vRgzwOWON75tHu+
1xyfbjqH+fuo+eC7TUdOOfh9SbS6Z/rhyFjF+zse9kxW9+/XOp7RtGf8W08c
r2q6i+eEk+aH9zKNv8+K1nNNe7Y/PNbxQNOe040V6Phj0+bXXT47HuWsPH8F
4NlNj4pV/LsfWtUx3RR/HxY+wHR+zxNwzvElpmN7Lmi4gvBjpl+av9+LVqGm
j0RKObi747GCPb2g87bTqxzPZxp/n9bxRqareQ4QrxBcm87geUBFtF4ZLPeD
42eD5X5w/H2w3A+O/3dO7ofC8CLn5H5Aqxbn5H5wfMw5uR8c33BO7gfHL52T
+6EI/Ns5uR/QOtl5uR8cL3Ve7gfH252X+6EofPJ5uR/Qett5uR8cv3le7gfH
/5yX+8HxNBfkfigGr3BB7ge06npB7gfHZ1yQ+8HxvRfkfnD8/gW5H4rDw1+U
+wGtM12U+8Hx6hflfnC890W5H0rA51+U+wGtD12U+8HxpxflfnA86iW5HxzP
eUnuB1943UtyP6DVoEtyPzgeYLc6Qf6KPM5l2/PbrZqQDydfTR5M/pE84RXb
i9mtW5KPI99IfoX8O3mKq7aXtlt1IPcn30F+i/wfedprtleyW3cjn0W+jzyE
PMJ127PYrWuQ9yVfQH6Y/Bl59Bu257Jb1ScfTL6M/CT5G/K4N20vaLduSj6S
fA35efJP5Ilv2V7cbtWafDz5ZvKr5D/JU962vazduiP5VPKd5HfI1R3b09ut
K5P3IJ9NfoD8IXmku7ZntVvVIu9Hvoj8CPkL8hj3bM9jt25APpR8Oflp8rfk
8e/bXshu1Zx8FPk68gumV8dvNDl5SfgX04Wf1DxxEK2TPPD0+e0V/zUtBfc1
3XJkyYJ/0bqN6a+1CvVYXBo+0fT41LnWFS8D32I6+ceMj++j1XXTWw/7JBtW
Fv7LdNlpieqmLAdPFeLpm36x/Q+hdTnTnXNGPtm8PLxziDu/qgCfZrfaTX6X
POxD2zPYraqS9ySfS36Q/DF55Ee2Z7db1zbdJ8/61oMdH2C6cKtCy347vtj0
v+knHwyuCD9m+tiRusn/oPVL0+M/Pm40pBI81mPz3+fUPef+Qeu8puPVUteH
VIY3Mn1zuH+8v2g9zPSirclqDq0CX2m65cN1/n/R+ozpDHEKBQ+tCn9v+rXv
ySj/0DrBE/N8dq9bflg1eBHTfQMej/qH1n6mi1zscWRYdfiYJ3L+NeDr7VaX
yL+SJ3tqe0m7VTvySeTbyG+Q/yFP/cz2CnbrLuQzyPeQ3ycP99z2THbrauS9
yeeRHyJ/Qh71he057FZ1yQeSB5AfJ39FHvul7fnt1o3Jh5OvIg8m/0CeMNT2
onarluRjyTeSXyb/Tp78le2l7dbtyf3Jt5PfIv9Lnva17RXtVt3IZ5LvI39A
HuGN7ZntVjXI+5AvIA8if0Ye7a3tuezW9cgHky8lP0n+mjzuO9sL2K2ako8g
X0N+jvwTeaL3the3W7ciH0++ifwq+Q/ylB9sL2O36kg+hXwn+W1y9dH2dHar
yuTdyWeT7yd/SB7xk+1Z7dY1yfuRLyQ/Qv6cPMZn23PbrRqQDyFfTn6K/C15
vC+2F7JbNyMfRb6W/AL5Z/IkX20vYbdqQz6BfAv5NfJf5D7fbC9nt+5EPo18
F/ld8jDfbc9gt65C3pN8DvlB8kfkkX/Yns1uVZu8P/li8qPkL8lj/rQ9r926
Ifkw8hXkZ8jfkSf4ZXthu5Uf+Wjy9eQXyb+SJ/1te0m7dVvySeRbyW+Q/yZP
/cf28narLuTTyfeQ3yMP99f2jHarauS9yOeRB5I/IY/yz/Ycdus65APJl5Af
Jw8lj62yWZ7PbtWYXJOvIj9L/oH8vzC2F7VbtyAfS76B/DL5N/LkYW0vZbdq
Tz6ZfDv5TfK/5GnC2V7Rbt2VfCb5XvIH5OHD257Zbl2dvA/5fPIg8qfk0SLY
ntNuVY98EPlS8hPkr8njRLS9gN26CfkI8tXk58g/kieKZHsxu1Ur8nHkm8iv
kP8gTxHZ9jJ26w7kU8h3kN8m/0eeLortlexW3clnke8nDyGPGNX2LHarmuR9
yReSHyZ/Th49mu257db1yYeQLyM/Rf6GPF502wvarZqRjyRfS36e/DN54hi2
l7BbtyafQL6Z/Br5T3KfmLaXtVt1Ip9Kvov8DnmYWLant1tVIe9BPof8APkj
8kixbc9mt65F3p98EflR8hfkMePYnsdu1ZB8KPkK8tPk78jjx7W9sN26Oflo
8nXkF8m/kCeNZ7uv3aot+UTyreTXyX+Tp4pve3m7dWfy6eS7ye+Rh01ge0a7
dVXyXuRzyQPJH5NH+c/27HarOuQDyJeQHyMPJY+V0PZ8dutG5Jp8JflZ8vfk
/yWyvYjdqgX5GPIN5JfIv5EnS2x7Kbt1O/LJ5NvIb5L/IU+TxPYKdquu5DPI
95LfJw+f1PZMdqvq5L3J55MfIn9KHjWZ7Tnt1nXJB5EHkJ8gf0UeJ7nt+e1W
TciHk68mDyb/SJ4whe3F7NYtyceRbyS/Qv6dPEVK20vbrTqQ+5PvIL9F/o88
rY/tlezW3chnke8jDyGPkMr2LHbrGuR9yReQHyZ/Rh49te257Fb1yQeTLyM/
Sf6GPG4a2wvarZuSjyRfQ36e/BN54rS2F7dbtSYfT76Z/Cr5T/KU6Wwva7fu
SD6VfCf5HXKV3vb0duvK5D3IZ5MfIH9IHimD7VntVrXI+5EvIj9C/oI8Rkbb
89itG5APJV9Ofpr8LXn8TLYXsls1Jx9Fvo78AvkX8iSZbfe1W7chn0i+hfw6
+S/yVFlsL2e36kw+jXw3+V3ysFltz2C3qkrek3wu+UHyx+SRs9me3W5dm3wA
+WLyY+QvyWNltz2v3aoR+TDyleRnyN+TJ8hhexG7tR/5GPL15JfIv5Iny2l7
SbtVO/JJ5NvIb5D/IU+dy/YKdusu5DPI95DfJw+X2/ZMdutq5L3J55EfIn9C
HjWP7TnsVnXJB5IHkB8nf0UeO6/t+e3WjcmHk68iDyb/QJ4wn+1F7VYtyceS
byS/TP6dPHl+20vbrduT+5NvJ79F/pc8bQHbK9qtupHPJN9H/oA8QkHbM9ut
apD3IV9AHkT+jDxaIdtz2a3rkQ8mX0p+kvw1edzCthewWzUlH0G+hvwc+Sfy
REVsL263bkU+nnwT+VXyH+Qpi9pexm7VkXwK+U7y2+SqmO3p7FaVybuTzybf
T/6QPGJx27ParWuS9yNfSH6E/Dl5jBK257ZbNSAfQr6c/BT5W/J4vrYXsls3
Ix9Fvpb8Avln8iQlbS9ht2pDPoF8C/k18l/kPqVsL2e37kQ+jXwX+V3yMKVt
z2C3rkLek3wO+UHyR+SRy9iezW5Vm7w/+WLyo+QvyWOWtT2v3boh+TDyFeRn
yN+RJyhne2G7lR/5aPL15BfJv5InLW97Sbt1W/JJ5FvJb5D/Jk9dwfbydqsu
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
3Yp8PPkm8qvkP8hTjrW9jN2qI/kU8p3kt8nVONvT2a0qk3cnn02+n/whecTx
tme1W9ck70e+kPwI+XPyGBNsz223akA+hHw5+Snyt+TxJnr6Uo+UO2Y5Xsj0
+gMFR+T4Bm9menSkWjVOo9Uo081rdUrR6jt8relCi0a9/o1WF0zHe7Fo3+wf
8M+m3+TePS7nT3iSSZ4+OeRivTNoXcL00lMv07b+BW9jelC8cJ/+oPUE03Wb
JTs85zd8i+mca/NNyfUHfs101M/Vmp5Fq1+mnxRvn6XNX7jPZE8Hjh/+4y9a
lTM99+r8k3P/wTuZ7uk5/dzqsPFppqt0PNcqGK13mU6/81mutmHgdyfL9QsL
D+PvdhBaZZDW4eBVTOPzV9Gqp2l8vxEePkfWh6DVQVlfNwL8kaw/g1aRp7jr
fSPCs01x1+9Eq9pT3PWZI8H7y/oAtFos6xNEhh+V9RPQ6qWsV1HgMae67YdW
eaWDHG8o7RMVPkxao/UK73rHz0iraPB30r5olWCaPN7xwtI+0eF+0kFoPVra
LwZ8vbSKCb8oHYBWX6V9Y8GTTpfrj1YlpXVseFtpnzjwSdJBaL1V2i8u/Ia0
igf/bbdKPcP28narLuTTyfeQ3yMPN9P2jHaraqZXnf0+fbbjvUwnGDVg98D4
8HmmRxf9eadZAnig6c+fB6rS/8GfmG618VfaDAnhUWZ5+kqbwRWjJYLnMF0q
xZ8u79C6jult14dMv5IYPtB0qil/d+1OAl9ielr5YXcWJIUfnyXXPxk81G4V
e7bt+exWjck1+Srys+QfyP+bY3tRu3UL8rHkG8gvk38jTz7X9lKmH5/pdW2t
4+1N74p8dN1VxyebHlcurv7n+HbTjUe1qJs5Ofym6WxHtmSui1Z/vfs7nmae
3P+OV5T2TQHvKh2AVjOlVUr4Xmk/tHogHeR4+Pny9eMDzyyt0bq6dIjjfaR9
U8HnSwegVZC0Sg1/Ku2HVtEWyPEdzyntkwZeT1qj9SDveseXSqu08BPSvmj1
2vt4x+MslMc7XkBapYM3kfZFqxHS2vHV3sc7fs77+PTwj97Ho1WiRfJ4x4tJ
+2aAt5JWGeHjpP3QapN0kONXpH0ywX9490frFItlv8zwMtIarTuYxvuvjk8x
jfdfs8B3mMb7r2h12zTef3X8n2m8/5oVnm5JNvf9V7SutETmdbz7Evd4cbPB
Zy1xj9carfYvcY+3y/GQJe7xomSHRwxwj9cYrbMEuMfb6HjNADnfHPC+dquF
5IfJn5NHX2p7brt1ffIh5MvIT5G/IY+3zPaCdqtm5CPJ15KfJ/9Mnni57SXs
1q3JJ5BvJr9G/pPcZ4XtZe1Wncinku8iv0MeZqXt6e1WVch7kM8hP0D+iDzS
Ktuz2a1rkfcnX0R+lPwFeczVtuexWzUkH0q+gvw0+Tvy+GtsL2y3bk4+mnwd
+UXyL+RJ19rua7dqSz6RfCv5dfLf5KnW2V7ebt2ZfDr5bvJ75GHX257Rbl2V
vBf5XPJA8sfkUTbYnt1uVYd8APkS8mPkoeSxNtqez27diFyTryQ/S/6e/L9N
thexW7UgH0O+gfwS+TfyZJttL2W3bkc+mXwb+U3yP+RptthewW7VlXwG+V7y
++Tht9qeyW5Vnbw3+XzyQ+RPyaNusz2n3bou+SDyAPIT5K/I42y3Pb/dqgn5
cPLV5MHkH8kT7rC9mN26Jfk48o3kV8i/k6fYaXtp05duq9xdHO9gOvG6+y3u
Oe5v2m/AgWlVc8J3mF5TYf7hg2h9y/S7hP0/ZMsF/2c6//O6qRajddpdnh66
K0/NmLnhlUwfHx1n+FC07mY6et13W946Pst0nbTnQprlge8zveDTutgX0CrE
9KMj43xL5IVH2O3pzNPbdt+MVllM92hRJiBlPngN03tzpr44Ba367pbzzw9f
YBr/HhVaHTaN3y9y/Jlp/HtbBeDR92Rzf18QrXPtcfcLcrz+Hne/xAXhg/e4
+/VCq2V73P2CHT8p+6UvBH8j+2m0jrs3m/t+TWF4QdP4+TNaN93rrvctAh8p
66+h9RpZ37Eo/LysV8Xgn7z7o1Xife76zI4X3yf7O956n7u+ruPjZX1HxzfL
eu34Ve/ji8N/SqsS8JT73d6CVmWl/XzhHaVjl4RPlQ5C653S3UvB70j7lIar
A25fRKv00roMvLJp/LwVrXqYxr834vhs0/h5bln4AdP490vQ+qFp/LzY8UgH
s7n/HorjWU3j59GO1zKNf1/F8X6m8fPucvBFpvHvtaD1kYMyr+MvDsq8jscI
lHkdzxMo85aHNwiUedFqaKDM6/jyQJnX8dOBMq/jbwNlXsfjH5J5K8ALHZJ5
0ar5IZnX8VHSIY6vk/atCL8gHYBWX6RVJXiSILkf0MpXOsjxNtI+leETpTVa
b5EOcfy6tG8V+C/pALRKdViOXxVeTtoPrTpLBzk+TdqnGny3tEbru979qsPD
HhFH6wzSqga8qtfRuucR9+ttluNzj8jXv+MHZX2Q449l/TXHIx9114c6nv2o
HK8mvLZ0AFoNkPatBV8sHYJWx6R1bfhLaZ868FjHZB60zivtVxfeSFrVgw+T
DkCrldK+9eFnpEPQ6r20bgBPcNx9vZ2HVkWOy+u3437H5fXW8THH3dfbZ46v
Py7zNIRfkv0So/VX2S+P48lOuPtVcbzkCfnvgePtTsh8jk+S9cGObzsh+zeC
3/A+Hq3+nJD5HU99UuZrDK9wUo6P1l1Oyvk7PuOknJ/je07K/E3g92U/jdbh
Tsnz5XgmadUUXk3aF616S2vH53nXN4Mf8jpaP/Hu73jU07K+OTzHaTkftKp7
Ws7H8YGn5XwcDzgt5+MHPy77abR6JfsFOx77jFzvFvD8Z+R6o3XjM3K9HR9+
RuZrCV9ltwom/0Ce8KztRe1WLcnHkm8kv0z+nTx5sO2l7dbtyf3Jt5PfIv9L
nvac7RXtVt3IZ5LvI39AHuG87ZntVjXI+5AvIA8if0Ye7YLtuezW9cgHky8l
P0n+mjzuRdsL2K2ako8gX0N+jvwTeaJLthe3W7ciH0++ifwq+Q/ylJdtL2O3
6kg+hXwn+W1ydcX2dHaryuTdyWeT7yd/SB7xqu1Z7dY1yfuRLyQ/Qv6cPMY1
23PbrRqQDyFfTn6K/C15vOu2F7JbNyMfRb6W/AL5Z/IkN2wvYbdqQz6BfAv5
NfJf5D43bS9nt+5EPo18F/ld8jC3bM9gt65C3pN8DvlB8kfkkW/bns1uVZu8
P/li8qPkL8lj3rE9r926Ifkw8hXkZ8jfkSe4a3thu5Uf+Wjy9eQXyb+SJ71n
e0m7dVvySeRbyW+Q/yZPfd/28narLuTTyfeQ3yMP98D2jHarauS9TFc92ST1
Acfnmc57u1jnIa3ggaaTvEmxq3hr+BPv49vAo4S4rdEqh7RqC69jupD/44Jd
0Wqg6Z7JTva46/gS0+b7k0rt4MdNPyno/3gPWoea9ixPlqE9PPbDbO73Q2id
z7Rne/9wHeCNTXuWn+yB1vqhO0+I46seuvNU6wg/+9Cd5wBafXjozpO5E/y/
R+48c9Gq6CN3nkid4S0eufP0Qauxj9x5Hju+4ZE7T80u8MuP3HmC0PrbI3ee
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
D+ZY41PgDHk509mzBN1bSq06mg5KP2ZVvLPkU0xH9u3bcwi12mG6Z/LAEm+s
3zEdmqhetCbnyMON8nZVn7JXT1LrjKZ3x8q7qMB58qqmM0ZL22EZte5uenrE
ePl9LpDPHsWPj1rv4/ZcJH/ErS6RRxnNTq1ycGvrtbkvWu/H7XuZfAF3N2p1
hDvE+nPuuFfIY49x2p9a5+XeZL0Rt7pKPpg7LrVaxu1r/RS3n/V33B7rCcY6
XdN6EW5/6y24u1kfya2tr+FW18gvuk6tv3B7rpMnH8fzN8g93L7UKpDbY308
t7/1zdza+nXT9PMe1n+bpu93t55mPO93k7zCeGc+K7XuNN6Zr2d9Gs9r6zu5
Q63f4/bcIg8/welgapWZW90mr8btT616codYn8Pte4f8ALem1o+5494ljzaR
96PWObn97pHX5Q6h1v25a94nX8QdSq2Pcnd7QP6SW4WSx5nk9BRqlZ/b9yF5
Y+5N1Epzex6RL+e+SK3OcPs/Jn/P/Z5aJZrMj/8JeVHT9PtVqFVL0/T7R62P
Mk2/n8X6OtP0+0KtX+L1Qqx/4/XOWk8xxVnvlvXSU5z1wqy3neKs98n6xCl8
fZ6Sb5nirFeVWt3k9YKs/3HXs55uqrNe3jDyilP58VKrLlP5/KxPn+qsl/QZ
+e6pznqB1Po+r7fVesRpfH7PybNM4/OjVjWm8flZ7zWNz8/63Gl8fi/ID/J6
mlo95fXOWo8+nc/vJbnfdD4/al1vOp+f9YHT+fxekQdP5/OjVsd5vSDrr3i9
MOvxZvD5vSYvMIPPj1o1ncHnZ33oDD6/N+QrZ/D5UeuzvN5W6x95PfWWPPFM
Pj9qVXwmn5/1VjP5/KyPmcnn9458/Uw+P2p1hdc7a/07r5f0PXmqWXx+1LrM
LD4/6+1n8fl9IJ/EranVNtc/kt+axedPrf7N4vO3nn42n7/1yrP5/D+Rd53N
61OrmbP5/K3vmc3n/5k8lNcLpNaR5vD5W882h8/vC3lN9jrUqs8c/nq2Pm+O
s/4P64fm8OP5Sh7G6wVTq5hB/PVqPXeQs175b+QNgvjxU+tBQc56r60vCeL3
r+/kJ3i96dTqDa8XZt1nrrNe4R/kheby+xW1bjaX32+tD5/L1/cn+aq5znqj
qNV5Xu+W9U+8XvZf5Enn8fNBrUvMc+5fCX+TB8zj+yG1Hsvznj/kG3n+GrW+
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
qXUBblWWvKnr1Hqo6+XIV7pOrc+6Xp78o+vUOnGo074VyItzh1DrVtz+FcnH
cKtK5OtN03+PU6srpunfR7L+3TT993tl8lQPczr/+ye1LmOa/nvfenvT5r/n
01chn/SQz5dabXvo7HfH+q2Hzn4FqpL/e+jsN41ap3/k7PfGeuVHzn6VqpF3
feTst4xazXzEj686+R7uEGoVyq1rkEd67LSnJnk2blWLvCZ3CLXqw61rk8/j
nkKtDnEHWw/j3mQ95hNez3pu7ovWG3CHWh/E/d76Em5Vh/wEdzdq9cY93rrP
U6dr1iUvxB1CrZtx+9UjH84dTK1XccetT36eW1PrT6bp8zzrScNyOp8PNiAv
Ecb7UauAMGc+a0PysTw/k1pt5HnViPwqz3egVj95/pr11M/4+WtMXu6ZM7+G
Wnd45swnbEI+hec1td7O8y+t3+H5ek3J1XM+f2qV8TmffzPyKs/5/KlVd55X
zclncXuo1T5ubf2hu771KC/4+Bbk2bk91Ko2t7belzvE+gL3eH/yw+7x1Oq5
e7z1WC/569F63pf89diSvOFL/nqkVoNf8tej9aUv+euxFfmpl/z1SK3fvuTz
aU2e4BW/31Drwq/4/cZ6i1f8fhNAPuIVv99QqzWv+P3G+oVX/H7ThvzLK358
1DrZa+f5ih5I7nnNzxe1bvOa3z/bko/n+TXUehPP529Hfp3nQ6j1L56v3J48
zRt+fVLr8m/4/bcDeac3/Hqj1lN5vndH8p08rzqR3+WOS63Cv+XztZ6J2896
NW6P9R7cNa3P4fa3vp+7m/XH3Np61Hf8/mY9J3ew9Trcm6z35w6xvpD7ovWj
3KHWX3C/tx7nPT/+zuT53vPzRa0av+evvy7kQ3g+hFot5/l6XclP8/xLavWe
53U38oQf+HhqVZRbdSf35/ZQq1Hc2vpa2eoS+FfwFB+ll5Kt2oJPAN8CfgP8
D3jaT9IrytadwaeD7wK/Dx7hs/QssnV18F7gQeAHwZ+AR/8iPZdsVQ98AHgw
+DHwV+Bxv0ovIFs3AR8KvgL8LPgH8MTfpBeTrVqBjwZfD34Z/Dt4yu/Sy8jW
7cAngW8FvwX+Fzz9D+mVZKuu4DPA94A/AI/0U3pW2aomeG/weeAh4GHgMX5J
zy1b1wcfBL4Y/AT4a3Cf39ILylbNwIeBrwI/B/4JPMkf6SVk69bgY8E3gF8F
/wGe+q/0srJVB/DJ4NvBb4Orf9IzyFZVwLuBzwLfC/4QPLLKJTy7bF0LvC/4
fPDD4M/AY4WTnke2agj+H/hS8JPgb8Hjh5deWLZuDj4CfDX4BfDP4MkiSC8p
W7UBHwe+Cfwa+C9w34jSy8vWHcGngu8AvwseLpL0TLJ1VfAe4LPB94M/Ao8a
WXoO2aoOeD/wheBHTK96OGXeBOsvTL9Keb1zkPXYUbydo3Fyzwrr+Ux3m+Xv
s9V6I9NbLy9/ctD6ENNfYr/acdb6MtOFqviNvWX9tOmBo3s3CbP+zvT+I3ty
fLKeMKpzfqoHeRFuTa38Xe9JPtJ1arXW9V7kF12nVl9d702ePBo7tSrFrfqQ
B7pOrSa43pd8s+vU6obr/ch/u06t0kZn709egVtTq86uDyCf5jq12uX6QPJ7
rlOrCDHYB5Fn5tbUqrrr/5H3dJ1aBbk+mPyA69TqietDyKPFZKdWubi9f3U1
Xtd1ajXA9aHki1ynVsdcH0b+0nVqFTcW+3Dy/NweatWEW1vX3CHWV7jHjyA/
4x5PrT64x1tPFJuPt16MW40kb8ntoVajubX1de7x1i+7x48i/8btT61SxuF5
66W5fUeTt+PW1Hoit2cM+VZuNZb8Jrc/tfrrrm89XVxefxx5JW5NrbuYps8X
rM8wTZ8vjCffbZo+X6BWD0zT5wvWI8bL5Xy+MIE8q2n6fIFa14jH5zuRvHc8
Z78m1HpuPGe/HdZD4jn7+UwifxrP2a8ztYrh4+x3yrqfj7Nf+snk9X348VHr
gdzvrS/m9p9Cfpz7IrV6ze2ZSh4vvtObqFVBbt9p5E25p1CrYdxqOvlK0/T5
A7U6Z5r+vmz9I8+HWk+SwJnPOoO8eAJnvje1ap2An1/rY3g++kzyDTxfj1pf
4flg6z94/qX1VAmd+fyzyMsm5OtHrdubfrFkfM6f1iebvlwucbNes8m3md7z
fMn4t9Tqtuml43PuaTeH/J/pCTn3PH9ErTIk8navS94Fgsgrm27m/X/coFbd
TJf3Ll9rLvlM097Dl5yhVntNJzYHzCMPTcTXg1pFTuycb5H55NkSO+e7jVrV
Suycb84F5H0SO+e7ilrNT+ycb9qF5IcSO+e7gFo9S+ycb+JF5DGTOOc7lVrl
SeKcb4xg8gZJnPMdSa3+S8Kvj8XkS7j9qdVJ7hDrb7h9l5DHT8rPD7UuxB1q
vTm3Zyn5cO5garWaWy0jP+/OU6vP7vrWkybj+eXkJbk1tQ5wfQX5ONep9UbX
V5Jfc51a/+QOte6bnM9nFXk57mBq1ZFbrSafwu1PrXZwh1i/w+27hjxcCt6f
WmeUraqCdwefDb4P/BF4lJTSc8jWtcH7gS8APwL+HDx2Kul5ZatG4IPBl4Gf
An8HniC19CKydQvwkeBrwC+CfwFP7ivdI1sFgo8H3wx+Hfw3eJo00ivI1p3A
p4HvBL8HHj6t9MyydTXwnuBzwA+APwaPlk56TtmqLnh/8EXgR8FfgsdJLz2/
bN0YXIMvBz8D/h48UQbpRWWrluCjwNeBXwL/Bp4io/TSsnVb8IngW8Bvgv8B
T5dJekXZqgv4dPDd4PfBI2aWnkW2qgHeC3wu+EHwp+DRs0j3k63rgQ8EDwY/
Dv4KPF5W6QVkq6bgQ8FXgp8F/wieOJv04rJ1K/Ax4OvBr4B/B0+VXXoZ2ao9
+CTwbeC3wP+Bp88hvbJs3RV8Jvge8FDwSDmlZ5Ota4L3AZ8Hfgg8DDxmLum5
ZasG4IPAl4CfAH8D7uMnvZBs3Qx8OPgq8PPgn8CT5pZeQrYKAB8LvhH8KvhP
8NR5pJeTrTuATwHfbjpPk3BrHli/Y3rwrCQLSq0lV3m9ffpSrilLqVVG04li
VRgeaR15FdOtKjbv05ZadTe9YXjv9qeszzL988CEptnWk+8zXf7n0hoTqfVD
09Py7y39znqUfN6+3+1y/lobyLObzrruReat1Kq26T7PVIqEG8n7mj6cNkmc
vtRqgenYzXOFv2X9sOkmQeW/FNlE/tz0yqvNns+n1rHye/tTnN53/lrPa7pk
lQnn/TeTNzQ9ftTSQ4ep1WDTNw7t2ZZ+C/lS0+n+XFo5ilqdMt210Iu5z62/
Nb23p5pUeSt5ggLejrIx8dB11Lqw6Tovc/aKvY28helFGcq37UatR5h+7d+s
8WXra0wXmt+rWr7t5BdMj7gx3jOLWn0xfdFnad7v1pMV9HaK6nsyNt5B7jHd
buylpPuodRvT244+j5lqJ/n4gvz6oNabTNPvE7F+3TR9//4u8l+m6feJUKs0
hXI53/9vvXwhZz21m7xTIWe9qtR6aiFnvSDrOws564VZv8vr5d1DHr4wnx+1
zlSYz896tcJ8fnvJexTm86NWcwrz+Vnfz+upfeSPeb2q1DpqET4/6zmL8PlZ
r1OEz28/ef8ifH7UeiF3iPWj3OoA+QtuD7WKU5SPt56PO8R6Y251kHwIt4da
LXePt37aPd76e/f4EPKExfh4alWUW1v35w6xPopbHSJfy12IWl3i7mb9K/cq
6ymKOx1qvRR3ksPkbblrUusJ3GOsb+EOsX6D+7v1P9x+R8jTlnC6HbWqyB1s
vTP3TevTueMeJd/FXZFa3efW1iOU5POxnoVbHSOvzu2hVr24tfUg93jrB93j
j5M/cY+nVtE9fLz1XNwh1utxqxPkA7g91CrYPd76MXf+JPkr16l13FLsp8gL
cGtq3cT10+RDXafWK1w/Q37WdWr9wfWz5IlLs1PrYtzqHHkr16n1aNfPk693
nVpfdv0C+XfXqXXKMs7X8wrrZcrw+4n1dmWcr+9P1ieV4feXi+Rby/D1pVa3
eL1A6395vQnW05fl9x/rlco6692y3rUsn+8l8hncmlrtcf0y+QPXqVWkcuxX
yLNya2pV0/Wr5L25/anVPO4Q6yHcvtfIw9z1qHWM8qJVbtm6Pvgg8MXgJ8Bf
g/tUkF5QtmoGPgx8Ffg58E/gSSpKLyFbtwYfC74B/Cr4D/DUlaSXla06gE8G
3w5+G1xVlp5BtqoC3g18Fvhe8IfgkatIzy5b1wLvCz4f/DD4M/BYVaXnka0a
gv8HvhT8JPhb8PjVpBeWrZuDjwBfDX4B/DN4surSS8pWbcDHgW8y/bFRwTlL
rF8zvePBpWxLrf8yPaBNp4O2tW8Nb5d4FbnOMuvlTYfvvjjMtu5o+vjXogOW
W59qetyg67FWWN9hurr3ANvqrmmfMTHyr7Qerqa3vdMnbatMpudO9zRdZb2q
6eZJ77yzrXqYTreo9/DV1mebfpY+buI11vebpu9ftf7IdFe/ciXWWo9ay7z/
eh+wbZ3D9LeiA9qss17H9N5DCX7Y1v1MD6mwccJ66wtNlzlXyXeD9SOmo9R5
stW2emH6zM3BFTZaj13b25O9D8C2ymfaO95lk/VGphN3qB5+s/Uhpu+8ez7T
tl5m2vtws2yxftp0618p99vW70xnGrqr5lbrCet42/t0PbGti5jeOOFN323W
/U339D4B262PNF1wTtpFttVa097l8+ywftH0waUNjttWX02PyPKx0U7ryet6
u6J3A9uqlOmY+b1nZD3Q9MU9hxLstj7B9Azv02tbbzbd0PsC2mP9hukUVade
sK1/mw69lK31Xutp63l7WYPjX23rCqbb3fMft896Z9PZzQWyPs30e+/ltK12
md7Wxa/cAev3TPf7fPqmbRWhvreLmS8A65nr8/3QenXTR0fOnW5b9zTtfTln
OmQ9yLQ5fdv6gOm43if4sPUnpq/Oj/jIto7WwNvey9/7iPVcppuuKhztqPW6
pn1zXp1vWw0w7X35+B2zvsi0GbetjpnuZJ4w6y9Ne1/+r2yruA297X24g09Y
z296V82ePietNzFtvnxta23anNAp6ytMR3pU+pxtfcb0qbb3/E9b/2B64pu+
n23rRI28Xcv7gjtjvZjphD/WJT9rvaXpW94vF9tqtOkFEb0bWF9nuqX3DcW2
umw6g/eCnrf+zfSLmZv/2FYpG3t7fXLvM2C9tGnv21X6i9bbmTYvT9t6omnv
6VS9ZH2rae+r/4FtfdO098ur52Xrf017L2fkK9bTNfF2NO8LwraqZNr79pDz
qvUups3LwbaaYZq+P976btPet7fnttUD096X86Dr1iM29faSsPRxb1jPajrQ
+wTb1jVMZ/W+od+03tv0W+/lt63nmt7yZ1LzW9ZDTPcZnuWjbf3UdBHvA7ht
PUYzb/+d5H3Dsu5n+rD37dC2qm96lPcN+q71gaYrex+ubbXYdOwVJ9ves37c
9OVsrX/ZVq9Nz9r8Z9J96/Gae7ux9w3ogfWCplOZJ8B6U9PeV0OlUOvDTJvl
beuVpr1vn90fWj9nOqf5ArP+sblzv7OtkrRw7nePrRdv4dzvbKvWLZz73RPr
Y1o49zvbakML53731PqVFs79Lsz6jxbO/c62TuXv3O+eWS/r79zvbOv2/s79
7rn1yf7O/c623ubv3O9eWL/t79zvXlr/5+/c72yrDC2d+90r65VbOvc726pb
S+d+99r6zJbO/c622tvSud+9sR7a0rnfvbUeuZVzv7Ots7Vy7nfvrNdq5dzv
bOs+rZz73Xvr81s597sP1g+1cu53ttWzVs797qP1mK2d+51tlae1c7/7ZL1B
a+d+Z1v919q53322vqS1c7/7Yv1ka+d+Z1u/ae3c775ajx/g3O9s60IBzv3u
m/XmAc79zrYeHuDc775bXx3g3O9+WD8f4NzvbKvPAc797qf1pG2c+51tVbKN
c7/7ZT2gjXO/s63GtXHud7+tb2zj3O/+WL/Wxrnf2dY/2zj3u7/WfQOd+51t
XS7Qud/9s94x0LnfqevkU2SrHeB3wMO1lZ5RtqoK3h18Nvg+8EfgUdpJzyFb
1wbvB74A/Aj4c/DY7aXnla0agQ8GXwZ+CvwdeIIO0ovI1i3AR4KvAb8I/gU8
eUfpHtkqEHw8+Gbw6+C/wdN0kl5Btu4EPg18J/g98PCdpWeWrauB9wSfA34A
/DF4tC7Sc8pWdcH7gy8CPwr+EjxOV+n5ZevG4Bp8OfgZ8PfgibpJLypbtQQf
Bb4O/BL4N/AU3aWXlq3bgk8E3wJ+E/wPeLoe0ivKVl3Ap4PvBr8PHrGn9Cyy
VQ3wXuBzwQ+CPwWP3ku6n2xdD3wgeDD4cfBX4PF6Sy8gWzUFHwq+Evws+Efw
xH2kF5etW4GPAV8PfgX8O3iqvtLLyFbtwSeBbwO/Bf4PPH0/6ZVl667gM8H3
gIeCR+ovPZtsXRO8D/g88EPgYeAxB0jPLVs1AB8EvgT8BPgbcJ+B0gvJ1s3A
h4OvAj8P/gk86SDpJWSrAPCx4BvBr4L/BE/9n/RysnUH8Cng28HvgKvB0jPK
1lXAu4PPAt8H/hA8yhDp2WWr2uB9wReAHwZ/Dh5LS88rWzcEHwy+FPwU+Fvw
BEOlF5atWoCPAF8DfgH8C3iyYdI9snUb8PHgm8Cvg/8CTzNcennZqhP4VPCd
4HfBw4+Qnkm2qgbeA3wO+H7wx+BRR0rPKVvXAe8PvhD8KPgL8DijpOeTrRqD
DwFfDn4a/D14wtHSi8rW/uCjwNeCXwL/Cp5ijPRSslVb8AngW8BvgP8BTztW
ekXZujP4dPBd4PfBI4yTnkW2rg7eCzwI/CD4E/Do46Xnkq3qgQ8ADwY/Bv4K
PO4E6QVk6ybgQ8FXgJ8F/wCeeKL0YrJVK/DR4OvBL4N/B085SXoZ2bod+CTw
reC3wP+Cp58svZJs1RV8Bvge8AfgkaZIzypb1QTvDT4PPAQ8DDzGVOm5Zev6
4IPAF4OfAH8N7jNNekHZqhn4MPBVpgMn3gwqZf2c6ckRi+rl1j+Z3j1wQWC0
G+RJpnv70cd/VTtTqxKmY3ZolfeS9damCzw8mjT/TfKxpv0bZlJB1HqD6bEX
xob9tn7V9Nbyr8/63yL/Yfru/upbj1Kr1DO8HTn/5qDMt8nLmvZbF19PoFYd
TDdK1yfwvfXJpofPvVm17h3y7abXxyuadxe1vm36+pgFSVPcJVczneuhqXUG
0/S/R1ivYpp+Pu4eeTd3nlrNcuet73Xn75M/dOepdeRZPG89+yyef0BeaxbP
U6u+7rz1+e58KPlhd55aP3PnrceazfMPyfPM5nlq1XA2z1v/z51/RL7UnafW
J91562/d+cfk8efwPLUqPIfnrTefw/NPyEe489R6tTtv/YI7/5T8sztPrZIF
8bz1kkE8H0beJojnqfU40/T9i9Y3mabvP7J+zbT99wzJf5mm72+07juXv36e
kZefm4v/vUPyjnOd9fJanzrXWa+q9R1zc/G/h0h+l9fT1sPNE60yydZVwXuA
zwbfD/4IPOp86Tlkqzrg/cAXgh8BfwEee4H0fLJ1I/Ah4MvAT4O/A0+4UHoR
2coffCT4WvCL4F/Bky+SXkq2DgSfAL4Z/Ab4b/C0wdIryFadwaeB7wK/Bx5h
sfTMslV18J7gQeAHwJ+AR1siPZdsXRd8APgi8GPgL8HjLpWeX7ZqAq7BV4Cf
Af8AnmiZ9GKydUvw0eDrwC+DfwNPuVx6admqHfhE8K3gN8H/gqdbIb2SbN0F
fAb4bvAH4BFXSs8qW9cA7w0+FzwE/Cl4jFXS/WSr+uADwReDHwd/DR5vtfSC
snVT8GHgK8HPgX8ET7JGenHZqjX4GPAN4FfAf4CnWiu9rGzdHnwy+Dbw2+D/
TD9sm/XneesZ1nm73b4JkVI/J69s+l3cd3G7Uqtupvu0qZXioPWZpv/s3pop
zgvyvaZHxE6UtwW1DjUdo3W/EhutR17v7Wk7b1f6Zz2b6SQxi9er8ZK8lulF
/t7/o9Z9TGfcHq7TO+vzTa+PFtC35CvyQ6bzNT8+bDK1emZ675bMkx5Yj7nB
26WjjA/K9Zo8j+lTTd4sG0KtG5iuuanGpgvW/zN9I+KWvanfkC8x3bxRghNd
qdVJ00/W97l80Pob0x3D37oX5y15/I3e/li/6IsW1LqQ6f5rF3zeaL35Ruf6
q3fkw7n9qdVq7hDr57l935N/5tbUOummXPb3cVy2XtI0/b6ND+QBps3v7+hD
rcaZpt/PYX2jafr3Wz+SXzNNv8+DWv/cxOdj3Xezs5/PJ/Jym539AqhVx83O
fjusT9ns7BftM/mOzc5+Taj1nc3Ofuuth9vC1+cLeUbT9PsyqFVV0/T9mda7
u/NfyWe789R6nztv/ZE7/408ylaep1Y5tvK89dpbef47eT93nlovcOetH3Hn
f5A/d+epVextPG897zae/0neaBvPU+vB7rz1Ze78L/JT7jy1eufOW0+wned/
kxfZzvPUusV2nrc+0p3/Q77GnadWF91561/c+b/kyXfwPLX27OB564E7eP4f
+Xh3nlptduetX3fn1RHjv915ap1mJ89br7CT58ORd9rJ89Rqmjtvfac7H578
njtPrcPv4nnrmXfxfATyatyaWvV0PSL5HNep1QHXI5E/dp1aRdvNHpk8J7em
VnVdj0Le33Vqtcj1qORHXadWL12PRh5nDzu1ys+topM33sPXg1rpPXw9rC93
52OQn3HnqfV7d956or08H5O86F6ep1Yt9/K89VHufCzyde48tb7kzlv/5s7H
Jk+xz/HK1Kr0Puf4mdbb7nPmQ61P5Pmscci38HxvanWT50Os/+H56HHJ0+3n
86PWFfc788HWu+x35l9an87z+eOR7+Z5Ta3vc4daj3jAaY8PeRbuYGpVg1vF
J+/F7U+t5nKHWD/I7ZuA/Cm3ptbRD/L+1v24PQnJ63EHU6uB3CoReTC3P7U6
zh1i/RW3b2LyeCG8P7UuwB1qvSm3Jwn5UO5garWSWyUlP8vtT60+codYT3yI
909GXpxbU+tW3KHWx3B7kpOv5w6mVle4VQry79z+1CrVYd7fehlu35Tk7bk1
tZ5kmj5Psb7NNH0+kor8lmn6PIba+66ay/l8JTV5+iO8HrWqfITXs971CK/n
Sz7zCK9Hrfcc4fXSkIe661HrSEf58VjPxq3Sktfk9lCrPtza+jz3eOuH3OPT
kYe5x1OrmMf4eOu5ZasG4IPAl4CfAH8D7nNceiHZuhn4cPBV4OfBP4EnPSG9
hGwVAD4WfCP4VfCf4KlPSi8nW3cAnwK+HfwOuDolPaNsXQW8O/gs8H3gD8Gj
nJaeXbaqDd4XfAH4YfDn4LHOSM8rWzcEHwy+FPwU+FvwBGelF5atWoCPAF8D
fgH8C3iyc9I9snUb8PHgm8Cvg/8CT3NeennZqhP4VPCd4HfBw1+Qnkm2qgbe
A3wO+H7wx+BRL0rPKVvXAe8PvhD8KPgL8DiXpOeTrRqDDwFfDn4a/D14wsvS
i8rW/uCjwNeCXwL/Cp7iivRSslVb8AngW8BvgP8BT3tVekXZujP4dPBd4PfB
I1yTnkW2rg7eCzwI/CD4E/Do16Xnkq3qgQ8ADwY/Bv4KPO4N6QVk6ybgQ8FX
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
Wo90fQn5Wtep9UXXl5J/dZ1aJ8/Pvoy8FLem1oGuLyef4Dq13uz6CvIbrlPr
366vJE9bgJ1aVyjgPL8vrXcuwM//KvJpPB9CrXbxfNbV5Pd4fia1ilCQ91tD
nrmgM9+BWlUvyK9H6z153rOWPIjn11DrAzyfcB35E57X1DpaId5vPXkubk2t
67q+gXyA69R6kesbyY+5Tq1fur6JPG5hdmqdvzBfP+tNCvP120yueT6EWq3g
+axbyM/w/Exq9YHn1VbyREX4+lGrYkX4+llvWYSv3zby0Ty/hlqv4/mE28kv
87ym1t+4g62nLMrna700d6j1dtxqB/lEbl9qtZXbY/0mt7/1v9zaerpiPL+T
vBK32kXehTuEWs3g1rvJd3OHUqsH7np7yCMW58dHrbJyq73kNbj9qVVv7hDr
c7l995GHcGtq/ZQ71HqMErz/fnI/7mBqVZ9bHSAfWIJfL9RqcQl+/qwfd+cP
kr9256l1vJI8b71gSZ4PIW/K3oFaDSvJrx/rK3nec4j8nLsetf7I8wkPkyfx
8OOn1sW51RHy1q5T6zHcIdY3uPNHya9we6jVD/d466lK8fHWy3KrY+TtuT3U
ajK3tr7NnT9Oftt1av3P9RPkGUqzU+vKpfnxnyTvVpqvD7WeyfOeU+R7ef4a
tQ7l+Q6nySOX4f3OkGeTrWqB9wGfD34I/Bl4zLLS88jWDcD/A18CfhL8DXj8
ctILyVbNwYeDrwY/D/4ZPGl56SVl6wDwceAbwa+B/wT3rSC9nGzVEXwK+A7w
O+DhKkrPKFtVBe8OPht8H/gj8CiVpOeQrWuD9wNfAH4E/Dl47MrS88pWjcAH
gy8DPwX+DjxBFelFZOsW4CPB14BfBP8CnryqdI9sFQg+Hnwz+HXw3+Bpqkmv
IFt3Ap8GvhP8Hnj46tIzy9bVwHuCzwE/AP4YPFoN6Tllq7rg/cEXgR8Ffwke
p6b0/LJ1Y3ANvhz8DPh78ES1pBeVrVqCjwJfB34J/Bt4itrSS8vWbcEngm8B
vwn+BzxdHekVZasu4NPBd4PfB49YV3oW2aoGeC/wueAHwZ+CR68n3U+2rgc+
EDwY/Dj4K/B49aUXkK2agg8FXwl+FvwjeOIG0ovL1q3Ax4CvB78C/h08VUPp
ZWSr9uCTwLeB3wL/B56+kfTKsnVX8Jnge8BDwSM19nbDzL+ftbeezfSqueV/
XLNe0/T3mFOjlz5L3sd0xSF3km+g1vNMz/6QIUeyc+SHTD9r3a3EKGodZrrg
9T01PlqP2cTboypGatn8PHlu017ucZpaNTCdMcfc4QUukA8y3WfRkxlLqNUS
08fi5VoR+yL5CdMJR/TfOYBavTHd5uuRk2HWfZp6e3u72LdrXyIvZDrinYav
DlDrZqbrVlv6O+tl8uGmlx18E2s2tV5l+nPuQqkjXCE/b7rMsmF+Xan1J9PT
E50rdcd60mbefjwmcZ0KV8lLmM7zq2XAVmoVYHpY53W9U18jH2v68oOvo8ZT
q42m09YuNeeb9aumux8dv7r1dfKfpg8VuL7nArVO3dzb8Vb7ni16g7ycaf/k
He+tpNYdTG+auP1t/JvkU5o7z7+m1ttNm2/nP279jmnz/f8xb5GrFn72+/vr
UKuMpun3iVqv0sJZL9R69xbOehlvk89q4azXiVrt4/W2Wn/I6/2wHsXfWc9z
hzy7v7PeKGpV299Z76z1vv7OevHvki/wd9ZrRK0P83rB1p/zemHWY7V01st+
jzxvS2e9ntS6YUtnvd3WB7fkr5/75Eu5g6nVKW7PA/K33KHUKkErvv6h5IW5
Q6lVC27PQ/IR3MHUag23ekR+wXVq9cU9/jF5sta8PrXycOsn5G1Mm59XOket
xpum3yf2lHyTafPzSu2p1XXT9PNR1n+ZNj+vFDGMPE2An/PzStS6fACfn/VO
Ac5+b6xPDXD2K/qMfGeAs99Yan03wNnvuvXwbZz90j8nz9TG2a8HtarWxtkv
xHqPNs5+sV6Qz2nj7NeEWu9v4+y32vrjNs5+X61HDXT2K/uSPGegs980al0n
kK+v9f6Bzn45XpEvDHT2G0itjgY6+52y/iLQ2S/Ra/I4bZ39Aqh1vrbOflus
N27Lz/8b8iHcwdRqObfnLflp7lBq9Z5bvyNP2M5p3/fkRblDqLU/t/8H8lHc
6iP5Wu5u1OoSd6j1r9w1P5GnaM/rU+tS3H6fydtyB1PrCdxxv5Bv4dbU+oa7
nvU/3OoredoOfD2oVUVubb0zd4j16dzqG/ku93hqdd893nqEjny89Szc6jt5
dW4PterFra0HucdbP+ge/4P8iXs8tYreiY+3nss0fV5jvZ5p+nz2J/kAd55a
Bbvz1o+587/IX7nz1DpuZ34+rBfgDrHehDvU+lBu9Zt8BbcvtTrL7bH+gdvf
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
8B/g+W9z9+Ite4GHg+8Cvwv+D7xoLPeGvEV/8HngB8HjwFPe4V6Kt2gOPhR8
Kfgx8Jfg6e9yd+Ut24CPAV8FfhY8ETzrPe6VeYsO4BPBN4JfBv8Mnus+91q8
ZVfwUPBt4DHgP8EdH3CvozpNvv5zc2nvrTr3+RL1x2ufqbr0sMe/Xmnfo7pG
kcXbmv0lv6fa+1qLLvuoRZKHtu44Nl0Ox3/kxVT3L3Xy/BRq0Vj1hNjRY99p
H6B6zqQKrm3ESeULVK9xffv8CLU8pHr3o3WLiiUhf6L69PSOTcKoZapHto6t
kjPJV+1lVL9+cXVX+6TkLVT/nBPS8xS1GK46nYdn3jLJyJepzvv255W51OKE
6rJLoib+1v5Kda36fSp1TU6eIc7Wzb4UeXOBWrqp7rTqwXK3FOS+qgc2nd9i
CbUcqzr4t3fKZCnJ16ietzHVgUBqeU71utbRQde1v1O9N9mIglVTkWd7bOuz
211iVlKLqqrvto+fmiY1eUfVb9Kurj6AWkxS/Xuv//tY7ZGq/+uWbY17GvKr
qvNnudRmA7X8otr56KR0mdKS53lia48+NY8Oo5buqlvk+jbwkfbuqruc3las
XjryaaoHD+p5dyu12KF6smPBsOzpyW+pXnDpjsdYavFb9YaRs788117wqa33
F2+0scl/5PVUn7+ZrP1uatlH9f3xhzLly0A+W3Vi2SEng6nlXtV/75UZnqD9
geqMIS9K+WQkT/rM1o4VVzw6SC1KqHZ92mZO4UzkTVTXnpmp3jRqMUi1T41z
Pz9qX6i6W/z4rX6ZyY+oHrqgaufj1PKp6qlenxycspCneW7rRR82nZtFLcuq
jlzedcwP7T6qDzbK59IpK/kI1Re/xzw7Sy1WqH64Nmyhczbyk6rftajXeCG1
iH9uvn8dyDO+cLb+3hu1qKCa/v6Ydj/V9PfetEvV9PfetK9VTX/PLDv5BdX0
996o5fsX1n5Se/aX1n57tFd7ae2XqL3TS2u/IjnIJ7+09vOnFptfWvvN1n7t
pbXfOe3fXprz5STP+8qcj1p4vjLn097jlTmf9hmvzPm073xlzpeLPPaVOR+1
/PPKnE974dfmfNrrvzbn0973tTlfbvI5r835qMX+1+Z82h++NufTnjzenC8P
ecl4cz5q0TTenE/74HhzPu2L4835tB+NN+fLS/483pyPWqZ9Y86n3fmNOZ/2
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
yd+b3k4tsruaz+cg8mqmZ1KLTqbFYPLJqun1MGqxWTW9fqb9mpl3H0L+zcxH
Usu8bta8w1ByTzdzPmrZw7T7MPIZpsVw8p2mo6lFrP36EeR/7PMjyQuXN04t
65sWo8j72p1azrH7aPL9dqeWD+0+hjx5BePUsqRpMZa8qd2p5WC7jyNfbHdq
edR0tPbn9nlJnraieT7Uwtm01N7KtBhPPsru1DLC7hPIT9udWr6x+0TyzJWM
U8uKpkUweTu7U8vxpt0nka+3z08mv2g6mlp8tF8/hTxHZXP9VPIapkUIeWe7
U4uppqX2LbzFDfDv4PmrcK/NW/QCDwPfBX4H/B94karcG/KW/cDngR8AjwNP
UY17Kd6yGfhQ8CXgx8BfgKevzt2Ft2gDPhp8FfgZ8ETwLDW4V+Yt24NPBN8A
fll1mm9Fm73X/km16+oCCx+Ekueqaet2TXPFnZ9GXlN18K8sJfZNJ++qeuv6
9P3XziAPUX27Zcp9s8PIt9U0+4WT31RdYmjn4vOpxU/VTRNOem/WXqCWrW08
9Lj2OqqXx4Ysi9UeqPqUd8LJt9pnqrZdnpB8Jvlu1dmq7ciah1rcU23Lai7a
hbutbct3rqe9mOrQZbEh7bU3Um0b3zFI+wDVavsQ7fPdzf/+1n7I3TrPHu2P
3a3zXNSeysM6zxPtpT2s83zX3sLDOk+GWeTDPKzzFKEWyzys81TTftzDOk9z
7a88rPP00P6fp3WeMdrdPK3zzNHe1tM6z0btYz3Nv0faV3ta57ml/ZyndZ4E
7W89rfMknU2erbZ1npzUskpt6zxltXesbZ3HS3twbes8/toja1vnGaD9Sm3r
PFO0f6ltnWeZ9txe1nmitLt7Wec5p72bl3WeOO3TvKzzfNW+3cs6T/o55Le8
rPMUopa/vKzzVNZesI51Hm/tdetY5+mqvU8d6zyjtM+qY51nlva9dazzrNd+
v451nsPak9a1znNDe/G61nlea29S1/z7P5d8IG+xEPww+FPw1PW4l+UtW4KP
AF8OfhL8NXjG+tzL8xZ+4OPA14KfB38P7tCAezXeMgB8Mvgm8GvgX8HzNuTu
wVv0AJ8OvhP8Nvgf8EKNuNfnLYPA54DvA38Inqwx95K8pTf4YPBF4EfBn4Gn
bcK9HG/RCnwkeAT4KfA34Jm8uVfkLf3Bx4OvA78I/gE8R1Pu1XmLzuBTwLeA
Xwf/Dp6vGffavGVP8DDwKPA74H/BizTn3oC36Ac+F/wA+CPwFC24O/EWzcCH
gC8BjwZ/AZ6uJXcX3rI1+GjwleBnwBPAs/hwr8RbtAefAL4B/BL4J/CcrbjX
5C27gIeAbwW/Cf4DvEBr7l68RSB4OPhu8Lvgog33oqq/hBRPvl97I9VO1fb3
GjmPvL/qgISGV6rNJ5+vet6y++X/UMuDqs979118ZAH5Y7O+XEiesq2L/nni
M2pRWrX69esGi8ibq1Y/T9xCLYappp8nLiZfqvr+nqB7Q6nFcdX0++HaX7a1
9nNfQv6fr7XfGmrp6mvtl2YpeVtfa78gajnG19rvuvbVvtZ+FZeRn/W19ltC
Ld76mue3nDyrn7VfV2pRxc/a75z2Dn7WfmVWkAf7WfvNppYb/az9vmq/4mft
5x9B/tnP2i+aWuT2t/YrspK8lr+1Xwi16OZv7ZeoPdTf2q/FKvLt/tZ+e6hl
jL+1X57V5L/8zeePWjq2s3WpPhmK3NVeV3Xr2Lz1y68h7616glepPmHUYpbq
LdurzHylfY9q2/guz7Xk91UnD2kdu5RaJmlv63Jfuv7+qr24ar9OgxybryNv
rHrypfFem6jFQNU7qszsmWI9+QLV99cun96RWhxWnSrLlu37tT9R7Tr24M2s
G8hTd7B1h/hz34OoZZkO5rzaW/KWw8GXg58Afw2eoSP38rylL/g48DXg51X/
vf29eYL2d6rPd9+c228juUOArRd86fj0DLWsqrprcNbNFSLJA1S7ZD0zeDW1
nKT678qRNTJvIt+k+oJz2ZTjqOVV1QuPPr6coP2r6m7e8xb4bSbP00k93wf1
A85SCw/V/3r/LlFxC3l31Rd/bvuwmlpMV70wpMuBzFvJd6junjPHxHHU4jat
t/58o0Ttv2m9CmOz+W8jL9RZrXfS5cFZallP9aKWz9dW3E4epLr7k4V911DL
2ardBjSulGUH+b7O5nlSywe8RbIu3EvwFt7gg8AXgR8Bfwaepiv3crylD/hI
8BXgp8DjwTN1416Bt/AHl+DrVN9Mn6tG+Z3kF1TvCK019Q21+KA6LHX3G6ui
yLN3t3Xg5On5/XaRV1ddL3lUr8y7yTupLjLhzq6z1GJKd7PfHvLNpqOpxXXT
Yi/5N9Pu1CJfD3O9dk/T0dp7mhb7yGeYdqcWUfbrtceqVq/f39H+V7V6fd9t
P3nhni769f/p1KKBavr5gPa+Pc36B8jn9rTWW0Qt9/e01vuk/ZFZr/FB8uS9
rPXWUQunXub+D5E3Ne1OLYaYltoXm47WHm2//jD5c/v11CJdoLleu7PpOO2t
TbsfIR9lOoJarDQtjpKf5i0SwDP35l6Jt2wHPgF8Pfgl8I/gOftwr8FbdAGf
Cr4V/Ab4D/D8Qdy9eMte4OHgu8Dvgv8DL9qXe0Peoj/4PPCD4HHgKftxL8Vb
NAcfCr4U/Bj4S/D0/bm78pZtwMeArwI/C54InnUA98q8RQfwieAbwS+DfwbP
NZB7Ld6yK3go+DbwGPCf4I6DuNfhLXqDzwTfA34PPMlg7sV4i8bgA8AXgB8C
fwKeagj3MrxlC/Dh4MvAT4C/As8wlLsbb+ELPhZ8Dfg58Hfg2YZxr8pbdgSf
BB4JfhX8C3ie4dzdeYvu4NPAd4DfAv8NXnAE93q8ZR/w2eB7wR+AJx3JvQRv
2QR8EPhC8CPgT8HTjOJelrfwAR8BvgL8JHg8eMbR3Cvwln7gEnwt+AXw9+DZ
x3Cvxlt0Ap8Mvhn8Gvg38LxjuXvylj3AZ4DvBI8F/wNeeBz3+rxFX/A54PvB
H4Inl9xL8hZNwQeDLwY/Cv4cPO147s68ZSvwUeAR4KfB34BnnsC9Im/RDnw8
+Hrwi+AfwXNM5F6Dt+wMPhV8C/gN1Tn7Js5opf276vR7v56O154/2JqX0eS1
Tb+nFr1MBxwjDzN9lVrsMu1+nPyO6e3U4p9pxxPkRSZZPZNaNDQtTpL3U03/
fRa1mKeaft9G+wEzH6E9zszHaE8x2ZpPe4q81GRzf9Sy2WRrfoj2oWY+UvsS
Mx+n/ZiZdzhN/sLMN6QW6aeY56fdRXWNPYV6Vj5D3kb1yD51rr6nlqNVK954
lnyV6k+xoRGdzpGfUe0cviV17vPkiaptl/e/Ti2zTLX1xl8fY0MvkFdW/WKH
g0fti+TtVRe2Lf+LWkxUHZDfP/OuS+QbVC+9OWZEn8vkl1W7ns7ZJf0V8k+q
S66d26IhtcgVYuuCwZk8p2qvqTpXl+kup7V3VZ3JM3XB5FfJQ1SnVhdQi20h
5vlovxliPb947T9DrOfb6hp5gVBrPppa1Am15p2ukweGWvPzqMVMMy9ukO82
7Ugt7pl21y6mma9n7cVMS+2Nppn70z5gmrm/m+TzzXw0tThk5p1iyB+b+XnU
ItV0c3+3yEtPN1/P1KLFdPP1q32YmXe/Tb7MzEdSy+Nm3iGW/JWZl9Tyvxlm
Pe1uM8z93SFvO8PMU4ux9nntq+3zd8nP2eep5Vvj8dqzhZnnc4+8Sph5PtSi
Y5hZ7z55sJmfRy0izbx4QH7FzAdSiy9mPkZ77nDzfB6Su4eb50Mtu4Wb5/OI
fJqZl9Ryu+lo7bdMizjyX/b1qUXBmeZ67XVNi8fkfexOLWfZ/Qn5XrtTy/uq
1eshF7UnneVi/T7lU/LiqtXrI92pRRPV9PuX2gfOMus/I184y1qvMbU8bNZb
pP2pWe+F9tSzrfXcnpOXnW3uj1q2NC1ekI+wO7VcbveX5CftTi1fm47WnnGO
mX9FXt60O7XwMy21jzMdrX2t/frX5Oft11OL9/brtTvMNV8v2qvNNV9/8eQB
c808tZhsn9e+yT7/hvyafZ5afuUt8s7j7sFb9ACfDr4T/Db4H/BC87nX5y2D
wOeA7wN/CJ5sAfeSvKU3+GDwReBHwZ+Bp13IvRxv0Qp8JHgE+CnwN+CZFnGv
yFv6g48HXwd+EfwDeI7F3KvzFp3Bp4BvAb8O/h083xLutXnLnuBh4FHgd8D/
ghdZyr0Bb9EPfC74AfBH4CmWcXfiLZqBDwFfAh4N/gI83XLuLrxla/DR4CvB
z4AngGdZwb0Sb9EefAL4BvBL4J/Ac0Zwr8lbdgEPAd8KfhP8B3iBldy9eItA
8HDw3eB3wcUq7kV5i0bg/cHngx8EfwyecjX30rxlc/Bh4EvBj4O/BP9vDXdX
3qIt+Bjw1eBnwd+CZ13LvQpv2QE8GHwj+BXwz+C513GvxVt0Aw8F3w4eA/4L
3HE997q8ZW/wWeB7wO+DJ9nAvThv2Rh8IPgC8MPgT8BTb+RehrdoCT4cfDn4
CfDX4BkiuZfnLX3Bx4GvAT8P/g7cYRP3qrxFAPgk8E3gV8G/gufZzN2Dt+wO
Ph18B/ht8N/ghbZwr8dbBIHPBt8H/gA82VbuJXgLb/BB4IvAj4A/A0+zjXs5
3tIHfCT4CvBT4PHgmbZzr8Bb+INL8HXgF8A/gGffwb06b9kJfAr4ZvDr4N/A
8+3k7slb9ASfAR4FHgv+F7xwFPcGvGVf8Lng+8EfgSffxd2Jt2wKPgR8MXg0
+HPwdLu5O/MWrcFHga8EPw2eAJ55D/dKvGU78Ang68EvgX8Ez7mXew3eogv4
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
nwa+HfwW+C/wgsW41+Ut+oDPAt8Lfh88aXHuxXmLJuADwReCHwZ/Cp66BPey
vGVL8BHgy8FPgr8Gz1iSe3newg98HPha8PPg78EdnLhX4y0DwCeDbwK/Bv4V
PG8p7h68RQ/w6eA7wW+D/wEvVJp7fd4yCHwO+D7wh+DJynAvyVt6gw8GXwR+
FPwZeNqy3MvxFq3AR4JHgJ8CfwOeqRz3irylP/h48HXgF8E/gOdw5l6dt+gM
PgV8C/h18O/g+Vy41+Yte4KHgUeB3wH/C17ElXsD3qIf+FzV717MWLBG+wHV
3nUXXrmi/ZHqzWtXpfqlPYWbrdOl2FKrWAK5k+rArnuHNacWzVSfPXFs22jt
Q1QXL3zx5XrtS1RPnnCrwA3t0aqfPY5r81f7C9W1Pd6El0wkT1fe1isjvpzx
oRYu5c39a2/NW4wGXwl+BjwBPEsF7pV4i/bgE8A3gF8C/wSesyL3mrxlF9Xx
X+MCCrwlD1E98p4IP00tt6pOF+14OOgd+U3VS9e4v8n2nvyH6tIhAbkOUYsC
lWx9OEjW6/KB3Eu1d4uIIWk/kgeqflgxevUOahmuul+euGttP5HvrmTdn/hM
ftd0NLXt/wA29/+FvKjpaGrRyLT4St7ftDu1mG+/XvtB+/XaH9uv/0aesoqZ
pxalTYvv5M3tTi2G2f0H+VK7U4vjdv9J/tLu1OK/qsZ/kbualtSird1/k4+x
O7VYbfc/5GdVD7d9VKYWb1V/eP/+fX/tWaup769evXpt1F5F9ZPHtg/tHVT7
2T5y/yUPVn3j+vXrLajlRtWNbB/TtF9RffKE7UP7Z9XVbR+/teeubuvdu3bt
Kv+PvJbqMraPIGrRTfW6tbYP7aGq89s+Hmrfrnq+7SO7OKU8RnVG20dTavFL
9dQptg/tjjXM51d73RrW8/iuvXcN63k4JyGfVcN6Hr2o5Z4a1vNYqf1+Det5
3NWepKb1PLIkJS9e03oejahl45rW85iofWBN63kc0r6gpvU8Pms/XNN6HmWS
kT+paT2PbtQidS3reSzXXqaW9TxuaW9Zy3oeGZOTD69lPY961GJ5LfP1ov0E
b/EaPIM79/K8pS/4OPA14OfB34E7eHCvylsEgE8C3wR+FfwreB5P7h68ZXfw
6eA7wG+D/wYvVJt7Pd4iCHw2+D7wB+DJvLiX4C28wQeBLwI/Av4MPE0d7uV4
Sx/wkeArwE+Bx4Nnqsu9Am/hDy7B14FfAP8Anr0e9+q8ZSfwKeCbwa+DfwPP
V5+7J2/RE3wGeBR4LPhf8MINuDfgLfuCzwXfD/4IPHlD7k68ZVPwIeCLwaPB
n4Ona8TdmbdoDT4KfCX4afAE8MyNuVfiLduBTwBfD34J/CN4zibca/AWXcCn
gm8FvwH+Azy/N3cv3rIXeDj4LvC74P/Aizbl3pC36A8+D/wgeBx4ymbcS/EW
zcGHgi8FPwb+Ejx9c+6uvGUb8DHgq8DPgieCZ23BvTJv0QF8IvhG8Mvgn8Fz
teReS/Wkr1nuNkpB3lX1s8phTyunJA9V7TkqTWLRVOTbVK88HPw1S2ryGLOe
SEP+UzW93yi1cPRxtd7/U3sdHzOflry3j5mnljPt89r32OfTkd8zLalFklbG
05MXMy2pRWO7/0c+oJW1fiC1WNDK2j9G+yEz756B/ImZj6SWqVpb8w4Zycu0
NvtRyxam47QPN+2eiXyZ6QhqccK0yEz+yj5PLTK0MetrdzMdrd3XtMhCPla1
evvQQdRijWp6f1Ht51Sr9x/1zUr+TjW93ym1zNbW7J+NvGpba70oatmxrbVe
MQfySW2t9RZRy8i21nrps5NfNetJavlFNf09Ne15fF2tv3+Wg9xdNf29MmrR
XTX9fTHt01TT33PLSb5DNf39NWp5y9c8j1zkv32t/fypZUE/a7892uv5Wftl
yU3ex8/aL4hazPaz9junfa+ftV+RPOQP/Mz5qGVSf9aiBG/ZRPWwcX/L5stL
Pkj1Tx+fAkeo5ULVY5wiM3bMR37EXC/ykz81HU0t0rQz6xcgL2s6glr4mI7W
PsJ0nPYVpoUj+UnTAdQi3n699oztrXYsSF7BtKSWfqbdC5FL06Iw+Vq7U4sL
9uu1vzcdrT17B3N9EfJqHazvv3nUolMH6/vTqSj5ZDMfTS02m/lWxcivmfl4
avHNzMvi5Hk7muuphadpUYK8h92pxQzTsiT5TtNx1CLWtLsT+R/TEdSicIBZ
vxR5fdMB1KKv6Wjtc0w7libfb1pSy4cB5t8z7ck7medThrxkJzNPLZp2MvPa
B9vny5Ivts9Ty6O8xXPwtJ25O/OWrcBHgUeAnwZ/A565C/eKvEU78PHg68Ev
gn8Ez9GVew3esjP4VPAt4DfAv4Pn78a9Nm/RCzwMfBf4HfB/4EW6c2/IW/YD
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
yMer9l1YOInPQPL1qkus73H/L7W8qPrr7k17Nw4i/6j61Ml3s30Gk+fYZuu5
N9z6/qMWNVR3fjKsQeQQ8s6qXT4cLNJqKPnUbeb5DyPfolr9PtIoanFDtfp9
pK/av6tWv480cDh5/u2u1u8/UcvaqtWvH/UaQd5Ltfp9pGfUMmy7tV/ASPJd
26397lHLO9ut/VqPIv+33drvOrUsssPar8lo8oY7rP3OUct+O6z9vMaQz9th
7RdNLQ/ssParNpY8boe13x5qmWKntZ/rOPJSO639tlDLZjut/UpK8qE7rf3W
UMslO639HMeTH9tp7beEWr7Yae2XfQJ5+ihrv9nU0iXK2u+/ieRtoqz9Qqjl
6Chrv+TB5KuirP0ktTxjWkwiT7Q7tcyyy1W//rZOe2XV9Pqc9vaq1et3n7RP
VE2v700m37DLWs+dWlw263XX/smsN117rt3WelHaa+621rujvetuc79TyEN4
i23gN8F/ghfYw70ObxkIPhN8N/g9cLGXezHeshH4APD54IfAH4On2se9NG/R
AnwY+DLw4+CvwP/bz92Nt2wLPhZ8Nfg58Lfg2Q5wr8JbdAQPBo8EvwL+xbTU
nvug+fqdSu5uWoSQdzMdTS2mmZah5Nvt108jv2W/fjr5L/v11KLgIXP9DPK6
vEUf8Fnge8Hvgyc9zL04b9EEfCD4QvDD4E/BUx/hXpa3bAk+Anw5+Enw1+AZ
j3Ivz1v4gY8DXwt+Hvw9uEM092q8ZQD4ZPBN4NfAv4LnPcbdg7foAT4dfCf4
bfA/4IWOc6/PWwaBzwHfB/4QPNkJ7iV5S2/wweCLwI+CPwNPe5J7Od6iFfhI
8AjwU+BvwDOd4l6Rt/QHHw++Dvwi+AfwHKe5V+ctOoNPAd8Cfh38O3i+M9xr
85Y9wcPAo8DvgP8FL3KWewPeoh/4XPAD4I/AU5zj7sRbNAMfAr4EPBr8BXi6
89xdeMvW4KPBV4KfAU8Az3KBeyXeoj34BPAN4JfAP4HnvMi9Jm/ZBTwEfCv4
TfAf4AUucffiLQLBw8F3g98FF5e5F+UtGoH3B58PfhD8MXjKK9xL85bNwYeB
LwU/Dv4S/L+r3F15i7bgY8BXg58Ffwue9Rr3KrxlB/Bg8I3gV8A/g+e+zr0W
b9ENPBR8O3gM+C9wxxvc6/KWvcFnge8Bvw+e5Cb34rxlY/CB4AvAD4M/AU8d
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
2hPMfIz2LJ3M+nHklXiL9uATwDeAXwL/BJ6zM/eavGUX8BDwreA3wX+AF+jC
3Yu3CAQPB98NfhdcdOVelLdoBN4ffD74QfDH4Cm7cS/NWzYHHwa+FPw4+Evw
/7pzd+Ut2oKPAV8Nfhb8LXjWHtyr8JYdwIPBN4JfAf8Mnrsn91q8RTfwUPDt
4DHgv8Ade3Gvy1v2Bp8Fvgf8PniSQO7FecvG4APBF4AfBn8Cnro39zK8RUvw
4eDLwU+AvwbP0Id7ed7SF3wc+Brw8+DvwB2CuFflLQLAJ4FvAr8K/hU8T1/u
Hrxld/Dp4DvAb4P/Bi/Uj3s93iIIfDb4PvAH4Mn6cy/BW3iDDwJfBH4E/Bl4
mgHcy/GWPuAjwVeAnwKPB880kHsF3sIfXIKvA78A/gE8+yDu1XnLTuBTwDeD
Xwf/Bp5vMHdP3qIn+AzwKPBY8L/ghYdwb8Bb9gWfC74f/BF48qHcnXjLpuBD
wBeDR4M/B083jLszb9EafBT4SvDT4AngmYdzr8RbtgOfAL4e/BL4R/CcI7jX
4C26gE8F3wp+A/wHeP6R3L14y17g4eC7wO+C/wMvOop7Q96iP/g81X62j7va
D6qubvs49Jg8TnV+28fyJ+QpR1vXy6fkpUw7PiNvbjqaWg41HfCcfKlp8YL8
mH09avHS7i/J048xTi1cTYtX5G1U0/uxUosxqunn39pXqVY/73Z7TX5WNf18
m1om2teLJ8861qxHLSuPNetp7zDWrPeGfOJYsx612DjWrJdAftl0f2rx2XSc
9lzjrG6WSF7LdDS17Gra+S15qOkIarnNdKZ35DGmJbX8aV9Pu6M09/eevI7p
CGrR27T7B/KZpuOoxR7T8iP5PdXq/z/7Qi2SjHezfp/hE3mx8eZ6atF4vDXf
6jP5ADN/nlosMPPuX8gPmfnd1OKJmXf6Sp5qgrl/alFmgjXv8I28xQRrPpRa
DDfz4jv5MjM/j1qcMPNOP8hfmfloapFhorn/n+RuE635eGrhO9E8n1/kY01H
U4s1psVv8nP29ajFO7NepPZswWb+D3nVYDNPLTsGm3ntk+zzf8kjzbwDtbhq
5p20fzHz7trzTDLra3efZD6f2rtPMufTPo232AF+C/w3eMHJ3Ovxln3AZ4Pv
BX8AnnQK9xK8ZRPwQeALwY+APwVPM5V7Wd7CB3wE+Arwk+Dx4BlDuFfgLf3A
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
wa/CTWnt6XSb/8E7wyfDd8DvwL8toz2rblsN3gs+E74X/hAeraz23LpNXXh/
+AL4YfhzeJxy2gvpto3hQ+DL4Kfgb+CJy2svodu0go+Cr4VfgP8HT1lBexnd
9mf4H17fyVs/9j3fN3s9NUe1Rseril/3unLmcks3VRP/5n9hHSFdidezq4tn
8Hp7ivzFR9QQr+h158TZRnapKd7V6wzx0p6vX0t8itc3YiRJUaq2+J9eT4wS
u122OuJ3va4QMfKm+HXFI1V091tPPJvrudKmhuuQ+uK9Xd+WNrNd2wbi+4Lz
NRR/HHRpG72S80bieV1baVsv6I3Ffw26tF0Y9CbiR4MubV+4DvU9XmU3vql4
Ya/Lj09bvqu0aep1WI6/7/tQr69v7nCtdjPxFV6Hcdoj0va01x2vbe5QpLn4
O6+3dLi2eZW0TVIlsF7KFuI/VAmsN17atq4SWC9CS/HRVQLr9ZS266oE1nvs
+6UqgfUatBL/VCWw3glpk7qqO5/W4mWrBtZbL206VA2sl/Yn8fFVA+tNljZb
qwbWi9xG/EbVwHp9pU34aoH1nvmesVpgvaZtxStXC6x3Vtp2qxZYr1Q78WnV
Auttlra7qgXWy/Sz+P1qgfVmSNvI1QPrRWsvnqO6O19pW9PrQ12SHvrH9z5e
j71XcGyLDuJzvJb3a0ibA14nDbugbEfxJ17fLzj23lZpE7NG3sD7nzqJ5/O6
a9gFM6VNA68LhS0QvbO4reHuR9osruHux/djNdz9dBH/p4a7H2kbv6a7n67i
RWu6+5G2zWq6++kmPrymux9pu7Kmu5/u4mdruvuRtv96nbFn8wzvfE9WK6yr
PN1fuX0P8ZJeh3HPu9KmjdezL4+cVben+BivD1R+uv+ktNngddjlT0v1Er/s
ddwi6+LskDZfvA7LIrl6i6epHdZh0zdfIm3Kez1q1uWRyX4R7+h12PB1E6TN
RK/Dlr8cuY/4ttpuP9LmVm23H98j1HH76SueuY7bj7StUsftp594jzpuP9J2
eh23n/7ioXXcfqTtX3XcfgaIR63r9iNtc9Z1+/lVvHZdtx9p27eu248Vn1fX
7UfaHqzrng++P63rznugeKx6bry0KVDPjfe9YT03fpD4oOB4abskON73E8Hx
g8VfBcdLm4T13Xjfi9V344eIt6jvxkvbEa5DfV/t2gwVP1c/8HhXljYf6gce
r1m+J28QOL+nvpdqEHj8iwwTb9sg8PiNlDa/Nwic52XfNzYInEeG4eJXGwSe
Hz2l7dcGgfPd73u6hoHziTNCvELDwPOlubTp3DBw3ut8n9TQ7Wek+I6Gbj/S
9nZDtx/fv23k9uN7lkZuP6PEqzVy+5G2PRu5/fg+s5Hbz2/iexq5/Uibh43c
fnz/vrHbz2jx3I3dfqRtncZuP773b+z2M0Z8vm5zGP4MHqeJ9oK6TWP4YPgy
+En4G3iiptpL6LYt4aPga+AX4B+9nhz2Fd/3lM3CutezKr06+F7a67qlItfd
7/vPXheasbdgkrHi47xO/Kpvoq7SZrPXH8vl+3jY92teX5vz/GqK38W/aR7W
O98t2dFT2qb3emalZjNP+F7R6/4LE/dPO068i9eN/zvXqK+0meJ18epjip/1
fafXKZaVSZHpD/G7zd33p7T9roVqk023rQ7vDZ8F3wd/BI/eUnse3aYefAB8
IfwI/AU8bivthXXbJvCh8OXw0/C38CSttYfoNq3hv8HXwS/CP8FT/aS9rG7b
Hj4evgV+Ax6ujfaMum0leDf4VPgu+D145Lbas+s2NeG/wOfA98OfwGO0055P
t60Pt/BF8GPwl/D4P2svots0gw+Dr4Sfgf8LT9pee0nd9if4GPh6+GX4Z3ia
DtrL6TYd4RPg2+A34RE6as+k21SBd4dPh++G/wWP0kl7Tt22FrwvfC78IPxv
eKzO2vPrNg3hA+FL4Mfhr+AJumgvpts2h4+Ar4Kfg7+HJ++q/Ufdpi18LHwj
/Ar8KzxtN+0VdNtO8Enw7fDb8IjdtWfRbavCe8JnwPfAH8C/76E9l25TB94P
Ph9+CP4MHrun9oK6bSP4YPhS+En4a3iiXtqL6zYt4SPha+Dn4R/hKXprL63b
toOPg2+CX4ObX7Sn123/B+8CnwzfCb8D/66P9qy6TXV4L/gs+F74I3i0vtrz
6LZ14QPgC+BH4M/hcftpL6TbNIEPgS+Hn4K/hSfurz1Et20F/w2+Fn4R/h88
1QDtZXSb9vA/4Fvg1+HhftWeQbepBO8Knwr/E34PHslqz67b1oD/Ap8N3w9/
DI8xUHte3aY+/Ff4IvhRr7eHS15hje8vva5YLknWVuPF4w0K65tjEkZPMkG8
iNedz8V7eVraNvU6XKI4Z4dNFB/m9cTGMTcWnSS+wuv0C6NNfiVtzni99XGU
3ksni7/zukKOSPUbTxFPOjisr3ePWDTuVPEfvO4YdoNHpc1Pg939TxMf7fq2
tFnvOmS6+CXXc6XNZ9dmhnjqIYFuKm3KuQ71vYPrlDPFJ7i20nar69u+33Qd
Mks8/FC3vrTJ5NrMFq+s23SHT4Pvht+HRxmmPYduUwveBz4XfgD+NzzmcO35
ddsGXn/Zm/ntWd8Hej01X+r9S+eIL/Y699JEEwbMFT/u9fHEsZrXnCf+j9et
x0TKlXm+eIIRbv4F4kVdW2nTPOgLxYcHXdqsCvoi8bNBlzbvg75YPNlI9/yQ
Nj+6DvW9jeuUS8THurbSdoNucwX+BZ52lPbyuk0n+ET4dvgteMTftGfWbarC
e8BnwEPhD+BRR2vPpdvWhveDz4Mfgj+Fxx6jvYBu0wg+CL4UfgL+Gp5wrPbi
um0L+Ej4avh5+Ad4it+1l9Jt2sF/h2+CX4WbcdrT6Tb/g3eGT4bvgN+Bf/uH
9qy6bTV4L/hM+F74Q3i08dpz6zZ14f3hC+CH4c/hcSZoL6TbNoYPgS+Dn4K/
gSeeqL2EbtMKPgq+Fn4B/h885STtZXTbn+F/wDfDr8O/maw9g25bEd4VPgX+
J/wuPNIU7dl0mxrw3vDZ8H3wx/DoU7Xn1W3rwX+FL4Qfhb+Ax5umvbBu0xQ+
FL4Cfhr+Dp5kuvYfdNvW8NHwdfBL8E/w1DO0l9VtOsDHw7fCb8DDz9SeUbep
DO8GnwbfBb8PjzxLew7dtia8D3wO/AD8CTzmbO35dJsGcAtfDD8G/wcef472
orptM/hw+Er4Wfi/8GRztZfUbdrAx8A3wC/Dv8DTzNNeXrftCJ8I3wa/BY8w
X3tm3bYKvAd8OjwU/hc86gLtOXWb2vC+8Hnwg/Cn8FgLtRfQbRvCB8GXwE/A
X8ETLtJeTLdpAR8BXw0/B/8AT744b+Dn376X8lp+32KpeFuv5efl0uZ3r+X3
O3zf6LX8fH2Z+FWv5fcvpO1Xr+Xn8b6nW5I38Psey8UreC0/v5c2nb2W3y/x
fZLX8vP+FeI7vJbf/5C2t5cE9mNWin+7NLCfutI2y9LAftb5Xm1pYD+RV4n3
XBrYT3NpM3NpYD87fN+zNLCfOKvFHy4N7Ke9tP1+WWA/+33PvSywn2RrxOss
C+ynp7Tpvyywn5O+z18W2E+GteKHl7nzkbbPlrnz8T3Ocnc+68QLLnfnI20a
L3fn4/vg5e581osvW+7OR9qeXO7Ox/c3y935bBBPtMKdj7QpscKdj+8tV7jz
2Sg+aoU7H2m7ZoU7n03iF1a485G2H1e48/E95Up3PpvFS6905yNtfl7pzsf3
cSvd+WwR37zSnY+0vbbSnY/v36xy57NVPP0qdz7SpuIqdz6+d1nlzmeb+JRV
7nyk7c5V7nx8v7vKnc928e9Wu/ORNtlWu/Pxvfpqdz47xHuvducjbWetdufj
+77V7nx2ij9a7c5H2kRf487H9zxr3Pn8KV5vjTsfaTtgjTufXeIL17jzkbZH
1rjz8f3FGnc+u8XjrnXnI20Kr3Xn43uTte58QsWHrnXnI22Xr3Xn4/vpte58
9oi/XevOR9okWefOx/eQde589oq3XufOR9r+ptusg1+Ef4KnWq+9rG7bHj4e
vgV+w+sFbzou/mWfeLgNYV29T4FzRQ+IZ9zgzuOQeCXXVtp0C/ph8alBlza7
gn5E/F7QpU3kjc6Pimd3XVXa1HQ91/dfXL/0fY7rkGPi+12PkzZPXN/2Pcam
QOc8Lp7PtZW29XUbC18EPwZ/CY+/WXsR3aYZfBh8JfwM/F940i3aS+q2P8HH
wNfDL8M/w9Ns1V5Ot+kInwDfBr8Jj7BNeybdpgq8O3w6fDf8L3iU7dpz6ra1
4H3hc+EH4X/DY+3Qnl+3aQgfCF8CPw5/BU+wU3sx3bY5fAR8Ffwc/D08+Z/a
f9Rt2sLHwjfCr8C/wtPu0l5Bt+0EnwTfDr8Nj7hbexbdtiq8J3wGfA/8Afz7
UO25dJs68H7w+fBD8Gfw2Hu0F9RtG8EHw5fCT8JfwxPt1V5ct2kJHwlfAz8P
/whPsU97ad22HXwcfBP8Gtzs155et/0fvAt8Mnwn/A78uwPas+o21eG94LPg
e+GP4NEOas+j29aFD4AvgB+BP4fHPaS9kG7TBD4Evhx+Cv4Wnviw9hDdthX8
N/ha+EX4f/BUR7SX0W3aw/+Ab4Ffh4c7qj2DblMJ3hU+Ff4n/B480jHt2XXb
GvBf4LPh++GP4TGOa8+r29SH/wpfBD8KfwmPdyKsT+yNNSPxCfEiXjc6PCPh
Dmnb1OtnJ9JNbnBSfJjXA86tifNJ2q7wOvqVQn/MPCV+xuvZN/dFL3Za/J3X
2e9XGn1D2iQ9Gda7H1+KPOCM+A9eV3nRbHjys+I/eX37zd8Rdkvb0V53/thj
UJNz4utPBu7fnBe/5LqptPnsOtT31KcCnfKCeDnXVtp2cH3b9wmuQy6Kb3U9
V9rcdG0uiYc/7eaTNplcm8vilYMubboH/Yr4tKBLm91Bvyp+P+jSJsoZ59fE
c7i20qZW0K+L9wm6tJkb9BviB7x+8fz58+zS5m+vb964caOR7zHP5g18Prvv
+b3euSPsy/cGXsvnb/k+0Gv5PLCb4ou9HhH2VU7aHPe6d6+wL9//8Vo+H973
BOfyBt6f43tRr0uFfUW4Jd7ca/l8eWk73OvUYV/NfV/ldaywrz98P3vOPR98
f38usN/nvic7H9hvstviP54P7LeitG1zPrDfvr6PPR/Y73LfN5wP7PeK71fO
B/Yb6Y74l/OB/RaQNmkvBPbb2vfyFwL7neR7pwuB/e73feKFwH5f+779QmC/
qe+K37oQ2G81aRPxojtv3zPrNlXhPeAz4KHwB/Col7Tn0m1rw/t5Hb3fuFn3
fJ/ndfOknar2vSd+yOvNOyuFj3Nf/KnXURtl3bxc2sS+HNZNPkdpW/Iv8QJe
b5j1OMlVadPI6++KHz7Z5YH4IK8b3Fw8MPJD8aVerx0wNO88aXvC6wgpWj4s
+Ej8tdd1d5ecflraJrwS1iubpKrU5rF48Svu++eJeAvXIdJmpGvr+2rXob6f
D17/t/iH4PXSJsVVd73vpXSbdvDf4ZvgV+HmmvZ0us3/4J3hk+E74Hfg317X
nlW3rQbvBZ8J3wt/CI92Q3tu3aau10M2d090y/f+Xv+4cFDOTk/FF3gdfvy4
sl+l7WGv9/46u/Hvz8Sfez2ow8oeKZ6Lx7kZ1iUbbB+9RtoU8jpc+cMLSrwQ
b+z1nvwXt5+SNkO8Hpj2/pkmL8WXeR0S+9WjF9Lm1E13v/+Iv7npXl+kTeJb
7vXvlXiJW+71Wdq0uhV4fXng+6hb7vn1WnztrcB806TtBTffa9//c/NVfCOe
8rZ7fZY2ZW675+9b8Z91mz/gm+HX4d/c0Z5Bt60I7wqfAv8Tfhce6a72bLpN
DXhv+Gz4PvhjePR72vPqtvXgv8IXwo/CX8Dj3ddeWLdpCh8KXwE/DX8HT/KX
9h9029bw0fB18EvwT/DUD7SX1W06wMfDt8JvwMM/1J5Rt6kM7wafBt8Fvw+P
/Eh7Dt22JrwPfA78APwJPOZj7fl0mwZwC18MPwb/Bx7/ifaium0z+HD4SvhZ
+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
//62WtImr9fy/jff6/3ixucU/zU4XtouDI73/WhwfC7xF66ttInXx3lu8cKu
Q6RNU9fW96F9AuvFyyO+oo9bT9qeDl6fV/ydG39B2ibpGxjfLp/4D33d+vnF
W7tuKm1Guw71fZ3rlAXEL7m20vZTcL6C4qn7OZe2ZV2bQuIdgi5txwe9sPjW
oEvbG0EvIh6+v3Npm9G1KSpeOejStlv/wP6f+D6tvzu/YuK73PhQaXPfjc9c
XDzygMD4SdImxwC3Xgnxmq5DpU0f1zZEfE7Qpc2B4PU/iD9xHSJtYv7qrvc9
n+uQkuINXJsfxa3rUGmzOHh9KfFjus0/8PhWe1Hdthl8OHwl/Cz8X3iygdpL
6jZt4GPgG+CX4V/gaQZpL6/bdoRPhG+D34JHGKw9s25bBd4DPh0eCv8LHnWI
9py6TW14X/g8+EH4U3isodoL6LYN4YPgS+An4K/gCYdpL6bbtICPgK+Gn4N/
gCcfrr2UbtsW/jt8I/wq/Cs83QjtFXSbzvBJXi8/eHbKRN93eN1lyOjt0UqL
3/a6YMkyN4ZJm29HuteHMuJZXN+WNtVch5YV7+l6bjnxma5tefE9us1D+Pej
tOfWbevA+8Pnww/Dn8Hj/Ka9oG7TGD4Yvgx+Ev4Gnmi09hK6bUv4KPga+AX4
R3jKMdpL6zY/w8fBN8Ovwb8Zqz29blMR3gU+Bb4Tfhf+3e/as+m21eG94bPg
++CP4NHHac+j29SDD4AvhB+Bv4DH/UN7Yd22CXwofDn8NPwtPMl47SG6TWv4
b/B18IvwT/BUE7SX1W3bw8fDt8BvwMNN1J5Rt60E7wafCt8FvwePPEl7dt2m
JvwX+Bz4fvgTeIzJ2vPptvXhFr4Ifgz+Eh5/ivYiuk0z+DD4SvgZ+L/wpFO1
l9Rtf4KPga+HX4Z/hqeZpr2cbtMRPgG+DX4THmG69ky6TRV4d/h0+G74X/Ao
M7Tn1G1rwfvC58IPwv+Gx5qpPb9u0xA+EL4Efhz+Cp5glvZium1z+Aj4Kvg5
+Ht48tnaf9Rt2sLHwjfCr8C/wtPO0V5Bt+0EnwTfDr8Njzg3rGOeLZs9awXx
LF63bJUm021pW9XrLe+/pJn4P/GeXkcdfTV5uYriM7xunGJzok/SZo/X69f/
EXdtJfEHXkcs0yFGy8ri388L63pXykVJWEU8l9cr26eNeFza1Jnn7q+qeD+v
vT8vj5I2872WPy/7fsiNn+v7Mzd+ue+x5wfGb/K94PzA+FDfG80PjD/q+2A3
/oLvS934276fdOOf+P7ajX/re6IFgfGmmnhx3aYlfKTXn/LnHzzR9zVe5x82
dFX26uLnve504fylw9Lmo9dL06YN16KGeIqFYX23W7esn6VNaa+T7Ntbe0pN
8XZe14wde2CuWuLjvB7brNmKY9J2k9eH1q690Kq2+LWF7v7qiJtFgf31kDbp
F7n9+/6/RYHxTeuKd3HjL0jbyW58hXriO934UGl7x43PV1/8u8Xu/KRt1sWB
8SkbiFdf7M5f2vZy46M0FJ/lxltpu9eNf+v7Ize+XSPxaEvc+UqbPEsC42s1
Fq+7xD0/pM0ANz6kifgCN36TtDnixmduKv7cjZ8rbeIuDYyP10y80FL3/JY2
TZa6x7+5+BCvt3S4trmDtFnudcewvOb7Ka/Tlh+ftnwL8bdeXw/jzdI28bKw
Hu8NaCke4rU3fLy0bbXMrddK/Ldlbj1pu3aZW8/3i8vceq3F/1vm1pM2qZa7
9X4SL7PcrSdt2i9367UR/2O5Ow9ps2W5e/74ft2ND2krHm6Fe35I2wwr3OPZ
TrzSCnf+0rarG//E96lufK2fxf9040OlzT03PnN78Ugr3fNN2mRf6e6/g3gN
3eYX+Gz4fvhjeIxV2vPqNvXhv8IXwY/CX8LjrdZeRLdtCh8GXwE/A38HT7pG
+w+6zU/w0fD18Evwz/DUa7WX0207wCfAt8JvwsOv055Jt60M7w6fBt8Nvw+P
sl57Dt2mFrwPfC78APxveMwN2vPrtg3gA+GLXcf0/bjrlL7/4zqn7wk2uu93
34u6rup7c9dNfR/uurPvq1xb38/qNu/hyTZp/1G3bQMfC98AvwL/Ak+7WXt5
3aYTfCJ8O/wWPOIW7Zl1m6rwHvAZ8FD4A3jUrdpz6ba14f3g8+CH4E/hsbdp
L6DbNIIPgi+Fn4C/hifcrr24btsCPhK+Gn4e/gGeYof2UrpNO/jv8E3wq3Cz
U3s63eZ/8M7wyfAd8Dvwb//UnlW3rQbvBZ8J3wt/CI+2S3tu3aYuvD98Afww
/Dk8zm7thXTbxvAh8GXwU/A38MSh2kvoNq3go+Br4Rfg/8FT7tFeRrf9Gf4H
fDP8Ovybvdoz6LYV4V3hU+B/wu/CI+3Tnk23qQHvDZ8N3wd/DI++X3te3bYe
/Ff4QvhR+At4vAPaC+s2TeFD4Svgp+Hv4EkOav9Bt20NHw1fB78E/wRPfUh7
Wd2mA3w8fCv8Bjz8Ye0ZdZvK8G7wafBd8PvwyEe059Bta8L7wOfAD8CfwGMe
1Z5Pt2kAt/DF8GPwf+Dxj2kvqts2gw+Hr4Sfhf8LT3Zce0ndpg18DHwD/DL8
CzzNCe3ldduO8Ilex9ubM9uAjuLbvL59Z0XGY53Eb3m9/JsMaRN2EY9wMqx7
pJqfolVX8cxeh/yQLMn6buJVvI7SbGr8r93Fe3h9wcaJXbGn+HSv584dG21a
L/FQr9uFRo78oLf4X17nuz0kQp4+4lFPufvtK57TdcJ+4rVdr5W2fV2X6y8+
z/VtaXvQde8B4k9dx/xVPNbpQC+VNgVch1jxhq4vS5tBrjsPFF/iOtIg8ROu
50rbV64LDhZPeCbQp6VtMddthoi3cG2Gio9wHSJtVru2vp9zHer7h+D1w8ST
n3XXS5tSrq3vbV2H+v67azNcfGPwemlzNXi9719dz/U93Tk3n+8VXN/2vbNr
M0J8ktfdz5RO0Eja7PD68fzfsm/3/bbXjbwBI8W/PR/WZ8OGd5e2WbwuE5Zn
fK/m9fZHYROMEu/pdXbvf5A2M71eEDb9I9/3eO1dXvo38Ydej5YLxL+/4O53
tHjuC+5+pW2dC+5+fe9/wd3vGPH5F9z9SpvDF9z9+v7sgrvfseJxLrr7lbYF
L7r79b3xRXe/v4sPvujuV9osu+jud5z4Sdeh0uaNa/uHeKJL7nzHi5dwbSaI
t3QdKm1GubYTxdcEr58kfiF4/WTxj8HrpU3Ky+76KeKlXYdMFf/ZtZkmPs5r
+Tw/abPZa/n8Kd+veS2fF+X7N1fyBT7fzvf0V9x6vle8Ephvmu9drgTm2+D7
lCuB+Y77vtPN98D3u24+M138u6v5An+fJ22yeS1/P+h79atu/Azx3sHx0nZW
cLzv+4LjZ4o/ch0ibaJfc/vxPY/rUN/ruTazxAe4DpE2C4PX+34keL3vL4LX
zxaPe121KazbNoEPhS+Hn4a/hSe5oT1Et2kN/w2+Dn4R/gme6qb2srpte/h4
+Bb4DXi4W9oz6raV4N3gU+G74PfgkW9rz67b1IT/Ap8D3w9/Ao9xR3s+3bY+
3MIXwY/BX8Lj39VeRLdpBh8GXwk/A/8XnvSe9pK67U/wMfD18Mvwz/A097WX
0206wifAt8FvwiP8pT2TblMF3h0+Hb4b/hc8ygPtOXXbWvC+8Lnwg/C/4bEe
as+v2zSED4QvgR+Hv4IneKS9mG7bHD4Cvgp+Dv4envyx9h91m7bwsfCN8Cvw
r/C0T7RX0G07wSfBt8NvwyP+rT2LblsV3hM+A74H/gD+/VPtuXSbOvB+8Pnw
Q/Bn8NjPtBfUbRvBB8OXwk/CX8MTPddeXLdpCR8JXwM/D/8IT/FCe2ndth18
HHwT/BrcvNSeXrf9H7wLfDJ8J/wO/Lt/tGfVbarDe8FnwffCH8GjvdKeR7et
Cx8AXwA/An8Oj/taeyHdpgl8CHw5/BT8LTzxG+0hum0r+G/wtfCL8P/gqd5q
L6PbtIf/Ad8Cvw4P9057Bq9bxGmc5LTvlbz+NLTWk0VzxLt6Pfl9xW1954pP
9Trnz6VGVJsn/qfXR28UqZNhvvg9r1tWzZP+s7SN9G9Yf9mb+e3ZBeLZvZ6a
L/X+pQvFa3ide2miCQMWif/i9fHEsZrXXCw+2+vWYyLlyrxEfP+/7v6Xij/W
bWK8155Xt6kP/xW+CH4U/hIe74P2IrptU/gw+Ar4Gfg7eNKP2n/QbX6Cj4av
h1+Cf4an/k97Od22A3wCfCv8Jjz8J+2ZdNvK8O7wafDd8PvwKJ+159BtasH7
wOfCD8D/hsf8oj2/btsAPhC+GH4c/g88wVftRXWb5vDh8FXws/D38GQmv/If
dds28LHwDfAr8C9eNy1bfneNZeJpv3G+Qry865zSppPrpr5PdD3O9+2uQ32/
5fql7xHDBTrlSvHMrqtKm6qure89dJsZ8FD4A3jU8Npz6ba14f3g8+CH4E/h
sSNoL6DbNIIPgi+Fn4C/hieMqL24btsCPhK+Gn4e/gGe4lvtpXSbdvDf4Zvg
V+HmO+3pdJv/wTvDJ8N3wO/Av42kPatuWw3eCz4Tvhf+EB4tsvbcuk1deH/4
Avhh+HN4nCjaC+m2jeFD4Mvgp+Bv4Imjai+h27SCj4KvhV+A/wdP+b32Mrrt
z/A/4Jvh1+HfRNOeQbetCO8KnwL/E34XHim69my6TQ14b/hs+D74Y3j0GNrz
6rb14L/CF8KPwl/A48XUXli3aQofCl8BPw1/B08SS/sPum1r+Gj4Ovgl+Cd4
6tjay+o2HeDj4VvhN+Dh42jPqNtUhneDT4Pvgt+HR46rPYduWxPeBz4HfgD+
BB4znvZ8uk0DuIUvhh+D/wOPH197Ud22GXw4fCX8LPxfeLIE2kvqNm3gY+Ab
4JfhX+BpEmovr9t2hE+Eb4PfgkdIpD2zblsF3gM+HR4K/wseNbH2nLpNbXhf
+Dz4QfhTeKwk2gvotg3hg+BL4Cfgr+AJk2ovptu0gI+Ar4afg3+AJ0+mvZRu
2xb+O3wj/Cr8Kzxdcu0VdJvO8EnwHfDb8G9TaM+i21SD94TPhO+BP4R/n1J7
bt22jtflB+54UXCVeH+v55xNPvGDtJ3v9bs0gwpuXy1+2OuKPf663meN+DOv
FxwsN7DIWvE4qcL6Q4KV6T5J24JeV20b4+jOdeKNvV68vWvH/uvFB3v9KerF
2MU3iC/zukajQlu+SNuTXi9fPbPB7o3ib1K5+98knih1/sC/RyVtSngt//6U
7y29ln9vyvdRXsvPz31fkzow31zfL7j5Fvv+0c230veUaQLzbfC9dJrAfNt8
/zlNYL5Q38elCcx30PfNaQLzHff9mpvvnO/fpA3Md8X39GkD8932vWLawHwP
fO+SNjDfU9+npA3M99r3nW6+D77fdfOZzeLfpQuMjyNtsqULzJ/e9+rpAtcX
8r13usB6FX2flS4wX1Pf97n5uvn+yM03zPfo6d3j73ue9O7x9b1eevf4+T4g
vXt8fF+Y3u3f9yNuvg++v3Dzfb9FPG6GwHwppU3hDIH58vjeJENgvjK+D80Q
mK+e78szBOZr7/tpN5/1/a3X8v6rreJJMuYP/H7ENvGQjIHxIdvFW2cMjM+8
Q/w3Nz7eTvF1brz5U/yiG/9E2nxy4y/sEk+VyT1eu8XLZgqMXx4q3j5TYPyk
PeLj3Xi7V3yLG99un/gNN77WfvFwmd39HxDPmNnd/0HxSpnd/R8S7+bGm8Pi
U934J9Jmlxt/4Yj4PTc+9Kh45Czu/o+JZ8/i7v+4eM0s7v5PiP/ixrc7KT7H
ja91Sny/Gx9yWvyJG5/5jHiMrO7+z4rny+ru/5x4fddW2tignxdfFHRpcyzo
F8RfBl3axM/m/KJ4EddW2jQL+iXxYUGXNiuDfln8TNClzb9BvyKeNLtzaVPS
tbkq/lPQpc2YoF8TXx90aXM56NfFPwdd2qTJ4fyGeDnXVtp0DPpN8Qlee+9/
zC9ttnkt75/0/abX3tsfF/oeIWf+wPspfc/ktff+yNi3xKt4Le+vlLbdc7r1
fZ+eM7DeZt935wys98z3v3IG1kt7WzxKrsB6DaRNzlyB9cb7XitXYL0jvvfN
5fZ3R3yubnMQ/jc8Vm7t+XWbhvCB8CXw4/BX8AR5tBfTbZvDR8BXwc/B38OT
59X+o27TFj4WvhF+Bf4Vnjaf9gq6bSf4JPh2+G14xPzas+i2VeE94TPge+AP
4N8X0J5Lt6kD7wefDz8EfwaPXVB7Qd22EXwwfCn8JPw1PFEh7cV1m5bwkfA1
8PPwj/AUhbWX1m3b/f/+P+zfa28=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
1qF0cKuS1Fky2w4P9hbUi+nrza2GUvPHH+uwL+mp1+dWx3rq66cu+3PqQwdt
B7ey62Xrenywl+ulrx9u1a6XPv/67CHUD+7bDm61ipoux+4N2E9Rv6eDW72j
Hk4fx2zInqW33q8ne9Xeer/cVsfeer+N2Cf01vvltqJ66/02Zr/YW++X2/rc
W++3CXuuPnq/3JZbH71fL/ZuffR+ua2pffR+m7Jv66P3y21d66P324z9Vx+9
X26rQF+93+bs9fua5zN7r756v9wqvK/eb0v23X31frnV3b56v97sqp/eL7cq
2k/vtxV7k356v9xqQD+939bsC/rp/XKrQ/30ftuwP+qn98ut0vTX+23LXqq/
3i+38u6v99uOfVh/vd/27Mv66/1yW8f76/36sL/sr/fLbWUM1vv1Za8QrPfL
bbUP1vvtwD4mWO+X21odrPfrx34mWO+X23ofrPfbkT3bAL1fbqvaAL1ff/ZO
A/R+ua2JA/R+O7FvHGBeL9gvyVZfwXMPlO4u2woEnw4eDX4D/Dd4wUHSG8hW
fcBng+8FvweefLD0YrJVU/CB4BHgh8GfgKcdIr2MbKsV+Ajw5eCx4K/AMw2V
XlG28gUfC74W/Cx4IrjjMOk1ZFsB4JPBN4FfBv8Gnne4dA/Zqgd4GPgO8Jvg
f8ALjZDuKdvqCz4XfB/4A/AUI6WXkG01Ax8Mvgj8KPhT8PSjpJeVrdqAjwSP
BD8J/gbcIUR6ZdlWB/Bx4OvAz4N/BM8xWnpN2aoL+BTwLeBXwH+A5xsjva5s
Kwh8JvhO8Nvgf8ELj5XeSLbqDz4P/AD4Q/BUlnQX2aoF+BDwJeAx4M/BM4yT
Xk621RY8BHwl+Cnwt+BZxkuvIlt1BB8PHgV+AfwzeM4J0t1kW13Bp4JvBb8G
/hO8wETp9WSrXuCzwHeD3wFXk6QXka2agAeDLwA/CP4IPPVk6aVkWy3Bh4Ev
BT8O/gI84xTp5WWr9uCjwVeDnwZ/D541VHo12ZY/+ETwDeCXwL+A554qvbZs
FQg+DTwa/Dr4b3CnadIbyLZ6g88G3wN+DzzZdOnFZFte4APBF4IfBn8MnjZM
emnZqhX4cPDl4CfAX4Hbz5BeUbblAz4WfA34WfAP4I4zpVeXrQLAJ4FvAo8H
/waeZ5Z0D9lWd/Aw8O3UCV0W1V44iv0mtfeICZXXLWRPoo6d1bf07p3shcJt
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
yVbtwEPAV4GfAn8HniWZ9KqyrY7gE8CjwC+CfwbPlVy6m2zVDXwq+Dbwa+C/
wAukkF5fttULPBx8N/hdcJVSelHZVhPwAeALwA+BPwJPk0p6KdnKG3wYdaOo
qWddkgWTL6N+17DLz3FZqK3j1OEvqhe/7cz+krrilKztXCuxZ0xt61tF306a
0oC9AnVIXOyuB+3Y21M7dV/2pFJP9jHUJ1INzTJjJPtq6h5rm3k8nc5+hjpD
/WLBNZaxv6fe9vTf8jlb2bOlsbX3xFsXXh1lr0b9zXl7kvtl9k7Ui09MLRnx
mH0itVvXLr4fPrNvpH6cvMbUBqkGkF+inrQq675l2anVV+oSdd4+/1KMPXda
W194FOvoVY3dnXrAuGX1VjdmD6R2LDh00K8O7NOp98U0W9WyL3s0tV9AsctR
Y9hvpNWPfzj7b+rtWWtsz7qEvWA6W9Nvly62jr0BdTb6/dPb2ftQn2z2NrbZ
IfbZ1PzrqE+x76Wmmw+9wn6P+vbUZbem3mdPnt7W02y57CV7MWpe/jN7U2rb
6m9j/7IPpF5uG7+VbiB5BHVzGshGbR1Or/fjxP6EegftpyR72gx6P5XZy2TQ
+/Fgb0VNd9fMi31EBr2fduzLqf/7fdvssdR0OlP7sr/KoPcznD2Tna1r0n4m
sFe00/uZye5rp/eziH0sNd392zXsa+30fqLZz9rp/RxkT7TT+4ljd8yo93OZ
vUZGvZ977AEZ9X5esE/OqPfziX1TRr2fP+yXM+r9pB1E/i2j3k9WapXXXu8n
P7uHvd5PCfYe9no/FdnD7PV+3Nl3yLZugv8BL5RJuqdsqy/4XGr3ys5TDvix
76N2WjK7bsfJ7A/MfDR7CodC//t8xE72EtT8+Ym97M0c9PxB9sFm/gj7IjN/
nP2omY9jf2rmz7Cnz6znL7CXzaznL7O3yaznr7GPNPO32CPN/D32k2b+Ifsb
M/+E3SGLnn/BXjmLnn/N3iGLnn/PPs7Mf2JfZ+a/sp838z/ZP5r5P+w5sup5
NZi8ZlY9n5Jadcmq59OyTzHzGdi3mPlM7FfMfFb2H2Y+O3u+bHo+N3vdbHo+
P3tQNj1fkH2mmS/CvtPMl2C/beZLsf81867shR31fEX2Ro56vgp7f0c9X4N9
npmvzX7AzNdhf2jmG7Cnyq7nG7O7ZNfzTdlbZNfzLdmHmPk27EvMfHv2GDPv
x/7czAewZ8ghWpWTbbUFDwFfCX4K/C14lpzSq8hWHcHHg0eBXwD/DJ4zl3Q3
2VZX8KngW8Gvgf8EL5Bbej3Zqhf4LPDd4HfAVR7pRWSrJuDB4AvAD4I/Ak+d
V3op2VZL8GHgS8GPg78Az5hPennZqj34aPDV4KfB34NnzS+9mmzLH3wi+Abw
S+BfwHMXkF5btgoEnwYeDX4d/De4k5P0BrKt3uCzwfeA3wNPVlB6MdmWF/hA
8IXgh8Efg6ctJL20bNUKfDj4cvAT4K/A7Z2lV5Rt+YCPBV8Dfhb8A7hjYenV
ZasA8Engm8Djwb+B5yki3UO21R08DHw7+E3wJPBCRaU3lK36gs8B3wd+HzxF
MenFZatm4IPAF4EfAX8Knq649LKyrdbgI8FXgJ8Efw3uUEJ6JdmqA7gFvg78
HPhH8Owu0mvKtjqDTwHfDH4F/Dt4vpLS68hWQeAzwHeC3wL/C+5cSnoj2VY/
8Hng+8EfgqcsLd1FttUcfAj4YvAY8GfUE32c64SNZM9QxtbHN2cu2GA+u2sZ
PR/N3pb6v8+fs4+i5veLB9hXmvkY9jgzf5L9rZk/y565rJ6PZ69SVs9fZ/cr
q+fvsI838wns66krvp74cO5r9gvUsQWr5Kr7lf0TtbfPK+9P/9hzutr6cfiS
sJXph5DXog4+3TSuhSO16uqq13diD3XV91+UfaurPr/S7FfNfEX2n2a+Onv+
cnreg71eOT3vyd6znJ5vxj7LzLdh32Xm/djvmPku7P/MfE/2IuX1fDB7Y9PD
2YNNW+zzTYeyHzQdzp5gOoI9dQXdkewlTUextzQdzT7U9D72paZj2I+ZPs3+
wnQ8u11F3bfYy5tOYG9n+iX7aNOJ7KtM/2A/bVoNJX9nOi21ylpJtwN7VdM5
2f1NO7FPMF2cfYNpV/aLpquyfzHtzp6rsrke2GubbsHezXR79mmmA9i3mQ5i
v246mP2X6eHsTlXM15+9vulQ9t6mw9nDq+jrbQ77nir6epvPftfMR7Anq6rn
F7MXrarnl7F7VTXXD/sAM7+KfaGZX8t+yMxHsT828xvZ01TT81vYS1cz1x+7
dzU9v4N9uJnfzb7MzO9jP2HmD7C/NPOH2e2rm+uXvQJ1XJvLPX8dZ/eh7pXZ
433nK+xjqB0uRA8884h9DfWeUKfvrh/Zz1D71gsfFaGGkX8w6ztQW9lq2Drv
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
2elDyJdRn826835NR2p1gtq+StrcLwuwv6Ru4dux7VwXdvtJtp4zescct0rs
FahvRKa59Ko2uw91zli/DPMbs4+h9n2xvaF7G/Y11MvTp5n4phP7GeqE0n4x
C3qxf6Au3HJ7kscQ9myTbd19cOpq78ayV6eOWthhSMQ09k7Ubw9Eb687n30S
dZkHqd6/X8G+kTo4WQeXxRvZ46l3FY7uXn83+1fqbw1TrU48yp5niq2r9vZ9
uOQsuzt1yMxteRpeZ+9OfWR7yvafHrJPp05+3Wfestfs26nr/dga7/mV/Qb1
5DwpM375x55EfdbNp9GK9KPJC4ba2q7L1kmNHalVQ+pmk1Ic/1qAvQ/1nKj2
fyNd2OdQXzu3pbpXJfa91Dk/JB/2vTb7fWrfLO13rmrMnnyqrZdW2vKhaRv2
4tQJ7ZOX+tmJvSl1oZB2QWt6sQ+i7rZi85rmQ9gjqKOOJ3v0ayz7EerXz9rm
WzeN/Ql1qXSbfVrOZ083jR7vUskWJK1gL0O9o3nbK+s3srem/jZwk32r3ewj
qKsuUE3+HmVfQT1yf5spG86yx1IfubfxROvr7K+nmeufPdP0Qv/7fssT9krU
/P2Z5+y+1Pz9l1fsFjV/u+Yt+9rper1E9nNmvc/siWa9b+zZw/R6P9lrhOn1
ktg7h+n11BjyyWF6vRTUanOYXi81+2WzXjr272Y9O/a8M/R6Dux1qF9+7Fg1
ND97D+prY3akrFyafQb1kQxpLj+pwb6DemNEh2WzG7Pfop5XJLpnbR/2P9R0
83c92J1n2rpXbZ/kS4aye1K3Pr/louck9n7U7jb+Npd9LrXL87Y91qxi30+d
fdCmCt7b2R/M1Ocfw55yVqH/fT7lKnsJav48ygv25tT/fX+FfTA1f97Efiz5
Yur/Pn9DbR2l/u/zLezPqPnzLJ7s6cML/e/zK37sruH6fILZ28hWo8AjwePA
34Bnni29smzlBz4OfD34efBP4DnmSK8l2+oCHgq+Bfwq+A/w/HOl15WteoLP
BN8Ffhv8H3jhedIby7b6g88HPwCeAJ5qvvSS1PfSVu4aPoO9BXW/lEvKnd7K
PtTMx7Mvka2OgT8Ht1sgvZxs1Q48BHwV+Cnwd+BZFkqvKtvqCD4BPAr8Ivhn
8FwR0t1kq27gU8G3gV8D/wVeYJH0+rKtXuDh4LvB74KrxdKLyraagA8AXwB+
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
z8/E/o26wOPqj7dlZc+T2taOby8vOJuD3YM6/begJs/ysHdPra83J/Yw6knf
stxpUpx9O3W6d0V2LXRlv0n93+9jZU+iznqnSVBZD/ZCaWwdEe9fZ1Qj9obU
/H6tJXtf6pWHJ37L4ss+h7roroXx/l3Y91H/9/6Q/T51WbrBQPYUaW1N43VG
sRen5vd/E9ibUR+xLX9nOvsg6jqjbDuYx76Imt/fLWU/Qu0VZLuHNexPqS/b
Vk+3hT1dOmf99zH2stS0Xdspkbem7kR3cJJ9JDW/X7zIvoKap2+wn6SmhzP+
Aftr6v9+vojdIT09H2wPf9AH9krUdPq7vrN3SK+/XmoSuWU6LbVaZ9qB/Zzp
nOwfTTuxZ8+guzh7TdOu7J1lqyngm8GvgH8Hz2cnvY5sFQQ+A3wn+C3q/fmT
wqtVY/9L7b57W6Xc9dmdM9LXu0nXO79asDeibvY4+9i7fuz9qK8PP+t8KIh9
HnXHTGNOLx3Mvp/66dpyfUdb7A+pe9d8ltk/jD2lva0/XYnY4xbB7kI9oqdX
hwJr2Jvb6/ONZh9iehf7YtP72GNMH2J/ZjqGPUMm3bHsrqZPs7eVbY0CXwke
B/4WPLOD9CqyLT/w8eDrwS+AfwLPmVl6LdmqK3go+Fbwq+A/wfNnkV5PttUT
fBb4LvA74P/Ai2SV3li2CgafD34QPAE8dTbpJaknr6txq/8F9pbUe8pVvH/s
BvtQ6meHSj3OmsC+lJo/H/aK/Rh13av53u79xP6CeqB/9o/pktjtHG296pX9
tw6pJpOXp748OM3vLfbUVjtH8/rDPlq2tQr8NPg78KzZpVeVrfzBJ4BvAL8I
/gU8Vw7ptWVb3cCngW8Dvw7+C9wpp/T6slVv8HDwPeB3wZPlkl5UtvICHwC+
kNou9YRjAcXZDxl3Z39MzZ+nqcueJrfz/z6/04C9NDV/fqYRuzc1f17Hi314
br1eC/ZlufV6rdhPmPXasr806/mw2+fR6/mxV8ij1wtg98mj1+vKPiaPXq87
+5o8er2e7GfMen3YP5j1gtmz5RWtqsu2OoFPAt8IHg/+FTxPPunuslV38Ong
28FvgCeBF8wvvaFsqw/4HPC94PfBkxeQXly21RR8EHgE+BHwJ+DpnKSXka1a
g48AXwEeC/4aPFNB6ZVkW77gFvha8HPgieDZC0mvIVt1Bp8Mvhn8Mvh38LzO
0uvItnqAzwDfAX4L/A+4c2HpnrJVP/C54PvBH4CnLCK9hGzVHHww+GLwo+DP
wNMXle4q22oDPgo8EjwO/A145mLSK8tWfuDjwNeDnwf/BJ6juPRasq0u4KHg
W8Cvgv8Az19Cel3Zqif4TPBd4LfB/4EXdpHeWLbVH3w++AHwBPBUJaWXlG21
AB8KvgT8GPhzcLtS0svJVu3AQ8BXgZ+i/nivSe9WS9nfUQ9/v3Z3iSvsWUrr
+bRTyKuatqO2Opp2YJ9gOht7lOmc7BdN52X/bNqJPVcZ5//9/b8Uuxv1f9/P
YO9GzX/fr88+lfq/71+wb6Pmv9/7s1+j/u/7Fey/qP/79yb2AmWd9fcn2OuX
1ecTzt6LevSNjOtOL2QPp/65OY/X7BXsu6mHTijxyWc9+13qTz5VIgptY1eu
tu7vWt/tzR72otRvUrd6uvMIexPqoPsB00Li2AdQP93Zz7X+RfYF1J2nhdzI
eIP9EDWN37jP/oja13Z3K56xpylnazrdHu/YS1G3ogW/sntTxx84lu1nEvsw
aq/Zlw4cSxlKvoz6TA/bPdhRW8epbWefulU29pfUx7PZHoG87BnL25r4qTN7
BeqDtuU3l2RvT02nN6QC+xjqXbbtudVgX01ND0/quuxnqLfYHt5LjdnfU7vQ
A+rNnq2CrW27ux/gy16N2nnFkAklurB3oqb81JN9InVe2uAA9o3UdDoTRrBf
onakL+g49q/U9HBkm8qeu6Kt7ekOw9ndqenLsS6CPZA6DT3AkezTqelyqBLF
Hl1RX0/R7DdkW7/BC1aS3kC26gM+G3wv+D3qkNyd96/fzp68sq0PuRc9mSGW
vRj1n+5v4vvfYG9K7TYj+t7Vl+wDqcfuHPKyym/2COqjt6t/WZJxKvnhyub5
S62emC7OnraKblf2Mqarsrcy7c4+wrQn+3LTLdhjqf/77/uxv6L+7/dHs2eq
qucD2CvKVr7gY8HXgp8FTwR3rCa9hmwrAHwy+Cbwy+DfwPNWl+4hW/UADwPf
AX4T/A94oRrSPWVbfcHngu8Df0A9cWb6kAGB7Clqah/OXsJ0CHsz0xb7YNMT
2ReZDmU/ajqM/anpcPb0tXTPYy9rOoK9jeml7CNNR7JHml7DftJ0FPsb05vZ
HdzM85G9suld7B1M72MfZ/oQ+zrTMeznZVsfwXPUll6TuujVVNfan2HvQn08
56T9pa+zT6H280+5Ivkj9i3UP1ZPmHjzLfsV6nmvkvfa/IP9B3WZsuObj0s5
jTyfu63PDk5Wqa0DtapL3e2AlbtkXvYgd/N6wD7TtCv7TtNV2W+bdmf/667/
PG/AXtjD+X+/j8uLvZGHfv57s/en5vcL7dnneeg/7zuxH/DQrx+B7A+p+feJ
9WZPVcdZf36F3aWOuT7ZW9TR9zeGfUgdvd4k9iVmPow9xszPYX9u5hexZ6hr
ri/2cnX1/Dr2tnX1/Bb2EDO/i32lmT/AfsrMH2N/a+ZPs2epp/06e5V6+vaP
2TvW0/OJ7OOp+ee9vrBHUdOPd4X+YL9A/d/vr2P/TJ2Ffn4r2XTynPX1/aWi
Vm7U//2+Ovau1PzzWBnZp1Lzz5tlYd9Kzd/+yc5+rb4+39zsP6npx8fe52cv
0MD5f78vz5m9HvVw+vmwYuy9qPnnwUqyz2pgrkf23bKtO+CqofQislUT8GDw
BeAHwR+Bp/aUXkq21RJ8GPhS8OPgL8AzNpJeXrZqDz4afDX4afD34FkbS68m
2/IHnwi+AfwS+Bfw3E2k15atAsGngUeDXwf/De7kJb2BbKs3+GzwPeD3wJM1
lV5MtuUFPhB8Ifhh8MfgaZtJLy1btQIfDr4c/AT4K3D75tIryrZ8wMeCrwE/
C/4B3LGF9OqyVQD4JPBN4PHg38DztJTuIdvqDh4Gvh38JngSeCFv6Q1lq77g
c8D3gd8HT9FKenHZqhn4IPBF4EfAn4Knay29rGyrNfhI8BXgJ8Ffgzu0kV6J
+trNy4O+V2DvQL1x8+ASP6uwW9RjxuV4+KsG+zrq1m0PzEuqzX6O2qVkx8Z/
67J/NOt7smdvq/+8a8xes63+87Qpe+e2er4F+xQz782+2cy3Yb9i5tuzfzfz
vuz52un5jux12un5APYg453ZZ7TTt+/CvtPMd2O/ZeYD2f+a+e7szu31fBB7
I9N92PuZDmafZ3ow+37Tw9kfmg5hT+mj22J3kW01Bx8Cvpia3x9OYI+h5veT
U9if+ej9TGPP4Ov8v/erM9ldqfn95Gz2tr768ZjPPoqa369GsK+k5ve3S9nj
fPX5RLK/Nbdfz565g77/rexVOuj5Pex+HfT8YfbxZj6Wfb2ZP89+wcxfZf9k
5u+w5/TT84/Za/np+VfsXf30fCJ7qJn/wb7VzCcLI79q5tNTq59mPht7/o56
Ph97vY56vih7z47m+cg+y3h19l3m9vXZ75j5Fuz/zLwvexF/c72yN/Y31x97
sL+eH8g+38wPYT9o5oezJ1Dz+9eR7Kk7Of/v/XIIe0lqfr86lr0lNb8/Hsc+
tJNebyL70k56vcnsx8x6oewvzHrT2e0C9Hoz2MsH6PXC2dtR53cdFfN2Efto
6pizSS6fV7Ovog4IHDP/5xb20+b2+9jfBejH4zh71s768bjAXrWznr/F7t9Z
zz9mn2Dm37FvMPM/2C9S5+w4+HL9f+xfqMsceLlqeuoZ5Lm66OdnBmpVu4u+
vQN7N+oxo22HI/s06l905GbfRj2cDif269TfvtqOIuy/qAcPsh0l2Z262jqR
Dlf2+tT96KjM3pv67RvbUYM9nLpXT9vhwb6H+jkdDdjvdjWv9+zJuom2ispW
XuADwBeCHwJ/DJ4mUHpp2ZY3+HDwZeAnwF+C23eXXkG28qFOHzLg64Rm7GOo
d9Wc6nWiLfsaar8/kauTd2I/Q536yL5fHj3YP1BvHRPfclx/9mw9bN2+9suo
mGHs1XuY13f2Tj3+d/1d51aTeujrcxz7Rj1vjWeP1/NtJrB/1fMuE9nzBOn1
J7G7B+n1uVX3IL3+ZPbpet6awr5dz7cJZb+h512msieZ9aexF+yp1+dWDXvq
9aez9+mp1w9jn6Pn28xg36vnXWay39fzahZ78l56fW5VvJdeP5y9aS+9/mz2
QXq+zRz2CD3vMpf9iJ5X89ifmPW5Vbreev357GV66/UXsLfurddfyD5Cz7tE
sK/Q82oRe6yev86tXpv1F7Nn6qPXX8JeqY9efym7bx+9/jJ2S8+r5exr9fx1
bnVOz29cwZ5o1o9kz95Xr7+SvUZfvf4q9s599fqr2Sfr+evcarOe37iG/bKe
t9ayfzfrr2PP20+vv569Tj+9fhR7D9lqBvgO8Fvgf8Cd+0v3lK36gc8F3w/+
ADxlsPQSslVz8MHgi8GPgj8DTz9Auqtsqw34KPBI8DjwN+CZB0qvLFv5gY8D
Xw9+HvwTeI5B0mvJtrqAh4JvAb8K/gM8/2DpdWWrnuAzwXeB3wb/B154iPTG
sq3+4PPBD4AngKcaKr2kbKsF+FDwJeDHwJ+D2w2TXk62agceAr4K/BT4O/As
w6VXlW11BJ8AHgV+EfwzeK4R0t1kq27gU8G3gV8D/wVeYKT0+rKtXuDh4LvB
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
geSLyY+bHvrmxJA39+FvrL+Cx96V/t+fN30NL2ga34/3Bt5ol/z7+Q7umsb3
872HrzSN7/f7CD+3S/79/gT/ZBrfL/gFnmh3+n9/3vQrvPhuuZ7v8Ja75Xp+
wEfvluv5Cd+wW67nF/zKbrme3/Cfu+V6/sBT7JHrCYZ775Hr+Qtvv0eux5lq
fNIeuZ7wpt1te+R6IsBv75HriQgP3iPX4wFPv1euJzK84l65nqjwbnvleqLB
p++V64kB37NXricm/MFeuZ7Y8Ij75HriwLPuk+uJC6+xT64nPrzPPrmeBPB5
++R6EsEP7ZPrSQx/vk+uJyk82n65nmTwPPvlelLA6+p2BpMvIT9J/pY87gHt
hXQ7TchHkK8mP0/+hTzxQe0ldLutyMeSbyS/Rh5InuqQ9jK6nY7kk8n9ye+Q
/yXPcFh7Zd1ud/KZ5HvJH5FHOqI9u263Jnk/8vnkR8hfkMc4qj2vbqc++RDy
ZeSnyN+TxzumvYhutyn5KPI15BfJv5InPa69pG6nDfk48s3k18l/k6c+ob2c
brcTuR/5DvK75M5J7Zl0u1XIe5LPIt9P/pg88intOXQ7/5H3J19IfpT8FXnM
09rz63YbkA8jX05+hvwDeYIz2ovqdpqT+5CvI79E/p082VntXrrdtuQTyLeQ
3yQPIk97Tnt53U4X8qnku8jvkYc/rz2zbqcaeS/yOeQHyJ+SR7mgPZdutzb5
QPJF5MfJX5PHvqi9gG6nEflw8pXkZ8k/kSe8pL24brcF+Wjy9eRXyH+Qp7is
vbRupz35RPJt5LfIg8nTXdFeUbfblXw6+W7yB+QRrmrPqtutTt6HfC75IfJn
5NGuac+t26lLPoh8CfkJ8rfkca5rL6TbbUw+gnwV+Xnyz+SJb2j31O20Ih9D
vpH8Knkgecqb2svodjuQTybfTn6HPIQ8wy3tlXQ73clnkO8lf0ge6bb2bLqd
muR9yeeTHyZ/QR79jva8ut165EPIl5KfIn9HHi9Ae2HdTlPykeRryC+QfyVP
cld7Sd1ua/Jx5JvIr5P/Ik99T3tZ3U4n8inkO8gDyJ372jPqdqqQ9yCfRb6P
/DG5xwPtOXS7tUwPz/Rn7qf08P6m/3YL3vc9O3yBaXdXyP3f+eFH7fM94S9t
e8FjPpQuC89nOuzvi4c3MI3315XgQ+36qvDldn11+Gm7vhb8g11fBx7/kWqn
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
O1p3ZhqfYj2CadffeiR4gPUo8L/Wo8EzjhePCa8s7caG97AeDz7TegL4PuuJ
4Y+sJ4V7TBBPAc+u26lF3o98AfkR8pfkMSZqz6fbrU8+lHwZ+Wny9+TxJ2kv
ottpRj6KfC35RfJv5Eknay+l221DPp58M/kN8t/kaaZoL6fb6UzuR76T/C55
OD/tmXQ7Vcl7ks8m30/+hDzyVO05dbv/kQ8gX0h+jPwVeaxp2vPrdhqSDyNf
QX6G/CN5gunai+l2m5P7kq8jv0z+nTz5DO1eup125BPIt5LfJP9Dnnam9gq6
3S7k08h3kd8nDz9LexbdbjXy3uRzyA+SPyWPOlt7Lt1OHfKB5IvJj5O/IY89
R3tB3W4jcpd8Jfk58k/kieZqL67baUk+mnwD+RXyn+Qp5mn31u22J59Evo38
Nnkwefr52ivqdrqRTyffQ/6APOIC7Vl1OzXI+5DPIz9E/pw82kLteXS7dckH
ky8hP0n+ljzuIu2FdDtNyEeQryY/T/6FPPFi7SV0u63Ix5JvJL9GHkieaon2
MrqdjuSTyf3J75D/Jc+wVHtl3W538pnke8kfkUdapj27brcmeT/y+eRHyF+Q
x1iuPa9upz75EPJl5KfI35PHW6G9iG63Kfko8jXkF8m/kiddqb2kbqcN+Tjy
zeTXyX+Tp16lvZxutxO5H/kO8rvkzmrtmXS7Vch7ks8i30/+mDzyGu05dDv/
kfc3vbBytIqBaeELrWeBH7WdDf7Kdg54zLXSeeH5bReCN7BdHD7Mthd8ue1y
8DO2K8M/2K4BT7BOug68qLSLdppbrwv3sY521lmvB79kHe18t14fnmy9ONrx
knYawNtaRzsTrDeEb7GOdm5abwQPso520m4QbwwvL+2inS7Wm8CnmsbXj5rB
d5nG9wu1hN+z69vAw2+U9e3gmTfK+o7wahtlfRd4L9OpzKMrfI5pT/PoBj9g
upF5dIc/NT3APHrAo2wK7dmzQh894blM7/APffSC1zZ97Wroozd8oOnPn0If
feCLTMc2j37w46Zzmkd/+GvTVcxjADz25tDuaB4D4QVMjx0T+hgEb2R61crQ
x2D4cNPHj4U+hsBXmn7yOPQxFH52s8xjOPzTZpmHC0+4ReYxAl58i8xjJLzF
FpnHKPjoLTIPH/j6LTIPX/iVLTKP0fAfW2QeY+Aptso8xsFLb5V5jIe33yrz
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
vj2pnFcdfjupnFcDHpJUzqsJT59MzqsFr5RMzvsP3i2Z/f0VPiOZnFcXvieZ
nFcP/jCZnFcfHjG5nNcAni25nNcQXiO5nNcI3je5/f0aPk+3c5j8OXn0FNrz
6HbqkQ8mX0p+kvwdedyU2gvrdpuQjyRfTX6B/At5klTaS+h2WpOPJd9Efo38
F3mq1NrL6nY7kk8h9ycPIP9LnjGN9sq6nR7kM8n3kT8i90irPbtupxZ5P/IF
5EfIX5LHSKc9n263PvlQ8mXkp8nfk8dPr72IbqcZ+SjyteQXyb+RJ82gvZRu
tw35ePLN5DfIf5Onyai9nG6nM7kf+U7yu+ThMmnPpNupSt6TfDb5fvIn5JEz
a8+p2/2PfAD5QvJj5K/IY2XRnl+305B8GPkK8jPkH8kTZNVeTLfbnNyXfB35
ZfLv5MmzaffS7bQjn0C+lfwm+R/ytNm1V9DtdiGfRr6L/D55+Bzas+h2q5H3
Jp9DfpD8KXnUnNpz6XbqkA8kX0x+nPwNeexc2gvqdhuRu+Qryc+RfyJPlFt7
cd1OS/LR5BvIr5h+97VaQNqm8J+m20xLs6x8M3iKPKF9L8/Xjp2bw71N1750
Iq9fC3h70+e6zvnl3xI+yXSZGJ2P3GkF32Z677oS40Jaw2+bzlcpTq30beHB
pte9fJKkYjt4+ryhnXb0jkdd2sMrmp6bYeyaqR3g3UzHPdaox86O8Ommx7bM
WeRuJ/ievPL6usAf6HYi5tOeVbdTg7wP+TzyQ+TPyaPl155Ht1uXfDD5EvKT
5G/J4xbQXki304R8BPlq8vPkX8gTF9ReQrfbinws+Ubya+SB5KkKaS+j2+lI
Ppncn/yOaf+yMQae7wb/a9qze5HpG3rCMxQO7WNz22yc2Ade2XSV436nuvSH
dzddI32OnwUGwWea7m3+wRD4XtOzBidruWc4/JHpPavjzho8Eh6pSGjfvxbl
XAlfePYicn1j4TVtj4f3sz0RPt/2FPgR29PgL2zPhMcoKj0Hntc03o+jnfqm
8X58LnyIXT8PvsyuR7un7Pr58Pd2/QJ4vGKqnSK63abko8jXkF8k/0qetLj2
krqdNuTjyDeTXyf/TZ7aU3s53W4ncj/yHeR3yZ0S2jPpdquQ9ySfRb6f/DF5
5JLac+h2/iPvT76Q/Cj5K/KYpbTn1+02IB9Gvpz8DPkH8gRe2ovqdpqT+5Cv
I79E/p08WWntXrrdtuQTyLeQ3yQPIk/rrb28bqcL+VTyXeT3yMOX0Z5Zt1ON
vBf5HPID5E/Jo5TVnku3W5t8IPki8uPkr8ljl9NeQLfTiHw4+Urys+SfyBOW
115ct9uCfDT5evIr5D/IU1TQXlq30558Ivk28lvkweTpKmqvqNvtSj6dfDf5
A/IIlbRn1e1WJ+9DPpf8EPkz8miVtefW7dQlH0S+hPwE+VvyOFW0F9LtNiYf
Qb6K/Dz5Z/LEVbV76nZakY8h30h+lTyQPGU17WV0ux3IJ5NvJ79DHkKeobr2
Srqd7uQzyPeSPySPVEN7Nt1OTfK+5PPJD5O/II9eU3te3W498iHkS8lPkb8j
j1dLe2HTO/K0G5NqEbyp6e6fK96stgQ+0nS2bdkzDl0GX2P6Wa9YfTasgF8w
vTj/56N3V8G/mm747Vrc6GvhSf7LaP78184WxdbDS5q+2Hfu5o4b4a1Njy00
JGTOZvg402V+Nqt2eit8k+ngXaUX/NwOv25694AMbzPthP8y3ato5GL1dsNT
1w7tnL9fj/XdCy9r+uXe87f898M7mV46eHOmZwfhU0w38ZzWN/4R+A7TiYL7
HPc+Bg8wfeVA/fi9TsCdOqE9YVixVktPwTOaLl8q5dbLZ+BV6sh8z8N72L4I
n2X7Mnyf7avwx7avwz3qhnbuva+WTUA7OUw37XOlXOIb8FqmJ+YKXYB2+ps2
y3PdhC8w/To096Kdo6YTmw1uwV+aLm/+AdqJWS+0zfZNb8PzmV4e+vRXaKeB
acN97sCH1pPrDYAvryfXi3ZP15PrvQv/UE+uF+3Gry/Xew9etL5cL9ptVl+u
9z7cp75cL9pdW1+u9wH8Un25XrT7rb5c70N4sgZyvY/gpUzn8IzQ+MFTeFvT
KbOEn/b6JXy86dgJwp359ha+xT7/E/yG7S/wINvf4GkaSv+Al7cdCO9sOuzr
p/CppvH+LAS+064PP9f4Pbs+kmk3XCNZHwWeuZGsjwGvKp4tJrxXI3l+LPhs
We/Ghh+w+8WBP5H1N+LCozSW/ePDczaW/RPAazeW/RPCB8h6NxF8kaxflxh+
TNbfSAJ/bfdPBo/VRPZPDi/QRPZPAW/YRPZPCR8u69elgq+Q9TdSw8/Keict
/KPdPx08YVPZPz28WFPZPwO8RVPZPyPcV9bfyARfL+udLPDLsj5bVvgPu382
ePJmsn92eOlmsn8OeLtmsn9O+ERZ7+SGb5X12fLAb8n6unnhf+z++eDpmsv+
+eEVmsv+BeBdm8v+heDTZH22wvDdsr5uEfh9We8WhUdoIfsXg2dpIfsXh1dv
IfuXgPeW9dlKwufK+rql4AdlvesFf2b3Lw2P2lL294bnbin7l4XX0e0MIl9M
foL8DXmcVtoL6nYak7vkq8jPkX8mT9Rau6dutyX5GPIN5FfJf5KnbKPdW7fT
gXwS+Xby2+Qh5Onbaq+k2+1GPoN8D/lD8ojttGfT7dYg70s+j/ww+XPy6O21
59Ht1CMfTL6U/CT5O/K4HbQX1u02IR9Jvpr8AvkX8iQdtZfQ7bQmH0u+ifwa
+S/yVJ20l9XtdiSfQu5PHkD+lzxjZ+2VdTs9yGeS7yN/RO7RRXt23U4t8n7k
C8iPkL8kj9FVez7dbn3yoeTLyE+TvyeP3017Ed1OM/JR5GvJL5J/I0/aXXsp
3W4b8vHkm8lvkP8mT9NDezndTmdyP/Kd5HfJw/XUnkm3U5W8J/ls8v3kT8gj
99KeU7f7H/kA8oXkx8hfkcfqrT2/bqch+TDyFeRnyD+SJ+ijvZhutzm5L/k6
8svk38mT99XupdtpRz6BfCv5TfI/5Gn7aa+g2+1CPo18F/l98vD9tWfR7VYj
700+h/wg+VPyqAO059Lt1CEfSL6Y/Dj5G/LYA7UX1O02InfJV5KfI/9EnmiQ
9uK6nZbko8k3kF8h/0meYrB2b91ue/JJ5NvIb5MHk6cfEto9S0S7tTzMK5oO
+3kg8G6mf2RpMuVoJfh007tT+b6tVRW+x/TgBJsqPK4Of2DabNejFjziUDmv
DjyrtBfaqSHthnkf6cNhPs8+vy78kH0+2nlunx/m0YbJ88M8j7RTD15X2gvt
DJZ2w3yJfX6Yn7TPrw9/a5+PduIOl+eHeSHpw2HeRNppAB9h1zeCr7beFH7e
enP4F+ut4Ild8TbwEtJOe3gr6x3hY613gW+03Q1+zXYPeKDtXvBUI6T7wMvY
7gfvaHsAfLLtQXB/20Pgd2wPg/+17cIzjJQeCa9s2wfe3fZo+EzbY+F7TeP9
6AT4I9N4/zkZHmmUrJ8Gzz5K1s+E1xwl6+fA+9n1C+DzTeP7jxfBj5gO+/vU
4C9M4/uXV8Bj+GT89/3Nq+F5TeP7n9fB65sO+/vT4EN85Lwt8GU+ct42+Ckf
OW8H/L2PnLcbHs9XztsHL+Ir5x2EN/WV847AR/nKecfha3zlvJPwi75y3hn4
V1857zw86Wg57xK85Gg57yq8zWg57wZ83Gg57zZ882g5LwB+fbScdx/+e7Sc
9wieeoyc9xReboyc9wLeaYyc9xruN0bOewffMUZ+vdHO3THy6x3mzlhZ/x6e
aaysR7tVxsr6MO9p13+Az7Lr0c5+uz7MH9v1H+GRx8l6tJtjnKwP8//GyfpP
8P66nYXkR8lfkcccrz2/brcB+TDy5eRnyD+QJ5igvahupzm5D/k68kvk38mT
TdTupdttSz6BfAv5TfIg02WaB1e58QWedpK5/3yX9P70A17edJT1ZeZHD4J3
Mf328oujmf7Cp5q+8GPcm9IR5hnfZXpLipzxmkY27d4zPd37ctEB0eHhJ4d2
3w69W06PDc9susHkROM2xYdXM13cf8+WM4nhvUynDGhy+1ly+JzJcv1p4Ad0
O0/Jo0zRnku3W5t8IPki8uPkr8lj+2kvoNtpRD6cfCX5WfJP5Amnai+u221B
Ptr09CGDSvXMAl9vulLJA4uL5INfses94T9sl4anmCZdHl7adhV4e9s14RN1
O9vIb5EHk6ebrr2ibrcr+XTy3eQPyCPM0J5Vt1udvA/5XPJD5M/Io83Unlu3
U5d8EPkS8hPkb8njzNJeSLfbmHwE+Sry8+SfyRPP1u6p22lFPoZ8I/lV8kDy
lHO0l9HtdiCfTL6d/A55CHmGudor6Xa6k88g30v+kDzSPO3ZdIf+r/a+5PPJ
D5O/II8+X3te3W498iHkS8lPkb8jj7dAe2HdTlPykeRryC+QfyVPslB7Sd1u
a/Jx5JvIr5P/Ik+9SHtZ3U4n8inkO8gDyJ3F2jPqdqqQ9yCfRb6P/DG5xxLt
OXS7tcj7ky8gP0r+kjzmUu35dDsNyIeSLyc/Tf6BPP4y7UV1u83IfcjXkl8i
/0aebLn2UrqdtuTjybeQ3zBt3i+8rg0PMm3eT7yvD0+zImPY+40vjeHlTZv3
Iz+awzubNu9XglrDp66Q/TvAd9ruBL9nuws83Mp/7XaDZ5Z2esKrWu8N72W9
H3y29QHwA9YHw59YHwqPskrchee0PRJe27YPfIDt0fBFtsfCj5nG+5Px8Nem
8f5lEjzWalnvBy+wWtZPgzdcLetnwofb9XPgK0zj58XOg581jZ8vuxD+0TR+
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
f0eS+yUrPI2H3C/Z4eU85H7JCe/sIfdLLrifh9wveeA7PeR+yQe/6yH3S354
uMhyvxSEZ4os90theNXIcr8UgfeMLPdLMfjsyHK/eML3R5b7pQT8SWS5X0rB
I0eR+6U0PGcUuV+84f9FkfulLHxAFLlfysMXRpH7pQL8WBS5XyrBX0WR+6UK
PFZUuV+qwvNHlfulOrxhVLlfasKH6XZWkJ8h/0ieIJr2Yrrd5uS+5OvIL5N/
J08eXbuXbqcd+QTyreQ3yf+Qp42hvYJutwv5NPJd5PfJw8fUnkW3W428N/kc
8oPkT8mjxtKeS7dTh3wg+WLy4+RvyGPH1l5Qt9uI3CVfSX6O/BN5ojjai+t2
WpKPJt9AfoX8J3mKuNq9dbvtySeRbyO/TR5Mnj6e9oq6nW7k08n3kD8gjxhf
e1bdTg3yPuTzyA+RPyePlkB7Ht1uXfLB5EvIT5K/JY+bUHsh3U4T8hHkq8nP
k38hT5xIewndbivyseQbya+RB5KnSqy9jG6nI/lkcn/yO+R/yTMk0V5Zt9ud
fCb5XvJH5JGSas+u261J3o98PvkR8hfkMZJpz6vbqU8+hHwZ+Sny9+Txkmsv
otttSj6KfA35RfKv5ElTaC+p22lDPo58M/l18t/kqVNqL6fb7UTuR76D/C65
k0p7Jt1uFfKe5LPI95M/Jo+cWnsO3c5/5P3JF5IfJX9FHjON9vy63Qbkw8iX
k58h/0CeIK32orqd5uQ+5OvIL5F/J0+WTruXbrct+QTyLeQ3yYPI06bXXl63
04V8Kvku8nvk4TNoz6zbqUbei3wO+QHyp+RRMmrPpdutTT6QfBH5cfLX5LEz
aS+g22lEPpx8JflZ8k/kCTNrL67bbUE+mnw9+RXyH+QpsmgvrdtpTz6RfBv5
LfJg8nRZtVfU7XYln06+m/wBeYRs2rPqdquT9yGfS36I/Bl5tOzac+t26pIP
Il9CfoL8LXmcHNoL6XYbk48gX0V+nvyz6fJtv8Y50BSeOKd4F7intNsD3sp6
X/gY6wPhG60Pg1+1PhIeaH0MPGUu8QnwMtKOH7yD9RnwydbnwrdbXwi/Y30Z
PMT6KniG3OLr4ZWk3c3w7tb94TOs74bvtX4A/tD6EXikPOIn4dmk3bPwmtYv
wftavwafb/02/LBu5wV59Lza8+p265EPIV9Kfor8HXm8fNoL63aako80vW5W
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
Xly324Z8IvlW8hvkf8lT99NeVrfTmXw6+R7ye+Rh+mv31e1UIe9JPo88gPwp
eaQB2rPpdmuRDyBfTH6c/DV5zIHa8+h2GpIPJV9Ffpb8E3n8QdoL63abk48h
30B+hfwHebLB2kvodtqRTyLfTn6T3HG1p9HtlCfvQj6TfC/5A/KwQ7Rn1O1W
Je9NPp/8EPkz8ihDtWfX7dQhH0i+lPwE+VvyWMO059PtNiIfTr6a/Dz5Z/KE
w7UX0e20JB9Lvok8kPwXefIR2kvpdtuTTyHfQX6bPMRI7el0uxXIu5HPIt9P
/pA8/CjtmXQ71cn7kC8kP0z+gjzqaO05dbt1yQeTLyM/Rf6OPM4Y7fl1O03I
R5CvJb9A/pU80VjtRXW7rcjHk28mv0b+mzzlOO2ldTsdyaeS7zLd6nup2LM9
v2P6/uiQ0yr5w0OND+o6CQ7ECLMM7mP60uq+k/euhFcyXSF/rmjd1sK7mz52
6v0En43wOab96q+LfG8L/IDpPa9aj5uxA/7YdPYBqSJW2AOPMCGog0aPDnkA
nsV02gVzw+3+D17DtH+mWiM7H4X3M50w6PbSnoQvMj290tlht8/Aj5o20027
AH9pemTnEkPKXoFHnyjP4zo8l+mxC66PWXATXt907AKbYxW4A3dNLwzi6/fg
K0z79GqWrtdD+GnTW2IFXfAE/sF0waDLNz+Dx50U1EcqvT5S6SW8oGmTr1/D
m5o20495Bx9lOmj2Zuk+wteZNsOPfIZfMm2Wb/YN/m2S7OcnPMlk2c9veLHJ
sp9/8DaTZT8hFhmfMFn2E9q0s3Wy7Ccc/Ppk2U8E+N/Jsp/I8FRTZD9R4WWn
yH5iwDtNkf3Ehk+fIvuJC989RfaTAH5viuwnMTz0VOlkcF/bKeGVbaeB97Tt
A5+r2wmwnRH+xHZmeKRp0lnhWU2bf15uTXZ4LdO1zL9Plwve347PC19sx+eH
H7PjC8Ff2/F+8BjTZXwxeJ7pMr4kvMF0GV8GPtSOLwdfacdXhJ+146vAP5rG
1++rwePPSBv89foa8EKm8fX5WvDmpvH1/7rw0abx9f768A2m8fX9hvDLM2S9
JvAfM2S9ZvCkM2W9FvASM2W9VvC2M2W9tvBJM2W99vBtM2W9jvCbM2W9LvB/
0n7d4WlmBbfbC15OOqAvvIu0MxA+Q9rPhe+11w+D37fXj4SHnS3Xj4VnkPab
AK8q7U6G95IOmAafb6+fBf/PXj8X/sxevwAeeY5c7w/PLu0sg9c2jffrrYAP
NI33662CLzGN9+uthZ8wjffrrYe/sfNtgseaK/NtgeedK/NtgzeaK/PthA+b
K/Pthq+eK/Ptg5+z4w/CP9v5D8ETzJPrj8KLzJP1TsBbzJP5zsDHzpP5zsM3
zpP5LsED7XyB8J92vuvw5PNlvtvwkrbvwNvbvgufbPsefIft+/Bbth/AQyyQ
fghPa/sRvILtx/Cutp/AZ9l+Ct9n+xn8oe3n8HALpV/AM9l+Ca9m+xW8j+3X
8AW6ncPkz8mjLtKeQ7dTl3wQ+TLyk+TvyGP7a8+v221MPoJ8DfkF8i/kiRZr
99PttCIfR76Z/Cr5b/IUS7SX1u12IJ9KvpP8DnnIpdp9dLsVybuTzyY/QP6I
PMIy7Zl1OzXI+5IvIj9C/pI82nLtuXS79chd8uXkp8nfk8ddob2Abqcp+Ujy
deQXyb+RJ16pvZhutzX5BPIt5NfJ/5CnWqW9jG6nE/k08t3kd8lDr9aeXrdT
mbwH+Vzyg+RPyCOu0Z5Vt1uTvD+5P/kx8lfkMdZqz63baUA+hHwl+Rnyj+Tx
1mkvpNttRj6afD35ZfLv5EnXay+u22lLPpF8G/kN8n/kqTdoL6fb7Uw+g3wP
+X3yMBu1Z9DtViHvRT6P/D/yp+SRN2nPptupTT6AfAn5cfI35DE3a8+r221I
Pox8Ffk58k/kCbZoL6zbaUE+hnwj+RXyn+TJtmovqdttRz6ZfDv5LXJnm/a0
ut3y5F3JZ5LvI39AHm679oy6nWrkvckXkB8if04eZYf2HLrdOuSDyJeSnyR/
Sx57p/Z8up3G5MPJ15CfJ/9CnnCXdj/dbkvyceSbyK+S/yJPsVt7Kd1OB/Ip
5DvJb5OH3KM9nW6nInk38tnk+8kfkYffqz2zbrc6eV/yheRHyF+QR9unPadu
px75YPLl5KfI35PH2a+9gG63CflI8rXkF8m/kic+oL2obqc1+XjyLeTXyP+Q
pzyovYxutyP5NPJd5HfJQwVoT6/brUTeg3wO+UHyx+QR/9OeRbdTk7wfuT/5
UfJX5NEPac+t261PPoR8BfkZ8g/k8Q5rL6jbaUY+inw9+SXy7+RJjmgvrttt
Qz6RfCv5DfK/5KmPai+r2+lMPp18D/k98jDHtPvqdqqQ9ySfRx5A/pQ80nHt
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
+QXyr+SJ2msvqtttRT6efDP5NfLf5Ck7aC+t2+lIPpV8F/kd8lAdtfvodiqR
dyefQ36A/DF5hE7as+h2a5D3I19EfpT8JXn0ztpz6Xbqk7vkK8hPk38gj9tF
e0HdblPyUeTryC+RfyNP0lV7Md1OG/IJ5FvJr5P/JU/VTXtZ3W4n8unku8nv
kYfurt1Xt1uZvCf5XPIA8ifkkXpoz6rbqUXen3wx+THy1+QxemrPo9ttQD6U
fCX5WfKP5PF7aS+k22lOPpp8A/ll8h/kSXtrL6HbbUs+iXwb+U3yf+Rp+mgv
p9vpQj6DfC/5ffKwfbVn0O1UJe9FPp/8P/Jn5JH7ac+u261NPpB8CfkJ8jfk
sfprz6vbaUQ+jHw1+Tnyz+QJBmgvotttQT6WfCN5IPlP8uQDtZfU7bQnn0y+
g/wWeYhB2tPqdiqQdzWdzTf3g+2r4bNM932VKsSgtfB9pg+ti5Gi1Hr4Q9MR
O/3zi7oRHm5wUFfP8qbJ1U3wTKbnvb/pLtwCr2b60eYT/q22wfuYzth9R0Dm
HfAFpnvkXHb/6074YdP7v0xxDu6GPzcdZufg5KP2wqO6QV2pT0e/yvvhOUzP
zFe/SbyD8Lqm7/4s494LgA8ynW5fbv+Vh+DLTHcemDqg8xH4SdO7Cse8n+cY
/J0rz+cEPPYQ6ZPw/LZPwRvbPg0fYfsMfI1u5wL5F/JEQ7X76XZakY8j30x+
lfw3eYph2kvrdjuQTyXfSX6HPORw7T663Yrk3clnkx8gf0QeYYT2zLqdGuR9
yReRHyF/SR5tpPZcut165C75cvLT5O/J447SXkC305R8JPk68ovk38gTj9Ze
TLfbmnwC+Rby6+R/yFON0V5Gt9OJfBr5bvK75KHHak+v26lM3oN8LvlB8ifk
Ecdpz6rbrUnen9yf/Bj5K/IY47Xn1u00IB9CvpL8DPlH8ngTtBfS7TYjH02+
nvwy+XfypBO1F9fttCWfSL6N/Ab5P/LUk7SX0+12Jp9Bvof8PnmYydoz6Har
kPcin0f+H/lT8shTtGfT7dQmH0C+hPw4+RvymFO159XtNiQfRr6K/Bz5J/IE
07QX1u20IB9DvpH8CvlP8mTTtZfU7bYjn0y+nfwWuTNDe1rdbnnyruQzyfeR
PyAPN1N7Rt1ONfLe5AvID5E/J48yS3sO3W4d8kHkS8lPkr8ljz1bez7dTmPy
4eRryM+TfyFPOEe7n263Jfk48k3kV8l/kaeYq72UbqcD+RTyneS3yUPO055O
t1ORvBv5bPL95I/Iw8/Xnlm3W528L/lC8iPkL8ijLdCeU7dTj3ww+XLyU+Tv
yeMs1F5At9uEfCT5WvKL5F/JEy/SXlS305p8PPkW8mvkf8hT+msvo9vtSD6N
fBf5XfJQi7Wn1+1WIu9BPof8IPlj8ohLtGfR7dQk70fuT36U/BV59KXac+t2
65MPIV9Bfob8A3m8ZdoL6naakY8iX09+ifw7eZLl2ovrdtuQTyTfSn6D/C95
6hXay+p2OpNPJ99Dfo88zErtvrqdKuQ9yeeRB5A/JY+0Sns23W4t8gHki8mP
k78mj7laex7dTkPyoeSryM+SfyKPv0Z7Yd1uc/Ix5BvIr5D/IE+2VnsJ3U47
8knk28lvkjvrtKfR7ZQn70I+k3wv+QPysOu1Z9TtViXvTT6f/BD5M/IoG7Rn
1+3UIR9IvpT8BPlb8lgbtefT7TYiH06+mvw8+WfyhJu0F9HttCQfS76JPJD8
F3nyzdpL6Xbbk08h30F+mzzEFu3pdLsVyLuRzyLfT/6QPPxW7Zl0O9XJ+5Av
JD9M/oI86jbtOXW7dckHky8jP0X+jjzOdu35dTtNyEeQryW/QP6VPNEO7UV1
u63Ix5NvJr9G/ps85U7tpXU7Hcmnku8iv0Meapd2H91OJfLu5HPID5A/Jo+w
W3sW3W4N8n7ki8iPkr8kj75Hey7dTn1yl3wF+WnyD+Rx92ovqNttSj6KfB35
JfJv5En2aS+m22lDPoF8K/l18r/kqfZrL6vb7UQ+nXw3+T3y0Ae0++p2K5P3
JJ9LHkD+hDzSQe1ZdTu1yPuTLyY/Rv6aPEaA9jy63QbkQ8lXkp8l/0ge/z/t
hXQ7zclHk28gv0z+gzzpIe0ldLttySeRbyO/Sf6PPM1h7eV0O13IZ5DvJb9P
HvaI9gy6narkvcjnk/9H/ow88lHt2XW7tckHki8hP0H+hjzWMe15dTuNyIeR
ryY/R/6ZPMFx7UV0uy3Ix5JvJA8k/0me/IT2krqd9uSTyXeQ3yIPcVJ7Wt1O
BfKu5LPI95E/JA93Snsm3W418j7kC8gPkz8nj3paew7dTl3yQeTLyE+SvyOP
fUZ7ft1uY/IR5GvIL5B/IU90VrufbqcV+TjyzeRXyX+TpzinvbRutwP5VPKd
5HfIQ57X7qPbrUjenXw2+QHyR+QRLmjPrNupQd6XfBH5EfKX5NEuas+l261H
7pIvJz9N/p487iXtBXQ7TclHkq8jv0j+jTzx5aBeHKPpe5+z8GKmjxQq9NA9
B29t+nnbBFeun4dPMB155pejWS/Ct5jOcujiztGX4NdNV3+7fvX9y/A/pnsn
HDsvbyA81ZWgnleq1YTJV+FlTB/oVmzw82vwTqYfLkza1e8GfJrpsKd/Npt9
E77btO+3qzXe34LfNV0x1dZSZe7AQwcGddfKk/L634WnNz2jf3vf7/fglU3v
Xlk6cZUH8B6mb19OFXXVQ/jcQHk+j+EHTeP7xZ7An5jG94s9hUe8mi74+8We
wbOaxveLPYfXvCrzvYT3vyrzvYL7X5X5XsOP2fnewF/Z+d7CY1yT+d7Dc5vG
9yd9gDcwje9f+ggfYsd/hq+047/Az9jxX+Ef7fjv8HjXg933B7zQdbn+J7zZ
9eDx7i/4aBm/5jd8vYwP/AO/LOOdf/Dvdn5nqfGkN2T+EKbd4jdk/pDwtjdk
/lDwiTI+MDR8m4x3wsJv2A4H/2c7PDz1TekI8HK2I8I7244En2E7MnyP7Sjw
+7ajwsPcko4Gz2A7OryKtF8MeC9pNyZ8nnRALPh/9vo48Kf2+rjwyLfl+njw
bNIB8eG1pZ2E8AHSfongS+z1ieHH7fVJ4G/s9cngMe/I9cnheaXdFPCG0gEp
4cOkndTwVfb6NPBz9vq08E/2+nTwBHfl+vTwwtJ+vvAW0m4G+BjpgIzwjfb6
zPAr9vos8J/2+qzwZPfk+mzwktJODng7ab+c8MnSbi74dnt9bvgte31euHNf
rs8HTyvt5oeXlw4oAO8q7RSCz7TXF4bvs9cXgT+w1/vBwz2Q64vBM9ouDq9m
uwS8t+2S8AW2S8EP2S4Nf267DDzKQ+my8By2y8HrPJTPZ7Qz6KF8/peHL7Xj
K8BP2vFo960dXxEe+5GMrwTPp9tpTD6cfA35efIv5Akfa/fT7bYkH0e+ifwq
+S/yFE+0l9LtdCCfQr6T/DZ5yKfa0+l2KpJ3I59Nvp/8EXn4Z9oz63ark/cl
X0h+hPwFebTn2nPqduqRDyZfTn6K/D15nBfaC+h2m5CPJF9LfpH8K3nil9qL
6nZak48n30J+jfwPecpX2svodjuSTyPfRX6XPNRr7el1u5XIe5DPIT9I/pg8
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
CzLfU8+/yHyvPU8UX86f537x5fx53iq+nL/38HG6nc3kV8l/k6dIoL20brcD
+VTyneR3yEMm1O6j261I3p18NvkB8kfkERJpz6zbqUHel3wR+RHyl+TREmvP
pdutR+6SLyc/Tf6ePG4S7QV0O03JR5KvI79I/o08cVLtxXS7rU1HWZbyVqMP
8Ammd55KGv/YR/gW000+JKyZ6TP8uukI8eNNnf4F/sf0lsKxzv/6Ck+VLKjr
t4wWufl3eBnTocdHKnvqB7yT6Q1bwo3M9gs+zXTtG6EOz/4N351M7u8v/K50
ANoJnVx+//kHTy/t5ywzXlnaCWHa7SEdgHbm2utDwg/a60PBn9jrQ8MjppDr
0U5WaTcMvKa0X1h4f2knHNzfXo92jtnrw8Nf2esjwGOklOsjwnObfvc26Bfa
aWD67p2gX5HgQ1LK72eR4StN79sb9CsK/IxpvF6JCv+YUn7/jQaPlyqox4wO
+hUdXsh0b/MrBrxZKvn/RUz4aNN4PRILvt50CfMrNvxyKvn/Wxz4d9Mpza+4
8KSpgzqG+RUPXjy17Dc+vG1q2S/anZha9psAvi217Dch/EZq2W8i+L/Ust/E
8NRpZL9J4OXSyH6Twjunkf0mg89II/tNDt+TRvabAn4/jew3JTxMWtlvKniG
tLLf1PAqaWW/aeC90sp+08LnpZX50c5/aeX+PX9qx6eDR04n49FutnQy3vPa
6WS8D3yAbmcJ+XHyN+QxfbTn1e02JB9m2xe+ynYG+DnbGeGfbGeCJ0gvnRle
2HYWeAvbWeFjbGeDb7SdHX7Fdg74T9s54cl8pXPBS9rODW9nOw98su288O22
88Fv2c4PdzJIF4CntV0QXt52IXhX24XhM20Xge+z7Qd/YLsoPFxG6WLwjLaL
w6vZLgHvbbskfIHtUvBDtkvDn9suA4+SSbosPIftcvA60i7aGWS9PHypdbRz
0noF+NtMwec9EO3EziznvSI8X2a5vhK8cWb5/KgMHy7jfavA18h4pyr8vIwP
RDtf7PzV4AmzyPzV4X5ZZP4a8JZZZP6a8HEy3qkF3yQdgHau2vlqw39J+9WB
p8gq19eFl5IOQDsdpN168CnSfvXhO+31DeC3s8p+0E7IbHL/DeHpssn4RvCK
2WQ82u1mxzeGz7bjm8D3224Kf2S7GTx8dunm8My2W8Cr224J72u7FXyh7dbw
I7bbwF/YbguPlkO6HTyn7fbwerY7wAdLu2hnufWO8FPW0c57653gcXJKd4YX
sN0F3sR2V/hI293ga213h1+03QP+NaecT7STOJd8fHrCi+aS++sFb51LPl69
4eNlvG8f+BYZ7/SFX5PxgWjnj52/Hzxlbpm/P7xMbpl/ALxjbpl/IHyajHcG
wXfZHgy/a9uFh8ojPQSe3vZQeCXbw+A9bA+Hz9HtHCR/TB4xr/Ysup2a5P3I
/U3jzxMj4EdN488jaOeVHT8SHj2faie3brc++RDyFeRnyD+Qx8uvvaBupxn5
KPL15JfIv5MnKaC9uG63DflE8q3kN8j/kqcuqL2sbqcz+XTyPeT3yMMU0u6r
26lC3pN8HnkA+VPySIW1Z9Pt1iIfQL6Y/Dj5a/KYRbTn0e00JB9Kvor8LPkn
8vh+2gvrdpuTjyHfQH6F/Ad5sqLaS+h22pFPIt9OfpPcKaY9jW6nPHkX8pnk
e8kfkIctrj2jbrcqeW/y+eSHyJ+RRymhPbtupw75QPKl5CfI35LHKqk9n263
Eflw8tXk58k/kycspb2Ibqcl+VjyTeSB5L/Ik5fWXkq32558CvkO8tvkIcpo
T6fbrUDejXwW+X7yh+Thy2rPpNupTt6HfCH5YfIX5FHLac+p261LPph8Gfkp
8nfkccprz296avb1aeaNgjcxXfTL+5dlxsBHmP6wM+emr2Pha00v7ten57Lx
8AumqxTal7/aRPhXO/9keKIKPvL+DXhR0977N+CtTHvv34CPN+29fwO+2bT3
/g34NdPe+zfgvyvIejPhKSvKemi3dEVZbxa8Y0VZbzZ8akVZbw58V0VZby78
TkVZbx48VCVZbz7cxzT+fIR2KpnGn58WwLubxt+3LITPMY2/T1kEP2Dn84c/
tvOh3QiVZb7F8CyVZb4l8BqVZb6l8H6VZb5l8EWmzY+Ln4V2jprGz6dfDn9p
2vx4+KNoJ3oVn+CfV78Cnsu0yc9op75p/Pz6lXDXtPl58ylXwVeYxs+zR7un
TZufP191NfyDafx8e7Qbt2rw/bpr4AWrBt9vvLXwplWD73cD2hlVNfh+S66D
r6safL930M6lqsH322M9/FvV4PuNtAGepFrw/S5Bu8WqBd9v/o3wNtWC7/ci
2p1QLfh+22yCb60mz3cz/Ho1eb5o5281eb5b4Kmqy/NFO2Wry/PdCu9UXZ4v
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
hO0M8Ha2M8In2c4E3247M/ym7qAXyObz4+HEXak8T2O6bvWr03N5Xt507yNJ
upb2vIvpGblaVqzr+UzTW1esS9/e872mL8T7HGag5w9Mvx1d4OFEz8NODOrI
P4ce8Pc8o2nf9qfmbvG8qunSt2P0PuJ5b9NBq1W/6vl808MO+Gd57vkh04uz
PI/00/Nnpg8GcaQs8CiTgtpMlwTtZjdtls/ieR3T8YNut6jnA03nNgt6vtS0
eRwtPT9huqu5Qc/fmp60K9Xb0Z7HmhzU69MHbcjzfKaDdrdineeNTAfd7dAD
ng83HXZg0cYXPF9tOrV5YJ6fNx2k8T57/tm0yTBZ4QmnBLW5PB7aLWJ6XtBy
6T1vaXp30O0V8HysabOdip5vMm2239jzQNMxzQfc81+ms5ob9jz51KA2H47p
npcybT58Kzxvb3pM0Id7l+dTTK8MOh6nPN9h2hyn257fNm2O31vPQ0yT85kN
ns50UvPA0W6FaXJePe82Tc6r57OmyXn1fP80Oa+eP5wm59Xz8NPlvHqeabqc
V8+rT5fz6nmf6XJePV84Xc6r54eny3n1/MV0Oa+eR50h59XznDPkvGaH150h
5xXtDJ4h59XzZTPkvHp+aoacV8/fzZDz6nmcmXJePc8/U86r501mynn1fMRM
Oa+er50p59XzCzPlvHr+daacV88TzZLz6nnRWXJec8BbzZLzinbGz5Lz6vnm
WXJePb82S86r579nyXn1POVsOa+el54t59XzjrPlvHo+dbacV893zZbz6vmd
2XJePQ81R86r5z5z5Lx6XmmOnNec8O5z5LyinTlz5Lx6fmCOnFfPH8+R8+p5
hLlyXj3PMlfOq+c15sp59bzfXDmvni+aK+fV86Nz5bx6/nKunFfPo8+T8+p5
rnlyXj2vP0/Oq+fuPDmvueAr5sl5Rbun58l59fzDPDmvnsedL+fV84Lz5bx6
3nS+nFfPR82X8+r5uvlyXj2/NF/Oq+ff5st59TzJAjmvnhdbIOfV8zYL5Lx6
PmGBnNfc8K0L5Lyi3esL5Lx6/neBnFfPUy2U8+p52YVyXj3vtFDOq+fTF8p5
9Xz3Qjmvnt9bKOfV89CL5Lx67rtIzqvnlRfJefW85yI5r57PXSTnNQ88YJGc
V7T7ZJGcV88j+ct59Tyrv5xXz2v5y3n1vL+/nFfPF/vLefX8mL+cV89f+8t5
9TzGYjmvnudZLOfV8waL5bx6PnSxnFfPVy6W8+r52cVyXvPCPy6W84p24i+R
8+p5oSVyXj1vvkTOq+ejl8h59XzDEjmvnl9eIufV8x9L5Lx6nnSpnFfPSyyV
8+p526VyXj2ftFTOq+fblsp59fzmUjmv+eD/lsp5RTtplsl59bzcMjmvnndZ
JufV8xnL5Lx6vneZnFfP7y+T8+p52OVyXj3PsFzOq+dVl8t59bzXcjmvns9f
LufV8/+Wy3n1/NlyOa/54ZFX+AS/P78APLtpvH+/ILz2iuDxbiH4QBm/pjB8
iYwPLAI/IeOdovA3dv5i8FgrZf7i8LwrZf4S8EYrZf6S8GEyPrAUfLWMd8rA
z8l437Lwz3b+cvAEq2T+8vAiq2T+CvAWq2T+ivCxMt6pDN8o432rwANlfM2q
8J92/mrw5Ktl/urwkqtl/hrw9qtl/lrwyTLetzZ8h4yvWQd+S8a7deEh1sj8
9eBp18j89eEV1sj8DeFdZbxvI/gsGV+zMXyfjHebwB/a+ZvCw62V+ZvBM62V
+VvAq62V+VvC+8j4mq3gC2S82xp+WMavaQN/budvC4+6TuZvD8+xTubvAK+7
TubvCB8k491O8GUyfk1n+EkZH9gF/s7O3w0ee71P8L9n1h2e3zT+/bMe8Mbr
Zb6e8BGm8e+r9YKvMY1//6wP/MJ6ub++8C+m8e+r9YMn2uAT/O+x9Yf7bZD7
GQhvtUHuZxB83Aa5n8HwzRvkflz41Q1yP0PgvzfI/QyDp9go9zMcXnqj3M8I
eIeNcj8j4VM3yv2Mhu80jfdboJ07pvH+jTHwkJt8gt8PgnZ8TOP9F2PhFU3j
/Rxop7tpvD9kHHz2JllvPPzAJlkP7T7aJOtNgEfYLOuh3cybZb2J8BqbZT20
23ezrDcJvmizrDcZfkS385I82hbtuXS79chd8uWmnw5b2y/OFPhp07vmv8sc
Yzr8vemx23M8ijwLHndrUDc413tW+LnwAqYzP9tbPvQCeNOtMr8/fKTtxfB1
tpfAL9peCv9mexk88Taf4Pe/op1ipvH+WM9bm8b7Zz2fYBrvr/V8yzaZbzn8
up0P7f6x83mearvM53mZ7TKf5522y3wr4NN0O7vJ75KH3qE9vW6nMnkP8rnk
B8mfkEfcqT2rbrem6WjVAj72WQnvb/pe0zszf6yC+5ve2PVn/n5r4MdMDx4S
797PtfBXpitPyTms/3p4jF1BnWxx1XS/N8Bzm363qdPpAZvgDUwfDBjX+c9m
+BDTky+sijVoK3yl6Sb3j+78uw1+xnTW9w/rD94B/7hL7n8XPN5u+XzbDS+0
Wz6f9sKb7ZbPz/3w0bvl8+8AfP1u+XwOgF/eLZ+vh+Dfd8t6R+BJ98h6R+HF
98h6x+Ft98h6J+ET98h6p+Db9sh6Z+A39sh65+D/9sh6F+Cp90pfhJezfQne
2fZl+AzbV+B7bAfC79u+Cg+zT7WTQbdbhbwX+Tzy/8ifkkferz2bbqc2+QDy
JeTHyd+QxzygPa9utyH5MPJV5OfIP5EnOKi9sG6nBfkY8o3kV8h/kicL0F5S
t9uOfDL5dvJb5M5/2tPqdsuTdyWfSb6P/AF5uEPaM+p2qpH3Jl9Afoj8OXmU
w9pz6HbrkA8iX0p+kvwteewj2vPpdhqTDydfQ36e/At5wqPa/XS7LcnHkW8i
v0r+izzFMe2ldDsdyKeQ7yS/TR7yuPZ0pj8l2VPxy3V4RdOTNjft+u0WvJvp
DCUjzPhxFz7b9Inrm3b9egDfb7pFhzq3/zyGP7LzP4eHPyH9Ep7Z9mt4ddtv
4X1tv4cvNI0/D6OdI6a9n4cDf2HHf4RHOynj0W7OkzL+E7zeSRn/GT5Yt7Oc
/BT5e/I4p7QX0O02MV2z8PhfPb/AR5rOsnpA/G/f4GtNR4jdMVefn/CLph8N
aljtx2/4V9P7X1Ts3O8fPPHpoJ5VI2jCECuMFzXd7WDm1QNCm3Zam67gm+zY
n7Dw8abTzoj2aFAE+JbTcn+R4ddsR4X/sR0dnvKMdEx4Gdux4R1tx4VPsx0f
vst2Qvhd24nhoc6qdtLrdiuR9yCfQ36Q/DF5xHPas+h2apL3I/cnP0r+ijz6
ee25dbv1yYeQryA/Q/6BPN4F6eTwghfk/KeEN7sgnx+p4aPs+HTw9XZ8evgl
Oz4D/Lsdnxme5KJ0Vnhx29nhbWznhE+0nRu+1XZe+A3b+eF/bReEp74kXRhe
1rYfvLPtYvDp0gHF4Xuk3ZLwe9J+peFhLsv1ZeG+0gHl4FWk3QrwntJ+leDz
7PVV4AGXfeTfl4E/vSzPszo80hWZryY82xV5/rXhta4Ej/etCx8g45368MUy
PrAB/LiMX9MI/trO3wQeM1DmbwbPEyjzt4A3DJT5W8GHmsbrudbwVabx+q8t
/KxpvL5rB/9kGq8HO8DjX5X5OsELX5X5OsObX5X5usLHXJX5usE3XJX5esCv
2Pl6wX/Y7g1Pdk26D7zENVmvL7zdNVmvP3zSNVlvAHz7NVlvEPymnc+FO9dl
viHwNNdlvmHw8tdlvuHwLtdlvpHwmddlvtHwvdfl4zEW/uC6fPzGw8PekPGT
4BlvyPgp8Ko3ZPw0eG87fiZ8vml8P+Qs+CHT+P7EOfBnpvH9mPPgUW76BH9/
5Hx4dtP4fsWF8Dqm8f2Z/vCBpvH9kkvgS03j+xeXwk+YxvdrLoe/NY3vn1wJ
j3VL7nc1PN8tud818Ea35H7XwYffkvvdAF99S+53I/z8LbnfzfDPt+R+t8IT
3pb73Q4vclvudwe85W25313wsbflfvfAN92W+90HD5QOOAD/Je3+B09+R35/
OAIvJe0ch7eXDjgJnyLtnoHvsNefh9+211+Ch7grfQWezvZVeAXb1+HdbN+E
z7J9G77f9l34Q9v34eHvST+EZ7on5xHtVL8n59HzPnb8I/hCOx7tHrbjPX9h
xz+GR72v2smp261LPph8Gfkp8nfkcR5oz6/baUI+gnwt+QXyr+SJHmovqttt
RT6efDP5NfLf5CkfaS+t2+lIPpV8F/kd8lCPtfvodiqRdyefQ36A/DF5hCfa
s+h2a5D3I19EfpT8JXn0p9pz6Xbqk7vkK8hPk38gj/tMe0HdblPyUeTryC+R
fyNP8lx7Md1OG/IJ5Fv/5+quw6JawjiOj93dDRiEiN2FLYjd3d2FrWNcu7vF
7sBusRu7C7uwA8W6O7/d932eef3vez9z5syZBS4cdlnht4X/FZ79te0Bduse
wmcL3yf8kfDYb2z3sVvXFN5f+ELhYcKfC0/01vZ8dqsGwocIXy78lPBI4Ski
bS9qt24mfJTwtcIvCv8sPP0720vbrdoKHy98i/Brwn8Kz/re9op2687Cpwnf
Kfyu8H/Cc36wPdBu1Uv4HOEHhEcIj/vR9tx2q9rCg4UvFn5U+EvhiT/ZXsBu
3dB0nbd3N2Z4AR9m+t2NxE8qvYKvMD0hrEz6Pm/gZ0zn2NirxtJI+DvTYXNW
jDn3Hp7qs6Ob6uv7v3+EFzMd1SXuJ48v8BamZ9Yv5lnzG3y0aT//Ls2HRMHX
mz7rs3jW2p/wcNPt04SfvfYL/vUzrf8vPMMXV/ujVVlq7fR21GFOn0it/sG3
8vFodYOPd3o0H+90t690vFprvBJ3DNOqK3dM+HTuWPDd3LHh90zj/WPQKsY3
L9f7uTg9l2n8fiQOPMg03j8GrXubxvu5xIXPM43fl6D1QdP4fise/IlpvD8O
Wsf77uX6/Ul8eB7TeP8YtK5jGu+PkwA+0DR+f4PWS0zj/WMSwo+bxvdzaP3K
NH6fkwieNMrL9X48aF3QNN4fJzG8sWn8fgeth5vG+/Ekga8yjffHQeuzUbSf
SeEfomg/0Tr1D9pPp5f4QfuZDN7yB+0nWv33g/YzOXzDD9pPtLr8g/YzBfzb
D9pPtMr0k/YzJdz/J+0nWnX4SfuZCj7pJ+0nWoX+pP1MDb/5k/YTrX7/pP1M
A3ePpv1EqyrRtJ9p4d2iaT/RamY07Wc6+J5o2k+0ehBN+5keHvOX1crLdL1t
HfvmzQCvbrrsiSlz22aG9zXtc3vHvnnZ4PNNp4m8c/+8B/wwz5cL/pTbC57g
N7UP3I/bF16P2w8+iDsffBl3AfgJ7kLwN9xF4Mn+0Od3UXhhal0c3oTavyRc
U6vS8NV8fBn4eT7eH/6Rjy8PT/uXjq8IL8ldGd6auyp8LHcgfBN3EPwKdw14
FHcteOZ/1HXg5bnrwTtyN4BP4W4E387dGH6buwn8D3czeHbl7eoW8KrcreA9
uNvAZ3G3g+/j7gB/yN0JHjsGdRe4N3c3eE3uHvB+1GE94QupdW/4EWr/vvDn
fHx/eMKYdHwwPB+1HgivT+0/GD6EWg2Fh3APh5/i1vC33KPgKWJRj4EX4R4L
b8Y9Hj6SexJ8LfdU+AXuafDP3NPh6WJ7u76+zICXNo2vb7PgbWLT+Dnw8Tx+
Lnwzj58Pv8bjF8J/UOtF8KxxyJfAK1DrpfDO7CHwqdT+K+A7efwq+B3qsDXw
f3z8eniOuHT8Rnggtd4M70kdthU+h1pth++PS9eLVhFx6Xp3wOPEo/E74bnj
0Xi0rhWPxu+CB/P43fBF3HvgR7n3wl9w74cnjk99EJ6f+zC8IXcYfCj3MfgK
7hPw09T6JPwd+2l4ygTkZ+DFqNU5eHP28/DR7Bfh69jD4eHsl+Ff2NEqQ0Ly
K/Ay1Bqt2rFfhU+wW20Vfl14tPBsiWyvZLfuIny68F3C7wlXiW3PZbeuJry3
8LnCDwp/LDxeEtt97VZ1hA8QvkT4MeGvhCdJantBu3Uj4cOFrxR+Vvh74amT
2V7cbtVS+BjhG4RfEv5NeMbktvvbrdsLnyR8m/Cbwn8Jd09he2W7VTfhM4Tv
EX5feMyUtnvaraoL7yN8vvBDwp8Kj5/Kdj+7dV3hg4QvFX5C+GvhyVLbXshu
1UT4COGrhZ8T/lF4mjS2l7RbtxI+VvhG4VeEfxeeOa3t5exWHYVPFr5d+C3h
f4R7pLO9qt26u/BZwvcKfyg8Vnrbve3WNYT3E75A+BHhz4QnzGB7XrtVfeGD
hYcIP2k64NeQaaHX4G9Nt701dVnfG/DkGR09bMfyrYVvwYuYnjdt55Go2/Cm
prd3PX1p3134SNMXqtx9NOQ+fI3pF9nffSj9EH4hI50/Av7JbpUuk+2l7FZt
hI8znTTC+8P3J/DN7C/gV7lfwn9wv4JnyUz9Gl6B+w28E/db+FTuSPgO7nfw
O9zv4X+5P8BzZKH+CA/g/gTvyf0ZPpv7C3w/91f4I+4oeJys1NFwH+4/8Frc
ap3x/twxTatF3LHhYdxx4S+448MTZaNOCM/PnRjegFongQ9lTwZfzp4cfpo9
JTySOzU8pRt1WnhR7vTw5twZ4aO4M8PXcWeFX+TOBv/C7QZP7+7t+n7YHV7G
NL4fzg5v607jc8In8Phc8C083gt+ncf7wH9y+8KzeVD7wSt60Hx54V08aL78
8Gk8viB8F48vBL/L44vAVXYaXwyeMzuNLw6vlp3Gl4T34vGl4XN5fBn4AR7v
D3/M48vD4+agrgj35a4Mr81dFT6AOxC+mLsa/Bh3EPwldw14kpzUteAFuOvA
G3HXgw+j1vXhK9kbws+wN4K/Z28CT5WLuhm8OHcLeAvuVvAx3G3g67nbwS9x
d4B/zUX73RGe0ZP2uzO8rCeN7wpv70nju8En8vge8G08vhf8Bncf+C/ufnA3
L5qvP7yyF803AN7Vi8YPgs/g8YPhu3n8UPh9Hj8cHsObWsM9uUfBg0zj+Slj
4H1MO5+PAp9nGs9nGQ8/ZBrPX5kIf8LzTYHH96H5psHz+NB8M+B1fWi+WfCB
PjTfHPhSH5pvPvw490L4a+7F8KS5qZfCC3GHwBvnpv1aDh+Rm/ZrJXwVj18N
P8fj18A/8Ph18DS+NH4DvAT3Jngr7i3w/3zpetFqoy/tz1b4ZV+6frT67kv7
tQ2eKQ/NFwovl4fmQ+sOeWi+7fDJeWg+tA7NQ/PtgN/i+XbCf9utPPxsr2K3
6i58pvC9wh8Ij5XXdi+7VQ3hfYUvEH5Y+DPhCfLZntduXU/4YOHLhJ8U/kZ4
8vy2F7ZbNRWuha8Rfl74J+FpC9heym7dWvg44ZuEXxUeZdorb7V+U3fDsxR0
9J1Y7a+83Acvb3ri7eF+5Q7BO5kuuXn+pIVh8CmmI0duf/XlOHyH6aUNLlSq
fhp+23TN3C9WrDkH/1uQzh8Oz16I/v+AVgHU6hK8BztazWa/DN9nt3okPHZh
233s1jWF9xe+UHiY8OfCExWxPZ/dqoHwIcKXCz8lPFJ4iqK2F7VbNxM+Svha
4ReFfxaevpjtpe1WbYWPF75F+DXhP4VnLW57Rbt1Z+HThO8Uflf4P+E5S9ge
aLfqJXyO8APCI4THLWl7brtVbeHBwhcLPyr8pfDEpWwvYLduKHyY8BXCzwh/
JzxVaduL2a1aCB8tfL3wcOFfhWcoY3tZu3U74ROFbxV+Q3i0cLeytleyW3UV
Pl34buH3hMfwtz2X3SpIeG/h84QfFP5EeLxytuexW9cRPlD4EuHHhb8SnrS8
7QXtVo2FDxe+SvhZ4R+Ep65gewm7dUvh/wnfIPyy8G+m+1/IeWzWVXimio4+
cXNPjAo34P6mUz0OKPf5FryD6TZv7+nld+GTTId+6x5W6wE8tCLNHwG/yf0Y
/pv7Cdy9ktWqit26m/CZwveYvlTqy4WCT+EPTN9cnmFS/2fwmJUd/SCuf8Ce
53Av08+6doj38wW8uum3lyefLPEK3tf058I7Rg99DZ9v+ufCO+UOv4Efrkzn
j4Q/NW2+3238Dp6girfz+90d7+F+ps33u4k/wuuZxve7n+CDqrjmC/sMX1bF
NV+Gr/ATNF/fb/A3NN+F7/BkVV3z5foBL1zVNZ/+CW9S1TXfnWi4ruqar+Bv
+Oqqrvkm/4Gfp/le/IV/pPn81XrjaQNc8y2IYVqXDHDN9yUmvHWAa76g2PCx
Aa751sSBbwqg/YsHv0LzNY4Pj6L5diSAZw6k/UsELx9I+5cY3jGQ9i8JfEog
7V8y+PZA2r/k8Ns034UU8D80X65U8OzVaP9Sw6tWo/1LA+9RjfYvHXxWNdq/
9PB91Wj/MsAf0nz+meCxg2j/MsO9g2j/ssBrBtH+ZYP3C6L9c4MvDKL984Af
4c4Of86dA56wOl1PTng+auUJr8/uBR/C7gMP4c4NP8XtC3/LnQeeoga1H7wI
tc4Lb8aeHz6SvQB8LXsh+AX2wvDP7EXh6WqSF4OXplYl4G3YS8LHs5eGb2Yv
A7/G7g//UZM+XsrBs9aix68CvEIt+nisBO9ciz4+qsCn1qL5AuA7a9F8gfA7
PF8Q/B/PVwOeozbNVwseWJvmqwPvadr5eiz4HNO4H1Afvp/HN4RH8PhG8Dh1
aHwTeO46NL4ZvFYdGt8cHszjW8IX8fjW8KM8vg38BY9vB09cl8Z3gOc3jeen
dYQ3NI3nk3WGDzWN5391ha8wjee/dYefNo3nq/WEvzON55f1hqesR+frCy9W
j87XD968Hp0vGD66Hp1vIHxdPTrfYHh4PTrfUPiXenS+4fAM9el8Gl6GexS8
HfcY+ATusfCt3OPh17knwqO5J8OzNbBaVbJbdxE+Xfgu4feEq4a257JbVxPe
W/hc4QeFPxYer5HtvnarOsIHCF8i/JjwV8KTNLa9oN26kfDhwlcKPyv8vfDU
TWwvbrdqKXyM8A3CLwn/JjxjU9v97dbthU8Svk34TeG/hLs3s72y3aqb8BnC
9wi/Lzxmc9s97VbVhfcRPl/4IeFPhcdvYbuf3bqu8EHClwo/Ify18GQtbS9k
t2oifITw1cLPCf8oPE0r20varVsJHyt8o/Arwr8Lz9yavn7OhZdrTV9/N8I7
tqavp0fhk1vT1+Ob8O2tab5I+C271R/hHm1sr2q37i58lvC9wh8Kj9XWdm+7
dQ3h/YQvEH5E+DPhCdvZntduVV/4YOEhwk8Kfys8eXvbi9itmwofKXyN8AvC
PwlP18H2UnarNsLHCd8s/KrwH8KzdLS9gt26k/CpwncIvyP8r/AcnWwPsFv1
FD5b+H7hj4TH6Wy7j92qlvD+whcJDxP+QniiLrbnt1s3ED5U+HLhp4VHCk/Z
1faidqvmwkcJXyf8ovAvwtN3s72M3bqt8AnCtwi/Lvyn8Gzdba9ot+oifJrw
XcLvClc9bM9pt6omvJfwucIPCH8sPG5P233t1rWFDxC+WPgx4S9Nn9qSpezL
9/AkvRx9aU6bM28+wQuYvjV0be33X+GNTD9qG3n3UxR8mOmXgfnbfYuGrzT9
MX/wux9/4GdM/0h/IPi32mD8fS86f2zTOlVvR2doOzn/KbQqbrrAqfRtJ8eB
tzAd6L16dp248DGmzfD08eDrTQ/9cCjqIVpdMj2njuOI+PCvpjfvutmkawJ4
xj7meh3T508IL2v60RDHBGjV3vSPh47/kAg+0XSK8vHdxySGbzNtlhOYBH7D
tOHkSeG/TDft6jgjWrv1dXS/8OIvFyeDVzZtlt82ObyraTOddwr4DNOHoxwL
QOvdpm81cUyYEn7ftLncIangMfo52py+fGq4p2mT8dPAg0yXeLm4bzha9TFd
12xoWvg802a5TdLBD5k2h7unhz8xvaSv4wLQKn5/R+92bOfmDPA8ps3l9c0I
r2vanK54JvjA/vR4Z4Yv7U+PN1of70+Pdxb46/70eGeFJw2mxzsbvFAwPd5o
3TiYHm83+Ihgerzd4auC6fH2gJ8LpscbrT8E0+OdHZ5mAD3eOeAlBtDjnRPe
agA93rng/w2gxxutNg6gx9sTfnkAPd5e8O8D6PH2hmcaSI83WpUbSI+3D7zD
QHq8c8MnD6TH2xceOpAe7zzwWwPp8Ubr3wPp8faDewyixzsvvMogerzzwbsP
oscbrWcOosc7P3zvIHq8C8AfDKLHuyA81mB6vAvBvah1YXgN9qLwvuzF4AvY
S8APs5eEP2MvDU8whLwMPC+18ofXYy8HH8xeAb6MvSL8JHtl+Bv2KvDkQ8kD
4IWpdSC8KXsQXLNXh69hrwk/z14L/om9DjztMPK68FLUqj68NXsD+Dj2RvBN
7I3hV9mbwqPYm8GzDCdvAS9PrVvCO7G3hk9hbwPfwd4Ofpu9Pfwve0d49hHk
neAB1KoLvAd7V/hs9u7wfew94I/Ye8Fja/LecB9q1Rdek70fvD97MHwhddgA
eBiPHwR/Tu0/BJ5oJB0/DJ6POmw4vAG11vAh1P6j4Mv5+DHwU9xj4ZHc4+Ep
RlFPhBflngxvxj0VPop7Onwt90z4Re7Z8M/cc+HpR1PPh5fmXghvy70YPp57
KXwLdwj8GvcK+E/uVfCsY6jXwCtyr4N3No37pevh00zjfulG+E4evxl+l8dv
gf/j8dvgOf+j8dvhgdw74b24d8PnmMb7l6PVAdO43+n0CNN4f3Knxx3r7bp/
6vTcpvFy4T3w2qbx8z1aB4+ljxenLx7rOt9upx8d6zrfO6e/HOs6X4698MTj
XOdrilYFxrnON9PpDce5znfW6cPG0fXtg68YR9eHVmfG0fU5/d04uj6npxpP
1+f0YuPp+vbDW4yn60Pr0ePp+py+fjxdn9PDx9P1Of3reLq+A/AME+j60Krs
BLo+p7ebQNfn9IkT6PoOwrfarW4IjxbuNtH2SnarrsKnC98t/J7wGJNsz2W3
ChLeW/g84QeFPxEeb7LteezWdYQPFL5E+HHhr4QnnWJ7QbtVY+HDha8Sflb4
B+Gpp9pewm7dUvh/wjcIvyz8m/BM02z3t1t1ED5JeKjwm8J/C3efbnsVu3U3
4TOF7xH+QHjMGbZ72a2rC+8rfL7ww8KfCk8w03Y/u1U94YOELxN+Qvgb4clm
2V7Ybt1EuBa+Wvh54R+Fp51te0m7VWvhY4VvEn5FeJTwzHNsL2+37ih8ivDt
wm8L/yM8+1zbq9qtegifJXyf8IfCY8+z3dtuVVN4P+ELhR8R/lx4wvm257Nb
1xc+RHiI8FPC3wpPscD2InarZsJHCl8r/ILwz8LTLbS9tN26jfDxwjcLvyb8
h/Csi2yvYLfqLHyq8J3C7wj/JzzHYtsD7dY9hc8Rvl94hPA4S2zPbbeuJTxY
+CLhR4W/EJ54qe357VYNhQ8VvkL4aeHvhKdcZnsxu3Vz4aOFrxMeLvyL8Awh
tpexW7UTPkH4VuHXhUcLz7bc0RtTLDn+9jC8kuk9BTeufX8U3sX08fr7Jn06
AZ9u+tKA0z2/nobvMn1vwY26Uefg90y/OvC0aPRFuFrh6K8PPmX6cxmeawWd
/zq8mt2qt/C5wg8Kf2y6ZuSJGpE34fFWkt+F+1L734fXodYP4QOowyLgS/j4
p/BjfPxz+Cs+/iU8ySo6/jW8ILWKhDfi/ggfzv0VvpL7B/ws92/4e9P4+Qyt
Uq/2dv385vTiq2n8H3jL1TQercfweKdv4PF/4Ze41Ubj37hjmtYZ11DHhvtz
x4W3544Pn8SdEL6NOzH8JndS+C/u5HD3tdQp4ZW5U8O7caeFz+BOD9/DnRF+
nzszPOY66qxwT243eHVuD3gf7hzw+dy54Ie4veBPuX3g8ddT+8L9uP3gdbnz
wQdxF4Av5S4EP8FdBP6auxg82QbqEvBC3KXgTbjLwEdw+8NXc5eHn9tAHz9o
x0cxfXxVgKfZSOMrwktupPFo3Wojja8EH8vjK8M3msbz16rCr5jG89Wqwb+b
xvPdqsMzb/J2Pb+tFrzcJpqvLrzjJpqvPnzyJpqvEXz7JpqvCfwWz9cc/ofn
awX32EzdGl6Vuw28O3db+CzudvC93O3hD7k7wGNtoe4I9+buBK/B3Rnej7sL
fAF3V/gR7m7wZ9zd4Qm3UveA5+XuCa/P3Qs+2G4VIvyk8LfCk2+zvYjduqnw
kcLXmM5xxqtpm97wC6ZDv3rUqNcP/sl0Gfcs5SoPgKcLdfT56ukKFRsML2W6
0eAUnj7D4G1Mv1iTKGNmDR9nuu+1OEmSjoZvDqXzj4VftVv9EJ5lu+0V7Nad
hE8VvkP4HeF/hefYYXuA3aqn8NnC9wt/JDzOTtt97Fa1hPcXvkh4mPAXwhPt
sj2/3bqB8KHClws/LTxSeMrdthe1WzUXPkr4OuEXhX8Rnn6P7WXs1m2FTxC+
Rfh14T+FZ9tre0W7VRfh04TvEn5XuNpne067VTXhvYTPFX5A+GPhcffb7mu3
ri18gPDFwo8Jfyk8yQHbC9itGgkfJnyl8DPC3wtPddD24nbrFsLHCF8v/JLw
r8IzHrK9rN2qvfCJwrcJvyH8l3C3w7ZXtlt3FT5D+G7h94XHOGK7p906SHgf
4fOEHxL+RHj8MNvz2K3qCh8ofKnw48JfC0961PZCduvGwkcIXyX8nPAPwtMc
s72E3aqV8P+EbxR+Wfh34ZmO217Obt1B+GThocJvCf8t3OOE7VXsVt2FzxS+
V/gD4bFO2u5lt6ohvK/wBcIPC38mPMEp2/ParesJHyx8mfCTwt8IT37a9sJ2
q6bCtfA1ws8L/yQ87RnbS9mtWwsfJ3yT8KvCo4RnOWt7ebtVJ+FTTLcvG//4
TafvMD3mX7eYjybAb5teeeRKuZeT4X9NHxtRZOSHafDs5xz9uOyisKiZ8IBz
NP9ceA+71Wzh+4Q/Eh77vO0+duuawvsLXyg8zHSqGg8v5nT6c9MJPD+8SDkf
nugCjV8Iz8e9GN6Aeyl8iGn8vIhWy03j58Vl8FM8PgQeyePROsVFGr8cXvQi
jV8Bb3aRxqPVKB6/Er6Wx6+CX+TxaP2Zx6+Gpw+n8WvgpcNpPFq1Dafxa+Hj
efw6+BYej9bXePx6+E8evwGe9RKN3wiveInGb4Z3vkTjt8Kn8fht8J08fjv8
Lo/fCf/HvQue8zL1bnggtd4D78W+Dz6HfT/8APtBeAT3IXjcK9SH4bm5j8Br
c4fBg7mPwRdzn4Af5T4Ff8l9Bp74qqv9z8ILUOtz8IbUYefhw6jVRfgKPj4c
foaPvwR/x8dfhqe6RsdfhRe7Ro/HNXiLa/R43ICP5vG34Ot5/G14OI+/C//K
4+/DM1yn9TyAl6VWj+Dt2CPgE9mfwLeyP4XfYH8Oj2Z/AXe7Qf4KXon7Dbwr
dyR8Ovd7+G7uj/B73J/hMW5Sf4Xn4v4GD+L+Du9tGvdzouDzTOP+z0/4QdO4
v/ML/sQ07gf9gce7RfP9g+e5RfOpTcbr3KL5YppWA2/RfLHhS27RfHHhx3m+
+PBX3AnhSW9TJ4YX5E4Kb8ydHD6cOyV8FXdq+FnTeD5JOvgH03j+R0Z46jve
ruejZIGXMI3nj7jDW5rG81lywP8zjeefeMI33KHz5YZfvkPn84N/u0Pnyw/P
dJfOVwjuf5fOVwze4S6dryR80l06Xxl46F06X3n4TepWaPWbOszp7vdc7VYB
XoVao3U36ginz6T2rwjfQx2CVg+oVSV4zPt0frTyog5zenVqt8rwvtQaredT
Rzj9MLV/FfhT6hC0SvCAzl8V7me3qid8kPBlwk8IfyM82UPbC9utmwjXwlcL
Py/8o/C0j2wvabdqLXys8E3CrwiPEp45wvbyduuOwqcI3y78tvA/wrM/tr2q
3aqH8FnC9wl/KDz2E9u97VY1hfcTvlD4EeHPhSd8ans+u3V94UOEhwg/Jfyt
8BTPbC9it2omfKTwtcIvCP8sPN1z20vbrdsIHy98s/Brwn8Iz/rC9gp2q87C
pwrfKfyO8H/Cc7y0PdBu3VP4HOH7hUcIj/PK9tx261rCg4UvEn5U+AvhiV/b
nt9u1VD4UOErhJ8W/k54yje2F7NbNxc+Wvg64eHCvwjP8Nb2MnardsInCN8q
/LrwaOHZIm2vZLfuIny68F2mAxtm2Xs2AH7P9JNSM0atqQZX7xw92CNO9dHV
4blMp4w/KF2rmvBqpte/i3xcqja8t+ly11ptylAXPtf0nb3Xg7/Xgx803Xtp
1XLXGsAfm04w5mCibY3g8d47ennnfDcnN4H7mi5Wc1VI52bwOqYvF0rftXIL
+ADTnTJOLpy9FXzJe7q+NvBj3G3hr7jbwZN8cHWr9vCC1GEd4I2o3TrBh1Pr
zvCV1BFd4Gep/bvB31OHdIen/kjn7wkvTt2qF7wldVhv+Bhqt77wDdS6H/wS
dUR/+Ddq/wHwjJ/o/APh/tRqMLy96dO9M5/uPQQ+yfTUp8WmPh0K32YaP78M
h980ndkcMAL+y/Qzx/BiI+Hun71dP/+Mglc23cccMAbezXRxc4L/4DM+03rG
wfd8pvWMh9//TOuZAI/5hdYzCe75hdYzGV79C61nKrzPF1rPNPj8L7SeGfBD
X2g9M+FPv9B6ZsPjf/V2/bwwB+5nGj9fzIXXNY2fH+bDB5nGzxsL4Eu/0nyL
4Cd4vsXw1zzfEniybzTfMnihbzRfCLzJN5pvBXzEN9qPlfDV3+h6V8HP8fg1
8I88fi08zXcavw5e8juN3wBv9Z3WuxE+9jutdxN843da7xb4le+03q3w7zxf
KDxzFM23HV4uiubbAe8YRfPtgk+Oovl2w7dH0Xx74beo9T74H/YDcI8f5Afh
VanVYXh39iPwWexH4XvZj8Efsp+Ax/pJfhLuTa1Ow2uwn4H3Yz8HX8B+Hn6E
/SL8GXs4PGE0+WV4Xmp9BV6f/Rp8MPt1eAj7TfhJ9lvwt+x34Ml/kd+FF6FW
9+FNTeP9qR/AR5rG+18/hK8xjferjoBfMI33w34M/2Qa71/9BJ7ut7fr/bGf
wUuZxvtZP4e3MY33y34BH2ca72/9Cr7ZNN4/+zX86m9a71v4j9+03kh4lj+0
3nfwCn9ovR/gnf7Qej/Cp/6h9X6C7/hD6/0Cv/OH1vsV/vcPrfcbPMdfWm8U
POAvrfcHvOdfWm80fDb3L/h+7t/wR9x/4HH+Uf+F+/yjz/d/8Fr/6PNdbTbe
n8fHNK0W8fhY8DAeHxv+gsfHhSdSPq6OD8/PnRDegDsxfCh3Uvhy7uTw09wp
4ZHUOhU8ZQzyNPCi1DotvDl7evgo7gzwddwZ4Re5M8O/cGeFp4/p4/r6kw1e
xjS+PrnD25rG1y8P+ATT+PqWA74lJs2XC36d5/OE/+T5vOHZYtF8PvCKsWg+
X3iXWDSfH3wad174Lu588LumcX8mP1zF9nHdvykIz2ka93cKw6uZxv2fIvBe
pnF/qBh8rmncPyoBPxCbzlcK/jg2na80PG4cOl9ZuG8cOl85eO04dL7y8AFx
6HwV4Yvj0Pkqw4/FofNVhb+k1gHwJHHJq8ELUOsgeCP2GvBhdquVws8Ify88
VTzbi9utWwgfI3y98EvCvwrPGN/2snar9sInCt9mGp/fdeE3TDv/fhz8F4+v
B3dLQOPRqnICGu/0rglofH34DB6P1rt5vNPv8/gG8BgJrVaedusg4X2EzxN+
SPgT4fET2Z7HblVX+EDhS4UfF/5aeNLEtheyWzcWPkL4KuHnhH8QniaJ7SXs
Vq2E/yd8o/DLwr8Lz5TU9nJ26w7CJwsPFX5L+G/hHslsr2K36i58pvC9wh8I
j5Xcdi+7VQ3hfYUvEH5Y+DPhCVLYntduXU/4YOHLhJ8U/kZ48pS2F7ZbNRWu
ha8Rfl74J+FpU9leym7dWvg44ZuEXxUeJTxLatvL2606CZ8ifIfw28L/Cs+e
xvYAu3UP4bOF7xP+SHjstLb72K1rCu8vfKHwMOHPhSdKZ3s+u1UD4UOELxd+
Snik8BTpbS9qt24mfJTwtcIvCv8sPH0G20vbrdoKHy98i/Brwn8Kz5rR9op2
686ma6T0TXarIXya6QmtsyQs0RS+0/TJbUnjLGkBv8vHt4H/o/ZvC8+ZydW6
HTyQOqw9vBe16gifQ+3fCX6Aj+8Mj+Dju8DjZqbju8FzU/t3h9em1j3gwdRh
PeGL+fje8KN8fB/4Sz6+LzxxFjq+H7wAtQqGN6T2HwAfRq0Hwlfw8YPgZ/j4
IfB3fPxQeKqsdPwweDHqsOHwFtRKw0dT+4+Er+fjR8HD+fjR8K98/H/wDNno
+LHwstR6HLwdddh4+ERqNRG+lXsS/Ab3ZHg09xS4mxv1VHgl7mnwrtzT4dO5
Z8B3c8+E3zNtvr/zmQWP4e7j+v5vNjyXO13PHHiQuw+9/zK8N42/MQ8+j8ar
BfCDNN5nIfwJz78IHs+D5l8Mz+NB8y+B1/Gg+ZfCB9J4FQJfYho/nyyHHzeN
n0dWwF+Zxs8fq+BJs/u4fr5ZDS9oGj/PrIU3No2fX9bBh2en822Ar8pO59sI
P5udzrcJ/iE7nW8LPHUOOt9WeIkcdL5QeMscdL7t8P9y0Pl2wjeYrmb+7YJf
Nj1vruPfbvg3008eO/7tgWfK6eg85t8+uL/pgebffngH0yeOO/4dgE8yncz8
OwQPNd3E/DsMv2l6zWrHvyPw36Y/fXT8C4O753J0KfPvGLyK6fHjHP+Ow7uZ
vnbV8e8EfKbprObfKfge053Nv9PwB6Z37XT8OwOP6Un7cQ7u5Un7cR5e3ZP2
4wK8ryftx0X4fE/aj0vww560H5fhTz1pP67AE3jRflyD+3nRflyH1/Oi/bgB
H+RF+3ETvsyL9uM2/IQX7ccd+Bsv2o+78GTetB/34YW9aT8ewJt40348hGtv
2o8I+Gpq/8fw89T6CfwjddhTeFofOv45vCS1/wt4a2r9Ej6WOuwVfBMf/wZ+
hY9/C4/i4yPhmXPT8e/g5anVB3hHav+P8CnU+hN8Ox//GX6bj/8K/8PHf4Nn
93V09Ynpzqz6Dq9qOnG7Ogf9f8B7mD5fesq2+z/hs0yb4QN/wfeZDvwUc0Hq
P/CHphOYA/7CY+dxtGP0yCC1xbi36XHDd/R/FcO0qmm6SqP3ncfEgvczHbeA
dwu3OPCFpk8mciwoLvyI6THPl1ZuFB/+3HTFI3dKfE0AT+jn6FgLUuedngie
z/SxPjWz+yaB1zc9MshxBUnhQ0yXy+U4Q3J4iB/tV0r4KdO4n4nWb03jfmgq
eIq8Pq77qanhRUzj/mYaeLO89PGYFj4yL32+pYOvzUufPxngF/LS50NG+Oe8
9PGdCZ4uH33+ZoaXzkefj1ngbUz//nx7Ykg2+HjTuz06FVvvDt9sunedqOeh
2eHXTOceNXbW/pzwH6ZfhKYpd9wTnjW/o5c/XvX+vDe8gummKQotvp4b3tl0
2nLHAx7kgU81fbmX4wR54TtNTwpxTJAffsd0JTOgIPxfftrvIvAcBaxWgXbr
nsLnCN8vPEJ4nIK257Zb1xIeLHyR8KPCXwhPXMj2/HarhsKHCl8h/LTwd8JT
Fra9mN26ufDRwtcJDxf+RXiGIraXsVu1Ez5B+Fbh14VHC89W1PZKdusuwqcL
3yX8nnBVzPZcdutqwnsLnyv8oPDHwuMVt93XblVH+ADhS4QfE/5KeJISthe0
WzcSPlz4SuFnhb8Xnrqk7cXtVi2FjxG+Qfgl4d+EZyxlu7/dur3wScK3Cb8p
/Jdw99K2V7ZbdRM+Q/ge4feFxyxju6fdqrrwPsLnCz8k/Knw+GVt97Nb1xU+
SPhS4SeEvxaezN/2QnarJsJHCF8t/Jzwj8LTlHP049HJyvwoBi9ZjrwUvBV3
afhY7jLwjdxl4Ve4/eHfTQe38Qxug1aZyzva/LmPE04vZ9qwZzl4R9N3Jiy5
PQGtJ5vG3wdx+nbTJx2H1ygPv2W6ZGiqkqFo9ce0yVQV4B4VHG2mD0arqqaX
3nacwOndTac2E1SEzzI90XH6JWi9twJdTyX4wwp0PWgdqyJdj9O9K9L1VIbX
MG1ONwGt+pk2y490+gLT5vAaVeBHTJcyF4DWz0xvN9dTFZ6wkqO9zALQOm8l
uh6n169E1xMAH1yJrgetQirR9QTCT1JrtHrLXg2evDI5WhWhVkHwpqbTO779
O4lWI02bb/cmVYevMW2+P6xdA37BdAvz+/Wa8E+mTT5Aq3RVfFzfL9aClzJt
vp3sVBvexjR+314HPs701Urpmn9Fq82mDe+vC79ahdZfD/6jimu9lerDs1R1
rTdRA3iFqq71XkHrTlVd653XED61qmu9zRvBd1R1rdejMfxOVdd6X6H136qu
9W5pAs8R4Fpvv6bwgADXeks0g/cMoP1tDp8dQPuLVvsDaH9bwB8F0P62hMcJ
pP1tBfcJpP1Fq1qBtL+t4f0DaX/bwBcF0v62hYcF0v6i1YtA2t928ETVaH/b
w/NXo/3tAG9Qjfa3I3xoNdpftF5ejfa3E/x0NdrfzvDIarS/XeApg2h/0bpo
EO1vV3jzINrfbvBRQbS/3eHrgmh/e8AvUuue8C/sveHpq5P3gZehVv3gbdn7
wyewD4BvYR8Iv84+GP6TfQg8Ww3yYfCK1Ho4vAu7hk9jHwnfxT4afpd9DFzV
JB8Lz0mtx8GrsU+A92KfCJ/LPhl+gH0K/DH7NHjcWuTT4b7Uaia8Nvss+AD2
OfDF7HPhx9jnw1+yL4AnqU2+CF6AWi+GN2JfCh/Gvgy+kn05/Az7Cvh79lXw
VHXIV8OLU6u18Bbs6+Bj2DfA17NvhF9i3wz/yr4FnrEu+TZ4WWodCm/PvgM+
kX0nfBv7bvgN9j3wX+z74G71yPfDK1Org/Cu7IfgM9iPwHezh8Hvsx+Dx6hP
fhzuSa1OwoPYT8H7sJ+Bz2M/Cz/Efh7+hP0CPH4D8nB4Hmp9CV6X/Qp8IPtV
+FL26/Dj7Gj1mv0GPGlDcrQqRK1uwhtz34KP4L4NX2W6kHk/zDvwc6bxfKB7
8A+m8X6XD+BpGjnaPH3owkN4iUZ0/gh4q0au+Qo+gf/XyDXfi6fwjY1c8y14
Dr9M8wW9hH+n+dRreKbGtL438HKNaX2R8A6NaX3v4ZMb0/o+wEMb0/o+wW/R
fAW/wH/TfC++wj2a0Pq+w6s0ofX9gHdvQuuLhs+0W+0V/kB4rKa2e9mtagjv
K3yB8MPCnwlP0Mz2vHbresIHC18m/KTwN8KTN6f9jbHVeOHmtJ9o1bQ5jY8J
13arNcLPC/8kPG0L20vZrVsLHyd8k/CrwqOEZ2lpe3m7VSfhU4TvEH5b+F/h
2VvZHmC37iF8tvB9wh8Jj93adh+7dU3h/YUvFB4m/LnwRG1sz2e3aiB8iPDl
wk8JjxSeoq3tRe3WzYSPEr5W+EXhn4Wnb2d7abtVW+HjhW8Rfk34T+FZ29te
0W7dWfg04TuF3xX+T3jODrYH2q16CZ8j/IDwCOFxO9qe225VW3iw8MXCjwp/
KTxxJ9sL2K0bCh8mfIXwM8LfCU/V2fZidqsWwkcLXy88XPhX4Rm62F7Wbt1O
+EThW4XfEB4t3K2ro980bbqsg9MrmY48nCrlw1jwrqbfu18YUz8OfLrpj2PG
RF2IC99t+vPLUl0qxoffM/018Nv9AwngMbo5+vvmzTULJoLnQifvcGxDYniQ
6R99sxb2SArvbTr65s21C5LB55n+XXxaxhQp4AdN/11cZcr4lPAn3eh6UsPj
dadOC8/DnR5eh1pngA9kzwRfwp4Zfpw9K/wVezZ40h7k7vCC1NoD3pg9B3y4
abzeKCd8lWm8PikX/KzpBuYJCp7wD6bPmNc/ecFT93Q0Xs7kDS9h2jy9YYMP
vKVpvP4pN/w/03i9lC98Q09ajx/8ck9aT174t560nnzwTL1oPfnh/r1oPQXg
HXrRegrCJ/Wi9RSCh/ai9RSG3+xF6ykC/92L1lMM7t6buji8CncJeDfukvCZ
3KXge7hLwx9wl4HH7OPj+n6nLNzLNL4/9YdXN43vf8rB+5rG96fl4fP70HwV
4Yd5vkrwpzxfZXiCvjRfFbhfX5qvKrxeX5ovED7INO7XVIMvM437L0HwE6Zx
P6U6/I1p3B+pAU/Wz8d1v6MmvLBp3B+qBW9iGvd7asO1ady/qQNfbRr3Y+rC
z5vG/ZV68I/9aL0N4Gn703obwkv2p/U2grfuT+ttDB/bn9bbBL6pP623KfxK
f1pvM3hUf1pvc3jmYFpvC3j5YFpvS3jHYFpvK/iUYFpvG/h27nbw29wd4H+4
O8GzD6DuAq/K3Q3eg7sHfBZ3L/g+7j7wh9z94LEHUgfDvbkHwGtyD4T3o/Yf
BF9IrQfDj1CHDYE/5+OHwRMOouOHw/NR6xHw+tRhGj6EWo2Ch/Dxo+Gn+Pgx
8Ld8/H/wFIPp+HHwItT+4+HNqPUE+EjqsInwtXz8ZPgFHo9Wn9mnwNMNIUer
0tRqKrwNO1qNZ58G38yOVtfYp8N/sM+EZx1KPgdegVrPg3dmXwifyr4IvpN9
CfwO+1L4P/YQeI5h5MvhgdRqJbwn+yr4HPY18P3ca+ER3OvgcYZTr4fn5t4A
r8W9ER7MvQm+iHsz/Cj3FvgL7q3wxCOot8Hzc4fCG3Jvhw/l3gFfwb0Tfpp7
F/wd9254Sk29B16Mey+8Ofc++Gju/fB13Afg4dwH4V+4D8EzjKQ+DC/DfQTe
jjsMPoH7KHwr9zH4de7j8GjuE/Bso6hPwitxn4J34T4Nn859Br6L+yz8Hvc5
uBpNfR6ei/sCvBr3RXhv7nD4XO5L8IPcl+GP7Vbxxtjua7eqI3yA8CXCjwl/
JTzJf7YXtFs3ova/Ch9Ora/DV1KH3YSf5ePvwN/z8ffgqcfS8Q/gxanDHsFb
Uqsn8DE8/il8A/tz+CX2F/Bv7K/gGcdZrfy5I+Ht7VaThG8TflP4L+Hu422v
bLfqJnyG8D3C7wuPOcF2T7tVdeF9hM8Xfkj4U+HxJ9ruZ7euK3yQ8KXCTwh/
LTzZJNsL2a2aCB8hfLXwc8I/Ck8z2faSdutWwscK3yj8ivDvwjNPsb2c3aqj
8MnCtwu/JfyPcI+ptle1W3cXPkv4XuEPhceaZru33bqG8H7CFwg/IvyZ8ITT
bc9rt6ovfLDwEOEnhb8VnnyG7UXs1k2FjxS+RvgF4Z+Ep5tpeym7VRvh44Rv
Fn5V+A/hWWbZXsFu3Un4VOE7hN8R/ld4jtm2B9itegqfLXy/8EfC48yx3cdu
VUt4f9PTi7i36fsOvsh04kthc6Pew8NMj+3Y6vyQj/AXfPxneKK51F/g+bm/
whvYrYYKXy78tPBI4Snn2V7U9N1yi+pFO705+3f4KGodBV/H/hN+kT0a/oX9
Nzz9fPr/M1qVodZ/4G2p/f/CJ1Crf/AtfDxaXefxapvxn9QhaJVtAR0fA16R
uhVadaEOc/o0areY8F3UGq3vUkc4XS2k88eC56QOQatq1Co2vBePR6u51Nrp
B6jDnP6Yj48Dj7uIxqOVL7WKC6/NjlYD2OPBF7Oj1TH2+PCXpvF6ILRKstjH
9fofpxdYTOMTwBstpvFoPYzHO30lj08IP8Pj0eo9j3d6qiU0PhG8+BIaj9Yt
ltB4p4/h8Ynh63k8Wl3i8U7/yuOTwDMupfFoXXYpjXd6+6U0Pil8Io9Hq208
3uk3eHwy+C8ej9Zuy2i80ysvo/HJ4V2X0Xi0msHjnb6bx6eA3+fxaB0jhMY7
3TOExqeEB4XQeLTqw+OdPo/Hp4If4vFo/YTHOz3+chqfGp6HWqNVXfY08IGm
zf3LlWi11LS5v1klLfz4ctf8b9DqtWn8Pal08KQrfJx/zyp/enihFa713UDr
xqbN/deBGeAjTOP+bEb4qhX0+YVW51a41tM2E/zDCtd64mWGp1lJ14vWJVa6
1lMjC7zVStd6PqH1fytd65mTFb5xpWs9xbLBL690rec+Wn1fSfvlBs+0yrWe
7O7wcqtc6zmN1h1WudbTxQM+eZVrPUmzw0NXudYTila3VtHjlwP+e5VrPT/Q
ymO1az2Lc8KrrKavT7ng3Ve71vMUrWeudq1nnCd872rXeny84A9Wu9YTjlax
1rjW09sb7rXGtZ40PvAaa1zr2YvWfde41tMsN3zBGvr48YUfpg5Dq2fUOg88
wVpavx88L7XKC69HrdFqMHs++DJ2tDrJnh/+hh2tkq8jLwAvTK3Rqil7Qbjm
LgRfw10Yfp67CPwTd1F42vV0/WhViloXg7em9i8OH0etSsA38fFodZWPLwmP
4uNLwbNsoONLw8tTh6FVJ2pdBj6F2r8sfAcf7w+/vYE+P9Dq7wb6+CkHz76R
5kergI308Vse3mMjfX1Aq9k0XleA76PxaSrCH9H4DWgdexOtrxLcZxN9/UDr
mpvo86syvD+NV1XgC7mrwsO4A+DPeT60SrSZzh8Iz7eZ1lsN3mAzXV8QfAiN
96kOX07jVQ34KbtVpPAUW2wvarduJnyU8LXCLwr/LDz9VttL263aCh8vfIvw
a8J/Cs+6zfaKduvOwqcJ3yn8rvB/wnOG2h5ot+plGq9/bQ6fYxqvv0OrA6bx
+tYW8AjTeD1eS3jc7T6u16+idW7TeH1eK3ht03h9KloHm8br9VrDF2+n9bSB
H7VbvRSeeIftBezWDYUPE75C+Bnh74Sn2ml7MbtVC+Gjha8XHi78q/AMu2wv
a7duJ3yi8K3CbwiPFu622/ZKdquuwqcL3y38nvAYe2zPZbcKEt5b+DzhB4U/
ER5vr+157NZ1hA8UvkT4ceGvhCfdZ3tBu1Vj4cOFrxJ+VvgH4an3217Cbt1S
+H/CNwi/LPyb8EwHbPe3W3UQPkl4qPCbwn8Ldz9oexW7dTfhM4XvEf5AeMxD
tnvZrasL7yt8vvDDwp8KT3DYdj+7VT3hg4QvE35C+BvhyY7YXthu3US4Fr5a
+HnhH4WnDbO9pN2qtfCxwjcJv2Ia3z+0hUeZxvcX7eCZj7rG6/bw8kdd4zd0
gHc86hp/oyN8Co1XneHbubvAb3N3hf/h7gbPfoy6O7zqMVoPWvU4Rud3+iwe
3wO+j8ej9UMe7/TYx2l8T7i3afNyridoVdM0Xk/WC97PtHk92dre8IWm8fq4
PvAjps3r47r1hT83jdfH9YMnPOHjfH1c/v7wfKbx+rhgeH3T5uVq39FqiGm8
nmwAPMS0eT3ZgYHwU6bxerJB8Lcn6PEZDE9x0nU9bYbAi5x0XU/FofBmJ13X
4zkMPvKk63oSDIevPem6nki0vnDSdT3hI+CfT7quJ1TD051yXc+skfDSp1zX
EzwK3uaU63oajYaPP+W6npJj4JtPua4ny3/wa6fo8RkL/8E9Dp71NPV4eAXu
CfDO3BPhU7knwXdyT4bf4Z4C/8c9FZ7jjI/r9VtoFWgaf19hGrynafN0m3nT
4XNM4+/VzoDvN43Xh82ER5jG83VmweOc9XH+vdpEs+G5TePvO6B1LdPm6TYn
58CDTeP5OXPhi87S4z8PfvSsa73N58NfnHWtt8QCeOJzrvWmWwjPf8613q9o
1fCca71XFsGHnnOtd8ti+IpzrvVOWgI/fc613k5L4e/OudZbaRk85XnXej1C
4MXO0/4uhzen1ivgo9lXwdexr4aHs6+FfzlPn99oleECff6vg5e5QOPXw9td
oPFoPYHHb4Bv5fEb4ddN434NWkWbxv2NTfBsF+nr32Z4JdO4/7IF3sU07lds
hU+/SOffBt9lGvdTQuH3TOP+1Xa4Cqfr3wHPFe5aT++d8GrhrvW03QXvHU7X
sxs+N9y1nip74AfDXespthf+OJy+/u+Dx7vkWk/m/XDfS671JD0Ar3OJ9ucg
fIBpvD4ErZaYxt/PPQQ/Zto8XW/HYfgr03h+3hF4kst0fWHwgpdd83U4Cm90
2TVf0DH48Muu+Qoeh6+87Jovwwn4WZpPnYS/5z4FT32F+jS8OPcZeEvus/Ax
3OfgG7jPwy9xX4B/474Iz3iVOhzuz30J3p77MnwS9xX4Nu6r8Jvc1+C/qEPQ
yv2aq/2vwytTR6BVN2p9Az6D2u0mfA91GFrfp251Cx7zOp3/NtyTOgStqlP7
34H3oY5Aq/nU+i78ELXbPfhT6jC0jn+Dzn8f7ketHsDrUoeh1SBq/RC+lNr/
EfwEHx8Bf83Ho1Wym3T8Y3ghav8n8CbU6il8BHUYWq3m45/Bz/Hxz+Ef+fgX
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
h3vnJXkIHzJcvr6j9fLh3nnbHD8t89Qj+Du7VYIRtheyWwWQjyRfRx5C/pU8
2UjbS9itW5NPIN9Cfp38N3maUbaXs1t1Ip9Gvpv8Lnm40bZnsltVJe9BPpf8
IPlj8ihjbM9ht65N3p98Mfkx8pfkscfans9u1ZBck68kP0P+gTzhONuL2K2b
kY8mX09+ifwbeYrxtpe0W7Uln0i+jfwG+V/ytBNsr2C37kw+g3wP+X3y8BNt
z2K3rkbei3weeRD5E/Jok2zPabeqQz6AfAn5cfLX5HEm2/6f3boR+TDyVeTn
yD+SJ55ie1G7VQvyMeQbyS+T/yBPOdX20nbrduSTybeT3yL/R55+mu0V7VZd
yWeS7yMPJY843fasdqsa5L3JF5AfJn9GHn2G7bnt1nVN4/kfxweZxvM/j+FL
TeP5nyfwk+7jn8LfSAehVbyZ8v36GbyAtN9zeBNp9QI+XDoArdZIBzl+Xtrn
JfyzOx+tk8zydqjjxaX9XsFbSgei1Thp9Rq+ye038Ktuv4X/lNZo5TNb/B28
jLQfWnWQ1o5PkQ5yfKf7+Pfw26bx8yBahZmT1fvz4wd4hjmy/iO88hxZj9bd
3PWf4LPd9Z/h+6WD0OqhtP4CjzRX9v8Vnk1afYPXlA5Cq77S+jt8ofv4H/Cj
7uN/wp+769Eq5jzxX/A80hqt6rv+Gz7YdbRa7vof+CnX0eqd63/h8eeLo1Uh
afUP3tR1tBrputpmfK3raBXiehj4F9fRKtkC8bBwP2mNVq1dDwcf7zpabXE9
PPyatB9a/XbXO556oXx+HC8nrSLAO7qOVtOkdUT4Lmm/SPC77uMjw8Muksej
VSZpHQVeRdovKryHtIoGn+OuR6uDrkeHPzJ9LfrDMlvRKspiT69PEjy+ZQx4
dtPDMqy8mDAmvLbpennGJDqF1v1MZ/dr33hALPhi0+GrVF6WLTY82PTN+tlf
3Eerl6Y3tY6dY1oceKxAT4/s8bFn6bjwfKYb6it7v6J1A9O5Ju5Ua+LBtelI
8+aUbRgfvsL03ZX9J8RIAD9jetu2RpcOofV702ODiiXunhCecImnm57zaZIu
Ebyw6Xy3wi6/hlbNTEd79vjFmMTwUaYffDqeo3AS+HrTu9SaXm/Q+qLpCTHG
71ucFP7NdPOkncLUTAZPvtTTBTJWKxc+Obyk6Zh5PWeE1m1MP/aLd7ltCvhE
03urfEmcLCV8q+kpDa43OYdWN0y3brNn+ZBU8D+mi/Sc/zKXDzztMk/HHToo
52O0Lm/6+cSmvWelhnc2fXBeif3l08Cnm56xKm3YX2i1x3T77RHKb0gLv2e6
+OFnE5umg4df7ukE509djpMentn0q1vrkgSjVTXTZnnvDPCepmd/7rIiU0b4
PNOeq/PqFlofMl3KXJBM8CemkyRL2Kd4ZnjUFZ5+l/H7/g9oldP0sbyeT1gW
uL/p+Z7TqZMVPsB0t6qLJkX2hQeaLmduKLQ6bjpFW89nKBv8lWnP3ReQKjs8
zkpPnxzqueHROr9pz7TXw3PAG5k2lzt/TvhQ0xVXn+3zHK1WmfbZsfHAvFzw
s6a/Hp4Srkpu+EfTZ893r/APrROt8vTS27Unb8kDL2q67/P8V1vkhTc3XdVz
OyTMBx9jOl3YXwEn0XqD6Z8xPX8C8sMvmw5Jdui173/w76ZXZFqS+z5apVzt
6QH5hvedWgBeynSNkq0OlioIb2fa3K5f0XqS6T8NM1dcXQi+3fTlttGmNCgM
v2na86fhavQi8H+mhwy7kOwQWqdbY74/Tt7SrFtReMU18vWnGLyL3Wom+V7y
UPIIa23PareuTt6bfD75YfKn5NHX2Z7LblWXfCD5UvIT5G/I4663vYDdujH5
cPLV5OfJP5En2WB7MbtVS/Kx5JvIr5D/JE+10fYyduv25FPId5DfJlebbM9g
t65E3o18Fvl+8gfkkTbb7mu3qkneh3wh+RHy5+Qxttiex25dj3ww+TLyU+Rv
yeNvtb2g3aop+QjyteQXyL+QJ91mu5/duhX5ePLN5NfIf5Gn3m57WbtVR/Kp
5LvI75CH3WF7RrtVFfLu5HPID5A/Io+80/bsduta5P3IF5EHk78gj7XL9rx2
qwbkQ8hXkJ8mf0+eYLfthe3WAeSjyNeRXyT/Sp58j+0l7FZtyCeQbyW/Tv6H
PM1e28vbrTuRTyffTX6PPNw+2zPbrauS9ySfS36I/DF51P2257Bb+ZP3Jw8k
P0b+ijz2Advz260bkg8lX0l+lvwDeaKDthexWzUnH206XwFdeqDjG1wvDr9k
+nm/Rc/6odV30xc+FbnwyfEUh7J6X+/rBy9l2rN60TO0bmt6VLPEo5qVgE8y
jdf3ovU2087rw+E3TRc1B0Drv6bxet5S8HRBno5+NGf0o2hdwfRnz3aKlIZ3
MY3XJ6P1DNNmec4y8L2m8fwJWt83jdcjl4VHOOzp/uYE0DqL6eae7ScuB69u
Gq8/RutepnOZDZWHzzdtlo9C66DDcj0rwJ8eluuJ1tGOyPV0PNcRuZ4V4XWO
yPVEq4FH5HpWgi85ItcTrU4cketZGf76iFxPtIp7VK5nFfh/R+V6olXjo3I9
q8KHHZXriVarj8r1rAY/d1SuJ1p9OirXszo8cbBcT7QqFizXswa8RbBcT7Qa
GyzXsyZ8Y7BcT7S6EizXsxb8h7RGq1THxGvDS0trtGrvuj98sutotcP1OvBb
rqM9v8CJ14Wnl9ZoVcn1evCudqtZ5PvIH5BHPGG7r926Bnkf8gXkR8ifkcc4
aXtuu1U98kGm8X7Bji9zvQH8pOto9dY03r+3ITzeqaze9yNGq4Km8f6/jeBN
TOP9jBvDR5jG+wej9RrTeD/kJvALpvH+w03hn03j/ZTRKunprN73Lw6AFz8t
+20Gb3Va9ovW407LfpvDN5+W/aL11dOy3xbwX6dlvy3hPmdkv2hV9ozstxW8
wxnZb2v41DOyX7TeeUb22wZ+54zsty08zFnZL1plPCv7bQevfFb2i1bdz8p+
28Nnn5X9doAfOCv7ReuHZ2W/HeGRz8l+O8GznZP9olWtc7LfzvC+52S/XeCL
zsl+0froOdlvV/iLc7JftI55XvbbDZ73vOy3O7z+edkvWg05L/vtAV9+Xvbb
E376vOwXrd+dl/32gie4IPvtDS90Qb6+oVXABfn62gc+0l3fF77OXY/WIe76
fvCv7vr+8GQh8vUDrUpIqwHw1q6j1QTXB8K32K2uk/8mT3PR9nJ2q07k08h3
k98lD3fJ9kx2q6rkPcjnkh8kf0we5bLtOezWtcn7ky8mP0b+kjz2Fdvz2a0a
kmvyleRnyD+QJ7xqexG7dTPy0eTryS+RfyNPcc32knartuQTybeR3yD/S572
uu0V7NadyWeQ7yG/Tx7+hu1Z7NbVyHuRzyMPIn9CHu2m7TntVnXIB5AvIT9O
/po8zi3b/7NbNyIfRr6K/Bz5R/LEt20vardqQT6GfCP5ZfIf5Cnv2F7abt2O
fDL5dvJb5P/I09+1vaLdqiv5TPJ95KHkEe/ZntVuVYO8N/kC8sPkz8ij37c9
t926Lvkg8qXkJ8nfkMcLtb2A3aoJ+XDyNeTnyT+TJ3lge3G7dUvyceSbyK+S
/yT3eWh7GbtVB/Ip5DvJb5OHeWR7BrtVZfJu5LPJ95M/JI/02PZsduua5H3J
F5IfJX9OHvOJ7XnsVvXJB5MvJz9F/o48/lPbC9mtm5KPJF9LHkL+hTzZM9v9
7FatyceTbyG/Rv6bPPVz28vZrTuSTyPfRX6XPOwL2zPZrauQ9yCfQ36Q/BF5
lJe2Z7db1SbvR76YPJj8JXmsV7bns1s3INfkK8jPkL8nT/ja9sJ2q2bko8jX
k18k/0ae/I3tJe3Wbcgnkm8lv0H+hzztW9vL2606k08n30N+jzz8O9sz262q
kfckn0d+iPwJedT3tue0W/uTDyAPJD9O/oo8zgfb89utGpEPNV2z96EavQfB
V5me8OPK+B+D4WdNHx/48thADf/oPn4YPNFHb+vh8KLSaiS8uduj4GPcHg3f
4PYY+GW3x8K/m8br+9Eq5aes3tfvj4OXMo3X54+HtzONvx8wAT7pk+xvInz7
J++81pPgN2Ve5cnwfzIvzxR4us/eeUmmwit+lv1Ng3dxezp8ptsz4HvdngkP
dXsWPMIX6dnwrG7PgVd3ey68t9vz4POlNVoddn0+/Klp/P0QtIr+Nav3+YUF
8Fxf5fEL4XW/etf7L4IPlPVZFsOXynoVCD/hPn4J/I3ry+Bxv8nx0arANzn+
cnjjb/L4FfDhst5/JXy1rM+yCn5e1qvV8E+m8fwyWiX5ntX7/PcaeDHTeD55
LbylaTzfjdZjTeP543XwTabx/PZ6+JXvcrwN8J/f5XhoneqHHG8jvMwPOd4m
ePsfcjy0mvJDjrcZvuOHHG8L/PYPOd5WuPop12cbPIO02gGv9FPuZ7Tq9lP+
fDg+66fczzvh+3/Knw+0fuDO2wWP9EvmobXvL5nneM1fMm83vM8vmYdWC3/J
vD3wI7/k849Wz3/J538vPMZvOb998Dy/5fO/H17vt3z+D8AHy3p1EL5Mujpa
nZIOdPyt9HvH4//xtt8heEHpKWjVVDrU8RHSOYPga6U1Wl+QDnH8i7TPYXjS
v97uilZ+0kGOt5KOfQQ+XjoArTdLb3b8mrQ6Cv9lt0r9z/aydquO5FPJd5Hf
IQ+rfC3PaLeqQt6dfA75AfJH5JHD2J7dbl2LvB/5IvJg8hfkscLantdu1YB8
CPkK8tPk78kThLO9sOk+GeOumut4gOlHPpMDrgbDR5muljR60jjH4etM7483
9nLlE/CLpjPFiDhxzEn4V9MzIg4vG3wKnjy8HO8MvITbZ+Ft3D4Hn+D2efhW
ty/Ar0trtPrjegg8TQSrVXm7dSfy6eS7ye+Rh4toe2a7dVXynuRzyQ+RPyaP
Gsn2HHYrf/L+5IHkx8hfkceObHt+u3VD8qHkK8nPkn8gTxTF9iJ2q+bko8k3
kF8i/06eIqrtpezWbcknkW8jv0n+lzxdNNsr2K26kM8g30t+nzxCdNuz2K2q
k/cin08eRP6UPFoM23PZreuQDyRfQn6C/DV53Ji2/2e3akw+jHw1+TnyT+SJ
Y9lezG7dgnws+UbyK+Q/yFPFtr203ao9+WTyHeS3yFUc29PbrSqRdyWfRb6P
/AF5xLi2+9qta5D3IV9AfoT8GXmMeLbntlvVIx9Evoz8JPlb8njxbS9ot25C
PoJ8DfkF8s/kSRPYXtxu1Yp8HPlm8qvkv8h9Etpe1m7dgXwq+U7yO+RhEtme
0W5dmbw7+WzyA+QPySMntj2b3aoWeV/yReRHyV+Qx0xie167dX3yIeTLyU+T
vzP9qFWywGoX4QmSenrniE1JVl6CFzI9Zlmp6b8vwwNMNzxyPXqtq/CRprM9
6DBqzTX4uqQy/wY8RNoPrb5Ka8eTJfN2kOMlpNVNeGu71QTyLaar/HwUcMfx
66ZnvMrZMOgW/LfpW3cG+S+/DU+T3NOpz5+uNuYOvJzptocSVex4F97J9KbN
LUtXvwefZvrrki3F8t6H7zZdZPrfAolD4XdNDx9RKc9vtAqXwtOne83JFvoA
nsl0nDZPMgY/hFc1Xbde7jSrH8F7mF5UYUjyCY/hc00/KXQ2Ydcn8IOmfX2T
xKn9FP7YdPcUraMVeAaPktLTe2Jui5D8OTxHSrk+L+C1TeP325fw/qbx++9r
+GLT+P34DfyYafz+/A7+0p33AR47lcz7CM+XSuZ9hjdMJfO+wHUqmfcNvjKV
zPsBP2O3+kCe0Mf2InbrZuSjydeTXyL/Rp4ite0l7VZtySeSbyO/Qf6XPG0a
2yvYrTuTzyDfQ36fPHxa27PYrauR9yKfRx5E/oQ8Wjrbc9qt6pAPIF9Cfpz8
NXmc9Lb/Z7duRD6MfBX5OfKP5Ikz2F7UbtWCfAz5RvLL5D/IU2a0vbTduh35
ZPLt5LfI/5Gnz+TpAL+3fZM6XtF07PNh7q11vKvpoIYJShX+CZ9puuuLTKvP
oNU+0z59isRo9AseajokfPXur9EqYmZP62ktrg/8Dc9qOqd5wB94DdOhG8Yt
WYjWvU1PKbwoYva/8AWm/U5t6XAQrQ+bfl/nWEjVf/BnpgMf38h3H62jZ/G0
5+jzuqjtxnNnkfMNY1rXNW3+vbcWaDXINP59OMeXmsbzd2HhJ03j359D6zem
zfIPjsfL6ut9/i8cvIBp8+/P7UarJqbx79WFhw/PKt8P0WpNVu9+Hjl+Pqt3
P+UiwD9n9e5nLVon8fXuJ2ZEeHFf7366oXVLX+9+rjo+zte7nwKR4Jt8vftZ
gFZXfeX6RIb/tFv5ZLO9jN2qA/kU8p3kt8nDZLc9g92qMnk38tnk+8kfkkfK
YXs2u3VN8r7kC8mPkj8nj5nT9jx2q/rkg8mXk58if0ceP5fthezWTclHkq8l
DyH/Qp4st+1+dqvW5OPJt5BfI/9NnjqP7eXs1h3Jp5HvIr9LHjav7Zns1lXI
e5DPIT9I/og8Sj7bs9utapP3I19MHkz+kjxWftvz2a0bkGvyFeRnyN+TJ/zP
9sJ2q2bko8jXk18k/0aevIDtJe3Wbcgnkm8lv0H+hzxtQdvL2606k08n30N+
jzx8Idsz262qkfckn0d+iPwJedTCtue0W/uTDyAPJD9O/oo8ThHb89utGpEP
JV9Ffpb8I3miop6eVeVD7+2OFzV9oNb17l2jwJubflz/QGffqPAxpqMFLGv/
HK03mM7demzr5dHgl03X79ileUB0+HfTurt/k+Qx4CmLeXpV38INbqB1KdPn
B6euMyMmvJ3pLyMi1aweCz7JdPLxb6pEjw3fbrrU1MsVTqL1TdPtZ+8pMyIO
/J/pqQsXl/CLC09X3NO7l40s+hutKpq+v6ZDwd3x4F1MR9hcI1/P+PCZpn13
/pcrZwL4XtO19qfI9hqtQk33PxIu8+qE8Ah+nl5y8kW6longWU2fPH/Bxycx
vLrpd1d2JL+DVr1NJ7w9P/GcJPD5pos+GBq/dlL4YdMtn7WJHTsZ/Klpc/pn
0Sp6CU9v/ZQn8pjk8Fymb/5IEr50CnjdEvL5TQkfKK3RaqnrqeAnXEerN677
wOOWFEerAtIqNbyx62g13PU08NXSfmh13l3v+CfpIMeTlJLHp4UXczsdvKXb
6eFjpQPRapO0Xwb4FelQtPoprTPCU5X2tk8meBnpILRuLx2QGT5FWmWB75DW
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
PL3l6u6zGVbD/UzPbzmwZKU18NamR30qvrvLWvh4012Hhcs+Yx18i+kGcU4s
270efs10mcBxSe5ugP82nSNH1clhNsFTD/Z0koNxImTYDC9nOnyVq/0rboF3
NP329pz3nbfCp5m+0b5R6+nb4LtMH/2R6s6u7fC7pjeMeVTjzg542CGenpNo
1Qm1C57J9LCV7Yum3w2vYrpjvuzbKuyB9zBdN/hDps574XNMl6i1Y9G0ffCD
prM+7Bt/1374I9MJuxUZd/sAPIqW63sInt1uVZu8H/li8mDyl+Sxhtqez27d
gFyTryA/Q/6ePOEw2wvbrZqRjyJfT36R/Bt58uG2l7RbtyGfSL6V/Ab5H/K0
I2wvb7fqTD6dfA/5PfLwI23PbLeqRt6TfB75IfIn5FFH2Z7Tbu1PPoA8kPw4
+SvyOKNtz2+3akQ+lHwV+Vnyj+SJxthe1G7dnHwM+Qbyy+TfyVOOtb2U3aod
+STy7eQ3yf+Rpxtne0W7dRfymeR7yUPJI4y3Pavdujp5b/L55IfJn5JHn2B7
LrtVXfKB5EvJT5C/IY870fYCduvG5MPJV5OfJ/9EnmSS7cXsVi3Jx5JvIr9C
/pM81WTby9it25NPId9hOkWPse+XO37b9JYvnYKqB8HVFPP9u2/NKb/RKoPp
Gz/zB6w+DK9kuuOgZDlrH4F3myLzj8JnSWu02u96MPyB62gVaar4MbivtEar
mq4fh/dxHa0Wun4CfsR1tHru+kl4jGniaJVHWp2C13MdrQa7fhq+zHW0OuX6
Gfhb6a5oFX+6t0MdLyhd/Sy8qXQQWo+QznkOvlY6EK0vSMc+D/8irdE66Qxv
v3fcTzrgAryVdAhajZf2C4Fvlt6MVtekfS7Cf0lPQavUM+X8L8HLmg5J9DnC
ILTqaHpJjufRfjo+1XS3cnfi9LkM32W6RFPPI9D6jum4fYJTdLsCDzvL0w8n
7U77Fq0zmt62cn3mDlfhVUwPPxiY4zladzdd69qMfK2uweeYTvd2TOGHaH3A
tGd3JZpehz8y7TlauTtoHXm2p2fma1Wl/g14dtOeqnUNrWuZzm/+w014P9MR
PeNC0HqRaXP4KrfgwaZXebZ7Gq1fmDanV+42PNYcT5vLEYzWeU0nNhu8A29g
2nP1hh1E6yGm96T1nNBd+ArTYwt7rhBanzZd31yAe/D3prN0OD1vK1onmOtp
z7TAHPfhhU17dOV6tA4wPd+TmUPho0ybh69E63Wmi5hPyAP4RdPRzUC0/mra
nE6Kh/Dk8zy9wXP689C6hGlzuRI9grcxbS7vDLSeYDqluUEew7eaNp++SWh9
3fQhz6c72hP4H9OTPbfHGLROM9/T5naK8BRe3nROcwHRutN8uV+fwafPl/sV
rXfPl/vV8Xvz5X59Dg+3QO5XtMq8QO7XF/CqC+R+RaueC+R+fQmfu0DuV7Q6
tEDu11fwxwvkfkWrqAvlfn0Nz7FQ7le08l8o9+sbeP+Fcr+iVeBCuV/fwo8t
lPsVrV4tlPv1HTz2Irlf0Sr/Irlf38MbLpL7Fa2GLpL79QN85SK5X9Hq7CK5
Xz/CPyyS+xWtEi2W+/UTvMhiuV/RqvliuV8/w0cvlvsVrTYslvv1C/zSYrlf
0er7Yrlfv8JTBMr9ilalAuV+/QZvGyj3K1pNCpT79Tt8W6Dcr2h1M1Du1x/w
v4Fyv6JVuiVyv/6EV1gi9ytadVki9+sv+Iwlcr+i1d4lcr/+ht+XDkKrCEvl
6/8feBZpv7/w6tLqH7yXdBBazXcfr3YYD3IfH8a0euo+Piw82jJ5PFrlktbh
4HWk/cLDB0qrCPAl7uPR6oT7+Ijw1+7jI8HjLpfHR4b/J63RqrHrUeDDXEer
1a5HhZ9zHa0+uR4NnniFOFoVk1bR4S1cR6uxrseAb3Qdra64HhP+w7R5fm0m
WqVa6et9vi4WvPRKuT5o1X6ld71/bPhkWf8SrXbIeh0HfkvWJ4gLV6u869ei
dfpVcn3jwSut8q6/itZdZX37+PBZsl4lgO+T1mj1wPWE8IirZb9o5btaju94
jdWyPhG8j7serRe46x0/4q5PDH8mHYRWMdbIfpLAc0v7JYXXk1bJ4IOkg9Bq
mfv45PCT7uNTwN+6j08Jj7fWalXQbt2EfAT5GvIL5J/Jk66zvbjdqhX5OPLN
5FfJf5H7rLe9rN26A/lU8p3kd8jDbLA9o926Mnl38tnkB8gfkkfeaHs2u1Ut
8r7ki8iPkr8gj7nJ9rx26/rkQ8iXk58mf0eeYLPthexWAeQjydeRh5B/JU+2
xfYSduvW5BPIt5BfJ/9Nnmar7eXsVp3Ip5HvJr9LHm6b7ZnsVlXJe5DPJT9I
/pg8ynbbc9ita5P3J19Mfoz8JXnsHbbns1s1JNfkK8nPkH8gT7jT9iJ262bk
o8nXk18i/0aeYpftJe1Wbcknkm8jv0H+lzztbtsr2K07k88g30N+nzz8Htuz
2K2rkfcin0ceRP6EPNpe23PareqQDyBfQn6c/DV5nH22/2e3bkQ+jHyV6c41
h9Tb7fg50+8rLo3aLxX8o+nupY7tL+gDT7zf058KP+/8E62Lmu6VN1rqfanh
LUx/9c1+eUAa+BjTfdPXGFkkLXyj6Z8pev73B60vmx6QcPaLA+ngP0z/ibl3
/uD08JQHPD040t0qxTPASx+Q/WeEt5PWaDXZ9Uzw7a6j1S3XM8P/SXdFq/QH
vR3qeEXp6lngXaWD0HqmdM6s8H3SgWgdKh3bFx7xkOwHrbNKv3e8hnRANnhv
6RC0WiDtlx1+WHozWj2T9skBjx7k7SlolVta5YTXNY3//45Wg0zj/6/ngi81
jf9/nht+0jT+/30e+BuZp/PC4x32zmudD17gsHde5fzwJoe98/L8Bx9+2Dsv
SQH4msOyv4Lw86aPVX0dXBWtPpset/DG2IWOJzni6Woefu14cdPxC2+JV7gQ
vKXpm2M9D0CrcaYXeR5+w/FNpptn7N08Y2H4VdMme6P1T9NmfLDjPkc97Zm+
JV4ReBnTZnlztOpg2hx+i+NTjsr5FIXvPCrng9a3j8r5OB4mWM7H8QzBcj7F
4JWD5XzQuluwnI/js4PlfIrD9wfL+aDVw2A5H8cjHZPz8YNnOybng9Y1j8n5
ON73mJxPCfhCt0vCj7pdCv7c7dLwmMely8DzSAeiVX1pv7LwwdKhaLVcWpeD
n5L2KQ9/Jx2E1vFPyJ+nCvBC0qoivKnbleAj3a4MXyut0SrE9SrwL6bx+xVa
JTvp6/39qyrc76SsrwZvfVLWo/V4d311+BZ3fQ34NXc9Wv1219eEpz4l62vB
y52S9Wjd8ZSsrw2f5q73h+9y16PVXXd9HXjY07K+LjzTaVmP1lVOy/p68B7u
+vrwOdIarQ663gD+yHW0inJGvCE8u7RGq9quN4L3cx2tFrveGB7sOlq9dL0J
PNZZcbTKJ62awhtIh6KVlg4KgK+QDmwGP+POaw5/Lx3QAp7wnNzfLeGFpX1a
wZtJq9bwUefk6ylarT8nX58dv3hOvp62gX87J1+f0Tr5eZnXFl7yvMxD6zbn
ZZ7jE8/LvHbwredlHlrdcOe1h/8xjdc3olXaC77e10d2gJc3jddXdoR3No3X
Z3aCTzeN1z92hu8xjddPdoHfuyDXsys8fIj3eJ26wTOHeI/XsDu8Woj3eBV6
wHuGeI+Xvyd8Xoj3eOl6wQ+FeI8Xtzf8SYicXx941ItyfLTKKa36wv1dR6sB
rveDB7qOVsdd7w9/5TpaxbkkPgCe327ViHwo+Srys+QfyRNdtr2o3bo5+Rjy
DeSXyb+Tp7xieym7VTvySeTbyW+S/yNPd9X2inbrLuQzyfeSh5JHuGZ7Vrt1
dfLe5PPJD5M/JY9+3fZcdqu65APJl5KfIH9DHveG7QXs1o3Jh5OvJj9P/ok8
yU3bi9mtWpKPJd9EfoX8J3mqW7aXsVu3J59CvoP8Nrm6bXsGu3Ul8m7ks8j3
kz8gj3THdl+7VU3yPuQLyY+QPyePcdf2PHbreuSDyZeRnyJ/Sx7/nu0F7VZN
yUeQryW/QP6FPOl92/3s1q3Ix5NvJr9G/os8dajtZe1WHcmnku8iv0Me9oHt
Ge1WVci7k88hP0D+iDzyQ9uz261rkfcjX0QeTP6CPNYj2/ParRqQDyFfQX6a
/D15gse2F7ZbB5CPIl9HfpH8K3nyJ7aXsFu1IZ9AvpX8uunk7Qreuuv4H9O1
Vvl8PDAQnuapp8c+iRR10SB4edNBad+lHjwY3sn012bXCjYZAp9u2jfwQI1i
Gr7bdIt7y9ulHAq/Z3pu8glD/6J1uGeeDmnQY+69YfDMpiPObbDl4HB4VdNF
r5c4tWgEvKfpHgkyPxg8Ej7X9JpasX80GQU/ZDp06rfYxUfDH5tOGHIvU6ox
8KjPPV0l5nG/f2idw/Twyhvq3R8L9ze9Z9yMrofGwfubfn9ywJjF4+GBpjNE
ahE4ZAL8mOnGZSrubjoR/sr09OG5QopPgsd+4enThxM/TzUZnv+FXP8p8Iam
8f8L0Wqoafx+NRW+UtbrafCzst5/OvyDrM8yA57opcyfCS/yUuajVfOXMn8W
fLSs17PhG2S9/xz4JVmfZS78uzt/HjzFK5mPVqVeyfz58LavZP4C+CRZ778Q
vk3WZ1kEvynr1WL4X3c+WqV7LfMD4RVey/wl8C6vZf5S+AxZn2UZfK+sV8vh
903j9yG0ivDG1/v7kONZTOP3oRXw6qbx+xBa93oj81bC57+ReWgd5M5z/Kk7
bxU82luZh1a53sq81fA60hqtBrq+Br7EdbQ64fpa+GvX0SruO/F18P/eefez
Da0av5P9r4cPe+fdX5IN8NXv5HzQ+pzM0xvhn2Renk3wxO+9856iVbH3cr6b
4S3ee+dV3gIf+172txW+8b338zkTra68l8/nNvgPWR+EVqk+yOd/O7z0B+/6
l2jV/oPsdwd8sqxPsBO+Q9avRetbst5vF1x9lPsRrdN/9K5vvxte6aPsfw+8
60c5X7Sa9VGuz174vo9yPdHqwUe5/vvgET/JvP1w308yD61rfJJ5B+B9Psk8
tF7wSeYdhB9x5x2CP3PnoVWMzzIvCJ77s8xDq3qfZd5h+KDPMu8IfNlnmYfW
J915R+Fv3XloHe+LzAuGF/wi847Bm0hrtBrh+nH4GrdPwC+4fRL+WdoPrZJ+
lXmOF5cOcryVtDoFH+euR6vNrp+GX3UdrX65fgbu800crcpKq7PwDq6j1VTX
z8F3fvNerwlodeeb/Hk8Dw/z3Xv9VqJVxu9yvS/AK3+X80Or7t/lz1sIfPZ3
77ybaHVA5rW+CH8o8z6hVeQfst9L8Gw/vPOiX4bX+iGff7Tu+8M7L8MV+KIf
8vUGrY/KPL+r8Bcy7yxax/zpnVf/GjzvT/l6gtb1f3rn9bgOH/JTrt8N+HK7
1Wnyd+QJftleyG4VQD6SfB15CPlX8mS/bS9ht25NPoF8C/l18t/kaf7YXs5u
1Yl8Gvlu8rvk4f7ansluVZW8B/lc8oPkj8mj/LM9h926Nnl/8sXkx8hfksdW
2SzPZ7dqSK7JV5KfIf9AnjCM7UXs1s3IR5OvJ79E/o08RVjbS9qt2pJPJN9G
foP8L3nacLZXsFt3Jp9Bvof8Pnn48LZnsVtXI+9FPo88iPwJebQItue0W9Uh
H0C+hPw4+WvyOBFt/89u3Yh8GPkq8nPkH8kTR7K9qN2qBfkY8o3kl8l/kKeM
bHtpu3U78snk28lvkf8jTx/F9op2q67kM8n3kYeSR4xqe1a7VQ3y3uQLyA+T
PyOPHs323HbruuSDyJeSnyR/Qx4vuu0F7FZNyIeTryE/T/6ZPEkM24vbrVuS
jyPfRH6V/Ce5T0zby9itOpBPId9Jfps8TCzbM9itKpN3I59Nvp/8IXmk2LZn
s1vXJO9LvpD8KPlz8phxbM9jt6pPPph8Ofkp8nfk8ePaXshu3ZR8JPla8hDy
L+TJ4tnuZ7dqTT6efAv5NfLf5Knj217Obt2RfBr5LvK75GET2J7Jbl2FvAf5
HPKD5I/IoyS0PbvdqjZ5P/LF5MHkL8ljJbI9n926AbkmX0F+hvw9ecLEthe2
WzUjH0W+nvyiafx7745/M73t18Stv27Ckyfx9M0/ZW/+uQUvmUQefwfeRlqj
1UTX78K3uo5WN1y/B//jOlqlTSp+H15eWqNVZ9dD4dNdR6s9rj+A35P2Q6vw
yWS945mlgxyvJq0ewnu669FqnuuP4IdcR6snrj+GR00ujlY5pdUTuL9pvH8S
Wg0wjfc3egoPNI3nq57Bj5vG+yeh9SvTeH+j5/A4KbJ5n796Ac9vGu+f9BLe
yDTe/wmth6aQ/b2Cr0rh3U+B1/CzKbz7+YBWH1N497P2DTxRSu9+WryFF03p
3U/yd/DmKb37uYpWY1J69zPpPXxDSu9+yn2AX04p1+cj/Lt0V7RKmcrboY6X
kq7+Cd5OOgitJ0nn/AzfLh2I1jelY3+B/5PWaJ3Ox9vvHa8oHfAV3kU6BK1m
Svt9g++V3oxWodI+3+ERUnt7ClpllVY/4NVTy/VGq96p5fP7Ez7fXf8Lfthd
j9ZP3fW/4dHTyPo/8Fx2q7rkA8mXkp8gf0MeN63tBezWjcmHk68mP0/+iTxJ
OtuL2a1ako8l30R+hfwnear0tpexW7cnn0K+g/w2ucpgewa7dSXybuSzyPeT
PyCPlNF2X7tVTfI+5AvJj5A/J4+RyfY8dut65IPJl5GfIn9LHj+z7QXtVk3J
R5CvJb9A/oU8aRbb/ezWrcjHk28mv0b+izx1VtvL2q06kk8l30V+hzysr+0Z
7VZVyLuTzyE/QP6IPHI227PbrWuR9yNfRB5M/oI8Vnbb89qtGpAPIV9Bfpr8
PXmCHLYXtlsHkI8iX0d+kfwrefKctpewW7Uhn0C+lfw6+R/yNLlsL2+37kQ+
nXw3+T3ycLltz2y3rkrek3wu+SHyx+RR89iew27lT96fPJD8GPkr8th5bc9v
t25IPpR8JflZ8g/kifLZXsRu1Zx8NPkG8kvk38lT5Le9lN26Lfkk8m3kN8n/
kqf7z/YKdqsu5DPI95LfJ49QwPYsdqvq5L3I55MHkT8lj1bQ9lx26zrkA8mX
kJ8gf00et5Dt/9mtGpMPI19Nfo78E3niwrYXs1u3IB9LvpH8CvkP8lRFbC9t
t2pPPpl8B/ktclXU9vR2q0rkXclnke8jf0AesZjtvnbrGuR9yBeQHyF/Rh6j
uO257Vb1yAeRLyM/Sf6WPJ6f7QXt1k3IR5CvIb9A/pk8aQnbi9utWpGPI99M
fpX8F7lPSdvL2q07kE8l30l+hzxMKU/riWuXPHI8o+kTg0LqnP4Lr2w6Zuev
0bb8g3c37d8k+eHZaqfx2aYXVi3Ze3AY0+qA6cfF2mZtFRb+0HTWHJNCK4WD
Ry7t6e6pts/MHR6ezfSeWLcqJokAr1Va9hcR3tc0Xm+AVotM4/UBjh81jf+f
7/gL03j9QiR4zDLeeRqt8pbxzjvreP0y3nlJIsOHlPHOa43Wy8t4521z/LTM
U1Hg72ReZbRKUFb253ihsrI/xwPKyv6iwkeWlf2h1bqysj/HQ2RekmjwrzKv
NVonKyf7c7xEOdlfdHhraY1WE1yPAd/iOlpddz0m/Ld0AFqlKe/tIMfLSfvE
gneS1mg9TTrU8d3SfrHhd6UD0SpcBTl+HHgmaY1WVV2PC+/hOlrNdT0e/KBp
/H0ftHpsGn+/yPEoFbN5/75PfHgO0/j7RWhd2zT+vk8CeH/T+PtFaL24ohwv
IfxYRTkeWr+sKMdzPHYlOV4ieL5Kcjy0alhJjpcYrivJ8dBqZSU5XhL4GbvV
B/KElW0vYrduRj6afD35JfJv5Cmq2F7SbtWWfCL5NvIb5H/J01a1vYLdujP5
DPI95PfJw1ezPYvduhp5L/J55EHkT8ijVbc9p92qDvkA8iXkx8lfk8epYft/
dutG5MPIV5GfI/9Inrim7UXtVi3Ix5BvJL9M/oM8ZS3bS9ut25FPJt9Ofov8
H3n62rZXtFt1JZ9Jvo88lDyiv+1Z7VY1yHuTLyA/TP6MPHod23PbreuSDyJf
Sn6S/A15vLq2F7BbNSEfTr6G/Dz5Z/Ik9WwvbrduST6OfBP5VfKf5D71bS9j
t+pAPoV8J/lt8jANbM9gt6pM3o18Nvl+8ofkkRrans1uXZO8L/lC8qPkz8lj
NrI9j92qPvlg8uXkp8jfkcdvbHshu3VT8pHka8lDyL+QJ2tiu5/dqjX5ePIt
5NfIf5Onbmp7Obt1R/Jp5LvI75KHDbA9k926CnkP8jnkB8kfkUdpZnt2u1Vt
8n7ki8mDyV+Sx2puez67dQNyTb6C/Az5e/KELWwvbLdqRj6KfD35RfJv5Mlb
2l7Sbt3GdD2fP/vrOj7RdMILTXtsc3yr6SuDjmSOlRR+w/Q03/Sh7dH6j+ka
t0fPOu542laejjXuZeU0yeDlTZ8rUCXcYLTqbHr8s017bjo+3XSFWXG75ksO
32M6UpleGaai9T3Txz9dv/Pa8fCtPT1iaaHp5VPAM5suWWNhheVoVa21nF9K
eE9pjVbzXE8FP+Q6Wj1x3QcetY04WuWUVqnh/q6j1QDX08ADXUer466nhb9y
Ha3itBVPB88vrdGqkevp4UNdR6tVrmeAn3UdrT66nhGeqJ04WhWVVpngzV1H
qzGuZ4ZvkM6JVpelAxz/Lj3F8ZTtvR3keCnp9463k/bJAp8kXR2ttktrx29K
b3b8n3So4+k6eDt2VnhFaT+07iLd1fGZ0oGO75UOcTxUWvnCI3SU/aFVVulA
x6tLv3e8t7RfNvh86SlodVg61PGn0jmzw6N3kvNH61zSIY7XlfbJAR8o3RWt
lkoHOX5COnZO+BvpALSO21mur+MFpFUueGNpjVbDXc8NX+06Wp13PQ/8k2m8
HxJaJemSzft+SI4XM433Q3K8pWm8H1Je+FjTeD8ktNpkGu+H5PgV03g/pHzw
n6bxfkhonaprNu/7ITlexjTeDyk/vL1pvB8SWk0xjfdDcnxHVzmf/+C3u8r5
oLXqJufjeIZucj6OV+om51MA3q2bnA9az+om5+P4/m5yPgXhD7rJ+aBVpO5y
Po77dpfzKQSv2V3OB637dJfzcXxhdzmfwvAjdqvn5DF62J7Hbl2PfDD5MvJT
5G/J4/e0vaDdqin5CPK15BfIv5An7WW7n926Ffl48s3k18h/kafu7ekkE7o2
Kup4WdOzb786N8/xjqYTZm1T/LvjU03P7P9ws38R+C7T8U83TrMNre+Ynp7k
5vTYReFh+3g6brvaETqjdUbTU3df6H3G8SqmY0eu9DxTMXh305PrHq8/Cq3m
mI65qsSZR44fMD3x6/4iJYrDH5mOXrbAxkVoHbmv+X4/c1uq345nNx31Sfap
9f3gtUyPzbs27C606mc68oj0PeOXgC8yPfpy4JNuaBVsOmLa5HUvOP7C9Mju
s0/6loTH6ufp8EfiFhqH1nlND48zad0zxxuYDtssSooypeBDTA/dPGLSUrRa
0U8+H6Xhp+1W78kT9Le9sN06gHwU+Tryi+RfyZMPsL2E3aoN+QTyreTXyf+Q
pxloe3m7dSfy6eS7ye+Rhxtke2a7dVXynuRzyQ+RPyaPOtj2HHYrf/L+5IHk
x8hfkcceYnt+u3VD8qHkK8nPkn8gT6RtL2K3ak4+mnwD+SXy7+Qphtpeym7d
lnwS+Tbym+R/ydMNs72C3aoL+QzyveT3ySMMtz2L3ao6eS/y+eRB5E/Jo42w
PZfdug75QPIl5CfIX5PHHWn7f3arxuTDyFeTnyP/RJ54lO3F7NYtyMeSbyS/
Qv6DPNVo20vbrdqTTybfQX6LXI2xPb3dqhJ5V/JZ5PvIH5BHHGu7r926Bnkf
8gXkR8ifkccYZ3tuu1U98kHky8hPkr8ljzfe9oJ26ybkI8jXkF8g/0yedILt
xe1WrcjHkW8mv0r+i9xnou1l7dYdyKeS7yS/Qx5mku0Z7daVybuTzzZd8/BO
9cvxA6ZL5p2mfpeBPzSda1Un9acsPPJkT6dOWkH9LQfPZjr2xHTqX3l4rcky
vyK8r2n8/Qe0WmQar2d3/Kis146/kPVrHY85xbv+quN5p8j8SvD6U2Q+Wg2R
9f6OL5f12vHTsn6t4+/c+Y4nmCrzK8ML2a0CyEeSryMPIf9Knmya7SXs1q3J
J5BvIb9O/ps8zXTby9mtOpFPI99Nfpc83AzbM9mtqpoOGVE83l/He5hue2Rx
lCFV4XPd9dXhB6UD0eqxtF8NeJSZ3g5FqxzSuia8trRPLXh/6SC0XiwdUBt+
TFr5w1/arWLPsj2f3aohuSZfSX6G/AN5wtm2F7FbNyMfTb6e/BL5N/IUc2wv
afruzzglFjje1nT1drFOF6kDn2j6yPXote6i1TbT+cpGvTOoLvyG6dXbI7VK
WQ/+13SytBHeHkTrtHM9PXFq2D5N68MrzJXjN4B3No3XT6DVDNN4fUVD+B7T
eP0FWt03jddnNIKHn5fN+/oNtMpiGq/vaAyvNk+O1wTea54cD63nzZPjNYUH
zZPjofWTeXK8AHi0+XI8tM45X47XDF5nvhyvOXyAdABaLZEOcvy4tE8L+Gtp
jdZxFsj97/h/0n4t4Y2kA9FqmLRqBV9ltzpH/pE88ULbi9qtWpCPMZ25x7zS
ixzfaPro2eLh67aGXzbdJMOTo7HawH+Y/j5k3PCTaJ1ykaen38xRamhbeGnT
2fJcDVuoHbyd6RMT+h/5iFaTTTd/mmrYuvbw7aZ/Fz9WomUH+C3Ts+a2D5Oi
I/yf6VyfYh2+ilbpF3v6TOUdelIneEXTrVc28CvXGd51sZxfF/hMu9U+8lDy
iIG2Z7Vb1SDvTb6A/DD5M/LoS2zPbbeuSz6IfCn5SfI3potE3L+ls+Pxlnr6
T/ick+p1hRcwfTDc8vYlu8GbmB4SNnE53+7w4aaLh5mQNmEP+JqlMr8n/Lzp
lOYDrT6bLmI+HE+yzNMNzIfjxU33NR+OtzQ9e5bnw/Fxpnds93w4vsn05Uue
D8evmv7w3vPh+E/TscxHL7jPcnP/mQ+0LmO6kvlwvIPpdubD8Smmx4z2fDi+
0/TKFZ4Px2+bDj7q+XA8zApPP3zg+XA8wwq5Hr3hlVfI9UDrbivkejg+e4Vc
D8f3r5Dr4fjDFXI9HI+0Uq6H49lWyvVwvOZKuR6O910p16MPfOFKuR5odXSl
XA/Hn6+U6+F4zFVyPRzPs0quh+P1V8n1cHzwKrkeji9fJdejL/yU3eodefzV
theyWzclH0m+ljyE/At5sjW2+9mtWpOPJ99Cfo38N3nqtbaXs1t3JJ9Gvov8
LnnYdbZnsltXIe9BPof8IPkj8ijrbc9ut6pN3o98MXkw+UvyWBtsz2e3bkCu
yVeQnyF/T55wo+2F7VbNyEeRrye/SP6NPPkm20varduQTyTfSn6D/A952s22
l7dbdSafTr6H/B55+C22Z7ZbVSPvST6P/BD5E/KoW23Pabf2Jx9AHkh+nPwV
eZxttue3WzUiH0q+ivws+UfyRNttL2q3bk4+hnwD+WXy7+Qpd9heym7VjnwS
+Xbym+T/yNPttL2i3boL+UzyveSh5BF22Z7Vbl2dvDf5fPLD5E/Jo++2PZfd
qi75QPKl5CdMV5h7bdo5x9+YXtK/b6/l/eBx93j6R8Ok9Qb0hxcwXb3o/kI1
B8Abm16dskmKzAPhw/fI/EHw1dIarc67Phj+yXW0SrJXfAi8mGn8fQm0amka
f7/C8bGm8fcxNHyTafz9DbS+4s4bCv/pzkPrVPtknuNl9sm8YfD2+2QeWk3Z
J/OGw3fsk3loddud57jaL/NGwDPsl3loXWm/zBsJ77Zf5qH1rP0yz/H97rxR
8AfuPLSKdEDmjYb7HpB5aFXzgMxzvM8BmTcGvvCAzEPrI+68sfDn7jy0jnFQ
5jme56DMGwevd1DmodXggzJvPHyZdABanZIOcvyttM8EePxDcr+gdUHpUMeb
SvtNhI+QDkSrtdJqEvyCaTxfiFZfTOP5QceTBsn6yXC/IFmP1q2CZL3j4931
U+CbpTVaXXN9KvyX62iV+rD4NHhZaY1WHV2fDp962Hv8LGi167Dsz/E77uMd
D3tE9ut4xiPe9Vcdr3JE5s+Ad5fWaDXH9ZnwA66j1SPXZ8EjHxVHq+zSaja8
luto1c/1OfBFrqNVsOtz4S+OyvmjVaxgOX/H8wbL4x1vECzn7/gQWX/V8RWy
Xs2Dn3Yfj1bvXZ8PT3DMalXYbh1APop8HflF8q/kyY/bXsJu1YZ8AvlW8uvk
f8jTnLC9vN26E/l08t3k98jDnbQ9s926KnlP8rnkh8gfk0c9ZXsOu5U/eX/y
QPJj5K/IY5+2Pb/duiH5UPKV5GfJP5AnOmN7EbtVc/LR5BvIL5F/J09x1vZS
duu25JPIt5HfJP9Lnu6c7RXsVl3IZ5DvJb9PHuG87VnsVtXJe5HPJw8if0oe
7YLtuezWdcgHki8hP0H+mjxuiO3/2a0akw8jX01+jvwTeeKLthezW7cgH0u+
kfwK+Q/yVJdsL223ak8+mXwH+S1yddn29HarSuRdyWeR7yN/QB7xiu2+dusa
5H3IF5AfIX9GHuOq7bntVvXIB5EvIz9J/pY83jXbC9qtm5CPIF9DfoH8M3nS
67YXt1u1Ih9Hvpn8Kvkvcp8btpe1W3cgn0q+k/wOeZibtme0W1cm704+m/wA
+UPyyLdsz2a3qkXel3wR+VHyF+Qxb9ue125dn3wI+XLy0+TvyBPcsb2Q3SqA
fCT5OvIQ8q/kye7aXsJu3Zp8AvkW8uvkv8nT3LO9nN2qE/k08t3k/3N111FR
bVEcx4+t2Aq22K3YLYrd3Y3d3fmO3d2BYnc3Fipidze2qCh265uz9z2z1v7x
33d9zux77r0DD3jj8AA82iPp2WWrWuD9wBeBHwF/Bh4nTHpe2boB+FDw5eAn
wV+DJ3osvbBs1Rxcg68FPwf+ATzZE+mlZOs24BPAN4NfBf9melVolVEH2dM+
dfWP5JuzDF9KXs40/f/+APLOptcG9e35h1pPM/0n7s0kR5aR7zJdv2XxfSOX
k982vXHr0uZlAsn/PrXHX0Ge6ZmrKyVv2b8utapqeqpP0KuV7D1NX6mYvOVn
9rmmXcuvVFxJfsC0yQXU6pHpVVPMAPLoz10dvnKKT4lV5DlN53XpFGpd27Tr
4ckfsA8wbdhnNfni585+NbUKfu7s9wr78+fOfjOuIY/7wtlvf2qd74Wz35Ps
jV44+02+lnzYC2e/nanVihfOfoPYQ184+427jvztC2e/Lal14pfOfreyF31p
r+968hbu3kA+2t0bydfZ1tTqgts3kX80TX/fiFqleJXH+XmZ3feVs95vM3m7
V876jdR6ol3vtYV8q12vqfU1u/41+w+7vuFWcu9wZ30wtaoQ7qzPuY28S7iz
fh61mmHXq+3ku21ranXX7TvI/7mdWmV5bX0neTXbmlr1dvsu8nlup1YH3b6b
PMzt1CrmG+t7yHPZ1tSqrtv3kg90O7Va6vZ95MfcTq1eun0/eby31qlVAdvq
AHljt1OrEW4PIl8pW50GjwBPGiG9mGzVCnwM+Abwi+CfwVO+k15Gtm4PPhl8
G/gN8J/g6d9LryhbdQOfCb4X/B54lEjpWWWrGuB9wBeAHwJ/Ah7rg/Q8snU9
8MHgAeAnwF+BJ/govaBs1RR8JPhq8DPg78E9P0kvIVu3Bh8HvhH8MvgX8NSf
pfvJVh3Bp4DvAL8J/hs8wxfplWXr7uCzwfeBPwCP+lV6dtm6Jng/8IXgR8Cf
gsf5Jt1HtmoAPgR8OXgI+GvwhN+lF5atm4Fr8DXg58AjwZP9kF5StmoDPh58
M/gV8G/gaX5KLydbdwKfBr4T/Db4H/BMv6RXka16gs8BPwD+EDz6b+k5ZKva
4P3BF4MfBX8O7vFHej7TX7O3mHGcvaHpCq6PEPZhpue0zv3jJHug6cdDPbee
Yg81nW/+77Zn2N+YHrnjWfJz7In/5rF/D5K8iOnUr3aPusjewnTXaAFFLrOP
Mr3fe9ybK+zrTMcq0SPwGvt50/T9GvtH06t7+3rcYk/+z9Ufp2Q5epvd13TZ
dfH732Vva3rG8S/Z77NPNP3wgeuDfYtp19nOfsR+zfQwz62VH7N/N30m7/zf
T9i9lU9E2RTVXWfMXt40vb8eexfTe0bVSv2Kfbppc7rh7LtN1zMnzH7HdOC1
mCUi2P+Zfv/O9cGeOYqrXWe7KpK9mumpWY42+cjey/Rdv3XxP7PPM53DdXu/
sAeZHuT6+MYeZjp0tusGs8eI6mpzuj/Zc5luZ06YvY5p1+2t/pd9oGl6Ph0k
XyJbHQN/AR4vmvT8slVj8OHgK8FPgUeAJ4kuvZhs3RJ8DPh68Ivgn8BTxpBe
WrZqDz4JfBv4dfCf4OliSq8oW3cFnwm+B/weuIolPatsXR28D/h88EPgj8Fj
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
YI/axNVRO7quKHs2053eXO61l72m6fO9w7vuY+9rOv/XKB33sy80PX+Y6wKx
Hzb9SxVsEcT+1LT/+OqND7LHburqk3Hb1zvE7mM656zhNQ+z1zftenZWOcI+
xLTr6pQ/yr7MdNMMrmcoe4jpI2sfFj/GHm46U+5vhY6zJ2zm6ok7XDeYvZDp
iCLZc4WwNzNd75Bf1pPs/5neZ47AvsZ0mlN90pxiP2va9dme/DR7pGnXsy3J
GXav5q6u0fhg/LPsJU3vuH8t9jl2f9PJ2r6Ndp59vOlh5gnKvsl0WHfzjCa/
Yrrix8JfLrJ/Nb1xUK3IS+xpWrg64Z+Oby6zlzXd33wCsHcyfSfWwsdX2aea
Lj1t+/1r7DtNr0py5tZ19lumY7uW32D/Y7qH2Q57xpauvuo63VvsVUwXdV3O
2+w9TC913a477HNMR3E9He6y7zdtnm732B+aNk/n++zRWrnafLo8YM9h2nw6
PmSvZdp8uj9i72/afDkJY19k2ny5esx+1LT5cviE/Zlp8+X2KbtHa1d/6lx3
0jP2vKabmC9A7A1NH+7nuqDsQ027vroNfckeaNr12TXgFftJ06672zuc/Y3p
uuYLHHsif1fvTeC6YexFTKee69X2LXtz0zqlT8sI9lGmXyyr1OQd+1rT1c0X
UPbzprdvcD0h2D+Y9srr+grNnryNq4fuXl/hI3sp04+KHyvzib2t6QrmCzT7
BNMbKriecOxbTCc465H/K/tV0/1quz7D2L+bvn29ZLbv7GnbutrX/AeAvbzp
lY9cT2j2zqZjdRiX4hf7dNPdXwck/c2+y/SVXq4rxH7HdBHzHxj2v6aXDHV9
wrBnbmf/e3yLvKps1Qt8LngQ+CPwGO2l55St6oAPAF8CHgz+AjxuB+n5ZetG
4MPBV4CfAn8LnqSj9KKyVUvw0eDrwS+AfwJP0Ul6adm6Hfgk8K3g18F/gKfr
LL2CbNUVfAb4HvC74KqL9CyyVXXw3uDzwQ+CPwaP2VV6btm6rumnk3Nt3c8+
yPTLPPcPDLlNvtT0m8tTT5a4Q37c9Pt+vld+UeuXpj8le3f/0F3y+N1c/f3A
slcj7pEXMP27Re3Ppe+TN+lmj/+AfIRper0TtVplml5/xH7aNL2eiv2daXp9
E3vS7nbeQ/Li3e08at2qu53HPra7nce+obudx37JPe8R+Wf3PGqVqoedx16m
h53H3qGHncc+uYedF0a+vYedR61vuOex/3LPY0/f085jr9TTzntM3k22mgW+
F/w+eJRe0rPJ1jXA+4IvAD8M/gQ8dm/peWSr+uCDwZeBnwAPB0/QR3oh2bop
+H/gq8HPgr8H9+orvYRs5Q8+DnwT+GXwr+Cp+0kvK1t3BJ8KvgP8Fvhv8Iz9
pVeWrXqAzwbfD/7A9Jxf16v0Z482wNXny9ZcHu8JeXbT0See/LKaWtUyXeqi
bw3fp+T9TA/w3LvyBrVaZHpLM58fPZ6RHzH9InBt7ZjPyZ+Z9n7pvXYZtY4z
0NWN8yz4XeQFeV7TM/olrH+JWjcwffrAhA2dXpIPHWj3/4p8uWx1Evw1eKJB
0gvLVs3BNfha8HPgH8CTDZZeSrZuAz4BfDP4VfBv4GmHSC8nW3UGnwa+C/w2
+F/wTEOlV5Wte4LPBT8A/gg8+jDpOWXr2uADwBeDB4M/B487XHo+2aoR+DDw
FeCh4G/BE4+QXlS2bgE+Gnwd+AXwj+ApRkr3la3agU8E3wp+DfwHuPd/0ivI
1l3AZ4DvBr8L/g88i5ZeTbbqDT4P/CB4GHjMUdJzyVZ1wQeCLwU/Bv4SPN5o
6QVk68bgI8BXgp8GjwBPOkZ6MdmqFfgY8A3gF8E/g6ccK72MbN0efDL4NvAb
4D/B04+TXlG26gY+E3wv+D3wKOOlZ5WtaoD3AV8Afgj8CXisCdLzyNb1wAeD
B4CfAH8FnmCi9IKyVVPwkeCrwc+Avwf3nCS9hGzdGnwc+Ebwy+BfwFNPlu4n
W3UEnwK+A/wm+G/wDFOkV5atu4PPBt9n+mSGtvPmsD8w/aqR99084eRRp7o6
7tS73qepVXbTPsfmt2v7mrym6bpf663/Ta36me6fK2HE/DfkC00v8D+XP/9b
8iOmg+ZNGHiOWj81/eBs+YMdIsjjTLP7e0fuI1s1AB8Cvhw8BPw1eMLp0gvL
1s3ANfga8HPgkeDJZkgvabpBqZp/M7O3MR1850rfTuzjTecZ1OjlBvbNphd7
3mv+lv2K6Vg7W1/2eU/+zXS/2s8q9KHWaWa6Ouxt5wO72MuZrjk5Is9X9k6m
g7L1XVksknya6awnvyYbRq13mp7TdtiUw+y3Z9r9fyD/4+6P5Jlm2f5EXsU0
/XsratXTNP18zD7HNP17KvYDpunn68/kD+08Ta2iz3bmnWfPMduZl/ILee3Z
zryO1Lr/bGfeLvbFs+3+vpIftfNqUKvndt4ido85dn/s+ebY/X0jbzjH7o9a
DZtj98ceOMfu7zt5qJ3XkVq/sfN2sSeea/f3g7zIXLs/atVirt0f+6i5dn/s
6+ba/f0kP2/naWr10c47z558nt3fL3LfeXZ/1LrtPLs/9onz7P5+k28xTe/H
RK2umab3b2L/btdrdu/5zvqN7OXnO+tvsHeZb+f/IZ9u259a7bYdzH7Hdvq/
5P9sa2qdeYHTYezVbPv9I+9lO5BazbOt1D7jQQvs+VGrsAX2/NhjLLTHY8+1
0J4fe52F9vzYB9r1Kgr5EtnqGPgL8HiLpOeXrRqDDwdfCX4KPAI8yWLpxWTr
luBjwNeDXwT/BJ5yifTSslV78Eng28Cvg/8ET7dUekXZuiv4TPA94PfAVYD0
rLJ1dfA+4PPBD4E/Bo+1THpu2aoe+CDwAPDj4K/A4y+XXlC2bgI+EnwV+Bnw
d+CegdKLy1atwceCbwS/BP4FPNUK6X6ydQfwKeDbwW+C/wLPsFJ6JdmqO/gs
8H3g98GjrpKeTbaqCd4XfCH4YfCn4LFXS/eRreuDDwFfBh4CHg6ecI30QrJV
M/D/wNeAnwWPBPdaK72kbO0PPh58E/gV8K/gadZJLytbdQKfCr4T/Bb4H/CM
66VXka17gM8B3w/+EDzaBuk5ZOta4P3BF4EfBX8G7rFRel7ZqiH4UPBA8JPg
b8ATbZJeRLZuDj4KfC34efAP4Mk3Sy8lW7UFnwC+Bfwq+HfwtFukl5etO4NP
B98Ffgf8L3jmrdKryla9wOeCB4E/Ao+xTXpO2aoO+ADwJeDB4C/A426Xnl+2
bgQ+HHwF+Cnwt+BJdkgvKlu1BB8Nvh78Avgn8BQ7pZeWrduBTwLfCn4d/Ad4
ul3SK8hWXcFngO8BvwuudkvPIltVB+8NPh/8IPhj8Jh7pOeWreuCDwJfCn4c
/KXpO+3n1CwSlTz+Xle/iIg3aUg08gKmPw0cH3IoOnmTvfbxMclH2A6kVqts
+8UiP207jFq9s61jkyfd53T6OOTFbQdT61a2/T3Ix9pWcck32A6kVpds+8Uj
/2w7jFql2m+PH5+8jO30Ccg72A6m1pNt+yck325bJSK/YZreT5pa/TJN7++c
mDz9AR/n/aypVSXT9P7SSci7mab3e6ZWs0zT+1snJd9rmt5vmlrdN03v/+xJ
HiXIx3m/a2qVzTS9/7QXeY0gu99k5H2D7H6p9YIgu9/k5IeD7H6p9ZMgu98U
5LEP2v1S6zwH7X5Tktc/aPdLrQcftPtNRb7soN0vtT5x0O43NXn4QbvfNOQJ
Dvk4P29Tq0Km6edr9qaH7Pq05P+511Pr1e717Gfd673J37vXUyuvw3Y9e4nD
dn06cv/Ddj21Hudez77JvT49+WX3emr11b2ePfURuz4Dedkjdj217njErmef
6l6fkXyH7TrU6pbtQPbftiPZMx61nx+ZyCvbnkmtetgOY59tO19m8v22NbV+
YPsye7Rg+/mUhTy77d7UqpbtYPZ+thNlJV9k259aH7G9nf2ZbZWNPM4xH+fv
s1OrvKbp77GzNzBNf3+dfahp+vvu7MtN099zZz9pmv5+O/vrY/Z42ckTHbfH
o9aFj9vjsTc/bo/Hro/b47GvPW6Px37uuD0e+4fj9ng5yJOdsMejVqVO2OOx
tzlhj8c+4YQ9HvvmE/Z47FdP2OOxfzthj5eTPG2IPR61Lhdij8feOcQej31a
iD0e+64Qezz22yH2eOx/Q+zxcpFnOmmPR62qnrTHY+950h6Pfe5Jezz2Ayft
8dgfnbTHY48eao+XmzxnqD0eta4dao/HPiDUHo99cag9HntwqD0e+/NQezz2
uKfs8fKQ55OtGoEPA18BHgr+FjzxaelFZesW4KPB14FfAP8InuKMdF/Zqh34
RPCt4NfAf4B7n5VeQbbuAj4DfDf4XfB/4FnOSa8mW/UGnwd+EDwMPOZ56blk
q7rgA8GXgh8Dfwke74L0ArJ1Y/AR4CvBT4NHgCe9KL2YbNUKfAz4BvCL4J/B
U16SXka2bg8+GXwb+A3wn+DpL0uvKFt1A58Jvhf8HniUK9KzylY1wPuALwA/
BP4EPNZV6Xlk63rgg8EDwE+AvwJPcE16QdmqKfhI8NXgZ8Dfg3tel15Ctm4N
Pg58I/hl8C/gqW9I95OtOoJPAd8BfhP8N3iGm9Iry9bdwWeD7wN/AB71lvTs
snVN8H7gC8GPgD8Fj3Nbuo9s1QB8CPhy8BDw1+AJ70gvLFs3A9fga8DPgUeC
J7srvaRs1QZ8PPhm8Cvg38DT3JNeTrbuBD4NfCf4bfA/4JnuS68iW/UEnwN+
APwhePQH0nPIVrXB+4MvBj8K/hzc46H0fLJ1Q/Bh4IHgoeBvwBM/kl5EtmoB
Pgp8Hfh58I/gycNcPXru4cM12H1Nb1nS/MtS9ramb638kTuCfaLpqBsXtPf1
Id9iOveOwkunUatrphvvv3btAft306OO9onrk5fc+7GrN4cmLD+SWpc3ffPC
lqEX2buYjnKj+k7vfOTTTee6Hx7ek1rtNt3o6YQMR9nvmNavszRNmJ/8n+lN
H07MbE2tMz9x9Y3vbU5vY6/2xJ5/AfJetgOp1TzbfgXJg2yHUasw27oQeYyn
TqcvTJ7LdjC1rmPbvwj5QNuqKPkS237U6phtzf7CPY893jP7+GLk+W37UavG
tjX7cNvB7Cvdjy9Ofsr9eGoV4X48e5Ln9vHsxWyrEuQtbftRqzG2Nft69+PZ
L7ofX5L8k/vx1CrlC/t49tK2g9nb21alyCfZ9qNW29yPZ7/ufjz7T/fjfcnT
vbSPp1YVbWv2rraD2WfaVqXJ99j2p1b33OvZ1Sv7/ChDntW2ptbVbYex97Ht
50c+33YgtTpkW5Ulf2zbn1rFCrfHZ89tO3058nq2NbUeZDuMPcC2X3ny47YD
qdUr26oCefzXPs7vq6hVQdP0+yr2Jq/t+orkI93rqfUq93r2M+71lcjf2faj
Vp5v7P7Zi9sOZm9tW1UmH+teT602ur0K+SW3U6svbq9Knuqtj/P6K2rlZ5pe
f8XewTS9/op9iml6/VU18u1v7XxqddPOO8/+y85LWZ08Q4QzryO1rhThzNvF
3j3C7q8G+awIez2p1b4Iez3Z77vX1ySP+s6up9bZ3tn17DXf2fW1yPta96BW
C+3jvdgP2/Xp2Z/a9TnZY7931hdm93lv7yd7/ffO+mrsQ+z6huzL7Hp/9hC7
vit7uF0/gD1hpL3e7IUinfWT2ZtFOuvnsf9n1weyr7HrN7Kftev3sEfa9cHs
Xh+c9WfZS35w1t9g9/9gP7/Yx9v1r9k32fVf2K/Y9ao2+VfZKs1H6WVlq07g
U8F3gt8C/wOe8ZP0KrJ1D/A54PvBH4JH+yw9h2xdC7w/+CLwo+DPwD2+SM8r
WzUEHwoeCH4S/A14oq/Si8jWzcFHga8FPw/+ATz5N+mlZKu24BPAt4BfBf8O
nva79PKydWfw6eC7wO+A/wXP/EN6VdmqF/hc8CDwR+AxfkrPKVvVcTd//g6Q
rZaAB4O/AI/7S3p+2boR+HDwFeCnwN+CJ/ktvahs1RJ8NPh68Avgn8BT/JFe
WrZuBz4JfCv4dfAf4On+Sq8gW3UFnwG+B/wuuPonPYtsVR28N/h88IPgj8Fj
qrzCc8vWdcEHgS8FPw7+Ejx+FOkFZKsm4CPAV4GfBn8HnjSq9OKydSvwseAb
wC+BfwZPFU16GdmqA/hk8O3gN8B/gaePLr2SbN0NfBb4XvD74FFiSM8mW9cA
7wu+APww+BPw2DGl55Gt6oMPBl8GfgI8HDxBLOmFZOum4P+BrwY/C/4e3Cu2
9BKylT/4OPBN4JfBv4KnjiO9rGzdEXwq+A7wW+C/wTN6SK9suvq9V83Hsfcw
va1JrnHx+L9/s0173uyxdQ7/92+/6cH1t99KVYf8gen7lz+qldQqWlxX+9Uq
nDNHXfLsptecG1R/O7WqZTpO1aDhReuR9zPdI/T3miPUapHpK+XLXKpYn/yI
6SLHRn0/T62emV5cOiRDgwbkceK5+u/BmNXvUau8ptsWr9q/bUPyBqZP7Z0S
EE6thprOVehiaO9G5MtNz9iRKPIbtTpp+pNP/ZT/NSZ/bbrJ5nnlYjYhTxTf
1Ydy3O42jVoXNp1+Xap5nk3Jm5sem7nlkSXUWpsOX7H8ZcZm5GtN10z3JNFG
an3O9I6lmUvkb07+wbRXqk7t9lPrZAlcPXTBhqllWpCXMv3Q8+2eUGrdxnS5
2T6ParYkn2B6bcI+sW9Q682m407blb9FK/Krpnt5fG32lFp/M31tQrGxXVuT
p03o6qIxhm35QK3LmV46+vDNwf7knRPa508b8mmmB7bNNrAttdpl+m1Irbch
7LdNG87Wlvyv6TuTAm5PotaZErm6tnkAe1XTJ10Pr9WOvKfpkjuSltxBreaa
Npm0PfkB02b8QGr1yPSy264DsEdPbJ6/ZkAH8pymJ7sOH0Ctaye259ORfEBi
ez7UenFiez7swYnt+XQif57Yng+1ipvEng97viT2fDqTN0piz4daD0tiz6cL
+Yok9nyodWgSez7sb5PY8+lKnjipPR9qVTSpPZ9u5C1M0+urqNVo0/T6K/Z1
pun1Wd3JL5im129R64+m6fVdPchTeOZ1Xv9FrX1N0+vDepK3M02vH6PWE03T
68t6kW81Ta8/o9bXPO1+e5P/8LT7pdbeXna/7BW87H77kHfxsvulVjO87H77
ku/2svulVne97H77kf/zsvulVlmS2f32J6+WzO6XWvVOZvc7gHyeaXo9CbU6
aJpeT8IeZppeT8IeM3le5/Uk7LlM0+tJ2OuapteTsA9Mbo83kHxpcns8an0s
uT0e+8vk9njs8VLY47EXSGGPx944hT0e+4gU9niDyFfa1tTqtNsHk0e4nVol
TWl9CHkx25patXL7UPIxps2vu2JSqw2m6e/VsV80bX7/lZT9s2n6fRl7ylTO
vPTsZVI587Kyt0/lzMvNPjmVM68g+7ZUzrzi7DfsPD/2n3ZeJfb0qZ15Ndgr
pnbm1WfvltqZ15R9Zmpnnj/73tTOvI7s9+y87uxR0jjz+rFnTePMG8JeI429
nux90jjzxrMvSOPMm8p+yM6bw/7EzlvEHiutMy+QPU9aZ95a9nppnXmb2Qen
debtYg9I68w7wH7Czgtmf2XnhbIn8HbmnWcv6O3Mu8be1NuZd4d9pLczL4x9
tbcz7wX7GTvvLft7O+8Tu2c6Z94P9hLp7PNvGHlr2Woc+Ebwy+BfwFOnl+4n
W3UEnwK+A/wm+G/wDBmkV5atu4PPBt8H/gA8akbp2WXrmuD9wBeCHwF/Ch4n
k3Qf2aoB+BDw5eAh4K/BE2aWXli2bgauwdeAnwOPBE+WRXpJ2aoN+HjwzeBX
wL+Bp8kqvZxs3Ql8GvhO8Nvgf8AzZZNeRbbqCT4H/AD4Q/Do2aXnkK1qg/cH
Xwx+FPw5uEcO6flk64bgw8ADwUPB34Anzim9iGzVAnwU+Drw8+AfwZPnku4r
W7cFnwi+Bfwa+Hdw79zSy8tWXcCng+8GvwP+DzxzHunVZOte4PPAg8DDwGP4
SM8lW9cBHwi+BPwY+AvweHml55etGoMPB18Jfgo8AjxJPunFZOuW4GPA14Nf
BP8EnjK/9NKyVXvwSeDbwK+D/wRPV0B6Rdm6K/hM8D3g98BVQelZZevq4H3A
54MfAn8MHquQ9NyyVT3wQaYrXu5d79tw8gC3/0d+3N2a/JW7R5HHL2x7NHlB
d48hb+LuseQj3T2OfJW7x5OfcfcE8nfunkjuWcT2JPLipun7eWrV2jR9f80+
1jR9v8u+0TR9/8l+yT1vMvkX9zxqnaqoncfuV9TOY+9Q1M5jn1LUzptCvr2o
nUetbrrnsf9yz2PPUMzOY69UzM6bSt69mJ1HrWcVs/PY9xWz89jvu+exRy1u
500jz1bczqNWNYvbeex9i9t57AuL23nsh93zppM/dc+j1rFL2HnsPiXsPPb6
Jew89iEl7LwZ5MtK2HnUKsQ9jz3cPY89YUk7j71QSTtvJnmzknYetf6vpJ3H
vqakncd+1j2PPdI9bxa5Vyk7j1qVLGXnsfuXsvPYx5ey89g3lbLzZpNfcc+j
1l/d89jT+Np57GV97Tz2Tr523hzyqbLVTvBb4H/AM5aWXkW27gE+B3w/+EPw
aGWk55Cta4H3B18EfhT8GbiHn/S8slVD8KHggeAnwd+AJyorvYhs3Rx8FPha
8PPgH8CTl5NeSrZqCz4BfAv4VfDv4GnLSy8vW3cGnw6+C/wO+F/wzBWkV5Wt
eoHPBQ8CfwQeo6L0nLJVHfAB4EvAg8FfgMetJD2/bN0IfDj4CvBT4G/Bk1SW
XlS2agk+Gnw9+AXwT+ApqkgvLVu3A58EvhX8OvgP8HRVpVeQrbqCzwDfA34X
XFWTnkW2qg7eG3w++EHwx+Axq0vPLVvXBR8EvhT8OPhL8Pg1pBeQrZqAjwBf
BX4a/B140prSi8vWrcDHgm8AvwT+GTxVLellZKsO4JPBt5t+vW75yJ+LyG+Y
zra488o4i8l/mW43NX9oCmqdvrarA0f+DM/GXsn0/d4n4hdl72Y6pesBldhn
mabXP7LvNT27sveQ9uz3TV8s/nJpP/YodVwdN/f24NHs2UxX8R7ybBZ7DdNj
E5WLvYK9r+ljUV2PYF9g+s/na7WPsh82XcI1/iL7E9MD73RY8IA9dl1X7zrn
c/Atex7T7w9/e/iLvb5p13aixl1CPth0l5WTsqaiVstMr5lbr1oO9hOmn4xP
3bMYe7hps/3K7Anqubp5ty17GrEXMr2gpWtH7E1NX69d5k9/9v9MJy4XO8NY
9tWmaxa6UmEO+1nTk7O6bhj7e9OhKdpN3cHuVd/V0cwFZS9huozrAl1i9zc9
3Jww+zjT+x+PT/2OfZPpL9dcG2K/bLqA6wDxlpJ/Nd3TPIBap26Q13m9LHtZ
0+byF2fvaDrzjFIfq7BPNe0/KkayJuw7TAe4lndiv2XadbtaDmT/bTpZE/9R
49gzNnR1/Wo51sxlr2zaNf70KvYeps+7bu9O9tmmXVcz0XH2/aYrJnVdUfYH
ps12wtijNXL1kW8Ph71nz276Z/i65X/Za5kuaj4BAsj7me7vekKnoVaLTJun
T272I6Yjdp7zKcn+zHQO8wRij9PY1R1dp9uUPa9p19NtcWf2BqYfDXt/eBD7
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
f+Sn3evVfuPv3OupddKndn0U8uJP7fqo5K1sa2o11u3RyDe4nVpdcnt08s9u
p1apnlmPQV7GNP1+hlp1ME2/v2GfbJp+v8O+3TT9/of9hmn6/VBM8l+m6fdH
1Dr9c3t89krPnePtZe/23DleBPus587xMsci3/vcOV5zanX/uXO82exRXjjH
O8Oe7YU9v9jkNUzT+1lTq76m6f2s2ReYpvezjkN+2DS9nzW1fmKa3s+aPfbL
vM77WXuQ5zFN72dNreqbpvezjks+2DS9nzW1Wmaa3s+a/YRpej/reOThpun9
rKl1glf2fOKTF3plz4daN31lz4f9v1f2fBKQr35lz4danX1lz4f9/St7PgnJ
vcLt+VDrEuH2fBKR+4fb86HW48Lt+bBvCrfnk5j8crg9H2r1NdyeTxLy1K9F
q7KydUfwqeA7wG+B/wbP+EZ6ZdmqB/hs8P3gD8CjvZWeXbaqBd4PfBH4EfBn
4HEipOeVrRuADwVfDn4S/DV4onfSC8tWzcE1+Frwc+AfwJO9l15Ktm4DPgF8
M/hV8G/gaSOll5OtOoNPA98Ffhv8L3imD9KrytY9weeCHwB/BB79o/ScsnVt
8AHgi8GDwZ+Dx/0kPZ9s1Qh8GPgK8FDwt+CJP0svKlu3AB8Nvg78AvhH8BRf
pPvKVu3AJ4JvBb8G/gPc+6v0CrJ1F/AZ4LvB74L/A8/yTXo12ao3+Dzwg+Bh
4DG/S88lW9UFHwi+FPwY+EvweD+kF5CtG4OPAF8Jfho8AjzpT+nFZKtW4GPA
N4BfBP8MnvKX9DKydXvwyeDbwG+A/wRP/1t6RdmqG/hM8L3g98Cj/JGeVbaq
Ad4HfAH4IfAn4LH+Ss8jW9cDHwweAH4C/BV4gn/SC8pWTcFHgq8GPwP+HtxT
5RNeQrZuDT4OfCP4ZfAv4KmjSPeTrTqCTwHfAX4T/Dd4hqj5+PvbOOyVTdP3
q+zdTZvvP9OyzzZN3x+z7zNtvl3Nz/7ANH3/yh41Wj7+/roCe3bT9P0ye03T
5vvfJuz9TNP35+wLTZvvt7uzHzFN3z+zP43mnI9mjxPdOZ9J7D7RnfOZw94g
unM+AexDojvns459eXTnfHawh0R3zucg++vozvmEsCeM4ZzPRfbCMZzzuc3e
LIZzPk/YdQznfN6yr4nhnM9X9nMx7P1JSh4pWyWLKb2kbNUGfDz4ZvAr4N/A
08SSXk627mS60F3f7iM8yae5PRn5TtP093Kp1W3T9H5lycn/2PXB1CpTbGd9
wxTkVWI7619Tq56x7f1OST7HrvdKRX7Art9IrR/a9X6pyaPHcdbfoNY54jjr
u6Yhrx3H7j8teX/T9PM4tVpsmn5+Zj9qmn6eZ39umn7+9ib38Mjn/D6AWuUz
TT+/szf0sMdLRz7Mwx6PWgd62OOxh3rY47G/8bDHS0+eOK49HrUuEtcej71F
XHu8DOSjbGtqtc7tGcnPu51afXR7JvLk8axTK1/bKjN5W7dTq4luz0K+Rba6
Bv7dNP37AXbv+Pmcfz/BXt40/fsR9i6m6d8HZCWfHt8en1rtju/MO89+x85L
mY38n53XkVpnTuDM28VeLYHdX3byXrZ1TvJ5bs9DHpTAzqNWYQns8dljJLT7
9SHPldCeH7Wuk9DOy0s+MKGdR62XJLTz2I+55+Ujf+GeR63iJbLz8pPnl60a
gw8HXwl+CjwCPEli6cVk65bgY8DXg18E/wSeMon00rJVe/BJ4NvAr4P/BE+X
VHpF2bor+EzwPeD3wJWn9KyydXXwPuDzwQ+BPwaP5SU9t2xVD3wQeAD4cfBX
4PGTSS8oWzcBHwm+CvwM+Dtwz+TSi8tWrcHHgm8EvwT+BTxVinz89+DKsPuZ
Nn8v7gl7B9Pmz8ONL0A+xbT5e3M5C5JvN23+Ht0FanXTtPl7dX0Kkf8ybf7c
nFdh8gwp8/Hfu9tPrSuZNn/urkUR8u4p7f6Kks+SrfaB3wePmkp6NtmqJnhf
8IXgh8GfgsdOLd1Htq4PPgR8GXgIeDh4wjTSC8lWzcD/A18DfhY8EtwrrfSS
srU/+HjwTeBXwL+Cp/GWXla26gQ+FXwn+C3wP+AZ00mvIlv3AJ8Dvh/8IXi0
9NJzyNa1wPuDLwI/Cv4M3COD9LyyVUPwoeCB4CfB34Anyii9iGzdHHwU+Frw
8+AfwJNnkl5KtmoLPgF8C/hV8O/gaTNLLy9bdwafDr4L/A74X/DMWaRXla16
gc8FDwJ/BB4jq/ScslUd8AHgS8CDwV+Ax80mPb9s3Qh8OPgK8FPgb8GTZJde
VLZqCT4afD34BfBP4ClySC8tW7cDnwS+Ffw6+A/wdDmlV5CtuoLPAN8Dfhdc
5ZKeRbaqDt4bfD74QfDH4DFzS88tW9cFHwS+FPw4+Evw+HmkF5CtmoCPAF8F
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
D74I/Cj4M3CPfdLzylYNwYeCB4KfBH8Dnmi/9CKydXPwUeBrwc+DfzA9fWTV
A0vZkx9w9dDuqfL7tiQvZbpjszfrH1CrtqbrVjmUfmQr8gn/c3WPUXYsawCG
Kye2bdv2xLZt204qtm3bdjKxbdu2kzNVtXvW+t6+v97zfN1dXWdyc5O1727T
+XOMnZGggfW1plMnqx9pv2190XS0KBlHNGho/ftO7/6NrMfflcn3/0eyrYqY
tp83c95yl29eOx/nza9yvtmbv+L8hjevGlv/G3i+bZVst+dNrJfa7d3ftuqw
27u/8ynevHa+y5tf5fyeN3/FefA93vWbWk8T2M2tVwzslta7me4V/kn2aLbV
bNOf4pxsk8q5v+m2qdYvzOf8qekn2adcq+g87N6Arl+kV/hmzjObvl4x4J84
r266UkCOdd7XdMDV1y90vtB0wOlPtjo/ZnrvsI9xTjp/bTpHwO3uOo+yL6DX
L9wz7KPznKYDrrYnRCvr9UwvCuA4tvUg03EDbpjR+QrTAZerX8T5GdMBjz+l
hvNPpocH3L6N81j7vf13XmC/b7+mOG+y37dfK5yP3O/brz3O1+337dd555f3
+/brifMf+3379cN5Qn/ffoVvbb2ov2+/EttWrf19+5Xd+Xh/336Vdr7V37df
9Z3f9PftV2fn6oBvv4Y5T37At1+znJc54Nuv9c47HvDt1yHn0w749uua890H
fPv1yvmDA97PVxvrIQ6KVulk60rwHvA58IPwZ/Dwh6Rnka1qwvvBF8OPw9/C
ox6Wnlu2rg8fAl8JPwf/DI9zRHpB2aoZfBR8A/wK/Bc80VHpxWXrNvCJ8G3w
2/Agx6SnlK3LwjvDp8P3wh/CQx2Xnl62qgLvCZ8HPwR/AY9wQno22boWfAB8
Cfwk/B08+knpeWSrhvCh8NXw8/Cv8LinpBeSrZvDx8A3wq/Bf8OTnJZeQrZq
B58E3wG/Aw96Rnoq2ao8vAt8Jnwf/DE89FnpGWXrqvDe8PnwI/CX8EjnpGeX
rerANXwZ/BT8AzzGeen5ZOtG8OHwNfCL8G/w+BekF5atWsLHwjfDr8P/wpNe
lF5Ktm4PnwLfCb8HD3ZJehrZugK8G3wW3B/+BB72svRMslV1eB/4QvhR+Gt4
5CvSc8rWdeGD4MvhZ+Af4bGuSs8vWzWBj4Cvg1+C/4AnuCa9qGzdCj4evgV+
E/4Pnvy69NKyVUf4VPhu+H14iBvS08pWleDd4XPgB+DP4OFuSs8iW9eA94Mv
gh+Hv4FHvSU9l2xVHz4YvhJ+Fv4ZHvu29IKydVP4KPh6+BX4T3iiO9KLme63
J/3seM7bmM70uX2aSc4nmH6cdsPOkG2tbzM9vcmHkv1s61umS8/Ocv2j8yB3
A/rvxS4tWraznsL0xjBbv96xrcqablb469Aq7a13Mh2rd87oJ2yr6aZPbey5
pEAH63tMD3ixM+sW2+qh6SyJfx1M3dF6yHsB/bRmvsrzbav0pmdO6PcgWifr
lU2XO76v4yjbquc97/k7W5/rtZ9tdchr7fy51/7OI9z3zu9iPavXfrZVLa+1
8/5e+ztfEnh+V+snAs+3rd4Fnu882gPvfOd5vFbdrDfw2s+2Guq1dr4q8Hzn
5wPP7279i2n7/jDbKu7DTL7v73buZ9q+P8x5c9P2+7+djzZt3x/Ww/pG0/b7
w23rqw+99Tj//dB3v23OEz/y3e+N8xKPfPdL1tN620e++9WxrSY98t1vkvPt
j3z3O+H8ziPv+XpZ/+9xQMffcKtJetsqlek8Dbcfq+28nOkakSanHeG8i+mu
/u3Hb3U+w/TEjqU/PXS+z/S6RClqROpt/ZHpU+eD7M5vW4V+EtDP9Z0EbZxn
MB08885BM5xXNZ3kwZSnR5z3Mu1nbuB8vul6hcquS9TH+mHTvT+kjFLetnpp
evrCoN37OI/4NKC3VLp3Y4Xz7KYvBCznqvPapt9unLYwaF/r2nTYxp2DZ7at
l5pOFaV8q/rOT5kudjD1mdHO35s24zudx3hmfj2aB3Ce1/Sci3u+R+1nvZHp
gKetW8i2Hmb6apaAHXW+xvSnhxWSzXF+wbTZ/hPOv5lOXyTk66/O4z33/n32
t15Ytm4BHwvfBL8O/wNP+kJ6SdmqPXwyfCf8LjzYS+mpZasK8K7wWfD98Cfw
MK+kZ5Ktq8H7wBfAj8JfwSO/lp5DtqoLHwhfDj8N/wiP+UZ6ftm6MXwEfC38
Evw7PMFb6UVkq1bwcfAt8Bvwf/Bk76SXlq07wKfCd8Hvw4O/l55Wtq4I7w6f
DT8AfwoP90F6ZtmqBrwvfBH8GPwNPMpH6blk63rwwfAV8LPwT/DYn6QXkK2a
wkfC18Mvw3/CE36WXky2bg2fAN8KvwVXX6SnkK3LwDvBp8H3wB/AQ36Vnk62
qgzvAZ8LPwh/Dg//TXpW2bomvD98MfwE/C082nfpuWWrBvAh8FXwc/Av8Dg/
pPvJ1s3go+Eb4Ffhv+CJf0ovLlu1hU+Eb4ffhv/3S3pK2aocvDN8Bnwv/BE8
1G/pGWTrKvBe8Hnww/AX8Ih/pGeTrWrDB8CXwk/C38Oj/5WeV7ZuCB8GXw2/
AP8Kj/dPeiHZqgV8DHwT/Br8DzyJyiy8pGzdDj4ZvgN+Fx40iPTUsnV5eFf4
TPh++GN4mP+kZ5StqsF7wxfAj8BfwSMFlZ5Dtq4DHwhfBj8N/wCPGUx6Ptmq
MXy46d2hGxco53yt6bkT27ab6/yiaR27x5w3zr+bbrxw4Kn8A6zHDx7QxVKP
+TnWtipiOuXGaanvOm9pOkzuhTUzaOvjTL/2Xz28v2292fS5ktu2nXV+w/TG
8/5PEgy0/tf0lJqnonWwrZKFCOju968U2e+8lOlaLe93jjjIegfTed+/XNjA
tp5iOkHPL+fXO98Vwnv+wdbvBfYQ68FDej3UeprAHma9YmAPt94tsEdYnx3Y
I637B/Yo608De7T1sKEyu/fHZLCtMps274Op57y66YxmwHlf0+b9MrucLzRt
3hfz3Pkx0+Z9NTHHWH9t2rx/pphtFSV0Zvc+ma7Oc5o277NZ5LyeafN+mgvO
B4X21jvW+orQ3npt6zOhvfU6/xTaW6/zWGG89TovEMZbr/MmYbz1jrM+Moy3
Xtt6XRhvvc4vh/HW6/xHGG+9zhOG9dY73npR0/b7jmyr1qbt9yNNsD7etP08
iG211bT9/qWJ1m+att+PZDvgf4Bn9n2+ZJL15Kbt9y/ZVmVM2+9rmmy9Yzhv
PVOsTwvnrce23h3OW89U6w/CeeuxrUOE99YzzXq68N56bOtK4b31TLfeI7y3
Htt6TnhvPTOsHwzvrWem9Wde+9tW4SP4Ws+ynsVrv9nWa3qt5ljv57W/bbU4
8Py51o8Hnj/P+tvA8+dbjxpRtMotW9eHD4GvhJ+Df4bHiSS9oGzVDD4KvgF+
Bf4Lniiy9OKydRv4RPg2+G14kCjSU8rWZeGd4dPhe+EP4aGiSk8vW1WB94TP
gx+Cv4BHiCY9m2xdCz4AvgR+Ev4OHj269DyyVUP4UPhq+Hn4V3jcGNILydbN
4WPgG+HX4L/hSWJKLyFbtYNPgu+A34EHjSU9lWxVHt4FPhO+D/4YHjq29Iyy
dVV4b/h8+BH4S3ikONKzy1Z14Bq+DH4K/gEeI670fLJ1I/hw+Br4Rfg3ePx4
0gvLVi3hY+Gb4dfhf+FJ40svJVu3h0+B74TfgwdLID2NbF0B3g0+C+4PfwIP
m1B6JtmqOrwPfCH8KPw1PHIi6Tll67rwQfDl8DPwj/BYiaXnl62awEfA18Ev
wX/AEySRXlS2bgUfD98Cvwn/B0+eVHpp2aojfCp8N/w+PEQy6Wllq0rw7vA5
8APwZ/BwyaVnka1rwPvBF8GPw9/Ao6aQnku2qg8fDF8JPwv/DI+dUnpB2bop
fBR8PfwK/Cc8USrpxWSrNvAJ8G3wW/AgqaWnkK3KwjvBp8P3wB/CQ6aRnl62
rgzvCZ8LPwR/Do+QVnpW2aoWvD98CfwE/B08WjrpeWTrBvCh8FXw8/Av8Ljp
pfvJVs3ho+Eb4Vfhv+GJM0gvIVu3hU+Cb4ffgf+XUXoq2bocvAt8Bnwf/BE8
dCbpGWSrqvBepkekbP8hk/P5pitfyBKhifPDpuP1+ZZmqvOXpp8m21PimPOI
mQN6w1nd9Ifz7KZ79Sw2MO0C67VNF0kSZl4920qbDn/67K7xzpeavtZt8rUD
zk+ZXpCw5udPzt+bbn0iXuQUC63HyBLQ2bo8SF/Tts5r+m+8ZaVHOW9k+tjR
1i32OB9memLHjEPeOl9juk6czwsSLbJ+wXTywzv2Vratvpl+167fzSHO42UN
6B0xC3/b5ryw6UEHQkR74byF6bJtTmWKu9j6WNMxok8oV8623mT63r6qrQc4
v256ZcvYwzc6/2O6S5S7ix85T5otoPPvWeQffYn1kqZDNG9xp4Rt1d70+Yjp
fvZyPtn0rJ3vY6xxvtN00yZbs951ftd0+vC9K0Zaaj1Y9oD+tq1Au8K2dWrT
BxoGHdXVeQXTo8McX7bMeVfT1baMOXTd+SzTCepXuh9mmfX9pp+HjPEnn231
xPSmjTdjd3AeJkdA960zP8dC55lMFwvetMol59VMR1yfqmPw5db7mL5R882Y
nLb1AtOL/9u0spXzo6bbrul+dLbzV6ZzVM/76IzzyDm9n+8V1nPIVnXhA+HL
4afhH+Exc0nPL1s3ho+Ar4Vfgn+HJ8gtvYhs1Qo+Dr4FfgP+D54sj/TSsnUH
+FT4Lvh9ePC80tPK1hXh3eGz4QfgT+Hh8knPLFvVgPeFL4Ifg7+BR8kvPZds
XQ8+GL4Cfhb+CR67gPQCslVT+Ej4evhl+E94woLSi8nWreET4Fvht+DKT3oK
2boMvBN8GnwP/AE8ZCHp6WSryvAe8Lnwg/Dn8PCFpWeVrWvC+8MXw0/A38Kj
FZGeW7ZqAB8CXwU/B/8Cj1NUup9s3Qw+Gr4BfhX+C564mPTislVb+ET4dvht
+H/FpaeUrcrBO8NnwPfCH8FDlZCeQbauAu8Fnwc/DH8Bj1hSejbZqjZ8AHwp
/CT8PTx6Kel5ZeuG8GHw1fAL8K/weKWlF5KtWsDHwDfBr8H/wJOUkV5Stm4H
nwzfAb8LD1pWemrZujy8K3wmfD/8MTxMOekZZatq8N7wBfAj8FfwSOWl55Ct
68AHwpfBT8M/wGNWkJ5PtmoMHw5fC78I/w6PX1F6Edm6JXwcfDP8BvwvPFkl
6aVkqw7wKfBd8Hvw4JWlp5GtKsK7wWfD/eFP4WGrSM8sW1eH94UvhB+Dv4ZH
qSo9p2xVDz4IvgJ+Bv4JHqua9AKydRP4SPg6+GX4D3jC6tKLylat4ePhW+E3
4aqG9OSyVRl4R/g0+G74A3iImtLTydaV4D3gc+AH4c/g4WtJzyJb1YT3gy+G
HzdtPt8wx/lb0/bzDCutR62d2ff9G7ZVbtP28wqrrNc3bT4vEWG19SGm7ecj
bOuVps3nIUqssX7OtP38g239ubZvPXqt9Th1fOuJt856wTq+9eywrZrV8a2n
2nrro+r41vPBttpQx7eecRusX6njW0+ajdZ/1fGt55htnaiubz1NNlkvXtfb
n83W25juZw7baqLpXz8DDufbTPc0xxbrt01//RJw2NZB6gV0F3NstZ7S9If3
AYdtXdZ0e3Nss97Z9OtXAYdtPd10K3Nst77X9LOnAYdt/dD0kfKvD5ffYT1U
/YDOuzFq3o22dXrTJqPutF7FdMrujVN2t617mp53feTc687nmY5mLrDL+iHT
o+YGDNhWL+p7+7PbeoQGolU22boWfAB8Cfwk/B08ekPpeWSrhvCh8NXw8/Cv
8LiNpBeSrZvDx8A3wq/Bf8OTNJZeQrZqB58E3wG/Aw/aRHoq2ao8vAt8Jnwf
/DE8dFPpGWXrqvDe8PnwI/CX8EjNpGeXrerANXwZ/BT8AzxGc+n5ZOtG8OHw
NfCL8G/w+C2kF5atWsLHwjfDr8P/wpO2lF5Ktm4PnwLfCb8HD9ZKehrZugK8
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
8FfwyGek55Ct6sIHwpfDT8M/wmOelZ5ftm4MHwFfC78E/w5PcE56EdmqFXwc
fAv8BvwfPNl56aVl6w7wqfBd8Pvw4Bekp5WtK8K7w2fDD8CfwsNdlJ5ZtqoB
7wtfBD8GfwOPckl6Ltm6HnwwfAX8LPwTPPZl6QVkq6bwkfD18Mvwn/CEV6QX
k61bwyfAt8JvwdVV6Slk6zLwTvBp8D3wB/CQ16Snk60qw3vA58IPwp/Dw1+X
nlW2rgnvD18MPwF/C492Q3pu2aoBfAh8Ffwc/As8zk3pfrJ1M/ho+Ab4Vfgv
eOJb0ovLVm3hE+Hb4bfh/92WnlK2KgfvDJ8B3wt/BA91R3oG2boKvBd8Hvww
/AU84l3p2WSr2vAB8KXwk/D38Oj3pOeVrRvCh8FXwy/Av8Lj3ZdeSLZqAR8D
3wS/Bv8DT/JAeknZuh18MnwH/C486EPpqWXr8vCu8Jnw/fDH8DCPpGeUrarB
e8MXwI/AX8EjPZaeQ7auAx8IXwY/Df8Aj/lEej7ZqjF8OHwt/CL8Ozz+U+lF
ZOuW8HHwzfAb8L/wZM+kl5KtOsCnwHfB78GDP5eeRraqCO8Gnw33hz+Fh30h
PbNsXR3eF74Qfgz+Gh7lpfScslU9+CD4CvgZ+Cd4rFfSC8jWTeAj4evgl+E/
4AlfSy8qW7WGj4dvhd+EqzfSk8tWZeAd4dPgu+EP4CHeSk8nW1eC94DPgR+E
P4OHfyc9i2xVE94Pvhh+HP4WHvW99NyydX34EPhK+Dn4Z3icD9ILylbN4KPg
G+BX4L/giT5KLy5bt4FPhG+D34YH+SQ9pWxdFt4ZPh2+F/4QHuqz9PSyVRV4
T/g8+CH4C3iEL9Kzyda14APgS+An4e/g0b9KzyNbNYQPha+Gn4d/hcf9Jr2Q
bN0cPga+EX4N/hue5Lv0ErJVO/gk+A74HXjQH9JTyVbl4V3gM+H74I/hoX9K
zyhbV4X3hs+HH4G/hEf6JT27bFUHruHL4KfgH+AxfkvPJ1s3gg+Hr4FfhH+D
x/8jvbBs1RI+Fr4Zfh3+F570r/RSsnV7+BT4Tvg9eLB/0tPI1hXg3eCz4P7w
J/CwKovwTLJVdXgf+EL4UfhreOQg0nPK1nXhg+DL4WfgH+Gx/pOeX7ZqAh8B
Xwe/BP8BTxBUelHZuhV8PHwL/Cb8Hzx5MOmlZauO8Knw3fD78BDBpaeVrSrB
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
T2NbdR7p3d/5dG9eO9/rza9y/tCbv+I81Cjv+l+tp5etqsB7wufBD8FfwCOM
lp5Ntq4FH2D6WZllXz47X2L6c/JLvX9+t34ycP6X9XeyVfQx0vPIVg3hQ+Gr
4efhX+Fxx0ovJFs3h4+Bb4Rfg/82PX3UrFc7nScZF9ARQ7b42Oev9RKmRwzO
+iN/kJ3G243zzg9mWk8y3TzgeGpb7TB95nTAEdz6HdNZA47NIawHHR/Qs2YG
HCGtpxrv/XyFsl5+vO96zUNb7zLed72yYazPHO+7Xtaw1vd514sdzvpj73oq
vPXQE7yff9sqo9faeVWv/Z339lpFsD5ftjoCfwmPNFF6dtmqDlzDl8FPwT/A
Y0ySnk+2bgQfDl8Dvwj/Bo8/WXph2aolfCx8M/w6/C886RTppWTr9vAp8J3w
e/BgU6Wnka0rwLvBZ8H94U/gYadJzyRbVYf3gS+EH4W/hkeeLj2nbF0XPgi+
HH4G/hEea4b0/LJVE/gI+Dr4pRne70cRrf+Y4f3+E8l6gpnefBTrRWd681Gt
t5rpzUezPj5wPob1LYEd0/rNwI5l/V9gx7aefJbXcayXlq06mp6UrNSkZM6n
mr61rd2tHM53m04ewKWc3zfdPmCgjvMQswN6e7uAf+A87Wzvv6+cVzJtTp/k
vPts3/2WOJ8z23e/bc4PzPbd74TzZ7N997vlPNwc3/3eOM8yx3ueuNZrzPHd
L4pt1W+O93zOF83xns/58Tne8zl/M8d7PudR53rP5zzXXO/5nNef6z2f88Fz
vedzvnKu93zOz871ns/557ne8zmPPc97PucF53nPF89603ne89lWo+Z5z+d8
/Tzv+Zxfmec9n/Of87znc55ovvd8zovN957PeZv53vM5nzDfez7n2+Z7z+f8
1nzv+ZwHWeA9n/MUC7znc152gfd88a13kq2mw/fAH8JDLpSeXrauDO8Jnws/
BH8Oj7BIelbZqha8P3wJ/AT8HTzaYul5ZOsG8KHwVfDz8C/wuEuk+8lWzeGj
4RvhV+G/4YmXSi8hW7eFT4Jvh9+B/7dMeirZuhy8C3wGfB/8ETz0cukZZKuq
8F7w+fDD8JfwiCukZ5eta8M1fCn8FPw9PMZK6Xllq0bwYfA18Avwb/B4q6QX
lq1bmL508eLFKAmsjzWd3hwJrW8yPWL48OElElm/bvrhgwcPGiW2/sd0voCj
bxLrSVcH9PRpAUdS6yVNf3j//v2GZNbbmy4TcJxKbn2y6WVLly59ksL6ztXe
+lJZv2va/nnBtgq2Jovvzx/OU5u2f15Ibb2CafvnD9u66xrvemmsz1rjXc+2
3h94PedPAq+X1nqYtd71bKtMa73rpbNeLbAzWO8T2JmsLzBt399tWx01bf88
ntn6K2/e37aKvM43Xy2L9RzrfPMvbau667zfb7JaH+jNR89mfbk3v8q2Pu3N
+2W3/tGbv2Jbx1zvm2+dw3r+9d76c1pvvN5bv201wptPk8v6Wm/e37a65M1X
y239uzf/0rZKsMFbfx7rRTZ4689rvdUGb/229Thv3i+f9S3e/BXb+oY33zq/
9X/evCpgPdlG73q2VemN3voKWu+w0Zv3sz41cN623hU4X8j6/cD5wtaDb/Ke
x7ZK67UqYr1ioNtW3QO9qPXZgW5bHQj0YtafBrptFW6z58WtZ/Za21Y1Ar2E
9b6BblstCvSS1o8Fum31JtBLWY+yxXPbKpfXqrT1eoFuWw0O9DLWVwS6bXU2
0Mta/xTotlXsrZ6Xs17Aa21bNQ308tZHBrpttT7QK1i/7LWfbfUzcN55wm3e
z6/zYl6ritZbe61tqwmBXsn61kC3rW4FemXrarvntlUKr1UV62Vkq07wafA9
8AfwkDukp5OtKsN7wOfCD8Kfw8PvlJ5Vtq4J7w9fDD8BfwuPtkt6btmqAXwI
fBX8HPwLPM5u6X6ydTP4aPgG+FX4L3jiPdKLy1Zt4RPh2+G34f/tlZ5StioH
7wyfAd8LfwQPtU96Btm6CrwXfB78MPwFPOJ+6dlkq9rwAfCl8JPw9/Do/tLz
ytYN4cPgq+EX4F/h8Q5ILyRbtYCPgW+CX4P/gSc5KL2kbN0OPhm+A34XHvSQ
9NSydXl4V/hM+H74Y3iYw9IzylbV4L3hC+BH4K/gkY5IzyFb14EPhC+Dn4Z/
gMc8Kj2fbNUYPhy+Fn4R/h0e/5j0IrJ1S/g4+Gb4DfhfeLLj0kvJVh3gU+C7
4PfgwU9ITyNbVYR3g8+G+8OfwsOelJ5Ztq4O7wtfCD8Gfw2Pckp6TtmqHnwQ
fAX8DPwTPNZp6QVk6ybwkfB18MvwH/CEZ6QXla1aw8fDt8JvwtVZ6cllqzLw
jvBp8N3wB/AQ56Snk60rwXvA58APwp/Bw5+XnkW2qgnvB18MPw5/C496QXpu
2bo+fAh8Jfwc/DM8zkXpBWWrZvBR8A3wK/Bf8ESXpBeXrdvAJ8K3wW/Dg1yW
nlK2LgvvDJ8O3wt/CA91RXp62aoKvCd8HvwQ/AU8wlXp2WTrWvAB8CXwk/B3
8OjXpOeRrRrCh8JXw8/Dv8LjXpdeSLZuDh8D3wi/Bv8NT3JDegnZqh18EnwH
/A486E3pqWSr8vAu8JnwffDH8NC3pGeUravCe8Pnw4/AX8Ij3ZaeXbaqA9fw
ZfBT8A/wGHek55OtG8GHw9fAL8K/wePflV5YtmoJHwvfDL8O/wtPek96Kdm6
PXwKfCf8HjzYfelpZOsKpkN+HbdyoPNupnOnLZj4bFXrs0y3bvhuRpzq1v1N
z5k6P1KLGtafmD57ssKIzTWth33gXb+29UyyVXV4H/hC+FH4a3jkh9JzytZ1
4YPgy+Fn4B/hsR5Jzy9bNYGPgK+DX4L/gCd4LL2obN0KPh6+BX4T/g+e/In0
0rJVR/hU+G74fXiIp9LTylaV4N3hc+AH4M/g4Z5JzyJb14D3gy+CH4e/gUd9
Lj2XbFUfPhi+En4W/hke+4X0grJ1U/go+Hr4FfhPeKKX0ovJVm3gE+Db4Lfg
QV5JTyFblYV3gk+H74E/hId8LT29bF0Z3hM+F34I/hwe4Y30rLJVLXh/+BL4
Cfg7eLS30vPI1g3gQ+Gr4OfhX+Bx30n3k62aw0fDN8Kvwn/DE7+XXkK2bguf
BN8OvwP/74P0VLJ1OXgX+Az4PvgjeOiP0jPIVlXhveDz4YfhL+ERP0nPLlvX
hmv4Uvgp+Ht4jM/S88pWjeDD4GvgF+Df4PG+SC8sW7eAj4Vvgl+H/4En/Sq9
pGzVHj4ZvhN+Fx7sm/TUslUFeFf4LPh++BN4mO/SM8nW1eB94AvgR+Gv4JF/
SM8hW9WFD4Qvh5+Gf4TH/Ck9v2zdGD4CvhZ+Cf4dnuCX9CKyVSv4OPgW+A34
P3iy39JLy9Yd4FPhu+D34cH/SE8rW1eEd4fPhh+AP4WH+ys9s2xVA94Xvgh+
DP4GHuWf9FyydT34YPgK+Fn4J3hslVV4AdmqKXwkfD38MvwnPGEQ6cVk69bw
CfCt8Ftw9Z/0FLJ1GXgn+DT4HvgDeMig0tPJVpXhPeBz4Qfhz+Hhg0nPKlvX
hPeHL4afgL+FRwsuPbds1QA+BL4Kfg7+BR4nhHQ/2boZfDR8A/wq/Bc8cUjp
xWWrtvCJ8O3w2/D/QklPKVuVg3eGz4DvhT+ChwotPYNsXQXeCz4Pfhj+Ah4x
jPRsslVt+AD4UvhJ+Ht49LDS88rWDeHD4KvhF+Bf4fHCSS8kW7WAj4Fvgl+D
/4EnCS+9pGzdDj4ZvgN+Fx40gvTUsnV5eFf4TPh++GN4mIjSM8pW1eC94Qvg
R+Cv4JEiSc8hW9eBD4Qvg5+Gf4DHjCw9n2zVGD4cvhZ+Ef4dHj+K9CKydUv4
OPhm+A34X3iyqNJLyVYd4FPgu+D34MGjSU8jW1WEd4PPhvvDn8LDRpeeWbau
Du8LXwg/Bn8NjxJDek7Zqh58EHwF/Az8EzxWTOkFZOsm8JHwdfDL8B/whLGk
F5WtWsPHw7fCb8JVbOnJZasy8I7wafDd8AfwEHGkp5OtK8F7wOfAD8KfwcPH
lZ5FtqoJ7wdfDD8OfwuPGk96btm6PnwIfCX8HPwzPE586QVlq2bwUfAN8Cvw
X/BECaQXl63bwCfCt8Fvw4MklJ5Sti4L7wyfDt8LfwgPlUh6etmqCrwnfB78
EPwFPEJi6dlk61rwAfAl8JPwd/DoSaTnka0awofCV8PPw7/C4yaVXki2bg4f
A98Ivwb/DU+STHoJ2aodfBJ8B/wOPGhy6alkq/LwLvCZ8H3wx/DQKaRnlK2r
wnvD58OPwF/CI6WUnl22qgPX8GXwU/AP8BippOeTrRvBh8PXwC/Cv8Hjp5Ze
WLZqCR8L3wy/Dv8LT5pGeinZuj18Cnyn6aprksWMXMf6PdMr5+Q6l6Ku9WBp
A/rfmLLD89WznsZ01X4NC1aub72C6VXtun5r0cB6Nztfb8T6fg2tzzJdrfyc
FpMbWfe38wU2JFzZ2PoT0yrj4Wv7mlgPm87MJ7w+/nJT65lMr474usTLZtar
p/PW38J6H6/9bKuFXmvnR732d/468PyW1iOn9863rXJ6rZ3X9drf+SCvVSvr
y2WrM/CP8FgZpOeXrZrAR8DXwS/Bf8ATZJReVLZuBR8P3wK/Cf8HT55JemnZ
qiN8Knw3/D48RGbpaWWrSvDu8DnwA/Bn8HBZpGeRrWvA+8EXwY/D38CjZpWe
S7aqDx8MXwk/C/8Mj51NekHZuil8FHw9/Ar8JzxRdunFZKs28AnwbfBb8CA5
pKeQrcrCO8Gnw/fAH8JD5pSeXrauDO8Jnws/BH8Oj5BLelbZqha8P3wJ/AT8
HTxabul5ZOsG8KHwVfDz8C/wuHmk+8lWzeGj4RvhV+G/4YnzSi8hW7eFT4Jv
h9+B/5dPeirZuhy8C3wGfB/8ETx0fukZZKuq8F7w+fDD8JfwiAWkZ5eta8M1
fCn8FPw9PEZB6Xllq0bwYfA18Avwb/B4ftILy9Yt4GPhm+DX4X/gSQtJLylb
tYdPhu+E34UHKyw9tWxVAd4VPgu+H/4EHqaI9EyydTV4H/gC+FH4K3jkotJz
yFZ14QPhy+Gn4R/hMYtJzy9bN4aPgK+FX4J/hycoLr2IbNUKPg6+BX4D/g+e
rIT00rJ1B/hU+C74fXjwktLTytYV4d3hs+EH4E/h4UpJzyxb1YD3hS+CH4O/
gUcpLT2XbF0PPhi+An4W/gkeu4z0ArJVU/hI+Hr4ZfhPeMKy0ovJ1q3hE+Bb
4bfgqpz0FLJ1GXgn+DT4HvgDeMjy0tPJVpXhPeBz4Qfhz+HhK0jPKlvXhPeH
L4afgL+FR6soPbds1QA+BL4Kfg7+BR6nknQ/2boZfDR8A/wq/Bc8cWXpxWWr
tvCJ8O3w2/D/qkhPKVuVg3eGz4DvhT+Ch6oqPYNsXQXeCz7PdPGY9bpWcn7Y
9JgMu54vcv7C9IViMet9dh6xWkAHjF8o1tp6NtMmp9tWtU0vHh1wAecDTL9Y
NDpDnjbWl5rOGHD50bb1SdMBp8e84/y9acMZ2lqPXt23Xm1b5a3uW+8F5w2r
+9abpJ31YdV96+1qW6+u7lvvEecXqvvWG7O99a/VfettaVvFq+Fb7y7nhWr4
1hu2g/UWNXzrrWdbj6nhW+8655tqePvb0fo12eoPPElN6SVl63bwyfAd8Lvw
oLWkp5aty8O7wmfC98Mfw8PUlp5RtqoG7216xdp/Jzs6X2B6Wq/CXT84P2J6
cLGh8Tt3sv7KdKfIx49+tK0j1Qno+nfCdOzS2XoO02VXlov92bauYzpPtwkH
u3axPtB0ykKX2nyxrZeZjh4+RvTuXa2fNv3fjZr7vtrWH0y/XzK7RY9u1mPW
Deg7He9G+m5b5zN9Kl/iXT27W29sekeopk1+2NbDTS+7vCxc7x7W15qesuDF
1p+29UXTA9uma9Cnp/Xvpjvk6hDqt20dv15A1w22aWPfXtaLmC59/nPtP7Z1
S9M55+QM1r+39XGmk7fsvfavbb3ZdJRse6sP6GP9Rj1v//ta/ytbJasvvZRs
1QE+Bb7L9PryDY6udn7P9KQDS3o37Wc9eIOA7pbtZYb4/a2nMV1zecZHV2yr
iqbzxOk2fdwA691Mxx+7q0wJbX12A+9+A637y1ZP4WEbSs8sW1eH94UvhB+D
v4ZHaSQ9p2xVDz4IvgJ+Bv4JHqux9AKydRP4SPg6+GX4D3jCJtKLylat4ePh
W+E34aqp9OSyVRl4R/g0+G74A3iIZtLTydaV4D3gc+AH4c/g4ZtLzyJb1YT3
gy+GH4e/hUdtIT23bF0fPgS+En4O/hkep6X0grJVM/go+Ab4FfgveKJW0ovL
1m3gE+Hb4LfhQVpLTylbl4V3hk+H74U/hIdqIz29bFUF3hM+D34I/gIeoa30
bLJ1LfgA+BL4Sfg7ePR20vPIVg3hQ+Gr4efhX+Fx20svJFs3h4+Bb4Rfg/+G
J+kgvYRs1Q4+Cb4DfgcetKP0VLJVeXgX+Ez4PvhjeOhO0jPK1lXhveHz4Ufg
L+GROkvPLlvVgWv4Mvgp+Ad4jC7S88nWjeDD4WvgF+Hf4PG7Si8sW7WEj4Vv
hl+H/4Un7Sa9lGzdHj4FvhN+Dx6su/Q0snUFeDf4LLg//Ak8bA/pmWSr6vA+
8IXwo/DX8Mg9peeUrevCB8GXw8/AP8Jj9ZKeX7ZqAh8BXwe/BP8BT9BbelHZ
uhV8PHwL/Cb8Hzx5H+mlZauO8Knw3fD78BB9paeVrSrBu8PnwA/An8HD9ZOe
RbauYTpyrton+zvvZ3pb8om3/zpfZLp21ONv+w+yftz0PxXwH9v6jeklb7NH
HTDYetT+AV3ydtvk/2zrXKbfnFicc8AQ6/VNT9p+s9Q/23qw6RxLI9cdMNT6
StO3JpVs/8+2Pmta6wF6wDDrn00na79t0j/bOvaAgD5R582SAcOtFzTdrlSy
7f9s66amo+Ssc2LACOujTG9PNunWP9t6vek6UU68GTDS+pUB3v6Msv7Taz/b
KpH2tXZezGt/5228VqOtT/Daz7baFni+81uB5zsPMtA7f4z1FKbt+3Fsq7Km
7fdRO+9k2r6fx/l00/b7q8da3+NdT9tWD73rnXYecpDverHHWU8/yHe95rZ1
5UG+62123nOQt77x1ufKVofgz+ERBkvPKlvVgveHL4GfgL+DRxsiPY9s3QA+
FL4Kfh7+BR53qHQ/2ao5fDR8I/wq/Dc88TDpJWTrtvBJ8O3wO/D/hgd0xVMj
62Z3nmq45xOslzPde96zXglsqy6mP+c79ymf8xmm7fsznO8z/bxXwAnOH5lu
HGtYoxnOQ4/I6ns/hvMMpu33fTuvajrg6uc+Oe9l2r7fY6L1+aYPZQp3KJNt
fdh0/oATKjh/adq+v8N5xJEBnTlgfIzz7Kbt9387r23avp/DuTYdsPp5z5wv
NR2w/FghJlk/Zdq+X8S2fm864PLhijiPMSqgA8aHNXKed5T369N5o1G+/Zzn
fNgo337ucb5mlG8/bzm/MMq3nz+cfxvl289Yk63HG+3bzxy2VeHRvv2s5rzF
aN9+dnE+drRvPyc53zTat58bnF8f7dvPc87/jPbt5xvnScf49jPcFOslx/j2
M41t1X6Mbz9LOZ88xrefLZzvHOPbz2HO747x7ecS58HG+vbzkPPUY337+cB5
hbHez+dU611lq1nw/fAn8DDjpGeSravB+8AXwI/CX8Ejj5eeQ7aqCx8IXw4/
Df8IjzlBen7ZujF8BHwt/BL8OzzBROlFZKtW8HHwLfAb8H/wZJOkl5atO8Cn
wnfB78ODT5aeVrauCO8Onw0/AH8KDzdFembZqga8L3wR/Bj8DTzKVOm5ZOt6
8MHwFfCz8E/w2NOkF5CtmsJHwtfDL8N/whNOl15Mtm4NnwDfCr8FVzOkp5Ct
y8A7wafB98AfwEPOlJ5OtqoM7wGfCz8Ifw4PP0t6Vtm6Jrw/fDH8BPwtPNps
6bllqwbwIfBV8HPwL/A4c6T7ydbN4KPhG+BX4b/giedKLy5btYVPhG+H34b/
N096StmqHLwzfAZ8L/wRPNR86Rlk6yrwXvB58MPwF/CIC6Rnk61qwwfAl8JP
wt/Doy+Unle2bggfBl8NvwD/Co+3SHoh2aoFfAx8E/wa/A88yWLpJWXrdvDJ
8B3wu/CgS6Snlq3Lw7vCZ8L3wx/DwyyVnlG2qgbvDV8APwJ/BY+0THoO2boO
fCB8Gfw0/AM85nLp+WSrxvDhpqttDDWnn/O1gT7N+kXZ6js8/grpRWTrlvBx
8M3wG/C/8GQrpZeSrTrAp8B3we/Bg6+Snka2qgjvBp8N94c/hYddLT2zbF0d
3he+EH4M/hoeZY30nLJVPfgg+Ar4GfgneKy10gvI1k3gI+Hr4JfhP+AJ10kv
Klu1ho+Hb4XfhKv10pPLVmXgHeHT4LvhD+AhNkhPJ1tXgveAz4EfhD+Dh98o
PYtsVRPeD74Yfhz+Fh51U0BvOdk9RGjnuU2XH5UiXRTn9U2/KHW1UlznQ0wP
Dj2sRzLnK00nOJF9bnrn50zvGPHkYA7nn01XKTn1eUHncTYH9JuQxSKUcl7Q
9Ihjn7NWdt7MdNLhS2rVcT7K9N7iVQc0db7BdM0QwZa2c37F9Mcjm092d/7L
9NihTd4PcJ5oS0CnLBY1xkjnxU0fDHYo7yTnbUzXPdy50WznE01/G5xk+BLn
20xPLHJxzVrnt02nCzro4jbnQbYG9NGDmb/vd57SdKNBD+KfcF7W9C9zBeed
TU8LUqjVLefTTWc68H7cY+d7TZ/SC7a8cf7QdDO/ije/Og+1zfv3N916etmq
CrwnfB78EPwFPMJ26dlk61rwAfAl8JPwd/DoO6Tnka0awofCV8PPw7/C4+6U
Xki2bg4fA98Ivwb/DU+yS3oJ2aodfBJ8B/wOPOhu6alkq/LwLvCZ8H3wx/DQ
e6RnlK2rwnvD58OPwF/CI+2Vnl22qgPX8GXwU/AP8Bj7pOeTrRvBh8PXwC/C
v8Hj75deWLZqCR8L3wy/Dv8LT+ovvZRs3R4+Bb4Tfg8e7ID0NLJ1BXg3+Cy4
P/wJPOxB6Zlkq+rwPvCF8KPw1/DIh6TnlK3rwgfBl8PPwD/CYx2Wnl+2agIf
AV8HvwT/AU9wRHpR2boVfDx8C/wm/B88+VHppWWrjvCp8N3w+/AQx6Snla0q
wbvD58APwJ/Bwx2XnkW2rgHvB18EPw5/A496Qnou2ao+fDB8Jfws/DM89knp
BWXrpvBR8PXwK/Cf8ESnpBeTrdrAJ8C3wW/Bg5yWnkK2KgvvBJ8O3wN/CA95
Rnp62boyvCd8LvwQ/Dk8wlnpWWWrWvD+8CXwE/B38GjnpOeRrRvAh8JXwc/D
v8DjnpfuJ1s1h4+Gb4Rfhf+GJ74gvYRs3RY+Cb4dfgf+30XpqWTrcvAu8Bnw
ffBH8NCXpGeQrarCe8Hnww/DX8IjXpaeXbauDdfwpfBT8PfwGFek55WtGsGH
wdfAL8C/weNdlV5Ytm4BHwvfBL8O/wNPek16SdmqPXwyfCf8LjzYdempZasK
8K7wWfD98CfwMDekZ5Ktq8H7wBfAj8JfwSPflJ5DtqoLHwhfDj8N/wiPeUt6
ftm6MXwEfC38Evw7PMFt6UVkq1bwcfAt8Bvwf/Bkd6SXlq07wKfCd8Hvw4Pf
lZ5Wtq4I7w6fDT8AfwoPd096ZtmqBrwvfBH8GPwNPMp96blk63rwwfAV8LPw
T/DYD6QXkK2awkfC18Mvw3/CEz6UXky2bg2fAN8KvwVXj6SnkK3LwDvBp8H3
wB/AQz6Wnk62qgzvAZ8LPwh/Dg//RHpW2bomvD98MfwE/C082lPpuWWrBvAh
8FXwc/Av8DjPpPvJ1s3go+Eb4Ffhv+CJn0svLlu1hU+Eb4ffhv/3QnpK2aoc
vDN8Bnwv/BE81EvpGWTrKvBe8Hnww/AX8IivpGeTrWrDB8CXwk/C38Ojv5ae
V7ZuCB8GXw2/AP8Kj/dGeiHZqgV8DHwT/Br8DzzJW+klZet28MnwHfC78KDv
pKeWrcvDu8JnwvfDH8PDvJeeUbaqBu8NXwA/An8Fj/RBeg7Zug58IHwZ/DT8
AzzmR+n5ZKvG8OHwtfCL8O/w+J+kF5GtW8LHwTfDb8D/wpN9ll5KtuoAnwLf
Bb8HD/5FehrZqiK8G3w23B/+FB72q/TMsnV1eF/4Qvgx+Gt4lG/Sc8pW9eCD
4CvgZ+Cf4LG+Sy8gWzeBj4Svg1+G/4An/CG9qGzVGj4evhV+E65+Sk8uW5WB
d4RPg++GP4CH+CU9nWxdCd4DPgd+EP4MHv639CyyVU14P/hi+HH4W3jUP9Jz
y9b14UPgK+Hn4J/hcf5KLyhbNYOPgm+AX4H/gif6J724bN0GPhG+DX4bHkRl
E55Sti4L7wyfDt8LfwgPFUR6etmqCrwnfB78EPwFPMJ/0rPJ1rXgA+BL4Cfh
7+D/d3FPYZI0WxiFY2zbtm3btm3bMbZt27Zt255/bON0ZXb2c75Vd6vfqF1Z
WbtvM1oQ9dzapiF8KHw1/AL8KzxOUPVC2rY5fAx8I/w6/Dc8cTD1EtqmHXwS
fAf8LjxIcPWU2qY8vAt8Jnwf/Ak8VAj1DNq2Krw3fD78KPwlPGJI9Wzapg7c
wpfBT8M/wKOHUs+rbRvBh8PXwC/Bv8HjhVYvrG1awsfCN8NvwP/Ck4RRL6Vt
28OnwHfC78ODhlVPrW0rwLvBZ8EPwJ/Cw4RTz6htqsP7wBfCj8FfwyOFV8+h
bevCB8GXw8/CP8JjRlDPp22awEfA18Evw3/A40dUL6ptW8HHw7fAb8H/wZNF
Ui+tbTrCp8J3wx/Ag0dWT6NtKsG7w+fAD8Kfw8NGUc+sbWvA+8EXwU/A38Cj
RFXPqW3qwwfDV8LPwT/DY0VTL6Btm8JHwdfDr8J/whNGVy+mbdrAJ8C3wW/D
A8VQT65tysI7wafD98AfwUPEVE+nbSvDe8Lnwg/DX8DDx1LPom1qwfvDl8BP
wt/Bo8ZWz61tG8CHwlfBL8C/wOPEUS+obZrDR8M3wq/Bf8MTxVUvoW3bwifB
t8PvwgPHU0+pbcvBu8BnwPfBH8NDxVdPr22qwnvB58OPwF/CIyRQz6Zta8Mt
fCn8NPw9PHpC9TzaphF8GHwN/CL8GzxuIvXC2rYFfCx8E/wG/A88SWL1ktqm
PXwyfCf8HjxoEvVU2qYCvCt8Fnw//Ck8dFL1jNq2GrwPfAH8GPwVPFIy9eza
pi58IHw5/Az8IzxGcvV82rYxfAR8Lfwy/Ds8fgr1ItqmFXwcfAv8JvwfPGlK
9dLatgN8KnwX/AE8WCr1NNq2Irw7fDb8IPwZPGxq9Uzapga8L3wR/Dj8DTxy
GvWc2rYefDB8Bfwc/BM8Vlr1/NqmKXwkfD38CvwnPEE69WLatjV8Anwr/Dbc
pFdPrm3LwDvBp8H3wB/CQ2RQT6ttKsN7wOfCD8FfwMNlVM+ibWvC+8MXw0/C
38KjZlLPpW0awIfAV8HPw7/AY2dWL6htm8FHwzfAr8F/wRNlUS+ubdrCJ8K3
w+/AA2dVT6FtysE7w2fA98Ifw0NmU0+vbavAe8HnwY/A/4NHyK6eVdvUhg+A
L4Wfgr+HR8uhnkfbNoQPg6+GX4R/hcfNqV5I27SAj4Fvgl+H/4EnzqVeUtu2
g0+G74DfgwfJrZ5K25aHd4XPhO+HP4GHzqOeQdtUg/eGL4Afhb+CR8yrnl3b
1oEPhC+Dn4F/gMfIp55X2zSGD4evhV+Cf4fHy69eRNu2hI+Db4bfhP+FJy2g
XkrbdIBPge+C34cHK6ieWttUhHeDz4YfgD+DhymknknbVof3hS+EH4e/hkcu
rJ5D29SDD4KvgJ+Ff4LHLKKeX9s2gY+Er4Nfgf+AJyiqXlTbtIaPh2+F34Kb
YurJtE0ZeEf4NPhu+EN48OLqabVtJXgP+Bz4IfhzeLgS6pm1TU14P/hi+An4
W3iUkuq5tG19+BD4Svh5+Gd47FLqBbRNM/go+Ab4VfgveMLS6sW1bRv4RPg2
+B14oDLqKbRtWXhn+HT4XvgjeMiy6um0TRV4T/g8+GH4f/Dw5dSzatta8AHw
JfBT8HfwaOXVc2ubhvCh8NXwC/Cv8DgV1Atp2+bwMfCN8Ovw3/DEFdVLaJt2
8EnwHfC78CCV1FNqm/LwLvCZ8H3wJ/BQldUzaNuq8N7w+fCj8JfwiFXUs2mb
OnALXwY/Df8Aj15VPa+2bQQfDl8DvwT/Bo9XTb2wtmkJHwvfDL8B/wtPUj2r
//N9XS/la+f5uzMcb1/d/7yd6fgU73y1WY7v9M6nnu34fe+8meN40BqeO21S
1/De73qFGt5817t551e5Pss7f9X1A955M9fxp772PS47uNMmTM2s7vO1w7qe
0de+52dHcb26r53nbbvep6b/vISuL6zpPy+568e8eWldf+3Ny+J6pFr+83K5
nqOW/7yCrtet5T+vuOuDavnPK+v68lr+86q4ftabV8v1j968hq7HrO0/r7nr
+Wr7z2vrepPa/vO6uD6itv+8Xq6vq+3db9cve/OGuf7DmzfG9fh1/OdNdr1o
Hf95M11vVcd/3gLXx9fxn7fM9S11/Oetcf2WN2+z6/+8eTtdT1bXf94B10vX
9Z93zPWOdf3nnXF9al3/eZdd313Xf95N1x948x64Hrye/7xnrqep5z/vteuV
6vnP++R693r+8364Pqeet3/zHD9Yz38/ozltntfz9t31sPW9fXA9c31v/12v
Ud//fGvX+3nnreuLvPNTXT/hnV/l+hvv/AHXozTw/l9cz9nA//xL1+s38K5/
vuODtc1K+Dn4Z3ishuoFtG1T+Cj4evhV+E94wkbqxbRNG/gE+Db4bXigxurJ
tU1ZeCf4dPge+CN4iCbq6bRtZXhP+Fz4YfgLePim6lm0TS14f/gS+En4O3jU
Zuq5tW0D+FD4KvgF+Bd4nObqBbVNc/ho+Eb4NfhveKIW6iW0bVv4JPh2+F14
4JbqKbVtOXgX+Az4PvhjeKhW6um1TVV4L/h8+BH4S3iE1urZtG1tuIUvhZ+G
v4dHb6OeR9s0gg+Dr4FfhH+Dx22rXljbtoCPhW+C34D/gSdpp15S27SHT4bv
hN+DB22vnkrbVIB3hc+C74c/hYfuoJ5R21aD94EvgB+Dv4JH6qieXdvUhQ+E
L4efgX+Ex+iknk/bNoaPgK+FX4Z/h8fvrF5E27SCj4Nvgd+E/4Mn7aJeWtt2
gE+F74I/gAfrqp5G21aEd4fPhh+EP4OH7aaeSdvUgPeFL4Ifh7+BR+6unlPb
1oMPhq+An4N/gsfqoZ5f2zSFj4Svh1+B/4Qn6KleTNu2hk+Ab4Xfhpte6sm1
bRl4J/g0+B74Q3iI3upptU1leA/4XPgh+At4uD7qWbRtTXh/+GL4SfhbeNS+
6rm0TQP4EPgq+Hn4F3jsfuoFtW0z+Gj4Bvg1+C94ov7qxbVNW/hE+Hb4HXjg
AeoptE05eGf4DPhe+GN4SKueXttWgfeCz4Mfgf8HjzBQPau2qQ0fAF8KP+Xr
66uyDs/r+ntfT4ibpHbKBY5HG+TXJcdFShd1oeN5BnnvX+R4Q68LOm2GeW1d
X+31AdcvBrx/seNfA3qJ43EHe73U8UJeW6dNiwBf5vgYrws6bTYFnHf9utcH
XP8T8P7ljice4p132pT02qxwvF2AO20mB/hKx3dom3vwIEPVU2nb8vCu8Jnw
/fAn8NDD1DNom2rw3vAF8KPwV/CIw9Wza9s68IHwZfAz8A/wGCPU82qbxvDh
8LXwS/Dv8Hgj1Yto25bwcfDN8Jvwv/Cko9RLaZsO8CnwXfD78GCj1VNrm4rw
bvDZ8APwZ/AwY9Qzadvq8L7whfDj8NfwyGPVc2ibevBB8BXws/BP8Jjj1PNr
2ybwkfB18CvwH/AE49WLapvW8PHwrfBbcDNBPZm2KQPvCJ8G3w1/CA8+UT2t
tq0E7wGfAz8Efw4PN0k9s7apCe8HXww/AX8LjzJZPZe2rQ8fAl8JPw//DI89
Rb2AtmkGHwXfAL8K/wVPOFW9uLZtA58I3wa/Aw80TT2Fti0L7wyfDt8LfwQP
OV09nbapAu8Jnwc/DP8PHn6GelZtWws+AL4Efgr+Dh5tpnpubdMQPhS+Gn4B
/hUeZ5Z6IW3bHD4GvhF+Hf4bnni2eglt0w4+Cb4DfhceZI56Sm1THt4FPhO+
D/4EHmquegZtWxXeGz4ffhT+Eh5xnno2bVMHbuHL4KfhH+DR56vn1baN4MPh
a+CX4N/g8RaoF9Y2LeFj4ZvhN+B/4UkWqpfStu3hU+A74ffhQRepp9a2FeDd
4LPgB+BP4WEWq2fUNtXhfeAL4cfgr+GRlqjn0LZ14YPgy+Fn4R/hMZeq59M2
TeAj4Ovgl+E/4PGXqRfVtq3g4+Fb4Lfg/+DJlquX1jYd4VPhu+EP4MFXqKfR
NpXg3eFz4Afhz+FhV6pn1rY14P3gi+An4G/gUVap59Q29eGD4Svh5+Cf4bFW
qxfQtk3ho+Dr4VfhP+EJ16gX0zZt4BPg2+C34YHWqifXNmXhneDT4Xvgj+Ah
1qmn07aV4T3hc+GH4S/g4derZ9E2teD94UvgJ+Hv4FE3qOfWtg3gQ+Gr4Bfg
X+BxNqoX1DbN4aPhG+HX4L/hiTapl9C2beGT4Nvhd+GBN6un1Lbl4F3gM+D7
4I/hobaop9c2VeG94PPhR+Av4RG2qmfTtrXhFr4Ufhr+Hh59m3oebdMIPgy+
Bn4R/g0ed7t6YW3bAj4Wvgl+A/4HnmSHeklt0x4+Gb4Tfg8edKd6Km1TAd4V
Pgu+H/4UHnqXekZtWw3eB74Afgz+Ch5pt3p2bVMXPhC+HH4G/hEeY496Pm3b
GD4CvhZ+Gf4dHn+vehFt0wo+Dr4FfhP+D550n3ppbdsBPhW+C/4goPc6Hmy/
tEmjbSvCu8Nnww/Cn8HDHlDPpG1qwPvCF8GPw9/AIx9Uz6lt68EHw1fAz8E/
wWMdUs+vbZrCR8LXw6/Af8ITHFYvpm1bwyfAt8Jvw80R9eTatgy8E3wafA/8
ITzEUfW02qYyvAd8LvwQ/AU83DH1LNq2Jrw/fDH8JPwtPOpx9VzapgF8CHwV
/Dz8Czz2CfWC2rYZfDR8A/wa/Bc80Un14tqmLXwifDv8DjzwKfUU2qYcvDN8
Bnwv/DE85Gn19Nq2CrwXfB78CPw/eIQz6lm1TW34APhS+Cn4e3i0s+p5tG1D
+DD4avhF+Fd43HPqhbRNC/gY+Cb4dfgfeOLz6iW1bTv4ZPgO+D14kAvqqbRt
eXhX+ExfZ702/NhP1/cH+H7HnwT0AcdDX/T6oOMZvLZOm2oBfsjx3l4XdNos
CDjv+lGvD7j+KuD9hx2PeMk777TJ7rU54nidAHfaDAzwo44vC3CnzZkAP+b4
B1+finbkSWinTYzLfj05zYiT0VzP6+t6hcquS+h6Y18nrxFxchrXh/v6fdsr
PbK7vtbXOwfNqFvI9Uu+HuyXZV3/7mu/aclruB7vil9H9/v4xq4X8fX9myve
tXW9pa9XvvP7ANfH+bpzsEw7B7m+2dd543yZO9b1m7728QzX//r6fPF+LRa7
nvSqX8/0u5x1rpfydWPfQNc7+Dqt39c/4voUX/tN/3nO9V2+3r+50v2brt/3
te/4E9eDXfPryr4v4HpqX/su76frFX39NLTfJx53vJuvfbcjotNmtq97Zn+Z
J47rB3zt3DDXn/k6jO+CXQ9z3a/97v7LPK5n8vU8v8st7np1X7dYvG9zJdf7
+tp3e+q6vtDXv8753SDXj/va93N0dv21r8f5jevneuQbfu37+Ue4nsPXiXwL
4Xo9X/td/Ze5rg/y9Ra/27XC9RW+7ue7INfP+rqE7w+uf/K1b/xJ12Pe9Otb
futwxfX8vvZ9nfuuN/F1O98NcH2kr32374vr6256+37C8Ss3vX132v646e27
6wluefvuetFb3r673vqWt++uj7/l7bvrW295++76rVvevrtubnv77nqy296+
u17mtrfvrne87e2769Nue/vu+u7b3r67/vC2t++uB7/j7bvrae94++56pTve
vrve4463767PuePtu+uH7nj77vrzO96+ux7urrfvrme+6+37Scdr3vX23Wnb
7663764vvuvtu+sn7nr77vrbu96+ux7lnrfvrue65+276/Xvefvu+pB73r67
vvKet++un7/n7bvrn+95++567Pvevrte4L637643u+/tu+uj7nv77vqG+96+
u371vrfvrv+67+276wkfePvuevEH3r673uaBt++uT3zg7fspx7dpmzvwQA/V
U2jbsvDO8OnwvfBH8JCP1NNpmyrwnvB58MPw/+DhH6tn1ba14APgS+Cn4O/g
0Z6o59Y2DeFD4avhF+Bf4XGeqhfSts3hY+Ab4dfhv+GJn6mX0Dbt4JPgO+B3
4UGeq6fUNuXhXeAz4fvgT+ChXqhn0LZV4b3h8+FH4S/hEf9Tz6Zt6sAtfBn8
NPwDPPpL9bzathF8OHwN/BL8GzzeK/XC2qYlfCx8M/wG/C88yWv1Utq2PXwK
fCf8PjzoG/XU2rYCvBt8FvwA/Ck8zFv1jNqmOrwPfCH8GPw1PNI79Rzati58
EHw5/Cz8Izzme/V82qYJfAR8Hfwy/Ac8/gf1otq2FXw8fAv8FvwfPNlH9dLa
piN8Knw3/AE8+Cf1NNqmErw7fA78IPw5POxn9czatga8H3wR/AT8DTzKF/Wc
2qY+fDB8Jfwc/DM81lf1Atq2KXwUfD38KvwnPOE39WLapg18Anwb/DY80Hf1
5NqmLLwTfDp8D/wRPMQP9XTatjK8J3wu/DD8BTz8T/Us2qYWvD98CfykrxPn
TVXyr+vvAvyM41F/+bd12uT22px1vEGAO22GBvg5x1cFuNPmQoCfd/yL1wmd
NnF++3dB1wt63dD15l5b10d7vcD1jV4fcP2a1w9c/+21ueB4oj/SpoS2bQuf
BN8OvwsP/Fc9pbYtB+8CnwHfB38MD/VPPb22qQrvBZ8PPwJ/CY9gsoln07a1
4Ra+FH4a/h4ePZB6Hm3TCD4MvgZ+Ef4NHjewemFt2wI+Fr4JfgP+B54kiHpJ
bdMePhm+E34PHjSoeiptUwHeFT4Lvh/+FB46mHpGbVsN3ge+AH4M/goeKbh6
dm1TFz4Qvhx+Bv4RHiOEej5t2xg+Ar4Wfhn+HR4/pHoRbdMKPg6+BX4T/g+e
NJR6aW3bAT4Vvgv+AB4stHoabVsR3h0+G34Q/gweNox6Jm1TA94Xvgh+HP4G
Hjmsek5tWw8+GL4Cfg7+CR4rnHp+bdMUPhK+Hn4F/hOeILx6MW3bGj4BvhV+
G24iqCfXtmXgneDT4HvgD+EhIqqn1TaV4T3gc+GH4C/g4SKpZ9G2NeH94Yvh
J+Fv4VEjq+fSNg3gQ+Cr4OfhX+Cxo6gX1LbN4KPhG+DX4L/giaKqF9c2beET
4dvhd+CBo6mn0Dbl4J3hM+B74Y/hIaOrp9e2VeC94PPgR+D/wSPEUM+qbWrD
B8CXwk/B38OjxVTPo20bwofBV8Mvwr/C48ZSL6RtWsDHwDfBr8P/wBPHVi+p
bdvBJ8N3wO/Bg8RRT6Vty8O7wmfC98OfwEPHVc+gbarBe8MXwI/CX8EjxlPP
rm3rwAfCl8HPwD/AY8RXz6ttGsOHw9fCL8G/w+MlUC+ibVvCx8E3w2/C/8KT
JlQvpW06wKfAd8Hvw4MlUk+tbSrCu8Fnww/An8HDJFbPpG2rw/vCF8KPw1/D
IydRz6Ft6sEHwVfAz8I/wWMmVc+vbZvAR8LXwa/Af8ATJFMvqm1aw8fDt8Jv
wU1y9WTapgy8I3wafDf8ITx4CvW02rYSvAd8DvwQ/Dk8XEr1zNqmJrwffDH8
BPwtPEoq9Vzatj58CHwl/Dz8Mzx2avUC2qYZfBR8A/wq/Bc8YRr14tq2DXwi
fBv8DjxQWvUU2rYsvDN8Onwv/BE8ZDr1dNqmCrwnfB78MPw/ePj06lm1bS34
APgS+Cn4O3i0DOq5tU1D+FD4avgF+Fd4nIzqhbRtc/gY+Eb4dfhveOJM6iW0
TTv4JPgO+F14kMzqKbVNeXgX+Ez4PvgTeKgs6hm0bVV4b/h8+FH4S3jErOrZ
tE0duIUvg5+Gf4BHz6aeV9s2gg+Hr4Ffgn+Dx8uuXljbtISPhW+G34D/hSfJ
oV5K27aHT4HvhN+HB82pnlrbVoB3g8+CH4A/hYfJpZ5R21SH94EvhB+Dv4ZH
yq2eQ9vWhQ+CL4efhX+Ex8yjnk/bNIGPgK+DX4b/gMfPq15U27aCj4dvgd+C
/4Mny6deWtt0hE+F74Y/gAfPr55G21SCd4fPgR+EP4eHLaCeWdvWgPeDL4Kf
gL+BRymonlPb1IcPhq+En4N/hscqpF5A2zaFj4Kvh1+F/4QnLKxeTNu0gU+A
b4Pfhgcqop5c25SFd4JPh++BP4KHKKqeTttWhveEz4Ufhr+Ahy+mnkXb1IL3
hy+Bn4S/g0ctrp5b2zaAD4Wvgl+Af4HHKaFeUNs0h4+Gb4Rfg/+GJyqpXkLb
toVPgm+H34UHLqWeUtuWg3eBz4Dvgz+Ghyqtnl7bVIX3gs+HH4G/hEcoo55N
29aGW/hS+Gn4e3j0sup5tE0j+DD4GvhF+Dd43HLqhbVtC/hY+Cb4DfgfeJLy
6iW1TXv4ZPhO+D140ArqqbRNBXhX+Cz4fvhTeOiK6hm1bTV4H/gC+DH4K3ik
SurZtU1d+ED4cvgZ+Ed4jMrq+bRtY/gI+Fr4Zfh3ePwq6kW0TSv4OPgW+E34
P3jSquqltW0H+FT4LvgDeLBq6mm0bUV4d/hs+EH4M3jY6uqZtE0NeF/4Ivhx
+Bt45BrqObVtPfhg+Ar4OfgneKya6vm1TVP4SPh6+BX4T3iCWurFtG1r+AT4
VvhtuKmtnlzbloF3gk+D74E/hIeoo55W21SG94DPhR+Cv4CHq6ueRdvWhPeH
L4afhL+FR62nnkvbNIAPga+Cn4d/gceur15Q2zaDj4ZvgF+D/4InaqBeXNu0
hU+Eb4ffgQduqJ5C25SDd4bPgO+FP4aHbKSeXttWgfeCz4Mfgf8Hj9BYPau2
qQ0fAF8KPwV/D4/WRD2Ptm0IHwZfDb8I/wqP21S9kLZpAR8D3wS/Dv8DT9xM
vaS2bQefDN8BvwcP0lw9lbYtD+8KnwnfD38CD91CPYO2qQbvDV8APwp/BY/Y
Uj27tq0DHwhfBj8D/wCP0Uo9r7ZpDB8OXwu/BP8Oj9davYi2bQkfB98Mvwn/
C0/aRr2UtukAnwLfBb8PD9ZWPbW2qQjvBp8NPwB/Bg/TTj2Ttq0O7wtfCD8O
fw2P3F49h7apBx8EXwE/C/8Ej9lBPb+2bQIfCV8HvwL/AU/QUb2otmkNHw/f
Cr8FN53Uk2mbMvCO8Gnw3fCH8OCd1dNq20rwHvA58EPw5/BwXdQza5ua8H7w
xfAT8LfwKF3Vc2nb+vAh8JXw8/DP8Njd1Atom2bwUfAN8KvwX/CE3dWLa9s2
8InwbfA78EA91FNo27LwzvDp8L3wR/CQPdXTaZsq8J7wefDD8P/g4XupZ9W2
teAD4Evgp+Dv4NF6q+fWNg3hQ+Gr4RfgX+Fx+qgX0rbN4WPgG+HX4b/hifuq
l9A27eCT4Dvgd+FB+qmn1Dbl4V3gM+H74E/gofqrZ9C2VeG94fPhR+Ev4REH
qGfTNnXgFr4Mfhr+AR7dqufVto3gw+Fr4Jfg3+DxBqoX1jYt4WPhm+E34H/h
SQapl9K27eFT4Dvh9+FBB6un1rYV4N3gs+AH4E/hYYaoZ9Q21eF94Avhx+Cv
4ZGGqufQtnXhg+DL4WfhH+Exh6nn0zZN4CPg6+CX4T/g8YerF9W2reDj4Vvg
t+D/4MlGqJfWNh3hU+G74Q/gwUeqp9E2leDd4XPgB+HP4WFHqWfWtjXg/eCL
4Cfgb+BRRqvn1Db14YPhK+Hn4J/hscaoF9C2TeGj4OvhV+E/4QnHqhfTNm3g
E+Db4LfhgcapJ9c2ZeGd4NPhe+CP4CHGq6fTtpXhPeFz4YfhL+DhJ6hn0Ta1
4P3hS+An4e/gUSeq59a2DeBD4avgF+Bf4HEmqRfUNs3ho+Eb4dfgv+GJJquX
0LZt4ZPg2+F34YGnqKfUtuXgXeAz4Pvgj+Ghpqqn1zZV4b3g8+FH4C/hEaap
Z9O2teEWvhR+Gv4eHn26eh5t0wg+DL4GfhH+DR53hnphbdsCPha+CX4D/gee
ZKZ6SW3THj4ZvhN+Dx50lnoqbVMB3hU+C74f/hQeerZ6Rm1bDd4HvgB+DP4K
HmmOenZtUxc+EL4cfgb+ER5jrno+bdsYPgK+Fn4Z/h0ef556EW3TCj4OvgV+
E/4PnnS+emlt2wE+Fb4L/gAebIF6Gm1bEd4dPht+EP4MHnaheiZtUwPeF74I
ftzX0a40b7jL9Te+fvs3fPo+Fx2PvMivj6Xa/ivPJcdz+np+1QYnfztt6/m6
x4AQ0/dednywryusWt+0/xXHV/g65dUamQtcdfzcIu/zrzn+SdvEWqyeX9s0
hY+Er4dfgf+EJ1iiXkzbtoZPgG+F34abperJtW0ZeCevV7g+zesr1x3fE3D+
puMPvbZOmxDLPL/leFqvrdOmcoDfdrxHgDtt5gb4HccPBbjT5kWA33U83HLP
nTZZvDb3HK8Z4E6b/gF+3/HFAe60ORngDxx/G+BOm6grPH/oeC6vrdOmQYA/
cnyItlkFPw//Ao+9Ur2gtm0GHw3fAL8G/wVPtEq9uLZpC58I3w6/Aw+8Wj2F
tikH7wyfAd8LfwwPuUY9vbatAu8Fnwc/Av8PHmGtelZtUxs+AL4Ufgr+Hh5t
nXoebdsQPgy+Gn4R/hUed716IW3TAj4Gvgl+Hf4HnniDeklt2w4+Gb4Dfg8e
ZKN6Km1bHt4VPhO+H/4EHnqTegZtUw3eG74AfhT+Ch5xs3p2bVsHPhC+DH4G
/gEeY4t6Xm3TGD4cvhZ+Cf4dHm+rehFt2xI+Dr4ZfhP+F550m3opbdMBPgW+
C34fHmy7emptUxHeDT4bfgD+DB5mh3ombVsd3he+EH4c/hoeead6Dm1TDz4I
vgJ+Fv4JHnOXen5t2wQ+Er4OfgX+A55gt3pRbdMaPh6+FX4LbvaoJ9M2ZeAd
4dPgu+EP4cH3qqfVtpXgPeBz4Ifgz+Hh9qln1jY14f3gi+En4G/hUfar59K2
9eFD4Cvh5+Gf4bEPqBfQNs3go+Ab4Ffhv+AJD6oX17Zt4BPh2+B34IEOqafQ
tmXhneHT4Xvhj+AhD6un0zZV4D3h8+CH4f/Bwx9Rz6pta8EHwJfAT8HfwaMd
Vc+tbRrCh8JXwy/Av8LjHFMvpG2bw8fAN8Kvw3/DEx9XL6Ft2sEnwXfA78KD
nFBPqW3Kw7vAZ8L3wZ/AQ51Uz6Btq8J7w+fDj8JfwiOeUs+mberALXwZ/DT8
Azz6afW82rYRfDh8DfwS/Bs83hn1wtqmJXwsfDP8BvwvPMlZ9VLatj18Cnyn
r7cNWR9r2WPH7/u65aQBB2s/dTzoOb+Os6BCqwjPHU/t63NrE0Q68sLxCr4e
uPvdjp4vHe/m66wn9zdM99rxWb5+fm18yEdvHD/g61lPGmyY9s7xp74u9zFD
zTIfHA9z3ru+T45n9HVzv1dyp011X589c+ZMWdf7+DqL36uL6wt9PWum38v1
Y968A66/9uY9cz3SBf95YT87nuOC/7wsTtu6F/zn1XJ90AX/edb15Rf85y1z
/aw374zrH715n1yPedF/Xqwvjue76D+voNOmyUX/ec1dH3HRf94Y19dd9J+3
2fXL3rybrv/w5pmvjse/JG2KattW8PHwLfBb8H/wZJfVS2ubjvCp8N3wB/Dg
V9TTaJtK8O7wOfCD8OfwsFfVM2vbGvB+8EXwE/A38CjX1HNqm/rwwfCV8HPw
z/BY19ULaNum8FHw9fCr8J/whDfUi2mbNvAJ8G3w2/BAN9WTa5uy8E7w6fA9
8EfwELfU02nbyvCe8Lnww/AX8PC31bNom1rw/vAl8JPwd/Cod9Rza9sG8KHw
VfAL8C/wOHfVC2qb5vDR8I3wa/Df8ET31Eto27bwSfDt8LvwwPfVU2rbcvAu
8BnwffDH8FAP1NNrm6rwXvD58CPwl/AID9WzadvacAtfCj8Nfw+P/kg9j7Zp
BB8GXwO/CP8Gj/tYvbC2bQEfC98EvwH/A0/yRL2ktmkPnwzfCb8HD/pUPZW2
qQDvCp8F3w9/Cg/9TD2jtq0G7wNfAD8GfwWP9Fw9u7apCx8IXw4/A/8Ij/FC
PZ+2bQwfAV8Lvwz/Do//n3oRbdMKPg6+BX4T/g+e9KV6aW3bAT4Vvgv+AB7s
lXoabVsR3h0+G34Q/gwe9rV6Jm1TA94Xvgh+HP4GHvmNek5tWw8+GL4Cfg7+
CR7rrXp+bdMUPhK+Hn4F/hOe4J16MW3bGj4BvhV+G27eqyfXtmXgneDT4Hvg
D+EhPqin1TaV4T3gc+GH4C/g4T6qZ9G2NeH94YvhJ+Fv4VE/qefSNg3gQ+Cr
4OfhX+CxP6sX1LbN4KPhG+DX4L/gib6oF9c2beET4dvhd+CBv6qn0Dbl4J3h
M+B74Y/hIb+pp9e2VeC94PPgR+D/+frDlLZHQrge4btfJ5lQ81gE17P6utro
oidiuF7b18OHZTyVwPUBvt45MO6ZFK4v9fWrviHPZXD9lK/j9fx8Pofr731d
ocuDiwVcj/bDrwe2P3O5hOt5fL251Y6rFVxv6OunTZdcr+H6MF/HaDjhZgPX
V/u6VJ2+t1u4ftHXfaq3vNvB9a++Xlup6v0ersf96df3yxZ8OMD1Qr6OVDLt
4+Gut/B1kSIxn453fYyvu+UP+ny665t8vTzX+xfzXb/u65tZ77xc7vofX4fN
eOL1etcT//Lr/Gm2vN3ueklfd0y+4P1+19v5elGiMR+Puz7Z11fi+t0w13f4
OnjMpl+vu37P1zmjVPx+3/Ugv/26dfi8P5+7nsrXc0Kl/P3O9fK+Phc06t9v
rnf97f3+3xyf6XXG747v97rhD8efeD3hp+Oh//j3gV+OZ/D6/W/Hq3md8K/j
vb2u+M/xBV5bs8vnR73eEMjX5pXXDwI7HvGvf0cM6nh2rwsGc7yO1x2DOz7Q
6wUhHF/m9YWQjp/x2oR2/IO2ifFPPa+2aQwfDl8LvwT/Do9nsosX0bYt4ePg
m+E34X/hSQOpl9I2HeBT4Lvg9+HBAqun1jYV4d3gs+EH4M/gYYKoZ9K21eF9
4Qvhx+Gv4ZGDqufQNvXgg+Ar4Gfhn+Axg6nn17ZN4CPh6+BX4D/gCYKrF9U2
reHj4Vvht+AmhHoybVMG3hE+Db4b/hAePKR6Wm1bCd4DPgd+CP4cHi6UemZt
UxPeD74YfgL+Fh4ltHoubVsfPgS+En4e/hkeO4x6AW3TDD4KvgF+Ff4LnjCs
enFt2wY+Eb4NfgceKJx6Cm1bFt4ZPh2+F/4IHjK8ejptUwXeEz4Pfhj+Hzx8
BPWs2rYWfAB8CfwU/B08WkT13NqmIXwofDX8AvwrPE4k9ULatjl8DHwj/Dr8
NzxxZPUS2qYdfBJ8B/wuPEgU9ZTapjy8C3wmfB/8CTxUVPUM2rYqvDd8Pvwo
/CU8YjT1bNqmDtzCl8FPwz/Ao0dXz6ttG8GHw9fAL8G/wePFUC+sbVrCx8I3
w2/A/8KTxFQvpW3bw6fAd8Lvw4PGUk+tbSvAu8FnwQ/An8LDxFbPqG2qw/vA
F8KPwV/DI8VRz6Ft68IHwZfDz8I/wmPGVc+nbZrAR8DXwS/Df8Djx1Mvqm1b
wcfDt8Bvwf/Bk8VXL61tOsKnwnfDH8CDJ1BPo20qwbvD58APwp/DwyZUz6xt
a8D7wRfBT8DfwKMkUs+pberDB8NXws/BP8NjJVYvoG2bwkfB18Ovwn/CEyZR
L6Zt2sAnwLfBb8MDJVVPrm3KwjvBp8P3wB/BQyRTT6dtK8N7wufCD8NfwMMn
V8+ibWrB+8OXwE/C38GjplDPrW0bwIfCV8EvwL/A46RUL6htmsNHwzfCr8F/
wxOlUi+hbdvCJ8G3w+/CA6dWT6lty8G7wGfA98Efw0OlUU+vbarCe8Hnw4/A
X8IjpFXPpm1rwy18Kfw0/D08ejr1PNqmEXwYfA38IvwbPG569cLatgV8LHwT
/Ab8DzxJBvWS2qY9fDJ8J/wePGhG9VTapgK8K3wWfD/8KTx0JvWM2rYavA98
AfwY/BU8Umb17NqmLnwgfDn8DPwjPEYW9XzatjF8BHwt/DL8Ozx+VvUi2qYV
fBx8C/wm/B88aTb10tq2A3wqfBf8ATxYdvU02rYivDt8Nvwg/Bk8bA71TNqm
BrwvfBH8OPwNPHJO9Zzath58MHwF/Bz8EzxWLvX82qYpfCR8PfwK/Cc8QW71
Ytq29f/3/wDntG/t
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
66Vtu47wyfB/4XfgIWdbT2PbVYJ3h8+C74U/hoebYz2zba8GvC98AfwI/AU8
ylzrOW27+vCB8GXwU/D38FjzrBew7TWFj4CvgV+Ef4UnnO9rr/KF4yVXfizg
82LahU5N+LFJ2rXRznik1vrd6uO0E+xL2OKo+mbt8Dsexzmvfl163o9Nq8/c
UA+yQPr5mm6DH6kn176+LG/u1+pltY/9E+zVF/VO2ttm+/7JJ/Gp2kunjq/5
p7S3Q1syhvo97SEjfXukHuofX+/xvVr31OrptJv2W5Umq3pl7So9u97Jp95D
u3CXPJNLqM/WztQuaOlK6vu1fUf7s7b6E+0IjcZtaKoefqH0z9o1WrZXz6L9
omr8eD3Ua0nfuVH+4dn+6n9r+97tISPVF2pvlx1QP6otb88c9Vfa07IHWbRU
Peoi6aHygajn1u6eemz4HeoNtJslrb7/oPpgbdmd0+rLpV3RmA/SXlU/o50l
8oq799Q/aCcO13nKc/U4i6UjhcxV5qN6wcW/z5/P4s21X305tDGMtDdS+9a7
0a2iqK/TPilviPolbTldkqt/l07oe/WhGdUTLZGeISeIegnt4Rc7vimi3la7
x+kci8upT9CWj6eG+hZt39FHaKR+U7vYzlEHWqsHXSqddYvvDFBPqZ1kXez0
f6uXky4ob8dQ9S7avnd/6nj1adqv53QoO1N9l/Zt+YDU72vL+KxWD7NMWl5+
q3p67ZVywqpX1Z4pE6jeU3tEr1jDL6rPlW4op+tt9QPaLdsveftE/al2DfkH
6hGWSxdvnK3ud/Vs2r6KGPKLeG1tOT0iSPtOCOkoFX2vqL5I23f2Z0iiflza
e1PEd8Kov9b27c207OrRV0jLx1FQPY/2Lhkg9UbavunbUkV9iPasZN/a1FNf
qS3j20L9rLYcfkf1T9qtZAfV466UefdNf4FB6oW1S4TynXHqLbRlXKaqj9aW
l5uvvl476ofMkVeoX9EOJiew+g/tt0/29N6lnmSVtJyeR9RLap+RgVZvL71n
96VoM66rT9ReLV+gvk17ti5w4re09XRQD75aure8YV/FU2n7NFE4aVdB27f6
Xoqm3lVblo8E6jO05e1Ppb5b+k5yOUL1h9rRZKDUw66RDj5pQf3i6hm1ZVwr
qlfTlsOtpd5b27d49WmiPk9bd1j9kLYs793Vn0m7ub7x8NQjrZUeIx+genbt
vk2uBZ+kXle7bb3522ar99euIye0+hJtOR3XqZ/Q9q1Gl7erv9VOKQOuHmOd
tO/sKHRKPZ90Qlm+Lqs31paP/676MG3fatjgmfoq7fPyBqqf15bL3U/1z9qy
XIT+Jh5/vbSeUNJeEe2xckFUb6X9d+iBvlNefIx0Qbm8ZFDfqC3jmUv9qrYc
XmH1X9q5ZcFRT7pBOtVT3wqvXlpblvMG6h20ZRxaqU/Wlh/XRX27tlyN+qjf
kW4ol/8h6iE2SsvyOU49jbacfjPUK2rPlwu0endt39Ww3yr1mdpyud2ivldb
lqs96o+05eM+ph5uk8x3WVkA1TNp+67GoW6p19CWy9tj9T7asjy8UV+grW+v
+mFt39l6Lfh38Rfaj+QCKe1F3iwtl5OY6jm1ZRwTqdfTlsNJoz5Qep5vWhpn
U1+qLbcfBdRPaesNlPo7bTn9K6vH2iJdXxdk8fza5eQTVG+qLZf7DurDtWW5
7Km+RnqPnG4D1S9oh5ETXv2rtm+16DxFPcFWabm8zlMvpi3L0zL11try8W5Q
H6e9UX6g+iZtWa0OqV/XlsvZGXW3TeZdloNr6sm15e18oF5Gu8GzsCdfqHfS
1tsf9SnacvkI8kN8h7aMX1hp76627H5U9VDbpcPKDYR6Wm253UipXlna/ScL
kvpf2lfkhkp9tvZhOUD1fdqbZYFWf6Itl/ea6n/+Ky3LY2P1LNpyerVRr6nt
uzta0039b225Heyn/o90QrmcDlc/qi3L0QT1l9rycc5Sj7pDOp7c0Kjn0pbb
rzXqDbTl8rVNfZC2jP9+9eXa8vadVD8tXVBu1y+pf9CW25076rF3Ssvl4ql6
QW0Zt3fqzbR1d9VHasvtcaif4mu15WyOKO0uacvyHFv9m7YuUOqJdsm8C6dX
L64tt6M51Ntqy+W8kPp4bVkOy6hv0ZbTqar6De1rcgFTD7pbWm7/Wqqn0JbL
Z2f1ctqy/PRW7yztycc3WH2atjwujFXfqS23W9PU72vL5WqBeug9iQLPS+rp
tfV5Sb2Ktj4vqffU1ucl9Tna+rykfkDa/7yk/p+2Pi+pR9ibKPC8pJ5VW28n
1Gtr6/PSL/F+2vq8JO0WaevzkvoxbX1eUn8t7X9eUo+2L1HgeUk9j7Y+L6k3
1NbnJfUh2vq8pL5CW2/I1c9q6/OS+kdtfV5Sj7s/UeB5Sb2QtP95Sb2Ftj4v
qY/S1ucl9fXa+rykfllbn5fUf2jr85J64gOJAs9L6iW19XlJvZ22Pi+pT5T2
Py+pb9XW5yX1W9r6vKQe7GCiwPOSeipt/1bQ5+WlEw5pFHNII2nXVTpjuP2+
/6hPl644IWmpCUmDiO+WbhhTvkHaeyDtzXncc85j9bCHfD1OvrxUUPEM0muX
yybtqknv0RcIJt5L+s7mdtc3t5N286Rf5z39Lu9p9YPSEWV3MgYXfyadUH78
BGkv4mGZb/nyd+rZpStWky2EeB3pjtflBaRdf2lPDjdmSPHF0vNk93tKuxPS
a2V3rqu/kT4jPz5vKPEYR2R/5cvnSHt5j/x+P0OLN7btDYWvgp+Df4bHO2q9
iG2vJXwMfAP8KvwnPOkx66Vsuw7wSfDt8NvwEMetp7btKsK7wWfC98Afwf84
YT2Tba86vA98Pvww/Dk88knrOWy7evAB8KXwk/B38JinrOe37TWBD4evhl+A
f4EnOG29qG3XGj4Wvgl+De7OWE9m25WBd4RPgf8LvwsPedZ6WtteJfhf8Fnw
ffDH8D/PWc9s29WE94X/Az8CfwmPct56Ltteffgg+DL4afh7eOwL1gvYds3g
I+Br4Rfh3+AJL1ovbttrAx8P3wy/AQ9yyXoK215ZeGf4VPhO+D146MvW09l2
VeA94HPg++H/wcNfsZ7VtlcL3g++EH4M/goe7ar13LZdQ/hg+Ar4GfhHeJxr
1gvZ9prDR8HXwS/Dv8MTX7dewrZrB58A3wq/CQ92w3pK2648vAt8OnwX/AE8
zE3rGWx7VeG94HPhB+FP4RFvWc9m29WBe/DF8OPwN/Dot63nte01gg+Fr4Sf
g3+Cx7tjvbBt1xI+Gr4BfgX+E57krvVStr328EnwbfDb8OD3rKe27VWAd4PP
gO+BP4T/cd96RtuuOrw3fD78EPw5PNID6zlse3XhA+BL4Cfhb+ExH1rPZ9s1
gQ+Dr4afh3+Bx39kvahtrxV8LHwj/Br8FzzZY+ulbbuO8Mnwf+F34CGfWE9j
21WCd4fPgu+FP4aH+896ZtteDXhf+AL4EfgLeJSn1nPadvXhA+HL4Kfg7+Gx
nvm64sDXW/s+iiBeQHpYo5vRUr6PIt5UumX/whUifYghPkK65Pwlw75+iCO+
Rjrj3nD77n9MIH5Rv19+3LdE4l+le3htYtf5nkQ84XP5eRHjbzn9PZl4Mema
885UKfojhXgb6bIZfTv0I5X4OOm8e7KNTvczjfhm6bQVn6Ra8DOd+HXphHdm
HIr+K4N4kBe+Dr118bqDvzKKJ3/x+3gzi5f93QWziHf63V5W8am/e0828R3/
+/4c4vf+9/05xUO9/P39ucTT/e49ucUr/26XV7zH7y6YT3z2/74/v/j+/31/
AfEn//OC4uFf/XZpL8vvdoXEa/3ugtLe37/bU1/4v+9XP/q/7y8s/kq6x1+y
SXtRX/v6pW7quaWb61ZEvIH0rZuySbvB0tX1f58pKr5c+oRu0u6MdFHdiol/
kN7xr2zSLs4bX2fNIltx8YLS+j8vLZd2zaUT61ZCfKT0jOmySbt10hEjyVZS
/JL0MN2k3fc3v4+3lHiit76OrF8v7Uq8/f3z1du+/b0/6hPe/t5/9S1vfx+v
+s23v98f9aDvfr+f6inf/d4f9XLvfu+/epd3v49Xfdq73++P+q53v99P9fvv
fr//6mHe//681NO//328pcWr2vZ6wufCD8CfwiN8sJ7Ntlcb7v2vy4gvsu2O
w1/Do3+0nse2awQfAl8JPwv/BI/7yXph214L+Gj4evgV+A94ks/WS9p27eET
4dvgt+DBv1hPZdtVgHeFz4Dvhj+Eh/1qPaNtrxq8N3we/BD8GTzSN+vZbbu6
8P7wJfAT8LfwGN+t57PtNYYPg6+Cn4d/hsf/Yb2IbdcKPga+EX4V/gue9Kf1
0ra9DvDJ8O3wO/AQv6ynse1VhHeHz4TvhT+Ch3OJjWey7WrA+8AXwA/DX8Aj
B7Ge07ZXDz4QvhR+Cv4OHiuo9fy2XVP4cPga+AX4V3iCYNaL2fZaw8fBN8Gv
w11w68lte2XgneBT4Dvgd+GhQlhPa9tVhv8Fnw3fB38C/zOk9Sy2vZrwv+H/
wI/CX8KjhrKey7ZrAB8EXw4/Df8Ajx3aekHbXjP4SPha+CX4N3iiMNaL23Zt
4ePhW+A34EHDWk9h25WDd4ZPg++E34eH/sN6etteFXhP+Bz4Afh/8AjhrGe1
7WrD+8EXwY/BX8Oj/Wk9j22vIXwIfAX8LPwjPG5464VsuxbwUfD18MvwH/DE
EayXtO21g0+Eb4XfggeLaD2Vba88vCt8Onw3/AE8bCTrGWy7avBe8Hnwg/Bn
8IiRrWe37dWB94cvhp+Av4HHiGI9r23XGD4Uvgp+Dv4ZHi+q9SK2vZbwMfAN
8Kvwn/Ck0ayXsu06wCfBt8Nvw0NEt57atqsI7wafCd8DfwT/I4b1TLa96vA+
8Pnww/Dn8Mgxreew7erBB8CXwk/C38FjxrKe37bXBD4cvhp+Af4FniC29aK2
XWv4WPgm+DW4i2M9mW1XBt4RPgX+L/wuPGRc62lte5Xgf8FnwffBH8P/jGc9
s21XE94X/g/8CPwlPEp867lse/Xhg+DL4Kfh7+GxE1gvYNs1g4+Ar4VfhH+D
J0xovbhtrw18PHwz/AY8SCLrKWx7ZeGd4VPhO+H34KETW09n21WB94DPge+H
/wcPn8R6VtteLXg/+EL4MfgreLSk1nPbdg3hg+Er4GfgH+FxklkvZNtrDh8F
Xwe/DP8OT5zcegnbrh18Anwr/CY8WArrKW278vAu8OnwXfAH8DAprWew7VWF
94LPhR+EP4VHTGU9m21XB+7BF8OPw9/Ao6e2nte21wg+FL4Sfg7+CR4vjfXC
tl1L+Gj4BvgV+E94krTWS9n22sMnwbfBb8ODp7Oe2rZXAd4NPgO+B/4Q/kd6
6xltu+rw3vD58EPw5/BIGaznsO3VhQ+AL4GfhL+Fx8xoPZ9t1wQ+DL4afh7+
BR4/k/Witr1W8LHwjfBr8F/wZJmtl7btOsInw/+F34GHzGI9jW1XCd4dPgu+
F/4YHi6r9cy2vRrwvvAF8CPwF/Ao2azntO3qwwfCl8FPwd/DY2W3XsC21xQ+
Ar4GfhH+FZ4wh/Vitl0b+Dj4Zvh1eJCc1pPbdmXhneBT4Tvg9+ChcllPZ9ur
DO8Bnw3fD38CD5/behbbrhb8b/hC+FH4K3jUPNZz2/YawAfDl8PPwD/A4+S1
XtC2aw4fCV8HvwT/Dk+Uz3oJ215b+AT4Ful5iWMdfFRP/ab0kMrh6+zZoR40
v6/bDgj2ZnqcsuIppSuv/zykSy9pr5x0znsv4pa7qt5FOn7k++uT5ywnPk06
eOErJd1UabdL+mmnk7euflC/L31m/r6uG6qWFw9TwNdbz24JO3qDtJdeek6Q
VfOaR64gXlV6UKYF2Qt2kvZ6SrduNPVErDPqc6WXliy+rmeMiuIHpGfeKdjn
UXFp91R6TI88Jap0V49Q0Nf9I2aPvGeRejbprksz3kx7Ub22dIuCaZZOD15J
3JOufSVZl5BZpb1F0uU7JszfpYn6cemCoeOEuTNB/bV01nnRLpTdpx69kK9T
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
4+XiSruQUX19bHPUV8NSq6eRHjG9RuQDOdUrSZfsMyPbr+Lq3aVDN7hZM3c1
9VnSRwol7NOtifpe6SFJm8xd20n9sXTxUIv3PeunHi6ar0M+ffIw+Rj1zNIH
9ADUa0gPWtM+7ezl6n2li05YV+HKVvUF0kG7ve8c5bD6Eel9NXJMKX9R/YX0
gNy9tg2/rx4luq8Lxtt548Ab9ZzRA5+XqyVe/3d70t7A/3lt8WX/c2nv1P+8
jvj7/7m0FyvGb68rXuB3J5T2mv7uguojfndD9TW/21O/+LvnqX/93XvUE8ZM
Evj3VasXk9Y/d/5UvU3M3/tTT3zc76+PJu02//761OrXf399QfUgsQJfP1k9
eazfP1+9bKzfX19fvJO0/8/DS7up0vr34Cup75DWv89eS/2etP55+MbqoWIH
fn5r9XTS+vfiu6hXlta/395bvYe0/vn4QeqzpfXPuY9S3x/79/6rP5HWv+8+
Wz18nCT///flF6tnkdY/975avZa0/r35Lep/x/n9/qsvtO0dhb+CR41rPbdt
rwF8MHw5/Az8AzxOPOsFbbvm8JHwdfBL8O/wRPGtl7DttYVPgG+B34QHTWA9
pW2vHLwLfBp8F/w+PExC6+ltu6rwnvC58APwp/AIiaxns+3VhnvwRfDj8Nfw
6Imt57HtGsGHwFfCz8I/weMmsV7YttcCPhq+Hn4F/gOeJKn1krZde/hE+Db4
LXjwZNZT2XYV4F3hM+C74Q/hYZNbz2jbqwbvDZ8HPwR/Bo+Uwnp2264uvD98
CfwE/C08Rkrr+Wx7jeHD4Kvg5+Gf4fFTWS9i27WCj4FvhF+F/4InTW29tG2v
A3wyfDv8DjxEGutpbHsV4d3hM+F74Y/g4dJaz2Tb1YD3gS+AH4a/gEdOZz2n
ba8efCB8KfwU/B08Vnrr+W27pvDh8DXwC/Cv8AQZrBez7bWGj4Nvgl+Hu4zW
k9v2ysA7wafAd8DvwkNlsp7WtqsM/ws+G74P/gT+Z2brWWx7NeF/w/+BH4W/
hEfNYj2XbdcAPgi+HH4a/gEeO6v1gra9ZvCR8LXwS/Bv8ETZrBe37drCx8O3
wG/Ag2a3nsK2KwfvDJ8G3wm/Dw+dw3p6214VeE/4HPgB+H/wCDmtZ7XtasP7
wRfBj8Ffw6Plsp7HttcQPgS+An4W/hEeN7f1QrZdC/go+Hr4ZfgPeOI81kva
9trBJ8K3wm/Bg+W1nsq2Vx7eFT4dvhv+AB42n/UMtl01eC/4PPhB+DN4xPzW
s9v26sD7wxfDT8DfwGMUsJ7XtmsMHwpfBT8H/wyPV9B6EdteS/gY+Ab4VfhP
eNJC1kvZdh3gk+Db4bfhIQpbT23bVYR3g8+E74E/gv9RxHom2151eB/4fPhh
+HN45KLWc9h29eAD4EvhJ+Hv4DGLWc9v22sCHw5fDb8A/wJPUNx6UduuNXws
fBP8GtyVsJ7MtisD7wifAv8XfhcesqT1tLa9SvC/pIsPe14mv99nSY+KeHVq
H7/vkz437eD97X5/LB0z0foMX/z+Zylf1182p3eOveqZpRdmGnm4m7arKf10
219RNvq9r3TGwk0bvPX7P9Ldj1VckXGf+hHpHZXzfWqv7V5KB72eqsgqv0cp
7evSTaKPfeb3XNLjnvm+Yr96felLXV4lb6ntBknH/X6982K/L5NuPOjIrgd+
Py29NNymsEkOqL+XfjlpfvVG2i52GV9njTdmwVy/F5DutajXy5t+bya9J12L
3HEPqo+QDrm5ypDa2m6tdNn8BX1vofpF6QmH0sa/7Pdv0lfKx2od7ZB6wrK+
jn85xOYq2q64tO/dCjLB722klz++Ve6M38dLv+5wfHr4w+qbpbN/3vKwrLa7
Id3Hk09EPUg5X+8LPb7vUb+nkJYMdUS9rLTsTnFt11la3o5Bfp8qfUM+Dr/v
lE7sOx3cUfV70i1zxy1WQNuFLu/r1fqC6umk35f+cONfv1eRzn3+bsqvfu8h
7dU51TXnMfU50od8Z193bW+/dLi2S8Jt8vt/0pXfT6z5zu/hK/h6mhzwcfWs
0reCt/O9Req1pJOOrpV3td/7SfuOdthzvy+UXjs784XUJ9SPSX9MliBhK23v
lXTe1X+0XeL3aBV9PUDecL/nlvadXcGSnlRvKB2+xNkKjbW9wdJVT++cOc/v
K6Rn1PB9on4/I33n9pQs8U6pf5RO3nJgvzraXpxKvm4vH7jfC0lv7FE3xhW/
N5f+6ko1iX5afZR0weHZ1lTV9tZJD4mU+NsEv1+WPjHdt4d+/y4d2ccRzqgn
ruzrmnrCqZeQnuN7e0b5vZ30A/l4/D5BOrXv9Ah9Vn2rdMfj8gLqN6VlPAb7
PVgVX+t4+j2ltCwPQc6pl5eW5amgttdF2nd2jPjb79Olo/5IemmH33dJ1x7s
O0C/P5Ce9+fPdrnOq4ep6utHk30rkrbLIJ1WBs7vVaV9e1Ppvd97SW9NL2eE
+lxpt2XWfx213UHp4gV8b7Dfn0qPOtyt/wu/R6wm66fv009zUT2bdEwZeG1X
R7p+wzzNlvrdk174JMW6R35fLP20oxyh+nHpjF98H7C2eyPdvf+LSfP9Hr26
rJ9hrt257fe80kF1wVFvJF0y9oYedbXdUGlZ3Wb4faW079ONeNXv56Tly2Nc
Uf8kLbtbTdvFq+Frebsm+r2wtH5cfm8pnVl/oPpoaflp5bXdBmkZl9F+vyKt
4+r3n9KyXIS5pp6kpqyfvuWqpLYrJX3Ft1wO8Xt76fhyQH6fJN3Ud7kIel19
m/Ry3+WqkLa7Lf1aBszvwWvJ+umblp1+Ty3dJ0ehON/9XkF6327fgn9DvZt0
aHlDtb0Z0uXPhPy12e97pCfVfOc7BPWH0tdkwG+q/1Hb177F5V4nbS+jdPM3
vjPO79WlV/aUC456b2m5GqS9pT5f2jcNkdtoe4ekfVV/md+fSx/QBUY9Uh1f
h01S9GOy2+o5pH1X38JNtb260r7VZ8wCvw+Qlnf/jt+XSCf1fXuCO+onpVv7
dr+etvdWeq0scH6PWVfWT/0B6vmk8/pOn5h31ZtID/CdvtW1vWHSR3zjM8nv
q6XDy/j6/bx0Vd/yEeme+hfpGbLAanvx68n6KQfg96LSyWX59nsrabl8hL2v
PlZaLl+ltL2N0nL5HOr3a9J6+fb7L2m5fQj2QD1ZfV/L7Uthba+0tNw+eX7v
KC1Xz11+nyztWz2i/vD7v9K+d69hnofqd6RTfi21sqe2C9lA1nu9wKinkd4s
H6DfK0l/nxBhXNZH6t2lC/vO1s7abpb0sH9kQVHfK30qzcUur/z+WDrqxr27
0z1WD9dQ1k+5wGm7zNLz9ARSryH9qOzQf574va90Wt+PS/5EfYF0Z9/hNNN2
R6S3PpRvUH8hrR+n36M08rWcTgn/U88pLadzfW1XX1rGaZbfB0rrOPt9mbQs
J7Geqp+SluWshrZ7Ly1HP9nvsRr7WpdzvxeQlstJ5GfqTaXlclZR242Qlsvp
WL+vkS4pl3O/X5Qe47ud+OO5+lfpC77bmVLaLmETWT/1BkO9mHRDGWC/t5Fe
7Jvu4C/Ux0k/lxtebbdZOvNIuaCoX5fu4bub3u33IE1l/Zzpu8L5Pbl0cLnB
ealeVrq0LiDqnaTHZfWtMH6fKn1Jbrj9vkPad/c2PNsr9XvScvXqou2FauZr
3/QmWu/3dNK+vW/32u+VpeXHp3+t3kO6l36B+mxpeXtX+H2/tH68fn8iLWdL
ijfq4ZvLeh9B9lg9i/Q133gt9Hst6YQy3n7/W7q57OBb9YXSK/WBQ/2o9Fu5
oPv9lXROWd79HrWFrJ++y0vsd+q5pQ9UkhtM9QbSYWUB9/tg6YryBvl9ufQU
eeB5r35G+obeUKh/kJbbq3F+j9PS13p75/eC0nJ7Ge6DenNpefXS2t5Iabm9
Hu73ddJ6e+/3S9JytQ/xUf27tDzeFNX2ErXytTxeDfB7CWl9vPN7W2nfzV7I
X36fIJ1UTxD1LdJt5YFP292UXi83VH4P2lrWT1mw/J5SOv8n+Qfq5aQH+Q63
q7brIn3M93Zv8Ps06Yjycft9l3R1feBUvy89S27otF2YNrJ+yoLp9/TSKWXc
/V5Vun0uecBQ7ykty10LbTdXWpbbRX4/IK3Lvd+fSg/RG0r1CG19LZe7htou
m7Rcbuf4vba0Xu797knL7Uac7+qLpOV2p5a2Oy4td0dT/f5aWm/3/B69nayf
esFQzyP9Uz4QbddIuqjvdnu834dIj5Dbfb+vlD6zUxYI9bPS0eWBX9t9kq4r
N9R+j9te1k+5YPm9sPQTPSHUW0in9z3uFtN2o6W7+h63B/p9vfR2edz3+xVp
p1sD8R+2XZIO1kvadu3hE+Hb4LfgwTtaT2XbVYB3hc+A74Y/hIftZD2jba8a
vDd8HvwQ/Bk8Umfr2W27uvD+8CXwE/C38BhdrOez7TWGD4Ovgp+Hf4bH72q9
iG3XCj4GvhF+Ff4LnrSb9dK2vQ7wyfDt8DvwEN2tp7HtVYR3h8+E74U/gof7
y3om264GvA98Afww/AU8cg/rOW179eAD4Uvhp+Dv4LF6Ws9v2zWFD4evgV+A
f4Un6GW9mG2vNXwcfBP8Otz1tp7ctlcG3gk+Bb4Dfhceqo/1tLZdZfhf8Nnw
ffAn8D/7Ws9i26sJ/xv+D/wo/CU86t/Wc9l2DeCD4Mvhp+Ef4LH7WS9o22sG
HwlfC78E/wZP5Fkvbtu1hY+Hb4HfgAftbz2FbVcO3hk+Db4Tfh8eeoD19La9
KvCe8DnwA/D/4BEGWs9q29WG94Mvgh+Dv4ZHG2Q9j22vIXwIfAX8LPwjPO5g
64VsuxbwUfD18MvwH/DEQ6yXtO21g0+Eb4Xfggcbaj2Vba88vCt8Onw3/AE8
7DDrGWy7avBe8Hnwg/Bn8IjDrWe37dWB94cvhp+Av4HHGGE9r23XGD4Uvgp+
Dv4ZHm+k9SK2vZbwMfAN8Kvwn/Cko6yXsu06wCfBt8Nvw0OMtp7atqsI7waf
Cd8DfwT/Y4z1TLa96vA+8Pnww/Dn8Mhjreew7erBB8CXwk/C38FjjrOe37bX
BD4cvhp+Af4FnmC89aK2XWv4WPgm+DW4m2A9mW1XBt4RPgX+L/wuPORE62lt
e5Xgf8FnwffBH8P/nGQ9s21XE94X/g/8CPwlPMpk67lse/Xhg+DL4Kfh7+Gx
p1gvYNs1g4+Ar4VfhH+DJ5xqvbhtrw18PHwz/AY8yDTrKWx7ZeGd4VPhO+H3
4KGnW09n21WB94DPge+H/wcPP8N6VtteLXg/+EL4MfgreLSZ1nPbdg2lrwyf
fWV4PPXB0s8PlH9+IL76it9fn1D9jHTUPOui5Emk/lE6ZffGKbonVo8zy9d5
fbwuiXoh6fLyA5OqN5f2fXXjFMnVR0l313+gvk56hG93ZqdUvyw9R3Ywlfp3
6fW+Hx8ljXri2b6W3S2fVr3E7MDxpFNvNztwPOnVJ8wOHE9G9a2zA8eTSf3m
7MDxZFYPNidwPFnUU84JHE9W9fJzAseTXb3LnMDx5FCfPidwPDnVd80JHE8u
9QdzAseTRz3M3MDx5FXPMDdwPPnUq84NHE9+9V5zA8dTUH2ubXcQ/hQecZ71
bLZdHbgHXww/Dn8Djz7fel7bXiP4UPhK+Dn4J3i8BdYL23Yt4aPhG+BX4D/h
Sf6xXsq21x4+Cb4NfhsefKH11La9CvBu8BnwPfCH8D8WWc9o21WH94bPhx+C
P4dHWmw9h22vLnwAfAn8JPytdNJSE5KWKqwec4mvS/tyQlH1fNLtr29ud724
ehPpCfoN6sOkfbq5XRn11dI35B+UUz+/JPB6FdW/LAm8XmX1+EsDr1dVvejS
wOtVV2+1NPB6tdTHLg28Xh31jUsDr1dP/drSwOs1VP+1NPB6jdWTLQu8XlP1
0ssCr9dcveOywOu1Up+8LPB6bdT/XRZ4vXbqd5YFXq+jesjlgdfrrJ5meeD1
uqpXWh54ve7q3ZcHXq+n+qzlgdfrrb53eeD1+qo/Xh54PU893ArTLrNtrwa8
L3wB/Aj8BTzKSus5bbv68IHwZfBT8PfwWKusF7DtNYWPgK+BX4R/hSdcbb2Y
bdcGPg6+GX4dHmSN9eS2XVl4J/hU+A74PXiotdbT2fYqw3vAZ8P3w5/Aw6+z
nsW2qwX/G74QfhT+Ch51vfXctr0G8MHw5fAz8A/wOBusF7TtmsNHwtfBL8G/
wxNttF7CttcWPgG+BX4THnST9ZS2vXLwLvBp8F3w+/Awm62nt+2qwnvC58IP
wJ/CI2yxns22VxvuwRfBj8Nfw6NvtZ7HtmsEHwJfCT8L/wSPu816YdteC/ho
+Hr4FfgPeJLt1kvadu3hE+Hb4Lfgwf+1nsq2qwDvCp8B3w1/CA+7w3pG2141
eG/4PPgh+DN4pJ3Ws9t2deH94UvgJ+Bv4TF2Wc9n22sMHwZfBT8P/wyPv9t6
EduuFXwMfCP8KvwXPOke66Vtex3gk+Hb4XfgIfZaT2PbqwjvDp8J3wt/BA+3
z3om264GvA98Afww/AU88n7rOW179eAD4Uvhp+Dv4LEOWM9v2zWFD4evgV+A
f4UnOGi9mG2vNXwcfBP8Otwdsp7ctlcG3gk+Bb4Dfhce6rD1tLZdZfhf8Nnw
ffAn8D+PWM9i26sJ/xv+D/wo/CU86lHruWy7BvBB8OXw0/AP8NjHrBe07TWD
j4SvhV+Cf4MnOm69uG3XFj4evgV+Ax70hPUUtl05eGf4NPhO+H146JPW09v2
qsB7wufAD8D/g0c4ZT2rbVcb3g++CH4M/hoe7bT1PLa9hvAh8BXws/CP8Lhn
rBey7VrAR8HXwy/Df8ATn7Ve0rbXDj4RvhV+Cx7snPVUtr3y8K7w6fDd8Afw
sOetZ7DtqsF7wefBD8KfwSNesJ7dtlcH3h++GH4C/gYe46L1vLZdY/hQ+Cr4
OfhneLxL1ovY9lrCx8A3wK/Cf8KTXrZeyrbrAJ8E3w6/DQ9xxXpq264ivBt8
JnwP/BH8j6vWM9n2qsP7wOfDD8OfwyNfs57DtqsHHwBfCj8JfwePed16ftte
E+kFI9NvfzJAfbh08Rj1up4drL5a+ol8wTD1C9KjfF++YKT6F2nNMeoJbvj6
XDHfDxivXlS661nfP5ik3lo6pu/HF5uqPlZavj39DPVN0vXlG2arX7sR2N95
6u5mYH8XqCe7GdjfReplbgb2d6l6x5uB/V2hPuVmYH9Xq/97M7C/69Tv3gzs
70b1kLcC+7tFPe2twP5uV690K7C/O9X/uhXY3z3qs2y7ffDH8D9vW89s29WE
94X/Az8CfwmPcsd6Ltteffgg+DL4afh7eOy71gvYds3gI+Br4Rfh3+AJ71kv
bttrAx8P3wy/AQ9y33oK215ZeGf4VPhO+D146AfW09l2VeA94HPg++H/wcM/
9HXOMfdzjtmvnlW6c9zDneIeVq8lrf/+2mPq/aQfyDecUl8orV9+Vv2YtP/f
36v+Slp+/P0r6tEe+fqI78s73VDP/SiwP3fUGz4K7M999cGPAvvzWH3Fo8D+
PFU/8yiwPy/VPz4K7M8b9TiPA/vzQb3Q48D+fFZv/jiwP9/VRz0O7I9rKL7O
trsM/w5P/MR6CduuHXwCfCv8JjzYf9ZT2nbl4V3g0+G74A/gYZ5az2Dbqwrv
BZ8LPwh/Co/4zHo2264O3IMvhh+Hv4FHf249r22vEXwofCX8HPwTPN4L64Vt
u5bw0fAN8Cvwn/AkL62Xsu21h0+Cb4Pfhgd/ZT21ba8CvBt8BnyP9JvXvi2i
+kNp3SKp//Ha1xPG+zZtL6P0vbu+ze/VpTPLFlm9t/TAAb5N282XPn/Ot/n9
kHQS2aKoP5fuIpu2F+mNrw/s921+zyEdVTf1utJNZdN2A6Q3bfRtfl8iHUK2
aOonpavpv69c/a304kW+ze8x3/r64wff5vd80sVli67eRHrqFN+m7Q2TfvzI
t/l9tXQO2WKon5ceNtS3absv0lcu+za/x3/n65SyxVQvKt1DNm2vlfTRI77N
72OlY+mmvlG6lWza7pr09m2+ze+/pMPKFls92Xtf15ZN2ystvULWc793lP72
1bf5fbJ0GdniqP8rPWumb9P27kg/f+bb/B7yg6/zyhZXPY306FG+TdtVkr55
w7f5vbt0Otniqc+S7iubtrdX+tRJ3+b3x9LxdVMP99HX7WXTdpmld+/ybX6v
IR1BtgTqfaUbyKbtLZBeu8a3+f3Ix8A8JFR/IV1RNm0X5ZOv58/zbX7P+Skw
L36v/ykwL4nUB34KzIu2W/YpMC9+P/UpMC+J1d9/CsyLthfrc2Be/F7gc2Be
kqg3/RyYF2034nNgXvy+5nNgXpKqX/wcmBdt7+vnwLz4PeGXwLwkUy/2JTAv
2q7Nl8C8+H3cl8C8+H3zl8C8JFe//iUwL9ouyNfAvPg9+dfAvKRQL/s1MC/a
XqevgXnx+9SvgXlJqb7ja2BetN29r4F58Xuob4F5SaWe7ltgXrS9yt8C8+L3
Ht8C85Jaffa3wLxou/3fAvPi9yffAvPi9/DfA/OSRj3L98C8aLta3wPz4ve/
vwfmJa36wu+BedH2jn4PzIvfX30PzEs69ag/AvOi7XL/CMyL3xv8CMxLevXB
PwLzou0t/xGYF7+f+RGYlwzqH34E5kXbxfkZmBe/F/wZmJeM6s1/BuZF2xv5
MzAvfl/3MzAvfr/0MzAvmdS//wzMi7aX6FdgXvxe4ldgXjKrt/0VmBdtN+FX
YF78vuVXYF6yqN/8FZgXbS+oS/r/8+L3lNI6L1nVy0nrvGi7LtI6L36fJq3z
kk19l7TOi7Z3X1rnxe9hgiT9/3nxe3ppnZfs6lWldV60vZ7SOi9+nyut85JD
/YC0zou2eyqt8+L3CEGT/v+85FTPJq3zou3VltZ58bsnrfOSS32RtM6Ltjsu
rfPi99fSOi+51aMHS/r/86Lt5ZHWefF7I2mdF78PkdZ5yaO+UlrnRds7K63z
4vdP0jovedXjBk/6//Oi7QpL67z4vYW0jks+9dHSOi/a3nppnRe/X5HWecmv
/kNa50XbJQmR9P/nxe8lpXVeCqi3l9Z50fYmSuu8+H2btM5LQfVbtl3wkNZT
2XYV4F3hM+C74Q/hYUNZz2jbqwbvDZ8HPwR/Jq3Pg4XUI4X2dS55ACyinj10
YF6KqdeV1ufNEur9pfV5saT6ktCB86m0+glp+fGdyqq/ldbn0fLqMcIE9qei
er4wgf2ppN44TGB/qqgPCxPYn2rqq8IE9qeG+vkwgf2pqf45TGB/aqvHDxvY
n7rqRcIG9qe+equwgf1pqD7GttsIvwr/BU/6h/XStr0O8Mnw7fA78BDhrKex
7VWEd4fPhO+FP4KH+9N6JtuuBrwPfAH8MPwFPHJ46zlte/XgA+FL4afg7+Cx
IljPb9s1hQ+Hr4FfgH+FJ4hovZhtrzV8HHwT/DrcRbKe3LZXBt4JPgW+A34X
Hiqy9bS2XWX4X/DZ8H3wJ/A/o1jPYturCf8b/g/8KPwl3HefbjyXbdcAPgi+
HH4a/gEeO5r1gra9ZvCR8LXwS/Bv8ETRrRe37drCx8O3wG/Ag8awnsK2Kwfv
DJ8G3wm/Dw8d03p6214VeE/4HPgB+H/wCLGsZ7XtasP7wRfBj8Ff/25PPVps
0y6Pba8hfAh8Bfws/CM8bhzrhWy7FvBR8PXwy/Af8MRxrZe07bWDT4Rvhd+C
B4tnPZVtrzy8K3w6fDf8ATxsfOsZbLtq8F7wefCD8GfwiAmsZ7ft1YH3hy+G
n4C/gcdIaD2vbdcYPhS+Cn4O/hkeL5H1Ira9lvAx8A3wq/Cf8KSJrZf6P67u
MbyOpwHD+NS2bdtKUtu2m7RJbbdT27Zt27Zt2/Z7ds/7z3U9d7/d/U1OdnZn
Z8/VftjgHux6++Ae7vrk4B7t+s7gHu/6veCe7HqYVP/1dNczBvds16sE93zX
u2qbWfD98KfwSKnVc2jbWvA+8AXwY/DX8Jhp1PNpm4bwgfDl8DPwT/D4adX9
tG1z+Aj4Wvhl+A94snTqJbRNEHwcfAv8JtykV0+jbcrDO8CnwnfBH8DDZlDP
rG2rwrvDZ8MPwp/Bo2RUz6lt6sD7whfBj8PfwmNlUi+gbRvBB8NXwM/BP8MT
ZlYvrG384SPh6+FX4L/gybOol9K2reET4Fvht+Ehsqqn07YV4J3g0+B74A/h
4bOpZ9E21eE94HPhh+Av4FGzq+fWtnXh/eGL4Sfh7+BxcqgX1DZN4EPgq+Dn
4V/hiXKqF9W2AfDR8A3wa/Df8JS51Etrm7bwifDt8DvwULnV02ubSvDO8Bnw
vfDH8Ah51LNp2xrwXvB58CPwl/DoedXzaJv6cAtfCj8F/wCPm0/dR9s2hQ+D
r4ZfhH+DJ8mvXkzbtIKPgW+CX4f/hacqoF5W27aDT4bvcPrH6kQVJuxz/V6w
33c9dMHU/3/fdcimjmd02n1/dWqnbWWn3fdRl3K9q9MjnPdpt3J9ptPuv1+O
dH2/02ec912vdv2J0++c91efdT1SIU87r9+O8cH17E47r9POFauZ47Wc9v7/
h9O2t9PO666713Z9gdPu+7p7un7Uaff927Ncf+20+z7tPa7H8Amer+v5fILn
29zxBj7B83XaDPQJnq/ry5x23x/eyvUzPsHzdf2jT/B8XY/vGzxf1319g+fr
enPf4Pm2cHy4b/B8nTZrnXbf713b9Uu+wfN1/Ydv8HxdT+oXPF/XS/gFz9f1
QL//jven6+P8/vt9cfwd3xw8PrvT5mbw+HKu/wse7+96msL/jbeulwvu5a53
CO7zrk8J7u+u7wru5AGO3w/uIk6bsEX+6yauZwpu63rV4J7verfg3u/67OC+
7/qB4DYtHX8W3MmdtpGLBv9+13MGdxPXawe3db1vcM93fWFwL3f9eHCvd/1N
cG93PVax4ON1PX9wH3e9UXCfd31QcF93fUVw33f9bHA/d/1zcL93PUHx4PPv
euHgNq0cb6FtRsLXwa/Af8KTl1AvqW1aw8fDt8JvwUOUVE+rbSrAO8KnwXfD
H8LDlVLPom2rwXvA58APwZ/Do5ZWz6Vt6sL7wRfDT8DfwWOXUS+obRvDh8BX
ws/Dv8ATlVUvom0C4KPgG+BX4b/hKcqpl9a2beAT4dvgd+Ahy6un17YV4Z3h
0+F74Y/gESqoZ9U2NeA94fPgh+Ev4dEqqufRtvXgFr4Efgr+Hh63knohbdMU
PhS+Gn4B/g2euLJ6MW3bEj4GvhF+Hf4HnqqKehlt0w4+Cb4Dfhceuqp6Bm1T
Gd4FPhO+D/4EHrGaenZtWxPeGz4ffhT+Ch6junpebdMAPgC+DH4a/hEer4a6
r7ZtBh8OXwO/BP8OT1pTvbi2CYSPhW+G34D/g6eupV5O27aHT4HvhN+Hh6mt
nknbVoF3g8+CH4A/hUeuo55D29SG94EvhB+Dv4HHrKueX9s2hA+CL4efhX+C
J6in7qdtWsBHwNfBL8N/wpPVVy+pbYPg4+Fb4LfgpoF6Wm1bHt4RPhW+G/4A
Hq6hemZtUw3eHT4HfhD+HB6lkXoubVsH3g++CH4C/hYeu7F6AW3TGD4YvhJ+
Dv4FnrCJehFt6w8fBV8Pvwr/BU/RVL2UtmkDnwDfBr8ND9lMPZ22qQjvBJ8O
3wN/BA/fXD2rtq0O7wmfCz8MfwGP1kI9t7apB+8PXwI/CX8Pj+OvXkjbNoEP
ha+CX4B/hScOUC+qbVrCR8M3wq/B/8BTtlQvo23bwifBt8PvwkO1Us+gbSvB
u8BnwPfBH8MjBqpn0zY14b3g8+FH4K/g0YPU82rb+vAB8KXw0/AP8Hit1X20
TTP4MPga+EX4d3iSNurFtW0r+Fj4JvgN+F946rbqZbVNe/hk+E74PXiYduoZ
tU0VeFf4LPh++FN4pPbqObRtLXgf+AL4MfhreMwO6vm0TUP4QPhy+Bn4J3j8
jup+2rY5fAR8Lfwy/Ac8WSf1EtomCD4OvgV+E246q6fRNuXhHeBT4bvgD+Bh
u6hn1rZV4d3hs+EH4c/gUbqq59Q2deB94Yvgx+Fv4bG6qRfQto3gg+Er4Ofg
n+EJu6sX1jb+8JHw9fAr8F/w5D3US2nb1vAJ8K3w2/AQPdXTadsK8E7wafA9
8Ifw8L3Us2ib6vAe8LnwQ/AX8Ki91XNr27rw/vDF8JPwd/A4fdQLapsm8CHw
VfDz8K/wRH3Vi2rbAPho+Ab4NfhveMp+6qW1TVv4RPh2+B14qP7q6bVNJXhn
+Az4XvhjeASrnk3b1oD3gs+DH4G/hEcfoJ5H29SHW/hS+Cn4B3jcgeo+2rYp
fBh8Nfwi/Bs8ySD1YtqmFXwMfBP8OvwvPNVg9bLath18MnwH/B489BD1jNq2
MrwrfCZ8P/wJPNJQ9ezapha8N3wB/Cj8NTzGMPV82rYBfCB8GfwM/CM8/nB1
X23THD4cvhZ+Cf4DnnSEegltGwgfB98Mvwn/B08zUr2ctukAnwLfBb8PDztK
PZO2qQrvBp8NPwB/Bo88Wj2ntq0N7wtfCD8OfwOPNUY9v7ZpBB8EXwE/C/8M
TzBWvbC2bQEfCV8HvwL/CU8+Tr2ktmkNHw/fCr8FDzFePa22qQDvCJ8G3w1/
CA83QT2Ltq0G7wGfAz8Efw6POlE9l7apC+8HXww/AX8Hjz1JvaC2bQwfAl8J
Pw//Ak80Wb2ItgmAj4JvgF+F/4anmKJeWtu2gU+Eb4PfgYecqp5e21aEd4ZP
h++FP4JHmKaeVdvUgPeEz4Mfhr+ER5uunkfb1oNb+BL4Kfh7eNwZ6oW0TVP4
UPhq+AX4N3jimerFtG1L+Bj4Rvh1+B94qlnqZbRNO/gk+A74XXjo2eoZtE1l
eBf4TPg++BN4xDnq2bVtTXhv+Hz4UfgreIy56nm1TQP4APgy+Gn4R3i8eeq+
2rYZfDh8DfwS/Ds86Xz14tomED4Wvhl+A/4PnnqBejlt2x4+Bb4Tfh8eZqF6
Jm1bBd4NPgt+AP4UHnmReg5tUxveB74Qfgz+Bh5zsXp+bdsQPgi+HH4W/gme
YIm6n7ZpAR8BXwe/DP8JT7ZUvaS2DYKPh2+B34KbZepptW15eEf4VPhu+AN4
uOXqmbVNNXh3+Bz4QfhzeJQV6rm0bR14P/gi+An4W3jsleoFtE1j+GD4Svg5
+Bd4wlXqRbStP3wUfD38KvwXPMVq9VLapg18Anwb/DY85Br1dNqmIrwTfDp8
D/wRPPxa9azatjq8J3wu/DD8BTzaOvXc2qYevD98Cfwk/D08znr1Qtq2CXwo
fBX8AvwrPPEG9aLapiV8NHwj/Br8DzzlRvUy2rYtfBJ8O/wuPNQm9QzathK8
C3wGfB/8MTziZvVs2qYmvBd8PvwI/BU8+hb1vNq2PnwAfCn8NPwDPN5WdR9t
0ww+DL4GfhH+HZ5km3pxbdsKPha+CX4D/heeert6WW3THj4ZvhN+Dx5mh3pG
bVMF3hU+C74f/hQeaad6Dm1bC94HvgB+DP4aHnOXej5t0xA+EL4cfgb+CR5/
t7qftm0OHwFfC78M/wFPtke9hLYJgo+Db4HfhJu96mm0TXl4B/hU+C74A3jY
feqZtW1VeHf4bPhB+DN4lP3qObVNHXhf+CL4cfhbeKwD6gW0bSP4YPgK+Dn4
Z3jCg+qFtY0/fCR8PfwK/Bc8+SH1Utq2NXwCfCv8NjzEYfV02rYCvBN8GnwP
/CE8/BH1LNqmOrwHfC78EPwFPOpR9dzati68P3wx/CT8HTzOMfWC2qYJfAh8
Ffw8/Cs80XH1oto2AD4avgF+Df4bnvKEemlt0xY+Eb4dfgce6qR6em1TCd4Z
PgO+F/4YHuGUejZtWwPeCz4PfgT+Eh79tHoebVMfbuFL4afgH+Bxz6j7aNum
8GHw1fCL8G/wJGfVi2mbVvAx8E3w6/C/8FTn1Mtq23bwyfAd8Hvw0OfVM2rb
yvCu8Jnw/fAn8EgX1LNrm1rw3vAF8KPw1/AYF9XzadsG8IHwZfAz8I/w+JfU
fbVNc/hw+Fr4JfgPeNLL6iW0bSB8HHwz/Cb8HzzNFfVy2qYDfAp8F/w+POxV
9Uzapiq8G3w2/AD8GTzyNfWc2rY2vC98Ifw4/A081nX1/NqmEXwQfAX8LPwz
PMEN9cLatgV8JHwd/Ar8Jzz5TfWS2qY1fDx8K/wWPMQt9bTapgK8I3wafDf8
ITzcbfUs2rYavAd8DvwQ/Dk86h31XNqmLrwffDH8BPwdPPZd9YLatjF8CHwl
/Dz8CzzRPfUi2iYAPgq+AX4V/hue4r56aW3bBj4Rvg1+Bx7ygXp6bVsR3hk+
Hb4X/gge4aF6Vm1TA94TPg9+GP4SHu2Reh5tWw9u4Uvgp+Dv4XEfqxfSNk3h
Q+Gr4Rfg3+CJn6gX07Yt4WPgG+HX4X/gqZ6ql9E27eCT4Dvgd+Ghn6ln0DaV
4V3gM+H74E/gEZ+rZ9e2NeG94fPhR+Gv4DFeqOfVNg3gA+DL4KfhH+HxXqr7
attm8OHwNfBL8O/wpK/Ui2ubQPhY+Gb4Dfg/eOrX6uW0bXv4FPhO+H2no2bZ
OOddMtfDvPH0sLg3zn5z22R689/45K5X0Tbd4LPgB+BP4ZHfqufQNrXhfeAL
4cfgb+Ax36nn17YN4YPgy+Fn4Z/gCd6r+2mbFvAR8HXwy/Cf8GQf1Etq2yD4
ePgW+C24+aieVtuWh3eET4Xvhj+Ah/uknlnbVIN3h8+BH4Q/h0f5rJ5L29aB
94Mvgp+Av4XH/qJeQNs0hg+Gr4Sfg3+BJ/yqXkTb+sNHwdfDr8J/wVN8Uy+l
bdrAJ8C3wW/DQ35XT6dtKsI7wafD98AfwcP/UM+qbavDe8Lnwg/DX8Cj/VTP
rW3qwfvDl8BPwt/D4/xSL6Rtm8CHwlfBL8C/whP/Vi+qbVrCR8M3wq/B/8BT
/lEvo23bwifBt8PvwkP9Vc+gbSvBu8BnwPfBH8Mj/lPPpm1qwnvB58OPwF/B
o5s04nm1bX34APhS+Gn4B3i8EOo+2qYZfBh8Dfwi/Ds8SUj14tq2FXwsfBP8
BvwvPHUo9bLapj18Mnwn/B48TGj1jNqmCrwrfBZ8P/wpPFIY9Rzatha8D3wB
/Bj8NTxmWPV82qYhfCB8OfwM/BM8fjh1P23bHD4CvhZ+Gf4Dniy8egltEwQf
B98Cvwk3EdTTaJvy8A7wqfBd8AfwsBHVM2vbqvDu8Nnwg/Bn8CiR1HNqmzrw
vvBF8OPwt/BYkdULaNtG8MHwFfBz8M/whFHUC2sbf/hI+Hr4FfgvePKo6qW0
bWv4BPhW+G14iGjq6bRtBXgn+DT4HvhDePjo6lm0TXV4D/hc+CH4C3jUGOq5
tW1deH/4YvhJ+Dt4nJjqBbVNE/gQ+Cr4efhXeKJY6kW1bQB8NHwD/Br8Nzxl
bPXS2qYtfCJ8O/wOPFQc9fTaphK8M3wGfC/8MTxCXPVs2rYGvBd8HvwI/CU8
ejz1PNqmPtzCl8JPwT/A48ZX99G2TeHD4KvhF+Hf4EkSqBfTNq3gY+Cb4Nfh
f+GpEqqX1bbt4JPhO+D34KETqWfUtpXhXeEz4fvhT+CREqtn1za14L3hC+BH
4a/hMZKo59O2DeAD4cvgZ+Af4fGTqvtqm+bw4fC18EvwH/CkydRLaNtA+Dj4
ZvhN+D94muTq5bRNB/gU+C74fXjYFOqZtE1VeDf4bPgB+DN45JTqObVtbXhf
+EL4cfgbeKxU6vm1TSP4IPgK+Fn4Z3iC1OqFtW0L+Ej4OvgV+E948jTqJbVN
a/h4+Fb4LXiItOpptU0FeEf4NPhu+EN4uHTqWbRtNXgP+Bz4IfhzeNT06rm0
TV14P/hi+An4O3jsDOoFtW1j+BD4Svh5+Bd4oozqRbRNAHwUfAP8Kvw3PEUm
9dLatg18Inwb/A48ZGb19Nq2IrwzfDp8L/wRPEIW9azapga8J3we/DD8JTxa
VvU82rYe3MKXwE/B38PjZlMvpG2awofCV8MvwL/BE2dXL6ZtW8LHwDfCr8P/
wFPlUC+jbdrBJ8F3wO/CQ+dUz6BtKsO7wGfC98GfwCPmUs+ubWvCe8Pnw4/C
X8Fj5FbPq20awAfAl8FPwz/C4+VR99W2zeDD4Wvgl+Df4UnzqhfXNoHwsfDN
8Bvwf/DU+dTLadv28CnwnfD78DD51TNp2yrwbvBZ8APwp/DIBdRzaJva8D7w
hfBj8DfwmAXV82vbhvBB8OXws/BP8ASF1P20TQv4CPg6+GX4T3gyH/WS2jYI
Ph6+BX4LbnzV02rb8vCO8Knw3fAH8HB+6pm1TTV4d/gc+EH4c3iUwuq5tG0d
eD/4IvgJ+Ft47CLqBbRNY/hg+Er4OfgXeMKi6kW0rT98FHw9/Cr8FzxFMfVS
2qYNfAJ8G/w2PGRx9XTapiK8E3w6fA/8ETx8CfWs2rY6vCd8Lvww/AU8Wkn1
3NqmHrw/fAn8JPw9PE4p9ULatgl8KHwV/AL8KzxxafWi2qYlfDR8I/wa/A88
ZRn1Mtq2LXwSfDv8LjxUWfUM2rYSvAt8Bnwf/DE8Yjn1bNqmJrwXfD78CPwV
PHp59bzatj58AHwp/DT8AzxeBXUfbdMMPgy+Bn4R/h2epKJ6cW3bCj4Wvgl+
A/4XnrqSellt0x4+Gb4Tfg8eprJ6Rm1TBd4VPgu+H/4UHqmKeg5tWwveB74A
fgz+Gh6zqno+bdMQPhC+HH4G/gkev5q6n7ZtDh8BXwu/DP8BT1ZdvYS2CYKP
g2+B34SbGupptE15eAf4VPgu+AN42JrqmbVtVXh3+Gz4QfgzeJRa6jm1TR14
X/gi+HH4W3is2uoFtG0j+GD4Cvg5+Gd4wjrqhbWNP3wkfD38CvwXPHld9VLa
tjV8Anwr/DY8RD31dNq2ArwTfBp8D/whPHx99Szapjq8B3wu/BD8BTxqA/Xc
2rYuvD98Mfwk/B08TkP1gtqmCXwIfBX8PPwrPFEj9aLaNgA+Gr4Bfg3+G56y
sXppbdMWPhG+HX4HHqqJenptUwneGT4Dvhf+GB6hqadzPLl8Z2o217M5vfen
f8xZhV2v4XT56N9Kzavsei+nb6QZ3ntRY9fnOR1QKMH6Ze1dP+L05yorH6/q
7/pLpwc4A8a5Hr2Zp6P2OV1x8zzX8zg9e0LDgdvXuV7f6QzL3m7dvc916/S2
3f1f7T/n+lKnS1yMnvzIPddPOX3x2YIaJ965/sHpxn9yjjjzz/W4zT39Oubh
PReiBTru43Sv9DU/XknmtG3qdDi/p2lvZnN9mNNTqnevf7ew66udThkYfvzD
yq5fdHp9vxmHnzZ2/ZvTvpMz/njZ3vUkLTx9csWuLO/6u17M6Tr7KjT7NM71
Vk47p/vbPNfHON35ZbtTv9a5vqnFf9dnv+vXnXbft37S9b9Ou+9bv+J6Kv//
xt93vaz/f+Nfut7O/7/xX1yfHDzeBDm+I3h8RKfNveDxcVwPHRC8XlzPGPDf
+IyuVw74b3we17sGjy/i+szg8eVc3x88vqbrT4LHN3E9Usv/xge5nr3lf+O7
ul6r5X/jreu9nXaGrxzp+gKnaznjp7h+NHj8fNdfB49f6XqMVv+N3+J6vlbB
59/1Bk53SnysY+Jjrg90+nH+sY/yn3V9WfDPX3H9jNPHPaM73nb9o9PO8LGP
XI8f+N/vf+m6r9Pux39wvbnT7vDvrg8PDL5erR1fG/jf8YRz2l4K/O94orr+
I/C/44njetKg/44nseslgv47nlSuBwb9dzwZXR8X9N/x5HB9c9B/x5Pf9ZtB
wdfX9X/aJk1r9XLapgN8CnwX/D48bBv1TNqmKrwbfDb8APwZPHJb9Zzatja8
L3wh/Dj8DTxWO/X82qYRfBB8Bfws/DM8QXv1wtq2BXwkfB38CvwnPHkH9ZLa
pjV8PHwr/BY8REf1tNqmArwjfBp8N/whPFwn9Szathq8B3wO/BD8OTxqZ/Vc
2qYuvB98MfwE/B08dhf1gtq2MXwIfCX8PPwLPFFX9SLaJgA+Cr4BfhX+G56i
m3ppbdsGPhG+DX4HHrK7enptWxHeGT4dvhf+CB6hh3pWbVMD3hM+D34Y/hIe
rad6Hm1bD27hS+Cn4O/hcXupF9I2TeFD4avhF+Df4Il7qxfTti3hY+Ab4dfh
f+Cp+qiX0Tbt4JPgO+B34aH7qmfQNpXhXeAz4fvgT+AR+6ln17Y14b3h8+FH
4a/gMfqr59U2DeAD4Mvgp+Ef4fGsuq+2bQYfDl8DvwT/Dk86QL24tgmEj4Vv
ht+A/4OnHqheTtu2h0+B74Tfh4cZpJ5J21aBd4PPgh+AP4VHHqyeQ9vUhveB
L4Qfg7+Bxxyinl/bNoQPgi+Hn4V/gicYqu6nbVrAR8DXwS/Df8KTDVMvqW2D
4OPhW+C34Ga4elptWx7eET4Vvhv+AB5uhHpmbVMN3h0+B34Q/hweZaR6Lm1b
B94Pvgh+Av4WHnuUegFt0xg+GL4Sfg7+BZ5wtHoRbesPHwVfD78K/wVPMUa9
lLZpA58A3wa/DQ85Vj2dtqkI7wSfDt8DfwQPP049q7atDu8Jnws/DH8BjzZe
Pbe2qQfvD18CPwl/D48zQb2Qtm0CHwpfBb8A/wpPPFG9qLZpCR8N3wi/Bv8D
TzlJvYy2bQufBN8OvwsPNVk9g7atBO8CnwHfB38MjzhFPZu2qQnvBZ8PPwJ/
BY8+VT2vtq0PHwBfCj8N/wCPN03dR9s0gw+Dr4FfhH+HJ5muXlzbtoKPhW+C
34D/haeeoV5W27SHT4bvhN+Dh5mpnlHbVIF3hc+C74c/hUeapZ5D29aC94Ev
gB+Dv4bHnK2eT9s0hA+EL4efgX+Cx5+j7qdtm8NHwNfCL8N/wJPNVS+hbYLg
4+Bb4DfhZp56Gm1THt4BPhW+C/4AHna+emZtWxXeHT4bfhD+DB5lgXpObVMH
3he+CH4c/hYea6F6AW3bCD4YvgJ+Dv4ZnnCRemFt4w8fCV8PvwL/BU++WL2U
tm0NnwDfCr8ND7FEPZ22rQDvBJ8G3wN/CA+/VD2LtqkO7wGfCz8EfwGPukw9
t7atC+8PXww/CX8Hj7NcvaC2aQIfAl8FPw//Ck+0Qr2otg2Aj4ZvgF+D/4an
XKleWtu0hU+Eb4ffgYdapZ5e21SCd4bPgO+FP4ZHWK2eTdvWgPeCz4Mfgb+E
R1+jnkfb1Idb+FL4KfgHeNy16j7atil8GHw1/CL8GzzJOvVi2qYVfAx8E/w6
/C881Xr1stq2HXwyfAf8Hjz0BvWM2rYyvCt8Jnw//Ak80kb17NqmFrw3fAH8
KPw1PMYm9XzatgF8IHwZ/Az8Izz+ZnVfbdMcPhy+Fn4J/gOedIt6CW0bCB8H
3wy/Cf8HT7NVvZy26QCfAt8Fvw8Pu009k7apCu8Gnw0/AH8Gj7xdPae2rQ3v
C18IPw5/A4+1Qz2/tmkEHwRfAT8L/wxPsFO9sLZtAR8JXwe/Av8JT75LvaS2
aQ0fD98KvwUPsVs9rbapAO8InwbfDX8ID7dHPYu2rQbvAZ8DPwR/Do+6Vz2X
tqkL7wdfDD8BfwePvU+9oLZtDB8CXwk/D/8CT7RfvYi2CYCPgm+AX4X/hqc4
oF5a27aBT4Rvg9+Bhzyonl7bVoR3hk+H74U/gkc4pJ5V29SA94TPgx+Gv4RH
O6yeR9vWg1v4Evgp+Ht43CPqhbRNU/hQ+Gr4Bfg3eOKj6sW0bUv4GPhG+HX4
H3iqY+pltE07+CT4DvhdeOjj6hm0TWV4F/hM+D74E3jEE+rZtW1NeG/4fPhR
+Ct4jJPqebVNA/gA+DL4afhHeLxT6r7athl8OHwN/BL8OzzpafXi2iYQPha+
GX4D/g+e+ox6OW3bHj4FvhN+Hx7mrHombVsF3g0+C34A/hQe+Zx6Dm1TG94H
vhB+DP4GHvO8en5t2xA+CL4cfhb+CZ7ggrqftmkBHwFfB78M/wlPdlG9pLYN
go+Hb4HfgptL6mm1bXl4R/hU+G74A3i4y+qZtU01eHf4HPhB+HN4lCvqubRt
HXg/+CL4CfhbeOyr6gW0TWP4YPhK+Dn4F3jCa+pFtK0/fBR8Pfwq/Bc8xXX1
UtqmDXwCfBv8NjzkDfV02qYivBN8OnwP/BE8/E31rNq2OrwnfC78MPwFPNot
9dzaph68P3wJ/CT8PTzObfVC2rYJfCh8FfwC/Cs88R31otqmJXw0fCP8GvwP
POVd9TLati18Enw7/C481D31DNq2ErwLfAZ8H/wxPOJ99Wzapia8F3w+/Aj8
FTz6A/W82rY+fAB8Kfw0/AM83kN1H23TDD4MvgZ+Ef4dnuSRenFt2wo+Fr4J
fgP+F576sXpZbdMePhm+E34PHuaJekZtUwXeFT4Lvh/+FB7pqXoObVsL3ge+
AH4M/hoe85l6Pm3TED4Qvhx+Bv4JHv+5up+2bQ4fAV8Lvwz/AU/2Qr2EtgmC
j4Nvgd+Em5fqabRNeXgH+FT4LvgDeNhX6pm1bVV4d/hs+EH4M3iU1+o5tU0d
eF/4Ivhx+Ft4rDfqBbRtI/hg+Ar4OfhneMK36oW1jT98JHw9/Ar8Fzz5O/VS
2rY1fAJ8K/w2PMR79XTatgK8E3wafA/8ITz8B/Us2qY6vAd8LvwQ/AU86kf1
3Nq2Lrw/fDH8JPwdPM4n9YLapgl8CHwV/Dz8KzzRZ/Wi2jYAPhq+AX4N/hue
8ot6aW3TFj4Rvh1+Bx7qq3p6bVMJ3hk+A74X/hge4Zt6Nm1bA94LPg9+BP4S
Hv27eh5tUx9u4Uvhp+Af4HF/qPto26bwYfDV8Ivwb/AkP9WLaZtW8DHwTfDr
8L/wVL/Uy2rbdvDJ8B3we/DQv9UzatvK8K7wmfD98CfwSH/Us2ubWvDe8AXw
o/DX8Bh/1fNp2wbwgfBl8DPwj/D4/9R9tU1z+HD4Wvgl+A94UpNWvIS2DYSP
g2+G34T/g6cJoV5O23SAT4Hvgt+Hhw2pnknbVIV3g8+GH4A/g0cOpZ5T29aG
94UvhB+Hv4HHCq2eX9s0gg+Cr4CfhX+GJwijXljbtoCPhK+DX4H/hCcPq15S
27SGj4dvhd+ChwinnlbbVIB3hE+D74Y/hIcLr55F21aD94DPgR+CP4dHjaCe
S9vUhfeDL4afgL+Dx46oXlDbNoYPga+En4d/gSeKpF5E2wTAR8E3wK/Cf8NT
RFYvrW3bwCfCt8HvwENGUU+vbSvCO8Onw/fCH8EjRFXPqm1qwHvC58EPw1/C
o0VTz6Nt68EtfAn8FPw9PG509ULapil8KHw1/AL8GzxxDPVi2rYlfAx8I/w6
/A88VUz1MtqmHXwSfAf8Ljx0LPUM2qYyvAt8Jnwf/Ak8Ymz17Nq2Jrw3fD78
KPwVPEYc9bzapgF8AHwZ/DT8IzxeXHVfbdsMPhy+Bn4J/h2eNJ56cW0TCB8L
3wy/Af8HTx1fvZy2bQ+fAt8Jvw8Pk0A9k7atAu8GnwU/AH8Kj5xQPYe2qQ3v
A18IPwZ/A4+ZSD2/tm0IHwRfDj8L/wRPkFjdT9u0gI+Ar4Nfhv+EJ0uiXlLb
BsHHw7fAb8FNUvW02rY8vCN8Knw3/AE8XDL1zNqmGrw7fA78IPw5PEpy9Vza
tg68H3wR/AT8LTx2CvUC2qYxfDB8Jfwc/As8YUr1ItrWHz4Kvh5+Ff4LniKV
eilt0wY+Ab4NfhseMrV6Om1TEd4JPh2+B/4IHj6NelZtWx3eEz4Xfhj+Ah4t
rXpubVMP3h++BH4S/h4eJ516IW3bBD4Uvgp+Af4Vnji9elFt0xI+Gr4Rfg3+
B54yg3oZbdsWPgm+HX4XHiqjegZtWwneBT4Dvg/+GB4xk3o2bVMT3gs+H34E
/goePbN6Xm1bHz4AvhR+Gv4BHi+Luo+2aQYfBl8Dvwj/Dk+SVb24tm0FHwvf
BL8B/wtPnU29rLZpD58M3wm/Bw+TXT2jtqkC7wqfBd8PfwqPlEM9h7atBe8D
XwA/Bn8Nj5lTPZ+2aQgfCF8OPwP/BI+fS91P2zaHj4CvhV+G/4Any61eQtsE
wcfBt8Bvwk0e9TTapjy8A3wqfBf8ATxsXvXM2rYqvDt8Nvwg/Bk8Sj71nNqm
DrwvfBH8OPwtPFZ+9QLathF8MHwF/Bz8MzxhAfXC2sYfPhK+Hn4F/guevKB6
KW3bGj4BvhV+Gx6ikHo6bVsB3gk+Db4H/hAe3kc9i7apDu8Bnws/BH8Bj+qr
nlvb1oX3hy+Gn4S/g8fxUy+obZrAh8BXwc/Dv8ITFVYvqm0D4KPhG+DX4L/h
KYuol9Y2beET4dvhd+Chiqqn1zaV4J3hM+B74Y/hEYqpZ9O2NeC94PPgR+Av
4dGLq+fRNvXhFr4Ufgr+AR63hLqPtm0KHwZfDb8I/wZPUlK9mLZpBR8D3wS/
Dv8LT1VKvay2bQefDN8BvwcPXVo9o7atDO8KnwnfD38Cj1RGPbu2qQXvDV8A
Pwp/DY9RVj2ftm0AHwhfBj8D/wiPX07dV9s0hw+Hr4Vfgv+AJy2vXkLbBsLH
wTfDb8L/wdNUUC+nbTrAp8B3we/Dw1ZUz6RtqsK7wWfDD8CfwSNXUs+pbWvD
+8IXwo/D38BjVVbPr20awQfBV8DPwj/DE1RRL6xtW8BHwtfBr8B/wpNXVS+p
bVrDx8O3wm/BQ1RTT6ttKsA7wqfBd8MfwsNVV8+ibavBe8DnwA/Bn8Oj1lDP
pW3qwvvBF8NPwN/BY9dUL6htG8OHwFfCz8O/wBPVUi+ibQLgo+Ab4Ffhv+Ep
aquX1rZt4BPh2+B34CHrqKfXthXhneHT4Xvhj+AR6qpn1TY14D3h8+CH4S/h
0eqp59G29eAWvgR+Cv4eHre+eiFt0xQ+FL4afgH+DZ64gXoxbdsSPga+EX4d
/geeqqF6GW3TDj4JvgN+Fx66kXoGbVMZ3gU+E74P/gQesbF6dm1bE94bPh9+
FP4KHqOJel5t0wA+AL4Mfhr+ER6vqbqvtm0GHw5fA78E/w5P2ky9uLYJhI+F
b4bfgP+Dp26uXk7btodPge+E34eHaaGeSdtWgXeDz4IfgD+FR/ZXz6FtasP7
wBfCj8HfwGMGqOfXtg3hg+DL4Wfhn+AJWqr7aZsW8BHwdfDL8J/wZK3US2rb
IPh4+Bb4LbgJVE+rbcvDO8KnwnfDH8DDBaln1jbV4N3hc+AH4c/hUVqr59K2
deD94IvgJ+Bv4bHbqBfQNo3hg+Er4efgX+AJ26oX0bb+8FHw9fCr8F/wFO3U
S2mbNvAJ8G3w2/CQ7dXTaZuK8E7w6fA98Efw8B3Us2rb6vCe8Lnww/AX8Ggd
1XNrm3rw/vAl8JPw9/A4ndQLadsm8KHwVfAL8K/wxJ3Vi2qblvDR8I3wa/A/
8JRd1Mto27bwSfDt8LvwUF3VM2jbSvAu8BnwffDH8Ijd1LNpm5rwXvD58CPw
V/Do3dXzatv68AHwpfDT8A/weD3UfbRNM/gw+Br4Rfh3eJKe6sW1bSv4WPgm
+A34X3jqXupltU17+GT4Tvg9eJje6hm1TRV4V/gs+H74U3ikPuo5tG0teB/4
Avgx+Gt4zL7q+bRNQ/hA+HL4GfgnePx+6n7atjl8BHwt/DL8BzxZf/US2iYI
Pg6+BX4Tbqx6Gm1THt4BPhW+C/4AHnaAemZtWxXeHT4bfhD+DB5loHpObVMH
3he+CH4c/hYea5B6AW3bCD4YvgJ+Dv4ZnnCwemFt4w8fCV8PvwL/BU8+RL2U
tm0NnwDfCr8NDzFUPZ22rQDvBJ8G3wN/CA8/TD2LtqkO7wGfCz8EfwGPOlw9
t7atC+8PXww/CX8HjzNCvaC2aQIfAl8FPw//Ck80Ur2otg2Aj4ZvgF+D/4an
HKVeWtu0hU+Eb4ffgYcarZ5e21SCd4bPgO+FP4ZHGKOeTdvWgPeCz4Mfgb+E
Rx+rnkfb1Idb+FL4KfgHeNxx6j7atil8GHw1/CL8GzzJePVi2qYVfAx8E/w6
/C881QT1stq2HXwyfAf8Hjz0RPWM2rYyvCt8Jnw//Ak80iT17NqmFrw3fAH8
KPw1PMZk9XzatgF8IHwZ/Az8Izz+FHVfbdMcPhy+Fn4J/gOedKp6CW0bCB8H
3wy/Cf8HTzNNvZy26QCfAt8Fvw8PO109k7apCu8Gnw0/AH8GjzxDPae2rQ3v
C18IPw5/A481Uz2/tmkEHwRfAT8L/wxPMEu9sLZtAR8JXwe/Av8JTz5bvaS2
aQ0fD98KvwUPMUc9rbapAO8InwbfDX8IDzdXPYu2rQbvAZ8DPwR/Do86Tz2X
tqkL7wdfDD8BfwePPV+9oLZtDB8CXwk/D/8CT7RAvYi2CYCPgm+AX4X/hqdY
qF5a27aBT4Rvg9+Bh1yknl7bVoR3hk+H74U/gkdYrJ5V29SA94TPgx+Gv4RH
W6KeR9vWg1v4Evgp+Ht43KXqhbRNU/hQ+Gr4Bfg3eOJl6sW0bUv4GPhG+HX4
H3iq5epltE07+CT4DvhdeOgV6hm0TWV4F/hM+D74E3jElerZtW1NeG/4fPhR
+Ct4jFXqebVNA/gA+DL4afhHeLzV6r7athl8OHwN/BL8OzzpGvXi2iYQPha+
GX4D/g+eeq16OW3bHj4FvhN+Hx5mnXombVsF3g0+C34A/hQeeb16Dm1TG94H
vhB+DP4GHnODen5t2xA+CL4cfhb+CZ5go7qftmkBHwFfB78M/wlPtkm9pLYN
go+Hb4HfgpvN6mm1bXl4R/hU+G74A3i4LeqZtU01eHf4HPhB+HN4lK3qubRt
HXg/+CL4CfhbeOxt6gW0TWP4YPhK+Dn4F3jC7epFtK0/fBR8Pfwq/Bc8xQ71
UtqmDXwCfBv8NjzkTvV02qYivBN8OnwP/BE8/C71rNq2OrwnfC78MPwFPNpu
9dzaph68P3wJ/CT8PTzOHvVC2rYJfCh8FfwC/Cs88V71otqmJXw0fCP8GvwP
POU+9TLati18Enw7/C481H71DNq2ErwLfAZ8H/wxPOIB9Wzapia8F3w+/Aj8
FTz6QfW82rY+fAB8Kfw0/AM83iF1H23TDD4MvgZ+Ef4dnuSwenFt2wo+Fr4J
fgP+F576iHpZbdMePhm+E34PHuaoekZtUwXeFT4Lvh/+FB7pmHoObVsL3ge+
AH4M/hoe87h6Pm3TED4Qvhx+Bv4JHv+Eup+2bQ4fAV8Lvwz/AU92Ur2EtgmC
j4Nvgd+Em1PqabRNeXgH+FT4LvgDeNjT6pm1bVV4d/hs+EH4M3iUM+o5tU0d
eF/4Ivhx+Ft4rLPqBbRtI/hg+Ar4OfhneMJz6oW1jT98JHw9/Ar8Fzz5efVS
2rY1fAJ8K/w2PMQF9XTatgK8E3wafA/8ITz8RfUs2qY6vAd8LvwQ/AU86iX1
3Nq2Lrw/fDH8JPwdPM5l9YLapgl8CHwV/Dz8KzzRFfWi2jYAPhq+AX4N/hue
8qp6aW3TFj4Rvh1+Bx7qmnp6bVMJ3hk+A74X/hge4bp6Nm1bA94LPg9+BP4S
Hv2Geh5tUx9u4Uvhp+Af4HFvqvto26bwYfDV8Ivwb/Akt9SLaZtW8DHwTfDr
8L/wVLfVy2rbdvDJ8B3we/DQd9QzatvK8K7wmfD98CfwSHfVs2ubWvDe8AXw
o/DX8Bj31PNp2wbwgfBl8DPwj/D499V9tU1z+HD4Wvgl+A940gfqJbRtIHwc
fDP8JvwfPM1D9XLapgN8CnwX/D487CP1TNqmKrwbfDb8APwZPPJj9Zzatja8
L3wh/Dj8DTzWE/X82qYRfBB8Bfws/DM8wVP1wtq2BXwkfB38CvwnPPkz9ZLa
pjV8PHwr/BY8xHP1tNqmArwjfBp8N/whPNwL9Szathq8B3wO/BD8OTzqS/Vc
2qYuvB98MfwE/B089iv1gtq2MXwIfCX8PPwLPNFr9SLaJgA+Cr4BfhX+G57i
jXppbdsGPhG+DX4HHvKtenptWxHeGT4dvhf+CB7hnXpWbVMD3hM+D34Y/hIe
7b16Hm1bD27hS+Cn4O/hcT+oF9I2TeFD4avhF+Df4Ik/qhfTti3hY+Ab4dfh
f+CpPqmX0Tbt4JPgO+B34aE/q2fQNpXhXeAz4fvgT+ARv6hn17Y14b3h8+FH
4a/gMb6q59U2DeAD4Mvgp+Ef4fG+qftq22bw4fA18Evw7/Ck39WLa5tA+Fj4
ZvgN+D946h/q5bRte/gU+E74fXiYn+qZtG0VeDf4LPgB+FN45F/qObRNbXgf
+EL4MfgbeMzf6vm1bUP4IPhy+Fn4J3iCP+p+2qYFfAR8Hfwy/Cc82V/1kto2
CD4evgV+C27+qafVtuXhHeFT4bvhD+DhTDrxzNqmGrw7fA78IPw5PEoI9Vza
tg68H3wR/AT8LTx2SPUC2qYxfDB8Jfwc/As8YSj1ItrWHz4Kvh5+Ff4LniK0
eilt0wY+Ab4NfhseMox6Om1TEd4JPh2+B/4IHj6selZtWx3eEz4Xfhj+Ah4t
nHpubVMP3h++BH4S/h4eJ7x6IW3bBD4Uvgp+Af4VnjiCelFt0xI+Gr4Rfg3+
B54yonoZbdsWPgm+HX4XHiqSegZtWwneBT4Dvg/+GB4xsno2bVMT3gs+H34E
/goePYp6Xm1bHz4AvhR+Gv4BHi+quo+2aQYfBl8Dvwj/Dk8STb24tm0FHwvf
BL8B/wtPHV29rLZpD58M3wm/Bw8TQz2jtqkC7wqfBd8PfwqPFFM9h7atBe8D
XwA/Bn8NjxlLPZ+2aQgfCF8OPwP/BI8fW91P2zaHj4CvhV+G/4Ani6NeQtsE
wcfBt8Bvwk1c9TTapjy8A3wqfBf8ATxsPPXM2rYqvDt8Nvwg/Bk8Snz1nNqm
DrwvfBH8OPwtPFYC9QLathF8MHwF/Bz8MzxhQvXC2sYfPhK+Hn4F/guePJF6
KW3bGj4BvhV+Gx4isXo6bVsB3gk+Db4H/hAePol6Fm1THd4DPhd+CP4CHjWp
em5tWxfeH74YfhL+Dh4nmXpBbdMEPgS+Cn4e/hWeKLl6UW0bAB8N3wC/Bv8N
T5lCvbS2aQufCN8OvwMPlVI9vbapBO8MnwHfC38Mj5BKPZu2rQHvBZ8HPwJ/
CY+eWj2PtqkPt/Cl8FPwD/C4adR9tG1T+DD4avhF+Dd4krTqxbRNK/gY+Cb4
dfhfeKp06mW1bTv4ZPgO+D146PTqGbVtZXhX+Ez4fvgTeKQM6tm1TS14b/gC
+FH4a3iMjOr5tG0D+ED4MvgZ+Ed4/EzqvtqmOXw4fC38EvwHPGlm9RLaNhA+
Dr4ZfhP+D54mi3o5bdMBPgW+C34fHjareiZtUxXeDT4bfgD+DB45m3pObVsb
3he+EH4c/gYeK7t6fm3TCD4IvgJ+Fv4ZniCHemFt2wI+Er4OfgX+E548p3pJ
bdMaPh6+FX4LHiKXelptUwHeET4Nvhv+EB4ut3oWbVsN3gM+B34I/hweNY96
Lm1TF94Pvhh+Av4OHjuvekFt2xg+BL4Sfh7+BZ4on3oRbRMAHwXfAL8K/w1P
kV+9tLZtA58I3wa/Aw9ZQD29tq0I7wyfDt8LfwSPUFA9q7apAe8Jnwc/DH8J
j1ZIPY+2rQe38CXwU/D38Lg+6oW0TVP4UPhq+AX4N3hiX/Vi2rYlfAx8I/w6
/A88lZ96GW3TDj4JvgN+Fx66sHoGbVMZ3gU+E74P/gQesYh6dm1bE94bPh9+
FP4KHqOoel5t0wA+AL4Mfhr+ER6vmLqvtm0GHw5fA78E/w5PWly9uLYJhI+F
b4bfgP+Dpy6hXk7btodPge+E34eHKameSdtWgXeDz4IfgD+FRy6lnkPb1Ib3
gS+EH4O/gccsrZ5f2zaED4Ivh5+Ff4InKKPup21awEfA18Evw3/Ck5VVL6lt
g+Dj4Vvgt+CmnHpabVse3hE+Fb4b/gAerrx6Zm1TDd4dPgd+EP4cHqWCei5t
WwfeD74IfgL+Fh67onoBbdMYPhi+En4O/gWesJJ6EW3rDx8FXw+/Cv8FT1FZ
vZS2aQOfAN8Gvw0PWUU9nbapCO8Enw7fA38ED19VPau2rQ7vCZ8LPwx/AY9W
TT23tqkH7w9fAj8Jfw+PU129kLZtAh8KXwW/AP8KT1xDvai2aQkfDd8Ivwb/
A09ZU72Mtm0LnwTfDr8LD1VLPYO2rQTvAp8B3wd/DI9YWz2btqkJ7wWfDz8C
fwWPXkc9r7atDx8AXwo/Df8Aj1dX3UfbNIMPg6+BX4R/hyepp15c27aCj4Vv
gt+A/4Wnrq9eVtu0h0+G74Tfg4dpoJ5R21SBd4XPgu+HP4VHaqieQ9vWgveB
L4Afg7+Gx2yknk/bNIQPhC+Hn4F/gsdvrO6nbZvDR8DXwi/Df8CTNVEvoW2C
4OPgW+A34aapehptUx7eAT4Vvgv+AB62mXpmbVsV3h0+G34Q/gwepbl6Tm1T
B94Xvgh+HP4WHquFegFt2wg+GL4Cfg7+GZ7QX72wtvGHj4Svh1+B/4InD1Av
pW1bwyfAt8Jvw0O0VE+nbSvAO8GnwffAH8LDt1LPom2qw3vA58IPwV/Aowaq
59a2deH94YvhJ+Hv4HGC1AtqmybwIfBV8PPwr/BErdWLatsA+Gj4Bvg1+G94
yjbqpbVNW/hE+Hb4HXioturptU0leGf4DPhe+GN4hHbq2bRtDXgv+Dz4EfhL
ePT26nm0TX24hS+Fn4J/gMftoO6jbZvCh8FXwy/Cv8GTdFQvpm1awcfAN8Gv
w//CU3VSL6tt28Enw3fA78FDd1bPqG0rw7vCZ8L3w5/AI3VRz65tasF7wxfA
j8Jfw2N0Vc+nbRvAB8KXwc/AP8Ljd1P31TbN4cPha+GX4D/gSburl9C2gfBx
8M3wm/B/8DQ91Mtpmw7wKfBd8PvwsD3VM2mbqvBu8NnwA/Bn8Mi91HNq29rw
vvCF8OPwN/BYvdXza5tG8EHwFfCz8M/wBH3UC2vbFvCR8HXwK/Cf8OR91Utq
m9bw8fCt8FvwEP3U02qbCvCO8Gnw3fCH8HD91bNo22rwHvA58EPw5/CoVj2X
tqkL7wdfDD8BfwePPUC9oLZtDB8CXwk/D/8CTzRQvYi2CYCPgm+AX4X/hqcY
pF5a27aBT4Rvg9+Bhxysnl7bVoR3hk+H74U/gkcYop5V29SA94TPgx+Gv4RH
G6qeR9vWg1v4Evgp+Ht43GHqhbRNU/hQ+Gr4Bfg3eOLh6sW0bUv4GPhG+HX4
H3iqEepltE07+CT4DvhdeOiR6hm0TWV4F/hM+D74E3jEUerZtW1NeG/4fPhR
+Ct4jNHqebVNA/gA+DL4afhHeLwx6r7athl8OHwN/BL8OzzpWPXi2iYQPha+
GX4D/g+eepx6OW3bHj4FvhN+Hx5mvHombVsF3g0+C34A/hQeeYJ6Dm1TG94H
vhB+DP4GHnOien5t2xA+CL4cfhb+CZ5gkrqftmkBHwFfB78M/wlPNlm9pLYN
go+Hb4Hfgpsp6mm1bXl4R/hU+G74A3i4qeqZtU01eHf4HPhB+HN4lGnqubRt
HXg/+CL4CfhbeOzp6gW0TWP4YPhK+Dn4F3jCGepFtK0/fBR8Pfwq/Bc8xUz1
UtqmDXwCfBv8NjzkLPV02qYivBN8OnwP/BE8/Gz1rNq2OrwnfC78MPwFPNoc
9dzaph68P3wJ/CT8PTzOXPVC2rYJfCh8FfwC/Cs88Tz1otqmJXw0fCP8GvwP
POV89TLati18Enw7/C481AL1DNq2ErwLfAZ8H/wxPOJC9Wzapia8F3w+/Aj8
FTz6IvW82rY+fAB8Kfw0/AM83mJ1H23TDD4MvgZ+Ef4dnmSJenFt2wo+Fr4J
fgP+F556qXpZbdMePhm+E34PHmaZekZtUwXeFT4Lvh/+FB5puXoObVsL3ge+
AH4M/hoec4V6Pm3TED4Qvhx+Bv4JHn+lup+2bQ4fAV8Lvwz/AU+2Sr2EtgmC
j4Nvgd+Em9XqabRNeXgH+FT4LvgDeNg16pm1bVV4d/hs+EH4M3iUteo5tU0d
eF/4Ivhx+Ft4rHXqBbRtI/hg+Ar4OfhneML16oW1jT98JHw9/Ar8Fzz5BvVS
2rY1fAJ8K/w2PMRG9XTatgK8E3wafA/8ITz8JvUs2qY6vAd8LvwQ/AU86mb1
3Nq2Lrw/fDH8JPwdPM4W9YLapgl8CHwV/Dz8KzzRVvWi2jYAPhq+AX4N/hue
cpt6aW3TFj4Rvh1+Bx5qu3p6bVMJ3hk+A74X/hgeYYd6Nm1bA94LPg9+BP4S
Hn2npwsmLll4RJ42judxuoJfkYvT3Tb1nW7UpJD/cq9bp9sNzPt9m9eXOm0X
5xh1zOunnJ54NHPSa17/4PTi5+k2PPV63F2e3hoxVYmvXvdx2hkeJq/rTZ2+
XilBUBy3zTCnX3aI/Se111c7/XtitPG5vX7R6chbPB/o9W9Oez5ta3WvJ9nt
6ew/TNnmXi/mdLFEv2918norp6v5fvNMyfUxTrdo/DHERK9vcrrbgDeTF3j9
utPDF3km5PW/Tk8/8mjnfq+n2uPplc/uVjzv9bJO745w8/49r7dz+mymK53f
eX2y057RYf95fYfT79ufmhE1n+v3nA7pnFC3bei9no69+cC+LF7P6HTqq7ur
+Xq9stOeq/Okgte7Ol0m4aYeDbw+0+l6PmsjtfH6fqfbNFoxt7fXnzjdx7mg
Xo+0z9NjF847PNPr2Z2ef3hm7ZVer+X0xqdTXu7wem+nD4af0PeE1xc4fTnj
6Og3vH7U6acVhi167vXXTn93FpTXY+z3tPPj4fK7ns9p5/DjuW0bOJ3Zc/rS
en2g037O5fP6Mqed5VPK62ecdpZvTa9/dLpTQ8/feD3+AU8P7l//bBev+zo9
eUGtpoO93tzppYeqfp7k9eFOb3/imYDX1zp9MpznDHv9ktO3MxRfc9DrP5x+
Xd5zQ3k96UFP/21b4NIDr5dwOvr43AEfvB7odMqN2X6YAq6PczqncwLdtpud
LvE1TbLkXr/pdK34KTZm8/o/p1s5N7TX0xzytOfsXa/k9XJOj+wXs3Ujr3dw
evb8KJ5Dcn2K02udC+j1XU7vfRwq9Riv33fas1q3zvZ62MOefpj+Z9nVXs/k
9OdyX27v8npVp0O39axor3dzOu64VyFveX220+k3eBaQ1w84XfDSg/Q/vf7M
aefjIhR0PfIRTzvTSeC2yel0O8/pTO/12k5b53J6va/TEz3LqYzXFzrtLOfa
Xj/utHM7tfT6G6ePem7nbl6PddTZjzzbyVCv53fa2c6meL2R057Z91zi9UFO
R26zLPIWr69wOqlzA3n9rNNZ18/Jednrn5327LZHHnk9wTFnP/o8qc4nrxd2
uoVzwgq53sLpLvk9V9BtM9LpofWGxEjp9XVOT3duYK9fcXql5+4u6vWfTntm
d7KK15Mf9/Tphx09d4TrJZ2+61wwr7d2+n3aVoP6e328057dNO44r2912rOa
Vsz1+i2nU4+p67PW6yFOOPvRuhrn9ng9rdNlLlRudsbrFZyu88lzhb3e0WnP
3Tv8tdenOd0nX9FEv72+2+mxno+P5OP6Q6ed6SVy24Y76Wnn9Gb0ehanDzqX
1+vVnL7sWV5lvd7DaWd51/X6HKed2yvQ64ecDu9soF5/7nRC5wC9HvWUp53t
bZrXczntbK/LvF7X6UrODeP1fk438Txejnp9sdPO4+2q10847Txen3j9ndOT
nRPk9dinnf2o19s7oX1dL+j09tkvOsR22zZ2+rhzw3p9iNOep8/UXF5f6fTr
kLcyFPf6eaf/ug8Q1784HbW05wJ5PdEZTycP9KwQrxdxOueoY10HeD3A6RJr
PBuG10c57bnas+Z7fYPTAR+2Z13v9atO94jlueO8/tvpkXk8C8TrKc562vN0
eXbX66Wd9txdvd56vY3Te2d5NiyvT3T6vOfXRfFzfZvTznSTuG3uOO2c7sxe
D3nO2Y+cy+319E7H9Sy38l6v6LSz3Ot7vbPTzu3W2uvTnS7nHJDX9zrdwLPd
jPT6I6fbOQ9wr0c472lnu13h9axOO9v9dq/XcHqh53Fz3Os9nd7sbNhen+e0
87h95vXDTjtX65vXXzr93PkCUdj1aBec/ci5Qd02eZx2vm6l8Xo9p92ve163
Tmdt6TwwXF/idJERngvi9VNOV1mVvVgLr793utkZzxcYr8e96OxH7zxnzOuF
nB4aI+WviV5v6rTnaoxd6PWhTi+v6XlgeX210zu7exaE1y84fXqGZwV6/ZvT
nt3/5n2vJ77kac/qb/ve68WcNs6fIq631DZj4Bvh1+F/4Kkuq5fRNu3gk+A7
4Hfhoa+oZ9A2leFd4DPh++BP4BGvqmfXtjXhveHz4Ufhr+Axrqnn1TYN4APg
y+Cn4R/h8a6r+2rbZvDh8DXwS/Dv8KQ31Itrm0D4WPhm+A34P3jqm+rltG17
+BT4Tvh9eJhb6pm0bRV4N/gs+AH4U3jk2+o5tE1teB/4Qvgx+Bt4zDvq+bVt
Q/gg+HL4WfgneIK76n7apgV8BHwd/DL8JzzZPfWS2jYIPh6+BX4Lbu6rp9W2
5eEd4VPhu+EP4OEeqGfWNtXg3eFz4Afhz+FRHqrn0rZ14P3gi+An4G/hsR+p
F9A2jeGD4Svh5+Bf4AkfqxfRtv7wUfD18KvwX/AUT9RLaZs28AnwbfDb8JBP
1dNpm4rwTvDp8D3wR/Dwz9Szatvq8J7wufDD8BfwaM/Vc2ubevD+8CXwk/D3
8Dgv1Atp2ybwofBV8P9xdU9RknRbFIVP27Zt27Zt27ZP27Zt27Zt/23buhWR
N3KMNftt1neqIjN2ZO7Hvgj/Co/7Ur2QtmkBHwPfBL8O/wNP/Eq9pLZtB58M
3wG/Bw/yWj2Vti0P7wqfCd8PfwwP/UY9g7apBu8NXwA/Cn8Fj/hWPbu2rQMf
CF8GPwP/AI/xTj2vtmkMHw5fC78E/w6P9169iLZtCR8H3wy/Cf8LT/pBvZS2
6QCfAt8Fvw8P9lE9tbapCO8Gnw0/AH8KD/NJPZO2rQ7vC18IPw5/DY/8WT2H
tqkHHwRfAT8L/wSP+UU9v7ZtAh8JXwe/Av8BT/BVvai2aQ0fD98KvwU339ST
aZsy8I7wafDd8Ifw4N/V02rbSvAe8DnwQ/Bn8HA/1DNrm5rwfvDF8BPwt/Ao
P9Vzadv68CHwlfDz8M/w2L/UC2ibZvBR8A3wq/Bf8IS/1Ytr2zbwifBt8Dvw
QH/UU2jbsvDO8OnwvfD/4CH/qqfTNlXgPeHz4IfhL+Dh/6ln1ba14APgS+Cn
4O/g0UxK8dzapiF8KHw1/AL8KzxOIPVC2rY5fAx8I/w6/Dc8cWD1EtqmHXwS
fAf8LjxIEPWU2qY8vAt8Jnwf/DE8VFD1DNq2Krw3fD78KPwlPGIw9Wzapg7c
wpfBT8M/wKMHV8+rbRvBh8PXwC/Bv8HjhVAvrG1awsfCN8NvwP/Ck4RUL6Vt
28OnwHfC78ODhlJPrW0rwLvBZ8EPwJ/Aw4RWz6htqsP7wBfCj8FfwyOFUc+h
bevCB8GXw8/CP8JjhlXPp22awEfA18Evw3/A44dTL6ptW8HHw7fAb8H/wZOF
Vy+tbTrCp8J3wx/Ag0dQT6NtKsG7w+fAD8KfwcNGVM+sbWvA+8EXwU/A38Cj
RFLPqW3qwwfDV8LPwT/DY0VWL6Btm8JHwdfDr8J/whNGUS+mbdrAJ8C3wW/D
A0VVT65tysI7wafD98D/g4eIpp5O21aG94TPhR+GP4eHj66eRdvUgveHL4Gf
hL+DR42hnlvbNoAPha+CX4B/gceJqV5Q2zSHj4ZvhF+D/4YniqVeQtu2hU+C
b4ffhQeOrZ5S25aDd4HPgO+DP4KHiqOeXttUhfeCz4cfgb+ER4irnk3b1oZb
+FL4afh7ePR46nm0TSP4MPga+EX4N3jc+OqFtW0L+Fj4JvgN+B94kgTqJbVN
e/hk+E74PXjQhOqptE0FeFf4LPh++BN46ETqGbVtNXgf+AL4MfgreKTE6tm1
TV34QPhy+Bn4R3iMJOr5tG1j+Aj4Wvhl+Hd4/KTqRbRNK/g4+Bb4Tfg/eNJk
6qW1bQf4VPgu+AN4sOTqabRtRXh3+Gz4QfhTeNgU6pm0TQ14X/gi+HH4G3jk
lOo5tW09+GD4Cvg5+Cd4rFTq+bVNU/hI+Hr4FfhPeILU6sW0bWv4BPhW+G24
SaOeXNuWgXeCT4PvgT+Eh0irnlbbVIb3gM+FH4I/h4dLp55F29aE94cvhp+E
v4VHTa+eS9s0gA+Br4Kfh3+Bx86gXlDbNoOPhm+AX4P/gifKqF5c27SFT4Rv
h9+BB86knkLblIN3hs+A74U/gofMrJ5e21aB94LPgx+Bv4BHyKKeVdvUhg+A
L4Wfgr+HR8uqnkfbNoQPg6+GX4R/hcfNpl5I27SAj4Fvgl+H/4Enzq5eUtu2
g0+G74DfgwfJoZ5K25aHd4XPhO+HP4aHzqmeQdtUg/eGL4Afhb+CR8ylnl3b
1oEPhC+Dn4F/gMfIrZ5X2zSGD4evhV+Cf4fHy6NeRNu2hI+Db4bfhP+FJ82r
XkrbdIBPge+C34cHy6eeWttUhHeDz4YfgD+Fh8mvnknbVof3hS+EH4e/hkcu
oJ5D29SDD4KvgJ+Ff4LHLKieX9s2gY+Er4Nfgf+AJyikXlTbtIaPh2+F34Kb
wurJtE0ZeEf4NPhu+EN48CLqabVtJXgP+Bz4IfgzeLii6pm1TU14P/hi+An4
W3iUYuq5tG19+BD4Svh5+Gd47OLqBbRNM/go+Ab4VfgveMIS6sW1bRv4RPg2
+B14oJLqKbRtWXhn+HT4Xvh/8JCl1NNpmyrwnvB58MPwF/DwpdWzatta8AHw
JfBT8HfwaGXUc2ubhvCh8NXwC/Cv8Dhl1Qtp2+bwMfCN8Ovw3/DE5dRLaJt2
8EnwHfC78CDl1VNqm/LwLvCZ8H3wx/BQFdQzaNuq8N7w+fCj8JfwiBXVs2mb
OnALXwY/Df8Aj15JPa+2bQQfDl8DvwT/Bo9XWb2wtmkJHwvfDL8B/wtPUkW9
lLZtD58C3wm/Dw9aVT21tq0A7wafBT8AfwIPU009o7apDu8DXwg/Bn8Nj1Rd
PYe2rQsfBF8OPwv/CI9ZQz2ftmkCHwFfB78M/wGPX1O9qLZtBR8P3wK/Bf8H
T1ZLvbS26QifCt8NfwAPXls9jbapBO8OnwM/CH8GD1tHPbO2rQHvB18EPwF/
A49SVz2ntqkPHwxfCT8H/wyPVU+9gLZtCh8FXw+/Cv8JT1hfvZi2aQOfAN8G
vw0P1EA9ubYpC+8Enw7fA/8PHqKhejptWxneEz4Xfhj+HB6+kXoWbVML3h++
BH4S/g4etbF6bm3bAD4Uvgp+Af4FHqeJekFt0xw+Gr4Rfg3+G56oqXoJbdsW
Pgm+HX4XHriZekptWw7eBT4Dvg/+CB6quXp6bVMV3gs+H34E/hIeoYV6Nm1b
G27hS+Gn4e/h0Vuq59E2jeDD4GvgF+Hf4HFbqRfWti3gY+Gb4Dfgf+BJWquX
1Dbt4ZPhO+H34EHbqKfSNhXgXeGz4PvhT+Ch26pn1LbV4H3gC+DH4K/gkdqp
Z9c2deED4cvhZ+Af4THaq+fTto3hI+Br4Zfh3+HxO6gX0Tat4OPgW+A34f/g
STuql9a2HeBT4bvgD+DBOqmn0bYV4d3hs+EH4U/hYTurZ9I2NeB94Yvgx+Fv
4JG7qOfUtvXgg+Er4Ofgn+Cxuqrn1zZN4SPh6+FX4D/hCbqpF9O2reET4Fvh
t+Gmu3pybVsG3gk+Db4H/hAeood6Wm1TGd4DPhd+CP4cHq6nehZtWxPeH74Y
fhL+Fh61l3oubdMAPgS+Cn4e/gUeu7d6QW3bDD4avgF+Df4LnqiPenFt0xY+
Eb4dfgceuK96Cm1TDt4ZPgO+F/4IHrKfenptWwXeCz4PfgT+Ah6hv3pWbVMb
PgC+FH4K/h4ebYB6Hm3bED4Mvhp+Ef4VHteqF9I2LeBj4Jvg1+F/4IkHqpfU
tu3gk+E74PfgQQapp9K25eFd4TPh++GP4aEHq2fQNtXgveEL4Efhr+ARh6hn
17Z14APhy+Bn4B/gMYaq59U2jeHD4Wvhl+Df4fGGqRfRti3h4+Cb4Tfhf+FJ
h6uX0jYd4FPgu+D34cFGqKfWNhXh3eCz4QfgT+FhRqpn0rbV4X3hC+HH4a/h
kUep59A29eCD4CvgZ+Gf4DFHq+fXtk3gI+Hr4FfgP+AJxqgX1Tat4ePhW+G3
4GasejJtUwbeET4Nvhv+EB58nHpabVsJ3gM+B34I/gwebrx6Zm1TE94Pvhh+
Av4WHmWCei5tWx8+BL4Sfh7+GR57onoBbdMMPgq+AX4V/guecJJ6cW3bBj4R
vg1+Bx5osnoKbVsW3hk+Hb4X/h885BT1dNqmCrwnfB78MPwFPPxU9azathZ8
AHwJ/BT8HTzaNPXc2qYhfCh8NfwC/Cs8znT1Qtq2OXwMfCP8Ovw3PPEM9RLa
ph18EnwH/C48yEz1lNqmPLwLfCZ8H/wxPNQs9Qzatiq8N3w+/Cj8JTzibPVs
2qYO3MKXwU/DP8Cjz1HPq20bwYfD18Avwb/B481VL6xtWsLHwjfDb8D/wpPM
Uy+lbdvDp8B3wu/Dg85XT61tK8C7wWfBD8CfwMMsUM+obarD+8AXwo/BX8Mj
LVTPoW3rwgfBl8PPwj/CYy5Sz6dtmsBHwNfBL8N/wOMvVi+qbVvBx8O3wG/B
/8GTLVEvrW06wqfCd8MfwIMvVU+jbSrBu8PnwA/Cn8HDLlPPrG1rwPvBF8FP
wN/AoyxXz6lt6sMHw1fCz8E/w2OtUC+gbZvCR8HXw6/Cf8ITrlQvpm3awCfA
t8FvwwOtUk+ubcrCO8Gnw/fA/4OHWK2eTttWhveEz4Ufhj+Hh1+jnkXb1IL3
hy+Bn4S/g0ddq55b2zaAD4Wvgl+Af4HHWadeUNs0h4+Gb4Rfg/+GJ1qvXkLb
toVPgm+H34UH3qCeUtuWg3eBz4Dvgz+Ch9qonl7bVIX3gs+HH4G/hEfYpJ5N
29aGW/hS+Gn4e3j0zep5tE0j+DD4GvhF+Dd43C3qhbVtC/hY+Cb4DfgfeJKt
6iW1TXv4ZPhO+D140G3qqbRNBXhX+Cz4fvgTeOjt6hm1bTV4H/gC+DH4K3ik
HerZtU1d+ED4cvgZ+Ed4jJ3q+bRtY/gI+Fr4Zfh3ePxd6kW0TSv4OPgW+E34
P3jS3eqltW0H+FT4LvgDeLA96mm0bUV4d/hs+EH4U3jYveqZtE0NeF/4Ivhx
+Bt45H3qObVtPfhg+Ar4OfgneKz96vm1TVP4SPh6+BX4T3iCA+rFtG1r+AT4
VvhtuDmonlzbloF3gk+D74E/hIc4pJ5W21SG94DPhR+CP4eHO6yeRdvWhPeH
L4afhL+FRz2inkvbNIAPga+Cn4d/gcc+ql5Q2zaDj4ZvgF+D/4InOqZeXNu0
hU+Eb4ffgQc+rp5C25SDd4bPgO+FP4KHPKGeXttWgfeCz4Mfgb+ARzipnlXb
1IYPgC+Fn4K/h0c7pZ5H2zaED4Ovhl+Ef4XHPa1eSNu0gI+Bb4Jfh/+BJz6j
XlLbtoNPhu+A34MHOaueStuWh3eFz4Tvhz+Ghz6nnkHbVIP3hi+AH4W/gkc8
r55d29aBD4Qvg5+Bf4DHuKCeV9s0hg+Hr4Vfgn+Hx7uoXkTbtoSPg2+G34T/
hSe9pF5K23SAT4Hvgt+HB7usnlrbVIR3g8+GH4A/hYe5op5J21aH94UvhB+H
v4ZHvqqeQ9vUgw+Cr4CfhX+Cx7ymnl/bNoGPhK+DX4H/cLpjwhgxe1VxPcH1
gI657lS9MS1cL+r0vjz9F8/v43prp5uezPRi03jXxzsdtsaT9McWu77V6U2P
Z3S9ud31W07X7lx21+vTrpsb3vUfuJ7M36ad42X8ndBp29HfBV2f5u+Gru/2
t3X9ob8XuB78ptcHXE/r7weuV/K3ae94D38ndNrO8XdB1w/5u6Hrz/xtXQ93
y3991zP7+4DrNf39wPV+/jYdHF/s74RO2xPa5i08ym31XNq2PnwIfCX8PPwz
PPYd9QLaphl8FHwD/Cr8FzzhXfXi2rYNfCJ8G/wOPNA99RTatiy8M3w6fC/8
P3jI++rptE0VeE/4PPhh+At4+AfqWbVtLfgA+BL4Kfg7eLSH6rm1TUOnv9/r
825vDteHOh0y0ZCIhXO6vtrpmE3GZDrmtr3gdOqlUyqXzuX6V6dzP5vT5Zzb
Ns5/AV06VcCB3K4Xcrp2m7Vbr7ltmzvdNiBr53F9jNN93+39ds9tu9HpgKvF
bJLX9etOO3/9mdv2t9PrAn69TT7XEz9yvg+/BbwBt20JpwNOz+mS3/V2Tjtv
75vbdpLT7wMu16eA6zse+b9PXL/rdMTCAXfAbRPkcUAnDrgdIQu5ntLpzAEv
b4zbprzThd0b5noXpys7N8BtM9Ppps4bKuL6Pqe7Oi/QbfPYaefPJyrqeqgn
AT3F+QNumwxOL3N+UMz1qk5vC3j7a902vZ12Xk6m4q7Pd9rhrW6bo04/d25g
CddfPvHm7baJ+NSbd0nXsz315u22qfPUm3cp1+1Tb95um2VPvXmXdv30U2/e
bpsPT715l3E9+jNv3m6bvM+8eZd1vdEzb95um+HPvHmXc33NM2/ebptLz7x5
l3f92zNv3m6beM+9eVdwvfBzb94VXW/53Ju323bsc2/elVzf/Nybt9v2xnNv
3pVd//vcm7fbNskLb95VXC/1wpu327b9C2/eVV2f8sKbt9t25wtv3tVcv//C
m7fbNuhLb97VXU/90pu327bCS2/eNVzv9tKbt9t21ktv3jVdP/DSm7fb9slL
b961XA/zypu32zbjK2/etV2v/sqbt9u2zytv3nVcX/jKm7fb9tgrb951XX/9
ypu32zbSa2/e9VzP8dqbt9u27mtv3vVdH/Tam7fbdvlrb94NXD/72pt3Q9c/
apuYb9TzaZsm8BHwdfDL8B/w+G/Vi2rbVvDx8C3wW/B/8GTv1Etrm47wqfDd
8Afw4O/V02ibSvDu8Dnwg/Bn8LAf1DNr2xrwfvBF8BPwN/AoH9Vzapv68MHw
lfBz8M/wWJ/UC2jbpvBR8PXwq/Cf8ISf1YtpmzbwCfBt8NvwQF/Uk2ubsvBO
8OnwPfD/4CG+qqfTtpXhPeFz4Yfhz+Hhv6ln0Ta14P3hS+An4e/gUb+r59a2
DeBD4avgF+Bf4HF+qBfUNs3ho+Eb4dfgv+GJfqqX0LZt4ZPg2+F34YF/qafU
tuXgXeAz4Pvgj+Chfqun1zZV4b3g8+FH4C/hEf6oZ9O2teEWvhR+Gv4eHv2v
eh5t0wg+DL4GfhH+DR73n3phbdsCPha+CX4D/geexKQSL6lt2sMnw3fC78GD
BlJPpW0qwLvCZ8H3w5/AQwdWz6htq8H7wBfAj8FfwSMFUc+uberCB8KXw8/A
P8JjBFXPp20bw0fA18Ivw7/D4wdTL6JtWsHHwbfAb8L/wZMGVy+tbTvAp8J3
wR/Ag4VQT6NtK8K7w2fDD8KfwsOGVM+kbWrA+8IXwY/D38Ajh1LPqW3rwQfD
V8DPwT/BY4VWz69tmsJHwtfDr8B/whOEUS+mbVvDJ8C3wm/DTVj15Nq2DLwT
fBp8D/whPEQ49bTapjK8B3wu/BD8OTxcePUs2rYmvD98Mfwk/C08agT1XNqm
AXwIfBX8PPwLPHZE9YLathl8NHwD/Br8FzxRJPXi2qYtfCJ8O/wOPHBk9RTa
phy8M3wGfC/8ETxkFPX02rYKvBd8HvwI/AU8QlT1rNqmNnwAfCn8FPw9PFo0
9TzatiF8GHw1/CL8KzxudPVC2qYFfAx8E/w6/A88cQz1ktq2HXwyfAf8HjxI
TPVU2rY8vCt8Jnw//DE8dCz1DNqmGrw3fAH8KPwVPGJs9ezatg58IHwZ/Az8
AzxGHPW82qYxfDh8LfwS/Ds8Xlz1Itq2JXwcfDP8JvwvPGk89VLapgN8CnwX
/D48WHz11NqmIrwbfDb8APwpPEwC9Uzatjq8L3wh/Dj8NTxyQvUc2qYefBB8
Bfws/BM8ZiL1/Nq2CXwkfB38CvwHPEFi9aLapjV8PHwr/BbcJFFPpm3KwDvC
p8F3wx/CgydVT6ttK8F7wOfAD8GfwcMlU8+sbWrC+8EXw0/A38KjJFfPpW3r
w4fAV8LPwz/DY6dQL6BtmsFHwTfAr8J/wROmVC+ubdvAJ8K3we/AA6VST6Ft
y8I7w6fD98L/g4dMrZ5O21SB94TPgx+Gv4CHT6OeVdvWgg+AL4Gfgr+DR0ur
nlvbNIQPha+GX4B/hcdJp15I2zaHj4FvhF+H/4YnTq9eQtu0g0+C74DfhQfJ
oJ5S25SHd4HPhO+DP4aHyqieQdtWhfeGz4cfhb+ER8yknk3b1IFb+DL4afgH
ePTM6nm1bSP4cPga+CX4N3i8LOqFtU1L+Fj4ZvgN+F94kqzqpbRte/gU+E74
fXjQbOqptW0FeDf4LPgB+BN4mOzqGbVNdXgf+EL4MfhreKQc6jm0bV34IPhy
+Fn4R3jMnOr5tE0T+Aj4Ovhl+A94/FzqRbVtK/h4+Bb4Lfg/eLLc6qW1TUf4
VPhu+AN48DzqabRNJXh3+Bz4QfgzeNi86pm1bQ14P/gi+An4G3iUfOo5tU19
+GD4Svg5+Gd4rPzqBbRtU/go+Hr4VfhPeMIC6sW0TRv4BPg2+G14oILqybVN
WXgn+HT4Hvh/8BCF1NNp28rwnvC58MPw5/DwhdWzaJta8P7wJfCT8HfwqEXU
c2vbBvCh8FXwC/Av8DhF1Qtqm+bw0fCN8Gvw3/BExdRLaNu28Enw7fC78MDF
1VNq23LwLvAZ8H3wR/BQJdTTa5uq8F7w+fAj8JfwCCXVs2nb2nALXwo/DX8P
j15KPY+2aQQfBl8Dvwj/Bo9bWr2wtm0BHwvfBL8B/wNPUka9pLZpD58M3wm/
Bw9aVj2VtqkA7wqfBd8PfwIPXU49o7atBu8DXwA/Bn8Fj1RePbu2qQsfCF8O
PwP/CI9RQT2ftm0MHwFfC78M/w6PX1G9iLZpBR8H3wK/Cf8HT1pJvbS27QCf
Ct8FfwAPVlk9jbatCO8Onw0/CH8KD1tFPZO2qQHvC18EPw5/A49cVT2ntq0H
HwxfAT8H/wSPVU09v7ZpCh8JXw+/Av8JT1BdvZi2bQ2fAN8Kvw03NdSTa9sy
8E7wafA98IfwEDXV02qbyvAe8LnwQ/Dn8HC11LNo25rw/vDF8JPwt/CotdVz
aZsG8CHwVfDz8C/w2HXUC2rbZvDR8A3wa/Bf8ER11Ytrm7bwifDt8DvwwPXU
U2ibcvDO8BnwvfBH8JD11dNr2yrwXvB58CPwF/AIDdSzapva8AHwpfBT8Pfw
aA3V82jbhvBh8NXwi/Cv8LiN1AtpmxbwMfBN8OvwP/DEjdVLatt28MnwHfB7
8CBN1FNp2/LwrvCZ8P3wx/DQTdUzaJtq8N7wBfCj8FfwiM3Us2vbOvCB8GXw
M/AP8BjN1fNqm8bw4fC18Evw7/B4LdSLaNuW8HHwzfCb8L/wpC3VS2mbDvAp
8F3w+/BgrdRTa5uK8G7w2fAD8KfwMK3VM2nb6vC+8IXw4/DX8Mht1HNom3rw
QfAV8LPwT/CYbdXza9sm8JHwdfAr8B/wBO3Ui2qb1vDx8K3wW3DTXj2ZtikD
7wifBt8NfwgP3kE9rbatBO8BnwM/BH8GD9dRPbO2qQnvB18MPwF/C4/SST2X
tq0PHwJfCT8P/wyP3Vm9gLZpBh8F3wC/Cv8FT9hFvbi2bQOfCN8GvwMP1FU9
hbYtC+8Mnw7fC/8PHrKbejptUwXeEz4Pfhj+Ah6+u3pWbVsLPgC+BH4K/g4e
rYd6bm3TED4Uvhp+Af4VHqeneiFt2xw+Br4Rfh3+G564l3oJbdMOPgm+A34X
HqS3ekptUx7eBT4Tvg/+GB6qj3oGbVsV3hs+H34U/hIesa96Nm1TB27hy+Cn
4R/g0fup59W2jeDD4Wvgl+Df4PH6qxfWNi3hY+Gb4Tfgf+FJBqiX0rbt4VPg
O+H34UGtemptWwHeDT4LfgD+BB5moHpGbVMd3ge+EH4M/hoeaZB6Dm1bFz4I
vhx+Fv4RHnOwej5t0wQ+Ar4Ofhn+Ax5/iHpRbdsKPh6+BX4L/g+ebKh6aW3T
ET4Vvhv+AB58mHoabVMJ3h0+B34Q/gwedrh6Zm1bA94Pvgh+Av4GHmWEek5t
Ux8+GL4Sfg7+GR5rpHoBbdsUPgq+Hn4V/hOecJR6MW3TBj4Bvg1+Gx5otHpy
bVMW3gk+Hb4H/h88xBj1dNq2MrwnfC78MPw5PPxY9Szapha8P3wJ/CT8HTzq
OPXc2rYBfCh8FfwC/As8znj1gtqmOXw0fCP8Gvw3PNEE9RLati18Enw7/C48
8ET1lNq2HLwLfAZ8H/wRPNQk9fTapiq8F3w+/Aj8JTzCZPVs2rY23MKXwk/D
38OjT1HPo20awYfB18Avwr/B405VL6xtW8DHwjfBb8D/wJNMUy+pbdrDJ8N3
wu/Bg05XT6VtKsC7wmfB98OfwEPPUM+obavB+8AXwI/BX8EjzVTPrm3qwgfC
l8PPwD/CY8xSz6dtG8NHwNfCL8O/w+PPVi+ibVrBx8G3wG/C/8GTzlEvrW07
wKfCd8EfwIPNVU+jbSvCu8Nnww/Cn8LDzlPPpG1qwPvCF8GPw9/AI89Xz6lt
68EHw1fAz8E/wWMtUM+vbZrCR8LXw6/Af8ITLFQvpm1bwyfAt8Jvw80i9eTa
tgy8E3wafA/8ITzEYvW02qYyvAd8LvwQ/Dk83BL1LNq2Jrw/fDH8JPwtPOpS
9VzapgF8CHwV/Dz8Czz2MvWC2rYZfDR8A/wa/Bc80XL14tqmLXwifDv8Djzw
CvUU2qYcvDN8Bnwv/BE85Er19Nq2CrwXfB78CPwFPMIq9azapjZ8AHwp/BT8
PTzaavU82rYhfBh8Nfwi/Cs87hr1QtqmBXwMfBP8OvwPPPFa9ZLath18MnwH
/B48yDr1VNq2PLwrfCZ8P/wxPPR69Qzaphq8N3wB/Cj8FTziBvXs2rYOfCB8
GfwM/AM8xkb1vNqmMXw4fC38Evw7PN4m9SLatiV8HHwz/Cb8LzzpZvVS2qYD
fAp8F/w+PNgW9dTapiK8G3w2/AD8KTzMVvVM2rY6vC98Ifw4/DU88jb1HNqm
HnwQfAX8LPwTPOZ29fzatgl8JHwd/Ar8BzzBDvWi2qY1fDx8K/wW3OxUT6Zt
ysA7wqfBd8MfwoPvUk+rbSvBe8DnwA/Bn8HD7VbPrG1qwvvBF8NPwN/Co+xR
z6Vt68OHwFfCz8M/w2PvVS+gbZrBR8E3wK/Cf8ET7lMvrm3bwCfCt8HvwAPt
V0+hbcvCO8Onw/fC/4OHPKCeTttUgfeEz4Mfhr+Ahz+onlXb1oIPgC+Bn4K/
g0c7pJ5b2zSED4Wvhl+Af4XHOaxeSNs2h4+Bb4Rfh/+GJz6iXkLbtINPgu+A
34UHOaqeUtuUh3eBz4Tvgz+GhzqmnkHbVoX3hs+HH4W/hEc8rp5N29SBW/gy
+Gn4B3j0E+p5tW0j+HD4Gvgl+Dd4vJPqhbVNS/hY+Gb4DfhfeJJT6qW0bXv4
FPhO+H140NPqqbVtBXg3+Cz4AfgTeJgz6hm1TXV4H/hC+DH4a3iks+o5tG1d
+CD4cvhZ+Ed4zHPq+bRNE/gI+Dr4ZfgPePzz6kW1bSv4ePgW+C34P3iyC+ql
tU1H+FT4bvgDePCL6mm0TSV4d/gc+EH4M3jYS+qZtW0NeD/4IvgJ+Bt4lMvq
ObVNffhg+Er4OfhneKwr6gW0bVP4KPh6+FX4T3jCq+rFtE0b+AT4NvhteKBr
6sm1TVl4J/h0+B74f/AQ19XTadvK8J7wufDD8Ofw8DfUs2ibWvD+8CXwk/B3
8Kg31XNr2wbwofBV8AvwL/A4t9QLapvm8NHwjfBr8N/wRLfVS2jbtvBJ8O3w
u/DAd9RTatty8C7wGfB98EfwUHfV02ubqvBe8PnwI/CX8Aj31LNp29pwC18K
Pw1/D49+Xz2PtmkEHwZfA78I/waP+0C9sLZtAR8L3wS/Af8DT/JQvaS2aQ+f
DN8JvwcP+p96Km1TAd4VPgu+H/4EHvqRekZtWw3eB74Afgz+Ch7psXp2bVMX
PhC+HH4G/hEe44l6Pm3bGD4CvhZ+Gf4dHv+pehFt0wo+Dr4FfhP+D570mXpp
bdsBPhW+C/4AHuy5ehptWxHeHT4bfhD+FB72hXombVMD3he+CH4c/gYe+aV6
Tm1bDz4YvgJ+Dv4JHuuVen5t0xQ+Er4efgX+E57gtXoxbdsaPgG+FX4bbt6o
J9e2ZeCd4NPge+AP4SHeqqfVNpXhPeBz4Yfgz+Hh3qln0bY14f3hi+En4W/h
Ud+r59I2DeBD4Kvg5+Ff4LE/qBfUts3go+Eb4Nfgv+CJPqoX1zZt4RPh2+F3
4IE/qafQNuXgneEz4Hvhj+AhP6un17ZV4L3g8+BH4C/gEb6oZ9U2teED4Evh
p+Dv4dG+qufRtg3hw+Cr4RfhX+Fxv6kX0jYt4GPgm+DX4X/gib+rl9S27eCT
4Tvg9+BBfqin0rbl4V3hM+H74Y/hoX+qZ9A21eC94QvgR+Gv4BF/qWfXtnXg
A+HL4GfgH+Axfqvn1TaN4cPha+GX4N/h8f6oF9G2LeHj4JvhN+F/4Un/qpdy
OmL+7w8Gj3e9g98PuD7F6VXOv0uu73K6erWAf09cv+8//931YP8C2uFqwTo6
ntrp1c7vh3faVPznnY/pejf/+USuz/afT+36Af/5rK4/9Z/P53oYk/r/54u7
nslp93xF16v7u7rrff1d1/WF/m7s+nF/t3T9tb/bux45kNddXc/h796u1/O3
dX2Qv4e5vsLfY1w/6+9Jrn/y9wzXYwb2ep7r+f29xPUm/l7l+kh/b3B9ndPt
b29rd3ub61ecdnOv6z+cLjUpaalJR1xPECSgtwdwu9OuF3U6mXPgkuutnXaO
J73p+vgg3vUeuL41iHe9p67fCuJd743rJqh3vc+uJwvqXe+X62WCetcL3Mnx
jkG964Vy2kwL6l0vouu7g3rzj+76Q6fd5yOe68GDeeeTup42mHc+teuVgnnn
M7new38+p+tz/Ofzu37If76Y68/858u6Hi64d76y65mDe+druV4zuHe+oev9
tM1i+An4W3iUEOq5tG19+BD4Svh5+Gd47JDqBbRNM/go+AZ/d3T9qrb5BU8Y
Sr24tm0DnwjfBr8DDxRaPYW2LQvvDJ8O3wv/Dx4yjHo6bVMF3hM+D34Y/gIe
Pqx6Vm1bCz4AvgR+Cv4OHi2cem5t0xA+FL4afgH+FR4nvHohbdscPga+EX4d
/hueOIJ6CW3TDj4JvgN+Fx4konpKbVMe3gU+E74P/hgeKpJ6Bm1bFd4bPh9+
FP4SHjGyejZtUwdu4cvgp+Ef4NGjqOfVto3gw+Fr4Jfg3+DxoqoX1jYt4WPh
m+E34H/hSaKpl9K27eFT4Dvh9+FBo6un1rYV4N3gs+AH4E/gYWKoZ9Q21eF9
4Avhx+Cv4ZFiqufQtnXhg+DL4WfhH+ExY6nn0zZN4CPg6+CX4T/g8WOrF9W2
reDj4Vvgt+D/4MniqJfWNh3hU+G74Q/gweOqp9E2leDd4XPgB+HP4GHjqWfW
tjXg/eCL4Cfgb+BR4qvn1Db14YPhK+Hn4J/hsRKoF9C2TeGj4OvhV+E/4QkT
qhfTNm3gE+Db4LfhgRKpJ9c2ZeGd4NPhe+D/wUMkVk+nbSvDe8Lnwg/Dn8PD
J1HPom1qwfvDl8BPwt/BoyZVz61tG8CHwlfBL8C/wOMkUy+obZrDR8M3wq/B
f8MTJVcvoW3bwifBt8PvwgOnUE+pbcvBu8BnwPfBH8FDpVRPr22qwnvB58OP
wF/CI6RSz6Zta8MtfCn8NPw9PHpq9TzaphF8GHwN/CL8GzxuGvXC2rYFfCx8
E/wG/A88SVr1ktqmPXwyfCf8HjxoOvVU2qYCvCt8Fnw//Ak8dHr1jNq2GrwP
fAH8GPwVPFIG9ezapi58IHw5/Az8IzxGRvV82rYxfAR8Lfwy/Ds8fib1Itqm
FXwcfAv8JvwfPGlm9dLatgN8KnwX/AE8WBb1NNq2Irw7fDb8IPwpPGxW9Uza
pga8L3wR/Dj8DTxyNvWc2rYefDB8Bfwc/BM8Vnb1/NqmKXwkfD38CvwnPEEO
9WLatjV8Anwr/Dbc5FRPrm3LwDvBp8H3wB/CQ+RST6ttKsN7wOfCD8Gfw8Pl
Vs+ibWvC+8MXw0/C38Kj5lHPpW0awIfAV8HPw7/AY+dVL6htm8FHwzfAr8F/
wRPlUy+ubdrCJ8K3w+/AA+dXT6FtysE7w2fA98IfwUMWUE+vbavAe8HnwY/A
X8AjFFTPqm1qwwfAl8JPwd/DoxVSz6NtG8KHwVfDL8K/wuMWVi+kbVrAx8A3
wa/D/8ATF1EvqW3bwSfDd8DvwYMUVU+lbcvDu8JnwvfDH8NDF1PPoG2qwXvD
F8CPwl/BIxZXz65t68AHwpfBz8A/wGOUUM+rbRrDh8PXwi/Bv8PjlVQvom1b
wsfBN8Nvwv/Ck5ZSL6VtOsCnwHfB78ODlVZPrW0qwrvBZ8MPwJ/Cw5RRz6Rt
q8P7whfCj8NfwyOXVc+hberBB8FXwM/CP8FjllPPr22bwEfC18GvwH/AE5RX
L6ptWsPHw7fCb8FNBfVk2qYMvCN8Gnw3/CE8eEX1tNq2ErwHfA78EPwZPFwl
9czapia8H3wx/AT8LTxKZfVc2rY+fAh8Jfw8/DM8dhX1AtqmGXwUfAP8KvwX
PGFV9eLatg18Inwb/A48UDX1FNq2LLwzfDp8L/w/eMjq6um0TRV4T/g8+GH4
C3j4GupZtW0t+AD4Evgp+Dt4tJrqubVNQ/hQ+Gr4BfhXeJxa6oW0bXP4GPhG
+HX4b3ji2uoltE07+CT4DvhdeJA66im1TXl4F/hM+D74Y3iouuoZtG1VeG/4
fPhR+Et4xHrq2bRNHbiFL4Ofhn+AR6+vnlfbNoIPh6+BX4J/g8droF5Y27SE
j4Vvht+A/4UnaaheStu2h0+B74TfhwdtpJ5a21aAd4PPgh+AP4GHaayeUdtU
h/eBL4Qfg7+GR2qinkPb1oUPgi+Hn4V/hMdsqp5P2zSBj4Cvg1+G/4DHb6Ze
VNu2go+Hb4Hfgv+DJ2uuXlrbdIRPhe+GP4AHb6GeRttUgneHz4EfhD+Dh22p
nlnb1oD3gy+Cn4C/gUdppZ5T29SHD4avhJ+Df4bHaq1eQNs2hY+Cr4dfhf+E
J2yjXkzbtIFPgG+D34YHaqueXNuUhXeCT4fvgf8HD9FOPZ22rQzvCZ8LPwx/
Dg/fXj2LtqkF7w9fAj8JfweP2kE9t7ZtAB8KXwW/AP8Cj9NRvaC2aQ4fDd8I
vwb/DU/USb2Etm0LnwTfDr8LD9xZPaW2LQfvAp8B3wd/BA/VRT29tqkK7wWf
Dz8CfwmP0FU9m7atDbfwpfDT8Pfw6N3U82ibRvBh8DXwi/Bv8Ljd1Qtr2xbw
sfBN8BvwP/AkPdRLapv28MnwnfB78KA91VNpmwrwrvBZ8P3wJ/DQvdQzattq
8D7wBfBj8FfwSL3Vs2ubuvCB8OXwM/CP8Bh91PNp28bwEfC18Mvw7/D4fdWL
aJtW8HHwLfCb8H/wpP3US2vbDvCp8F3wB/Bg/dXTaNuK8O7w2fCD8KfwsAPU
M2mbGvC+8EXw4/A38MhWPae2rQcfDF8BPwf/BI81UD2/tmkKHwlfD78C/wlP
MEi9mLZtDZ8A3wq/DTeD1ZNr2zLwTvBp8D3wh/AQQ9TTapvK8B7wufBD8Ofw
cEPVs2jbmvD+8MXwk/C38KjD1HNpmwbwIfBV8PPwL/DYw9ULattm8NHwDfBr
8F/wRCPUi2ubtvCJ8O3wO/DAI9VTaJty8M7wGfC98EfwkKPU02vbKvBe8Hnw
I/AX8Aij1bNqm9rwAfCl8FPw9/BoY9TzaNuG8GHw1fCL8K/wuGPVC2mbFvAx
8E3w6/A/8MTj1Etq23bwyfAd8HvwIOPVU2nb8vCu8Jnw/fDH8NAT1DNom2rw
3vAF8KPwV/CIE9Wza9s68IHwZfAz8A/wGJPU82qbxvDh8LXwS/Dv8HiT1Yto
25bwcfDN8Jvwv/CkU9RLaZsO8CnwXfD78GBT1VNrm4rwbvDZ8APwp/Aw09Qz
advq8L7whfDj8NfwyNPVc2ibevBB8BXws/BP8Jgz1PNr2ybwkfB18CvwH/AE
M9WLapvW8PHwrfBbcDNLPZm2KQPvCJ8G3w1/CA8+Wz2ttq0E7wGfAz8EfwYP
N0c9s7apCe8HXww/AX8LjzJXPZe2rQ8fAl8JPw//DI89T72AtmkGHwXfAL8K
/wVPOF+9uLZtA58I3wa/Aw+0QD2Fti0L7wyfDt8L/w8ecqF6Om1TBd4TPg9+
GP4CHn6RelZtWws+AL4Efgr+Dh5tsXpubdMQPhS+Gn4B/hUeZ4l6IW3bHD4G
vhF+Hf4bnnipeglt0w4+Cb4DfhceZJl6Sm1THt4FPhO+D/4YHmq5egZtWxXe
Gz4ffhT+Eh5xhXo2bVMHbuHL4KfhH+DRV6rn1baN4MPha+CX4N/g8VapF9Y2
LeFj4ZvhN+B/4UlWq5fStu3hU+A74ffhQdeop9a2FeDd4LPgB+BP4GHWqmfU
NtXhfeAL4cfgr+GR1qnn0LZ14YPgy+Fn4R/hMder59M2TeAj4Ovgl+E/4PE3
qBfVtq3g4+Fb4Lfg/+DJNqqX1jYd4VPhu+EP4ME3qafRNpXg3eFz4Afhz+Bh
N6tn1rY14P3gi+An4G/gUbao59Q29eGD4Svh5+Cf4bG2qhfQtk3ho+Dr4Vfh
P+EJt6kX0zZt4BPg2+C34YG2qyfXNmXhneDT4Xvg/8FD7FBPp20rw3vC58IP
w5/Dw+9Uz6JtasH7w5fAT8LfwaPuUs+tbRvAh8JXwS/Av8Dj7FYvqG2aw0fD
N8KvwX/DE+1RL6Ft28InwbfD78ID71VPqW3LwbvAZ8D3wR/BQ+1TT69tqsJ7
wefDj8BfwiPsV8+mbWvDLXwp/DT8PTz6AfU82qYRfBh8Dfwi/Bs87kH1wtq2
BXwsfBP8BvwPPMkh9ZLapj18Mnwn/B486GH1VNqmArwrfBZ8P/wJPPQR9Yza
thq8D3wB/Bj8FTzSUfXs2qYufCB8OfwM/CM8xjH1fNq2MXwEfC38Mvw7PP5x
9SLaphV8HHwL/Cb8HzzpCfXS2rYDfCp8F/wBPNhJ9TTatiK8O3w2/CD8KTzs
KfVM2qYGvC98Efw4/A088mn1nNq2HnwwfAX8HPwTPNYZ9fzapil8JHw9/Ar8
JzzBWfVi2rY1fAJ8K/w23JxTT65ty8A7wafB98AfwkOcV0+rbSrDe8Dnwg/B
n8PDXVDPom1rwvvDF8NPwt/Co15Uz6VtGsCHwFfBz8O/wGNfUi+obZvBR8M3
wK/Bf8ETXVYvrm3awifCt8PvwANfUU+hbcrBO8NnwPfCH8FDXlVPr22rwHvB
58GPwF/AI1xTz6ptasMHwJfCT8Hfw6NdV8+jbRvCh8FXwy/Cv8Lj3lAvpG1a
wMfAN8Gvw//AE99UL6lt28Enw3fA78GD3FJPpW3Lw7vCZ8L3wx/DQ99Wz6Bt
qsF7wxfAj8JfwSPeUc+ubevAB8KXwc/AP8Bj3FXPq20aw4fD18Ivwb/D491T
L6JtW8LHwTfDb8L/wpPeVy+lbTrAp8B3we/Dgz1QT61tKsK7wWfDD8CfwsM8
VM+kbavD+8IXwo/DX8Mj/6eeQ9vUgw+Cr4CfhX+Cx3yknl/bNoGPhK+DX4H/
gCd4rF5U27SGj4dvhd+CmyfqybRNGXhH+DT4bvhDePCn6mm1bSV4D/gc+CH4
M3i4Z+qZtU1NeD/4YvgJ+Ft4lOfqubRtffgQ+Er4efhneOwX6gW0TTP4KPgG
+FX4L3jCl+rFtW0b+ET4NvgdeKBX6im0bVl4Z/h0+F74f/CQr9XTaZsq8J7w
efDD8Bfw8G/Us2rbWvAB8CXwU/B38Ghv1XNrm4bwofDV8Avwr/A479QLadvm
8DHwjfDr8N/wxO/VS2ibdvBJ8B3wu/AgH9RTapvy8C7wmfB98MfwUB/VM2jb
qvDe8Pnwo/CX8Iif1LNpmzpwC18GPw3/AI/+WT2vtm0EHw5fA78E/waP90W9
sLZpCR8L3wy/Af8LT/JVvZS2bQ+fAt8Jvw8P+k09tbatAO8GnwU/AH8CD/Nd
PaO2qQ7vA18IPwZ/DY/0Qz2Htq0LHwRfDj8L/wiP+VM9n7ZpAh8BXwe/DP8B
j/9Lvai2bQUfD98CvwX/B0/2W720tukInwrfDX8AD/5HPY22qQTvDp8DPwh/
Bg/7Vz2ztq0B7wdfBD8BfwOP8k89p7apDx8MXwk/B/8Mj2XSiBfQtk3ho+Dr
4VfhP+EJA6kX0zZt4BPg2+C34YECqyfXNmXhneDT4Xvg/8FDBFFPp20rw3vC
58IPw5/DwwdVz6JtasH7w5fAT8LfwaMGU8+tbRvAh8JXwS/Av8DjBFcvqG2a
w0fDN8KvwX/DE4VQL6Ft28InwbfD78IDh1RPqW3LwbvAZ8D3wR/BQ4VST69t
qsJ7wefDj8BfwiOEVs+mbWvDLXwp/DT8PTx6GPU82qYRfBh8Dfwi/Bs8blj1
wtq2BXwsfBP8BvwPPEk49ZLapj18Mnwn/B48aHj1VNqmArwrfBZ8P/wJPHQE
9Yzathq8D3wB/Bj8FTxSRPXs2qYufCB8OfwM/CM8RiT1fNq2MXwEfC38Mvw7
PH5k9SLaphV8HHwL/Cb8HzxpFPXS2rYDfCp8F/wBPFhU9TTatiK8O3w2/CD8
KTxsNPVM2qYGvC98Efw4/A08cnT1nNq2HnwwfAX8HPwTPFYM9fzapil8JHw9
/Ar8JzxBTPVi2rY1fAJ8K/w23MRST65ty8A7wafB98AfwkPEVk+rbSrDe8Dn
wg/Bn8PDxVHPom1rwvvDF8NPwt/Co8ZVz6VtGsCHwFfBz8O/wGPHUy+obZvB
R8M3wK/Bf8ETxVcvrm3awifCt8PvwAMnUE+hbcrBO8NnwPfCH8FDJlRPr22r
wHvB58GPwF/AIyRSz6ptasMHwJfCT8Hfw6MlVs+jbRvCh8FXwy/Cv8LjJlEv
pG1awMfAN8Gvw//AEydVL6lt28Enw3fA78GDJFNPpW3Lw7vCZzpd7GOBp9sH
uL7f6fRlr749P971x07HWNb627P5rodO7v3+Btcz+HuL69X8vcP13v7e4/oC
fx9w/ai/T7j+yt8XXI+Ywusbrmf39wPX6/j7uesD/f3e9WX+/u76GX+bzo5/
8HdIp02MlF5HdD2vv2O63tjfCV0f7u/Erq/1d1LXL/k7uevf/Z3S9XipvE7t
ehF/p3W9pb/Tuz7O3xld3+zvrK7f9HdO1//6O6/rSVN7XdD1Uv4u6XoHf1d0
fYq/a7q+y98NXb/v75auB0vjf75cT+3vnq5X9Ld1vZvT7v+PPtT12U67/3/6
KNcP+M9PcP2p//xU18Ok9c7Pcj1TWu/8Ater+3uF6339vcH1hf7e4fpxfx9w
/bW/T7geOZ3/+XQ9h79vuF7P3w9cH6RtVsDPwj/BY6ZXz69tm8BHwtfBr8B/
wBNkUC+qbVrDx8O3wm/BTcaAjr70w8RQj11P5vT0wbP/FHbblHE6ZuNirfr6
vKPTMwu+u7LV59Ocjp0g4Cc+3+30nD+F16R84vpDp+PdeR2jsds2eKaAnrdr
2uDZPk/rtPPrV3xeyekFPV7WDv/U9R5OJ6o+5VgJt+0cpxdnzZ95oM8POZ00
yvO5u3z+zGnn7Xz2ebjMAZ38Qp5u6Z65ntnp5euePGjutqnpdKqx48su8Hk/
p1e1ybXjps8XO52m9KMkUZ67fsLpNSkDfsFt89bpdCFy/Brq8yhZAnp9wJ/f
7/NcTmc8MurSd5/Xd3rjooA38ML1IU5nHnhvZRu37UqnNzcYEW2pz887nS3g
7d7z+Went8UNuKEvXY+dNaADrl6zktu2gNM7bmY4MsrnzZzO5fzA56Oc3h1w
+//4fIPTebsFvINXrl91em+V6507um1+Oe1cfqXPE2YL6P0RA+6Iz4s7XSjg
cYj72vU2Th862z9RdbfNRKeLODfM59ucdm7HCZ/fcTrg6Woa+I3rgbIH9PES
ARNz26RwuqQzQJ+Xdfpk0N7L1/m8s9PueHw+3enTBwNewFvX9zpdznmg3Lb/
OX0u4OVN8XnIHAFdoV7Ab/g8ndPO4xLinetVnK7kPuCu93T68vcTQXv7fJ7T
VQNu12afH3b66taAAfn8hdPO45v8vevhcwa0c7yB2yar07WcC/i8ltO3AsZ3
yecDnK4Tvv3XMB9cX+K083Eq5rY55bTz8vv7/J3T91cGPMA+j5YroBsGPE4f
fJ7b6YfNAyb40fWGTjsf76Zu26FOO7dzrs9XO900cMAT4fMLTj8NeLwjfnL9
q9MtnAfCbRsnd0AHfBqnDfZ5Iaed8e71eXOnAz7d7b/6fIzTbZ0H9LPrG51+
E/D2Wrltrjsd8O43LvL5b6edx+2OzxPnCeiOzgfmi+slnP4Y8PEv77Zp53QX
54DPJzn9uXzAHfP5Dqedx/+Xz+867Vwu61fXg+QN6J7uC3Y9pdM/Asa/3Ofl
ne7tfKH4vIvTzscx9jfXZzrtvP0qbtt9Tv8N+Hoc6/PHTg9wvuB8Hiqf9/38
3fUMTjtfD7nctlWddsbR2ee9nR4S8HW9xufznQ7mvCCfH3V6WMDLSfDD9ZdO
O19XNd02EfMHtPN4TPR5NqdDOzfI53WcHh3wcQ3603XrdFjnC8xts8xp5+uz
h89PO+08rht9/sHpCQH80ufRCwR0JOcL9ZfreZ2eFDCuem7bRk47X+fTfD7c
aefjc8Hnawp4++q365cKePvKbfutgLevfB6voLevfF64oLevfN6yoLev/rg+
tqC3r9w2mwt6+8rnNwp6+8rnfwt6++qv60kKefvKbVOqkLevfN6+kLevfD6l
kLevfL6zkLev/rl+v5C3r9y2QQt7+8rnqQt7+8rnFQp7+8p0cbxbYW9fuW1n
Ffb2lc8PFPb2lc+fFPb2lc/DFPH2VSDXMxbx9pXbpnoRb1/5vE8Rb1/5fGER
b18Fdv1YEW9fuW1eF/H2lc8jFfX2lc9zFPX2lc/rFvX2VRDXBxX19pXbdnlR
b1/5/GxRb1/5/GNRb18FdT1mMW9fuW3zFfP2lc+bFPP2lc9HFPP2VTDX1xXz
9pXb9nIxb1/5/Ecxb1/5PH5xb1/5vGhxb18Fd71VcW9fuW3GF/f2lc+3FPf2
lc9vFff2VQjX/xX39pXbJlkJb1/5vHQJb1/5vGMJb1/5fGoJb1+FdH13CW9f
uW0flPD2lc+Dl/T2lc/TlPT2VSjXK5X09pXbtntJb1/5fE5Jb1/5/GBJb1/5
/FlJb1+Fdj1sKW9fuW0yl/L2lc9rlPL2lc/7lfL2VRjXF5Xy9pXb5kQpb1/5
/E0pb1/5PEppb1/5PGdpb1+Fdb1+aW9fuW0Hl/b2lc9Xlvb2lc/Plfb2VTjX
P5f29pXbNlYZb1/5vEAZb1/5vGkZb1/5fFQZb1+Fd319GW9fuW2ulvH2lc9/
lvH2lc8TlvX2VQTXi5X19pXbpk1Zb1/5fEJZb1/5fFtZb19FdP22tglUTj25
tikL7wSfDt8D/w8eorx6Om1bGd4TPhd+GP4cHr6CehZtUwveH74EfhL+Dh61
onpubdsAPhS+Cn4B/gUep5J6QW3THD4avhF+Df4bnqiyeglt2xY+Cb4dfhce
uIp6Sm1bDt4FPgO+D/4IHqqqenptUxXeCz4ffgT+Eh6hmno2bVsbbuFL4afh
7+HRq6vn0TaN4MPga+AX4d/gcWuoF9a2LeBj4ZvgN+B/4ElqqpfUNu3hk+E7
4ffgQWupp9I2FeBd4bPg++FP4KFrq2fUttXgfeAL4Mfgr+CR6qhn1zZ14QPh
y+Fn4B/hMeqq59O2jeEj4Gvhl+Hf4fHrqRfRNq3g4+Bb4Dfh/+BJ66uX1rYd
4FPhu+AP4MEaqKfRthXh3eGz4QfhT+FhG6pn0jY14H3hi+DH4W/gkRup59S2
9eCD4Svg5+Cf4LEaq+fXNk3hI+Hr4VfgP+EJmqgX07at4RPgW+G34aapenJt
WwbeCT4Nvgf+EB6imXpabVMZ3gM+F34I/hwerrl6Fm1bE94fvhh+Ev4WHrWF
ei5t0wA+BL4Kfh7+BR67pXpBbdsMPhq+AX4N/gueqJV6cW3TFj4Rvh1+Bx64
tXoKbVMO3hk+A74X/ggeso16em1bBd4LPg9+BP4CHqGtelZtUxs+AL4Ufgr+
Hh6tnXoebdsQPgy+Gn4R/hUet716IW3TAj4Gvgl+Hf4HnriDeklt2w4+Gb4D
fg8epKN6Km1bHt4VPhO+H/4YHrqTegZtUw3eG74AfhT+Ch6xs3p2bVsHPhC+
DH4G/gEeo4t6Xm3TGD4cvhZ+Cf4dHq+rehFt2xI+Dr4ZfhP+F560m3opbdMB
PgW+C34fHqy7emptUxHeDT4bfgD+FB6mh3ombVsd3he+EH4c/hoeuad6Dm1T
Dz4IvgJ+Fv4JHrOXen5t2wQ+Er4OfgX+A56gt3pRbdMaPh6+FX4LbvqoJ9M2
ZeAd4dPgu+EP4cH7qqfVtpXgPeBz4Ifgz+Dh+qln1jY14f3gi+En4G/hUfqr
59K29eFD4Cvh5+Gf4bEHqBfQNs3go+Ab4Ffhv+AJrXpxbdsGPhG+DX4HHmig
egptWxbeGT4dvhf+HzzkIPV02qYKvCd8Hvww/AU8/GD1rNq2FnwAfAn8FPwd
PNoQ9dzapiF8KHw1/AL8KzzOUPVC2rY5fAx8I/w6/Dc88TD1EtqmHXwSfAf8
LjzIcPWU2qY8vAt8Jnwf/DE81Aj1DNq2Krw3fD78KPwlPOJI9Wzapg7cwpfB
T8M/wKOPUs+rbRvBh8PXwC/Bv8HjjVYvrG1awsfCN8NvwP/Ck4xRL6Vt28On
wHfC78ODjlVPrW0rwLvBZ8EPwJ/Aw4xTz6htqsP7wBfCj8FfwyONV8+hbevC
B8GXw8/CP8JjTlDPp22awEfA18Evw3/A409UL6ptW8HHw7fAb8H/wZNNUi+t
bTrCp8J3wx/Ag09WT6NtKsG7w+fAD8KfwcNOUc+sbWvA+8EXwU/A38CjTFXP
qW3qwwfDV8LPwT/DY01TL6Btm8JHwdfDr8J/whNOVy+mbdrAJ8C3wW/DA81Q
T65tysI7wafD98D/g4eYqZ5O21aG94TPhR+GP4eHn6WeRdvUgveHL4GfhL+D
R52tnlvbNoAPha+CX4B/gceZo15Q2zSHj4ZvhF+D/4YnmqteQtu2hU+Cb4ff
hQeep55S25aDd4HPgO+DP4KHmq+eXttUhfeCz4cfgb+ER1ignk3b1oZb+FL4
afh7ePSF6nm0TSP4MPga+EX4N3jcReqFtW0L+Fj4JvgN+B94ksXqJbVNe/hk
+E74PXjQJeqptE0FeFf4LPh++BN46KXqGbVtNXgf+AL4MfgreKRl6tm1TV34
QPhy+Bn4R3iM5er5tG1j+Aj4Wvhl+Hd4/BXqRbRNK/g4+Bb4Tfg/eNKV6qW1
bQf4VPgu+AN4sFXqabRtRXh3+Gz4QfhTeNjV6pm0TQ14X/gi+HH4G3jkNeo5
tW09+GD4Cvj/uLrHIFeaBgzDffQe27Zt27Zt2+5j27Zt27Zt2/4yM9+m6rnz
796r0+lkJj3ZqtTuWfgneMw16vm0TRP4CPg6+GX4T3j8tepFtW0r+Hj4Fvgt
uFmnnkzbloZ3hE+F74Y/gAdfr55G21SCd4fPgR+EP4eH3aCeWdvWgPeDL4Kf
gL+FR9monlPb1IcPhq+En4N/gcfapF5A2zaFj4Kvh1+F/4In3KxeTNu0gU+A
b4Pfhgfeop5c25SFd4JPh++BP4KH2KqeTttWhveEz4Ufhr+Ah9+mnkXb1IL3
hy+Bn4S/h0fdrp5b2zaAD4Wvgl+Af4XH2aFeUNs0h4+Gb4Rfg/+BJ9qpXkLb
toVPgm+H34UH2aWeUtuWg3eBz4Dvgz+Gh9qtnl7bVIX3gs+HH4G/gkfYo55N
29aGD4AvhZ+Gf4BH36ueR9s0gg+Dr4FfhH+Hx92nXljbtoCPhW+C34D/hSfZ
r15S27SHT4bvhN+DBzugnkrbVIB3hc+C74c/hYc+qJ5R21aD94EvgB+Dv4ZH
OqSeXdvUhQ+EL4efgX+Cxzisnk/bNoaPgK+FX4b/gMc/ol5E27SCj4Nvgd+E
m6PqSbVNaXgH+FT4LvgD+H/H1NNo24rw7vDZ8IPwZ/Cwx9UzaZsa8L7wRfDj
8LfwyCfUc2rbevDB8BXwc/DP8Fgn1fNrm6bwkfD18CvwX/AEp9SLadvW8Anw
rfDb8ECn1ZNr2zLwTvBp8D3wh/AQZ9TTapvK8B7wufBD8BfwcGfVs2jbmvD+
8MXwk/B38Kjn1HNpmwbwIfBV8PPwr/DY59ULattm8NHwDfBr8N/wRBfUi2ub
tvCJ8O3wO/AgF9VTaJty8M7wGfC98MfwkJfU02vbKvBe8HnwI/CX8AiX1bNq
m9pwC18KPwX/AI92RT2Ptm0IHwZfDb8I/waPe1W9kLZpAR8D3wS/Dv8LT3xN
vaS2bQefDN8BvwcPel09lbYtD+8KnwnfD38CD31DPYO2qQbvDV8APwp/DY94
Uz27tq0DHwhfBj8D/wiPcUs9r7ZpDB8OXwu/BP8Bj3dbvYi2bQkfB98Mvwn/
B096R72UtukAnwLfBb8P/++uemptUxHeDT4bfgD+DB7mnnombVsd3he+EH4c
/gYe+b56Dm1TDz4IvgJ+Fv4ZHvOBen5t2wQ+Er4OfgX+E57goXpRbdMaPh6+
FX4LHuiRejJtUwbeET4Nvhv+EB78sXpabVsJ3gM+B34I/hwe7ol6Zm1TE94P
vhh+Av4OHuWpei5tWx8+BL4Sfh7+BR77mXoBbdMMPgq+AX4V/hue8Ll6cW3b
Bj4Rvg1+Bx74hXoKbVsW3hk+Hb4X/gge8qV6Om1TBd4TPg9+GP4SHv6VelZt
Wwtu4Uvgp+Dv4dFeq+fWNg3hQ+Gr4Rfg3+Bx3qgX0rbN4WPgG+HX4X/gid+q
l9A27eCT4Dvgd+FB36mn1Dbl4V3gM+H74E/god6rZ9C2VeG94fPhR+Gv4BE/
qGfTNnXgA+DL4KfhH+HRP6rn1baN4MPha+CX4N/h8T6pF9Y2LeFj4ZvhN+D/
4Ek+q5fStu3hU+A74ffhwb6op9a2FeDd4LPgB+BP4WG+qmfUNtXhfeAL4cfg
b+CRvqnn0LZ14YPgy+Fn4Z/gMb+r59M2TeAj4Ovgl+E/4fF/qBfVtq3g4+Fb
4Lfg5qd6Mm1bGt4RPhW+G/4AHvyXehptUwneHT4HfhD+HB72t3pmbVsD3g++
CH4C/hYe5Y96Tm1THz4YvhJ+Dv4FHuuvegFt2xQ+Cr4efhX+C57wn3oxbdMG
PgG+DX4bHtikEU+ubcrCO8Gnw/fAH8FDBFJPp20rw3vC58IPw1/AwwdWz6Jt
asH7w5fAT8Lfw6MGUc+tbRvAh8JXwS/Av8LjBFUvqG2aw0fDN8Kvwf/AEwVT
L6Ft28InwbfD78KD/KeeUtuWg3eBz4Dvgz+Ghwqunl7bVIX3gs+HH4G/gkcI
oZ5N29aGD4AvhZ+Gf4BHD6meR9s0gg+Dr4FfhH+Hxw2lXljbtoCPhW+C34D/
hScJrV5S27SHT4bvhN+DBwujnkrbVIB3hc+C74c/hYcOq55R21aD94EvgB+D
v4ZHCqeeXdvUhQ+EL4efgX+Cxwivnk/bNoaPgK+FX4b/gMePoF5E27SCj4Nv
gd+Em4jqSbVNaXgH+FT4LvgD+H+R1NNo24rw7vDZ8IPwZ/CwkdUzaZsa8L7w
RfDj8LfwyFHUc2rbevDB8BXwc/DP8FhR1fNrm6bwkfD18CvwX/AE0dSLadvW
8AnwrfDb8EDR1ZNr2zLwTvBp8D3wh/AQMdTTapvK8B7wufBD8BfwcDHVs2jb
mvD+8MXwk/B38Kix1HNpmwbwIfBV8PPwr/DYsdULattm8NHwDfBr8N/wRHHU
i2ubtvCJ8O3wO/AgcdVTaJty8M7wGfC98MfwkPHU02vbKvBe8HnwI/CX8Ajx
1bNqm9pwC18KPwX/AI+WQD2Ptm0IHwZfDb8I/waPm1C9kLZpAR8D3wS/Dv8L
T5xIvaS2bQefDN8BvwcPmlg9lbYtD+8KnwnfD38CD51EPYO2qQbvDV8APwp/
DY+YVD27tq0DHwhfBj8D/wiPkUw9r7ZpDB8OXwu/BP8Bj5dcvYi2bQkfB98M
vwn/B0+aQr2UtukAnwLfBb8P/y+lemptUxHeDT4bfgD+DB4mlXombVsd3he+
EH4c/gYeObV6Dm1TDz4IvgJ+Fv4ZHjONen5t2wQ+Er4OfgX+E54grXpRbdMa
Ph6+FX4LHiidejJtUwbeET4Nvhv+EB48vXpabVsJ3gM+B34I/hweLoN6Zm1T
E94Pvhh+Av4OHiWjei5tWx8+BL4Sfh7+BR47k3oBbdMMPgq+AX4V/hueMLN6
cW3bBj4Rvg1+Bx44i3oKbVsW3hk+Hb4X/ggeMqt6Om1TBd4TPg9+GP4SHj6b
elZtWwtu4Uvgp+Dv4dGyq+fWNg3hQ+Gr4Rfg3+BxcqgX0rbN4WPgG+HX4X/g
iXOql9A27eCT4Dvgd+FBc6mn1Dbl4V3gM+H74E/goXKrZ9C2VeG94fPhR+Gv
4BHzqGfTNnXgA+DL4KfhH+HR86rn1baN4MPha+CX4N/h8fKpF9Y2LeFj4Zvh
N+D/4Enyq5fStu3hU+A74ffhwQqop9a2FeDd4LPgB+BP4WEKqmfUNtXhfeAL
4cfgb+CRCqnn0LZ14YPgy+Fn4Z/gMQur59M2TeAj4Ovgl+E/4fGLqBfVtq3g
4+Fb4Lfgpqh6Mm1bGt4RPhW+G/4AHryYehptUwneHT4HfhD+HB62uHpmbVsD
3g++CH4C/hYepYR6Tm1THz4YvhJ+Dv4FHqukegFt2xQ+Cr4efhX+C56wlHox
bdMGPgG+DX4bHri0enJtUxbeCT4dvgf+CB6ijHo6bVsZ3hM+F34Y/sLpLyuz
LD0X3/XwZQM8g+tZnG7m3LK5XsvpM6d9tzyu93c6s3Mr7PoSp2fO8N1Kun7S
P18F19/756vmetRyAfPVcT13uYD5GrveoFzAfC1dH1ouYL4Orq/ydxfXL/i7
h+tf/d3H9TjlA9q6XrB8wPwDXG9ePuDxB7k+unzA+ga7vrF8wPqHun7NP99w
1//45xvheqIKAfONcr1EhYD5RrvetkLAfGNdn1QhYL7xrm/392TX7/p7uutB
Kgb0bNdT+nu+6+X8vdz1Lv5e7/oMf293fZ+/97v+2Gn3/60fcT1UpTT//3/r
J11PXylg/HnXq1YKGH/F9V7+8Tddn+8ff9/1I/5+7vorf793PULlgPm+uJ6t
csB8P12vXTlgvOni+AD/+GBO26X+8aFcP+0fH8H1D/6O4nr0KgEdw/U8/o7j
eiN/J3B9mL+TuL7G3ylcv+jvNK5/93cG1+NWDegsrhf2dw7XW/g7j+tj/V3A
9U3a5gb8LzxJNfWS2qY9fDJ8J/wePFh19VTapgK8K3wWfD/8KTx0DfWM2rYa
vA98AfwY/DU8Uk317NqmLnwgfDn8DPwTPEYt9XzatjF8BHwt/DL8Bzx+bfUi
2qYVfBx8C/wm3NRRT6ptSsM7wKfCd8EfwP+rq55G21aEd4fPhh+EP4OHraee
SdvUgPeFL4Ifh7+FR66vnlPb1oMPhq+An4N/hsdqoJ5f2zSFj4Svh1+B/4In
aKheTNu2hk+Ab4XfhgdqpJ5c25aBd4JPg++BP4SHaKyeVttUhveAz4Ufgr+A
h2uinkXb1oT3hy+Gn4S/g0dtqp5L2zSAD4Gvgp+Hf4XHbqZeUNs2g4+Gb4Bf
g/+GJ2quXlzbtIVPhG+H34EHaaGeQtuUg3eGz4DvhT+Gh2ypnl7bVoH3gs+D
H4G/hEdopZ5V29SGW/hS+Cn4B3i01up5tG1D+DD4avhF+Dd43DbqhbRNC/gY
+Cb4dfhfeOK26iW1bTv4ZPgO+D140HbqqbRteXhX+Ez4fvgTeOj26hm0TTV4
b/gC+FH4a3jEDurZtW0d+ED4MvgZ+Ed4jI7qebVNY/hw+Fr4JfgPeLxO6kW0
bUv4OPhm+E34P3jSzuqltH2/tatPge+C34f/10U9tbapCO8Gnw0/AH8GD9NV
PZO2rQ7vC18IPw5/A4/cTT2HtqkHHwRfAT8L/wyP2V09v7ZtAh8JXwe/Av8J
T9BDvai2aQ0fD98KvwUP1FM9mbYpA+8InwbfDX8ID95LPa22rQTvAZ8DPwR/
Dg/XWz2ztqkJ7wdfDD8BfweP0kc9l7atDx8CXwk/D/8Cj91XvYC2aQYfBd8A
vwr/DU/YT724tm0DnwjfBr8DD9xfPYW2LQvvDJ8O3wt/BA9p1dNpmyrwnvB5
8MPwl/DwA9SzattacAtfAj8Ffw+PNlA9t7ZpCB8KXw2/AP8GjzNIvZC2bQ4f
A98Ivw7/A088WL2EtmkHnwTfAb8LDzpEPaW2KQ/vAp8J3wd/Ag81VD2Dtq0K
7w2fDz8KfwWPOEw9m7apAx8AXwY/Df8Ijz5cPa+2bQQfDl8DvwT/Do83Qr2w
tmkJHwvfDL8B/wdPMlK9lLZtD58C3wm/Dw82Sj21tq0A7wafBT8AfwoPM1o9
o7apDu8DXwg/Bn8DjzRGPYe2rQsfBF8OPwv/BI85Vj2ftmkCHwFfB78M/wmP
P069qLZtBR8P3wK/BTfj1ZNp29LwjvCp8N3wB/DgE9TTaJtK8O7wOfCD8Ofw
sBPVM2vbGvB+8EXwE/C38CiT1HNqm/rwwfCV8HPwL/BYk9ULaNum8FHw9fCr
8F/whFPUi2mbNvAJ8G3w2/DAU9WTa5uy8E7w6fA98EfwENPU02nbyvCe8Lnw
w/AX8PDT1bNom1rw/vAl8JPw9/CoM9Rza9sG8KHwVfAL8K/wODPVC2qb5vDR
8I3wa/A/8ESz1Eto27bwSfDt8LvwILPVU2rbcvAu8BnwffDH8FBz1NNrm6rw
XvD58CPwV/AIc9Wzadva8AHwpfDT8A/w6PPU82ibRvBh8DXwi/Dv8Ljz1Qtr
2xbwsfBN8Bvwv/AkC9RLapv28MnwnfB78GAL1VNpmwrwrvBZ8P3wp/DQi9Qz
attqTk+69elX5YKu93G6a5+UjbtVd32B0zXi1j85va3rx5zOvXdyxl2DXH/t
tMN3ZrgeaXHA/Otdz+60+/2Sna7Xddr7vozrA/3jz7u+3D/+putn/OOfuP7J
P/696zGWBPRv1/P5O0RXxxv7O4rTZoS/E7i+1mn3+0gpXb/stPt9pMyu/3Da
+z6X6/GXpvn/95GKuV5kacB8FVxvtTRgvpquj1saMF9j17csDZivjes3/fN1
c90sC5jPup5U25SGd4BPhe+CP4D/t1w9jbatCO8Onw0/CH8GD7tCPZO2qQHv
C18EPw5/C4+8Uj2ntq0HHwxfAT8H/wyPtUo9v7ZpCh8JX+/0htuXQpza4/oV
p6f2jtVwxz7Xfzndx5fLDrieYLWvfRVx6iHXizldvMbbloOPuN7a6TTfshzs
dMz1CU5HciY84fpWpx0uf8r1207f8T183jOuB1rja58mTnPO9eROL4/om+CC
62WcHrPet+BLrndyurNv+LfLrk9z2lnOk6uu73E6n3OH664/dDqxs8CbrodY
6+uQp/L6Rrie1mnn7nPvul7Z6cu+5Y2573oPp52n3/uh63OdnlfM94iPXT/k
tO/exWo8df2F062cHzx3Pdw6XzvLzfLS9SxOZ3We8GvXazrtvNwR37ref51/
/3F9sbY5CX8Hj7pePZe2aQAfAl8FPw//Co+9Qb2gtm0GHw3fAL8G/w1PtFG9
uLZpC58I3w6/Aw+yST2FtikH7wyfAd8LfwwPuVk9vbatAu8Fnwc/An8Jj7BF
Pau2qQ238KXwU/AP8Ghb1fNo24bwYfDV8Ivwb/C429QLaZsW8DHwTfDr8L/w
xNvVS2rbdvDJ8B3we/CgO9RTadvy8K7wmfD98Cfw0DvVM2ibavDe8AXwo/DX
8Ii71LNr2zrwgfBl8DPwj/AYu9XzapvG8OHwtfBL8B/weHvUi2jblvBx8M3w
m/B/8KR71Utpmw7wKfBd8Pvw//app9Y2FeHd4LPhB+DP4GH2q2fSttXhfeEL
4cfhb+CRD6jn0Db14IPgK+Bn4Z/hMQ+q59e2TeAj4evgV+A/4QkOqRfVNq3h
4+Fb4bfggQ6rJ9M2ZeAd4dPgu+EP4cGPqKfVtpXgPeBz4Ifgz+Hhjqpn1jY1
4f3gi+En4O/gUY6p59K29eFD4Cvh5+Ff4LGPqxfQNs3go+Ab4Ffhv+EJT6gX
17Zt4BPh2+B34IFPqqfQtmXhneHT4Xvhj+AhT6mn0zZV4D3h8+CH4S/h4U+r
Z9W2teAWvgR+Cv4eHu2Mem5t0xA+FL4afgH+DR7nrHohbdscPga+EX4d/gee
+Jx6CW3TDj4JvgN+Fx70vHpKbVMe3gU+E74P/gQe6oJ6Bm1bFd4bPh9+FP4K
HvGiejZtUwc+AL4Mfhr+ER79knpebdsIPhy+Bn4J/h0e77J6YW3TEj4Wvhl+
A/4PnuSKeilt2x4+Bb4Tfh8e7Kp6am1bAd4NPgt+AP4UHuaaekZtUx3eB74Q
fgz+Bh7punoObVsXPgi+HH4W/gke84Z6Pm3TBD4Cvg5+Gf4THv+melFt2wo+
Hr4Ffgtubqkn07al4R3hU+G74Q/gwW+rp9E2leDd4XPgB+HP4WHvqGfWtjXg
/eCL4Cfgb+FR7qrn1Db14YPhK+Hn4F/gse6pF9C2TeGj4OvhV+G/4AnvqxfT
Nm3gE+Db4LfhgR+oJ9c2ZeGd4NPhe+CP4CEeqqfTtpXhPeFz4YfhL+DhH6ln
0Ta14P3hS+An4e/hUR+r59a2DeBD4avgF+Bf4XGeqBfUNs3ho+Eb4dfgf+CJ
nqqX0LZt4ZPg2+F34UGeqafUtuXgXeAz4Pvgj+Ghnqun1zZV4b3g8+FH4K/g
EV6oZ9O2teED4Evhp+Ef4NFfqufRNo3gw+Br4Bfh3+FxX6kX1rYt4GPhm+A3
4H/hSV6rl9Q27eGT4Tvh9+DB3qin0jYV4F3hs+D74U/hod+qZ9S21eB94Avg
x+Cv4ZHeqWfXNnXhA+HL4Wfgn+Ax3qvn07aN4SPga+GX4T/g8T+oF9E2reDj
4FvgN+Hmo3pSbVMa3gE+Fb4L/gD+3yf1NNq2Irw7fDb8IPwZPOxn9Uzapga8
L3wR/Dj8LTzyF/Wc2rYefDB8Bfwc/DM81lf1/NqmKXwkfD38CvwXPME39WLa
tjV8Anwr/DY80Hf15Nq2DLwTfBp8D/whPMQP9bTapjK8B3wu/BD8BTzcT/Us
2rYmvD98Mfwk/B086i/1XNqmAXwIfBX8PPwrPPZv9YLathl8NHwD/Br8NzzR
H/Xi2qYtfCJ8O/wOPMhf9RTaphy8M3wGfC/8MTzkP/X02rYKvBd8HvwI/CU8
gkkrnlXb1IZb+FL4KfgHeLRA6nm0bUP4MPhq+EX4N3jcwOqFtE0L+Bj4Jvh1
+F944iDqJbVtO/hk+A74PXjQoOqptG15eFf4TPh++BN46GDqGbRNNXhv+AL4
UfhreMT/1LNr2zrwgfBl8DPwj/AYwdXzapvG8OHwtfBL8B/weCHUi2jblvBx
8M3wm/B/8KQh1Utpmw7wKfBd8Pvw/0Kpp9Y2FeHd4LPhB+DP4GFCq2fSttXh
feEL4cfhb+CRw6jn0Db14IPgK+Bn4Z/hMcOq59e2TeAj4evgV+A/4QnCqRfV
Nq3h4+Fb4bfggcKrJ9M2ZeAd4dPgu+EP4cEjqKfVtpXgPeBz4Ifgz+HhIqpn
1jY14f3gi+En4O/gUSKp59K29eFD4Cvh5+Ff4LEjqxfQNs3go+Ab4Ffhv+EJ
o6gX17Zt4BPh2+B34IGjqqfQtmXhneHT4Xvhj+Aho6mn0zZV4D3h8+CH4S/h
4aOrZ9W2teAWvgR+Cv4eHi2Gem5t0xA+FL4afgH+DR4npnohbdscPga+EX4d
/geeOJZ6CW3TDj4JvgN+Fx40tnpKbVMe3gU+E74P/gQeKo56Bm1bFd4bPh9+
FP4KHjGuejZtUwc+AL4Mfhr+ER49nnpebdsIPhy+Bn4J/h0eL756YW3TEj4W
vhl+A/4PniSBeilt2x4+Bb4Tfh8eLKF6am1bAd4NPgt+AP4UHiaRekZtUx3e
B74Qfgz+Bh4psXoObVsXPgi+HH4W/gkeM4l6Pm3TBD4Cvg5+Gf4THj+pelFt
2wo+Hr4Ffgtukqkn07al4R3hU+G74Q/gwZOrp9E2leDd4XPgB+HP4WFTqGfW
tjXg/eCL4Cfgb+FRUqrn1Db14YPhK+Hn4F/gsVKpF9C2TeGj4OvhV+G/4AlT
qxfTNm3gE+Db4LfhgdOoJ9c2ZeGd4NPhe+CP4CHSqqfTtpXhPeFz4YfhL+Dh
06ln0Ta14P3hS+An4e/hUdOr59a2DeBD4avgF+Bf4XEyqBfUNs3ho+Eb4dfg
f+CJMqqX0LZt4ZPg2+F34UEyqafUtuXgXeAz4Pvgj+GhMqun1zZV4b3g8+FH
4K/gEbKoZ9O2teED4Evhp+Ef4NGzqufRNo3gw+Br4Bfh3+Fxs6kX1rYt4GPh
m+A34H/hSbKrl9Q27eGT4Tvh9+DBcqin0jYV4F3hs+D74U/hoXOqZ9S21eB9
4Avgx+Cv4ZFyqWfXNnXhA+HL4Wfgn+Axcqvn07aN4SPga+GX4T/g8fOoF9E2
reDj4FvgN+Emr3pSbVMa3gE+Fb4L/gD+Xz71NNq2Irw7fDb8IPwZPGx+9Uza
pga8L3wR/Dj8LTxyAfWc2rYefDB8Bfwc/DM8VkH1/NqmKXwkfD38CvwXPEEh
9WLatjV8Anwr/DY8UGH15Nq2DLwTfBp8D/whPEQR9bTapjK8B3wu/BD8BTxc
UfUs2rYmvD98Mfwk/B08ajH1XNqmAXwIfBX8PPwrPHZx9YLathl8NHwD/Br8
NzxRCfXi2qYtfCJ8O/wOPEhJ9RTaphy8M3wGfC/8MTxkKfX02rYKvBd8HvwI
/CU8Qmn1rNqmNtzCl8JPwT/Ao5VRz6NtG8KHwVfDL8K/weOWVS+kbVrAx8A3
wa/D/8ITl1MvqW3bwSfDd8DvwYOWV0+lbcvDu8JnwvfDn8BDV1DPoG2qwXvD
F8CPwl/DI1ZUz65t68AHwpfBz8A/wmNUUs+rbRrDh8PXwi/Bf8DjVVYvom1b
wsfBN8Nvwv/Bk1ZRL6VtOji9oWOr7jdCdXN8itP3SsSfeM9ts8vpMAkur37i
+X2nc30bfuyV5/9V9XXzs3kffvA8tdOTl3z8/c3zik4f7LMs+l/Puzn9rnKd
TEFDuz7b6bipI5YN5bY94HSpwEebR/D8mdPdb/QaGM3zMNV8vWR9+jlxPM/k
9MVhj7cl8ry606b+jIspPO/rdNps5d6k83yh07XCBgmR1fPjTg/33T2352+c
3rKrTd6Cnkeu7utHExPWKO55DqcjtLraqazn9ZzOW3DUmMqeD3K6dYwCy2t6
vsLp6e8+H6zv+Vmnjx5dcaep55+d/jSn3vfWnses4esEXSNH7uR5fqfLlTme
tofnTZzunbhviX6ej3R6xc+MjQd7vs7pqxee9h3p+RWng6yYNX285z+dzmgr
bJrqeYKavq5XPdjZ2Z4XdXp0up3PF3re2ukdwdoHWeH5eKef3k4cb53nW52O
svl6ji2e33LaeTl2eR6olq/bNyrU7oDnyZyendN3AnlexukTEVYvOuN5R6e/
PWuw95Ln05xOsi/qjRue73a60tSTn+55/tDp/m37h3vqefDavl5dJEvK156n
dfpm7BeFP3peyengzgvueQ+ns56s1POv53OcbrQg+OSgYVw/5PS4HrvXhnLb
Pnd6T/mOJyJ4Hq6Or18mS/Y4mueZnY7x9+bfOJ7XdLrolXExE3vez+lOzgI9
X+z0/EE/yqX3/ITTZ2qtbZnV83dO//Id3tyeR6nr6xQhY8wr6Hkup6veP72j
uOf1nR60bcDlsp4PcXr92GzvKnu+0um7TV+FrOX5eadD552fpIHnX5zOEaVq
/maex67n62a+4W08L+D0pIN7u3TyvJnTB2Z0HtfD81FOv+2QYmU/zzc4HbvE
ncODPb/qdEnf9jLS899Od/ta7Od4zxPW9/XiM7+iTPO8uNMXFvve8J63cfpv
76alFnk+0ek0lWM1XeH5NqdrpjrXf53nd5weFmjwzC2eB27ga+d03eV5Cqcf
rHtz7oDnZZ0OP2zhy2Oed3Y6j/MG8Xy6062y+nZEz/c6PS3MgVw3PX/k9OFH
Xave9zxkQ19/3Jmqw1PP0zntPP3XnldxumxL347peU+nexUouf+75/Oc9u2e
N/96ftjpK283fgka1vWXTrvbpds2fCNfZ5gTJ3VEz7M6XbfLhaLRPa/l9MjS
QxvE9dw6vT1R7t6JPV/i9JMf76ak9PyU05GdA+D5e6d9u9uprJ5Ha+xr5+2X
2/PcTs+qdsgU8ryh077dK3YJz4c6/TWob0f2fLXTiW8/qFDF8wtO+3an1rU8
/+Z0P2fBnsdp4utVDc2CZp4XcvqG73C28by50/85G7TnY5zO8izehx6eb3S6
oW936e/5dafHThmebIjnf5ze7dv+R3meuKmvfbtH7Qmel3A6euxl3aZ53s7p
Ij6e4/kkpzs6G5rnO5yeN//I0RWe33X6dPdeD9Z5HrSZr3+WS/97i+cpnU7u
2052e17e6Sp/pmc86HkXpwdeLlvmuOcznV63KnDzs57vc/rOQN8G4PkTp0PV
ajP7puehmvs6e8aE2+57nsHppiF8VwzPqzrtnJ6vPe/t9P6t+YN/8ny+02/G
fE74w/OjTvvefXn+ef7K6RLOGyac6xFb+Nq9nLltszm96OWx0RE9r+P0+QO+
DwieD3DaebpxPV/mdOoOviuO56edrlF81reUnn90emi8CpEyeB69pa83ffGd
YJ7nddrZHvN43sjpcIvbNSrk+XCnczsXVM/XON2y0vVp5Ty/5PTUlGM2VvH8
u9O+s/tMLc/jtfL1h2tfnzXwvLDT8ZwD4nlLp8v43m5tPR/rdM+6UXN09nyz
00uz+C5Ant9w+nJo54rm+j+nAz3KPHyI50la+zq97/I8yvNSTteZMGfPBM/b
Oz2ihe8JeD7F6W2+wzfH851OO2fXYs/vOx3J2bA9D9bG1/mPJC283vPUTvvO
nrpbPa/g9Ezfdr/b825OHytVZNJBz2c5/SXhjzXHPT/gdCJfnvX8qdPlzzd6
dNnzMG193dfZ4DzP6PTKfqdjPPC8utPXqw7I/MzzPk4Hcz7Qeb7Q6UxBX7X4
5Pkxpxvcmjfoh+dvnPYdvbn/PI/Uzte7RoTcESy86zmcfu583HDb1nXad3Te
RvR8kNOFw/uuuJ4vd9o5HeN5ftbpuXsm5Evi+SenT00uVjOV5zHb+/p761+d
M3iez+lkhX1XZM+bOO1cvvJ4PsLpAR9iHi7k+Tqn1x4/e7eE55eddp5eOc9/
Oh2yu++K7Xn8Dr52Pu7W9ryo002SLizZ0PNWTk/4Xa1Jc8/HO+1sh2093+L0
65X7Z3T2/JbTMQd23dzTc9PR18WdC6znyZzukuHeiyGel3ba+fg02vOOTp+7
6/uFwvOpTv/e8ifndM93O53KOUCeP3C6epPm7Rd7HryTrwfnjjNypedpnN4Y
yXdB8ryS075H37fV8+5Oh/Vdjnd7PsfpXM4HcM8POu3MfsLz505P8R2uc56H
7exr3+ZT9IrnmZ1+7/v4fsvzGk7HdTZwz/s5XWpRminPPF/kdA/f9v7G8xNO
L6no+8Dq+VunL6Uo/eSH51G6pP3/72MRXM/p9PBPRULNjOZ6fafvx17Yv1dc
1wc7naPIv8+1kri+0unxbeq0yp3a9XNOP5+8417sTK5/cbrAnmhVf+dwPVZX
X09/0vnk7fyuF3D6fdgL+fcUc72p0yWypdsyp6zro5yeX29Uqn5VXF/v9Peh
z+fVq+36VacrrCsaNX8j1385vfzawpHxW7qesFvA8+vgejF/W9fb+Hu86xP8
Pd/1bf5e7/ptf+93PXD3gD7venJ/33e9rL/fu97J36a749P9HcFpu8dp9+8/
x3T9kdPu34dO5HqIHgHj07ierkfA+KyuV+4RMD6f6z3940u4Ptc/vqLrh/3j
a7n+wj++ievhewaMb+t6lp4B47u5Xqun//V0vb/fB7q+xH//Ia6f9I8f7vp7
//iRrkftFTB+jOu5e/mPj+sNegWMn+j6UP/4Ka6v8o+f7voF//iZrn/1j5/j
epze/uPtekF/b3W9ub9Puz7a3w9d3+jv765f83e4Ho7/8XcSp22iPgGdy/US
/q7gelt/V3F9kr9ruL7d33Vcv+vvBq4H6SttUmrbcvAu8BnwffDH8FD91NNr
m6rwXvD5/QKOTyvXjzidc+yjHGNbu/7K6WMd4xzr2Mb1CP3956Pr2Zx+nMN3
h3au13a6k294nPauD+jvf/+7vlTbnIZ/gEe36nm0TSP4MPga+EX4d3jcAeqF
tW0L+Fj4JvgN+F94koHqJbVNe/hk+E74PXiwQeqptE0FeFf4LPh++FN46MHq
GbVtNXgf+AL4MfhreKQh6tm1TV34QPhy+Bn4J3iMoer5tG1j+Aj4Wvhl+A94
/GHqRbRNK/g4+Bb4TbgZrp5U25SGd4BPhe+CP4D/N0I9jbatCO8Onw0/CH8G
DztSPZO2qQHvC18EPw5/C488Sj2ntq0HHwxfAT8H/wyPNVo9v7ZpCh8JXw+/
Av8FTzBGvZi2bQ2fAN8Kvw0PNFY9ubYtA+8EnwbfA38IDzFOPa22qQzvAZ8L
PwR/AQ83Xj2Ltq0J7w9fDD8JfwePOkE9l7ZpAB8CXwU/D/8Kjz1RvaC2bQYf
Dd8Avwb/DU80Sb24tmkLnwjfDr8DDzJZPYW2KQfvDJ8B3wt/DA85RT29tq0C
7wWfBz8CfwmPMFU9q7apDbfwpfBT8A/waNPU82jbhvBh8NXwi/Bv8LjT1Qtp
mxbwMfBN8Ovwv/DEM9RLatt28MnwHfB78KAz1VNp2/LwrvCZ8P3wJ/DQs9Qz
aJtq8N7wBfCj8NfwiLPVs2vbOvCB8GXwM/CP8Bhz1PNqm8bw4fC18EvwH/B4
c9WLaNuW8HHwzfCb8H/wpPPUS2mbDvAp8F3w+/D/5qun1jYV4d3gs+EH4M/g
YRaoZ9K21eF94Qvhx+Fv4JEXqufQNvXgg+Ar4Gfhn+ExF6nn17ZN4CPh6+BX
4D/hCRarF9U2reHj4Vvht+CBlqgn0zZl4B3h0+C74Q/hwZeqp9W2leA94HPg
h+DP4eGWqWfWNjXh/eCL4Sfg7+BRlqvn0rb14UPgK+Hn4V/gsVeoF9A2zeCj
4BvgV+G/4QlXqhfXtm3gE+Hb4HfggVepp9C2ZeGd4dPhe+GP4CFXq6fTNlXg
PeHz4IfhL+Hh16hn1ba14Ba+BH4K/h4eba16bm3TED4Uvhp+Af4NHmedeiFt
2xw+Br4Rfh3+B554vXoJbdMOPgm+A34XHnSDekptUx7eBT4Tvg/+BB5qo3oG
bVsV3hs+H34U/goecZN6Nm1TBz4Avgx+Gv4RHn2zel5t2wg+HL4Gfgn+HR5v
i3phbdMSPha+GX4D/g+eZKt6KW3bHj4FvhN+Hx5sm3pqbVsB3g0+C34A/hQe
Zrt6Rm1THd4HvhB+DP4GHmmHeg5tWxc+CL4cfhb+CR5zp3o+bdMEPgK+Dn4Z
/hMef5d6UW3bCj4evgV+C252qyfTtqXhHeFT4bvhD+DB96in0TaV4N3hc+AH
4c/hYfeqZ9a2NeD94IvgJ+Bv4VH2qefUNvXhg+Er4efgX+Cx9qsX0LZN4aPg
6+FX4b/gCQ+oF9M2beAT4Nvgt+GBD6on1zZl4Z3g0+F74I/gIQ6pp9O2leE9
4XPhh+Ev4OEPq2fRNrXg/eFL4Cfh7+FRj6jn1rYN4EPhq+AX4F/hcY6qF9Q2
zeGj4Rvh1+B/4ImOqZfQtm3hk+Db4XfhQY6rp9S25eBd4DPg++CP4aFOqKfX
NlXhveDz4Ufgr+ARTqpn07a14QPgS+Gn4R/g0U+p59E2jeDD4GvgF+Hf4XFP
qxfWti3gY+Gb4Dfgf+FJzqiX1Dbt4ZPhO+H34MHOqqfSNhXgXeGz4PvhT+Gh
z6ln1LbV4H3gC+DH4K/hkc6rZ9c2deED4cvhZ+Cf4DEuqOfTto3hI+Br4Zfh
P+DxL6oX0Tat4OPgW+A34eaSelJtUxreAT4Vvgv+AP7fZfU02rYivDt8Nvwg
/Bk87BX1TNqmBrwvfBH8OPwtPPJV9Zzath58MHwF/Bz8MzzWNfX82qYpfCR8
PfwK/Bc8wXX1Ytq2NXwCfCv8NjzQDfXk2rYMvBN8GnwP/CE8xE31tNqmMrwH
fC78EPwFPNwt9Szatia8P3wx/CT8HTzqbfVc2qYBfAh8Ffw8/Cs89h31gtq2
GXw0fAP8Gvw3PNFd9eLapi18Inw7/A48yD31FNqmHLwzfAZ8L/wxPOR99fTa
tgq8F3we/Aj8JTzCA/Ws2qY23MKXwk/BP8CjPVTPo20bwofBV8Mvwr/B4z5S
L6RtWsDHwDfBr8P/whM/Vi+pbdvBJ8N3wO/Bgz5RT6Vty8O7wmfC98OfwEM/
Vc+gbarBe8MXwI/CX8MjPlPPrm3rwAfCl8HPwD/CYzxXz6ttGsOHw9fCL8F/
wOO9UC+ibVvCx8E3w2/C/8GTvlQvpW06wKfAd8Hvw/97pZ5a21SEd4PPhh+A
P4OHea2eSdtWh/eFL4Qfh7+BR36jnkPb1IMPgq+An4V/hsd8q55f2zaBj4Sv
g1+B/4QneKdeVNu0ho+Hb4Xfggd6r55M25SBd4RPg++GP4QH/6CeVttWgveA
z4Efgj+Hh/uonlnb1IT3gy+Gn4C/g0f5pJ5L29aHD4GvhJ+Hf4HH/qxeQNs0
g4+Cb4Bfhf+GJ/yiXlzbtoFPhG+D34EH/qqeQtuWhXeGT4fvhT+Ch/ymnk7b
VIH3hM+DH4a/hIf/rp5V29aCW/gS+Cn4e3i0H+q5tU1D+FD4avgF+Dd4nJ/q
hbRtc/gY+Eb4dfgfeOJf6iW0TTv4JPgO+F140N/qKbVNeXgX+Ez4PvgTeKg/
6hm0bVV4b/h8+FH4K3jEv+rZtE0d+AD4Mvhp+Ed49H/qebVtI/hw+Br4Jfh3
eDyTTrywtmkJHwvfDL8B/wdPEki9lLZtD58C3wm/Dw8WWD21tq0A7wafBT8A
fwoPE0Q9o7apDu8DXwg/Bn8DjxRUPYe2rQsfBF8OPwv/BI8ZTD2ftmkCHwFf
B78M/wmP/596UW3bCj4evgV+C26CqyfTtqXhHeFT4bvhD+DBQ6in0TaV4N3h
c+AH4c/hYUOqZ9a2NeD94IvgJ+Bv4VFCqefUNvXhg+Er4efgX+CxQqsX0LZN
4aPg6+FX4b/gCcOoF9M2beAT4Nvgt+GBw6on1zZl4Z3g0+F74I/gIcKpp9O2
leE94XPhh+Ev4OHDq2fRNrXg/eFL4Cfh7+FRI6jn1rYN4EPhq+AX4F/hcSKq
F9Q2zeGj4Rvh1+B/4IkiqZfQtm3hk+Db4XfhQSKrp9S25eBd4DPg++CP4aGi
qKfXNlXhveDz4Ufgr+ARoqpn07a14QPgS+Gn4R/g0aOp59E2jeDD4GvgF+Hf
4XGjqxfWti3gY+Gb4Dfgf+FJYqiX1Dbt4ZPhO+H34MFiqqfSNhXgXeGz4Pvh
T+GhY6ln1LbV4H3gC+DH4K/hkWKrZ9c2deED4cvhZ+Cf4DHiqOfTto3hI+Br
4ZfhP+Dx46oX0Tat4OPgW+A34SaeelJtUxreAT4Vvgv+AP5ffPU02rYivDt8
Nvwg/Bk8bAL1TNqmBrwvfBH8OPwtPHJC9Zzath58MHwF/Bz8MzxWIvX82qYp
fCR8PfwK/Bc8QWL1Ytq2NXwCfCv8NjxQEvXk2rYMvBN8GnwP/CE8RFL1tNqm
MrwHfC78EPwFPFwy9Szatia8P3wx/CT8HTxqcvVc2qYBfAh8Ffw8/Cs8dgr1
gtq2GXw0fAP8Gvw3PFFK9eLapi18Inw7/A48SCr1FNqmHLwzfAZ8L/wxPGRq
9fTatgq8F3we/Aj8JTxCGvWs2qY23MKXwk/BP8CjpVXPo20bwofBV8Mvwr/B
46ZTL6RtWsDHwDfBr8P/whOnVy+pbdvBJ8N3wO/Bg2ZQT6Vty8O7wmfC98Of
wENnVM+gbarBe8MXwI/CX8MjZlLPrm3rwAfCl8HPwD/CY2RWz6ttGsOHw9fC
L8F/wONlUS+ibVvCx8E3w2/C/8GTZlUvpW06wKfAd8Hvw//Lpp5a21SEd4PP
hh+AP4OHya6eSdtWh/eFL4Qfh7+BR86hnkPb1IMPgq+An4V/hsfMqZ5f2zaB
j4Svg1+B/4QnyKVeVNu0ho+Hb4XfggfKrZ5M25SBd4RPg++GP4QHz6OeVttW
gveAz4Efgj+Hh8urnlnb1IT3gy+Gn4C/g0fJp55L29aHD4GvhJ+Hf4HHzq9e
QNs0g4+Cb4Bfhf+GJyygXlzbtoFPhG+D34EHLqieQtuWhXeGT4fvhT+Chyyk
nk7bVIH3hM+DH4a/hIcvrJ5V29aCW/gS+Cn4e3i0Iuq5tU1D+FD4avgF+Dd4
nKLqhbRtc/gY+Eb4dfgfeOJi6iW0TTv4JPgO+F140OLqKbVNeXgX+Ez4PvgT
eKgS6hm0bVV4b/h8+FH4K3jEkurZtE0d+AD4Mvhp+Ed49FLqebVtI/hw+Br4
Jfh3eLzS6oW1TUv4WPhm+A34P3iSMuqltG17+BT4Tvh9eLCy6qm1bQV4N/gs
+AH4U3iYcuoZtU11eB/4Qvgx+Bt4pPLqObRtXfgg+HL4WfgneMwK6vm0TRP4
CPg6+GX4T3j8iupFtW0r+Hj4FvgtuKmknkzbloZ3hE+F74Y/gAevrJ5G21SC
d4fPgR+EP4eHraKeWdvWgPeDL4KfgL+FR6mqnlPb1IcPhq+En4N/gceqpl5A
2zaFj4Kvh1+F/4InrK5eTNu0gU+Ab4PfhgeuoZ5c25SFd4JPh++BP4KHqKme
TttWhveEz4Ufhr+Ah6+lnkXb1IL3hy+Bn4S/h0etrZ5b2zaAD4Wvgl+Af4XH
qaNeUNs0h4+Gb4Rfg/+BJ6qrXkLbtoVPgm+H34UHqaeeUtuWg3eBz4Dvgz+G
h6qvnl7bVIX3gs+HH4G/gkdooJ5N29aGD4AvhZ+Gf4BHb6ieR9s0gg+Dr4Ff
hH+Hx22kXljbtoCPhW+C34D/hSdprF5S27SHT4bvhN+DB2uinkrbVIB3hc+C
74c/hYduqp5R21aD94EvgB+Dv4ZHaqaeXdvUhQ+EL4efgX+Cx2iunk/bNoaP
gK+FX4b/gMdvoV5E27SCj4Nvgd+Em5bqSbVNaXgH+FT4LvgD+H+t1NNo24rw
7vDZ8IPwZ/CwrdUzaZsa8L7wRfDj8LfwyG3Uc2rbevDB8BXwc/DP8Fht1fNr
m6bwkfD18CvwX/AE7dSLadvW8AnwrfDb8EDt1ZNr2zLwTvBp8D3wh/AQHdTT
apvK8B7wufBD8BfwcB3Vs2jbmvD+8MXwk/B38Kid1HNpmwbwIfBV8PPwr/DY
ndULattm8NHwDfBr8N/wRF3Ui2ubtvCJ8O3wO/AgXdVTaJty8M7wGfC98Mfw
kN3U02vbKvBe8HnwI/CX8Ajd1bNqm9pwC18KPwX/AI/WQz2Ptm0IHwZfDb8I
/waP21O9kLZpAR8D3wS/Dv8LT9xLvaS2bQefDN8BvwcP2ls9lbYtD+8Knwnf
D38CD91HPYO2qQbvDV8APwp/DY/YVz27tq0DHwhfBj8D/wiP0U89r7ZpDB8O
Xwu/BP8Bj9dfvYi2bQkfB98Mvwn/B09q1Utpmw7wKfBd8Pvw/waop9Y2FeHd
4LPhB+DP4GEGqmfSttXhfeEL4cfhb+CRB6nn0Db14IPgK+Bn4Z/hMQer59e2
TeAj4evgV+A/4QmGqBfVNq3h4+Fb4bfggYaqJ9M2ZeAd4dPgu+EP4cGHqafV
tpXgPeBz4Ifgz+Hhhqtn1jY14f3gi+En4O/gUUao59K29eFD4Cvh5+Ff4LFH
qhfQNs3go+Ab4Ffhv+EJR6kX17Zt4BPh2+B34IFHq6fQtmXhneHT4Xvhj+Ah
x6in0zZV4D3h8+CH4S/h4ceqZ9W2teAWvgR+Cv4eHm2cem5t0xA+FL4afgH+
DR5nvHohbdscPga+EX4d/geeeIJ6CW3TDj4JvgN+Fx50onpKbVMe3gU+E74P
/gQeapJ6Bm1bFd4bPh9+FP4KHnGyejZtUwc+AL4Mfhr+ER59inpebdsIPhy+
Bn4J/h0eb6p6YW3TEj4Wvhl+A/4PnmSaeilt2x4+Bb4Tfh8ebLp6am1bAd4N
Pgt+AP4UHmaGekZtUx3eB74Qfgz+Bh5ppnoObVsXPgi+HH4W/gkec5Z6Pm3T
BD7C6XhXVucfNM71dX5f7/plf293/ae/97sef3ZAH3e9qL/Pu97K39ddH+/v
+65v8fdz12/5+73rZk5Af3c9mb9NT8dL+zuE06ajvyO4PtXpFwtHpdsZw/Xd
Tl8oGr1ul4SuP3B653PfgFSuB5/r60W+4c8zuZ7G6dG+XJjb9UpOd3EmKOJ6
d6frOj8o6/ocp4v5pr9Q1fWDTqd3HqCe68+ddrhoc9fDzvMfD9czzwtYbw/X
a8wLWO8A1/vNC1jvSNcXzQtY70TXT8wLWO8s19/OC1jvYtejzA9Y7xrXc84P
WO8W1+vPD1jvXtcHzw9Y7zHXV873H1/XzwW0veD6F79fcj3WggC/7HqBgDZX
XW/q92uuj/L7DdfX+/2m61f9ftv1X36/43rChQF+z/ViAW3vu97G7w9dn+D3
R65v8/sT12/7/anrgRf5z1fXkwe0feF6Wb+/cr2T31+7Pt3vb13f4/d3rj/y
+wfXQywO8I+upwto89n1yn7/4npPv39zfa7fv7t+2O8/XX/h91+uh18S4H9c
zxLQ9q/rtfxuejneX9ssgZ+Ev4dHXaqeW9s2gA+Fr4JfgH+Fx1mmXlDbNIeP
hm+EX4P/gSdarl5C27aFT4Jvh9+FB1mhnlLbloN3gc+A74M/hodaqZ5e21SF
94LPhx+Bv4JHWKWeTdvWhg+AL4Wfhn+AR1+tnkfbNIIPg6+BX4R/h8ddo15Y
27aAj4Vvgt+A/4UnWateUtu0h0+G74Tfgwdbp55K21SAd4XPgu+HP4WHXq+e
UdtWg/eBL4Afg7+GR9qgnl3b1IUPhC+Hn4F/gsfYqJ5P2zaGj4CvhV+G/4DH
36ReRNu0go+Db4HfhJvN6km1TWl4B/hU+C74A/h/W9TTaNuK8O7w2fCD8Gfw
sFvVM2mbGvC+8EXw4/C38Mjb1HNq23rwwfAV8HPwz/BY29Xza5um8JHw9fAr
8F/wBDvUi2nb1vAJ8K3w2/BAO9WTa9sy8E7wafA98IfwELvU02qbyvAe8Lnw
Q/AX8HC71bNo25rw/vDF8JPwd/Coe9RzaZsG8CHwVfDz8K/w2HvVC2rbZvDR
8A3wa/Df8ET71Itrm7bwifDt8DvwIPvVU2ibcvDO8BnwvfDH8JAH1NNr2yrw
XvB58CPwl/AIB9WzapvacAtfCj8F/wCPdkg9j7ZtCB8GXw2/CP8Gj3tYvZC2
aQEfA98Evw7/C098RL2ktm0HnwzfAb8HD3pUPZW2LQ/vCp8J3w9/Ag99TD2D
tqkG7w1fAD8Kfw2PeFw9u7atAx8IXwY/A/8Ij3FCPa+2aQwfDl8LvwT/AY93
Ur2Itm0JHwffDL8J/wdPekq9lLbpAJ8C3wW/D//vtHpqbVMR3g0+G34A/gwe
5ox6Jm1bHd4XvhB+HP4GHvmseg5tUw8+CL4Cfhb+GR7znHp+bdsEPhK+Dn4F
/hOe4Lx6UW3TGj4evhV+Cx7ognoybVMG3hE+Db4b/hAe/KJ6Wm1bCd4DPgd+
CP4cHu6SemZtUxPeD74YfgL+Dh7lsnoubVsfPgS+En4e/gUe+4p6AW3TDD4K
vgF+Ff4bnvCqenFt2wY+Eb4Nfgce+Jp6Cm1bFt4ZPh2+F/4IHvK6ejptUwXe
Ez4Pfhj+Eh7+hnpWbVsLbuFL4Kfg7+HRbqrn1jYN4UPhq+EX4N/gcW6pF9K2
zeFj4Bvh1+F/4Ilvq5fQNu3gk+A74HfhQe+op9Q25eFd4DPh++BP4KHuqmfQ
tlXhveHz4Ufhr+AR76ln0zZ14APgy+Cn4R/h0e+r59W2jeDD4Wvgl+Df4fEe
qBfWNi3hY+Gb4Tfg/+BJHqqX0rbt4VPgO+H34cEeqafWthXg3eCz4AfgT+Fh
Hqtn1DbV4X3gC+HH4G/gkZ6o59C2deGD4MvhZ+Gf4DGfqufTNk3gI+Dr4Jfh
P+Hxn6kX1bat4OPhW+C34Oa5ejJtWxreET4Vvhv+AB78hXoabVMJ3h0+B34Q
/hwe9qV6Zm1bA94Pvgh+Av4WHuWVek5tUx8+GL4Sfg7+BR7rtXoBbdsUPgq+
Hn4V/gue8I16MW3TBj4Bvg1+Gx74rXpybVMW3gk+Hb4H/gge4p16Om1bGd4T
Phd+GP4CHv69ehZtUwveH74EfhL+Hh71g3pubdsAPhS+Cn4B/hUe56N6QW3T
HD4avhF+Df4HnuiTeglt2xY+Cb4dfhce5LN6Sm1bDt4FPgO+D/4YHuqLenpt
UxXeCz4ffgT+Ch7hq3o2bVsbPgC+FH4a/gEe/Zt6Hm3TCD4MvgZ+Ef4dHve7
emFt2wI+Fr4JfgP+F57kh3pJbdMePhm+E34PHuyneiptUwHeFT4Lvh/+FB76
l3pGbVsN3ge+AH4M/hoe6bd6dm1TFz4Qvhx+Bv4JHuOPej5t2xg+Ar4Wfhn+
Ax7/r3oRbdMKPg6+BX4Tbv6pJ9U2peEd4FPhu+AP4P+Z9OJptG1FeHf4bPhB
+DN42EDqmbRNDXhf+CL4cfhbeOTA6jm1bT34YPgK+Dn4Z3isIOr5tU1T+Ej4
evgV+C94gqDqxbRta/gE+Fb4bXigYOrJtW0ZeCf4NPge+EN4iP/U02qbyvAe
8LnwQ/AX8HDB1bNo25rw/vDF8JPwd/CoIdRzaZsG8CHwVfDz8K/w2CHVC2rb
ZvDR8A3wa/Df8ESh1Itrm7bwifDt8DvwIKHVU2ibcvDO8BnwvfDH8JBh1NNr
2yrwXvB58CPwl/AIYdWzapvacAtfCj8F/wCPFk49j7ZtCB8GXw2/CP8Gjxte
vZC2aQEfA98Evw7/C08cQb2ktm0HnwzfAb8HDxpRPZW2LQ/vCp8J3w9/Ag8d
ST2DtqkG7w1fAD8Kfw2PGFk9u7atAx8IXwY/A/8IjxFFPa+2aQwfDl8LvwT/
AY8XVb2Itm0JHwffDL8J/wdPGk29lLbpAJ8C3wW/D/8vunpqbVMR3g0+G34A
/gweJoZ6Jm1bHd4XvhB+HP4GHjmmeg5tUw8+CL4Cfhb+GR4zlnp+bdsEPhK+
Dn4F/hOeILZ6UW3TGj4evhV+Cx4ojnoybVMG3hE+Db4b/hAePK56Wm1bCd4D
Pgd+CP4cHi6eemZtUxPeD74YfgL+Dh4lvnoubVsfPgS+En4e/gUeO4F6AW3T
DD4KvgF+Ff4bnjChenFt2wY+Eb4NfgceOJF6Cm1bFt4ZPh2+F/4IHjKxejpt
UwXeEz4Pfhj+Eh4+iXpWbVsLbuFL4Kfg7+HRkqrn1jYN4UPhq+EX4N/gcZKp
F9K2zeFj4Bvh1+F/4ImTq5fQNu3gk+A74HfhQVOop9Q25eFd4DPh++BP4KFS
qmfQtlXhveHz4Ufhr+ARU6ln0zZ14APgy+Cn4R/h0VOr59W2jeDD4Wvgl+Df
4fHSqBfWNi3hY+Gb4Tfg/+BJ0qqX0rbt4VPgO+H34cHSqafWthXg3eCz4Afg
T+Fh0qtn1DbV4X3gC+HH4G/gkTKo59C2deGD4MvhZ+Gf4DEzqufTNk3gI+Dr
4JfhP+HxM6kX1bat4OPhW+C34CazejJtWxreET4Vvhv+AB48i3oabVMJ3h0+
B34Q/hweNqt6Zm1bA94Pvgh+Av4WHiWbek5tUx8+GL4Sfg7+BR4ru3oBbdsU
Pgq+Hn4V/gueMId6MW3TBj4Bvg1+Gx44p3pybVMW3gk+Hb4H/ggeIpd6Om1b
Gd4TPhd+GP4CHj63ehZtUwveH74EfhL+Hh41j3pubdsAPhS+Cn4B/hUeJ696
QW3THD4avhF+Df4Hniifeglt2xY+Cb4dfhceJL96Sm1bDt4FPgO+D/4YHqqA
enptUxXeCz4ffgT+Ch6hoHo2bVsbPgC+FH4a/gEevZB6Hm3TCD4MvgZ+Ef4d
HrewemFt2wI+Fr4JfgP+F56kiHpJbdMePhm+E34PHqyoeiptUwHeFT4Lvh/+
FB66mHpGbVsN3ge+AH4M/hoeqbh6dm1TFz4Qvhx+Bv4JHqOEej5t2xg+Ar4W
fhn+Ax6/pHoRbdMKPg6+BX4TbkqpJ9U2peEd4FPhu+AP4P+VVk+jbSvCu8Nn
ww/Cn8HDllHPpG1qwPvCF8GPw9/CI5dVz6lt68EHw1fAz8E/w2OVU8+vbZrC
R8LXw//HJV1GRdWFYRjeNnZ3K3Z38tndid2t2GLrtruwA7uxMLC7uxVF7BYD
7P6csxas9dzz755rz3nPe87chP+EZ6ijXlnbdofPggfA78Ej1VXPpm1rwvvC
58MPwh/D3eqp59E2DeCD4Evhx+Gv4PHqqxfWtk3hI+Gr4efg7+FJG6iX1DZt
4OPgfvAr8C/w1A3Vy2nbTvCpcH/4bfgveKZG6lW0jRfcB74HHgyP0lg9u7ap
De8HXwg/BH8Kj+mpnk/bNoQPgS+Dn4S/hidool5E2zSHW/ha+Hl4KDxZU/XS
2rYtfAJ8E/wa/Cs8bTP18tqmC3wafAc8EP4Hnrm5ejVt2xM+B74X/gAetYV6
Tm1bBz4Avgh+BP4MHrulen5t0xg+FL4CfgoeAk/YSr2Ytm0BHw1fB78ID4On
aK3uoW3awyfCt8Cvw7/D07VRr6htu8JnwHfC78L/wrO0Va+ubXrD58L3wx/C
o7dTz6Vt6sG94UvgR+Ev4HHaqxfUtp7w4fCV8DPwt/DEHdSLa5tW8DHwDfBL
8E/wlB3Vy2jbDvDJ8K3wm/Af8Ayd1Ctpm+7wmfAAeBA8Umf1rNqmJrwPfD78
APwxPEYX9Tzatj58ENwXfhz+Eh6vq3ohbdMUPgK+Gn4W/h6epJt6SW3bGj4O
vhF+Bf4Znrq7ellt0wk+Be4PvwX/Bc/YQ72Ktu0B94HvhgfDI3upZ9e2teD9
4Avgh+BP4DF7qufVNg3hg+HL4Cfgr+Hxe6kX0bbN4Ba+Bn4e/gGerLd6KW3T
Fj4evgl+Ff4VnqaPenlt2xk+Db4dHgj/Dc/cV72qtukJnw3fC78Pj9pPPYe2
qQPvD18EPwx/Bo/VXz2/tm0EHwpfDj8FfwNPOEC9qLZpAR8FXwe/AA+DJ/dW
99C27eAT4Zvh1+Hf4OkGqlfQNl3h0+E74Xfgf+Hug9Sra9te8LnwffCH8GiD
1XNp27pwb/hi+FH4c3icIeoFtI0nfBh8Jfw0/C080VD14tq2JXwMfD38Evwj
POUw9f+0TQf4JPhW+A34D3j64eqVtG03+Ez4LngQ3IxQz6pta8D7wOfBD8Af
wWOMVM+tberDB8J94cfgL+FxrXohbdsEPgK+Cn4W/g6eZJR6CW3TGj4WvhF+
Gf4Znmq0ellt2xE+Bb4Nfgv+E55xjHplbdMDPgu+G34PHnmsejZtUwveF74A
fhD+BO42Tj2vtm0AHwxfCj8BfwWPP169sLZpBh8JXwM/B/8ATzpBvZS2bQMf
D/eDX4V/gaeZqF5O23SGT4Vvh9+G/4ZnmqReVdt6wWfD98Dvw6NMVs+hbWvD
+8MXwg/Dn8JjTVHPp20awYfAl8NPwt/AE0xVL6ptm8NHwdfCL8BD4cmnqZfW
Nu3gE+Cb4dfg3+Bpp6tX0LZd4NPhO+B34H/g7jPUq2mbXvA58H3wB/BoM9Vz
apu68AHwxfAj8Ofw2LPUC2jbxvBh8BXw0/AQeCIf9WLapiV8NHw9/CL8IzzF
bPX/tG17+CT4FvgN+Hd4+jnqFbVNN/gM+C74XbiZq55F29SA94bPg++HP4JH
n6eeW9vWgw+EL4Efg7+Ax52vXlDbNIEPh6+Cn4G/gydeoF5C27aCj4VvgF+G
f4KnWqheRtt0hE+Gb4PfhP+EZ1ikXlnbdofPggfA78EjLVbPpm1rwvvC58MP
wh/D3Zao59E2DeCD4Evhx+Gv4PF81Qtr26bwkfDV8HPw9/CkS9VLaps28HFw
P/gV+Bd46mXq5bRtJ/hUuD/8NvwXPNNy9SraxgvuA98DD4ZHWaGeXdvUhveD
L4Qfgj+Fx1ypnk/bNoQPgS+Dn4S/hidYFd75HS+ibZrDLXwt/Dw8FJ5stXpp
bdsWPgG+CX4N/hWedo16eW3TBT4NvgMeCP8Dz7xWvZq27QmfA98LfwCPuk49
p7atAx8AXwQ/An8Gj71ePb+2aQwfCl8BPwUPgSfcoF5M27aAj4avg1+Eh8FT
bFT30Dbt4RPhW+DX4d/h6fzUK2rbrvAZ8J3wu/C/8Cyb1Ktrm97wufD98Ifw
6JvVc2mbenBv+BL4UfgLeJwt6gW1rSd8OHwl/Az8LTzxVvXi2qYVfAx8A/wS
/BM85Tb1Mtq2A3wyfCv8JvwHPIO/eiVt0x0+Ex4AD4JH2q6eVdvUhPeBz4cf
gD+Gx9ihnkfb1ocPgvvCj8NfwuPtVC+kbZrCR8BXw8/C38OT7FIvqW1bw8fB
N8KvwD/DUweol9U2neBT4P7wW/Bf8Iy71ato2x5wH/hueDA88h717Nq2Frwf
fAH8EPwJPOZe9bzapiF8MHwZ/AT8NTz+PvUi2rYZ3MLXwM/DP8CT7VcvpW3a
wsfDN8Gvwr/C0xxQL69tO8OnwbfDA+G/4ZkPqlfVNj3hs+F74ffhUQ+p59A2
deD94Yvgh+HP4LEOq+fXto3gQ+HL4afgb+AJj6gX1TYt4KPg6+AX4GHw5EfV
PbRtO/hE+Gb4dfg3eLpj6hW0TVf4dPhO+B1X7/1Rrkq0oo7/dXWx87PPFC7t
uPvxfx2w+Fm1DuUdr+7qIj3+najqeC9X7yg9qebx2o7PdXXBuEEXwxo6vs/V
/sG562Rq7vhDV+fbMuJKvbaORzvxr105qrPjuVydp06m69u8HK/rar/0/Rs+
7Oe4t6tzfjh5M/4Qxxe7esOR5J5lrONHXZ1tVtfAnuMdf+7qtW33N1061fE4
J/91FtcN+jhewNWrI7du8XuB456u/jc9OPcyx4e5esWqfwfWOL7S1Rn+3c4U
P8dPu3ppxX8T/B1/6+q0Sb89fr3b8USn/vWSf48v1SHHi7s6leuBnnC8pasX
jn/bafA5x8e4OoVnmZfrrzi+3tXzXAvdcvySq12XjxHs+EdXzzlTuEexJ46n
PP2vE7ku+Mrx/1ztehzz3jvewdUJSv57gp8dn+Tq6bGG9fn80/Gtrna9PvfI
Q11+w9VTXS/AzdXmh6tj/zs+Jp7j6c/8639v33tHEscrudrN9QBSOd7N1RP+
rZcoo+MzXR3t0J4f5bI5vsvVY103kMfxIFdH+fc6lhdy3Jz916Ncf5gSjmc9
G/7/Let4DVc3cn0qOd7H1X4b/32qOz4v4nxdxw9EnG/k+KOI880cj3Eu/Hwb
x3OfCz/f0fH658LPd3N8YMT53o77Rpwf4PixiPNDHH8Zcd46Hve8tCmkbZvA
R8BXwc/C38GTXFAvoW1aw8fCN8Ivwz/DU11UL6ttO8KnwLfBb8F/wjNeUq+s
bXrAZ8F3w+/BI19Wz6ZtasH7whfAD8KfwN2uqOfVtg3gg+FL4Sfgr+Dxr6oX
1jbN4CPha+Dn4B/gSa+pl9K2beDj4X7wq/Av8DTX1ctpm87wqfDt8Nvw3/BM
N9Sralsv+Gz4Hvh9eJSb6jm0bW14f/hC+GH4U3isW+r5tE0j+BD4cvhJ+Bt4
gtvqRbVtc/go+Fr4BXgoPHmgemlt0w4+Ab4Zfg3+DZ72jnoFbdsFPh2+A34H
/gfufle9mrbpBZ8D3wd/AI8WpJ5T29SFD4Avhh+BP4fHvqdeQNs2hg+Dr4Cf
hofAEwWrF9M2LeGj4evhF+Ef4Snuq/+nbdvDJ8G3wG/Av8PTP1CvqG26wWfA
d8Hvws1D9Szapga8N3wefD/8ETz6I/Xc2rYefCB8CfwY/AU87mP1gtqmCXw4
fBX8DPwdPPET9RLathV8LHwD/DL8EzzVU/Uy2qYjfDJ8G/wm/Cc8wzP1ytq2
O3wWPAB+Dx7puXo2bVsT3hc+H34Q/hju9kI9j7ZpAB8EXwo/Dn8Fj/dSvbC2
bQofCV8NPwd/D0/6Sr2ktmkDHwf3g1+Bf4Gnfq1eTtt2gk+F+8Nvw3/BM71R
r6JtvOA+8D3wYHiUEPXs2qY2vB98IfwQ/Ck85lv1fNq2IXwIfBn8JPw1PME7
9SLapjncwtfCz8ND4cneq5fWtm3hE+Cb4NfgX+FpP6iX1zZd4NPgO+CB8D/w
zKHq1bRtT/gc+F74A3jUMPWc2rYOfAB8EfwI/Bk89kf1/NqmMXwofAX8FDwE
nvCTejFt2wI+Gr4OfhEeBk/xWd1D27SHT4RvgV+Hf4en+6JeUdt2hc+A74Tf
hf+FZ/mqXl3b9IbPhe+HP4RH/6aeS9vUg3vDl8CPwl/A43xXL6htPeHD4Svh
Z+Bv4Yl/qBfXNq3gY+Ab4Jfgn+Apf6qX0bYd4JPhW+E34T/gGX6pV9I23eEz
4QHwIHik3+pZtU1NeB/4fPgB+GN4jD/qebRtffgguC/8OPwlPN5f9ULapil8
BHw1/Cz8PTyJyS9eUtu2ho+Db4RfgX+Gp46kXlbbdIJPgfvDb8F/wTNGVq+i
bXvAfeC74cHwyFHUs2vbWvB+8AXwQ/An8JhR1fNqm4bwwfBl8BPw1/D40dSL
aNtmcAtfAz8P/wBPFl29lLZpCx8P3wS/Cv8KTxNDvby27QyfBt8OD4T/hmd2
U6+qbXrCZ8P3wu/Do8ZUz6Ft6sD7wxfBD8OfwWPFUs+vbRvBh8KXw0/B38AT
xlYvqm1awEfB18EvwMPgyeOoe2jbdvCJ8M3w6/Bv8HRx1Stom67w6fCd8Dvw
v3D3eOrVtW0v+Fz4PvhDeLT46rm0bV24N3wx/Cj8OTxOAvUC2sYTPgy+En4a
/haeKKF6cW3bEj4Gvh5+Cf4RnjKR+n/apgN8Enwr/Ab8Bzx9YvVK2rYbfCZ8
FzwIbpKoZ9W2NeB94PPgB+CP4DGSqufWNvXhA+G+8GPwl/C4ydQLadsm8BHw
VfCz8HfwJMnVS2ib1vCx8I3wy/DP8FQp1Mtq247wKfBt8Fvwn/CMKdUra5se
8Fnw3fB78Mip1LNpm1rwvvAF8IPwJ3C31Op5tW0D+GD4UvgJ+Ct4/DTqhbVN
M/hI+Br4OfgHeNK06qW0bRv4eLgf/Cr8CzxNOvVy2qYzfCp8O/w2/Dc8U3r1
qtrWCz4bvgd+Hx4lg3oObVsb3h++EH4Y/hQeK6N6Pm3TCD4Evhx+Ev4GniCT
elFt2xw+Cr4WfgEeCk+eWb20tmkHnwDfDL8G/wZP665eQdt2gU+H74Dfgf+B
u2dRr6ZtesHnwPfBH8CjZVXPqW3qwgfAF8OPwJ/DY2dTL6BtG8OHwVfAT8ND
4ImyqxfTNi3ho+Hr4RfhH+Epcqj/p23bwyfBt8BvwL/D0+dUr6htusFnwHfB
78JNLvUs2qYGvDd8Hnw//BE8em713Nq2HnwgfAn8GPwFPG4e9YLapgl8OHwV
/Az8HTxxXvUS2rYVfCx8A/wy/BM8VT71MtqmI3wyfBv8JvwnPEN+9cratjt8
FjwAfg8eqYB6Nm1bE94XPh9+EP4Y7lZQPY+2aQAfBF8KPw5/BY9XSL2wtm0K
HwlfDT8Hfw9PWli9pLZpAx8H94NfgX+Bpy6iXk7bdoJPhfvDb8N/wTMVVa+i
bbzgPvA98GB4lGLq2bVNbXg/+EL4IfhTeMzi6vm0bUP4EPgy+En4a3iCEupF
tE1zuIWvhZ+Hh8KTlVQvrW3bwifAN8Gvwb/C05ZSL69tusCnwXfAA+F/4JlL
q1fTtj3hc+B74Q/gUT3Uc2rbOvAB8EXwI/Bn8Nj/qefXNo3hQ+Er4KfgIfCE
ZdSLadsW8NHwdfCL8DB4irLqHtqmPXwifAv8Ovw7PF059Yratit8Bnwn/C78
LzxLefXq2qY3fC58P/whPHoF9Vzaph7cG74EfhT+Ah6nonpBbesJHw5fCT8D
fwtPXEm9uLZpBR8D3wC/BP8ET1lZvYy27QCfDN8Kvwn/Ac9QRb2StukOnwkP
gAfBI1VVz6ptasL7wOfDD8Afw2NUU8+jbevDB8F94cfhL+HxqqsX0jZN4SPg
q+Fn4e/hSWqol9S2reHj4BvhV+Cf4alrqpfVNp3gU+D+8FvwX/CMtdSraNse
cB/4bngwPHJt9ezatha8H3wB/BD8CTxmHfW82qYhfDB8GfwE/DU8fl31Itq2
GdzC18DPwz/Ak9VTL6Vt2sLHwzfBr8K/wtPUVy+vbTvDp8G3wwPhv+GZG6hX
1TY94bPhe+H34VEbqufQNnXg/eGL4Ifhz+CxGqnn17aN4EPhy+Gn4G/gCRur
F9U2LeCj4OvgF+Bh8OSe6h7ath18Inwz/Dr8GzxdE/UK2qYrfDp8J/wO/C/c
val6dW3bCz4Xvg/+EB6tmXoubVsX7g1fDD8Kfw6P01y9gLbxhA+Dr4Sfhr+F
J2qhXlzbtoSPga+HX4J/hKdsqf6ftukAnwTfCr8B/wFP30q9krbtBp8J3wUP
gpvW6lm1bQ14H/g8+AH4I3iMNuq5tU19+EC4L/wY/CU8blv1Qtq2CXwEfBX8
LPwdPEk79RLapjV8LHwj/DL8MzxVe/Wy2rYjfAp8G/wW/Cc8Ywf1ytqmB3wW
fDf8HjxyR/Vs2qYWvC98Afwg/AncrZN6Xm3bAD4YvhR+Av4KHr+zemFt0ww+
Er4Gfg7+AZ60i3opbdsGPh7uB78K/wJP01W9nLbpDJ8K3w6/Df8Nz9RNvaq2
9YLPhu+B34dH6a6eQ9vWhveHL4Qfhj+Fx+qhnk/bNIIPgS+Hn4S/gSfwUi+q
bZvDR8HXwi/AQ+HJe6qX1jbt4BPgm+HX4N/gaXupV9C2XeDT4Tvgd+B/4O69
1atpm17wOfB98AfwaH3Uc2qbuvAB8MXwI/Dn8Nh91Qto28bwYfAV8NPwEHii
furFtE1L+Gj4evhF+Ed4iv7q/2nb9vBJ8C3wG/Dv8PQD1Ctqm27wGfBd8Ltw
462eRdvUgPeGz4Pvhz+CRx+onlvb1oMPhC+BH4O/gMcdpF5Q2zSBD4evgp+B
v4MnHqxeQtu2go+Fb4Bfhn+CpxqiXkbbdIRPhm+D34T/hGcYql5Z23aHz4IH
wO/BIw1Tz6Zta8L7wufDD8Ifw92Gq+fRNg3gg+BL4cfhr+DxRqgX1rZN4SPh
q+Hn4O/hSUeql9Q2beDj4H7wK/Av8NRWvZy27QSfCveH34b/gmcapV5F23jB
feB74MHwKKPVs2ub2vB+8IXwQ/Cn8Jhj1PNp24bwIfBl8JPw1/AEY9WLaJvm
cAtfCz8PD4UnG6deWtu2hU+Ab4Jfg3+Fpx2vXl7bdIFPg++AB8L/wDNPUK+m
bXvC58D3wh/Ao05Uz6lt68AHwBfBj8CfwWNPUs+vbRrDh8JXwE/BQ+AJJ6sX
07Yt4KPh6+AX4WHwFFPUPbRNe/hE+Bb4dfh3eLqp6hW1bVf4DPhO+F34X3iW
aerVtU1v+Fz4fvhDePTp6rm0TT24N3wJ/Cj8BTzODPWC2tYTPhy+En4G/hae
eKZ6cW3TCj4GvgF+Cf4JnnKWehlt2wE+Gb4VfhP+A57BR72StukOnwkPgAfB
I81Wz6ptasL7wOfDD8Afw2PMUc+jbevDB8F94cfhL+Hx5qoX0jZN4SPgq+Fn
4e/hSeapl9S2reHj4BvhV+Cf4annq5fVNp3gU+D+8FvwX/CMC9SraNsecB/4
bngwPPJC9ezatha8H3wB/BD8CTzmIvW82qYhfDB8GfwE/DU8/mL1Itq2GdzC
18DPwz/Aky1RL6Vt2sLHwzfBr8K/wtP4qpfXtp3h0+Db4YHw3/DMS9Wrapue
8NnwvfD78KjL1HNomzrw/vBF8MPwZ/BYy9Xza9tG8KHw5fBT8DfwhCvUi2qb
FvBR8HXwC/AwePKV6h7ath18Inwz/Dr8GzzdKvUK2qYrfDp8J/wO/C/cfbV6
dW3bCz4Xvg/+EB5tjXoubVsX7g1fDD8Kfw6Ps1a9gLbxhA+Dr4Sfhr+FJ1qn
XlzbtoSPga+HX4J/hKdcr/6ftukAnwTfCr8B/wFPv0G9krbtBp8J3wUPgpuN
6lm1bQ14H/g8+AH4I3gMP/Xc2qY+fCDcF34M/hIed5N6IW3bBD4Cvgp+Fv4O
nmSzeglt0xo+Fr4Rfhn+GZ5qi3pZbdsRPgW+DX4L/hOecat6ZW3TAz4Lvht+
Dx55m3o2bVML3he+AH4Q/gTu5q+eV9s2gA+GL4WfgL+Cx9+uXljbNIOPhK+B
n4N/gCfdoV5K27aBj4f7wa/Cv8DT7FQvp206w6fCt8Nvw3/DM+1Sr6ptveCz
4Xvg9+FRAtRzaNva8P7whfDD8KfwWLvV82mbRvAh8OXwk/A38AR71Itq2+bw
UfC18AvwUHjyveqltU07+AT4Zvg1+Dd42n3qFbRtF/h0+A74HfgfuPt+9Wra
phd8Dnwf/AE82gH1nNqmLnwAfDH8CPw5PPZB9QLatjF8GHwF/DQ8BJ7okHox
bdMSPhq+Hn4R/hGe4rD6f9q2PXwSfAv8Bvw7PP0R9Yrapht8BnwX/C7cHFXP
om1qwHvD58H3wx/Box9Tz61t68EHwpfAj8FfwOMeVy+obZrAh8NXwc/A38ET
n1AvoW1bwcfCN8Avwz/BU51UL6NtOsInw7fBb8J/wjOcUq+sbbvDZ8ED4Pfg
kU6rZ9O2NeF94fPhB+GP4W5n1PNomwbwQfCl8OPwV/B4Z9ULa9um8JHw1fBz
8PfwpOfUS2qbNvBxcD/4FfgXeOrz6uW0bSf4VLg//Db8FzzTBfUq2sYL7gPf
Aw+GR7monl3b1Ib3gy+EH4I/hce8pJ5P2zaED4Evg5+Ev4YnuKxeRNs0h1v4
Wvh5eCg82RX10tq2LXwCfBP8GvwrPO1V9fLapgt8GnwHPBD+B575mno1bdsT
Pge+F/4AHvW6ek5tWwc+AL4IfgT+DB77hnp+bdMYPhS+An4KHgJPeFO9mLZt
AR8NXwe/CA+Dp7il7qFt2sMnwrfAr8O/w9PdVq+obbvCZ8B3wu/C/8KzBKpX
1za94XPh++EP4dHvqOfSNvXg3vAl8KPwF/A4d9ULaltP+HD4SvgZ+Ft44iD1
4tqmFXwMfAP8EvwTPOU99TLatgN8Mnwr/Cb8BzxDsHolbdMdPhMeAA+CR7qv
nlXb1IT3gc+HH4A/hsd4oJ5H29aHD4L7wo/DX8LjPVQvpG2awkfAV8PPwt/D
kzxSL6ltW8PHwTfCr8A/w1M/Vi+rbTrBp8D94bfgv+AZn6hX0bY94D7w3fBg
eOSn6tm1bS14P/gC+CH4E3jMZ+p5tU1D+GD4MvgJ+Gt4/OfqRbRtM7iFr4Gf
h3+AJ3uhXkrbtIWPh2+CX4V/had5qV5e23aGT4NvhwfCf8Mzv1Kvqm16wmfD
98Lvw6O+Vs/h6uABt1sOnOZ4HVfn2rLn8eTFjvd39ZDnCzsv3eD4IlefSTc0
xH+344ddncyzRZ+TJx1/5uoOMzy+BF53PNabf7399L8fPHI8/5vw+R8cb+Tq
3V5BAV4fHR/q6p7/MuiL48tdnaWaj3u1H46fcrWLA347/sbV/9THPdIwlycM
+deu4z5RXW2LhoTPc3O8RUj4vNiOjwoJnxfP8XUh4fMSOX4hJHxeUsfDQsLn
pXQ8+dvweWkc93gbPi+D4+0i2t3xiRGd3fHNEZ3b8esRnd/xbxFd2PF078K7
uOMVIrq0410juqzj0yO6ouM7I7qq43ciuqbjfyO6ruPu7//1nUm+gZMaOV7d
1f6JS/knbu54L1dP/se+bRyf6+p22bzbZevk+D5Xl3L9oLvjD12dxPVFH8ej
ffjXISdqh5zwdjyXq0/+y9rDHK/r6qX/Lh84ynFvV3u7BkxwfLGr67guMNXx
o652jff2cfz5h/B9FjgeJzR8H1/HC4SG77PKcc/Q8H3WOz4sNHyfLY6vDA3f
Z4fjp0PD99nr+NvQ8H0OOZ4oLHyfE44XDwvf56zjLcPC97ns+Jiw8H1uOL4+
LHyfu45fCgvf56HjH7VNyo/q/2mbDvBJ8K3wG/Af8PSf1Ctp227wmfBd8CC4
+ayeVdvWgPeBz4MfgD+Cx/iinlvb1IcPhPvCj8FfwuN+VS+kbZvAR8BXwc/C
38GTfFMvoW1aw8fCN8Ivwz/DU31XL6ttO8KnwLfBb8F/wjP+UK+sbXrAZ8F3
w+/BI/9Uz6ZtasH7whfAD8KfwN1+qefVtg3gg+FL4Sfgr+Dxf6sX1jbN4CPh
a+Dn4B/gSf+ol9K2beDj4X7wq/Av8DR/1ctpm87wqfDt8Nvw3/BMpoB4VW3r
BZ8N3wO/D48SST2Htq0N7w9fCD8MfwqPFVk9n7ZpBB8CXw4/CX8DTxBFvai2
bQ4fBV8LvwAPhSePql5a27SDT4Bvhl+Df4OnjaZeQdt2gU+H74Dfgf+Bu0dX
r6ZtesHnwPfBH8CjxVDPqW3qwgfAF8OPwJ/DY7upF9C2jeHD4Cvgp+Eh8EQx
1Ytpm5bw0fD18Ivwj/AUsdT/07bt4ZPgW+A34N/h6WOrV9Q23eAz4Lvgd+Em
jnoWbVMD3hs+D74f/ggePa56bm1bDz4QvgR+DP4CHjeeekFt0wQ+HL4Kfgb+
Dp44vnoJbdsKPha+AX4Z/gmeKoF6GW3TET4Zvg1+E/4TniGhemVt2x0+Cx4A
vwePlEg9m7atCe8Lnw8/CH8Md0usnkfbNIAPgi+FH4e/gsdLol5Y2zaFj4Sv
hp+Dv4cnTapeUtu0gY+D+8GvwL/AUydTL6dtO8Gnwv3ht+G/4JmSq1fRNl5w
H/geeDA8Sgr17NqmNrwffCH8EPwpPGZK9XzatiF8CHwZ/CT8NTxBKvUi2qY5
3MLXws/DQ+HJUquX1rZt4RPgm+DX4F/hadOol9c2XeDT4DvggfA/8Mxp1atp
257wOfC98AfwqOnUc2rbOvAB8EXwI/Bn8Njp1fNrm8bwofAV8FPwEHjCDOrF
tG0L+Gj4OvhFeBg8RUZ1D23THj4RvgV+Hf4dni6TekVt2xU+A74Tfhf+F54l
s3p1bdMbPhe+H/4QHt1dPZe2qQf3hi+BH4W/gMfJol5Q23rCh8NXws/A38IT
Z1Uvrm1awcfAN8AvwT/BU2ZTL6NtO8Anw7fCb8J/wDNkV6+kbbrDZ8ID4EHw
SDnUs2qbmvA+8PnwA/DH8Bg51fNo2/rwQXBf+HH4S3i8XOqFtE1T+Aj4avhZ
+Ht4ktzqJbVta/g4+Eb4FfhneOo86mW1TSf4FLg//Bb8FzxjXvUq2rYH3Ae+
Gx4Mj5xPPbu2rQXvB18APwR/Ao+ZXz2vtmkIHwxfBj8Bfw2PX0C9iLZtBrfw
NfDz8A/wZAXVS2mbtvDx8E3wq/Cv8DSF1Mtr287wafDt8ED4b3jmwupVtU1P
+Gz4Xvh9eNQi6jm0TR14f/gi+GH4M3isour5tW0j+FD4cvgp+Bt4wmLqRbVN
C/go+Dr4BXgYPHlxdQ9t2w4+Eb4Zfh3+DZ6uhHoFbdMVPh2+E34H/hfuXlK9
urbtBZ8L3wd/CI9WSj2Xtq0L94Yvhh+FP4fHKa1eQNt4wofBV8JPw9/CE3mo
F9e2LeFj4Ovhl+Af4Sn/U/9P23SAT4Jvhd+A/4CnL6NeSdt2g8+E74IHwU1Z
9azatga8D3we/AD8ETxGOfXc2qY+fCDcF34M/hIet7x6IW3bBD4Cvgp+Fv4O
nqSCeglt0xo+Fr4Rfhn+GZ6qonpZbdsRPgW+DX4L/hOesZJ6ZW3TAz4Lvht+
Dx65sno2bVML3he+AH4Q/gTuVkU9r7ZtAB8MXwo/AX8Fj19VvbC2aQYfCV8D
Pwf/AE9aTb2Utm0DHw/3g1+Ff4Gnqa5eTtt0hk+Fb4ffhv+GZ6qhXlXbesFn
w/fA78Oj1FTPoW1rw/vDF8IPw5/CY9VSz6dtGsGHwJfDT8LfwBPUVi+qbZvD
R8HXwi/AQ+HJ66iX1jbt4BPgm+HX4N/gaeuqV9C2XeDT4Tvgd+B/4O711Ktp
m17wOfB98AfwaPXVc2qbuvAB8MXwI/Dn8NgN1Ato28bwYfAV8NPwEHiihurF
tE1L+Gj4evhF+Ed4ikbq/2nb9vBJ8C3wG/Dv8PSN1Stqm27wGfBd8Ltw46me
RdvUgPeGz4Pvhz+CR2+inlvb1oMPhC+BH4O/gMdtql5Q2zSBD4evgp+Bv4Mn
bqZeQtu2go+Fb4Bfhn+Cp2quXkbbdIRPhm+D34T/hGdooV5Z23aHz4IHwO/B
I7VUz6Zta8L7wufDD8Ifw91aqefRNg3gg+BL4cfhr+DxWqsX1rZN4SPhq+Hn
4O/hSduol9Q2beDj4H7wK/Av8NRt1ctp207wqXB/+G34L3imdupVtI0X3Ae+
Bx4Mj9JePbu2qQ3vB18IPwR/Co/ZQT2ftm0IHwJfBj8Jfw1P0FG9iLZpDrfw
tfDz8FB4sk7qpbVtW/gE+Cb4NfhXeNrO6uW1TRf4NPgOeCD8DzxzF/Vq2rYn
fA58L/wBPGpX9Zzatg58AHwR/Aj8GTx2N/X82qYxfCh8BfwUPASesLt6MW3b
Aj4avg5+ER4GT9FD3UPbtIdPhG+BX4d/h6fzUq+obbvCZ8B3wu/C/8Kz9FSv
rm16w+fC98MfwqP3Us+lberBveFL4EfhL+BxeqsX1Lae8OHwlfAz8LfwxH3U
i2ubVvAx8A3wS/BP8JR91cto2w7wyfCt8JvwH/AM/dQraZvu8JnwAHgQPFJ/
9azapia8D3w+/AD8MTzGAPU82rY+fBDcF34c/hIez1u9kLZpCh8BXw0/C38P
TzJQvaS2bQ0fB98IvwL/DE89SL2stukEnwL3h9+C/4JnHKxeRdv2gPvAd8OD
4ZGHqGfXtrXg/eAL4IfgT+Axh6rn1TYN4YPhy+An4K/h8YepF9G2zeAWvgZ+
Hv4Bnmy4eilt0xY+Hr4JfhX+FZ5mhHp5bdsZPg2+HR4I/w3PPFK9qrbpCZ8N
3wu/D49q1XNomzrw/vBF8MPwZ/BYo9Tza9tG8KHw5fBT8DfwhKPVi2qbFvBR
8HXwC/AwePIx6h7ath18Inwz/Dr8GzzdWPUK2qYrfDp8J/wO/C/cfZx6dW3b
Cz4Xvg/+EB5tvHoubVsX7g1fDD8Kfw6PM0G9gLbxhA+Dr4Sfhr+FJ5qoXlzb
toSPga+HX4J/hKecpP6ftukAnwTfCr8B/wFPP1m9krbtBp8J3wUPgpsp6lm1
bQ14H/g8+AH4I3iMqeq5tU19+EC4L/wY/CU87jT1Qtq2CXwEfBX8LPwdPMl0
9RLapjV8LHwj/DL8MzzVDPWy2rYjfAp8G/wW/Cc840z1ytqmB3wWfDf8Hjzy
LPVs2qYWvC98Afwg/AnczUc9r7ZtAB8MXwo/AX8Fjz9bvbC2aQYfCV8DPwf/
AE86R72Utm0DHw/3g1+Ff4GnmateTtt0hk+Fb4ffhv+GZ5qnXlXbesFnw/fA
78OjzFfPoW1rw/vDF8IPw5/CYy1Qz6dtGsGHwJfDT8LfwBMsVC+qbZvDR8HX
wi/AQ+HJF6mX1jbt4BPgm+HX4N/gaRerV9C2XeDT4Tvgd+B/4O5L1Ktpm17w
OfB98AfwaL7qObVNXfgA+GL4EfhzeOyl6gW0bWP4MPgK+Gl4CDzRMvVi2qYl
fDR8Pfwi/CM8xXL1/7Rte/gk+Bb4Dfh3ePoV6hW1TTf4DPgu+F24WameRdvU
gPeGz4Pvhz+CR1+lnlvb1oMPhC+BH4O/gMddrV5Q2zSBD4evgp+Bv4MnXqNe
Qtu2go+Fb4Bfhn+Cp1qrXkbbdIRPhm+D34T/hGdYp15Z23aHz4IHwO/BI61X
z6Zta8L7wufDD8Ifw902qOfRNg3gg+BL4cfhr+DxNqoX1rZN4SPhq+Hn4O/h
Sf3US2qbNvBxcD/4FfgXeOpN6uW0bSf4VLg//Db8FzzTZvUq2sYL7gPfAw+G
R9minl3b1Ib3gy+EH4I/hcfcqp5P2zaED4Evg5+Ev4Yn2KZeRNs0h1v4Wvh5
eCg8mb96aW3bFj4Bvgl+Df4Vnna7enlt0wU+Db4DHgj/A8+8Q72atu0JnwPf
C38Aj7pTPae2rQMfAF8EPwJ/Bo+9Sz2/tmkMHwpfAT8FD4EnDFAvpm1bwEfD
18EvwsPgKXare2ib9vCJ8C3w6/Dv8HR71Ctq267wGfCd8Lvwv/Ase9Wra5ve
8Lnw/fCH8Oj71HNpm3pwb/gS+FH4C3ic/eoFta0nfDh8JfwM/C088QH14tqm
FXwMfAP8EvwTPOVB9TLatgN8Mnwr/Cb8BzzDIfVK2qY7fCY8AB4Ej3RYPau2
qQnvA58PPwB/DI9xRD2Ptq0PHwT3hR+Hv4THO6peSNs0hY+Ar4afhb+HJzmm
XlLbtoaPg2+EX4F/hqc+rl5W23SCT4H7w2/Bf8EznlCvom17wH3gu+HB8Mgn
1bNr21rwfvAF8EPwJ/CYp9TzapuG8MHwZfAT8Nfw+KfVi2jbZnALXwM/D/8A
T3ZGvZS2aQsfD98Evwr/Ck9zVr28tu0MnwbfDg+E/4ZnPqdeVdv0hM+G74Xf
h0c9r55D29SB94cvgh+GP4PHuqCeX9s2gg+FL4efgr+BJ7yoXlTbtICPgq+D
X4CHwZNfUvfQtu3gE+Gb4dfh3+DpLqtX0DZd4dPhO+F34H/h7lfUq2vbXvC5
8H3wh/BoV9Vzadu6cG/4YvhR+HN4nGvqBbSNJ3wYfCX8NPwtPNF19eLatiV8
DHw9/BL8IzzlDfX/tE0H+CT4VvgN+A94+pvqlbRtN/hM+C54ENzcUs+qbWvA
+8DnwQ/AH8Fj3FbPrW3qwwfCfeHH4C/hcQPVC2nbJvAR8FXws/B38CR31Eto
m9bwsfCN8Mvwz/BUd9XLatuO8CnwbfBb8J/wjEHqlbVND/gs+G74PXjke+rZ
tE0teF/4AvhB+BO4W7B6Xm3bAD4YvhR+Av4KHv++emFt0ww+Er4Gfg7+AZ70
gXopbdsGPh7uB78K/wJP81C9nLbpDJ8K3w6/Df8Nz/RIvaq29YLPhu+B34dH
eayeQ9vWhveHL4Qfhj+Fx3qink/bNIIPgS+Hn4S/gSd4ql5U2zaHj4KvhV+A
h8KTP1MvrW3awSfAN8Ovwb/B0z5Xr6Btu8Cnw3fA78D/wN1fqFfTNr3gc+D7
4A/g0V6q59Q2deED4IvhR+DP4bFfqRfQto3hw+Ar4KfhIfBEr9WLaZuW8NHw
9fCL8I/wFG/U/9O27eGT4FvgN+Df4elD1Ctqm27wGfBd8Ltw81Y9i7apAe8N
nwffD38Ej/5OPbe2rQcfCF8CPwZ/AY/7Xr2gtmkCHw5fBT8DfwdP/EG9hLZt
BR8L3wC/DP8ETxWqXkbbdIRPhm+D34T/hGcIU6+sbbvDZ8ED4PfgkT6qZ9O2
NeF94fPhB+GP4W6f1PNomwbwQfCl8OPwV/B4n9ULa9um8JHw1fBz8PfwpF/U
S2qbNvBxcD/4FfgXeOqv6uW0bSf4VLg//Db8FzzTN/Uq2sYL7gPfAw+GR/mu
nl3b1Ib3gy+EH4I/hcf8oZ5P2zaED4Evg5+Ev4Yn+KleRNs0h1v4Wvh5eCg8
2S/10tq2LXwCfBP8GvwrPO1v9fLapgt8GnwHPBD+B575j3o1bdsTPge+F/4A
HvWvek5tWwc+AL4IfgT+DB7bFBTPr20aw4fCV8BPwUPgCSOpF9O2LeCj4evg
F+Fh8BSR1T20TXv4RPgW+HX4d3i6KOoVtW1X+Az4Tvhd+F94lqjq1bVNb/hc
+H74Q3j0aOq5tE09uDd8Cfwo/AU8TnT1gtrWEz4cvhJ+Bv4WnjiGenFt0wo+
Br4Bfgn+CZ7STb2Mtu0AnwzfCr8J/wHPEFO9krbpDp8JD4AHwSPFUs+qbWrC
+8Dnww/AH8NjxFbPo23rwwfBfeHH4S/h8eKoF9I2TeEj4KvhZ+Hv4UniqpfU
tq3h4+Ab4Vfgn+Gp46mX1Tad4FPg/vBb8F/wjPHVq2jbHnAf+G54MDxyAvXs
2rYWvB98AfwQ/Ak8ZkL1vNqmIXwwfBn8BPw1PH4i9SLathncwtfAz8M/wJMl
Vi+lbdrCx8M3wa/Cv8LTJFEvr207w6fBt8MD4b/hmZOqV9U2PeGz4Xvh9+FR
k6nn0DZ14P3hi+CH4c/gsZKr59e2jeBD4cvhp+Bv4AlTqBfVNi3go+Dr4Bfg
YfDkKdU9tG07+ET4Zvh1+Dd4ulTqFbRNV/h0+E74HfhfuHtq9erathd8Lnwf
/CE8Whr1XNq2Ltwbvhh+FP4cHietegFt4wkfBl8JPw1/C0+UTr24tm0JHwNf
D78E/whPmV79P23TAT4JvhV+A/4Dnj6DeiVt2w0+E74LHgQ3GdWzatsa8D7w
efAD8EfwGJnUc2ub+vCBcF/4MfhLeNzM6oW0bRP4CPgq+Fn4O3gSd/US2qY1
fCx8I/wy/DM8VRb1stq2I3wKfBv8FvwnPGNW9crapgd8Fnw3/B48cjb1bNqm
FrwvfAH8IPwJ3C27el5t2wA+GL4UfgL+Ch4/h3phbdMMPhK+Bn4O/gGeNKd6
KW3bBj4e7ge/Cv8CT5NLvZy26QyfCt8Ovw3/Dc+UW72qtvWCz4bvgd+HR8mj
nkPb1ob3hy+EH4Y/hcfKq55P2zSCD4Evh5+Ev4EnyKdeVNs2h4+Cr4VfgIfC
k+dXL61t2sEnwDfDr8G/wdMWUK+gbbvAp8N3wO/A/8DdC6pX0za94HPg++AP
4NEKqefUNnXhA+CL4Ufgz+GxC6sX0LaN4cPgK+Cn4SHwREXUi2mblvDR8PXw
i/CP8BRF1f/Ttu3hk+Bb4Dfg3+Hpi6lX1Dbd4DPgu+B34aa4ehZtUwPeGz4P
vh/+CB69hHpubVsPPhC+BH4M/gIet6R6QW3TBD4cvgp+Bv4OnriUeglt2wo+
Fr4Bfhn+CZ6qtHoZbdMRPhm+DX4T/hOewUO9srbtDp8FD4Dfg0f6Tz2btq0J
7wufDz8Ifwx3K6OeR9s0gA+CL4Ufh7+CxyurXljbNoWPhK+Gn4O/hyctp15S
27SBj4P7wa/Av8BTl1cvp207wafC/eG34b/gmSqoV9E2XnAf+B54MDxKRfXs
2qY2vB98IfwQ/Ck8ZiX1fNq2IXwIfBn8JPw1PEFl9SLapjncwtfCz8ND4cmq
qJfWtm3hE+Cb4NfgX+Fpq6qX1zZd4NPgO+CB8D/wzNXUq2nbnvA58L3wB/Co
1dVzats68AHwRfAj8Gfw2DXU82ubxvCh8BXwU/AQeMKa6sW0bQv4aPg6+EV4
GDxFLXUPbdMePhG+BX4d/h2errZ6RW3bFT4DvhN+F/4XnqWOenVt0xs+F74f
/hAeva56Lm1TD+4NXwI/Cn8Bj1NPvaC29YQPh6+En4G/hSeur15c27SCj4Fv
gF+Cf4KnbKBeRtt2gE+Gb4XfhP+AZ2ioXknbdIfPhAfAg+CRGqln1TY14X3g
8+EH4I/hMRqr59G29eGD4L7w4/CX8Hie6oW0TVP4CPhq+Fn4e3iSJuoltW1r
+Dj4RvgV+Gd46qbqZbVNJ/gUuD/8FvwXPGMz9SratgfcB74bHgyP3Fw9u7at
Be8HXwA/BH8Cj9lCPa+2aQgfDF8GPwF/DY/fUr2Itm0Gt/A18PPwD/BkrdRL
aZu28PHwTfCr8K/wNK3Vy2vbzvBp8O3wQPhveOY26lW1TU/4bPhe+H141Lbq
ObRNHXh/+CL4YfgzeKx26vm1bSP4UPhy+Cn4G3jC9upFtU0L+Cj4OvgFeBg8
eQd1D23bDj4Rvhl+Hf4Nnq6jegVt0xU+Hb4Tfgf+F+7eSb26tu0FnwvfB38I
j9ZZPZe2rQv3hi+GH4U/h8fpol5A23jCh8FXwk/D38ITdVUvrm1bwsfA18Mv
wT/CU3ZT/0/bdIBPgm+F34D/gKfvrl5J23aDz4TvggfBTQ/1rNq2BrwPfB78
APwRPIaXem5tUx8+EO4LPwZ/CY/bU72Qtm0CHwFfBT8LfwdP0ku9hLZpDR8L
3wi/DP8MT9Vbvay27QifAt8GvwX/Cc/YR72ytukBnwXfDb8Hj9xXPZu2qQXv
C18APwh/Anfrp55X2zaAD4YvhZ+Av4LH769eWNs0g4+Er4Gfg3+AJx2gXkrb
toGPh/vBr8K/wNN4q5fTNp3hU+Hb4bfhv+GZBqpX1bZe8NnwPfD78CiD1HNo
29rw/vCF8MPwp/BYg9XzaZtG8CHw5fCT8DfwBEPUi2rb5vBR8LXwC/BQePKh
6qW1TTv4BPhm+DX4N3jaYeoVtG0X+HT4Dvgd+B+4+3D1atqmF3wOfB/8ATza
CPWc2qYufAB8MfwI/Dk89kj1Atq2MXwYfAX8NDwEnsiqF9M2LeGj4evhF+Ef
4SlGqf+nbdvDJ8G3wG/Av8PTj1avqG26wWfAd8Hvws0Y9Szapga8N3wefD/8
ETz6WPXc2rYefCB8CfwY/AU87jj1gtqmCXw4fBX8DPwdPPF49RLathV8LHwD
/DL8EzzVBPUy2qYjfDJ8G/wm/Cc8w0T1ytq2O3wWPAB+Dx5pkno2bVsT3hc+
H34Q/hjuNlk9j7ZpAB8EXwo/Dn8FjzdFvbC2bQofCV8NPwd/D086Vb2ktmkD
Hwf3g1+Bf4GnnqZeTtt2gk+F+8Nvw3/BM01Xr6JtvOA+8D3wYHiUGerZtU1t
eD/4Qvgh+FN4zJnq+bRtQ/gQ+DL4SfhreIJZ6kW0TXO4ha+Fn4eHwpP5qJfW
tm3hE+Cb4NfgX+FpZ6uX1zZd4NPgO+CB8D/wzHPUq2nbnvA58L3wB/Coc9Vz
ats68AHwRfAj8Gfw2PPU82ubxvCh8BXwU/AQeML56sW0bQv4aPg6+EV4GDzF
AnUPbdMePhG+BX4d/h2ebqF6RW3bFT4DvhN+F/4XnmWRenVt0xs+F74f/hAe
fbF6Lm1TD+4NXwI/Cn8Bj7NEvaC29YQPh6+En4G/hSf2VS+ubVrBx8A3wC/B
P8FTLlUvo207wCfDt8Jvwn/AMyxTr6RtusNnwgPgQfBIy9Wzapua8D7w+fAD
8MfwGCvU82jb+vBBcF/4cfhLeLyV6oW0TVP4CPhq+Fn4e3iSVeoltW1r+Dj4
RvgV+Gd46tXqZbVNJ/gUuD/8FvwXPOMa9SratgfcB74bHgyPvFY9u7atBe8H
XwA/BH8Cj7lOPa+2aQgfDF8GPwF/DY+/Xr2Itm0Gt/A18PPwD/BkG9RLaZu2
8PHwTfCr8K/wNBvVy2vbzvBp8O3wQPhveGY/9arapid8Nnwv/D486ib1HNqm
Drw/fBH8MPwZPNZm9fzathF8KHw5/BT8DTzhFvWi2qYFfBR8HfwCPAyefKu6
h7ZtB58I3wy/Dv8GT7dNvYK26QqfDt8JvwP/C3f3V6+ubXvB58L3wR/Co21X
z6Vt68K94YvhR+HP4XF2qBfQNp7wYfCV8NPwt/BEO9WLa9uW8DHw9fBL8I/w
lLvU/9M2HeCT4FvhN+A/4OkD1Ctp227wmfBd8CC42a2eVdvWgPeBz4MfgD+C
x9ijnlvb1IcPhPvCj8FfwuPuVS+kbZvAR8BXwc/C38GT7FMvoW1aw8fCN8Iv
wz/DU+1XL6ttO8KnwLfBb8F/wjMeUK+sbXrAZ8F3w+/BIx9Uz6ZtasH7whfA
D8KfwN0OqefVtg3gg+FL4Sfgr+DxD6sX1jbN4CPha+Dn4B/gSY+ol9K2beDj
4X7wq/Av8DRH1ctpm87wqfDt8Nvw3/BMx9Sralsv+Gz4Hvh9eJTj6jm0bW14
f/hC+GH4U3isE+r5tE0j+BD4cvhJ+Bt4gpPqRbVtc/go+Fr4BXgoPPkp9dLa
ph18Anwz/Br8GzztafUK2rYLfDp8B/wO/A/c/Yx6NW3TCz4Hvg/+AB7trHpO
bVMXPgC+GH4E/hwe+5x6AW3bGD4MvgJ+Gh4CT3RevZi2aQkfDV8Pvwj/CE9x
Qf0/bdsePgm+BX4D/h2e/qJ6RW3TDT4Dvgt+F24uqWfRNjXgveHz4Pvhj+DR
L6vn1rb14APhS+DH4C/gca+oF9Q2TeDD4avgZ+Dv4ImvqpfQtq3gY+Eb4Jfh
n+CprqmX0TYd4ZPh2+A34T/hGa6rV9a23eGz4AHwe/BIN9Szadua8L7w+fCD
8Mdwt5vqebRNA/gg+FL4cfgreLxb6oW1bVP4SPhq+Dn4e3jS2+oltU0b+Di4
H/wK/As8daB6OW3bCT4V7g+/Df8Fz3RHvYq28YL7wPfAg+FR7qpn1za14f3g
C+GH4E/hMYPU82nbhvAh8GXwk/DX8AT31Itom+ZwC18LPw8PhScLVi+tbdvC
J8A3wa/Bv8LT3lcvr226wKfBd8AD4X/gmR+oV9O2PeFz4HvhD+BRH6rn1LZ1
4APgi+BH4M/gsR+p59c2jeFD4Svgp+Ah8ISP1Ytp2xbw0fB18IvwMHiKJ+oe
2qY9fCJ8C/w6/Ds83VP1itq2K3wGfCf8LvwvPMsz9erapjd8Lnw//CE8+nP1
XNqmHtwbvgR+FP4CHueFekFt6wkfDl8JPwN/C0/8Ur24tmkFHwPfAL8E/wRP
+Uq9jLbtAJ8M3wq/Cf8Bz/BavZK26Q6fCQ+AB8EjvVHPqm1qwvvA58MPwB/D
Y4So59G29eGD4L7w4/CX8Hhv1Qtpm6bwEfDV8LPw9/Ak79RLatvW8HHwjfAr
8M/w1O/Vy2qbTvApcH/4LfgveMYP6lW0bQ+4D3w3PBgeOVQ9u7atBe8HXwA/
BH8CjxmmnlfbNIQPhi+Dn4C/hsf/qF5E2zaDW/ga+Hn4B3iyT+qltE1b+Hj4
JvhV+Fd4ms/q5bVtZ/g0+HZ4IPw3PPMX9arapid8Nnwv/D486lf1HNqmDrw/
fBH8MPwZPNY39fzathF8KHw5/BT8DTzhd/Wi2qYFfBR8HfwCPAye/Ie6h7Zt
B58I3wy/Dv8GT/dTvYK26QqfDt8JvwP/C3f/pV5d2/aCz4Xvgz+ER/utnkvb
1oV7wxfDj8Kfw+P8US+gbTzhw+Ar4afhb+GJ/qoX17Yt4WPg6+GX4B/hKU0h
8f+0TQf4JPhW+A34D3j6SOqVtG03+Ez4LngQ3ERWz6pta8D7wOfBD8AfwWNE
Uc+tberDB8J94cfgL+Fxo6oX0rZN4CPgq+Bn4e/gSaKpl9A2reFj4Rvhl+Gf
4amiq5fVth3hU+Db4LfgP+EZY6hX1jY94LPgu+H34JHd1LNpm1rwvvAF8IPw
J3C3mOp5tW0D+GD4UvgJ+Ct4/FjqhbVNM/hI+Br4OfgHeNLY6qW0bRv4eLgf
/Cr8CzxNHPVy2qYzfCp8O/w2/Dc8U1z1qtrWCz4bvgd+Hx4lnnoObVsb3h++
EH4Y/hQeK756Pm3TCD4Evhx+Ev4GniCBelFt2xw+Cr4WfgEeCk+eUL20tmkH
nwDfDL8G/wZPm0i9grbtAp8O3wG/A/8Dd0+sXk3b9ILPge+DP4BHS6KeU9vU
hQ+AL4YfgT+Hx06qXkDbNoYPg6+An4aHwBMlUy+mbVrCR8PXwy/CP8JTJFf/
T9u2h0+Cb4HfgH+Hp0+hXlHbdIPPgO+C34WblOGdYLjLs2ibGvDe8Hnw/fBH
8Oip1HNr23rwgfAl8GPwF/C4qdULapsm8OHwVfAz8HfwxGnUS2jbVvCx8A3w
y/BP8FRp1ctom47wyfBt8Jvwn/AM6dQra9vu8FnwAPg9eKT06tm0bU14X/h8
+EH4Y7hbBvU82qYBfBB8Kfw4/BU8Xkb1wtq2KXwkfDX8HPw9PGkm9ZLapg18
HNwPfgX+BZ46s3o5bdsJPhXuD78N/wXP5K5eRdt4wX3ge+DB8ChZ1LNrm9rw
fvCF8EPwp/CYWdXzaduG8CHwZfCT8NfwBNnUi2ib5nALXws/Dw+FJ8uuXlrb
toVPgG+CX4N/hafNoV5e23SBT4PvgAfC/8Az51Svpm17wufA98IfwKPmUs+p
bevAB8AXwY/An8Fj51bPr20aw4fCV8BPwUPgCfOoF9O2LeCj4evgF+Fh8BR5
1T20TXv4RPgW+HX4d3i6fOoVtW1X+Az4Tvhd+F94lvzq1bVNb/hc+H74Q3j0
Auq5tE09uDd8Cfwo/AU8TkH1gtrWEz4cvhJ+Bv4WnriQenFt0wo+Br4Bfgn+
CZ6ysHoZbdsBPhm+FX4T/gOeoYh6JW3THT4THgAPgkcqqp5V29SE94HPhx+A
P4bHKKaeR9vWhw+C+8KPw1/C4xVXL6RtmsJHwFfDz7p624c4PQand/y9qwcs
d6u6Np/jSUr861J1o7pfL+N4yRLhv6/reOuI9nR8XES3cnxjRHd0/EpE93D8
c0T3czx1yfAe4njZiB7leKeInuj4lIie4bh/RM9z/FZE+zr+K6JXO56xVHj7
OV4lorc73iOi9zruE9FHHN8d0WccD47oK45HLh3egY5nj+iHjteK6JeO94vo
D44vcLV7NR/3amGOH3J19X/p88nxJ67uGRTgFfTF8Zge/9rF7t8dz+vqfxrg
9dPxhq6+5/rit+ODPcLnmREuX+YRPi+yq+0Jj/B5UR1/7RE+L7rj8f/v6i6j
svjaPgxvu1uxuxsVWykLu7sVFbAVuzYmGNiF3d3d3d3dit3d7995Fqz3d863
cx1zX9da98x83u4R++I4XtQ9Yl88x5u4R+xL4Lh1j3z/HF/yr8Nm/nelcPzU
v3Yr8t+V1vF3//r0vyuT4y4e/3X7f1cOx0t7RMzL53hrj4h5hRwf6RExr7jj
qz0i5pVx/ELkPG/Hv0bO83E8nWfEvOqOe3tGzKvreAfPiHmNHB/nGTGvheMb
PSPm+Tp+PXKev+O/I+d1dTyrV8S8QMd9vCLm9Xe8i1fEPOv45Mj7hzu+wyti
fojjdyN/H+p4dO+IfZMdz+0dMW+G4zW9I+bNdjzQO2LeAsfDvCPmLXV8X+S8
VY4/iZy33vG45aSNq7atDx8Anw8/Cn8JT1JevZi2aQYPgi+Dn4Z/gKesoF5W
27aBB8PXwC/Bv8EzVFQvp2384aHwzfAb8L/wbJXUq2jbrvCp8J3w+/AYPup5
tW0teG/4LPgBeDg8fmX1QtqmIXwgfCH8GPw1PGkV9RLatjl8GHw5/Cz8Izx1
VXV3beMLD4Gvg1+G/4BnrKZeQdsGwCfAt8BvwU119Rzatiq8O3wafDf8ATxW
DfV82qYOvA98Dvwg/Bk8QU31Itq2EXwwfBH8BPwNPHkt9ZLapiV8OHwl/Bz8
MzxNbXVPbdsOPga+Hn4V/hOeuY56RW3TCT4Rvg1+Gx61rnpObVMd3gM+A74H
/ggeu556AW1bF94PPhd+GP4cnqi+upu2aQIfAl8CPwl/B0/RQL20tm0FHwlf
Bb8A/wJP11DdS9t0gI+Fb4Rfg/+GZ2mk7qNtO8Mnw7fD78KjNVbPrW1rwAPh
M+H74I/hcZuoF9Q29eH94fPhR+Av4YmbqhfTtk3hQfCl8NPw9/CUzdTLaJs2
8FHwNfCL8G/w9M3Vy2lbP3gofBP8BvwPPFsL9crapit8Cnwn/B48Rkv1PNqm
FrwXfBZ8PzwcHq+VeiFt2wA+EL4Afgz+Cp60tXpxbdMcPhS+HH4G/hGeqo26
u7ZtCw+Br4Vfhn+HZ2yrXl7bBMDHw7fAb8KNr3p2bVMV3g0+Db4L/gAes516
Pm1bG94HPht+EP4UnqC9emFt0wg+CL4Ifhz+Bp6sg3pJbdsCPhy+An4O/gme
xk/dQ9u0g4+Gr4dfgf+EZ/JXr6htO8InwrfCb8OjBKjn1LbV4D3g0+F74A/h
sTuq59c2deF94XPhh+DP4Qk7qbtp28bwIfDF8JPwt/AUndVLaZtW8BHwVfDz
8C/wtF3UvbRte/hY+Ab4NfgveJau6pW0TWf4JPh2+B14tG7qubRNDXhP+Ez4
XvhjeJzu6gW1bT14f/g8+BH4C3jiHupFtU1TuIUvhZ+Cv4e79FQvo21bw0fB
V8Mvwr/C0weqe2sbP/g4+Cb4dfgfeNZe6pW1bRf4FPgO+D149N7qebRtTXgv
eBh8P/wJPF4fdVdt0wA+AL4AfhT+Cp6kr3pxbdsMPhS+DH4G/gGeqp96WW3T
Fh4MXwu/BP8Oz9Bfvby29YePh2+G34T/hWcfoF5F23SDT4Xvgt+Hxxyonlfb
1Ib3hs+GH4A/hccfpF5Y2zaED4IvhB+Hv4YnG6xeQtu0gA+Dr4CfhX+Cpx6i
7qFtfeGj4evgV+A/4JmsegVt0xE+Ab4VfgseJUg9h7apBu8Onw7fDX8IjzVU
Pb+2rQPvC58DPwR/Bk84TL2ItmkMHwxfDD8BfwtPPly9lLZtCR8BXwk/D/8M
TztC3VPbtIePgW+AX4X/gmceqV5J23aCT4Jvg9+BRx2lnkvbVof3hM+A74U/
gscJVi+gberB+8HnwQ/DX8AThagX1bZN4Ba+BH4K/g7uMlq9tLZpDR8JXw2/
AP8KTzdG3VvbdoCPg2+EX4f/hmcdq+6jbbrAJ8N3wO/Co49Tz61tasID4WHw
ffAn8Lih6q7atj58AHw+/Cj8JTzJePVi2qYZPAi+DH4a/gGecoJ6WW3bBh4M
XwO/BP8GzzBRvZy28YeHwjfDb8D/wrNNUq+ibbvCp8J3wu/DY0xWz6tta8F7
w2fBD8DD4fGnqBfSNg3hA+EL4cfgr+FJp6qX0LbN4cPgy+Fn4R/hqaepu2sb
X3gIfB38MvwHPON09QraNgA+Ab4FfgtuZqjn0LZV4d3h0+C74Q/gsWaq59M2
deB94HPgB+HP4AnC1Ito20bwwfBF8BPwN/Dks9RLapuW8OHwlfBz8M/wNLPV
PbVtO/gY+Hr4VfhPeOY56hW1TSf4RPg2+G141LnqObVNdXgP+Az4HvgjeOx5
6gW0bV14P/hc+GH4c3ii+epu2qYJfAh8Cfwk/B08xQL10tq2FXwkfBX8AvwL
PN1CdS9t0wE+Fr4Rfg3+G55lkbqPtu0MnwzfDr8Lj7ZYPbe2rQEPhM+E74M/
hsddol5Q29SH94fPhx+Bv4QnXqpeTNs2hQfBl8JPw9/DUy5TL6Nt2sBHwdfA
L8K/wdMvVy+nbf3gofBN8BvwP/BsK9Qra5uu8CnwnfB78Bgr1fNom1rwXvBZ
8P3wcHi8VeqFtG0D+ED4Avgx+Ct40tXqxbVNc/hQ+HL4GfhHeKo16u7ati08
BL4Wfhn+HZ5xrXp5bRMAHw/fAr8JN+vUs2ubqvBu8GnwXfAH8Jjr1fNp29rw
PvDZ8IPwp/AEG9QLa5tG8EHwRfDj8DfwZBvVS2rbFvDh8BXwc/BP8DSb1D20
TTv4aPh6+BX4T3imzeoVtW1H+ET4VvhteJQt6jm1bTV4D/h0+B74Q3jsrer5
tU1deF/4XPgh+HN4wm3qbtq2MXwIfDH8JPwtPMV29VLaphV8BHwV/Dz8Czzt
DnUvbdsePha+AX4N/gueZad6JW3TGT4Jvh1+Bx5tl3oubVMD3hM+E74X/hge
Z7d6QW1bD94fPg9+BP4CnniPelFt0xRu4Uvhp+Dv4S571cto29bwUfDV8Ivw
r/D0+9S9tY0ffBx8E/w6/A886371ytq2C3wKfAf8Hjz6AfU82rYmvBc8DL4f
/gQe76C6q7ZpAB8AXwA/Cn8FT3JIvbi2bQYfCl8GPwP/AE91WL2stmkLD4av
hV+Cf4dnOKJeXtv6w8fDN8Nvwv/Csx9Vr6JtusGnwnfB78NjHlPPq21qw3vD
Z8MPwJ/C4x9XL6xtG8IHwRfCj8Nfw5OdUC+hbVrAh8FXwM/CP8FTn1T30La+
8NHwdfAr8B/wTKfUK2ibjvAJ8K3wW/Aop9VzaJtq8O7w6fDd8IfwWGfU82vb
OvC+8DnwQ/Bn8IRn1Ytom8bwwfDF8BPwt/Dk59RLaduW8BHwlfDz8M/wtOfV
PbVNe/gY+Ab4VfgveOYL6pW0bSf4JPg2+B141IvqubRtdXhP+Az4XvgjeJxL
6gW0TT14P/g8+GH4C3iiy+pFtW0TuIUvgZ+Cv4O7XFEvrW1aw0fCV8MvwL/C
011V99a2HeDj4Bvh1+G/4Vmvqftomy7wyfAd8Lvw6NfVc2ubmvBAeBh8H/wJ
PO4NdVdtWx8+AD4ffhT+Ep7kpnoxbdMMHgRfBj8N/wBPeUu9rLZtAw+Gr4Ff
gn+DZ7itXk7b+MND4ZvhN+B/4dnuqFfRtl3hU+E74ffhMe6q59W2teC94bPg
B+Dh8Pj31Atpm4bwgfCF8GPw1/Ck99VLaNvm8GHw5fCz8I/w1A/U3bWNLzwE
vg5+Gf4DnvGhegVtGwCfAN8CvwU3j9RzaNuq8O7wafDd8AfwWI/V82mbOvA+
8Dnwg/Bn8ARP1Ito20bwwfBF8BPwN/Dk4eoltU1L+HD4Svg5+Gd4mqfqntq2
HXwMfD38KvwnPPMz9YraphN8Inwb/DY86nP1nNqmOrwHfAZ8D/wRPPYL9QLa
ti68H3wu/DD8OTzRS3U3bdMEPgS+BH4S/g6e4pV6aW3bCj4Svgp+Af4Fnu61
upe26QAfC98Ivwb/Dc/yRt1H23aGT4Zvh9+FR3urnlvb1oAHwmfC98Efw+O+
Uy+oberD+8Pnw4/AX8ITv1cvpm2bwoPgS+Gn4e/hKT+ol9E2beCj4GvgF+Hf
4Ok/qpfTtn7wUPgm+A34H3i2T+qVtU1X+BT4Tvg9eIzP6nm0TS14L/gs+H54
ODzeF/VC2rYBfCB8AfwY/BU86Vf14tqmOXwofDn8DPwjPNU3dXdt2xYeAl8L
vwz/Ds/4Xb28tgmAj4dvgd+Emx/q2bVNVXg3+DT4LvgDeMyf6vm0bW14H/hs
+EH4U3iCX+qFtU0j+CD4Ivhx+Bt4st/qJbVtC/hw+Ar4OfgneJo/6h7aph18
NHw9/Ar8JzzTX/WK2rYjfCJ8K/w2PIpxE8+pbavBe8Cnw/fAH8JjR1HPr23q
wvvC58IPwZ/DE0ZVd9O2jeFD4IvhJ+Fv4SmiqZfSNq3gI+Cr4OfhX+Bpo6t7
adv28LHwDfBr8F/wLDHUK2mbzvBJ8O3wO/BoMdVzaZsa8J7wmfC98MfwOLHU
C2rbevD+8HnwI/AX8MSx1Ytqm6ZwC18KPwV/D3eJo15G27aGj4Kvhl+Ef4Wn
j6vurW384OPgm+DX4X/gWeOpV9a2XeBT4Dvg9+DR46vn0bY14b3gYfD98Cfw
eAnUXbVNA/gA+AL4UfgreJKE6sW1bTP4UPgy+Bn4B3iqROpltU1beDB8LfwS
/Ds8Q2L18trWHz4evhl+E/4Xnj2JehVt0w0+Fb4Lfh8eM6l6Xm1TG94bPht+
AP4UHj+ZemFt2xA+CL4Qfhz+Gp4suXoJbdMCPgy+An4W/gmeOoW6h7b1hY+G
r4Nfgf+AZ3JRr6BtOsInwLfCb8GjpFTPoW2qwbvDp8N3wx/CY6VSz69t68D7
wufAD8GfwROmVi+ibRrDB8MXw0/A38KTp1EvpW1bwkfAV8LPwz/D06ZV99Q2
7eFj4BvgV+G/4JnTqVfStp3gk+Db4HfgUdOr59K21eE94TPge+GP4HEyqBfQ
NvXg/eDz4IfhL+CJMqoX1bZN4Ba+BH4K/g7ukkm9tLZpDR8JXw2/AP8KT5dZ
3VvbdoCPg2+EX4f/hmfNou6jbbrAJ8N3wO/Co2dVz61tasID4WHwffAn8LjZ
1F21bX34APh8+FH4S3iS7OrFtE0zeBB8Gfw0/AM8ZQ71stq2DTwYvgZ+Cf4N
niGnejlt4w8PhW+G34D/hWfLpV5F23aFT4XvhN+Hx8itnlfb1oL3hs+CH4CH
w+PnUS+kbRrCB8IXwo/BX8OT5lUvoW2bw4fBl8PPwj/CU+dTd9c2vvAQ+Dr4
ZfgPeMb86hW0bQB8AnwL/BbcFFDPoW2rwrvDp8F3wx/AYxVUz6dt6sD7wOfA
D8KfwRO4qhfRto3gg+GL4Cfgb+DJC6mX1DYt4cPhK+Hn4J/haQqre2rbdvAx
8PXwq/Cf8MxF1Ctqm07wifBt8NvwqG7qObVNdXgP+Az4HvgjeOyi6gW0bV14
P/hc+GH4c3iiYupu2qYJfAh8Cfwk/B08RXH10tq2FXwkfBX8AvwLPF0JdS9t
0wE+Fr4Rfg3+G56lpLqPtu0MnwzfDr8Lj1ZKPbe2rQEPhM+E74M/hsctrV5Q
29SH94fPhx+Bv4QnLqNeTNs2hQfBl8JPw9/DU5ZVL6Nt2sBHwdfAL8K/wdO7
q5fTtn7wUPgm+A34H3g2D/XK2qYrfAp8J/wePIaneh5tUyuyXYf8817aZhZ8
PzwcHs9LvZC2bQAfCF8APwZ/BU/qrV5c2zSHD4Uvh5+Bf4SnKqfurm3bwkPg
a+GX4d/hGcurl9c2AfDx8C3wm3BTQT27tqkK7wafBt8FfwCPWVE9n7atDe8D
nw0/CH8KT1BJvbC2aQQfBF8EPw5/A0/mo15S27aAD4evgJ+Df4KnqazuoW3a
wUfD18OvwH/CM1VRr6htO8InwrfCb8OjVFXPqW2rwXvAp8P3wB/CY1dTz69t
6sL7wufCD8GfwxNWV3fTto3hQ+CL4Sfhb+EpaqiX0jat4CPgq+Dn4V/gaWuq
e2nb9vCx8A3wa/Bf8Cy11Ctpm87wSfDt8DvwaLXVc2mbGvCe8JnwvfDH8Dh1
1Atq23rw/vB58CPwF/DEddWLapumcAtfCj8Ffw93qadeRtu2ho+Cr4ZfhH+F
p6+v7q1t/ODj4Jvg1+F/4FkbqFfWtl3gU+A74Pfg0Ruq59G2NeG94GHw/fAn
8HiN1F21TQP4APgC+FH4K3iSxurFtW0z+FD4MvgZ+Ad4qibqZbVNW3gwfC38
Evw7PENT9fLa1h8+Hr4ZfhP+F569mXoVbdMNPhW+C34fHrO5el5tUxveGz4b
fgD+FB6/hXphbdsQPgi+EH4c/hqerKV6CW3TAj4MvgJ+Fv4JnrrVf13+g0f4
Ng/HPf51gWpX3pyr6bjvv3ZZGvD1aUvHR7eK+H03x9dFdm/Hr0T2QMd/RPZQ
xzO1juhgxytEdqjjHSN7iuMTIjvM8a2RPd/xW5G90vEobSJ6s+M5Inuv49Ui
+7jj3SP7ouPTI/u247sjO9zxh5H9zvFYbd0izl93PP+//t/56o7X+dfZnfPU
7T/v+6//3b41xr+2c/71/85Pd/zQv/53+6T4jj9rG7EvseMJff/rbf/OV0/m
eBHfiP0ujjf2jdiXxvHBvhH70ju+2DdiX2bHT/hG7Mvm+FvfiH25HE/eLqLz
OV4qsl0dbxnZbo6PiOwSjq+M7DKOn49sT8c/R3Z5x9O2j2gfxz0ju5rj7SO7
luNjIrue4xsiu5HjVyO7meO/IruV45k7RLSv45Ui28/xTpHdyfFJkd3N8W2R
Hej4ncju63hUv8jvwfFckW0dr+4X8f87bXr6RTyfIMdn+EU8P6fNXr+I5zvU
8Ud+Ec/faRPHP+L9GOZ4Af+IfcMdr+cfsc9p288/Yt8Ix+f5R+xz2h72j9g3
0vEX/hH7nLaJAiL2jXK8aEDk9+14E21j4Uvgp+Dv4C4d1Utrm9bwkfDV8Avw
r/B0ndS9tW0H+Dj4Rvh1+G941s7qPtqmC3wyfAf8Ljx6F/Xc2qYmPBAeBt8H
fwKP21XdVdvWhw+Az4cfhb+EJ+mmXkzbNIMHwZfBT8M/wFN2Vy+rbdvAg+Fr
4Jfg3+AZeqiX0zb+8FD4ZvgN+F94tp7qVbRtV/hU+E74fXiMQPW82rYWvDd8
FvwAPBwev5d6IW3TED4QvhB+DP4anrS3eglt2xw+DL4cfhb+EZ66j7q7tvGF
h8DXwS/Df8Az9lWvoG0D4BPgW+C34Kafeg5tWxXeHT4Nvhv+AB6rv3o+bVMH
3gc+B34Q/gyeYIB6EW3bCD4Yvgh+Av4Gnnygeklt0xI+HL4Sfg7+GZ5mkLqn
tm0HHwNfD78K/wnPPFi9orbpBJ8I3wa/DY86RD2ntqkO7wGfAd8DfwSPbdUL
aNu68H7wufDD8OfwREHqbtqmCXwIfAn8JPwdPMVQ9dLathV8JHwV/AL8Czzd
MHUvbdMBPha+EX4N/hueZbi6j7btDJ8M3w6/C482Qj23tq0BD4TPhO+DP4bH
HaleUNvUh/eHz4cfgb+EJx6lXkzbNoUHwZfCT8Pfw1MGq5fRNm3go+Br4Bfh
3+DpQ9TLaVs/eCh8E/wG/A8822j1ytqmK3wKfCf8HjzGGPU82qYWvBd8Fnw/
PBweb6x6IW3bAD4QvgB+DP4KnnScenFt0xw+FL4cfgb+EZ4qVN1d27aFh8DX
wi/Dv8Mzjlcvr20C4OPhW+A34WaCenZtUxXeDT4Nvgv+AB5zono+bVsb3gc+
G34Q/hSeYJJ6YW3TCD4Ivgh+HP4Gnmyyeklt2wI+HL4Cfg7+CZ5mirqHtmkH
Hw1fD78C/wnPNFW9orbtCJ8I3wq/DY8yTT2ntq0G7wGfDt8DfwiPPV09v7ap
C+8Lnws/BH8OTzhD3U3bNoYPgS+Gn4S/haeYqV5K27SCj4Cvgp+Hf4GnDVP3
0rbt4WPhG+DX4L/gWWapV9I2neGT4Nvhd+DRZqvn0jY14D3hM+F74Y/hceao
F9S29eD94fPgR+Av4InnqhfVNk3hFr4Ufgr+Hu4yT72Mtm0NHwVfDb8I/wpP
P1/dW9v4wcfBN8Gvw//Asy5Qr6xtu8CnwHfA78GjL1TPo21rwnvBw+D74U/g
8Rapu2qbBvAB8AXwo/BX8CSL1Ytr22bwofBl8DPwD/BUS9TLapu28GD4Wvgl
+Hd4hqXq5bWtP3w8fDP8JvwvPPsy9Srapht8KnwX/D485nL1vNqmNrw3fDb8
APwpPP4K9cLatiF8EHwh/Dj8NTzZSvUS2qYFfBh8Bfws/BM89Sp1D23rCx8N
Xwe/Av8Bz7RavYK26QifAN8KvwWPskY9h7apBu8Onw7fDX8Ij7VWPb+2rQPv
C58DPwR/Bk+4Tr2ItmkMHwxfDD8BfwtPvl69lLZtCR8BXwk/D/8MT7tB3VPb
tIePgW+AX4X/gmfeqF5J23aCT4Jvg9+BR92knkvbVof3hM+A74U/gsfZrF5A
29SD94PPgx+Gv4An2qJeVNs2gVv4Evgp+Du4y1b10tqmNXwkfDX8AvwrPN02
dW9t2wE+Dr4Rfh3+G551u7qPtukCnwzfAb8Lj75DPbe2qQkPhIfB98GfwOPu
VHfVtvXhA+Dz4UfhL+FJdqkX0zbN4EHwZfDT8A/wlLvVy2rbNvBg+Br4Jfg3
eIY96uW0jT88FL4ZfgP+F55tr3oVbdsVPhW+E34fHmOfel5tWwveGz4LfgAe
Do+/X72QtmkIHwhfCD8Gfw1PekC9hLZtDh8GXw4/C/8IT31Q3V3b+MJD4Ovg
l+E/4BkPqVfQtgHwCfAt8Ftwc1g9h7atCu8OnwbfDX8Aj3VEPZ+2qQPvA58D
Pwh/Bk9wVL2Itm0EHwxfBD8BfwNPfky9pLZpCR8OXwk/B/8MT3Nc3VPbtoOP
ga+HX4X/hGc+oV5R23SCT4Rvg9+GRz2pnlPbVIf3gM+A74E/gsc+pV5A29aF
94PPhR+GP4cnOq3upm2awIfAl8BPwt/BU5xRL61tW8FHwlfBL8C/wNOdVffS
Nh3gY+Eb4dfgv+FZzqn7aNvO8Mnw7fC78Gjn1XNr2xrwQPhM+D74Y3jcC+oF
tU19eH/4fPgR+Et44ovqxbRtU3gQfCn8NPw9POUl9TLapg18FHwN/CL8Gzz9
ZfVy2tYPHgrfBL8B/wPPdkW9srbpCp8C3wm/B49xVT2PtqkF7wWfBd8PD4fH
u6ZeSNs2gA+EL4Afg7+CJ72uXlzbNIcPhS+Hn4F/hKe6oe6ubdvCQ+Br4Zfh
3+EZb6qX1zYB8PHwLfCbcHNLPbu2qQrvBp8G3wV/AI95Wz2ftq0N7wOfDT8I
fwpPcEe9sLZpBB8EXwQ/Dn8DT3ZXvaS2bQEfDl8BPwf/BE9zT91D27SDj4av
h1+B/4Rnuq9eUdt2hE+Eb4Xfhkd5oJ5T21aD94BPh++BP4THfqieX9vUhfeF
z4Ufgj+HJ3yk7qZtG8OHwBfDT8LfwlM8Vi+lbVrBR8BXwc/Dv8DTPlH30rbt
4WPhG+DX4L/gWcLVK2mbzvBJ8O3wO/BoT9VzaZsa8J7wmfC98MfwOM/UC2rb
evD+8HnwI/AX8MTP1Ytqm6ZwC18KPwV/D3d5oV5G27aGj4Kvhl+Ef4Wnf6nu
rW384OPgm+DX4X/gWV+pV9a2XeBT4Dvg9+DRX6vn0bY14b3gYfD98CfweG/U
XbVNA/gA+AL4UfgreJK36sW1bTP4UPgy+Bn4B3iqd+pltU1beDB8LfwS/Ds8
w3v18trWHz4evhl+E/4Xnv2DehVt0w0+Fb4Lfh8e86N6Xm1TG94bPht+AP4U
Hv+TemFt2xA+CL4Qfhz+Gp7ss3oJbdMCPgy+An4W/gme+ou6h7b1hY+Gr4Nf
gf+AZ/qqXkHbdIRPgG+F34JH+aaeQ9tUg3eHT4fvhj+Ex/qunl/b1oH3hc+B
H4I/gyf8oV5E2zSGD4Yvhp+Av4Un/6leStu2hI+Ar4Sfh3+Gp/2l7qlt2sPH
wDfAr8J/wTP/Vq+kbTvBJ8G3we/Ao/5Rz6Vtq8N7wmfA98IfweP8VS+gberB
+8HnwQ/DX8ATmaLiRbVtE7iFL4Gfgr+Du0RRL61tWsNHwlfDL8C/wtNFVffW
th3g4+Ab4dfhv+FZo6n7aJsu8MnwHfC78OjR1XNrm5rwQHgYfB/8CTxuDHVX
bVsfPgA+H34U/hKeJKZ6MW3TDB4EXwY/Df8ATxlLvay2bQMPhq+BX4J/g2eI
rV5O2/jDQ+Gb4Tfgf+HZ4qhX0bZd4VPhO+H34THiqufVtrXgveGz4Afg4fD4
8dQLaZuG8IHwhfBj8NfwpPHVS2jb5vBh8OXws/CP8NQJ1N21jS88BL4Ofhn+
A54xoXoFbRsAnwDfAr8FN4nUc2jbqvDu8Gnw3fAH8FiJ1fNpmzrwPvA58IPw
Z/AESdSLaNtG8MHwRfAT8Dfw5EnVS2qblvDh8JXwc/DP8DTJ1D21bTv4GPh6
+FX4T3jm5OoVtU0n+ET4NvhteNQU6jm1TXV4D/gM+B74I3hsF/UC2rYuvB98
Lvww/Dk8UUp1N23TBD4EvgR+Ev4OniKVemlt2wo+Er4KfgH+BZ4utbqXtukA
HwvfCL8G/w3PkkbdR9t2hk+Gb4ffhUdLq55b29aAB8JnwvfBH8PjplMvqG3q
w/vD58OPwF/CE6dXL6Ztm8KD4Evhp+Hv4SkzqJfRNm3go+Br4Bfh3+DpM6qX
07Z+8FD4JvgN+B94tkzqlbVNV/gU+E74PXiMzOp5tE0teC/4LPh+eDg8Xhb1
Qtq2AXwgfAH8GPwVPGlW9eLapjl8KHw5/Az8IzxVNnV3bdsWHgJfC78M/w7P
mF29vLYJgI+Hb4HfhJsc6tm1TVV4N/g0+C74A3jMnOr5tG1teB/4bPhB+FN4
glzqhbVNI/gg+CL4cfgbeLLc6iW1bQv4cPgK+Dn4J3iaPOoe2qYdfDR8PfwK
/Cc8U171itq2I3wifCv8NjxKPvWc2rYavAd8OnwP/CE8dn71/NqmLrwvfC78
EPw5PGEBdTdt2xg+BL4YfhL+Fp6ioHopbdMKPgK+Cn4e/gWe1lXdS9u2h4+F
b4Bfg/+CZymkXknbdIZPgm+H34FHK6yeS9vUgPeEz4TvhT+GxymiXlDb1oP3
h8+DH4G/gCd2Uy+qbZrCLXwp/BT8PdylqHoZbdsaPgq+Gn4R/hWevpi6t7bx
g4+Db4Jfh/+BZy2uXlnbdoFPge+A34NHL6GeR9vWhPeCh8H3w5/A45VUd9U2
DeAD4AvgR+Gv4ElKqRfXts3gQ+HL4GfgH+CpSquX1TZt4cHwtfBL8O/wDGXU
y2tbf/h4+Gb4TfhfePay6lW0TTf4VPgu+H14THf1vNqmNrw3fDb8APwpPL6H
emFt2xA+CL4Qfhz+Gp7MU72EtmkBHwZfAT8L/wRP7aXuoW194aPh6+BX4D/g
mbzVK2ibjvAJ8K3wW/Ao5dRzaJtq8O7w6fDd8IfwWOXV82vbOvC+8DnwQ/Bn
8IQV1Itom8bwwfDF8BPwt/DkFdVLaduW8BHwlfDz8M/wtJXUPbVNe/gY+Ab4
VfgveGYf9UrathN8Enwb/A48amX1XNq2OrwnfAZ8L/wRPE4V9QLaph68H3we
/DD8BTxRVfWi2rYJ3MKXwE/B38FdqqmX1jat4SPhq+EX4F/h6aqre2vbDvBx
8I3w6/Df8Kw11H20TRf4ZPgO+F149JrqubVNTXggPAy+D/4EHreWuqu2rQ8f
AJ8PPwp/CU9SW72YtmkGD4Ivg5+Gf4CnrKNeVtu2gQfD18Avwb/BM9RVL6dt
/OGh8M3wG/C/8Gz11Kto267wqfCd8PvwGPXV82rbWvDe8FnwA/BwePwG6oW0
TUP4QPhC+DH4a3jShuoltG1z+DD4cvhZ+Ed46kbq7trGFx4CXwe/DP8Bz9hY
vYK2DYBPgG+B34KbJuo5tG1VeHf4NPhu+AN4rKbq+bRNHXgf+Bz4QfgzeIJm
6kW0bSP4YPgi+An4G3jy5uoltU1L+HD4Svg5+Gd4mhbqntq2HXwMfD38Kvwn
PHNL9YraphN8Inwb/DY8aiv1nNqmOrwHfAZ8D/wRPHZr9QLati68H3wu/DD8
OTxRG3U3bdMEPgS+BH4S/g6eoq16aW3bCj4Svgp+Af4Fns5X3UvbdICPhW+E
X4P/hmdpp+6jbTvDJ8O3w+/Co7VXz61ta8AD4TPh++CP4XE7qBfUNvXh/eHz
4UfgL+GJ/dSLadum8CD4Uvhp+Ht4Sn/1MtqmDXwUfA38IvwbPH2Aejlt6wcP
hW+C34D/gWfrqF5Z23SFT4HvhN+Dx+iknkfb1IL3gs+C74eHw+N1Vi+kbRvA
B8IXwI/BX8GTdlEvrm2aw4fCl8PPwD/CU3VVd9e2beEh8LXwy/Dv8Izd1Mtr
mwD4ePgW+E246a6eXdtUhXeDT4Pvgj+Ax+yhnk/b1ob3gc+GH4Q/hSfoqV5Y
2zSCD4Ivgh+Hv4EnC1QvqW1bwIfDV8DPwT/B0/RS99A27eCj4evhV+A/4Zl6
q1fUth3hE+Fb4bfhUfqo59S21eA94NPhe+AP4bH7qufXNnXhfeFz4Yfgz+EJ
+6m7advG8CHwxfCT8LfwFP3VS2mbVvAR8FXw8/Av8LQD1L20bXv4WPgG+DX4
L3iWgeqVtE1n+CT4dvgdeLRB6rm0TQ14T/hM+F74Y3icweoFtW09eH/4PPgR
+At44iHqRbVNU7iFL4Wfgr+Hu1j1Mtq2NXwUfDX8IvwrPH2Qure28YOPg2+C
X4f/gWcdql5Z23aBT4HvgN+DRx+mnkfb1oT3gofB98OfwOMNV3fVNg3gA+AL
4Efhr+BJRqgX17bN4EPhy+Bn4B/gqUaql9U2beHB8LXwS/Dv8Ayj1MtrW3/4
ePhm+E34X3j2YPUq2qYbfCp8F/w+PGaIel5tUxveGz4bfgD+FB5/tHphbdsQ
Pgi+EH4c/hqebIx6CW3TAj4MvgJ+Fv4Jnnqsuoe29YWPhq+DX4H/gGcap15B
23SET4Bvhd+CRwlVz6FtqsG7w6fDd8MfwmONV8+vbevA+8LnwA/Bn8ETTlAv
om0awwfDF8NPwN/Ck09UL6VtW8JHwFfCz8M/w9NOUvfUNu3hY+Ab4Ffhv+CZ
J6tX0rad4JPg2+B34FGnqOfSttXhPeEz4Hvhj+BxpqoX0Db14P3g8+CH4S/g
iaapF9W2TeAWvgR+Cv4O7jJdvbS2aQ0fCV8NvwD/Ck83Q91b23aAj4NvhF+H
/4Znnanuo226wCfDd8DvwqOHqefWNjXhgfAw+D74E3jcWequ2rY+fAB8Pvwo
/CU8yWz1YtqmGTwIvgx+Gv4BnnKOellt2wYeDF8DvwT/Bs8wV72ctvGHh8I3
w2/A/8KzzVOvom27wqfCd8Lvw2PMV8+rbWvBe8NnwQ/Aw+HxF6gX0jYN4QPh
C+HH4K/hSReql9C2zeHD4MvhZ+Ef4akXqbtrG194CHwd/DL8BzzjYvUK2jYA
PgG+BX4Lbpao59C2VeHd4dPgu+EP4LGWqufTNnXgfeBz4Afhz+AJlqkX0baN
4IPhi+An4G/gyZerl9Q2LeHD4Svh5+Cf4WlWqHtq23bwMfD18Kvwn/DMK9Ur
aptO8InwbfDb8Kir1HNqm+rwHvAZ8D3wR/DYq9ULaNu68H7wufDD8OfwRGvU
3bRNE/gQ+BL4Sfg7eIq16qW1bSv4SPgq+AX4F3i6depe2qYDfCx8I/wa/Dc8
y3p1H23bGT4Zvh1+Fx5tg3pubVsDHgifCd8HfwyPu1G9oLapD+8Pnw8/An8J
T7xJvZi2bQoPgi+Fn4a/h6fcrF5G27SBj4KvgV+Ef4On36JeTtv6wUPhm+A3
4H/g2baqV9Y2XeFT4Dvh9+Axtqnn0Ta14L3gs+D74eHweNvVC2nbBvCB8AXw
Y/BX8KQ71Itrm+bwofDl8DPwj/BUO9XdtW1beAh8Lfwy/Ds84y718tomAD4e
vgV+E252q2fXNlXh3eDT4LvgD+Ax96jn07a14X3gs+EH4U/hCfaqF9Y2jeCD
4Ivgx+Fv4Mn2qZfUti3gw+Er4Ofgn+Bp9qt7aJt28NHw9fAr8J/wTAfUK2rb
jvCJ8K3w2/AoB9Vzattq8B7w6fA98Ifw2IfU82ubuvC+8LnwQ/Dn8ISH1d20
bWP4EPhi+En4W3iKI+qltE0r+Aj4Kvh5+Bd42qPqXtq2PXwsfAP8GvwXPMsx
9UrapjN8Enw7/A482nH1XNqmBrwnfCZ8L/wxPM4J9YLath68P3we/Aj8BTzx
SfWi2qYp3MKXwk/B38NdTqmX0bat4aPgq+EX4V/h6U+re2sbP/g4+Cb4dfgf
eNYz6pW1bRf4FPgO+D149LPqebRtTXgveBh8P/wJPN45dVdt0wA+AL4AfhT+
Cp7kvHpxbdsMPhS+DH4G/gGe6oJ6WW3TFh4MXwu/BP8Oz3BRvby29YePh2+G
34T/hWe/pF5F23SDT4Xvgt+Hx7ysnlfb1Ib3hs+GH4A/hce/ol5Y2zaED4Iv
hB+Hv4Ynu6peQtu0gA+Dr4CfhX+Cp76m7qFtfeGj4evgV+A/4Jmuq1fQNh3h
E+Bb4bfgUW6o59A21eDd4dPhu+EP4bFuqufXtnXgfeFz4Ifgz+AJb6kX0TaN
4YPhi+En4G/hyW+rl9K2LeEj4Cvh5+Gf4WnvqHtqm/bwMfAN8KvwX/DMd9Ur
adtO8EnwbfA78Kj31HNp2+rwnvAZ8L3wR/A499ULaJt68H7wefDD8BfwRA/U
i2rbJnALXwI/BX8Hd3moXlrbtIaPhK+GX4B/had7pO6tbTvAx8E3wq/Df8Oz
Plb30TZd4JPhO+B34dGfqOfWNjXhgfAw+D74E3jccHVXbVsfPgA+H34U/hKe
5Kl6MW3TDB4EXwY/Df8AT/lMvay2bQMPhq+BX4J/g2d4rl5O2/jDQ+Gb4Tfg
f+HZXqhX0bZd4VPhO+H34TFequfVtrXgveGz4Afg4fD4r9QLaZuG8IHwhfBj
8NfwpK/VS2jb5vBh8OXws/CP8NRv1N21jS88BL4Ofhn+A57xrXoFbRsAnwDf
Ar8FN+/Uc2jbqvDu8Gnw3fAH8Fjv1fNpmzrwPvA58IPwZ/AEH9SLaNtG8MHw
RfAT8Dfw5B/VS2qblvDh8JXwc/DP8DSf1D21bTv4GPh6+FX4T3jmz+oVtU0n
+ET4NvhteNQv6jm1TXV4D/gM+B74I3jsr+oFtG1deD/4XPhh+HN4om/qbtqm
CXwIfAn8JPwdPMV39dLathV8JHwV/AL8CzzdD3UvbdMBPha+EX4N/hue5ae6
j7btDJ8M3w6/C4/2Sz23tq0BD4TPhO+DP4bH/a1eUNvUh/eHz4cfgb+EJ/6j
XkzbNoUHwZfCT8Pfw1P+VS+jbdrAR8HXwC/Cv8HTm2Li5bStHzwUvgl+A/4H
ni2KemVt0xU+Bb4Tfg8eI6p6Hm1TC94LPgu+Hx4OjxdNvZC2bQAfCF8APwZ/
BU8aXb24tmkOHwpfDj8D/whPFUPdXdu2hYfA18Ivw7/DM8ZUL69tAuDj4Vvg
N+Emlnp2bVMV3g0+Db4L/gAeM7Z6Pm1bG94HPht+EP4UniCOemFt0wg+CL4I
fhz+Bp4srnpJbdsCPhy+An4O/gmeJp66h7ZpBx8NXw+/Av8JzxRfvaK27Qif
CN8Kvw2PkkA9p7atBu8Bnw7fA38Ij51QPb+2qQvvC58LPwR/Dk+YSN1N2zaG
D4Evhp+Ev4WnSKxeStu0go+Ar4Kfh3+Bp02i7qVt28PHwjfAr8F/wbMkVa+k
bTrDJ8G3w+/AoyVTz6VtasB7wmfC98Ifw+MkVy+obevB+8PnwY/AX8ATp1Av
qm2awi18KfwU/D3cxUW9jLZtDR8FXw2/CP8KT59S3Vvb+MHHwTfBr8P/wLOm
Uq+sbbvAp8B3wO/Bo6dWz6Nta8J7wcPg++FP4PHSqLtqmwbwAfAF8KPwV/Ak
adWLa9tm8KHwZfAz8A/wVOnUy2qbtvBg+Fr4Jfh3eIb06uW1rT98PHwz/Cb8
Lzx7BvUq2qYbfCp8F/w+PGZG9bzapja8N3w2/AD8KTx+JvXC2rYhfBB8Ifw4
/DU8WWb1EtqmBXwYfAX8LPwTPHUWdQ9t6wsfDV8HvwL/Ac+UVb2CtukInwDf
Cr8Fj5JNPYe2qQbvDp8O3w1/CI+VXT2/tq0D7wufAz8EfwZPmEO9iLZpDB8M
Xww/AX8LT55TvZS2bQkfAV8JPw//DE+bS91T27SHj4FvgF+F/4Jnzq1eSdt2
gk+Cb4PfgUfNo55L21aH94TPgO+FP4LHyateQNvUg/eDz4Mfhr+AJ8qnXlTb
NoFb+BL4Kfg7uEt+9dLapjV8JHw1/AL8KzxdAXVvbdsBPg6+EX4d/huetaC6
j7bpAp8M3wG/C4/uqp5b29SEB8LD4PvgT+BxC6m7atv68AHw+fCj8JfwJIXV
i2mbZvAg+DL4afgHeMoi6mW1bRt4MHwN/BL8GzyDm3o5beMPD4Vvht+A/4Vn
K6peRdt2hU+F74Tfh8copp5X29aC94bPgh+Ah8PjF1cvpG0awgfCF8KPwV/D
k5ZQL6Ftm8OHwZfDz8I/wlOXVHfXNr7wEPg6+GX4D3jGUuoVtG3A/+//AwRT
q20=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.9096*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.9077856*^9, 
        FormBox[
         StyleBox["\"Nov\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9103776*^9, 
        FormBox[
         StyleBox["\"Dec\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9157344*^9, 
        FormBox[
         StyleBox["\"Feb\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.91824*^9, 
        FormBox[
         StyleBox["\"Mar\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9209184*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9235104*^9, 
        FormBox[
         StyleBox["\"May\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.9077856*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9103776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9157344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.91824*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9209184*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9235104*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{598.2, Automatic},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.9096*^9, 3.9207453*^9}, {0, 12226.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.926615931264453*^9, 3.926615936894661*^9}, 
   3.9266160088324*^9, 3.9266168547929573`*^9, 3.9266215355753827`*^9},
 CellLabel->"Out[73]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockSeason.mx\>\""}], ",", "heatStockSeason"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266136076850977`*^9, 3.9266136303391037`*^9}, {
  3.9266158604998035`*^9, 3.9266158647230654`*^9}, {3.926616866466845*^9, 
  3.926616867269799*^9}},
 CellLabel->"In[6463]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockSeason", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockSeason.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266142869772644`*^9, 3.9266142895705748`*^9}, {
   3.9266158473469973`*^9, 3.9266158487847815`*^9}, 3.926616054263191*^9, {
   3.926616868933217*^9, 3.926616870675585*^9}},
 CellLabel->"In[20]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockDaily", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "dailyCumulative", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dailyCumulative", "=", 
           RowBox[{"SelectElementsByDateRange", "[", 
            RowBox[{
             RowBox[{"heatStockSeason", "[", 
              RowBox[{"[", "cycle", "]"}], "]"}], ",", 
             RowBox[{"DateExtend", "[", 
              RowBox[{"day", ",", "0", ",", "0"}], "]"}], ",", 
             RowBox[{"DateExtend", "[", 
              RowBox[{"day", ",", "23", ",", "59"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"dailyCumulative", "!=", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Transpose", "[", "dailyCumulative", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Transpose", "[", "dailyCumulative", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"dailyCumulative", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "}"}], "]"}], ",", "\[IndentingNewLine]", "None"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.9266163402810307`*^9, 3.9266163501961584`*^9}, {
   3.9266163865632133`*^9, 3.9266163915704994`*^9}, {3.9266164629159975`*^9, 
   3.9266164690436983`*^9}, 3.9266165054914827`*^9, {3.9266165424038415`*^9, 
   3.9266165846751127`*^9}, {3.9266166658618402`*^9, 
   3.9266167481625175`*^9}, {3.926616874787796*^9, 3.9266168864833403`*^9}, {
   3.926621504133845*^9, 3.926621510694805*^9}, {3.9266635306210155`*^9, 
   3.9266635309572525`*^9}, {3.926685147742281*^9, 3.926685182937957*^9}, {
   3.9266852295230136`*^9, 3.9266852379074044`*^9}, 3.926686422635088*^9},
 CellLabel->"In[255]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockDaily.mx\>\""}], ",", "heatStockDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.9266165462932653`*^9, {3.926616754547722*^9, 3.926616765284571*^9}, {
   3.926616895412611*^9, 3.9266169002768297`*^9}},
 CellLabel->"In[256]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatStockDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatStockDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926616919779519*^9, 3.9266169243869925`*^9}},
 CellLabel->"In[21]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["g\[AAcute]z", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613702833259*^9}, {
  3.9266143158576007`*^9, 3.9266143159695*^9}, {3.9266178619871006`*^9, 
  3.926617862244105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasDataDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DateRange", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2023", ",", "11", ",", "23"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2023", ",", "12", ",", "6"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DateRange", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2023", ",", "12", ",", "15"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266169457948866`*^9, 3.9266169535078316`*^9}, {
  3.9266192689647274`*^9, 3.92661926899152*^9}},
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasStockPre", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
         "\"\<\\\\gas_stock.csv\>\""}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToStringWithDateCorrection", ",", 
             RowBox[{
              RowBox[{"DateList", "[", "#", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<-\>\""}], "]"}], "&"}], ",", "gasDataDays"}], "]"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266112523850965`*^9, 3.926611305416107*^9}, 
   3.9266113732650204`*^9, {3.9266137230424113`*^9, 3.9266137231861744`*^9}, 
   3.9266140542599335`*^9, {3.9266140929632587`*^9, 3.9266141100183673`*^9}, {
   3.9266141408514905`*^9, 3.926614146834378*^9}, {3.9266169668374333`*^9, 
   3.926616970275608*^9}, {3.9266170307869864`*^9, 3.92661703104397*^9}},
 CellLabel->"In[247]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasStockDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"gasDataDays", ",", "day"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dayN", ",", "dayDateList"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dayN", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"gasDataDays", ",", "day"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dayDateList", "=", 
           RowBox[{"DateList", "[", 
            RowBox[{"gasDataDays", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"dayDateList", "[", 
               RowBox[{"[", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
              RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
               RowBox[{"gasStockLine", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                RowBox[{"gasStockLine", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"gasStockLine", ",", 
              RowBox[{"gasStockPre", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "None"}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266137283232765`*^9, 3.926613802402179*^9}, 
   3.9266138785485935`*^9, {3.926614243539416*^9, 3.926614244066394*^9}, {
   3.926617039270875*^9, 3.9266170551730223`*^9}, {3.9266181204521112`*^9, 
   3.926618122742756*^9}, 3.926686502138444*^9},
 CellLabel->"In[258]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\gasStockDaily.mx\>\""}], ",", "gasStockDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266136076850977`*^9, 3.9266136303391037`*^9}, {
  3.92661427771581*^9, 3.9266142800176954`*^9}, {3.92661699013202*^9, 
  3.926616999571488*^9}, {3.926619296389406*^9, 3.9266193017978706`*^9}},
 CellLabel->"In[259]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasStockDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\gasStockDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92661429995385*^9, 3.926614304978283*^9}, {
  3.9266169853148775`*^9, 3.9266169858754807`*^9}},
 CellLabel->"In[23]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["szob\[AAcute]k h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klete", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613702833259*^9}, {
  3.9266143158576007`*^9, 3.926614335121397*^9}, {3.926617872275499*^9, 
  3.9266178743708544`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTempDataDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266171509159327`*^9, 3.9266171600229588`*^9}, {
   3.926617206831463*^9, 3.9266172077479897`*^9}, 3.926618574244951*^9, {
   3.926619326597104*^9, 3.9266193266608715`*^9}},
 CellLabel->"In[24]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTempsPre", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{
          "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
           "\"\<\\\\room_\>\"", "<>", 
           RowBox[{"ToString", "[", "room", "]"}], "<>", 
           "\"\<_temps.csv\>\""}], "]"}], "\[IndentingNewLine]", "&"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringRiffle", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"ToStringWithDateCorrection", ",", 
               RowBox[{
                RowBox[{"DateList", "[", "#", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
             "\"\<-\>\""}], "]"}], "&"}], ",", "roomTempDataDays"}], "]"}]}], 
       "]"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.926615631891167*^9, 3.9266156338455324`*^9}, {
  3.9266157873949575`*^9, 3.926615797618867*^9}, {3.9266172210770082`*^9, 
  3.9266172350757737`*^9}, {3.926617269076804*^9, 3.9266172987561703`*^9}, {
  3.9266173545631585`*^9, 3.9266173977161045`*^9}, {3.9266175729022317`*^9, 
  3.9266175786441193`*^9}},
 CellLabel->"In[261]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTempsDaily", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"roomTempDataDays", ",", "day"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Module", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dayN", ",", "dayDateList"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"dayN", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"roomTempDataDays", ",", "day"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"dayDateList", "=", 
             RowBox[{"DateList", "[", 
              RowBox[{"roomTempDataDays", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Dimensions", "[", 
                RowBox[{
                 RowBox[{"roomTempsPre", "[", 
                  RowBox[{"[", "room", "]"}], "]"}], "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
               RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Transpose", "[", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"dayDateList", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
                   RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
                    RowBox[{"roomTempLine", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                    "4"}], "]"}], ",", 
                    RowBox[{"roomTempLine", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "5"}], "]"}], "]"}]}], "}"}], "]"}]}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"roomTempLine", ",", 
                   RowBox[{
                    RowBox[{"roomTempsPre", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}], 
               "]"}], ",", "\[IndentingNewLine]", "None"}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ",", "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.92668665011795*^9, 3.926686689221815*^9}, 
   3.926687206224214*^9, {3.9266881573174744`*^9, 3.9266881733974895`*^9}},
 CellLabel->"In[305]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\roomTempsDaily.mx\>\""}], ",", "roomTempsDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266185097493625`*^9, 3.926618513173443*^9}, {
  3.9266193353168545`*^9, 3.9266193443889413`*^9}},
 CellLabel->"In[306]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTempsDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\roomTempsDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92661429995385*^9, 3.926614304978283*^9}, {
  3.9266169853148775`*^9, 3.9266169858754807`*^9}, {3.9266185051101465`*^9, 
  3.926618525444665*^9}},
 CellLabel->"In[25]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"setTempLowForAtLeastOneRoomDaily", "=", 
   RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"roomTempDataDays", ",", "\[IndentingNewLine]", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", "#", "]"}], "<", "0"}], "&"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"roomTemp", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", "NumberQ"}], "]"}], 
               "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"roomTemp", ",", 
                RowBox[{"roomTempsDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}]}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926618684916847*^9, 3.9266189171884785`*^9}, {
  3.9266189585988894`*^9, 3.9266189674308205`*^9}, {3.926619031462741*^9, 
  3.926619193302089*^9}},
 CellLabel->"In[307]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["f\[UDoubleAcute]t\[EAcute]si \[AAcute]llapot", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613702833259*^9}, {
  3.9266143158576007`*^9, 3.9266143250095854`*^9}, {3.926617867203188*^9, 
  3.9266178704359818`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStateDataDays", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"DateObject", ",", 
     RowBox[{"DateRange", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2023", ",", "11", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266171509159327`*^9, 3.9266171600229588`*^9}, {
  3.926619249397081*^9, 3.926619249492879*^9}, {3.9266193236212234`*^9, 
  3.9266193238765535`*^9}},
 CellLabel->"In[26]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStatePre", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
         "\"\<\\\\heating_state.csv\>\""}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToStringWithDateCorrection", ",", 
             RowBox[{
              RowBox[{"DateList", "[", "#", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<-\>\""}], "]"}], "&"}], ",", "heatingStateDataDays"}], 
       "]"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266112523850965`*^9, 3.926611305416107*^9}, 
   3.9266113732650204`*^9, {3.9266137230424113`*^9, 3.9266137231861744`*^9}, 
   3.9266140542599335`*^9, {3.9266140929632587`*^9, 3.9266141100183673`*^9}, {
   3.9266141408514905`*^9, 3.926614146834378*^9}, {3.926614437107329*^9, 
   3.9266144644653196`*^9}, 3.926615619795594*^9, {3.9266171660049496`*^9, 
   3.9266171697479734`*^9}},
 CellLabel->"In[267]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStateDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"heatingStateDataDays", ",", "day"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dayN", ",", "dayDateList"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dayN", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"heatingStateDataDays", ",", "day"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dayDateList", "=", 
           RowBox[{"DateList", "[", 
            RowBox[{"heatingStateDataDays", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Dimensions", "[", 
              RowBox[{"heatingStatePre", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Transpose", "[", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"dayDateList", "[", 
                  RowBox[{"[", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
                 RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
                  RowBox[{"heatingStateLine", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                    "5"}], "]"}], ",", 
                   RowBox[{"heatingStateLine", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "6"}], "]"}], "]"}]}], "}"}], "]"}]}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"heatingStateLine", ",", 
                 RowBox[{"heatingStatePre", "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
            ",", "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266116112514324`*^9, 3.9266116188654027`*^9}, {
   3.926611743456129*^9, 3.9266117684806967`*^9}, {3.9266118120005856`*^9, 
   3.9266119265780196`*^9}, {3.926611969040595*^9, 3.9266120291735673`*^9}, {
   3.9266120624339485`*^9, 3.9266120724812126`*^9}, {3.9266121172819843`*^9, 
   3.926612122290862*^9}, {3.926613199377989*^9, 3.926613230864958*^9}, 
   3.9266168193009434`*^9, {3.9266195968052197`*^9, 3.926619628277978*^9}, {
   3.926619667829544*^9, 3.926619756565898*^9}, {3.9266869982931004`*^9, 
   3.9266870542198133`*^9}},
 CellLabel->"In[311]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"heatingStateDaily", ",", "None"}], "]"}]], "Input",
 CellLabel->"In[6699]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "56", "}"}], ",", 
   RowBox[{"{", "57", "}"}], ",", 
   RowBox[{"{", "96", "}"}], ",", 
   RowBox[{"{", "97", "}"}], ",", 
   RowBox[{"{", "110", "}"}], ",", 
   RowBox[{"{", "111", "}"}], ",", 
   RowBox[{"{", "119", "}"}], ",", 
   RowBox[{"{", "120", "}"}], ",", 
   RowBox[{"{", "138", "}"}], ",", 
   RowBox[{"{", "145", "}"}], ",", 
   RowBox[{"{", "146", "}"}], ",", 
   RowBox[{"{", "152", "}"}], ",", 
   RowBox[{"{", "153", "}"}], ",", 
   RowBox[{"{", "154", "}"}], ",", 
   RowBox[{"{", "157", "}"}], ",", 
   RowBox[{"{", "158", "}"}], ",", 
   RowBox[{"{", "159", "}"}], ",", 
   RowBox[{"{", "160", "}"}], ",", 
   RowBox[{"{", "161", "}"}], ",", 
   RowBox[{"{", "162", "}"}], ",", 
   RowBox[{"{", "163", "}"}], ",", 
   RowBox[{"{", "167", "}"}], ",", 
   RowBox[{"{", "168", "}"}], ",", 
   RowBox[{"{", "173", "}"}], ",", 
   RowBox[{"{", "174", "}"}], ",", 
   RowBox[{"{", "175", "}"}], ",", 
   RowBox[{"{", "179", "}"}], ",", 
   RowBox[{"{", "180", "}"}], ",", 
   RowBox[{"{", "181", "}"}], ",", 
   RowBox[{"{", "182", "}"}], ",", 
   RowBox[{"{", "183", "}"}], ",", 
   RowBox[{"{", "184", "}"}], ",", 
   RowBox[{"{", "185", "}"}], ",", 
   RowBox[{"{", "186", "}"}], ",", 
   RowBox[{"{", "187", "}"}], ",", 
   RowBox[{"{", "188", "}"}], ",", 
   RowBox[{"{", "189", "}"}], ",", 
   RowBox[{"{", "190", "}"}], ",", 
   RowBox[{"{", "191", "}"}], ",", 
   RowBox[{"{", "192", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9266205799836254`*^9},
 CellLabel->"Out[6699]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStateNoDataDays", "=", 
   RowBox[{"heatingStateDataDays", "[", 
    RowBox[{"[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{"heatingStatePre", ",", "$Failed"}], "]"}], "]"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926614469794782*^9, 3.9266144853475637`*^9}, 
   3.9266171757172875`*^9, {3.9266194888221765`*^9, 3.926619504597228*^9}, {
   3.9266198614617167`*^9, 3.926619865124598*^9}},
 CellLabel->"In[309]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"noHeatingDays", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Select", "[", 
      RowBox[{"setTempLowForAtLeastOneRoomDaily", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "==", "False"}], "&"}]}], "]"}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266192080084777`*^9, 3.9266192566456366`*^9}, 
   3.9266194979583597`*^9},
 CellLabel->"In[310]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dayDateList", ",", "minutes", ",", "blankDayData", ",", 
       "dayPosition"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dayDateList", "=", 
       RowBox[{"DateList", "[", "day", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"minutes", "=", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"DateObject", "[", 
           RowBox[{"Join", " ", "[", 
            RowBox[{
             RowBox[{"dayDateList", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
             RowBox[{"MinuteOfDayToHourAndMinuteList", "[", "#", "]"}]}], 
            "]"}], "]"}], "&"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"heatingStatePre", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"blankDayData", "=", 
       RowBox[{"ConstantArray", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"minutes", ",", "\[IndentingNewLine]", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", "288"}], "]"}]}], "\[IndentingNewLine]", "}"}],
           "\[IndentingNewLine]", "]"}], ",", "5"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dayPosition", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"seasonDays", ",", "day"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"heatingStateDaily", "[", 
        RowBox[{"[", "dayPosition", "]"}], "]"}], "=", "blankDayData"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"day", ",", 
     RowBox[{"Intersection", "[", 
      RowBox[{"heatingStateNoDataDays", ",", "noHeatingDays"}], "]"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9266201678617043`*^9, 3.926620182277969*^9}, {
  3.9266203095413637`*^9, 3.9266204391252546`*^9}, {3.926620475045656*^9, 
  3.9266205542175293`*^9}, {3.9266872504721985`*^9, 3.926687251184165*^9}},
 CellLabel->"In[312]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9266205183898106`*^9, {3.9266205500103846`*^9, 3.9266205821824245`*^9}, 
   3.9266872743461914`*^9, 3.9266882016883674`*^9},
 CellLabel->"Out[312]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"heatingStateDaily", ",", "None"}], "]"}]], "Input",
 CellChangeTimes->{{3.926620562596945*^9, 3.9266205662774963`*^9}},
 CellLabel->"In[313]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "95", "}"}], ",", 
   RowBox[{"{", "96", "}"}], ",", 
   RowBox[{"{", "109", "}"}], ",", 
   RowBox[{"{", "110", "}"}], ",", 
   RowBox[{"{", "153", "}"}], ",", 
   RowBox[{"{", "162", "}"}], ",", 
   RowBox[{"{", "166", "}"}], ",", 
   RowBox[{"{", "167", "}"}], ",", 
   RowBox[{"{", "172", "}"}], ",", 
   RowBox[{"{", "174", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9266205665669584`*^9, 3.9266872779116583`*^9, 
  3.926688203883345*^9},
 CellLabel->"Out[313]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatingStateDaily.mx\>\""}], ",", "heatingStateDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266185097493625`*^9, 3.926618513173443*^9}, {
  3.9266193353168545`*^9, 3.9266193443889413`*^9}, {3.9266205926465263`*^9, 
  3.92662059349382*^9}},
 CellLabel->"In[278]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingStateDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\heatingStateDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92661429995385*^9, 3.926614304978283*^9}, {
  3.9266169853148775`*^9, 3.9266169858754807`*^9}, {3.9266185051101465`*^9, 
  3.926618525444665*^9}, {3.926620594632536*^9, 3.9266205956705275`*^9}},
 CellLabel->"In[27]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["egy\[EAcute]b", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613702833259*^9}, {
  3.9266143158576007`*^9, 3.926614339042627*^9}, {3.9266178787878294`*^9, 
  3.926617879138852*^9}}],

Cell[CellGroupData[{

Cell["k\[UDoubleDot]ls\[ODoubleAcute] \
h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266206855247974`*^9, 
   3.9266206965962825`*^9}, {3.926652478717061*^9, 3.9266524805899935`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTempDataDays", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"Map", "[", 
     RowBox[{"DateObject", ",", 
      RowBox[{"DateRange", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2023", ",", "11", ",", "22"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2024", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266169457948866`*^9, 3.9266169535078316`*^9}, {
  3.9266192689647274`*^9, 3.92661926899152*^9}, {3.926651424414261*^9, 
  3.9266514436305523`*^9}, {3.926651483663865*^9, 3.9266514853278155`*^9}, {
  3.9266516471502724`*^9, 3.926651676254605*^9}, {3.926651739362186*^9, 
  3.926651770864957*^9}, {3.9266518019528103`*^9, 3.92665180569635*^9}, {
  3.9266523191674166`*^9, 3.9266523214562206`*^9}, {3.927798034883659*^9, 
  3.927798042518984*^9}},
 CellLabel->"In[28]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTempPre", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Import", "[", 
        RowBox[{
        "formattedDataRoot", "<>", "\"\<\\\\\>\"", "<>", "#", "<>", 
         "\"\<\\\\external_temp.csv\>\""}], "]"}], "&"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"ToStringWithDateCorrection", ",", 
             RowBox[{
              RowBox[{"DateList", "[", "#", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ",", 
           "\"\<-\>\""}], "]"}], "&"}], ",", "externalTempDataDays"}], 
       "]"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266112523850965`*^9, 3.926611305416107*^9}, 
   3.9266113732650204`*^9, {3.9266137230424113`*^9, 3.9266137231861744`*^9}, 
   3.9266140542599335`*^9, {3.9266140929632587`*^9, 3.9266141100183673`*^9}, {
   3.9266141408514905`*^9, 3.926614146834378*^9}, {3.9266169668374333`*^9, 
   3.926616970275608*^9}, {3.9266170307869864`*^9, 3.92661703104397*^9}, {
   3.926651453840802*^9, 3.92665148830377*^9}},
 CellLabel->"In[155]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTempDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"externalTempDataDays", ",", "day"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dayN", ",", "dayDateList"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dayN", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"externalTempDataDays", ",", "day"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dayDateList", "=", 
           RowBox[{"DateList", "[", 
            RowBox[{"externalTempDataDays", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"dayDateList", "[", 
               RowBox[{"[", 
                RowBox[{"{", 
                 RowBox[{"4", ",", "5"}], "}"}], "]"}], "]"}], "=", 
              RowBox[{"MinuteOfDayToHourAndMinuteList", "[", 
               RowBox[{"externalTempLine", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateObject", "[", "dayDateList", "]"}], ",", 
                RowBox[{"externalTempLine", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"externalTempLine", ",", 
              RowBox[{"externalTempPre", "[", 
               RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "None"}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9266137283232765`*^9, 3.926613802402179*^9}, 
   3.9266138785485935`*^9, {3.926614243539416*^9, 3.926614244066394*^9}, {
   3.926617039270875*^9, 3.9266170551730223`*^9}, {3.9266181204521112`*^9, 
   3.926618122742756*^9}, 3.926686502138444*^9, {3.926687618511439*^9, 
   3.9266876285040445`*^9}},
 CellLabel->"In[156]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\externalTempDaily.mx\>\""}], ",", "externalTempDaily"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266136076850977`*^9, 3.9266136303391037`*^9}, {
  3.92661427771581*^9, 3.9266142800176954`*^9}, {3.92661699013202*^9, 
  3.926616999571488*^9}, {3.926619296389406*^9, 3.9266193017978706`*^9}, {
  3.9266524654239945`*^9, 3.9266524660950127`*^9}},
 CellLabel->"In[157]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTempDaily", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<\\\\externalTempDaily.mx\>\""}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92661429995385*^9, 3.926614304978283*^9}, {
  3.9266169853148775`*^9, 3.9266169858754807`*^9}, {3.9266524684981017`*^9, 
  3.926652469328288*^9}},
 CellLabel->"In[29]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["k\[ODoubleDot]rnyezeti v\[AAcute]ltoz\[OAcute]k", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266206855247974`*^9, 
   3.9266206965962825`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"energyContentInGasPerCubicMeter", "=", 
    RowBox[{"1000", " ", 
     RowBox[{"34", "/", "3600"}]}]}], ";"}], 
  RowBox[{"(*", "kWh", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gasPricePerCubicMeter", "=", "700"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9097626550302105`*^9, 3.909762694033764*^9}, {
  3.9097627471065674`*^9, 3.9097627493620896`*^9}, {3.926620805813594*^9, 
  3.9266208158466434`*^9}, {3.9268592576893387`*^9, 3.92685926907841*^9}},
 CellLabel->"In[30]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"airSpecificMass", "=", "1.2"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"kg", "/", "m3"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926691028054305*^9, 3.9266910342079153`*^9}, {
  3.926691064969391*^9, 3.926691073891507*^9}},
 CellLabel->"In[32]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"airSpecificHeatCapacity", "=", "1012"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"J", "/", "kg"}], "/", "K"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926691028054305*^9, 3.9266910342079153`*^9}, {
  3.926691064969391*^9, 3.926691073891507*^9}, {3.9266911830050926`*^9, 
  3.926691193510194*^9}},
 CellLabel->"In[33]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<ovi\>\"", ",", "\"\<PK\>\"", ",", "\"\<SZGK\>\"", ",", 
     "\"\<G\[OAcute]lyairoda\>\"", ",", "\"\<M\[EAcute]rce\>\"", ",", 
     "\"\<vend\[EAcute]gt\[EAcute]r\>\"", ",", "\"\<kisterem\>\"", ",", 
     "\"\<traf\[OAcute]h\[AAcute]z\>\"", ",", "\"\<Oktopusz\>\"", ",", 
     "\"\<Lahmacun\>\"", ",", 
     "\"\<Kaz\[AAcute]n k\[ODoubleDot]z\[ODoubleDot]s terek\>\"", ",", 
     "\"\<m\[UDoubleAcute]hely\>\""}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926662892368147*^9, 3.926662894491234*^9}},
 CellLabel->"In[34]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsWithTempData", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "9",
      ",", "10"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926696394692597*^9, 3.9266964259282703`*^9}},
 CellLabel->"In[35]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomToCycle", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4",
      ",", "1", ",", "2"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266628667302136`*^9, 3.926662869489078*^9}, {
  3.9266629113665624`*^9, 3.926662927337064*^9}},
 CellLabel->"In[36]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomAreas", "=", 
   RowBox[{"{", 
    RowBox[{
    "53", ",", "26", ",", "29", ",", "26.5`", ",", "72", ",", "100", ",", 
     "60.25`", ",", "240", ",", "66", ",", "24", ",", "50", ",", "26.5`"}], 
    "}"}]}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266555877821455`*^9, 3.926655608272274*^9}, {
  3.926656276401675*^9, 3.9266562773529806`*^9}, {3.926656341313672*^9, 
  3.92665636821037*^9}, {3.9266628797289715`*^9, 3.9266629010880775`*^9}},
 CellLabel->"In[37]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomExternalWallLength", "=", 
   RowBox[{"{", 
    RowBox[{
    "9.8", ",", "4.8", ",", "5.4", ",", "6", ",", "10.2", ",", "15.4", ",", 
     "10.2", ",", "25", ",", "12.5", ",", "5.2", ",", "None", ",", "2.5"}], 
    "}"}]}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926656428900286*^9, 3.926656453425316*^9}, {
   3.9266564848487597`*^9, 3.9266565059064207`*^9}, {3.9266565887213764`*^9, 
   3.9266566032815647`*^9}, {3.926656648801818*^9, 3.9266566552815337`*^9}, 
   3.926656732225565*^9, {3.9266567972020397`*^9, 3.926656797874097*^9}, {
   3.9266568711233573`*^9, 3.9266568914742966`*^9}, {3.9266569536818314`*^9, 
   3.9266569881294355`*^9}, {3.9266573062607813`*^9, 3.926657326545518*^9}, 
   3.9266629061984158`*^9, {3.926694681749116*^9, 3.9266946826820188`*^9}, {
   3.9266947280991845`*^9, 3.92669473056773*^9}, {3.926694774800956*^9, 
   3.9266948352687416`*^9}, 3.9277020687225866`*^9},
 CellLabel->"In[38]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeight", "=", "3.2"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926656997093631*^9, 3.926657008865625*^9}, {
  3.9266909636418743`*^9, 3.926690965175767*^9}},
 CellLabel->"In[39]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"radiatorHeight", "=", "0.6"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"roomRadiatorLength", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", " ", "140"}], ",", "280", ",", "300", ",", "180", ",", 
      RowBox[{"540", "+", "150"}], ",", 
      RowBox[{"6", " ", "120"}], ",", 
      RowBox[{"4", " ", "120"}], ",", "0", ",", 
      RowBox[{"2", " ", "140"}], ",", "100"}], "}"}], "/", "100"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9266941207964993`*^9, 3.9266941289916735`*^9}, 
   3.926694186669779*^9, {3.926694397199473*^9, 3.926694398346486*^9}, {
   3.926694469817211*^9, 3.926694471581032*^9}},
 CellLabel->"In[40]:="]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["elemz\[EAcute]s", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 3.9266096544308543`*^9}, {
   3.926609698670888*^9, 3.92660970001445*^9}, {3.9266098156146207`*^9, 
   3.9266098168798327`*^9}, 3.926611286329875*^9, {3.927702073576166*^9, 
   3.927702073971303*^9}}],

Cell[CellGroupData[{

Cell["jegyzetek", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266909804932117`*^9, 3.9266909811886635`*^9}}],

Cell["\<\
\[UAcute]gy \[EAcute]rdemes tekinteni, mint egy c\[EAcute]l fel\[EAcute] \
hajtott rendszert

kontrollv\[AAcute]ltoz\[OAcute]k:
\t- f\[ODoubleAcute] kontrollv\[AAcute]ltoz\[OAcute]k: fogyasztott \
g\[AAcute]z \[EAcute]s kik\[UDoubleDot]ld\[ODoubleDot]tt h\[ODoubleAcute]
\t\t> korrell\[AAcute]lt kontrollv\[AAcute]ltoz\[OAcute]k: f\[UDoubleAcute]t\
\[EAcute]si \[AAcute]llapot
\t- nem ir\[AAcute]ny\[IAcute]tott kontrollv\[AAcute]ltoz\[OAcute]: kinti h\
\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet, besug\[AAcute]rz\[AAcute]s
f\[UDoubleDot]gg\[ODoubleAcute] v\[AAcute]ltoz\[OAcute]k: szob\[AAcute]k h\
\[ODoubleAcute]m\[EAcute]rs\[EAcute]klete

hibajel: be\[AAcute]ll\[IAcute]tott h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet \
- aktu\[AAcute]lis h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet\
\>", "Text",
 CellChangeTimes->{{3.9266097087023525`*^9, 3.9266099891828175`*^9}, {
  3.926610049039749*^9, 3.9266100925743365`*^9}, {3.926610926111501*^9, 
  3.9266109348466597`*^9}, {3.9266114135989943`*^9, 3.9266114437710724`*^9}, {
  3.92661435195232*^9, 3.9266143648655686`*^9}}],

Cell["\<\
f\[ODoubleAcute] k\[EAcute]rd\[EAcute]sek:
- milyen k\[ODoubleDot]lts\[EAcute]ggel milyen m\[EAcute]rt\[EAcute]kben \
lehet cs\[ODoubleDot]kkenteni a hib\[AAcute]t?
- hogy teljes\[IAcute]t a rendszer, lehet-e jellemezni valahogy?
- k\[UDoubleDot]ls\[ODoubleAcute] k\[ODoubleDot]r\[UDoubleDot]lm\[EAcute]nyek \
hogyan befoly\[AAcute]solj\[AAcute]k?
- van-e olyan szcen\[AAcute]ri\[OAcute], amivel jelent\[ODoubleAcute]sen \
jobban teljes\[IAcute]tene?
- lehet-e jellemezni a szob\[AAcute]kat?
- hogyan viszonyul a tavalyi adatokhoz?\
\>", "Text",
 CellChangeTimes->{{3.9266097087023525`*^9, 3.9266099891828175`*^9}, {
  3.926610049039749*^9, 3.9266100925743365`*^9}, {3.926610926111501*^9, 
  3.9266109348466597`*^9}, {3.9266114135989943`*^9, 3.9266114437710724`*^9}, {
  3.92661435195232*^9, 3.9266143648655686`*^9}, {3.926622071428799*^9, 
  3.926622154612995*^9}}],

Cell["\<\
- pontos\[IAcute]tani a szob\[AAcute]k h\[ODoubleAcute]technikai jellemz\
\[ODoubleAcute]it (homennyisegbol becs\[UDoubleDot]lni? figyelembe venni aktu\
\[AAcute]lis h\[ODoubleAcute]m\[EAcute]rs\[EAcute]kletet hokapacitashoz? f\
\[UDoubleAcute]t\[ODoubleAcute]v\[IAcute]z h\[ODoubleAcute]m\[EAcute]rs\
\[EAcute]klete?)
- karakterizalni, h milyen k\[ODoubleDot]lts\[EAcute]ge van  egy szoba \
felfutesenek adott k\[UDoubleDot]ls\[ODoubleAcute] \
h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet mellett 
- jellemezni a szitut k\[ODoubleDot]lts\[EAcute]g - komfort s\[IAcute]kon, ak\
\[AAcute]r szezonon bel\[UDoubleDot]l is
- modellezni, hogy szab\[AAcute]lyoz\[AAcute]s vagy beavatkoz\[AAcute]s \
mennyit tol a s\[IAcute]kon milyen ir\[AAcute]nyba \
\>", "Text",
 CellChangeTimes->{{3.926779094056526*^9, 3.9267791210035286`*^9}, {
   3.9267796096897297`*^9, 3.9267796394594164`*^9}, {3.926783105585781*^9, 
   3.9267831789766717`*^9}, 3.9268413612154913`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["g\[AAcute]zb\[OAcute]l h\[ODoubleAcute]", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.926857273444168*^9, 3.9268572756687193`*^9}}],

Cell[CellGroupData[{

Cell["nem f\[UDoubleAcute]t\[EAcute]sre elmen\[ODoubleAcute] g\[AAcute]z \
becsl\[EAcute]se", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.926857273444168*^9, 3.9268572756687193`*^9}, {3.926876964206575*^9, 
   3.9268769719764056`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasFlowAndHeatingStateDaily", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gasDataPosition", ",", "heatingStateDataPosition"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"gasDataPosition", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"gasDataDays", ",", "day"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"heatingStateDataPosition", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"heatingStateDataDays", ",", "day"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"gasStockDaily", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"gasDataPosition", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Transpose", "[", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Drop", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"gasStockDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"gasDataPosition", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Differences", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"gasStockDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"gasDataPosition", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Map", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], 
                   "\[IndentingNewLine]", "&"}], ",", 
                  RowBox[{"heatingStateDaily", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"heatingStateDataPosition", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
               "\[IndentingNewLine]", "]"}], "]"}], ",", 
             "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", 
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"day", ",", "seasonDays"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Dimensions", "[", "#", "]"}], "]"}], ">", "1"}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9268747795030923`*^9, 3.9268748383665853`*^9}, {
   3.9268748826390753`*^9, 3.9268749328805246`*^9}, {3.926875080958615*^9, 
   3.9268750843707323`*^9}, 3.9268752647052727`*^9},
 CellLabel->"In[324]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasConsumptionByHeatingState", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"gasFlowAndHeatingStateDaily", ",", "1"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "==", "heatingState"}], "&"}]}], 
         "\[IndentingNewLine]", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"heatingState", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9268730429743276`*^9, 3.926873046686096*^9}, {
   3.926873243308426*^9, 3.926873266413886*^9}, {3.9268732972462544`*^9, 
   3.926873337725196*^9}, {3.926873369917804*^9, 3.9268733802220964`*^9}, {
   3.9268735273426757`*^9, 3.9268735318222623`*^9}, {3.9268735736464343`*^9, 
   3.926873850317582*^9}, {3.9268743787992473`*^9, 3.9268744241586313`*^9}, 
   3.926875299423758*^9, 3.9268753629442606`*^9, {3.9268754115200424`*^9, 
   3.9268754308961024`*^9}},
 CellLabel->"In[332]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"nonHeatingProportionOfGasConsumption", "=", 
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"gasConsumptionByHeatingState", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"gasConsumptionByHeatingState", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "+", 
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"gasConsumptionByHeatingState", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926876870752747*^9, 3.926876947278939*^9}},
 CellLabel->"In[423]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "nonHeatingProportionOfGasConsumption", "=", "0.3707982073738875`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatingProportionOfGasConsumption", "=", 
   RowBox[{"1", "-", "nonHeatingProportionOfGasConsumption"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268769531352406`*^9, 3.926876953587818*^9}, {
  3.926878076111351*^9, 3.926878083552142*^9}},
 CellLabel->"In[42]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"gasConsumptionByHeatingState", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"gasConsumptionByHeatingState", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.926876816623825*^9, 3.9268768528785563`*^9}},
 CellLabel->"In[415]:="],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.581], Thickness[Small]}], {{}, 
     {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{Opacity[
      0.581], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0.}, {0.05, 12704}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{34.2196028616598, 
            42.29840430742896}, {-41.48562352108013, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 12704]& ,
         TagBoxNote->"12704"],
        StyleBox["12704", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12704, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.05, 0.}, {0.1, 497}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{41.79840430742896, 49.87720575319812}, {
            23.915366576277012`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 497]& ,
         TagBoxNote->"497"],
        StyleBox["497", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[497, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.1, 0.}, {0.15, 4365}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{49.37720575319812, 57.45600719896727}, {
            3.1919267715274913`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4365]& ,
         TagBoxNote->"4365"],
        StyleBox["4365", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4365, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.15, 0.}, {0.2, 220}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{56.95600719896727, 65.03480864473643}, {
            25.39943917863369, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 220]& ,
         TagBoxNote->"220"],
        StyleBox["220", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[220, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.2, 0.}, {0.25, 3485}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{64.53480864473643, 72.61361009050559}, {
            7.906670056992741, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3485]& ,
         TagBoxNote->"3485"],
        StyleBox["3485", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3485, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.25, 0.}, {0.3, 308}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{72.11361009050559, 80.19241153627475}, {
            24.927964850087164`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 308]& ,
         TagBoxNote->"308"],
        StyleBox["308", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[308, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.3, 0.}, {0.35, 1120}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{79.69241153627475, 87.77121298204389}, {
            20.577542636680594`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1120]& ,
         TagBoxNote->"1120"],
        StyleBox["1120", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1120, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.35, 0.}, {0.4, 2}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{87.27121298204389, 95.35001442781306}, {
            26.567409674351214`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.4, 0.}, {0.45, 800}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{94.85001442781306, 102.92881587358221`}, {
            22.29199474048614, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 800]& ,
         TagBoxNote->"800"],
        StyleBox["800", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[800, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0.}, {0.55, 349}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{110.00761731935137`, 118.08641876512053`}, {
            24.708300674287077`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 349]& ,
         TagBoxNote->"349"],
        StyleBox["349", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[349, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.55, 0.}, {0.6, 5}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{117.58641876512053`, 125.66522021088969`}, {
            26.551336685878038`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.6, 0.}, {0.65, 107}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{125.16522021088969`, 133.24402165665884`}, {
            26.004855077790022`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 107]& ,
         TagBoxNote->"107"],
        StyleBox["107", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.65, 0.}, {0.7, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{132.74402165665884`, 140.822823102428}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.7, 0.}, {0.75, 29}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{140.322823102428, 148.40162454819716`}, {
            26.422752778092622`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 29]& ,
         TagBoxNote->"29"],
        StyleBox["29", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[29, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.75, 0.}, {0.8, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{147.90162454819716`, 155.98042599396632`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.8, 0.}, {0.85, 24}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{155.48042599396632`, 163.55922743973548`}, {
            26.449541092214584`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 24]& ,
         TagBoxNote->"24"],
        StyleBox["24", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[24, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.85, 0.}, {0.9, 3}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{163.05922743973548`, 171.13802888550464`}, {
            26.562052011526823`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.9, 0.}, {0.95, 13}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{170.63802888550464`, 178.7168303312738}, {
            26.5084753832829, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1., 0.}, {1.05, 5}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{185.79563177704296`, 193.87443322281212`}, {
            26.551336685878038`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.1, 0.}, {1.15, 4}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{200.95323466858127`, 209.0320361143504}, {
            26.55669434870243, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.2, 0.}, {1.25, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{216.1108375601196, 224.18963900588875`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.6, 0.}, {1.65, 1}, "RoundingRadius" -> 0]},
           ImageSizeCache->{{276.74124912627286`, 284.82005057204196`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.85, 0.}, {1.9, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{314.6352563551186, 322.71405780088776`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.9, 0.}, {1.95, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{322.21405780088776`, 330.2928592466569}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.75, 0.}, {2.8, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{451.05368237896346`, 459.13248382473256`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.9, 0.}, {2.95, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{473.7900867162709, 481.8688881620401}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{3., 0.}, {3.05, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{488.9476896078092, 497.02649105357835`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{Opacity[
      0.581], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 0.}, {0.05, 5316}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{34.2196028616598, 
            42.29840430742896}, {-1.903210574469611, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5316]& ,
         TagBoxNote->"5316"],
        StyleBox["5316", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5316, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.05, 0.}, {0.1, 380}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{41.79840430742896, 49.87720575319812}, {
            24.542213126730914`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 380]& ,
         TagBoxNote->"380"],
        StyleBox["380", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[380, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.1, 0.}, {0.15, 2050}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{49.37720575319812, 57.45600719896727}, {
            15.594916209995729`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2050]& ,
         TagBoxNote->"2050"],
        StyleBox["2050", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2050, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.15, 0.}, {0.2, 287}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{56.95600719896727, 65.03480864473643}, {
            25.040475769399404`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 287]& ,
         TagBoxNote->"287"],
        StyleBox["287", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[287, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.2, 0.}, {0.25, 2444}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{64.53480864473643, 72.61361009050559}, {
            13.483997057185153`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2444]& ,
         TagBoxNote->"2444"],
        StyleBox["2444", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2444, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.25, 0.}, {0.3, 686}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{72.11361009050559, 80.19241153627475}, {
            22.902768302466864`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 686]& ,
         TagBoxNote->"686"],
        StyleBox["686", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[686, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.3, 0.}, {0.35, 1633}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{79.69241153627475, 87.77121298204389}, {
            17.82906160776733, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1633]& ,
         TagBoxNote->"1633"],
        StyleBox["1633", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1633, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.35, 0.}, {0.4, 5}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{87.27121298204389, 95.35001442781306}, {
            26.551336685878038`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.4, 0.}, {0.45, 1153}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{94.85001442781306, 102.92881587358221`}, {
            20.40073976347565, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1153]& ,
         TagBoxNote->"1153"],
        StyleBox["1153", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1153, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.45, 0.}, {0.5, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{102.42881587358221`, 110.50761731935137`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.5, 0.}, {0.55, 444}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{110.00761731935137`, 118.08641876512053`}, {
            24.199322705969806`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 444]& ,
         TagBoxNote->"444"],
        StyleBox["444", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[444, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.55, 0.}, {0.6, 18}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{117.58641876512053`, 125.66522021088969`}, {
            26.481687069160937`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 18]& ,
         TagBoxNote->"18"],
        StyleBox["18", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[18, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.6, 0.}, {0.65, 145}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{125.16522021088969`, 133.24402165665884`}, {
            25.80126389046311, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 145]& ,
         TagBoxNote->"145"],
        StyleBox["145", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[145, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.65, 0.}, {0.7, 3}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{132.74402165665884`, 140.822823102428}, {
            26.562052011526823`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.7, 0.}, {0.75, 42}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{140.322823102428, 148.40162454819716`}, {
            26.353103161375522`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 42]& ,
         TagBoxNote->"42"],
        StyleBox["42", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[42, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.8, 0.}, {0.85, 40}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{155.48042599396632`, 163.55922743973548`}, {
            26.363818487024307`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 40]& ,
         TagBoxNote->"40"],
        StyleBox["40", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[40, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.85, 0.}, {0.9, 5}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{163.05922743973548`, 171.13802888550464`}, {
            26.551336685878038`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0.9, 0.}, {0.95, 23}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{170.63802888550464`, 178.7168303312738}, {
            26.454898755038975`, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 23]& ,
         TagBoxNote->"23"],
        StyleBox["23", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1., 0.}, {1.05, 13}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{185.79563177704296`, 193.87443322281212`}, {
            26.5084753832829, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.05, 0.}, {1.1, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{193.37443322281212`, 201.45323466858127`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.2, 0.}, {1.25, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{216.1108375601196, 224.18963900588875`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.3, 0.}, {1.35, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{231.2684404516579, 239.34724189742707`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.5, 0.}, {1.55, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{261.5836462347345, 269.6624476805037}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.7, 0.}, {1.75, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{291.8988520178111, 299.9776534635803}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{1.8, 0.}, {1.85, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{307.05645490934944`, 315.1352563551186}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.1, 0.}, {2.15, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{352.5292635839644, 360.60806502973355`}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{2.3, 0.}, {2.35, 1}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{382.844469367041, 390.9232708128102}, {
            26.57276733717561, 27.078125}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], 
        "Tooltip"]& ]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, \
{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.015, 0.},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{0, 
      Rational[3, 4]}, {All, All}}, {{0, 0.75}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926876817700143*^9, 3.9268768531580667`*^9}},
 CellLabel->"Out[415]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"typicalDailyGasConsumptionByMonthByHeatingState", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", 
          RowBox[{"MapFunctionToGranularity", "[", 
           RowBox[{"GetMeanAndSEM", ",", "\[IndentingNewLine]", 
            RowBox[{"Select", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"gasConsumptionByHeatingState", "[", 
               RowBox[{"[", "heating", "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"DateValue", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Month\>\""}], 
                 "]"}], "==", "month"}], "&"}]}], "\[IndentingNewLine]", 
             "]"}], ",", "\"\<Hour\>\""}], "]"}]}], "]"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"heating", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"month", ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "12", ",", "1", ",", "2", ",", "3", ",", "4"}], 
        "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.922261274589389*^9, 3.9222613649261847`*^9}, 
   3.9229730096582747`*^9, {3.9229762136020937`*^9, 3.9229762155371895`*^9}, {
   3.922976410924878*^9, 3.9229764347481475`*^9}, 3.925903805767167*^9, {
   3.926876592288622*^9, 3.926876644463866*^9}},
 CellLabel->"In[403]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"typicalDailyGasConsumptionByMonthByHeatingState", "[", 
      RowBox[{"[", "month", "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Red"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageSize", "->", "200"}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{
         "\"\<nincs f\[UDoubleAcute]t\[EAcute]s\>\"", ",", 
          "\"\<van f\[UDoubleAcute]t\[EAcute]s\>\""}], "}"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"month", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9268739409588046`*^9, 3.92687398143183*^9}, {
   3.9268740235346603`*^9, 3.926874105406543*^9}, {3.926874148863144*^9, 
   3.926874166669923*^9}, {3.92687422411275*^9, 3.926874257777479*^9}, {
   3.926874388784397*^9, 3.9268743930121307`*^9}, {3.9268744496627645`*^9, 
   3.9268744501419306`*^9}, {3.9268744803823338`*^9, 3.926874526063098*^9}, {
   3.9268754592469244`*^9, 3.92687549435257*^9}, 3.926876454609518*^9, 
   3.9268764861436334`*^9, {3.926876689486781*^9, 3.9268767566241407`*^9}},
 CellLabel->"In[409]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQNvb7mcXOd7xB7C+2D/xXM+EG2B8hkc7t8Fgb1Q
PofDhENfNWL6d0H5Ag5HOgSV3Xp2QPkiDrUi69wfVsH0Szhw7v6py9JzCMqX
cZhp8bU6r/MwlK/gUPjq+x2h5eegfCUHCH0ByldxcHUBARhfzSE7DQS2Qfka
DhNngsBOKF/LYTuYvxLK13FYjSKv55AZ8btta/4JKN/AYQ6KvKHDanAA7Ify
jRw+/AeB81C+scOHdyBwDMo3ccg+KJZzUOwMlG/q4A127xUo38zhGUr4mju8
C9wh1/r6oD0A2StzKA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQMsc80uZDLvtYfwPti7uoDAFiifwUEQDA5C+RwO
RsYgsBvKF3A48NI3v+oyjC/icN+SyTWadx+UL+Gwcda1j89aDkH5Mg6dzHL1
Fg9g5ik4TOWKql254CiUr+Twe4n/ryX+p6B8FYdQMDgL5as5uIHddwbK13Aw
nV8olvD5JJSv5cB5Y37DX84TUL6Ow/ZrUdlrtx6D8vUcosAAZr6Bg8wSR6kl
jjC+oUPxlV5T97sw/UYOf3iz72/4BnOfscPsL57zv3geh/JNHF5vafSTfnEE
yjd1MIpabBq1GKbezOG18v2UI4GnoXxzh0jtrUHaWw/ZAwB0aWOj
           
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.016308081307936092`}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0.016308081307936092`, 
        0.37742005672159745`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.14037412888920972`}, {1, 0.06925532620184963}, {
              2, 0.10520989437873013`}, {3, 0.0946021722160637}, {
              4, 0.08444296699842768}, {5, 0.06600291575552472}, {
              6, 0.12738673234517292`}, {7, 0.1300850119611748}, {
              8, 0.22845225565521346`}, {9, 0.21930750929775744`}, {
              10, 0.2342218454411001}, {11, 0.06913129236201265}, {
              12, 0.07485221546152265}, {13, 0.032616162615872184`}, {
              14, 0.04226497308103683}, {15, 0.16584718408710877`}, {
              16, 0.07713352198099879}, {17, 0.07883194624496329}, {
              18, 0.20774228726357397`}, {19, 0.15587024140544498`}, {
              20, 0.1984306755477151}, {21, 0.28960519530380074`}, {
              22, 0.14106203259052033`}, {23, 0.1239256386388852}, {
              23, 0.15607436136111494`}, {22, 0.17617934671982413`}, {
              21, 0.34372813802953334`}, {20, 0.24045821334117373`}, {
              19, 0.20246309192788842`}, {18, 0.29225771273642515`}, {
              17, 0.16561249819948148`}, {16, 0.12286647801900127`}, {
              15, 0.21597099773107267`}, {14, 0.15773502691896366`}, {
              13, 0.06738383738412823}, {12, 0.1251477845384771}, {
              11, 0.10586870763798747`}, {10, 0.27411148789223333`}, {
              9, 0.28069249070224256`}, {8, 0.2504951127658392}, {
              7, 0.17517814593356215`}, {6, 0.162409186022174}, {
              5, 0.09399708424447534}, {4, 0.10733785491938053`}, {
              3, 0.11289782778393631`}, {2, 0.12812343895460324`}, {
              1, 0.09185578490926147}, {0, 0.17686725042113513`}}]}, Null}, {{
           
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{0, 0.10089189965265766`}, {1, 0.0621637186415184}, {
              2, 0.10907977082970005`}, {3, 0.08695243970515096}, {
              4, 0.08792679105862508}, {5, 0.10175524178636383`}, {
              6, 0.1292294229938597}, {7, 0.12227370883041949`}, {
              8, 0.15437141295486217`}, {9, 0.19090136633562196`}, {
              10, 0.21674516037852457`}, {11, 0.20849081993724153`}, {
              12, 0.1912038309619545}, {13, 0.17664101359130296`}, {
              14, 0.165762640430886}, {15, 0.1921468623866157}, {
              16, 0.19374714230142787`}, {17, 0.18324191673014556`}, {
              18, 0.16063492423943487`}, {19, 0.16969916991131992`}, {
              20, 0.14907845674350154`}, {21, 0.1570742082591302}, {
              22, 0.20069118299183955`}, {23, 0.1259771122329172}, {
              23, 0.16633058007477547`}, {22, 0.22617448864995152`}, {
              21, 0.18102102983610768`}, {20, 0.1775882099231653}, {
              19, 0.19418971897756873`}, {18, 0.1825468939423836}, {
              17, 0.2052638303962912}, {16, 0.2165092679549825}, {
              15, 0.2196178434957372}, {14, 0.18907606924653342`}, {
              13, 0.19896874250625796`}, {12, 0.21427562109283996`}, {
              11, 0.23317584672942523`}, {10, 0.24158817295480875`}, {
              9, 0.22020974477548919`}, {8, 0.1835596215278963}, {
              7, 0.15703663599716677`}, {6, 0.1601322791337999}, {
              5, 0.1330273669092883}, {4, 0.12946451328920108`}, {
              3, 0.125547560294849}, {2, 0.1575868958369666}, {
              1, 0.09616961469181495}, {0, 0.12577476701400903`}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQMSeTzTVBUP2EN4H+zlHhsC0T4on8FhYqtOiiL3
Tiifw6Fq3vPKec9hfAGHO5ttb2+23Q3lizgIgsFBKF/CYUPHw+c9/kegfBmH
KaapvpHBx6B8BYfX8sFtO9/sh/KVHH7XZe0pmXwCyldxOCiR3GN4DMZXc8hJ
A4EzUL6Ggz3X9cUFtqegfC0H3dUP2G7euQjl6zjc+qR7/5PueShfzyEbrB9m
v4GDCIp7DR06O0AAZp+RQ/kl9dpL6mehfGOH7d9NFTWqYeaZOLxT3TL9Qtwl
KN/UQf9f5iTHxzB5M4d5wl4mBd0XoHxzB+Gcg2I5B4/ZAwCX6mUU
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQMyra8Dd8gdtYfwPtgniK+vv6ewB8pncEhW5I48
4bQNyudwEM05KJZzEMYXcIj81K26P2ITlC/i8LNR/kej/A4oX8JBUUw6aaMi
TL2MQ47G+oV72g5B+QoOf0S1Kr8EHIPylRwKVv82+VAKc4+Kwwn+yq+RMSeh
fDUHvUP2ft8ZjkP5Gg75wT1S/8xg6rUcfuXx/73NdgTK13E4p7uGuV/rNJSv
53Axk3mu2QWYeQYOSmBwCso3dOC+vrjAlgum3sihTmSd+8OqM1C+scO7u3de
S049AeWbOKhOPszhbgQzz9Qhcw7rjZpjML6Zg2TVQvGqhTD3mjvs2Q0G9gDy
uGXt
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.0317687577126003}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0.0317687577126003, 0.3609988781857858}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.1170064987557426}, {1, 0.10974309412017634`}, {
              2, 0.08970793907042987}, {3, 0.09175124884610969}, {
              4, 0.09671346837266065}, {5, 0.12147909882337896`}, {
              6, 0.14616491443148702`}, {7, 0.15998103713759013`}, {
              8, 0.11091412555366138`}, {9, 0.1732306556244421}, {
              10, 0.1774723238890158}, {11, 0.20499118396073882`}, {
              12, 0.18607030551399917`}, {13, 0.24205247622168843`}, {
              14, 0.2176668662266691}, {15, 0.15164117039244224`}, {
              16, 0.11551591720583845`}, {17, 0.16865010947924378`}, {
              18, 0.2088329493126478}, {19, 0.2275269835132786}, {
              20, 0.25297310484235475`}, {21, 0.22470954089507325`}, {
              22, 0.2177724943464039}, {23, 0.15629458856174738`}, {
              23, 0.19926096699380796`}, {22, 0.29924878224934104`}, {
              21, 0.2735360731400142}, {20, 0.32110096923171944`}, {
              19, 0.26436490837861354`}, {18, 0.24672260624290743`}, {
              17, 0.21468322385408958`}, {16, 0.15115074946082838`}, {
              15, 0.19835882960755802`}, {14, 0.2695126209528178}, {
              13, 0.3161564790021921}, {12, 0.22392969448600092`}, {
              11, 0.2387588160392615}, {10, 0.2096244503045323}, {
              9, 0.21076934437555797`}, {8, 0.1384976391522209}, {
              7, 0.1888561721647354}, {6, 0.1711904574693396}, {
              5, 0.1451875678432877}, {4, 0.11610704444785219`}, {
              3, 0.1106297035348427}, {2, 0.10594423484261362`}, {
              1, 0.12615434177725954`}, {0, 0.13501662263154063`}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{0, 0.13709305698657706`}, {1, 0.09553880290205313}, {
              2, 0.07547132786947902}, {3, 0.07946324637403532}, {
              4, 0.0635375154252006}, {5, 0.08608403871821663}, {
              6, 0.07458454372681428}, {7, 0.13250846569220673`}, {
              8, 0.1594755859733845}, {9, 0.15538401593636866`}, {
              10, 0.18330494445453177`}, {11, 0.16760445115932485`}, {
              12, 0.15342274493364064`}, {13, 0.14729150374570096`}, {
              14, 0.20014699632832536`}, {15, 0.1898279276495427}, {
              16, 0.19037159767787967`}, {17, 0.20004658646235904`}, {
              18, 0.2080852793938483}, {19, 0.1809767981800972}, {
              20, 0.18730408935045373`}, {21, 0.19041488696764652`}, {
              22, 0.17470270184371567`}, {23, 0.0928757795207738}, {
              23, 0.12379088714589287`}, {22, 0.19452806738705364`}, {
              21, 0.2123248390597508}, {20, 0.20638960434324}, {
              19, 0.2031236202299445}, {18, 0.23691472060615187`}, {
              17, 0.222453413537641}, {16, 0.21796173565545365`}, {
              15, 0.21350540568379067`}, {14, 0.22432557751133717`}, {
              13, 0.1656271565413804}, {12, 0.1780587365478408}, {
              11, 0.19182951110482618`}, {10, 0.21295673778845875`}, {
              9, 0.17993936714820855`}, {8, 0.18921551350305535`}, {
              7, 0.1569652185183196}, {6, 0.09831868207963732}, {
              5, 0.10237749974332186`}, {4, 0.07979581790813274}, {
              3, 0.09831453140374241}, {2, 0.09844171560878182}, {
              1, 0.12421428351769986`}, {0, 0.1929069430134228}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQDQNVSzm1zfq320N4H+wzXZUZ7+/ZBeUzOEyfBgLb
oHwOB4WX/w4t37QFyhdwCI+RS1/0YweUL+Igsecmi2j0UShfwmGXl9TVaauP
QPkyDjPB4CSUr+AAccsZKF/JYRNr9AbW6BNQvooDx1vVLdMvnIPy1RwmTwKB
S1C+hsNjzp1R4vMuQPlaDtPA5p+C8nUc9iazHvKwPgblGzgwGIPAYSjf0GE1
inuMHHou7OW42w0zzxjqPph/TBy2qqVmB22DmWfqELTQZEfLBZh+Mwcex5u/
ZwnA/Gvu8LJba/u0o7vsAWR7YH0=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQPmqb6Rwde22EN4H+x3iHZFL9yxFMpncJDSv6vC
1rgVyudwuKhb+Or7nU1QvoCD1GRDycmGK6F8EYfj7DHTPDYcgPIlHJwTnl5Q
un0QypdxcIhaMSmw7wiUr+DgGN47ZVkwjK/kEH2fu2DinKNQvorDi+0CBl6m
J6F8NQfOP0U/91adgPI1HMLtX6w4IH4cytdyWK3+eLu3LUy9joMi6+/5OfPO
Qfl6DrP6j7T99DgD5Rs4hD3weswgC5M3dMgJ1w999RMmb+TwomRvwZJb56F8
Y4fsI/vd/mTD3Gvi4JdfdXn2PRjf1CFYe2uQ9tZDUL6Zw1PfCv/cOTC+uUNH
GgisswcA3mxqWA==
           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.01544259613192128}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0.01544259613192128, 0.33962677849837875`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.0851396248146628}, {1, 0.0973531896878711}, {
              2, 0.08153065708515186}, {3, 0.07480143702406253}, {
              4, 0.09006414430640854}, {5, 0.15370115265059886`}, {
              6, 0.14889288953494662`}, {7, 0.1834625342483265}, {
              8, 0.19960728722513577`}, {9, 0.17018802199891403`}, {
              10, 0.21746610379840636`}, {11, 0.26774702465668754`}, {
              12, 0.23887771371647779`}, {13, 0.18954086579373744`}, {
              14, 0.1371356725333342}, {16, 0.09999999999999787}, {
              17, 0.1999999999999993}, {18, 0.23759077556424674`}, {
              19, 0.14982609715052578`}, {20, 0.16519657917512137`}, {
              21, 0.19103241947517735`}, {22, 0.14651001520071683`}, {
              23, 0.09755455426096148}, {23, 0.1116003753165034}, {
              22, 0.16700349831279682`}, {21, 0.21231953583208518`}, {
              20, 0.18968146960536636`}, {19, 0.17829890284947433`}, {
              18, 0.2794823951674606}, {17, 0.20000000000000168`}, {
              16, 0.1999999999999993}, {14, 0.21023274851929785`}, {
              13, 0.22608413420626236`}, {12, 0.2804205318975575}, {
              11, 0.3126451322060576}, {10, 0.26401537768307504`}, {
              9, 0.21036753355664162`}, {8, 0.23789271277486435`}, {
              7, 0.21653746575167346`}, {6, 0.1740800834380264}, {
              5, 0.17998305787571695`}, {4, 0.10502357499183708`}, {
              3, 0.08690069063551195}, {2, 0.09493993115014226}, {
              1, 0.11153569920101783`}, {0, 0.09891834619982998}}]}, Null}, {{
           
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{0, 0.06339577521315612}, {1, 0.03088519226384256}, {
              2, 0.06699019890376923}, {3, 0.0509447694792707}, {
              4, 0.037921049379524015`}, {5, 0.11851129438888668`}, {
              6, 0.129205407088375}, {7, 0.15081427433878802`}, {
              8, 0.14922818220371797`}, {9, 0.1587474501344787}, {
              10, 0.18757854065027715`}, {11, 0.1820604127208053}, {
              12, 0.17113823481834395`}, {13, 0.18724516193619556`}, {
              14, 0.23064047880764263`}, {15, 0.21273810438339388`}, {
              16, 0.22684662331444103`}, {17, 0.21810013987812293`}, {
              18, 0.24033505509227565`}, {19, 0.15062959102232293`}, {
              20, 0.15243604266896146`}, {21, 0.13577228372104883`}, {
              22, 0.13417904304646594`}, {23, 0.04808017088741334}, {
              23, 0.07066982911258712}, {22, 0.15661850296580393`}, {
              21, 0.1565354085866435}, {20, 0.17365091385277767`}, {
              19, 0.1684613180685861}, {18, 0.2573848146145647}, {
              17, 0.23465348331028302`}, {16, 0.24367360789943185`}, {
              15, 0.22921591860511195`}, {14, 0.24777897407989527`}, {
              13, 0.20712103524690312`}, {12, 0.18968650744969728`}, {
              11, 0.20043116977077718`}, {10, 0.20629901037013107`}, {
              9, 0.17893370928581123`}, {8, 0.1683774515990989}, {
              7, 0.17037216633917807`}, {6, 0.14979459291162509`}, {
              5, 0.1422481992819994}, {4, 0.06049164903317441}, {
              3, 0.09642365157336091}, {2, 0.10100980109623076`}, {
              1, 0.053963292584642275`}, {0, 0.09939492246126252}}]}, Null}}},
        Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQPsMzbn/JPcbA/hfbB3eDnZ7uXkdVA+g0NTaMCz
F3PXQPkcDhZFyuZFysuhfAGHy2s4cuPXr4TyRRx2nLqwXlJlA5Qv4aD48JlI
K9smKF/GQTuqdOWi0O1QvoLDytNv+Y1CtkH5Sg4qszazHb28D8pXcWhUejjl
2dH9UL6ag+7Po5PidQ5C+RoOR4C8n0cPQflaDiH3BN9oTjsM5es4sJqLr867
cgTK13Mw/vi8wuX8ASjfwME/aHFP6JejUL6hQ/iC9F0PFsLkjRyEBEEAZp+x
g4DffyG//zD/mDjcDJS9Gii7Fco3dYgLkFp51HALlG/mEPbttnGKBEze3IHn
yn3naUGb7QG4dGdd
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQO2fwW5d1xebw/hfbC/ol57Sb12EZTP4JCpv3Bv
y7dNUD6HAwMKEHB4n3hnvbfWfKi8iINQxZ+HDcdhfAmHUws++k/mWQXlyzg0
Tw/+UMS1D8pXcEhPA4FDUL6SQ2/s1Du7bxyF8lUcfLaueL7mEoyv5nD0CBhA
+RoOOQUbDx5lOw7lazn4mXc6Jjw9AOXrOOy2On29/vlBKF/PQdg/aHFPKEy/
gUPuhnucAlEw+w0dtk7ZobVWFmafkUPYGsbwNYww840d1nX4K0ydsx3KN3G4
Bw4vWPiYOpy1lzxj+HczlG/mIC1eKCheuBHKN3eQWcAotYBxlT0AB+FmIg==

           "]]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0., 0.1966957685227524}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.06923076923076923}, {
              1, 0.054690410699598555`}, {2, 0.05096745447140513}, {
              3, 0.040775651959757846`}, {4, 0.045238630312622784`}, {
              5, 0.05630459053670589}, {6, 0.06329610247135165}, {
              7, 0.08030396677825945}, {8, 0.07542972296081607}, {
              9, 0.1051953669245426}, {10, 0.10585881180676066`}, {
              11, 0.11703740715905288`}, {12, 0.1281298045522716}, {
              13, 0.13501220907834602`}, {14, 0.14544786225508305`}, {
              15, 0.11606665916947202`}, {16, 0.1552795327936192}, {
              17, 0.11597005658687155`}, {18, 0.11774930121377127`}, {
              19, 0.06621932802254589}, {20, 0.07449153401609268}, {
              21, 0.07230296248649418}, {22, 0.07520909979456944}, {
              23, 0.06955293564203273}, {23, 0.08140491876409746}, {
              22, 0.08959776715822029}, {21, 0.08546596181629465}, {
              20, 0.09046573094117238}, {19, 0.08219696157021421}, {
              18, 0.14891736545289544`}, {17, 0.14391018293408644`}, {
              16, 0.1877584418899251}, {15, 0.1465839432401666}, {
              14, 0.18001797625423377`}, {13, 0.17102805937802987`}, {
              12, 0.16520352878106162`}, {11, 0.1512959261742805}, {
              10, 0.14236813854784933`}, {9, 0.13564232941053597`}, {
              8, 0.09901472148362836}, {7, 0.10199691817749278`}, {
              6, 0.07752786756610155}, {5, 0.06979710437854836}, {
              4, 0.05509359560099849}, {3, 0.04960896342485755}, {
              2, 0.06081705731310666}, {1, 0.06475403374484591}, {
              0, 0.08000000000000002}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{0, 0.045562589393974534`}, {
              1, 0.02405780505223858}, {2, 0.056702163852505816`}, {3, 0.}, {
              4, 0.013292293721579886`}, {5, 0.015259394619107476`}, {
              6, 0.03212494883646319}, {7, 0.09843338510289235}, {
              8, 0.12626655378341012`}, {9, 0.15048784885206223`}, {
              10, 0.1533728085267813}, {11, 0.14631698304482693`}, {
              12, 0.1630983297486279}, {13, 0.11729903994288184`}, {
              14, 0.1236296741739972}, {15, 0.14019508406532064`}, {
              16, 0.127724329675082}, {17, 0.14840717220735664`}, {
              18, 0.1627813556602541}, {19, 0.07909364482479832}, {
              20, 0.06161897232848421}, {21, 0.06666666666666657}, {
              22, 0.05851412901668537}, {23, 0.037053129530139166`}, {
              23, 0.06453417205716244}, {22, 0.07774960724705116}, {
              21, 0.0894977168949771}, {20, 0.08282547211596056}, {
              19, 0.10537237459267727`}, {18, 0.1966957685227524}, {
              17, 0.18152913352512742`}, {16, 0.15902265827672526`}, {
              15, 0.17752643492202122`}, {14, 0.15612492705299655`}, {
              13, 0.14670096005711827`}, {12, 0.19669003003973187`}, {
              11, 0.1781928208767417}, {10, 0.18761079803059572`}, {
              9, 0.19086553460658445`}, {8, 0.16123344621658992`}, {
              7, 0.13626049244812807`}, {6, 0.0696294371284491}, {
              5, 0.04680957089813393}, {4, 0.047577271495811396`}, {3, 0.}, {
              2, 0.09144598429564235}, {1, 0.04816441716998367}, {
              0, 0.07876173493034981}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQNpk33NbqZstofwPthPPZKqvGLeRiifwUE04cT3
GWGroXwOhxcBDYr3k1dB+QIOdRFLeGzuwvgiDmdfXu3NaISpl3DIr+NmXBwC
M1/GIfBhfMgP8a1QvoIDX423dXfAIShfyUHeQ6m3dtZuKF/F4cHHdma5+hNQ
vprD9fClC7Jqj0L5Gg4MpicXfPQ/DOVrObg7eO0WnAAzT8fBf8qbWy4n90H5
eg7WETyf7Vlg5hs4CH4WqtgIt8/QoWSHrUdsO4xv5CCy88Bn98rtUL6xw+mD
Z+sUw7ZA+SYOmm689bOTYHxTB993qw3UrWB8M4dlwNCZJb8Nyjd3WF38lPGk
1XZ7AMxQZVw=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{{5., 0.040000000000000036`}, {6., 0.04666666666666665}, {
           7., 0.02982456140350876}, {8., 0.04366197183098591}, {9., 
           0.07127659574468084}, {10., 0.13066666666666668`}, {11., 
           0.09245283018867925}, {12., 0.10104166666666664`}, {13., 
           0.07741935483870968}, {14., 0.09347826086956527}, {15., 
           0.16338028169014088`}, {16., 0.10232558139534885`}, {17., 
           0.05937499999999993}, {18., 0.043478260869565216`}, {19., 
           0.06666666666666643}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0., 0.2262745442189914}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.07072621701772068}, {1, 0.06433146111194368}, {
              2, 0.049060478903656085`}, {3, 0.047096585459483024`}, {
              4, 0.048221668262782895`}, {5, 0.04881831701214689}, {
              6, 0.06990786173166652}, {7, 0.07602102378865262}, {
              8, 0.13352833359754634`}, {9, 0.09880539155229613}, {
              10, 0.1753472049845571}, {11, 0.15474396179818511`}, {
              12, 0.13957625181026614`}, {13, 0.13333870225294264`}, {
              14, 0.11026274110605813`}, {15, 0.09729038666814874}, {
              16, 0.0998075598799993}, {17, 0.10012601478608574`}, {
              18, 0.08516540148545969}, {19, 0.0739596286314476}, {
              20, 0.07469769259243614}, {21, 0.0743067364319484}, {
              22, 0.08106542803906541}, {23, 0.08570653235767878}, {
              23, 0.09577494912380266}, {22, 0.09177407813377414}, {
              21, 0.08371795492607628}, {20, 0.0845615666668231}, {
              19, 0.08491887604144958}, {18, 0.09822330283347726}, {
              17, 0.11494247836459914`}, {16, 0.11585080310932457`}, {
              15, 0.11377680700774057`}, {14, 0.13025450027325225`}, {
              13, 0.1567045877903474}, {12, 0.1621781341546462}, {
              11, 0.18103585471557637`}, {10, 0.20741141570509805`}, {
              9, 0.11684678236074732`}, {8, 0.152637674307592}, {
              7, 0.08877298370198407}, {6, 0.08111254643159879}, {
              5, 0.05862504868364601}, {4, 0.05671660334215537}, {
              3, 0.05598983429360339}, {2, 0.05772964455313405}, {
              1, 0.07332285987571063}, {0, 0.08078893449743087}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{5, 0.023670068381445503`}, {
              6, 0.03249746472989886}, {7, 0.02192286577923084}, {
              8, 0.034979698587367644`}, {9, 0.059995943111578603`}, {
              10, 0.11629086464319521`}, {11, 0.07913535670068578}, {
              12, 0.08478611487100968}, {13, 0.06407938755573067}, {
              14, 0.07958456612963931}, {15, 0.14432413921916531`}, {
              16, 0.08250122193403964}, {17, 0.04149357210092887}, {
              18, 0.029666873352050448`}, {19, 0.}, {
              19, 0.13333333333333286`}, {18, 0.057289648387079985`}, {
              17, 0.07725642789907099}, {16, 0.12214994085665806`}, {
              15, 0.18243642416111644`}, {14, 0.10737195560949124`}, {
              13, 0.09075932212168869}, {12, 0.1172972184623236}, {
              11, 0.10577030367667273`}, {10, 0.14504246869013815`}, {
              9, 0.08255724837778308}, {8, 0.05234424507460418}, {
              7, 0.03772625702778668}, {6, 0.060835868603434436`}, {
              5, 0.05632993161855457}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQMxZ5QWPq5fag/hfbCfXqQJRMuhfAaHAPZSIFoA
5XM4CMk9FJR7uBDKF3C4yHv3Au9dmLyIg/SuhUA0G8qXcBDsPSHQewImL+Ow
elt7ZkboIihfwUEs/qNo/EeY/UoOrM/9Ht/+ugrKV3HoWWCguPXARihfzcH2
rqq01ZEVUL6GwxS7l5PtXi6G8rXQ+DoOOus27jj2CGaensNXt6UvEvOXQPkG
DlOY7gERjG/o8DGz5ek8N5j5Rg4CZY43WBNh4WHsUNU7YWuhM0zexCH21NKY
U0vXQPmmDrOWZQIRzD4zh9hpqZHTUldC+eYOczZbzt5sudoeACzEaWc=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{{6., 0.027272727272727296`}, {7., 0.043478260869565216`}, {
           8., 0.10285714285714286`}, {9., 0.06000000000000001}, {10., 
           0.12830188679245288`}, {11., 0.07297297297297294}, {12., 
           0.06666666666666665}, {13., 0.061111111111111144`}, {14., 
           0.0727272727272728}, {15., 0.10416666666666659`}, {16., 
           0.0285714285714286}, {17., 0.03499999999999996}, {18., 
           0.048484848484848526`}, {19., 0.}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 200, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 23.}, {0., 0.1440965962947658}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{0, 0}, {0, 0}}, Prolog -> {{{{
            Opacity[0.15], 
            RGBColor[0, 0, 1], 
            
            PolygonBox[{{0, 0.037477140416224436`}, {
              1, 0.040593845827497796`}, {2, 0.02806920776479271}, {
              3, 0.030999137149966452`}, {4, 0.028849328377945724`}, {
              5, 0.023095402649457336`}, {6, 0.028436924617594894`}, {
              7, 0.031001059759546336`}, {8, 0.03714115062177556}, {
              9, 0.0468538483539663}, {10, 0.06176821036793058}, {
              11, 0.04195113896633825}, {12, 0.03399260601418794}, {
              13, 0.034217671715358486`}, {14, 0.04660392997546833}, {
              15, 0.035287896818402616`}, {16, 0.03550634728079719}, {
              17, 0.042021217854690214`}, {18, 0.04051791612989965}, {
              19, 0.04262675049405431}, {20, 0.05111343389127933}, {
              21, 0.047037491744033946`}, {22, 0.04530238264772386}, {
              23, 0.04842404226442608}, {23, 0.05792516408478028}, {
              22, 0.053903966558625394`}, {21, 0.05613711143056922}, {
              20, 0.06079132801348258}, {19, 0.052152365971809174`}, {
              18, 0.050806284783342356`}, {17, 0.052806368352206375`}, {
              16, 0.0460062577612196}, {15, 0.04453666458510614}, {
              14, 0.05841890107475997}, {13, 0.04356010606241929}, {
              12, 0.04378517176358984}, {11, 0.0547930470801734}, {
              10, 0.07692525696875284}, {9, 0.058460161307869456`}, {
              8, 0.048573135092510156`}, {7, 0.04061466076447114}, {
              6, 0.03712324135750884}, {5, 0.030872851318796628`}, {
              4, 0.03702368749507015}, {3, 0.03884213269130339}, {
              2, 0.036216506520921565`}, {1, 0.04988234464869268}, {
              0, 0.046505543566459556`}}]}, Null}, {{
            Opacity[0.15], 
            RGBColor[1, 0, 0], 
            
            PolygonBox[{{6, 0.007774899464066169}, {
              7, 0.027052494264679722`}, {8, 0.07460684672254139}, {
              9, 0.04836584616942276}, {10, 0.11250717729013998`}, {
              11, 0.05764441484038414}, {12, 0.05073028520887472}, {
              13, 0.041889026516686856`}, {14, 0.053621939071335674`}, {
              15, 0.07378314790138223}, {16, 0.012235089288660968`}, {
              17, 0.019999999999999997`}, {18, 0.0346396463011386}, {
              19, 0.}, {19, 0.}, {18, 0.06233005066855845}, {
              17, 0.049999999999999926`}, {16, 0.04490776785419623}, {
              15, 0.13455018543195094`}, {14, 0.09183260638320992}, {
              13, 0.08033319570553543}, {12, 0.08260304812445858}, {
              11, 0.08830153110556173}, {10, 0.1440965962947658}, {
              9, 0.07163415383057727}, {8, 0.13110743899174432`}, {
              7, 0.05990402747445071}, {6, 0.04677055508138842}}]}, Null}}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",\

 CellChangeTimes->{{3.9268767520010543`*^9, 3.926876757103814*^9}},
 CellLabel->"Out[409]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"typicalDailyGasConsumptionByHeatingState", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Flatten", ",", 
        RowBox[{"MapFunctionToGranularity", "[", 
         RowBox[{"GetMeanAndSEM", ",", "\[IndentingNewLine]", 
          RowBox[{"gasConsumptionByHeatingState", "[", 
           RowBox[{"[", "heating", "]"}], "]"}], ",", "\"\<Hour\>\""}], 
         "]"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"heating", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.922261274589389*^9, 3.9222613649261847`*^9}, 
   3.9229730096582747`*^9, {3.9229762136020937`*^9, 3.9229762155371895`*^9}, {
   3.922976410924878*^9, 3.9229764347481475`*^9}, {3.9229765217750473`*^9, 
   3.9229765257494197`*^9}, {3.9259038745036182`*^9, 3.92590387900064*^9}, {
   3.926873874206049*^9, 3.9268739065578704`*^9}, {3.926873993150205*^9, 
   3.9268740504488463`*^9}, {3.9268742097435617`*^9, 
   3.9268742176144657`*^9}, {3.926874443150242*^9, 3.926874444686996*^9}, 
   3.926875403295236*^9, {3.926875439146055*^9, 3.9268754497433443`*^9}, {
   3.92687624359933*^9, 3.926876353711502*^9}, {3.9268763952479444`*^9, 
   3.9268763955993967`*^9}},
 CellLabel->"In[399]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
  "typicalDailyGasConsumptionByHeatingState", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "->", "500"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<nincs f\[UDoubleAcute]t\[EAcute]s\>\"", ",", 
        "\"\<van f\[UDoubleAcute]t\[EAcute]s\>\""}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9268739409588046`*^9, 3.92687398143183*^9}, {
   3.9268740235346603`*^9, 3.926874105406543*^9}, {3.926874148863144*^9, 
   3.926874166669923*^9}, {3.92687422411275*^9, 3.926874257777479*^9}, {
   3.926874388784397*^9, 3.9268743930121307`*^9}, {3.9268744496627645`*^9, 
   3.9268744501419306`*^9}, {3.9268744803823338`*^9, 3.926874526063098*^9}, {
   3.9268754592469244`*^9, 3.92687549435257*^9}, 3.926876454609518*^9, 
   3.9268764861436334`*^9},
 CellLabel->"In[402]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQPTQw9+6oncag/hfbCf4vl+suf7zVA+g8PTlRPv
cStvhPI5HJ5sNKvP+LUeyhdwELqT/1j86QYoX8RhXvSjK+93wvRLOFh9v8l6
ZNk2KF/G4efGtUvL5HZC+QoODtqt07vZ9kL5Sg5an9jPbNgN46s4rNd2Dvy8
6xCUr+bAs7ujaG7OQShfw6HOsLrqRsIBKF/LwZiXU1XjMoyv47BA5K7ejvcw
8/QcIl8L72+P2AHlGzjEPq6s178Bc4+hQ9UH+Vo9fRjfyCH6yBzuRSd3QfnG
DgwnVlf1Mm+H8k0cGNfNCeR5AJM3ddi0bI1m9ikY38zh0qS3Hw99hvHNHRQC
guIWdO+0BwDxlm3o
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQP1NdLlkXr77CG8D/acp217N9zZDOUzOHw5rJT6
4OU2KJ/D4eeU2f47f26B8gUcEvf+/K24YgOUL+Kw6lDDpOl7d0H5Eg6q0/9P
qPsN48s4rM6NrWH5egDKV3BgcUiPP/70EJSv5OCcF+F248phKF/F4UHNL+6H
0sehfDWHORo3t3ZOOgrlazgcn3QxQtcIxtdy4DLKV3R7AtOv46Br9uqNnM0J
KF/PYbfi2ccxGiehfAOHR3LBCh8cYHxDhz0h1yzM/GF8I4evvZnCAV2noHxj
hwNfNWL6Dx2B8k0cxOonGuvsgPFNHeSklAwFr8L4Zg5SOXVNXmdg7jF3KF51
uOnBqS32AKSXbFU=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.029516124737898282`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 23.}, {0.029516124737898282`, 0.24616790751954457`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Prolog -> {{{{
          Opacity[0.15], 
          RGBColor[0, 0, 1], 
          
          PolygonBox[{{0, 0.08056217497616883}, {1, 0.0752201183277492}, {
            2, 0.06439718306938995}, {3, 0.06002057796412171}, {
            4, 0.06333948133378359}, {5, 0.07350302203540131}, {
            6, 0.08488004776115517}, {7, 0.09363427912091277}, {
            8, 0.10836730379737677`}, {9, 0.11043610337888013`}, {
            10, 0.1391813043599531}, {11, 0.12958003436025045`}, {
            12, 0.12170822306511976`}, {13, 0.12445589842257947`}, {
            14, 0.11060811925679538`}, {15, 0.08973581007415778}, {
            16, 0.09559249531453295}, {17, 0.09338655423724417}, {
            18, 0.09946780235293778}, {19, 0.08608208839231922}, {
            20, 0.10083499688518366`}, {21, 0.10087574005944498`}, {
            22, 0.1004505371670427}, {23, 0.09556434874610825}, {
            23, 0.10400921202148233`}, {22, 0.1101134735760191}, {
            21, 0.10842658552195035`}, {20, 0.10912740912985394`}, {
            19, 0.09371382997502777}, {18, 0.10981054816252614`}, {
            17, 0.10336581382770844`}, {16, 0.10631746375777265`}, {
            15, 0.1004659190324705}, {14, 0.12327003824691939`}, {
            13, 0.13843209078119922`}, {12, 0.134202764417495}, {
            11, 0.14267430089986521`}, {10, 0.15347924609876248`}, {
            9, 0.12185425957481202`}, {8, 0.11839494231970807`}, {
            7, 0.10260789206906637`}, {6, 0.09208423795313057}, {
            5, 0.08060882006986182}, {4, 0.06865189177908482}, {
            3, 0.06489409780379639}, {2, 0.06948484710893653}, {
            1, 0.08051985400973351}, {0, 0.08623319181919792}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[1, 0, 0], 
          
          PolygonBox[{{0, 0.10458737084321681`}, {1, 0.06942981781549648}, {
            2, 0.0814039946425376}, {3, 0.07430608250653098}, {
            4, 0.059032249475796564`}, {5, 0.09827852769127571}, {
            6, 0.09902638831966497}, {7, 0.12634943651164707`}, {
            8, 0.14127914209208967`}, {9, 0.14886450172655855`}, {
            10, 0.17447469679275138`}, {11, 0.1627382724583402}, {
            12, 0.15964321266547246`}, {13, 0.14999820195361277`}, {
            14, 0.18365674393248616`}, {15, 0.19069870262896202`}, {
            16, 0.19117853827342404`}, {17, 0.1920517754887232}, {
            18, 0.20097108451031578`}, {19, 0.1562814853416073}, {
            20, 0.15593491301292736`}, {21, 0.15655850383064018`}, {
            22, 0.14865999860795853`}, {23, 0.07362550741221852}, {
            23, 0.08881580714177226}, {22, 0.16068393777375123`}, {
            21, 0.16894608332532313`}, {20, 0.16780609418131734`}, {
            19, 0.16809351465839256`}, {18, 0.21372085861764636`}, {
            17, 0.20340792939209407`}, {16, 0.20340996229027383`}, {
            15, 0.20238985028680476`}, {14, 0.19501273864407143`}, {
            13, 0.16080953411009605`}, {12, 0.17154435670189708`}, {
            11, 0.17433069305890123`}, {10, 0.18660190776211408`}, {
            9, 0.16100151532581666`}, {8, 0.15399544283766767`}, {
            7, 0.1386052462678091}, {6, 0.11177361168033505`}, {
            5, 0.11063236339783322`}, {4, 0.0710987548910157}, {
            3, 0.08956488523540448}, {2, 0.09760835103647476}, {
            1, 0.08574259597760697}, {0, 0.1312021028409937}}]}, Null}}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
       "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.926876486748294*^9},
 CellLabel->"Out[402]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"typicalWeeklyGasConsumptionByHeatingState", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SortBy", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"Flatten", ",", 
            RowBox[{
             RowBox[{"MapFunctionToGranularity", "[", 
              RowBox[{"GetMeanAndSEM", ",", 
               RowBox[{"gasConsumptionByHeatingState", "[", 
                RowBox[{"[", "heating", "]"}], "]"}], ",", 
               "\"\<DayName\>\""}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Monday", "->", "1"}], ",", 
               RowBox[{"Tuesday", "->", "2"}], ",", 
               RowBox[{"Wednesday", "->", "3"}], ",", 
               RowBox[{"Thursday", "->", "4"}], ",", 
               RowBox[{"Friday", "->", "5"}], ",", 
               RowBox[{"Saturday", "->", "6"}], ",", 
               RowBox[{"Sunday", "->", "7"}]}], "}"}]}]}], "]"}], 
          "\[IndentingNewLine]", ",", "First"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"heating", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.922530045094531*^9, 3.9225300569356675`*^9}, {
  3.922530097335532*^9, 3.922530151608569*^9}, {3.922530749591496*^9, 
  3.9225307508621225`*^9}, {3.9268764072970943`*^9, 3.926876441376621*^9}},
 CellLabel->"In[400]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
  "typicalWeeklyGasConsumptionByHeatingState", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Red"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "->", "500"}], ",", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<nincs f\[UDoubleAcute]t\[EAcute]s\>\"", ",", 
        "\"\<van f\[UDoubleAcute]t\[EAcute]s\>\""}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9268739409588046`*^9, 3.92687398143183*^9}, {
   3.9268740235346603`*^9, 3.926874105406543*^9}, {3.926874148863144*^9, 
   3.926874166669923*^9}, {3.92687422411275*^9, 3.926874257777479*^9}, {
   3.926874388784397*^9, 3.9268743930121307`*^9}, {3.9268744496627645`*^9, 
   3.9268744501419306`*^9}, {3.9268744803823338`*^9, 3.926874526063098*^9}, {
   3.9268754592469244`*^9, 3.92687549435257*^9}, 3.926876454609518*^9},
 CellLabel->"In[401]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{1., 0.09875195007800315}, {2., 0.08816326530612244}, {3., 
         0.09308641975308644}, {4., 0.11715762273901813`}, {5., 
         0.11051282051282055`}, {6., 0.08215867901731774}, {7., 
         0.07378219841877073}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[{{1., 0.17925049309664698`}, {2., 0.1725067385444744}, {3., 
         0.1934}, {4., 0.14965312190287416`}, {5., 0.22282780410742498`}, {6.,
          0.11606410734252706`}, {7., 0.11999050332383666`}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.5, 0.036034764255237224`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.5, 7.5}, {0.036034764255237224`, 0.26791477214634046`}},
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Prolog -> {{{{
          Opacity[0.15], 
          RGBColor[0, 0, 1], 
          PolygonBox[{{1, 0.09637915614273272}, {2, 0.08594261049621217}, {
            3, 0.09071000815743663}, {4, 0.11484642105681389`}, {
            5, 0.10774716749609474`}, {6, 0.07995603834201648}, {
            7, 0.07206952851047445}, {7, 0.07549486832706702}, {
            6, 0.08436131969261901}, {5, 0.11327847352954636`}, {
            4, 0.11946882442122236`}, {3, 0.09546283134873626}, {
            2, 0.0903839201160327}, {1, 0.10112474401327358`}}]}, Null}, {{
          Opacity[0.15], 
          RGBColor[1, 0, 0], 
          
          PolygonBox[{{1, 0.17601830427146908`}, {2, 0.16928500749619588`}, {
            3, 0.19002978942382956`}, {4, 0.14516113999519034`}, {
            5, 0.21548827023204298`}, {6, 0.1135529078490091}, {
            7, 0.1170309953603946}, {7, 0.12295001128727873`}, {
            6, 0.11857530683604503`}, {5, 0.23016733798280697`}, {
            4, 0.154145103810558}, {3, 0.19677021057617042`}, {
            2, 0.17572846959275293`}, {1, 0.18248268192182487`}}]}, Null}}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
       "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.926875479235182*^9, 3.9268754955128503`*^9}, 
   3.9268762510029078`*^9, {3.926876282393192*^9, 3.926876348546502*^9}, 
   3.9268764560104055`*^9, 3.926878135902648*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "60"}], "+", "30"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{
        RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
    "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9268756141753025`*^9, 3.926875696751387*^9}, {
  3.926875730031143*^9, 3.9268757400623474`*^9}},
 CellLabel->"In[348]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQF2Dhd8t3DMXLnQHsxtCHNg6K7byDbTaD+YfyDJ
wSbDRSpIejpE3iHLQeYDg4PIp8kQ/oMCh4YI/t2fq/wg6heUOBjMqfw2j28O
RD6hwmFN/TSdV0ETIXyFGoddQVLLVKZD7XtQ7zBh5SQ/ti4o/0Kjw44rgY3/
by+G8Dc0OxxxuftqWzNUfkKrg8M2R96N0xdA+AXtDiqtkZXBrlD1AZ0OO9QM
H7/vmAHhG3Q77Ar/vqq1YxOEL9DrIBvRxmH0YyeE/6HPIT1K5+CGlTsg/IwJ
Dv929HyxzYfKR0x06A83k/7ntQvC95jk0KC8zHZiI9Q8i8kOYQt4tGcorIXw
NaY4iEjrF+bth/Ilpjoc6ZJTW+K5EsLnmOawZZpV3n+myfsBh9p20w==
      
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1410.}, {-0.018566123106799906`, 0.10270679630624911`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268756151566133`*^9, 3.926875696983192*^9}, {
  3.9268757377155237`*^9, 3.926875740276661*^9}},
 CellLabel->"Out[348]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NonHeatingGasConsumption", "[", "minute_", "]"}], ":=", 
  RowBox[{"Quiet", "[", 
   RowBox[{
    RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "60"}], "+", "30"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"typicalDailyGasConsumptionByHeatingState", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
       "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]",
      "]"}], "[", "minute", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.92687570792201*^9, 3.926875899872523*^9}},
 CellLabel->"In[364]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NonHeatingGasConsumption", "[", "minute", "]"}], "/", "4"}], ",", 
   RowBox[{"{", 
    RowBox[{"minute", ",", "0", ",", 
     RowBox[{"24", " ", "60"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9268758042261953`*^9, 3.9268758158708057`*^9}, {
  3.926876118112168*^9, 3.9268761184152956`*^9}},
 CellLabel->"In[383]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxNynk01Psfx3EiFC5XZSdrhSwZRSrfr6UhDUVR1jSUfZcQI7Jkyb412WOa
7CRZyl65WbOFppLtFhFKuHWv+/v98fu8f+e8znmexzkvSbKn6ZVtTExMBsxM
TP+td5/S/icD/2hlmrWtxlukY05HPvTM6x7E/+e1jqEPn3SPI/ORuHhvNINV
hvVw7qMnkI2sQ7zyHoFdZh7nH1LSwtNOfU39z7Di7/uYzaUxZK9tPSonuHDk
Er4TyZeZtZFnpSpWIn+ALXWTavomdZH77X18BbpPIjcWHVmj551CLpr9y1/T
zwh5l7te7SMjU+TzjpyKhh/NkOUj89QdhMyRme4TdCgm4IXqEP04d/Bo60tS
Vow5Pvsw+T2ndDLW3v+7aXExuPy91YWaNrClcITb3KELyGzmZWHCheBLvb9K
w8MvItfrGY3Oky2QXQhL8k3SVsgiUomhcTPWyGIi4lclLOyQDxb7cf3EyMgs
hZVVLwLAE7nz51Oqwby2myeet4CJYhz7N3rJ+Ez1kVCnvxKxYAY/rwIDXHNP
dtNmHiwurNvdwWaPHJNllyMnDdZIGZ1tTQPPxZGULrI5IOuFarREfQYX+Mic
fdxzBbn+e3WHaIMj8oA/ph5R7Ix8cqS+a+UjuJGganlJ3AX5QlxSc5Ai+PvU
klTGcXCKplF09WkXnI/hOS0wm4Qpp5Qu9FiCXbSdalkCwUXLMiGameCEcoH8
PbyuyAEuOzuWb4NJM185HgS5IUvajhjbuLkj+1dImpOUPZGvbNVViAV6IUuI
6+uVZ4IZx9+MH68Da5LyiiKegzOtHD17hsFE++7zXgzwdxdlzd0zXniu1dTw
14ZU7L5P6t76BbBp0Dqr9Tdw1xMBlRsq3shaa+pWVHewvFdA9difYIGFenYB
sg8yMfGvlfNEX2Q/wnFGirwfco3h8GY4Gbx82U3Alwoec9gr4l3gh2uuj2/v
pGVgrY6D4p50MN0lUsq9EpzorrHPtQ5s65ur6NgJVgpkPWw/CO6JGNC1WgK7
JmWbntt5DXmuuecOIQhMXvzVtWsezCGo4TTO8Ecu1/Flz+u/jvxFo6YZ5whA
lldeuTaFgxu/tE7vPAM2LEkyIdiA+WICbus7BOCb1eXF/uJ3sQlHuxYrV3Ah
0eCHpw/YWVZFMSIQfDu/n2MkHUwX8ZyRrQHv41g0dZYORC767tJWlgY2vqf9
UiM2CHlDW7C3M/QG8vDddG+Op+DqFT5+0gaYrq+6Zc0ejJyfY/LJnR+cbfDR
+ocYOPOb12uKbDCOK0RmxrHlYCm5TER2RXDCqaTGRDVw8FpffLUp2KWA+9KQ
F1jGhINu+Rn8joll5ePlEGTabw2t1ToUZA9Rz6Qw6VBk0rnUPn87sFzsEy63
HHBW8R+lc01gtra3hpcnwFP6+atbH0Nx+VX2nqqmHKy5z4Ga+xlMNZPTObEC
vsZY/Px2A8x/rSmbi/Um8urPUL1STvCAalF4vgG4wrmrNT0SnKa08tZuHRz0
TWhdwTkM2YWyRd6KBlvsmO0bpIEH+t5EHK8DG6S90qQ9B9NO6tNv/gFmXe/Y
Y9ULJtPxW4dfh+GVCrom3xoLsVaLZ8s8I+Dgp3XdnQywxt4qWuAMmP/wDYqE
VDjymiHR/OUlsMDQwunRMfBRq2TtWZNbyFxDNfskPcCThsOcNrHgV2xX/gnK
Aj9qX1vOooErVu66S5SA6RJa8w/KwYVnpq4qV9/CuZpu++S4FWDZlKjpulpw
MqOP8bwJHKUpMDrcDj4ob5lP+gkeFMpx6SREIP+4lJR6pAIsTLv1lH4gEtnj
ToDHiZPgdj93icHLYLdPjoGiXmB+a/LgVQp4If3DP3GR4NZ+a4XqeHCJ2702
3aRInHLoRtCYXT6WtmPiwmgqmEITXHLKBDvrXoj4SQXz8ml/khkG10/Kk4y5
o5BdJ7gtySFg8eFlR/9FsD2rUIO2fDQyXU17J7cjuOzJuZZxF3C15lU/mge4
7lmAnK9PNE7g3iF7YCgfa8Tj3mP+4HZilcF4CLibNFLjEwlmXNwbXZwGXnJw
thq7D+YN+ZtFqx1MSE8uuz8J/kRqXxQ2vY2cw/pNKaUDPLOrXYiHOQZZXjqZ
NV4LvGv7QsExIvjXnB62YARefrPC3WESg+fvfqdU/zUHm+nKZVDNwGMNp0t9
LMC9JRuBhjbgXI+y2oduYC9Vu68cweBdjS8dXlLBddrKE5EN4AdPGWu4aixy
lnrs779KwDSJ10unpsG1OwR7MkXikEfnWqMLpMAbHc66pXLgGFUtSRVFsHAB
31atShxusbCrJfpiFlbC8yfjqBr4GKWpsVkdTNHgVh08CW5ftX04ew5s4Lgt
i8sL3P+2OIoQ/3//3QUjJmzxyI+NsmW8boI798Te82wAD727zue5Ch49Q1iu
YLqDPNG21Lv0G9gq1+Y5he8ObjMdGKo8dhdjBPU8/Y0fbHPhWG2uEPg9oaRU
SQw8+SWaaiwDniq+EuOhAJ6PYegt6YNX3M8xeTiAfS211JSGwWtEOacl3QTk
Qi+znsSbYGNqmMqhZ+CGovgYix6wTGXmVNhbsKWaGA//NDipofBYyTxYIXjW
xG8J/ELrgJPWagIetLw3REn5LmbH7Erh+AH+2VGeNrgJHhzrIEoLJiLTF8c3
fI+AD2bx2WU+AF8sKLa34UpCrpRNnGJTALOVBFyuOgUW5SS0WZqAD7ktSmy3
AD/NfnV2whpM7H1ws9IOHH8lQ5BKBr/+O6IqwgHMn+Fr4HkVbK1EnrRwSsKt
OrM5C/+gYreXR/MqroMf1Zy+xBIN/jGXUEZsBR8VGdyM2QT7xa+v3NuTjFzx
t+h8+SHw6TrluToM/MlDZ6rFCMwrpi+pYwJW7z5t13kebCjVFxppDrYNPJtH
vJiMM3WVBt1hycR8Bgab2S3BUfvN3ndZgYdv2Vr3ksHSk44Tr53BrP6fdz+h
gWc4Xc9kT4PzvtjvZmdKQbbstR73FgXXnxg/9kAevKfCLJehAdabSz2zjoF9
xAeZ+PTBlDLJ8jGDFJy5ItuEa5KKxWp6W+QZgjO6WrdfJYELzHlrDhqD630q
dzaagAcSjO31zcA1LNfV36eA0wLyOK8NgMVj1V9WLYHp9/rDv3ClIrsX3bPb
KQpWLXfUOqAAtq+cePxVCZxWbaT4RBVcrsr+maoGfvGotYhyBPxeLciOrJGK
19DK5FxfUbH1xwRRoibYslGIc0Qb/LR5a9P+FPgqd35rdxiYxxqPJjSChd+V
8nSNgWVsBbKs18EPxY0YNLY0ZKUP4RIre8DeLTk6GWLg2rx6h2Oy4M4LWLnM
fvAIz4s1brk0fDBlcaX9GxWbe0nSWpcH/wgdipo8CBZcnhR4pAI+ardEj1QD
z9w5vCPPHZzQFOxcTwPr+wp7lfGnI7fnRRmmCKbjEmdNbfPj7mLHe1ZlAoTB
dRu2WzaiYBXZ7nFdcbAM5X4CjxRY6M0N3bey4G0xB8t9FMELmu/4dx4GP8vV
mtfQAyduy3/meA5MeEV2eO4NfpMsyymdBK4lidD7usAp7L+fDGLOQJ5xqxB/
hoOPDJ7e2AoF/wtvksuQ
       "]]},
     Annotation[#, "Charting`Private`Tag$1210350#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.015614334470989762`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1440}, {0.015614334470989762`, 0.03658256880733945}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268758166248875`*^9, 3.9268759019799013`*^9}, 
   3.926876118957431*^9},
 CellLabel->"Out[383]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"NonHeatingGasConsumption", "[", "minute", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"minute", ",", "0", ",", 
       RowBox[{
        RowBox[{"60", " ", "24"}], "-", "5"}], ",", "5"}], "}"}]}], "]"}], 
   "]"}], "/", "4"}]], "Input",
 CellChangeTimes->{{3.926875905038678*^9, 3.926875934590268*^9}, {
  3.9268761223677874`*^9, 3.926876122831351*^9}},
 CellLabel->"In[384]:="],

Cell[BoxData["7.256044908547889`"], "Output",
 CellChangeTimes->{{3.926875920955964*^9, 3.926875934847541*^9}, 
   3.926876123265031*^9},
 CellLabel->"Out[384]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "#", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "-", 
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"NonHeatingGasConsumption", "[", "minute", "]"}], "/", 
          "4"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"minute", ",", "0", ",", 
           RowBox[{
            RowBox[{"60", " ", "24"}], "-", "5"}], ",", "5"}], "}"}]}], "]"}],
        "]"}]}], "\[IndentingNewLine]", "&"}], ",", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{"gasStockDaily", ",", "None"}], "]"}]}], "]"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9268759385609426`*^9, 3.9268760416336627`*^9}, {
  3.926876082192786*^9, 3.9268761109593267`*^9}},
 CellLabel->"In[382]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdln1MlWUYxk+EDiUKidCU0VEZghH5AQLydfNx+P445wCHA4fDec+Hm1sW
tFhr1h9vLHXLla6Pv2qK7WzaRs22NOeWvdV09U+mFTq3Fkw2WGSDOVu11ZLz
/J6297AxdnE/933d133dz3PO5siod1+Kw+E4c/935a/6War7Zmuad/KyCP+Q
QPbPYxk3q8BpYnx+arHypI5nKvxEAzhb3ln6Me/Zt7rAG6Tk9ecurD7QBs6V
v31Vh354qQPslHsfvbj29PMV4C0KL+8B58vtdalF36d4wAXk6/qFiu96D3i7
6ucXHS9WOKT7LRH/6MLB745EwTukcPbDmlv55eCd8uXBxhsv1NaBd6GvFbxb
8f/ZDC6lfie4TBLzc7WD9yh8WZ8vR5+eZ4WcL7w4u/HsZnClTNw7/PH8K9vA
e8X9Ve/Ln7Y9Ca6iPz2fauWPvwxcg1+l4Fo51pIZl6PV4DrmrbHI9c9uFb1/
5XGFTYF/O/F65d9v6Dfr0ddAvEH1c4l+zAb0aT8b5c0V/vRdxBupp/1qwi9d
v0n56dX74mJ/mK/pwg/tbzN68MtsVv0daiLeIlcS84fPbEna31ZVv5jzZitx
7Veb8vuCi3gbfuv67VK0sj9xzd/Ofup96Ejqv4P56f3vVHhVC/FO8nX9LvRV
Eu9K8rOb+8a8zG70NBLvUfEs9Jg9Kj6l67vRx3lxq/sQ38F5t/LvKP5abuZb
T74HP5ineNjPveR76LeWfA/19L565cRrp//Y/3Yu+RpvIN8r2xL3k/tieanP
PBy97HsN+b32/TbBy/BZvfJr4E529+1i8vu4fyXk9zE/9Jh9zAe9Vh986HP0
c//gk36lN13r75fUxYzg1b9yyO+Xmx8sHH7Geph8H/xPk+9jXzS/z17f8nGf
9Hs1YN8PGZCFhL4C8gck95iz9dWcreQPcL+d5PuT+P1q3nHdv5/5MV/LT3/a
/0H48skfpP4W8gfpX/s/yHuh+x8Cc39kyP4em+A474c1hP7d5AfQD5aAfR/M
AOfZZytAPc0/jD70yjD7pd+rYebHPK1h9DFPR5Dz7KcE4dfvYdD+HlpB5q33
b4T7QD8ywnv8KPkjYi2nTWTvn61T+Tq+nvyQ3V8JSU/i8wJ/zRD7lwd/SA54
xr8uM3jvHYZU5NUfT3lqo8JOg/rrqGewr6sVNgzuJ+dNg3r0O2lIfPRcb8Ub
6fAZMlY94Vw19JDCM4ZUr+m5c61gDfxhu15nWMz18azFT6a+UPxhzj8Afxg9
WfDreAb8Ye53Ifxh+l8Lf5j+HoE/wnnuvzMJSwR/dsIfSfq8izB/zk9G7O+Z
FbHPcybCvLR/UeKPwR9FH++fRGUpv/pcy3tzyn8jKscv/dQ9W/q7wmZUzriu
Zdww/1F48j4eD855/p1T87Oi4kx84ZlX8ZmomIkH+6rCjphkTpWP18zfVdgZ
o79N8MfwLxX9MTmb4yoffnAa/hj9ZqI/Js7zR94d+3Ya/pikTW+6eOIu/s3E
7Pvs2Pc//g/Qut8g
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 168.}, {-0.6560449085478881, 95.19395509145212}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268759699377546`*^9, 3.9268759808744574`*^9}, {
  3.926876016711598*^9, 3.9268760442653832`*^9}, {3.9268760852763023`*^9, 
  3.9268761137027187`*^9}},
 CellLabel->"Out[382]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"totalGasTotalHeatDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"day", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", 
        "energyContentInGasPerCubicMeter"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Total", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"day", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "cycle", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "gasAndHeatStockDaily"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9266213514149437`*^9, 3.9266213692279315`*^9}, 
   3.926621408438861*^9, {3.9266216898477745`*^9, 3.9266217396382055`*^9}},
 CellLabel->"In[95]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fit", "[", 
  RowBox[{"totalGasTotalHeatDaily", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9266217647303343`*^9, 3.926621771718379*^9}},
 CellLabel->"In[98]:="],

Cell[BoxData[
 RowBox[{"0.19333512951831616`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.601837531626565`", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.926621768229946*^9, 3.926621772325565*^9}},
 CellLabel->"Out[98]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "totalGasTotalHeatDaily", "]"}]], "Input",
 CellChangeTimes->{{3.926621744629937*^9, 3.926621749350842*^9}},
 CellLabel->"In[96]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVVG1oU2cUvnUT9mNIrZsM18ItOn+IH7WuW50bOwqKghudGruaOW/aJk1a
m+Q2n01ie9OpdX9qmWyKGxJQnPhFh1jcj0EGssomuCnCVJDYrjLc5lq3lQ4V
vfc+z43khXA5ec85z/Occ95T3Rza5J2hKErS/FnfrS7zvJwUxTqyE98LUXwH
w/j+nsBX0cRyd53pFnejP/j11XbZP1Y/MHboE96npWpErxx5LQvb0GXlgOng
7oOdi8tvpnv9cBfvY7i/psOuiSD/yr0y+OqTy09+2ol8nzJ/Qxx4f+6GfSmL
fD/w3siI5a5/Rb7hpJw6aR71kAypCxvL50SRb1KX2b/krvz9fxj2t3GRFea5
5QO+x0B8ISFdZrrKtl7YP0fBd4x6hlLAP069+aSctvAW0V+LIn4kKpq6qOpG
xAO8shYxrn15+1+fID7oI//Vcsnif9rPeq6Hf4D1ybth32FflCbEf0Hb4H11
jLYH+itoay7kX6wxXlFsPSv8MqZv11bVRZHvpiH5vQ/m/XggAT03u2X6vnlG
w6jPeV00n3nWsT9lETFM945pH+Jvd4pxYf79fQ+bpMwCecR++bPgc9WQ3eVr
Xqg+loY9l/XT0hKx6vUH61tIi13uLeyv2ot8v8bJ3wt+fRn2pwv8xolnsI/m
/H5o/V8Xw/y8Qv+JmNjz/7gHeu7S/msX7svjsF0ZCVd811ZRFZZxS98U8fMB
8H/QJyesb8oo8r+3bVZwyt2L+HeoR82gPvFeyXfeGu58GJe3LIERh38U/u9F
RElcrNL7tWI/ZcNnCzbU+tC/t7PgO8X63UtRTwT4jT20+Q6GMrL/aM107fd8
P4Np/J/rgP+bfPfGGszrQXPeJicmJmq2oN7TSVk28Pm+hde70I+GhJy05zzE
9xcp5rP9G1gfZ58ousid1Etn+720PaXzd3SHKO7+nnOx5WKlr3+f+0cLgs8y
5pd24N115ruzdL4lyPo478WLfh0JiFJ7bLIh/wbiz7YT30Uc1skII/71bvY/
jHqp5FPowPt/jngq9Z4gPy2Afn3zMfOPvmv3s24b7aXo79oO+rci3ynia6HS
/Pk26BulHlV7Nh82Hy/855j7w15g/wDvekuxvvY+3NhctEvwjU3IP4P6cj7k
/4/4ih96biSlMGwO7BK+//FW3lciPvUMz/Zfzv6rAezjjc6+b0X8zESxfs4+
zq9KumPPa3gPB4Ls50fox4shsQdlVhP47QnxfkfpPOTakS9Lfcpmvj/iF5rR
rxrqNfeHzX+eg+eCfdiZU+qZ7ehdDP7bGa/6oe8i+yMtxX0IvFbgGQHq/wB8
l5KP5pGnQM5jrQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 983.1666666666665}, {0, 569.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.926621749622713*^9},
 CellLabel->"Out[96]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", 
    "totalGasTotalHeatDaily"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9266217856269417`*^9, 3.9266218121982236`*^9}},
 CellLabel->"In[102]:="],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.623], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.623], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.2, 15.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{16.49396469343039, 31.55462159754681}, {
           4.830443948044053, 32.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 15]& ,
        TagBoxNote->"15"],
       StyleBox["15", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[15, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.2, 0}, {0.4, 14.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31.05462159754681, 46.11527850166323}, {
           6.613622684841118, 32.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.4, 0}, {0.6, 33.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{45.61527850166323, 
           60.67593540577964}, {-27.26677331430308, 32.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 33]& ,
        TagBoxNote->"33"],
       StyleBox["33", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[33, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.8, 44.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{60.17593540577964, 
           75.23659230989607}, {-46.88173941907077, 32.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 44]& ,
        TagBoxNote->"44"],
       StyleBox["44", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[44, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {1., 10.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{74.73659230989607, 89.79724921401248}, {
           13.74633763202937, 32.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.2, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{89.29724921401248, 104.3579061181289}, {
           26.22858878960881, 32.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.6, 0}, {1.8, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{132.97921992636176`, 148.03987683047816`}, {
           29.794946263202938`, 32.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.036000000000000004`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 1.8}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926621798135477*^9, 3.926621812424902*^9}},
 CellLabel->"Out[102]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", 
    "totalGasTotalHeatDaily"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9266524930597134`*^9, 3.92665249731271*^9}},
 CellLabel->"In[154]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdlQ1UzXcYx+/JUbTZYmgrTTqkYZX3WNM3t67eULd7b/dWt43aKbHjLWUT
/Z0tykt5yc37iqiYhnCL0qW0qEhvErWiFBm1hqa2Fp7nHPzu/3/u+dzn/zy/
5+X7/91RC5dKv9MTiUSr++5X329Wu4O1R2jM0YJ7DvQDfNMSVGkJD4kHYJgu
tO+qIjZCfdugJYXnGoiHIrdLm+HwwQPiT6GOGj7BRsb2EdjwIqtkdNZ9YnMo
P9q7SL7wL2IL/JaYfeKiXQfxaFw6IuQtuVBJbInvh18N2+fM+VlhaH3Mz+YT
24jHIVab+fnij1uIJyD+8jMr//h2YmtMS8hNr/nlGrEtpHlajYHkCfFELCpP
bdlozPlOQpFJ7+lRUo43GXW1Y81lU5uJp8D01drH9U5Fqcf25NalzNPQlqNn
EtHWRDwdZ+zW5z9vqCW2g8RsQ7HPgWLiGbj+MHOky4si4pnoWprRpjK/QfwV
5hvOvBoedZvYHr39LB8ePXWL+Gs0r0g62L6B489Cx7GTBYYCswOONQWv1c4s
IwZEby8B+MldkzIr6yXZHeH64Epy5EKqR3BEUnehevMDrmc2vDVJEaZbSB/C
bMSvPHxjpILnK8bOlLtWntV3yC5G68aBpy03PyK7E3zyEtb960os9PHNVS81
yaw3ZwT364213kn9F5wxPrNje8lltkuQv2xv/7LQOrJLMNng8PpwM57PHDwy
CAxLc+L85sCtKqsjKvAx2V2wvOhk7ic9rWR3gaCNCZl0gOfnCpvuZvG0RN7f
FQX9vfa3TGL9ucGvprdT3dFIdjd0j3k+MbWS9egOi3h78ZZors8djQELDJ8e
p/1EHohrGLt6yLcc3wPhsSERsSGst7koS5lzxySY+zcXPRHFlrLrrM95aDjr
Ha//jOubhz3yu30SYv/5sHOY0fdh+3wcd2pSVizg/nliWJGj8soAigdPDK5t
hqS7gJ73xI7O+6sOqcvfsM4TnylkN4stOH8vfFOws9IqkPoNL5jpx0gn+LJe
vFDR5VjZ5Uh60XnB3qguPVzM+pFC9PaCFKEpbj7atEvkL4UuNfOE7VOqRyeF
Jr1pV3oTz9cbwbPPfHlwK+/vDdGaX90LX/D+3gg6MOhJhi3v7w1FkHWieHEO
+cuQ71IfecuG3ifIoHm92F+GUqfOTQlB7C+DlWLQI38r1occKmP9yPGpZIcc
c81q9mQwC3IM6c3vu1aQvxylrVMKd3leJn8FfuzJNotppfqgwNDz0VpXPl8E
BaqnS7K9hpHedAqsa/89MeP2XfL3QWX18pCeUWSHD5yMDp1PqVxD/j7v9lf3
HouU+C/1ixa3s3SeQ4ndA7NMbY0pnqBE5OCgjFuRpG+dEhY1sQ2zqnh+Kuze
FPgkbtkR8le9G19QoXHdhwbVIzh/Ff7cbvlD/mOKJ/JFpn3taftazt8X1jmd
V523UX2CL/K2HhRrt9H7rfOFydOAcQXlfP754WIpbu/P/oP8/VBScc313ko6
fwQ/6BLDEqJMqsnfD2M07mtPxfH7449YSWlebQrr35/mT88L/u/1zx9RYoPi
OOk58ldj3j7DaOXfnL8aYXoX6kvkfB6oYbq/7Z9tO7h/ajx7vfj/MwCWgQON
9HfVO/wPFnpFLA==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 120.}, {0, 1.6699816159423058`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.926652497710183*^9},
 CellLabel->"Out[154]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["kaz\[AAcute]nok hat\[EAcute]konys\[AAcute]g\[AAcute]nak \
becsl\[EAcute]se", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.926857273444168*^9, 3.9268572756687193`*^9}, {3.926876964206575*^9, 
   3.926876983262782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gasStockAndHeatStockDaily", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", 
           RowBox[{"gasStockDaily", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"dayN", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{
          RowBox[{"Dimensions", "[", 
           RowBox[{
            RowBox[{"heatStockDaily", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"dayN", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
          RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"gasStockDaily", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"dayN", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"heatStockDaily", "[", 
              RowBox[{"[", "cycle", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"dayN", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "None"}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"dayN", ",", "1", ",", 
        RowBox[{"Length", "[", "seasonDays", "]"}]}], "}"}]}], "]"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.9268747795030923`*^9, 3.9268748383665853`*^9}, {
   3.9268748826390753`*^9, 3.9268749328805246`*^9}, {3.926875080958615*^9, 
   3.9268750843707323`*^9}, 3.9268752647052727`*^9, {3.9268770347996483`*^9, 
   3.926877115746535*^9}, {3.9268771836653214`*^9, 3.926877183744909*^9}, {
   3.926877218866188*^9, 3.9268772570086017`*^9}, {3.9268773001287556`*^9, 
   3.9268773069630346`*^9}, {3.9268775816820717`*^9, 3.9268776481601067`*^9}},
 
 CellLabel->"In[466]:="],

Cell[CellGroupData[{

Cell[BoxData["heatingProportionOfGasConsumption"], "Input",
 CellLabel->"In[567]:="],

Cell[BoxData["0.6292017926261124`"], "Output",
 CellChangeTimes->{3.9268792705144987`*^9},
 CellLabel->"Out[567]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"boilerEfficiencyHourlyByDay", "=", 
   RowBox[{"Quiet", "[", " ", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"DateObject", "[", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"DateList", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"#", ",", "30", ",", "0"}], "}"}]}], "]"}], "]"}], 
              "&"}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "23"}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"MapFunctionToGranularity", "[", 
               RowBox[{"Total", ",", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                   RowBox[{"Total", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Differences", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"cycle", ",", "1", ",", "4"}], "}"}]}], "]"}], 
                    "]"}]}], "}"}], "]"}], ",", "\"\<Hour\>\""}], "]"}], 
              "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"0.75", " ", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"MapFunctionToGranularity", "[", 
                 RowBox[{"Total", ",", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                    RowBox[{"Differences", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"dayData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "]"}], 
                  ",", "\"\<Hour\>\""}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", 
              "energyContentInGasPerCubicMeter"}], ")"}]}]}], 
          "\[IndentingNewLine]", "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"dayData", ",", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"gasStockAndHeatStockDaily", ",", "None"}], "]"}]}], 
         "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"NumberQ", "[", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "&"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9268780153758802`*^9, 3.926878069858247*^9}, {
   3.9268781559214334`*^9, 3.926878193599214*^9}, {3.9268783448025045`*^9, 
   3.9268784046082015`*^9}, {3.9268785260816603`*^9, 3.926878549489854*^9}, {
   3.9268785838102484`*^9, 3.9268785870153728`*^9}, {3.926878626195988*^9, 
   3.926878627936429*^9}, {3.9268787637185693`*^9, 3.926878777568534*^9}, {
   3.9268789431855526`*^9, 3.9268789536501913`*^9}, 3.926879009395851*^9, {
   3.9268791837639647`*^9, 3.926879188993251*^9}, {3.9268792769301906`*^9, 
   3.926879278306017*^9}},
 CellLabel->"In[568]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanBoilerEfficiencyByDay", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "dayData", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"NumberQ", "[", "#", "]"}], "&&", 
          RowBox[{"0", "<", "#"}]}], "&"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", "!=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NormalizeDate", "[", 
            RowBox[{
             RowBox[{"dayData", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Mean", "[", "#", "]"}]}], "}"}], ",", "Nothing"}], "]"}], 
       "&"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"dayData", ",", "boilerEfficiencyHourlyByDay"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.92687919646801*^9, 3.9268792072180986`*^9}},
 CellLabel->"In[569]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "meanBoilerEfficiencyByDay", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9268792504220047`*^9, 3.9268792582249794`*^9}},
 CellLabel->"In[570]:="],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0}, {0.2, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{16.483432084716398`, 29.717020543384518`}, {
           30.883484999312152`, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.2, 0}, {0.4, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{29.217020543384518`, 42.45060900205264}, {
           25.49420499793647, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.4, 0}, {0.6, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{41.95060900205264, 55.18419746072075}, {
           17.410284995872953`, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.8, 23.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{54.68419746072075, 
           67.91778591938888}, {-28.398595015820334`, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 23]& ,
        TagBoxNote->"23"],
       StyleBox["23", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[23, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {1., 29.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{67.41778591938888, 
           80.651374378057}, {-44.56643501994737, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 29]& ,
        TagBoxNote->"29"],
       StyleBox["29", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[29, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.2, 26.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.151374378057, 
           93.38496283672511}, {-36.48251501788385, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 26]& ,
        TagBoxNote->"26"],
       StyleBox["26", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[26, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.2, 0}, {1.4, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{92.88496283672511, 106.11855129539323`}, {
           30.883484999312152`, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.4, 0}, {1.6, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{105.61855129539323`, 118.85213975406135`}, {
           25.49420499793647, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.8, 0}, {5., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{322.08955509275125`, 335.3231435514194}, {
           30.883484999312152`, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.6, 0}, {7.8, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{500.3597935141049, 513.593381972773}, {
           30.883484999312152`, 34.07812499999999}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.040999999999999995`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0, 2.05}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268792547044263`*^9, 3.92687928632262*^9}},
 CellLabel->"Out[570]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"boilerEfficiencyEstimate", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "meanBoilerEfficiencyByDay", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boilerEfficiencyEstimate", "=", "0.9835433845947968`"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268793122925196`*^9, 3.9268793135370817`*^9}, {
  3.926879345763065*^9, 3.926879361281663*^9}},
 CellLabel->"In[44]:="],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"2\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Transpose\\\", \\\"[\\\", \
\\\"meanBoilerEfficiencyByDay\\\", \\\"]\\\"}]\\) does not exist.\"", 2, 44, 
   1, 30419994271241779544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9271161972069273`*^9, 3.9271221514804535`*^9, 
  3.927132238588624*^9, 3.9272939434833317`*^9, 3.9273549025789957`*^9, 
  3.927390576369069*^9, 3.9274548916430354`*^9, 3.9274574474719453`*^9, 
  3.9274585912804403`*^9, 3.927699231014392*^9, 3.927705905781358*^9, 
  3.927794636416173*^9, 3.9277962977764626`*^9, 3.9277971991595273`*^9, 
  3.9277976616897073`*^9, 3.9277980108191895`*^9, 3.9277981158944645`*^9, 
  3.927798185756935*^9, 3.9277985811237636`*^9, 3.92780577280991*^9, 
  3.9278764982612133`*^9, 3.927879421317396*^9, 3.9278795487076597`*^9, 
  3.927879655701231*^9, 3.927952898291808*^9, 3.9283908408460155`*^9, 
  3.9284053284723835`*^9},
 CellLabel->"During evaluation of In[44]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"meanBoilerEfficiencyByDay", ",", 
   RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9268790139353504`*^9, 3.9268792098249493`*^9}, {
  3.926879241952983*^9, 3.9268792466727533`*^9}},
 CellLabel->"In[571]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwl1A1UU2UYB/ABQQhmCwtCTDeE6VDgDkNPQbKLSRIoMxFJEcdXJCjbQUIR
KAKB+NBNG5Cc0OGIFhRniIoOKDQIAYUJmnyI8k0KV66AnlByPffZPWdn53fu
e5/3+b/vfS83XPJZlDGLxQqFH/MPl9yeS5H6ljr+8hnaC9zoD+aNcy7q1c8Z
04lgm7JLmvPnRxlzSsHSaKvEb9SDjEXt4FwrOmvGn2Kc9gxst4VtITKZYaxZ
aU+RgSleGrriCeNBX/APV+WDqoClQjA7Aczhu07EcVYyFp4F9+uDzO+ljzDj
pTfA7VZdvScGHjNWzoCtzRp4o4uxvm75KoqcHW9XWERg/5rrDlAvSxHobXGH
MdvGkSI7hlv6braMMRaS4OaQ1rpfgqexfiy4q7V4OuvhFNYvAFcvqSnpcMF+
dX+AFV2yzpxevM96DCY8PMND3TGveBOPIi+5nIuMVvfj+kyALX/qTbkgn8D1
eWs1RX73zDpfcv0Rro8H+Hv9wKYE1ST2GwXeeNIm2KMN8wpHwbIio+aWIqwv
XbKGIiuCtmWUq/7B+U+AszPfuVN+boAxUQsePtbnqL+H+cVDYL/jfZHPZ7C+
3JJPkQ3dlS3pMYb9dQd3BBT11Jmi6f1g9WrZvM+XuJ6cXHCE6Y7QvF2YX3QR
3FhjaVJWiU57AP48LvbvqqVPcT/dnCjyr3qHM0YyrMfeB3ZaZbFHVzmLebLB
yintVLg51pdWg9fznyr8OrE/ZT9YEK8mJsZxfXSmayky4drPttwtOJ5FgL0y
p+1janA+Yg9Y+3rKVU/Hecx7HCx7kbk7pAD7k1eBF0vMuu0DDHl7wCq7sKqc
bbgftPE6ikz1vamgL6M5zmC7Q9KkWgXWF+0G5y1IXCXD+Hzat+AoSdD+nUOG
vHfBshGbdwWm+Dyb5UyRVOmNCJ3xOOZ1Aie5OZq9KR7CvIHgdf3p6gMpuJ/K
r8Gx+44e/MAH8+vUYLf4IFG1wJC3G9wUFr8o7Uecn/gPHLW9IJ1lbtjPHS4U
+UaZj1F+SRvmSwbXygqtyWocL3oBzm0VlPtwDf07uFLkyeq6yK252L9mO/jI
RFJeflMj5jkKDnlNHNwWjfXZKrB4WWHJBhrHC2+BM3+t/6RhBL8HSi5BkeUW
zdraTqwvnwOXZWTGUaexf3qrgCLnGjtKe7RYj3MYnFJ5oZjbjedNVAJe62wH
VzvOb+cGeRP5bhUUnk+2D9gpqKGZ5Ynvg1AKvuJeOHbLG8+ftBi8ImOSFsTg
fWUT+KvQI9p/efg9Ytmup8jNdz/dsHce94fYDD513+psUzLmER8CkzyBKjkH
n5cXgY1SQzJ2LnuI63kNrNWfqXlC4H16EuydOv/2rgd4PjnW71OkP1tim23Y
f5EQ7DV7LJy/YDjfMeBYc2LuQxO8r1GAD/x2nxwUYv+Dv4N5vn2EYzK+L+xH
4IPJ/mtEhzG/9CN3OK8fX+mzfA+fV0aDX4o3+l1egeN1p8BhsfTeV4sM36N6
cMDCWPCft9HEOPiLVy/Nbp+e9PofOcBbgQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.9096864*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.9077856*^9, 
        FormBox[
         StyleBox["\"Nov\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9103776*^9, 
        FormBox[
         StyleBox["\"Dec\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         StyleBox["\"Jan\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9157344*^9, 
        FormBox[
         StyleBox["\"Feb\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.91824*^9, 
        FormBox[
         StyleBox["\"Mar\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9209184*^9, 
        FormBox[
         StyleBox["\"Apr\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.9077856*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9103776*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.913056*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9157344*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.91824*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9209184*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.9096864*^9, 3.9205728*^9}, {0, 1.7191267385200995`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.926879018216075*^9, 3.9268790450606723`*^9}, {
   3.926879094680827*^9, 3.9268791235650387`*^9}, {3.9268791553982005`*^9, 
   3.926879178384697*^9}, 3.926879210059533*^9, 3.9268792470473957`*^9, 
   3.9268792864465714`*^9},
 CellLabel->"Out[571]="]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["szob\[AAcute]k h\[ODoubleAcute]dinamik\[AAcute]ja", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594544697137`*^9, 3.926859468549678*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"HeatingCurve", "[", 
   RowBox[{"externalTemp_", ",", "maxTemp_", ",", "minTemp_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "supplyTemp", "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{
     "Define", " ", "the", " ", "relationship", " ", "between", " ", 
      "external", " ", "temperature", " ", "and", " ", "supply", " ", "water",
       " ", "temperature"}], "*)"}], 
    RowBox[{
     RowBox[{"supplyTemp", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"externalTemp", "<=", 
         RowBox[{"-", "10"}]}], ",", "maxTemp", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"externalTemp", ">=", "25"}], ",", "minTemp", ",", 
          RowBox[{"maxTemp", "-", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"maxTemp", "-", "minTemp"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"25", "+", "10"}], ")"}]}], 
            RowBox[{"(", 
             RowBox[{"externalTemp", "+", "10"}], ")"}]}]}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "supplyTemp"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268447239039755`*^9, 3.926844724847884*^9}, {
   3.926844968668647*^9, 3.9268449697033753`*^9}, 3.927124586441078*^9},
 CellLabel->"In[46]:="],

Cell[CellGroupData[{

Cell["h\[ODoubleAcute]karakterisztik\[AAcute]k becsl\[EAcute]se", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9266928701258516`*^9, 
   3.9266928866663456`*^9}, {3.9266929545196357`*^9, 3.926692988227791*^9}, {
   3.9268572563778825`*^9, 3.9268572599423947`*^9}, {3.926879719807562*^9, 
   3.926879719881859*^9}, {3.928399203505023*^9, 3.9283992366466637`*^9}, {
   3.9283994709781833`*^9, 3.928399479070511*^9}}],

Cell[CellGroupData[{

Cell["burkol\[OAcute]fel\[UDoubleDot]letek h\[ODoubleAcute]konduktivit\
\[AAcute]sa (W/K)", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9266928701258516`*^9, 
   3.9266928866663456`*^9}, {3.9266929545196357`*^9, 
   3.9266929945634117`*^9}, {3.92839944787611*^9, 3.928399481925788*^9}, {
   3.9283996732375727`*^9, 3.92839967736689*^9}, {3.9284021420222034`*^9, 
   3.9284021428583975`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"calculationSpan", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spanError", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minTempDiffAcrossWall", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomEnvelopeThermalResistanceEstimations", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "roomHeatCapacity", ",", "calculationData", ",", "timeVector", ",", 
         "TimeNearestFunction", ",", "PositionFinder"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"roomHeatCapacity", "=", 
         RowBox[{
          RowBox[{"roomAreas", "[", 
           RowBox[{"[", "room", "]"}], "]"}], "roomHeight", " ", 
          "airSpecificMass", " ", "airSpecificHeatCapacity"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"calculationData", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                    RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dayN", " ", "24", " ", "60"}], "+", 
                    RowBox[{"Range", "[", 
                    RowBox[{"5", ",", 
                    RowBox[{"24", " ", "60"}], ",", "5"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", 
                    RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                    "}"}], "\[IndentingNewLine]", "]"}], ",", 
                   "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dayN", ",", "1", ",", 
                   RowBox[{"Length", "[", "seasonDays", "]"}]}], "}"}]}], 
                "]"}], ",", "None"}], "]"}], ",", "1"}], "]"}], ",", 
           RowBox[{
            RowBox[{"NumberQ", "[", 
             RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"timeVector", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", "calculationData", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"TimeNearestFunction", "=", 
         RowBox[{"Nearest", "[", "timeVector", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PositionFinder", "[", "val_", "]"}], ":=", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"timeVector", ",", 
             RowBox[{
              RowBox[{"TimeNearestFunction", "[", "val", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Module", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "pos2", ",", "periodData", ",", "\[CapitalDelta]t", ",", 
              "\[CapitalDelta]T", ",", "externalTempAverage", ",", 
              "roomTempAverage", ",", "periodDerivedParameters", ",", 
              "Tdiff"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"pos2", "=", 
              RowBox[{"PositionFinder", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"calculationData", "[", 
                  RowBox[{"[", "pos1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", "calculationSpan"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"periodData", "=", 
              RowBox[{"calculationData", "[", 
               RowBox[{"[", 
                RowBox[{"pos1", ";;", "pos2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"\[CapitalDelta]t", "=", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"periodData", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"periodData", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"periodDerivedParameters", "=", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"\[CapitalDelta]t", "-", "calculationSpan"}], 
                    "]"}], ")"}], "/", "calculationSpan"}], "<", 
                 "spanError"}], ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "1", " ", "\[CapitalDelta]t", " ", "is", " ", "in", " ", 
                  "the", " ", "desired", " ", "range"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Total", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", "periodData", "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "==", "0"}], ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "2", " ", "no", " ", "heating", " ", "during", " ", 
                  "period"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"Differences", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", "periodData", "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "<", "0"}], 
                ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "3", " ", "monotonous", " ", "cooling", " ", "during", " ", 
                  "period"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Mean", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", "periodData", "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
                RowBox[{"(*", 
                 RowBox[{"4", " ", "avg", " ", "room", " ", "temp"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"Mean", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", "periodData", "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
                RowBox[{"(*", 
                 RowBox[{"5", " ", "avg", " ", "external", " ", "temp"}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Quiet", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"periodData", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"periodData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"60", "\[CapitalDelta]t"}], ")"}]}], "]"}]}], 
               RowBox[{"(*", 
                RowBox[{"6", " ", 
                 RowBox[{
                 "\[CapitalDelta]T", " ", "/", " ", "\[CapitalDelta]t"}]}], 
                "*)"}], "\[IndentingNewLine]", "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Tdiff", "=", 
              RowBox[{
               RowBox[{"periodDerivedParameters", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "-", 
               RowBox[{"periodDerivedParameters", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"periodDerivedParameters", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "&&", "\[IndentingNewLine]", 
                
                RowBox[{"periodDerivedParameters", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "&&", "\[IndentingNewLine]", 
                
                RowBox[{"periodDerivedParameters", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "&&", "\[IndentingNewLine]", 
                
                RowBox[{"minTempDiffAcrossWall", "<=", "Tdiff"}], "&&", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"periodDerivedParameters", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "<", "0"}], "&&", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"roomHeatCapacity", " ", 
                  RowBox[{"periodDerivedParameters", "[", 
                   RowBox[{"[", "6", "]"}], "]"}]}], "!=", "0"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Tdiff", "/", 
                RowBox[{"Abs", "[", 
                 RowBox[{"(", 
                  RowBox[{"roomHeatCapacity", " ", 
                   RowBox[{"periodDerivedParameters", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], ")"}], "]"}]}], ",", 
               RowBox[{"(*", 
                RowBox[{"R_total", " ", "calculation"}], "*)"}], 
               "\[IndentingNewLine]", "Nothing"}], "\[IndentingNewLine]", 
              "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"pos1", ",", "1", ",", 
            RowBox[{"Length", "[", "calculationData", "]"}]}], "}"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwlzE0ogwEAh/EXB1+vEC0fa03KymGK2cVhmzYmDe065Ws4mbUylvloWVNq
tVITa6lNiCWHxYjNWLssbeygSFvNRs3COFg72P91ePrdnobRael4PkEQ9Fyw
LXJbEBS+CwKWkSL4eCAjoa5ysQx6+zgMyFmzMiEtWdUEM1wpG36L+d2QFNnE
MNhMcEM5l0KTg/A3bp6AWV+rAorNq2pY6LPrYFRNW4faZ4MFnlumbDBRW+OE
XXNhF6TLwpfwS++6pn6Njie4fHQYg8Lizxdo1GTSUB5LlN7l5DlvymFqeKEC
PlwpqqGqJ10HJSYrE9b7dSxI3/W2Qzc/jwsdbqUIelpU/0psA3BHEqe8UNKG
oJC0U3JPImOQ3cmSw+zxjBGuvG1swh/F2R5kiDsclIZUyX3Olo8oCU16LQ9u
z/YK4P7plgYmPdZ5SAb6bdD/arbDP63L7y4=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<roomEnvelopeThermalResistanceEstimations.mx\>\""}], ",", 
   "roomEnvelopeThermalResistanceEstimations"}], "]"}]], "Input",
 CellChangeTimes->{{3.9283994259793615`*^9, 3.928399432971508*^9}},
 CellLabel->"In[302]:="],

Cell[BoxData["\<\"C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\\
kazankontroll-dashboard\\\\analysis\\\\\
roomEnvelopeThermalResistanceEstimations.mx\"\>"], "Output",
 CellChangeTimes->{3.928399433732592*^9},
 CellLabel->"Out[302]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"Flatten", ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", "10", "]"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"GetMeanAndSEM", "[", 
               RowBox[{"1", "/", "#"}], "]"}], "&"}], ",", 
             "roomEnvelopeThermalResistanceEstimations"}], "]"}]}], 
          StyleBox["}",
           FontWeight->"Bold"]}], 
         StyleBox["]",
          FontWeight->"Bold"]}], 
        StyleBox["[",
         FontWeight->"Bold"], 
        RowBox[{
         StyleBox["[",
          FontWeight->"Bold"], "roomsWithTempData", "]"}], "]"}]}], "]"}], 
     "]"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "Black", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", "10", "]"}], ",", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", 
             RowBox[{"roomNames", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "10"}], "]"}], "]"}]}], "]"}]}], "}"}], 
         "]"}], ",", "Automatic"}], "}"}]}],
     FontWeight->"Bold"], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"False", ",", "False", ",", "True"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9283976576176977`*^9, 3.9283977008988953`*^9}, {
   3.928397736551408*^9, 3.928397770997924*^9}, 3.9283978606055074`*^9, {
   3.9283979734609156`*^9, 3.928397982880741*^9}, {3.928398696502454*^9, 
   3.928398697680086*^9}, {3.9283987867568493`*^9, 3.9283987873831725`*^9}, 
   3.928399181201349*^9, {3.928399246696375*^9, 3.9283992470662146`*^9}},
 CellLabel->"In[294]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
    PointBox[{{1., 0.9982577999173019}, {2., 0.46863221112434744`}, {3., 
     0.4613273636460981}, {4., 0.7076400111322203}, {5., 
     1.2682439879749117`}, {6., 1.0221875156356737`}, {7., 
     1.2950835880618299`}, {9., 3.605230507310251}, {10., 
     2.309339847023162}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 0.22894685209435384`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5, 10.5}, {0.22894685209435384`, 3.9223588454378397`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{{{Null, {
       GrayLevel[0], 
       Thickness[Large], {
        LineBox[{{1, 0.9903305606706616}, {1, 1.0061850391639422`}}], 
        LineBox[{{2, 0.4652613391830658}, {2, 0.4720030830656291}}], 
        LineBox[{{3, 0.4578937041887077}, {3, 0.46476102310348855`}}], 
        LineBox[{{4, 0.7022747015316136}, {4, 0.713005320732827}}], 
        LineBox[{{5, 1.2591851719605935`}, {5, 1.2773028039892298`}}], 
        LineBox[{{6, 1.0132987765806498`}, {6, 1.0310762546906975`}}], 
        LineBox[{{7, 1.2862609741651367`}, {7, 1.303906201958523}}], 
        LineBox[{{9, 3.520482680734406}, {9, 3.6899783338860956`}}], 
        LineBox[{{10, 2.283633381336762}, {10, 2.3350463127095615`}}]}}}}},
  Ticks->{{{1, 
      FormBox[
       RotationBox["\"ovi\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {2, 
      FormBox[
       RotationBox["\"PK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {3, 
      FormBox[
       RotationBox["\"SZGK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {4, 
      FormBox[
       RotationBox[
       "\"G\[OAcute]lyairoda\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {5, 
      FormBox[
       RotationBox["\"M\[EAcute]rce\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {6, 
      FormBox[
       RotationBox[
       "\"vend\[EAcute]gt\[EAcute]r\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {7, 
      FormBox[
       RotationBox["\"kisterem\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {8, 
      FormBox[
       RotationBox[
       "\"traf\[OAcute]h\[AAcute]z\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {9, 
      FormBox[
       RotationBox["\"Oktopusz\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {10, 
      FormBox[
       RotationBox["\"Lahmacun\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.9283976510048943`*^9, 3.9283976852841983`*^9}, {
   3.928397747134443*^9, 3.9283977713161373`*^9}, 3.9283978608179255`*^9, 
   3.9283979834139767`*^9, {3.9283986895327024`*^9, 3.9283987178582096`*^9}, 
   3.9283987877756987`*^9, 3.9283991819550953`*^9, {3.928399243853979*^9, 
   3.92839924778154*^9}},
 CellLabel->"Out[294]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"roomEnvelopeThermalConductivities", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"1", "/", "#"}], "]"}], "&"}], ",", 
      "roomEnvelopeThermalResistanceEstimations"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"K", "/", "W"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9266912468891897`*^9, 3.9266912717767906`*^9}, {
  3.9266915099624243`*^9, 3.9266915174286976`*^9}, {3.9266915759689026`*^9, 
  3.9266917003689656`*^9}, {3.9266930334624357`*^9, 3.9266930365255704`*^9}, {
  3.9267747723093357`*^9, 3.9267748351909046`*^9}, {3.9267748906215973`*^9, 
  3.926774937670786*^9}, {3.926774976414113*^9, 3.9267750102423487`*^9}, {
  3.926775042007206*^9, 3.9267750495258427`*^9}, {3.9267751223876085`*^9, 
  3.92677512331205*^9}, {3.9267752939819145`*^9, 3.9267753152125883`*^9}, {
  3.9267773073494196`*^9, 3.926777308332925*^9}, {3.9267775596686893`*^9, 
  3.9267775672963753`*^9}, {3.9283993245199995`*^9, 3.928399359506132*^9}},
 CellLabel->"In[296]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomEnvelopeThermalConductivities", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.9982577999173019`", ",", "0.46863221112434744`", ",", 
     "0.4613273636460981`", ",", "0.7076400111322203`", ",", 
     "1.2682439879749117`", ",", "1.0221875156356737`", ",", 
     "1.2950835880618299`", ",", "None", ",", "3.605230507310251`", ",", 
     "2.309339847023162`"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926857211045501*^9, 3.9268572145654335`*^9}, 
   3.9283993687657843`*^9, {3.9283994166330404`*^9, 3.92839941855904*^9}},
 CellLabel->"In[47]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["radi\[AAcute]torok konvekt\[IAcute]v h\[ODoubleAcute]\[AAcute]tad\
\[AAcute]si t\[EAcute]nyez\[ODoubleAcute]je (W/m^2 K)", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9266928701258516`*^9, 
   3.9266928866663456`*^9}, {3.9266929545196357`*^9, 3.926693001261739*^9}, {
   3.92839949707211*^9, 3.92839950034881*^9}, {3.9283995798392196`*^9, 
   3.9283995829046354`*^9}, {3.928399661748289*^9, 3.92839967046014*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"calculationSpan", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spanError", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomRadiatorConvectiveHeatTransferCoefficientEstimations", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "roomHeatCapacity", ",", "roomEnvelopeThermalConductivity", ",", 
         "roomRadiatorArea", ",", "calculationData", ",", "timeVector", ",", 
         "TimeNearestFunction", ",", "PositionFinder"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"roomHeatCapacity", "=", 
         RowBox[{
          RowBox[{"roomAreas", "[", 
           RowBox[{"[", "room", "]"}], "]"}], "roomHeight", " ", 
          "airSpecificMass", " ", "airSpecificHeatCapacity"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"roomEnvelopeThermalConductivity", "=", 
         RowBox[{"roomEnvelopeThermalConductivities", "[", 
          RowBox[{"[", "room", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"roomRadiatorArea", "=", 
         RowBox[{
          RowBox[{"roomRadiatorLength", "[", 
           RowBox[{"[", "room", "]"}], "]"}], "radiatorHeight", " ", "2"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"calculationData", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                    RowBox[{"{", "}"}]}], "&&", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
                    RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"dayN", " ", "24", " ", "60"}], "+", 
                    RowBox[{"Range", "[", 
                    RowBox[{"5", ",", 
                    RowBox[{"24", " ", "60"}], ",", "5"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", 
                    RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"HeatingCurve", "[", 
                    RowBox[{"#", ",", "64", ",", "45"}], "]"}], "&"}], ",", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                    "]"}], ",", "\[IndentingNewLine]", "None"}], 
                  "\[IndentingNewLine]", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dayN", ",", "1", ",", 
                   RowBox[{"Length", "[", "seasonDays", "]"}]}], "}"}]}], 
                "]"}], ",", "None"}], "]"}], ",", "1"}], "]"}], ",", 
           RowBox[{
            RowBox[{"NumberQ", "[", 
             RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"timeVector", "=", 
         RowBox[{
          RowBox[{"Transpose", "[", "calculationData", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"TimeNearestFunction", "=", 
         RowBox[{"Nearest", "[", "timeVector", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PositionFinder", "[", "val_", "]"}], ":=", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"timeVector", ",", 
             RowBox[{
              RowBox[{"TimeNearestFunction", "[", "val", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Module", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "pos2", ",", "periodData", ",", "\[CapitalDelta]t", ",", 
              "\[CapitalDelta]T", ",", "externalTempAverage", ",", 
              "roomTempAverage", ",", "periodDerivedParameters", ",", 
              "TdiffExt", ",", "TdiffHeater", ",", "Qroom", ",", "Qheater", 
              ",", "Qwall"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"pos2", "=", 
              RowBox[{"PositionFinder", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"calculationData", "[", 
                  RowBox[{"[", "pos1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", "calculationSpan"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"periodData", "=", 
              RowBox[{"calculationData", "[", 
               RowBox[{"[", 
                RowBox[{"pos1", ";;", "pos2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"\[CapitalDelta]t", "=", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"periodData", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"periodData", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"periodDerivedParameters", "=", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"\[CapitalDelta]t", "-", "calculationSpan"}], 
                    "]"}], ")"}], "/", "calculationSpan"}], "<", 
                 "spanError"}], ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "1", " ", "\[CapitalDelta]t", " ", "is", " ", "in", " ", 
                  "the", " ", "desired", " ", "range"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Mean", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", "periodData", "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "==", "1"}], ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "2", " ", "constant", " ", "heating", " ", "during", " ", 
                  "period"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"Differences", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", "periodData", "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ">", "0"}], 
                ",", 
                RowBox[{"(*", 
                 RowBox[{
                 "3", " ", "monotonous", " ", "warming", " ", "during", " ", 
                  "period"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Mean", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", "periodData", "]"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
                RowBox[{"(*", 
                 RowBox[{"4", " ", "avg", " ", "room", " ", "temp"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"Mean", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", "periodData", "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
                RowBox[{"(*", 
                 RowBox[{"5", " ", "avg", " ", "external", " ", "temp"}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Mean", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", "periodData", "]"}], "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "]"}], ",", 
                RowBox[{"(*", 
                 RowBox[{"6", " ", "avg", " ", "heater", " ", "temp"}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Quiet", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"periodData", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"periodData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"60", "\[CapitalDelta]t"}], ")"}]}], "]"}]}], 
               RowBox[{"(*", 
                RowBox[{"7", " ", 
                 RowBox[{
                 "\[CapitalDelta]T", " ", "/", " ", "\[CapitalDelta]t"}]}], 
                "*)"}], "\[IndentingNewLine]", "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"TdiffExt", "=", 
              RowBox[{
               RowBox[{"periodDerivedParameters", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "-", 
               RowBox[{"periodDerivedParameters", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"TdiffHeater", "=", 
              RowBox[{
               RowBox[{"periodDerivedParameters", "[", 
                RowBox[{"[", "6", "]"}], "]"}], "-", 
               RowBox[{"periodDerivedParameters", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Qwall", "=", 
              RowBox[{"TdiffExt", " ", "roomEnvelopeThermalConductivity"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Qroom", "=", 
              RowBox[{"roomHeatCapacity", " ", 
               RowBox[{"periodDerivedParameters", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Qheater", "=", 
              RowBox[{"Qroom", "+", "Qwall"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"periodDerivedParameters", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "&&", "\[IndentingNewLine]", 
                
                RowBox[{"periodDerivedParameters", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "&&", "\[IndentingNewLine]", 
                
                RowBox[{"periodDerivedParameters", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "&&", "\[IndentingNewLine]", 
                
                RowBox[{
                 RowBox[{"periodDerivedParameters", "[", 
                  RowBox[{"[", "7", "]"}], "]"}], ">", "0"}], "&&", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"roomHeatCapacity", " ", 
                  RowBox[{"periodDerivedParameters", "[", 
                   RowBox[{"[", "7", "]"}], "]"}]}], "!=", "0"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Qheater", "/", 
                RowBox[{"(", 
                 RowBox[{"roomRadiatorArea", " ", "TdiffHeater"}], ")"}]}], 
               ",", 
               RowBox[{"(*", 
                RowBox[{"h", " ", "calculation"}], "*)"}], 
               "\[IndentingNewLine]", "Nothing"}], "\[IndentingNewLine]", 
              "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{"pos1", ",", "1", ",", 
            RowBox[{"Length", "[", "calculationData", "]"}]}], "}"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.928391710464868*^9, 3.9283917470503902`*^9}, {
   3.9283917788647285`*^9, 3.928391787939637*^9}, {3.928391921634614*^9, 
   3.9283919409544926`*^9}, {3.928391984622569*^9, 3.928392050569211*^9}, {
   3.9283922500089054`*^9, 3.9283922611021786`*^9}, {3.928394160005226*^9, 
   3.9283944672443233`*^9}, {3.928394548746945*^9, 3.928394609586668*^9}, {
   3.928394676268467*^9, 3.928394773149051*^9}, {3.9283949127020116`*^9, 
   3.9283949802459087`*^9}, {3.928395035425382*^9, 3.928395176753162*^9}, {
   3.928395214639682*^9, 3.9283952546361217`*^9}, {3.9283952937976007`*^9, 
   3.9283954934106426`*^9}, {3.9283955573964233`*^9, 3.928395567532381*^9}, {
   3.928395679827338*^9, 3.9283958712466297`*^9}, {3.928395902147125*^9, 
   3.928395907918082*^9}, {3.9283959394611626`*^9, 3.9283959916027155`*^9}, {
   3.928396036955237*^9, 3.928396092086805*^9}, {3.928396206082899*^9, 
   3.9283962080391536`*^9}, {3.928396331523398*^9, 3.928396331568329*^9}, {
   3.928396421103241*^9, 3.928396423196978*^9}, {3.928396536701262*^9, 
   3.9283965411264973`*^9}, {3.9283965750223646`*^9, 
   3.9283965772268286`*^9}, {3.9283969156779766`*^9, 
   3.9283970127785053`*^9}, {3.9283971258260446`*^9, 
   3.9283971618525534`*^9}, {3.928397911453994*^9, 3.9283979270605693`*^9}, {
   3.9283983318913045`*^9, 3.9283983463583527`*^9}, {3.9283987968662915`*^9, 
   3.92839881296105*^9}, {3.928399130493658*^9, 3.928399140747165*^9}, 
   3.928399972498864*^9, 3.9284000635820627`*^9, {3.9284010905308247`*^9, 
   3.9284011413318863`*^9}, {3.9284013308260965`*^9, 3.928401331957135*^9}},
 CellLabel->"In[313]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
  "Length", ",", "roomRadiatorConvectiveHeatTransferCoefficientEstimations"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.9284012672809734`*^9, 3.9284012687824187`*^9}},
 CellLabel->"In[316]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4718", ",", "2069", ",", "5014", ",", "4095", ",", "5871", ",", "2603", 
   ",", "6043", ",", "0", ",", "275", ",", "228"}], "}"}]], "Output",
 CellChangeTimes->{3.928401288465665*^9, 3.9284017516994934`*^9},
 CellLabel->"Out[316]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<roomRadiatorConvectiveHeatTransferCoefficientEstimations.mx\>\""}], 
   ",", "roomRadiatorConvectiveHeatTransferCoefficientEstimations"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.928401955750139*^9, 3.9284019655843105`*^9}},
 CellLabel->"In[320]:="],

Cell[BoxData["\<\"C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\dev\\\\\
kazankontroll-dashboard\\\\analysis\\\\\
roomRadiatorConvectiveHeatTransferCoefficientEstimations.mx\"\>"], "Output",
 CellChangeTimes->{3.9284019664003625`*^9},
 CellLabel->"Out[320]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomRadiatorConvectiveHeatTransferCoefficients", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.15250229638926738`", ",", "0.168703360142732`", ",", 
     "0.16873584837102043`", ",", "0.4008207756252688`", ",", 
     "0.15917869450450967`", ",", "0.1431452552523042`", ",", 
     "0.2362745543903207`", ",", "None", ",", "0.5166470326430609`", ",", 
     "3.1308364744008643`"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9268550969000025`*^9, 3.9268551016370926`*^9}, {
  3.9268572338612833`*^9, 3.926857236672238*^9}, {3.9284019986764407`*^9, 
  3.9284020189486885`*^9}},
 CellLabel->"In[48]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomRadiatorThermalConductivities", "=", 
   RowBox[{"{", 
    RowBox[{
    "1.0248154317358766`", ",", "0.5668432900795795`", ",", 
     "0.6074490541356735`", ",", "0.8657728753505807`", ",", 
     "1.31799959049734`", ",", "1.2367750053799085`", ",", 
     "1.360941433288247`", ",", "0.`", ",", "1.7359340296806842`", ",", 
     "3.757003769281037`"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9284036468630953`*^9, 3.9284036533130274`*^9}, {
  3.928403749895935*^9, 3.9284037560461473`*^9}, {3.9284038594410343`*^9, 
  3.928403859635992*^9}},
 CellLabel->"In[49]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["\[EAcute]rtelmez\[EAcute]s", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9266928701258516`*^9, 
   3.9266928866663456`*^9}, {3.9266929545196357`*^9, 3.926693001261739*^9}, {
   3.926695275431343*^9, 3.926695277536728*^9}, {3.9266965685743895`*^9, 
   3.9266965696959896`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Range", "[", "9", "]"}], "-", "0.15"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"roomEnvelopeThermalConductivities", ",", "0.01"}], "]"}], 
         "[", 
         RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Range", "[", "9", "]"}], "+", "0.15"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "roomRadiatorLength", " ", "radiatorHeight"}], 
             ")"}], "roomRadiatorConvectiveHeatTransferCoefficients"}], ",", 
           "0.01"}], "]"}], "[", 
         RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.03", "]"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "9", "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", 
           RowBox[{"roomNames", "[", 
            RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], "]"}]}], "}"}], 
       "]"}], ",", "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9267759166057167`*^9, 3.926776137526061*^9}, {
  3.927186905470107*^9, 3.927186906767083*^9}, {3.9284020513057985`*^9, 
  3.9284020650009565`*^9}, {3.928402193500947*^9, 3.9284022039972897`*^9}},
 CellLabel->"In[327]:="],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQbQwGr+0ZwOCD/ayZIPDXXnSd+8MqkXv2Z8+AAJtD
oS3X9cUFd6F8Pocdcq2vA3c8s08DA2GHILDAFyhfHMr/AOVLO0D0weTlHYCG
A23gcQBbv1nRoRrErWJygMh/sofph7iP0cEOZL3tIyif0wFku1zrY6h7BRxA
slzXX0P5Ig7yYAVfoXwJqPxnKF/G4fBXjZj+Q18h/vFRgMr/hvKVHCD+54O7
hwEKYO5B5XPC+TD3oPJF0PgSaHwZOB/mHlS+Epp9r+1R9f+1R1EPjC9UPh+c
D4svVL44Gl8ajS+Paj8wvrC7ZzT9oKcfAN0VR2Y=
    "], {{{}, {}, {}, {}, {}, 
      {RGBColor[0, 0, 1], Thickness[0.03], LineBox[{28, 1}], LineBox[{29, 2}],
        LineBox[{30, 3}], LineBox[{31, 4}], LineBox[{32, 5}], 
       LineBox[{33, 6}], LineBox[{34, 7}], LineBox[{35, 8}], 
       LineBox[{36, 9}]}, {}, 
      {RGBColor[1, 0, 0], Thickness[0.03], LineBox[{19, 10}], 
       LineBox[{20, 11}], LineBox[{21, 12}], LineBox[{22, 13}], 
       LineBox[{23, 14}], LineBox[{24, 15}], LineBox[{25, 16}], 
       LineBox[{26, 17}], LineBox[{27, 18}]}}, {
      {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[{37, 38, 39, 40, 41, 42, 43, 44, 45}]}, 
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[{46, 47, 48, 49, 50, 51, 52, 53, 54}]}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.6770833333333335, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{611.4000000000001, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.6770833333333335, 9.15}, {0, 3.7600000000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox[
       RotationBox["\"ovi\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {2, 
      FormBox[
       RotationBox["\"PK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {3, 
      FormBox[
       RotationBox["\"SZGK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {4, 
      FormBox[
       RotationBox[
       "\"G\[OAcute]lyairoda\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {5, 
      FormBox[
       RotationBox["\"M\[EAcute]rce\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {6, 
      FormBox[
       RotationBox[
       "\"vend\[EAcute]gt\[EAcute]r\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {7, 
      FormBox[
       RotationBox["\"kisterem\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {8, 
      FormBox[
       RotationBox["\"Oktopusz\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {9, 
      FormBox[
       RotationBox["\"Lahmacun\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.926775935548727*^9, 3.926776026828305*^9}, {
   3.926776065760842*^9, 3.9267761379066544`*^9}, 3.926777717812668*^9, 
   3.926777819625354*^9, {3.926777860993817*^9, 3.9267778863263273`*^9}, 
   3.926777931953868*^9, 3.9267780243239574`*^9, 3.9267786137221165`*^9, {
   3.9267786819914*^9, 3.926778702466812*^9}, {3.926779721640651*^9, 
   3.926779763155667*^9}, 3.9268432734927564`*^9, 3.92684505934694*^9, 
   3.9268536515097437`*^9, 3.926854619836331*^9, {3.9271869027538166`*^9, 
   3.927186907249229*^9}, 3.9284020676255226`*^9, 3.928402204575426*^9},
 CellLabel->"Out[327]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "roomRadiatorLength", " ", "radiatorHeight"}], ")"}], 
        "roomRadiatorConvectiveHeatTransferCoefficients"}], ",", "0.01"}], 
      "]"}], "[", 
     RowBox[{"[", "roomsWithTempData", "]"}], "]"}], "/", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"roomEnvelopeThermalConductivities", ",", "0.01"}], "]"}], "[", 
     
     RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Orange", "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.03", "]"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "9", "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", 
           RowBox[{"roomNames", "[", 
            RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], "]"}]}], "}"}], 
       "]"}], ",", "Automatic"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Prolog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.926842188527333*^9, 3.9268422539179316`*^9}, {
  3.9284023068924837`*^9, 3.928402314568043*^9}},
 CellLabel->"In[328]:="],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEf7IN2yLW+DvxgDxVw6Pt1zq02/TOUz+Fwefa9
L8vMv0L5Ag5JxQoXuWbD5EUcNES4Wp0WwvRLOBSDAUxexuEi994L3Hth8goO
q7eXev2/cQ/KV3II1cngE+X+ZQ9zDwMqcEDlcqDxBdD4Imh8CTS+DBpfAY2v
hMYfPOEDAHDrVbg=
    "], {{{}, {}, {}, {}, 
      {RGBColor[1, 0.5, 0], Thickness[0.03], LineBox[{10, 1}], 
       LineBox[{11, 2}], LineBox[{12, 3}], LineBox[{13, 4}], LineBox[{14, 5}],
        LineBox[{15, 6}], LineBox[{16, 7}], LineBox[{17, 8}], 
       LineBox[{18, 9}]}}, 
     {RGBColor[1, 0.5, 0], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6], 
      PointBox[{19, 20, 21, 22, 23, 24, 25, 26, 27}]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8333333333333337, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{599.4, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.8333333333333337, 9.}, {0, 1.6277056277056279`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Prolog->{
    Dashing[{Small, Small}], 
    LineBox[{{0, 1}, {10, 1}}]},
  Ticks->{{{1, 
      FormBox[
       RotationBox["\"ovi\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {2, 
      FormBox[
       RotationBox["\"PK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {3, 
      FormBox[
       RotationBox["\"SZGK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {4, 
      FormBox[
       RotationBox[
       "\"G\[OAcute]lyairoda\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {5, 
      FormBox[
       RotationBox["\"M\[EAcute]rce\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {6, 
      FormBox[
       RotationBox[
       "\"vend\[EAcute]gt\[EAcute]r\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {7, 
      FormBox[
       RotationBox["\"kisterem\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {8, 
      FormBox[
       RotationBox["\"Oktopusz\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {9, 
      FormBox[
       RotationBox["\"Lahmacun\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.926842189405919*^9, 3.9268422541165504`*^9}, 
   3.9268432828407345`*^9, 3.9268450693367767`*^9, 3.926853652599082*^9, 
   3.9268546211618433`*^9, 3.9284023158910866`*^9},
 CellLabel->"Out[328]="]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["h\[ODoubleAcute]felv\[EAcute]teli ar\[AAcute]nyok szob\[AAcute]nk\
\[EAcute]nt", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.926772856098833*^9, 3.9267728607318115`*^9}, {
   3.92685725182823*^9, 3.92685726621239*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullHeatDynamics", "=", 
   RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Module", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "dayN", ",", "roomEnvelopeThermalConductivity", ",", 
              "roomRadiatorConvectiveHeatTransferCoefficient", ",", 
              "roomTemp", ",", "externalTemp", ",", "heaterTemp", ",", 
              "tempDiffExt", ",", "tempDiffHeater", ",", 
              "roomExternalWallArea", ",", "heatLoss", ",", 
              "roomRadiatorArea", ",", "heatGain"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dayN", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"seasonDays", ",", "day"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"roomEnvelopeThermalConductivity", "=", 
              RowBox[{"roomEnvelopeThermalConductivities", "[", 
               RowBox[{"[", "room", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"roomRadiatorConvectiveHeatTransferCoefficient", "=", 
              RowBox[{"roomRadiatorConvectiveHeatTransferCoefficients", "[", 
               RowBox[{"[", "room", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"roomTemp", "=", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"roomTempsDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"externalTemp", "=", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"externalTempDaily", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"heaterTemp", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"HeatingCurve", "[", 
                  RowBox[{"#", ",", "65", ",", "45"}], "]"}], "&"}], ",", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{"externalTempDaily", "[", 
                   RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tempDiffExt", "=", 
              RowBox[{"roomTemp", "-", "externalTemp"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tempDiffHeater", "=", 
              RowBox[{"heaterTemp", "-", "roomTemp"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"roomRadiatorArea", "=", 
              RowBox[{
               RowBox[{"roomRadiatorLength", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "radiatorHeight", " ", 
               "2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"heatLoss", "=", " ", 
              RowBox[{
              "tempDiffExt", " ", "roomEnvelopeThermalConductivity"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"heatGain", "=", 
              RowBox[{
              "roomRadiatorConvectiveHeatTransferCoefficient", " ", 
               "roomRadiatorArea", " ", "tempDiffHeater"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{"externalTempDaily", "[", 
                   RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", "+", "cycle"}], "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"100", 
                  RowBox[{"Differences", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"heatStockDaily", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "//", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], 
                  "&"}]}], ",", "\[IndentingNewLine]", "heatGain", ",", 
                "\[IndentingNewLine]", "heatLoss", ",", "\[IndentingNewLine]",
                 "externalTemp", ",", "\[IndentingNewLine]", "roomTemp"}], 
               "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]",
            "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"day", ",", 
            RowBox[{"Drop", "[", 
             RowBox[{"heatDataDays", ",", "1"}], "]"}]}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"roomToCycle", ",", "cycle"}], "]"}], "]"}]}], "}"}]}], 
       "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926779579112837*^9, 3.9267795901280007`*^9}, {
   3.9267796466134768`*^9, 3.9267796821033754`*^9}, {3.926779811486763*^9, 
   3.926779811739519*^9}, {3.926779851463575*^9, 3.926780054721218*^9}, {
   3.9267801191397295`*^9, 3.9267801972613335`*^9}, {3.926780246045493*^9, 
   3.9267802991837044`*^9}, {3.92678039609153*^9, 3.92678041078587*^9}, {
   3.926780569322589*^9, 3.9267805699375763`*^9}, {3.9267806571748457`*^9, 
   3.926780750554531*^9}, {3.9267814147307153`*^9, 3.9267814925325966`*^9}, {
   3.9267817216520276`*^9, 3.926781722206208*^9}, {3.9268432395673575`*^9, 
   3.926843239654378*^9}, {3.9268432914243717`*^9, 3.9268432915362396`*^9}, {
   3.9268445604530373`*^9, 3.9268445605275927`*^9}, 3.926845087159276*^9, {
   3.926845476850443*^9, 3.9268454873934307`*^9}, {3.9268457312975903`*^9, 
   3.9268457394732475`*^9}, {3.9268470515053034`*^9, 3.926847101201507*^9}, {
   3.9268471319223905`*^9, 3.9268471470491533`*^9}, {3.9268472100340924`*^9, 
   3.9268472766102734`*^9}, {3.9268473162258387`*^9, 3.926847326977239*^9}, {
   3.926847362145598*^9, 3.9268473886897674`*^9}, {3.9268474269937*^9, 
   3.926847430033286*^9}, {3.926847461203591*^9, 3.9268474613942738`*^9}, {
   3.9268504266445055`*^9, 3.926850455970118*^9}, {3.9268506305643063`*^9, 
   3.9268506322279577`*^9}, {3.9268508203409243`*^9, 
   3.9268508356043386`*^9}, {3.9268509912044516`*^9, 3.926851031747617*^9}, {
   3.926851209251502*^9, 3.9268512111406975`*^9}, {3.9284028434186115`*^9, 
   3.9284029008105917`*^9}, {3.9284029438895473`*^9, 
   3.9284030210793376`*^9}, {3.92840366706746*^9, 3.928403676886411*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingPeriodHeatDynamics", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"roomsOnCycle", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"roomToCycle", ",", "cycle"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Select", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "dataForSeasonByRoom", ",", "heatingStateSwitch", ",", 
            "heatingPeriods"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dataForSeasonByRoom", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Quiet", "[", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"fullHeatDynamics", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomOnCycleN", "]"}], "]"}], ",", "1"}], 
                  "]"}], ",", "ListQ"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"roomOnCycleN", ",", "1", ",", 
                RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"heatingStateSwitch", "=", 
            RowBox[{"Differences", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"dataForSeasonByRoom", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"heatingPeriods", "=", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"First", ",", 
                 RowBox[{"Position", "[", 
                  RowBox[{"heatingStateSwitch", ",", "1"}], "]"}]}], "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"Map", "[", 
                RowBox[{"First", ",", 
                 RowBox[{"Position", "[", 
                  RowBox[{"heatingStateSwitch", ",", 
                   RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"dataForSeasonByRoom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"heatingPeriod", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"heatingPeriod", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "5"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"dataForSeasonByRoom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Module", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", "heatingPeriodDataForRoom", "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"heatingPeriodDataForRoom", "=", 
                    RowBox[{
                    RowBox[{"dataForSeasonByRoom", "[", 
                    RowBox[{"[", "roomOnCycleN", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"heatingPeriod", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ";;", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"heatingPeriod", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", "5"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"dataForSeasonByRoom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Differences", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{"UnixTime", ",", 
                    RowBox[{
                    RowBox[{
                    "Transpose", "[", "heatingPeriodDataForRoom", "]"}], "[", 
                    
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                    "<", 
                    RowBox[{"30", " ", "60"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{
                    "Transpose", "[", "heatingPeriodDataForRoom", "]"}], "[", 
                    
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"heatGainOrLoss", ",", "4", ",", "5"}], "}"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "None"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"roomOnCycleN", ",", "1", ",", 
                   RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
                "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"{", 
              RowBox[{"heatingPeriod", ",", 
               RowBox[{"heatingPeriods", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"229", ",", "191", ",", "208"}], "}"}], "[", 
                   RowBox[{"[", "cycle", "]"}], "]"}]}], "]"}], "]"}]}], 
              "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
        "ListQ"}], "]"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.926850573825241*^9, 3.9268506558099456`*^9}, {
   3.9268508882912664`*^9, 3.9268509742272587`*^9}, {3.92685106981063*^9, 
   3.926851091201768*^9}, {3.926851137314944*^9, 3.926851267985737*^9}, {
   3.926851394019655*^9, 3.9268515809143887`*^9}, 3.9268516119716415`*^9, {
   3.9268521174446754`*^9, 3.9268522704199953`*^9}, {3.92685230096357*^9, 
   3.92685237912284*^9}, {3.9268524515092754`*^9, 3.926852593579957*^9}, {
   3.9268526991895304`*^9, 3.926852845763075*^9}, {3.926852906771334*^9, 
   3.926853072580391*^9}, {3.9268531345500937`*^9, 3.9268531613487716`*^9}, {
   3.9268533220370226`*^9, 3.9268533261335545`*^9}, {3.9268537861648808`*^9, 
   3.9268538864523783`*^9}, {3.9268544265817623`*^9, 
   3.9268544505023465`*^9}, {3.9268546864485097`*^9, 
   3.9268550094153643`*^9}, {3.928403080596401*^9, 3.9284031129986067`*^9}},
 CellLabel->"In[330]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatSumsForHeatingPeriods", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]",
             "}"}], "\[IndentingNewLine]", "&"}], ",", 
          RowBox[{"heatingPeriodHeatDynamics", "[", 
           RowBox[{"[", "cycle", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}],
         ",", "ListQ"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.926852957841633*^9, 3.926852963891345*^9}, {
  3.926853081060339*^9, 3.9268530816675005`*^9}, {3.9268531781335015`*^9, 
  3.926853331747471*^9}, {3.9268535674130836`*^9, 3.926853573092157*^9}, {
  3.926854465813054*^9, 3.9268544668999376`*^9}},
 CellLabel->"In[331]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"cycle", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.9284032275918865`*^9, 3.928403229395731*^9}},
 CellLabel->"In[333]:="],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.928403268692603*^9, 3.928403269510212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatGainOrLoss", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.9284032681145315`*^9, 3.9284032722282314`*^9}},
 CellLabel->"In[334]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"heatSumsForHeatingPeriods", "[", 
           RowBox[{"[", "cycle", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"NumberQ", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{"#", "[", 
              RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}], "]"}], "&"}]}], 
         "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"heatSumsForHeatingPeriods", "[", 
             RowBox[{"[", "cycle", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"NumberQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"#", "[", 
                RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}], "]"}], "&"}]}],
            "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
     "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellLabel->"In[335]:="],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2639.2405063291335`", ",", "3533.8012449561274`"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2500.`", ",", "3308.441448782056`"}], "}"}], ",", 
           TemplateBox[{"226"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{"1937.5`", ",", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"4338.479123178935`", "\[VeryThinSpace]", "+", 
                RowBox[{"1.7359340296806844`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                  "52.69714285714286`", "\[VeryThinSpace]", 
                   "-", "\<\"n\"\>"}], ")"}]}], "+", 
                RowBox[{"1.7359340296806844`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                  "52.73142857142857`", "\[VeryThinSpace]", 
                   "-", "\<\"n\"\>"}], ")"}]}], "+", 
                RowBox[{"1.7359340296806844`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                  "52.77142857142857`", "\[VeryThinSpace]", 
                   "-", "\<\"n\"\>"}], ")"}]}], "+", 
                RowBox[{"1.7359340296806844`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                  "52.78857142857143`", "\[VeryThinSpace]", 
                   "-", "\<\"n\"\>"}], ")"}]}], "+", 
                RowBox[{"1.7359340296806844`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                  "52.81142857142857`", "\[VeryThinSpace]", 
                   "-", "\<\"n\"\>"}], ")"}]}], "+", 
                RowBox[{"3.605230507310251`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "11.53`"}], "+", "\<\"n\"\>"}], ")"}]}], "+", 
                
                RowBox[{"3.605230507310251`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "11.47`"}], "+", "\<\"n\"\>"}], ")"}]}], "+", 
                
                RowBox[{"3.605230507310251`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "11.4`"}], "+", "\<\"n\"\>"}], ")"}]}], "+", 
                RowBox[{"3.605230507310251`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "11.37`"}], "+", "\<\"n\"\>"}], ")"}]}], "+", 
                
                RowBox[{"3.605230507310251`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "11.33`"}], "+", "\<\"n\"\>"}], ")"}]}]}], 
               ")"}]}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                
                ImageSizeCache->{
                 24.945800656359644`, {30.2001953125, 9.7119140625}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{24.5390625, {16.2294921875, 9.7119140625}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 335, 30419898590193766127, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{24.5390625, {16.2294921875, 9.7119140625}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 335, 30419898590193766127, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{24.5390625, {16.2294921875, 9.7119140625}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 335, 30419898590193766127, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               
               ImageSizeCache->{
                20.41943359375, {44.1708984375, 9.7119140625}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30419898590193766127 === $SessionID, 
   Out[335], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.928403273961704*^9},
 CellLabel->"Out[335]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Quiet", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"heatSumsForHeatingPeriods", "[", 
                 RowBox[{"[", "cycle", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"NumberQ", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}], "]"}], 
                 "&"}]}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"1", "+", "heatGainOrLoss"}]}], "}"}], "]"}], "]"}], 
            "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "4000"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "4000"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<cycle \>\"", "<>", 
            RowBox[{"ToString", "[", "cycle", "]"}], "<>", 
            "\"\<\\nheat supply vs heat \>\"", "<>", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<gain\>\"", ",", "\"\<loss\>\""}], "}"}], "[", 
             RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"heatGainOrLoss", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Quiet", "[", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"heatSumsForHeatingPeriods", "[", 
                   RowBox[{"[", "cycle", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"NumberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}], "]"}], 
                   "&"}]}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Mean", "[", 
             RowBox[{"Transpose", "[", 
              RowBox[{"Quiet", "[", 
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"heatSumsForHeatingPeriods", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}]}], "]"}], 
                    "&"}]}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}], "]"}],
               "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "4000"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "4000"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"\"\<cycle \>\"", "<>", 
           RowBox[{"ToString", "[", "cycle", "]"}], "<>", 
           "\"\<\\nheat supply vs mean heat dynamics\>\""}]}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.926853333334646*^9, 3.926853465940298*^9}, {
  3.926855039156852*^9, 3.926855046228924*^9}, {3.9268556870938826`*^9, 
  3.9268556871229515`*^9}, {3.926855742245946*^9, 3.926855915125989*^9}, {
  3.928403166265547*^9, 3.9284031713901196`*^9}},
 CellLabel->"In[336]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbeGyVLl63hKHOrWkYGeRjQ4MINCx2GGLRSbXdzco
X2KpQxpzpJs6jP+g1aHQT1lWe8EsCJ+h02Ff2oy0Cw+mQvmZDvnSO7arPe12
uDDriepXpzYHmw9nDWvZZ0DkHfod1HwYLcQezobweaYD6bdbZwgvdGgIf62r
od3tkLG/aMr62/Mh8gYLHep2b3lYor4Awj9Q5HBD7MoMjoOToPYxMNgu7bX4
LT8Zqn6iw+egE7yHRCZC+AXTHZSD2Yqq6+c7NOzzMnQsz3Qov81zdYV7J1z/
RyahYi/DToeE/0Awv9Ohf9Gs/40OUP84zHdgjPOfqKOy3IGBWcD/+IPJDp+u
ndMu8l/tsOBZTPLW/IkOnxzdxDwloO77ssuhJj1jw9rmUw4Ns/J/Tssvc7g9
Q+uHt9okB4Vjfm+OmE11WGRUckF29WwHByHrjcLafQ6vHJZ9b89dCtFvO9nh
0dNLXwMmLILwhdoc7lmbqryZ0elwYJ51+bs7zQ4faqpjS463wOMry1+uYkvg
agcAacmnrg==
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 1\\nheat supply vs heat gain\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbeGyVLl63hKH+bWnLq3lW+rAAAIdix0OXA3+dlV5
IYQvsdThDtdjVTumRRD+g1aHvV0CrQd390D4DJ0OAr6hnzzyW6H8TId1YQpJ
vnk1DhdmPVH96tTmIBie/JPbuxMi79DvUC6pWKJSOxHC55nuwPuUk7Xw5mSH
hvDXuhra3Q572eJy9P5PgsgbLHSQYlEy5GKaCuEfKHI4lWWQ7LyzA2ofA4PA
E9cHrPXtUPUTHe6tXVSZsbcFwi+Y7rDkeGpCRMpEh4Z9XoaO5ZkOVw6v9Kja
XAvXH9WfPfXi73qHhP9AML/TwSjFVeNfBNR8h/kOc6palBfUzXBgYBbwP/5g
skOhWdfqg2dmOyx4FpO8NX+ig9ZaqTlf70P992WXQ1C3Xbyb3i6Hhln5P6fl
lzlEJ19gu9FX4aBwzO/NEbOpDnx7bjuYvm90cBCy3iis3eewNyptifKdXoh+
28kOR8RjJXe5ToDwhdoc7r3anC5kUepwYJ51+bs7zQ41greD3uZnwuMrjPvb
r9yGhQ4A33emlA==
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 1\\nheat supply vs heat loss\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQbeGyVLl63hIHv9TjNrNmr3ZgAIGOxQ5TlCezPrqx
EsKXWOpwpcMr0s19FYT/oNXhxcmr71nrp0D4DJ0Oi9se5lv5TIDyMx2SlVO2
qPG1OlyY9UT1q1Obw6Oz9tMbwyZB5B36Hc4ZCYbJrp8G4fNMd2j7VGgRyDDb
oSH8ta6GdreDUHIGQ37uTIi8wUKH7r2uvypXzILwDxQ52PrkeK2S7Yfax8Dg
On2DRt39Pqj6iQ6PVs70KivuhvALpjuk8Jq9fFk4w6Fhn5ehY3mmw4Z7G/5s
EmiB6/d/+njezOktDgn/gWB+p0PIqnudDdug/nGY77DibEfgvo0LHRiYBfyP
P5jsIPrzZMPLWUscFjyLSd6aP9HB5q1PrdsEqH++7HKYdI25IOPsYYeGWfk/
p+WXOWzaeO8no1eHg8IxvzdHzKY6hHAUWsQETnJwELLeKKzd5zDz+v4HE57M
gei3nexwpLCRSW8z1L9CbQ7LZrCvqZJqcjgwz7r83Z1mB39Ho035ytXw+ErQ
7bIUzFzmAADRO6wJ
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 1\\nheat supply vs mean heat dynamics\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{2269.412901667056, 5754.034885915595}, {
         2404.7248803827642`, 4150.397281774534}, {1300., 
         3227.7748878313955`}, {3000., 5619.277984170081}, {2400., 
         6340.230938076755}, {1716.666666666697, 4505.426528756754}, {1900., 
         3659.729453195918}, {0., 4328.929320598994}, {4400., 
         8082.097481520116}, {2100., 4283.10444931585}, {2300., 
         5476.062863586307}, {2400., 5453.197302382026}, {0., 
         4260.561887689508}, {457.6126674786792, 1143.8003642298947`}, {1700.,
          3733.0477932867116`}, {3200., 7879.381119601141}, {1750., 
         4100.95840313977}}]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 2\\nheat supply vs heat gain\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{2269.412901667056, 1695.4730084133225`}, {
         2404.7248803827642`, 1454.8728885631072`}, {1300., 
         1068.4021634057558`}, {3000., 2096.0195584678813`}, {2400., 
         1567.0617100520594`}, {1716.666666666697, 1452.5953515098772`}, {
         1900., 1328.8096734786288`}, {0., 1419.8425862842385`}, {4400., 
         2706.2682032638695`}, {2100., 1076.7252093841569`}, {2300., 
         1187.0075886178297`}, {2400., 1241.7697439457747`}, {0., 
         569.3651501925212}, {457.6126674786792, 210.01963976491385`}, {1700.,
          674.0073642017915}, {3200., 1316.9906382340057`}, {1750., 
         543.6848172162074}}]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 2\\nheat supply vs heat loss\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        PointBox[{{2269.412901667056, 3724.7539471644586`}, {
         2404.7248803827642`, 2802.6350851688208`}, {1300., 
         2148.0885256185757`}, {3000., 3857.6487713189813`}, {2400., 
         3953.646324064407}, {1716.666666666697, 2979.0109401333157`}, {1900.,
          2494.269563337273}, {0., 2874.3859534416165`}, {4400., 
         5394.182842391992}, {2100., 2679.9148293500034`}, {2300., 
         3331.535226102068}, {2400., 3347.4835231639}, {0., 
         2414.9635189410146`}, {457.6126674786792, 676.9100019974043}, {1700.,
          2203.5275787442515`}, {3200., 4598.185878917573}, {1750., 
         2322.3216101779885`}}]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 2\\nheat supply vs mean heat dynamics\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
U+9HYaudKCIgBf8D4JPHXg==
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 3\\nheat supply vs heat gain\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
uqeP6JXvgWC+6yrvIPwPfPGifg==
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 3\\nheat supply vs heat loss\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
qP3xWEeWWVggwP8BJg66kg==
         "]]}, {{}, {}}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"cycle 3\\nheat supply vs mean heat dynamics\"", TraditionalForm],
      PlotRange->{{0, 4000}, {0, 4000}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.9268533938157396`*^9, 3.926853398509559*^9}, {
   3.9268534335174227`*^9, 3.9268534566760817`*^9}, 3.926853487652006*^9, {
   3.926855035326331*^9, 3.9268550471777935`*^9}, 3.9268556881151333`*^9, {
   3.9268557619788756`*^9, 3.9268558418960695`*^9}, 3.9268558843297806`*^9, 
   3.9268559178335724`*^9, 3.9284032773562145`*^9},
 CellLabel->"Out[336]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "/", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "&"}], ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"heatingPeriodHeatDynamics", "[", 
          RowBox[{"[", "cycle", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"NumberQ", "[", 
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], "&"}]}], 
        "]"}]}], "\[IndentingNewLine]", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.926856142099778*^9, 3.9268563189496703`*^9}, {
  3.926856384103232*^9, 3.92685647152549*^9}},
 CellLabel->"In[337]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7EUc77l47b9kDxVwsA3y8TGphvE5HNZkXLgd
vx7GF3BYkjX/bsIjGF/EQcPN8bjIRhhfwsFvxzyOM3thfBmHGzwV512OwfgK
DhqMm72mn4PxlRycu8rlrP/D+CoOTgwl8ZE/YXw1hw5GxTSJ3zC+hsPDK7d4
dkpchvK1HNxzFGbd+Q6T13FgXtbrd48BJq/n8DP/+ILN4jC+gcPJxZOXtyrB
+IYOy34v/DHJAcY3chA5diHuGhOMb+ywjlsifYYkjG/i0HyQf7HhL5h9pg4P
WZavdnwN45s5zCr86HfuAYxv7qCzw9ZJ5TGMb+HgkMVulnUDxrd0aAzTj3M8
DeNbOWhpid5YCw8va4ezeS9MN8PDy8YhlfVz9voDML6tw9SPeiflH16yBwBy
V4NP
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7B1ObHmptPyIPVTAIWlpSqqpM4zP4ZAiZ9Yq
rw/jCzh8Fs/89qofxhdxmKQzQSLl8WEoX8Jhqatbj+5tGF/Ggf/CHZu/Z2F8
BYdJv2JFbs6H6VdyqGOoyfl5AcZXcVj/m3XL1mMwvprDfxOzu0fg8hoOwoKM
P5pTYHwth6sqjzYJaMP4Og6tis/sZlvA+HoOmrFnFtxfCuMbONS8iN715iyM
b+iQ+1Sww2QejG/kcLSvUfgzXL2xw2rPxhfztsD4Jg7XuxjZ3j2E8U0dFoca
JlftgvHNHDIqmP8++AbjmzsoeJw8frkUxrdwSA7YP7V7MYxv6fC2tS0pcy6M
b+WwPWNpfuVaGN/a4cnJ1y7XFsD4Ng7eP95GbymC8W0dtN/5SkqdOWIPAIFa
iNE=
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7NPXKitPKntoDxVw6Fjb0DBjI4zP4SDgcsqg
Yw6ML+CwiWXa5StZML6Iw4lA62lz1sH4Eg4FQvNn+K2C8WUc+o/yeMathPEV
HI4z9IvuK4DxlRz2Wy0VVfGB8VUcPje4PF4aCOOrOfz5uHCqkx+Mr+HgHTip
uikKxtdyWOFg3uZbCePrOMxd8p8jqxDG13PYaZDpvs4Lxjdw+GM8/6+jNYxv
6HCxY1WipgWMb+TgarmdWyIUxjd22Lc8WIjHDcY3cejY831NNtw8Uwd1jYSJ
B6JhfDMHyUy3mQ/g7jd3eHTx3ZsfcP9aOJwo6/n/HB5+lg7Om91+sBTD+FYO
ewV4dnjB3W/toHjtwuUCuH4bB6v/XMa/m2B8W4dV3KJTM2Me2gMAQ+eDCQ==

        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 29.}, {0, 0.5529291639153806}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{{1., 0.08407111502496736}, {2., 0.09728102419353352}, {3., 
        0.0954836386484055}, {4., 0.09453501646651817}, {5., 
        0.08846520342601913}, {6., 0.093386329960054}, {7., 
        0.10296951487273918`}, {8., 0.09051986637009413}, {9., 
        0.09344589166125045}, {10., 0.095147611231466}, {11., 
        0.09754586120278386}, {12., 0.09291560757998739}, {13., 
        0.09053524566209194}, {14., 0.09718832776035752}, {15., 
        0.0943731889014472}, {16., 0.09509075508367443}, {17., 
        0.0911307670526114}}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{{1., 0.12055445560233395`}, {2., 0.1439825743945447}, {3., 
        0.14975512696107166`}, {4., 0.1444265654774703}, {5., 
        0.13506832892936801`}, {6., 0.14171828292032476`}, {7., 
        0.1517380818320455}, {8., 0.13988018715989467`}, {9., 
        0.14368482505504787`}, {10., 0.14688325744910946`}, {11., 
        0.1509174407416878}, {12., 0.14394566440118753`}, {13., 
        0.13737382278914564`}, {14., 0.1391998757602807}, {15., 
        0.13507222457331794`}, {16., 0.142141530420054}, {17., 
        0.13730361540995772`}}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{{1., 0.1805057525524984}, {2., 0.20850118629510125`}, {3., 
        0.20810865965657968`}, {4., 0.2023687534539971}, {5., 
        0.19102250079622643`}, {6., 0.201016968880253}, {7., 
        0.22097418142681935`}, {8., 0.19221108563128494`}, {9., 
        0.19973857201727943`}, {10., 0.20276415533652092`}, {11., 
        0.21506816234135878`}, {12., 0.2020681193521249}, {13., 
        0.19839199676376373`}, {14., 0.2098121803413579}, {15., 
        0.20385683685915842`}, {16., 0.2079503606090595}, {17., 
        0.1972919443827629}}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{{1., 0.6148686768202004}, {2., 0.5502352151168206}, {3., 
        0.5466525747339432}, {4., 0.5586696646020145}, {5., 
        0.5854439668483864}, {6., 0.5638784182393682}, {7., 
        0.5243182218683959}, {8., 0.5773888608387261}, {9., 
        0.5631307112664223}, {10., 0.5552049759829036}, {11., 
        0.5364685357141696}, {12., 0.5610706086667003}, {13., 
        0.5736989347849987}, {14., 0.5537996161380039}, {15., 
        0.5666977496660766}, {16., 0.5548173538872121}, {17., 
        0.5742736731546678}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 17.}, {0, 0.6148686768202004}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
5RobG4z337/AswuT
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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

        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.4592962687976676},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 158.}, {0.4592962687976676, 0.5366333580820993}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9268561429443755`*^9, 3.9268561896241107`*^9}, {
   3.926856222867847*^9, 3.9268563197922196`*^9}, {3.9268563899395947`*^9, 
   3.926856471754196*^9}, 3.9284033177942433`*^9},
 CellLabel->"Out[337]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"roomNames", "[", 
     RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Position", "[", 
     RowBox[{"roomToCycle", ",", "2"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9271839630692587`*^9, 3.9271840009541655`*^9}},
 CellLabel->"In[1049]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SZGK\"\>", ",", "\<\"G\[OAcute]lyairoda\"\>", 
   ",", "\<\"M\[EAcute]rce\"\>", ",", "\<\"Lahmacun\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.9271839857650347`*^9, 3.9271840011925845`*^9}},
 CellLabel->"Out[1049]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeatTakeupRatios", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"roomToCycle", ",", "cycle"}], "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Mean", "[", "\[IndentingNewLine]", 
               RowBox[{"Map", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "/", 
                   RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "heatGainOrLoss", "]"}], "]"}], "]"}]}], 
                  "\[IndentingNewLine]", "&"}], ",", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"heatingPeriodHeatDynamics", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"NumberQ", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], "&"}]}],
                   "]"}]}], "\[IndentingNewLine]", "]"}], 
               "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", "1"}],
         "]"}], ",", "First"}], "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9268569666448994`*^9, 3.9268571368691206`*^9}, {
  3.926857951670927*^9, 3.92685797119061*^9}},
 CellLabel->"In[338]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeatTakeupRatios", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.29522621054727105`", ",", "0.16036902560122543`", ",", 
     "0.09376970382929418`", ",", "0.14139093293393193`", ",", 
     "0.20245008333506742`", ",", "0.47801108487195876`", ",", 
     "0.5219889151280412`", ",", "None", ",", "0.5444047638515036`", ",", 
     "0.5623892799017065`"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9284033851612196`*^9, 3.928403417339035*^9}},
 CellLabel->"In[50]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"roomThermalConductivities", "[", 
       RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], ",", 
     RowBox[{"roomHeatTakeupRatios", "[", 
      RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], "\[IndentingNewLine]",
     "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9268571346786523`*^9, 3.9268571688697033`*^9}, {
   3.926857301239088*^9, 3.9268573281487303`*^9}, 3.926857985271764*^9, {
   3.9284034307252145`*^9, 3.9284034361981897`*^9}},
 CellLabel->"In[347]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1.0017452406410874`, 0.29522621054727105`}, {2.133869538333247,
      0.16036902560122543`}, {2.167658107458673, 0.09376970382929418}, {
     1.4131479060942373`, 0.14139093293393193`}, {0.7884918118924148, 
     0.20245008333506742`}, {0.978294084699444, 0.47801108487195876`}, {
     0.7721509323553083, 0.5219889151280412}, {0.2773747747813408, 
     0.5444047638515036}, {0.4330241827719913, 
     0.5623892799017065}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.167658107458673}, {0, 0.5623892799017065}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.926857126235075*^9, 3.926857169080497*^9}, {
   3.926857303089029*^9, 3.9268573284284477`*^9}, {3.9268579799737916`*^9, 
   3.9268579859083505`*^9}, 3.9284034368664885`*^9},
 CellLabel->"Out[347]="]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["szezon teljes\[IAcute]tm\[EAcute]nye", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}}],

Cell[CellGroupData[{

Cell["szob\[AAcute]k fogyaszt\[AAcute]sa", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859512566615*^9}, {
   3.926859645892888*^9, 3.9268596481655593`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeatTakeupDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"roomsWithTempData", ",", "room"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Dimensions", "[", 
             RowBox[{
              RowBox[{"heatStockDaily", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{"heatStockDaily", "[", 
                  RowBox[{"[", 
                   RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Differences", "[", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{"heatStockDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], 
                RowBox[{"roomHeatTakeupRatios", "[", 
                 RowBox[{"[", "room", "]"}], "]"}]}], "//", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], 
                "&"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
           "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"dayN", ",", "1", ",", 
           RowBox[{"Length", "[", "seasonDays", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "None"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.9268585288532534`*^9, 3.9268585586010065`*^9}, {
  3.92685883826442*^9, 3.9268588935583982`*^9}, {3.9268591230310936`*^9, 
  3.9268591473195696`*^9}},
 CellLabel->"In[51]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"gasPricePerCubicMeter", " ", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", "#", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
           "&"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"roomHeatTakeupDaily", "[", 
             RowBox[{"[", "room", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
              RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
         "energyContentInGasPerCubicMeter", " ", "boilerEfficiencyEstimate"}],
          ")"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", "Purple", "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.03", "]"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "9", "]"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{"#", ",", 
              RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ",", 
           RowBox[{"roomNames", "[", 
            RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], "]"}]}], "}"}], 
       "]"}], ",", "Automatic"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.926868304939475*^9, {3.926868336860354*^9, 3.9268683728112416`*^9}, {
   3.9268686461094637`*^9, 3.92686865260558*^9}, {3.9268709276448464`*^9, 
   3.92687092927661*^9}, {3.926879373987962*^9, 3.92687939197734*^9}},
 CellLabel->"In[349]:="],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEf7PN+PZ1RV8bjCBVwUJ1YGa7+5p8DhMvhsOTe
jH6tJV+gfAEH/vtVzPvl/0P5Ig5CF47beHuwQfVLOMQl6DMs4+eF8mUcNFYU
XZHeww/lKzh8sfr+29ZOCspXcmjYM0+F7bOcI8w9DKjAAZXLgcYXQOOLoPEl
0PgyaHwFNL4SGn/whA8Af+1MDA==
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.5, 0, 0.5], Thickness[0.03], LineBox[{10, 1}], 
       LineBox[{11, 2}], LineBox[{12, 3}], LineBox[{13, 4}], LineBox[{14, 5}],
        LineBox[{15, 6}], LineBox[{16, 7}], LineBox[{17, 8}], 
       LineBox[{18, 9}]}}, 
     {RGBColor[0.5, 0, 0.5], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6], 
      PointBox[{19, 20, 21, 22, 23, 24, 25, 26, 27}]}}], {{}, {}}},
  AspectRatio->0.5,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8333333333333337, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{360.6, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.8333333333333337, 9.}, {0, 507073.53576178104`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox[
       RotationBox["\"ovi\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {2, 
      FormBox[
       RotationBox["\"PK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {3, 
      FormBox[
       RotationBox["\"SZGK\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {4, 
      FormBox[
       RotationBox[
       "\"G\[OAcute]lyairoda\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {5, 
      FormBox[
       RotationBox["\"M\[EAcute]rce\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {6, 
      FormBox[
       RotationBox[
       "\"vend\[EAcute]gt\[EAcute]r\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {7, 
      FormBox[
       RotationBox["\"kisterem\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {8, 
      FormBox[
       RotationBox["\"Oktopusz\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}, {9, 
      FormBox[
       RotationBox["\"Lahmacun\"", BoxRotation -> 1.5707963267948966`], 
       TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.926868305624221*^9, {3.926868337873387*^9, 3.926868373278723*^9}, 
   3.926870929900652*^9, {3.9268793928260713`*^9, 3.926879396012122*^9}, 
   3.9284034603019094`*^9},
 CellLabel->"Out[349]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomCoolingVsPriceFit", "=", 
   RowBox[{"Fit", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Round", "[", 
          RowBox[{"room", ",", "0.01"}], "]"}], "[", 
         RowBox[{"[", "roomsWithTempData", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"gasPricePerCubicMeter", " ", 
             RowBox[{
              RowBox[{"Map", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Total", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", "#", "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], 
                 "\[IndentingNewLine]", "&"}], ",", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"roomHeatTakeupDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                    RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{
               "energyContentInGasPerCubicMeter", " ", 
                "boilerEfficiencyEstimate"}], ")"}]}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], "/", 
         "1000"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"Log", "[", "x", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "x"}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.926869204348192*^9, 3.926869250058776*^9}, {
   3.9268692994840097`*^9, 3.926869334731818*^9}, {3.9268693723652253`*^9, 
   3.926869409963724*^9}, 3.926869443021703*^9, 3.9268794045630856`*^9, {
   3.928403625964101*^9, 3.9284036263872623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"roomEnvelopeThermalConductivities", ",", "0.01"}], "]"}], 
       "[", 
       RowBox[{"[", "roomsWithTempData", "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"gasPricePerCubicMeter", " ", 
           RowBox[{
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", "#", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]",
                "&"}], ",", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"roomHeatTakeupDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                  RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{
             "energyContentInGasPerCubicMeter", " ", 
              "boilerEfficiencyEstimate"}], ")"}]}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], "/", 
       "1000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"roomNames", "[", 
       RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "plotData", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<h\[UDoubleAcute]l\[EAcute]si konduktivit\[AAcute]s vs f\
\[UDoubleAcute]t\[EAcute]si k\[ODoubleDot]lts\[EAcute]g\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "->", "0.025"}], ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4.5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "+", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "0"}], "}"}]}]}], "]"}], 
        "\[IndentingNewLine]", "}"}], "&"}], ",", "plotData"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.9268687214355235`*^9, 3.926868765516765*^9}, {
  3.926868827884602*^9, 3.926868983852687*^9}, {3.9268690195488844`*^9, 
  3.9268691212925525`*^9}, {3.9268691686057415`*^9, 3.926869183099547*^9}, {
  3.9268692610208054`*^9, 3.9268692709101315`*^9}, {3.9268694527827854`*^9, 
  3.9268696064687243`*^9}, {3.9268696379645133`*^9, 3.926870100384511*^9}, {
  3.926870198940938*^9, 3.92687019924406*^9}, {3.9268794092199135`*^9, 
  3.9268794490390825`*^9}, {3.9284035895367517`*^9, 3.9284035998542056`*^9}, {
  3.9284039941602836`*^9, 3.9284040699543657`*^9}, {3.928404157979953*^9, 
  3.9284042105686097`*^9}},
 CellLabel->"In[397]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0, 0, 1], PointSize[0.025], AbsoluteThickness[1.6], 
    PointBox[{{1., 233.16782465739868`}, {0.47000000000000003`, 
     126.65845885616967`}, {0.46, 84.54666005789727}, {0.71, 
     127.4839383496011}, {1.27, 182.53740467798764`}, {1.02, 
     238.06875009036338`}, {1.3, 259.9714787343156}, {3.61, 
     429.9674960602962}, {2.31, 507.07353576178105`}}]}, {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     InsetBox[
      FormBox["\"ovi\"", TraditionalForm], {1.4, 233.16782465739868`}]}, {
     InsetBox[
      FormBox["\"PK\"", TraditionalForm], {0.8700000000000001, 
      126.65845885616967`}]}, {
     InsetBox[
      FormBox["\"SZGK\"", TraditionalForm], {0.8600000000000001, 
      84.54666005789727}]}, {
     InsetBox[
      FormBox["\"G\[OAcute]lyairoda\"", TraditionalForm], {
      1.1099999999999999`, 127.4839383496011}]}, {
     InsetBox[
      FormBox["\"M\[EAcute]rce\"", TraditionalForm], {1.67, 
      182.53740467798764`}]}, {
     InsetBox[
      FormBox["\"vend\[EAcute]gt\[EAcute]r\"", TraditionalForm], {1.42, 
      238.06875009036338`}]}, {
     InsetBox[
      FormBox["\"kisterem\"", TraditionalForm], {1.7000000000000002`, 
      259.9714787343156}]}, {
     InsetBox[
      FormBox["\"Oktopusz\"", TraditionalForm], {4.01, 429.9674960602962}]}, {
    
     InsetBox[
      FormBox["\"Lahmacun\"", TraditionalForm], {2.71, 507.07353576178105`}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"h\[UDoubleAcute]l\[EAcute]si konduktivit\[AAcute]s vs f\[UDoubleAcute]t\
\[EAcute]si k\[ODoubleDot]lts\[EAcute]g\"", TraditionalForm],
  PlotRange->{{0, 4.5}, {0, 507.07353576178105`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268690905453415`*^9, 3.9268691215531096`*^9}, 
   3.926869183848322*^9, 3.926869271160901*^9, {3.9268694669076953`*^9, 
   3.926869606817373*^9}, {3.926869669503481*^9, 3.9268696751962743`*^9}, 
   3.926869707092298*^9, {3.9268697629461775`*^9, 3.9268700567901087`*^9}, {
   3.9268700975475354`*^9, 3.926870101318819*^9}, 3.926870199638316*^9, 
   3.9268709384113827`*^9, {3.9268794100640917`*^9, 3.926879449483842*^9}, 
   3.9284035342679377`*^9, {3.9284035925200205`*^9, 3.928403600399604*^9}, {
   3.9284040178470373`*^9, 3.928404062968688*^9}, {3.9284041583050385`*^9, 
   3.92840421075134*^9}},
 CellLabel->"Out[398]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"roomRadiatorThermalConductivities", ",", "0.01"}], "]"}], 
       "[", 
       RowBox[{"[", "roomsWithTempData", "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"gasPricePerCubicMeter", " ", 
           RowBox[{
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", "#", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]",
                "&"}], ",", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"roomHeatTakeupDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                  RowBox[{"{", "}"}]}], "&"}]}], "]"}]}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{
             "energyContentInGasPerCubicMeter", " ", 
              "boilerEfficiencyEstimate"}], ")"}]}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], "/", 
       "1000"}], ",", "\[IndentingNewLine]", 
      RowBox[{"roomNames", "[", 
       RowBox[{"[", "roomsWithTempData", "]"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "plotData", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<melegd\[EAcute]si konduktivit\[AAcute]s vs \
f\[UDoubleAcute]t\[EAcute]si k\[ODoubleDot]lts\[EAcute]g\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "->", "0.025"}], ",", "Red"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4.5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "+", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "0"}], "}"}]}]}], "]"}], 
        "\[IndentingNewLine]", "}"}], "&"}], ",", "plotData"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.926870120413103*^9, 3.9268702030693035`*^9}, {
  3.9268794529158945`*^9, 3.9268794600991483`*^9}, {3.928404224185055*^9, 
  3.928404283023944*^9}},
 CellLabel->"In[401]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0, 0], PointSize[0.025], AbsoluteThickness[1.6], 
    PointBox[{{1.02, 233.16782465739868`}, {0.5700000000000001, 
     126.65845885616967`}, {0.61, 84.54666005789727}, {0.87, 
     127.4839383496011}, {1.32, 182.53740467798764`}, {1.24, 
     238.06875009036338`}, {1.36, 259.9714787343156}, {1.74, 
     429.9674960602962}, {3.7600000000000002`, 
     507.07353576178105`}}]}, {{}, {}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{
     InsetBox[
      FormBox["\"ovi\"", TraditionalForm], {1.42, 233.16782465739868`}]}, {
     InsetBox[
      FormBox["\"PK\"", TraditionalForm], {0.9700000000000001, 
      126.65845885616967`}]}, {
     InsetBox[
      FormBox["\"SZGK\"", TraditionalForm], {1.01, 84.54666005789727}]}, {
     InsetBox[
      FormBox["\"G\[OAcute]lyairoda\"", TraditionalForm], {1.27, 
      127.4839383496011}]}, {
     InsetBox[
      FormBox["\"M\[EAcute]rce\"", TraditionalForm], {1.7200000000000002`, 
      182.53740467798764`}]}, {
     InsetBox[
      FormBox["\"vend\[EAcute]gt\[EAcute]r\"", TraditionalForm], {
      1.6400000000000001`, 238.06875009036338`}]}, {
     InsetBox[
      FormBox["\"kisterem\"", TraditionalForm], {1.7600000000000002`, 
      259.9714787343156}]}, {
     InsetBox[
      FormBox["\"Oktopusz\"", TraditionalForm], {2.14, 429.9674960602962}]}, {
    
     InsetBox[
      FormBox["\"Lahmacun\"", TraditionalForm], {4.16, 507.07353576178105`}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"melegd\[EAcute]si konduktivit\[AAcute]s vs f\[UDoubleAcute]t\[EAcute]si \
k\[ODoubleDot]lts\[EAcute]g\"", TraditionalForm],
  PlotRange->{{0, 4.5}, {0, 507.07353576178105`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.926870122079854*^9, {3.9268701569598618`*^9, 3.9268702033358746`*^9}, 
   3.9268709404207735`*^9, {3.9268794537842093`*^9, 3.9268794612454576`*^9}, 
   3.9284035389861183`*^9, {3.9284042768457823`*^9, 3.9284042833440895`*^9}},
 CellLabel->"Out[402]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["szob\[AAcute]k c\[EAcute]ltart\[AAcute]sa", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859512566615*^9}, {
   3.926859645892888*^9, 3.9268596617172375`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomSetTempDiffDaily", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"roomsWithTempData", ",", "room"}], "]"}], ",", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Dimensions", "[", 
              RowBox[{
               RowBox[{"roomsWithTempData", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "!=", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Select", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{"heatingStateDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", 
                    RowBox[{"roomToCycle", "[", 
                    RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                  "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                "}"}], "\[IndentingNewLine]", "]"}], ",", 
              RowBox[{
               RowBox[{"NumberQ", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"dayN", ",", "1", ",", 
            RowBox[{"Length", "[", "seasonDays", "]"}]}], "}"}]}], "]"}], ",",
         "\[IndentingNewLine]", "None"}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.926859824343012*^9, 3.9268598300058565`*^9}, {
   3.9268599201985025`*^9, 3.9268599450145655`*^9}, {3.926859978200989*^9, 
   3.926860176296383*^9}, 3.9268605417532654`*^9, {3.926860647528303*^9, 
   3.926860653130523*^9}, {3.926863731241061*^9, 3.9268637314015856`*^9}, 
   3.926863774874185*^9, {3.926871188205798*^9, 3.9268711979336987`*^9}},
 CellLabel->"In[52]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["k\[ODoubleDot]lts\[EAcute]g vs komfort", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859512566615*^9}, {
   3.926859645892888*^9, 3.9268596617172375`*^9}, {3.9268602135895863`*^9, 
   3.92686021555757*^9}, {3.9268664679776196`*^9, 3.926866472025009*^9}, {
   3.926867013288995*^9, 3.926867013337655*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomHeatVsTempDiffDaily", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"roomsWithTempData", ",", "room"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Select", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Map", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", "\[IndentingNewLine]", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                   RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"NormalizeDate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"gasPricePerCubicMeter", " ", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    "energyContentInGasPerCubicMeter", " ", 
                    "boilerEfficiencyEstimate"}], ")"}]}]}]}], 
                   "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                  "None"}], "\[IndentingNewLine]", "]"}], "&"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"roomHeatTakeupDaily", "[", 
                RowBox[{"[", "room", "]"}], "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Map", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Dimensions", "[", "#", "]"}], "!=", 
                    RowBox[{"{", "}"}]}], "&&", 
                   RowBox[{"#", "!=", 
                    RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"NormalizeDate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}], ",", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], "&"}]}], 
                    "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
                   "}"}], ",", "\[IndentingNewLine]", "None"}], 
                 "\[IndentingNewLine]", "]"}], "&"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"roomSetTempDiffDaily", "[", 
                RowBox[{"[", "room", "]"}], "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Dimensions", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{
            RowBox[{"Dimensions", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "!=", 
            RowBox[{"{", "}"}]}]}], "&"}]}], "\[IndentingNewLine]", "]"}], 
       ",", "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.926861396350427*^9, 3.926861480135667*^9}, {
  3.9268615250972414`*^9, 3.9268615869362373`*^9}, {3.9268616223911057`*^9, 
  3.926861767897725*^9}, {3.9268638504755774`*^9, 3.926863865593788*^9}, {
  3.926863962794757*^9, 3.92686397600965*^9}, {3.926879478051508*^9, 
  3.9268794802179604`*^9}},
 CellLabel->"In[404]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"extTBinWidth", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomPerformanceExternalTempBins", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"roomsWithTempData", ",", "room"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "roomPerformaceCharacteristics", ",", "externalTempRange", ",", 
           "binnedData"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomPerformaceCharacteristics", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"Map", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"NormalizeDate", ",", "seasonDays"}], "]"}], ",", 
                    
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                  "}"}], "\[IndentingNewLine]", "&"}], ",", 
                RowBox[{"roomHeatVsTempDiffDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"NumberQ", "[", 
               RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"externalTempRange", "=", 
           RowBox[{"MinMax", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", "roomPerformaceCharacteristics", "]"}],
              "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"binnedData", "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Quiet", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"extT", "+", "extTBinWidth"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{"roomPerformaceCharacteristics", ",", 
                    RowBox[{
                    RowBox[{"Between", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"extT", ",", 
                    RowBox[{"extT", "+", "extTBinWidth"}]}], "}"}]}], "]"}], 
                    "&"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"extT", ",", 
                  RowBox[{"Floor", "[", 
                   RowBox[{
                    RowBox[{"externalTempRange", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{
                    RowBox[{"externalTempRange", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], ",", 
                  "extTBinWidth"}], "}"}]}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"NumberQ", "[", 
               RowBox[{"Total", "[", 
                RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], "&"}]}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.926866165003194*^9, 3.926866213531004*^9}, {
  3.9268662440598807`*^9, 3.926866254139367*^9}, {3.9268663127472725`*^9, 
  3.9268663208754787`*^9}, {3.9268664417547894`*^9, 3.926866449691127*^9}, {
  3.9268673399636374`*^9, 3.9268673400421968`*^9}},
 CellLabel->"In[405]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"roomNames", "[", 
          RowBox[{"[", "room", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{"\"\<k\[ODoubleDot]lts\[EAcute]g (Ft)\>\"", ",", 
             RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
           "\"\<elt\[EAcute]r\[EAcute]s (\[Degree]C)\>\""}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "350"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\[IndentingNewLine]", 
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"Max", "[", "\[IndentingNewLine]", 
                RowBox[{"Map", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"roomHeatVsTempDiffDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}]}], "]"}], 
                "\[IndentingNewLine]", "]"}], ",", "500"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "6"}], "}"}]}], "\[IndentingNewLine]", 
          "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Prolog", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"RGBColor", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"21", "-", "3"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                 RowBox[{"1", "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}]}], ",", 
                 "\[IndentingNewLine]", "0.25"}], "\[IndentingNewLine]", 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"EdgeForm", "[", "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{"Thick", ",", "Dashed", ",", "\[IndentingNewLine]", 
                  RowBox[{"RGBColor", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}], ",", 
                    "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}]}], ",", 
                    "\[IndentingNewLine]", "0.5"}], "\[IndentingNewLine]", 
                   "]"}]}], "\[IndentingNewLine]", "}"}], 
                "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Ellipsoid", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"GetMeanAndSD", "[", 
                   RowBox[{"binData", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                 
                 RowBox[{
                  RowBox[{
                   RowBox[{"GetMeanAndSD", "[", 
                    RowBox[{"binData", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "0.75"}]}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"binData", ",", 
               RowBox[{"roomPerformanceExternalTempBins", "[", 
                RowBox[{"[", "room", "]"}], "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"RGBColor", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}], ",", 
                  "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                  RowBox[{"1", "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"21", "-", "3"}], ")"}]}]}], ",", 
                  "\[IndentingNewLine]", "0.75"}], "\[IndentingNewLine]", 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"PointSize", "->", "0.0125"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Point", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "&"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Quiet", "[", 
                RowBox[{"Map", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"NormalizeDate", ",", "seasonDays"}], "]"}], ",", 
                    
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                    "}"}], "\[IndentingNewLine]", "&"}], ",", 
                  RowBox[{"roomHeatVsTempDiffDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"NumberQ", "[", 
                 RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
       "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], "]"}], "//", 
   RowBox[{
    RowBox[{"ArrayReshape", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "&"}]}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.9268602238628254`*^9, 3.9268602894491444`*^9}, {
   3.92686035620022*^9, 3.926860369543212*^9}, {3.926860410488594*^9, 
   3.9268604174799986`*^9}, {3.9268604925046234`*^9, 
   3.9268604939600334`*^9}, {3.926860614792075*^9, 3.926860625566827*^9}, {
   3.926860682009413*^9, 3.926860698903221*^9}, {3.9268612918491955`*^9, 
   3.926861377256254*^9}, 3.926861858841404*^9, {3.9268619001220903`*^9, 
   3.9268619305202184`*^9}, {3.9268620033679466`*^9, 
   3.9268620410240583`*^9}, {3.926862193688469*^9, 3.9268622049368153`*^9}, {
   3.926862280841036*^9, 3.9268623077989645`*^9}, {3.9268623532752876`*^9, 
   3.9268623547767763`*^9}, {3.9268628791602755`*^9, 
   3.9268629330827136`*^9}, {3.9268629726662245`*^9, 
   3.9268629774003067`*^9}, {3.926863236729605*^9, 3.9268633089225593`*^9}, {
   3.926865021596321*^9, 3.9268650607456455`*^9}, {3.926865399663617*^9, 
   3.926865410667009*^9}, {3.926865536042287*^9, 3.926865549802149*^9}, {
   3.926865586108992*^9, 3.926865587914632*^9}, {3.926865887788702*^9, 
   3.9268659427950487`*^9}, {3.9268662659807534`*^9, 3.926866267610737*^9}, {
   3.9268668653733997`*^9, 3.926866985292948*^9}, {3.9268671545260143`*^9, 
   3.9268671822354693`*^9}, {3.9268672278691034`*^9, 
   3.9268673083322396`*^9}, {3.926867409501134*^9, 3.9268674593090587`*^9}, {
   3.926870983534437*^9, 3.926871003839658*^9}, {3.9268712152147493`*^9, 
   3.9268712166388884`*^9}, {3.9268718209608088`*^9, 3.926871835311129*^9}},
 CellLabel->"In[407]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"ovi\"", TraditionalForm],
      PlotRange->{{0, 5500}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 6], 0.16666666666666666`], 0, 
           NCache[
            Rational[5, 6], 0.8333333333333334], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 6], 0.16666666666666666`], 0, 
             NCache[
              Rational[5, 6], 0.8333333333333334], 0.5]}], 
          TagBox[
           
           DiskBox[{2822.7064348357703`, 0.30694329368595036`}, {
            694.55746287479, 1.4609514636270107`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 3], 0.3333333333333333], 0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0.5]}], 
          TagBox[
           
           DiskBox[{2769.308752476816, 1.412779177396604}, {733.1624479851328,
             1.517822001146374}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[1, 2], 0.5], 0, 
           NCache[
            Rational[1, 2], 0.5], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 2], 0.5], 0, 
             NCache[
              Rational[1, 2], 0.5], 0.5]}], 
          TagBox[
           
           DiskBox[{2205.901754303127, 1.1823060906953342`}, {
            769.8572746559246, 1.362787244243731}], "Ellipsoid"]}}, {{
          RGBColor[0.49404706790123454`, 0, 0.5059529320987655, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2069.0260693411465`, 1.868709677419355}]}, {
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1913.2929243369742`, 1.3019999999999998`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2202.5116222018655`, 4.063125}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2691.958649357836, 4.537454545454546}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3092.415307939993, 4.4610958904109586`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2602.9682807840227`, 2.8269629629629627`}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2625.215872927476, -0.36400000000000016`}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2647.4634650709295`, 2.666363636363636}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2402.7399514929443`, 3.2640410958904105`}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3404.702469318844, 3.187323943661972}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4627.499165838263, 1.8571497584541063`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3537.3671508090574`, 1.3854088050314468`}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3448.3767822352447`, 0.3167403314917128}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3448.3767822352443`, 1.2077241379310346`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3319.989635907387, 3.2103896103896106`}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1624.074226472083, 1.953333333333334}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4605.25157369481, 3.22125}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1779.8073714762554`, 2.0614507772020727`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4227.042507256107, -0.1430827067669172}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2380.492359349491, -1.0901666666666663`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2424.987543636398, 0.11086330935251797`}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3225.9008608007125`, 3.865689655172414}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2502.8541161384637`, 3.580214285714286}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{867.6560935946744, 2.197272727272727}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3403.881597948338, -0.07027027027027027}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3292.6436372310723`, -0.026308724832214588`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4227.042507256106, 0.6507727272727272}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4371.651856188551, 2.639959677419355}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2736.453833644742, 4.00345238095238}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{222.47592143453187`, 0.36041666666666633`}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -2.936551724137931}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3395.741932334221, -0.8381159420289854}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3248.148452944166, 0.14716216216216227`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2803.196610075102, -1.346011904761905}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3337.138821517978, -1.8333333333333333`}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3492.871966522151, -0.49985294117647056`}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3515.119558665604, 0.9036979166666669}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1490.588673611364, 2.7759701492537316`}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2736.4538336447426`, -0.45281249999999984`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3047.920123653087, -1.4655555555555557`}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1980.0357007673335`, -0.6457407407407406}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2380.4923593494914`, -1.7252475247524752`}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2158.016437914959, -0.2531055900621118}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2335.997175062585, 3.0654687500000004`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1961.4960406478162`, 4.167916666666667}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1201.3699757464722`, 0.2666666666666665}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3492.5927080433516`, -2.5544017094017093`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3604.1099272394167`, -0.230549019607843}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2981.1773472227273`, -0.6345291479820628}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2671.3001709389328`, 0.30295238095238086`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2536.225504353664, 2.435885416666667}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1156.8747914595658`, 1.0392682926829269`}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1164.8203600822737`, 0.012531645569620189`}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3007.8744577948464`, -0.3063318777292577}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2002.2832929107874`, -0.8444642857142858}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1824.3025557631615`, -0.9810555555555555}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2324.767940165531, -0.3306547619047619}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2158.0164379149596`, 1.6014583333333334`}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1186.3201340023954`, 0}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1713.0645950458957`, -0.9058620689655172}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1846.5501479066147`, -0.19916083916083896`}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1868.7977400500677`, -0.523}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1824.3025557631615`, 0.018819444444444403`}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1156.8747914595658`, 2.5292708333333334`}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1757.5597793328022`, -0.03634146341463402}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1245.8651600333785`, 0.23847457627118646`}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2002.283292910787, -0.35592592592592637`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1846.5501479066147`, 0.811029411764706}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1423.845897181004, 3.575}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{533.9422114428766, 1.4229999999999998`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1868.7977400500677`, -1.3051639344262294`}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2424.9875436363977`, -0.8138345864661654}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1646.3218186155361`, -0.8837499999999999}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1802.0549636197084`, -0.30983193277310916`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2069.0260693411465`, 3.418300653594771}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1112.3796071726595`, 0.31862745098039236`}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2024.5308850542406`, 0.4434482758620687}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1735.3121871893488`, -0.7549999999999998}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{533.9422114428766, 1.5700000000000003`}]}, {
          RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1690.8170029024425`, 4.664333333333333}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1690.8170029024423`, 0.17298387096774204`}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{867.6560935946744, -0.025526315789473654`}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2335.997175062585, 4.571911764705882}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1379.3507128940976`, -0.4174418604651165}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1624.074226472083, 1.505068493150685}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2647.4634650709295`, 1.2876129032258063`}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1072.3339413144602`, 2.758867924528302}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{1067.884422885753, 4.3825}]}, {
          RGBColor[0.7866145833333331, 0, 0.21338541666666688`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2242.062897123592, 4.464625}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{934.3988700250341, 1.0719117647058827`}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{489.44702715597015`, 1.716818181818182}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1713.0645950458954`, 3.2134883720930234`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1663.8020695853807`, 3.36}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{667.4277643035957, 4.750975609756098}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1624.074226472083, 0.16342857142857156`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1423.845897181004, 0.3502127659574468}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1112.3796071726595`, 0.05671232876712305}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{467.19943501251703`, -0.019655172413793727`}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{756.4181328774085, 4.428571428571429}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"PK\"", TraditionalForm],
      PlotRange->{{0, 3000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 9], 0.1111111111111111], 0, 
           NCache[
            Rational[8, 9], 0.8888888888888888], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 9], 0.1111111111111111], 0, 
             NCache[
              Rational[8, 9], 0.8888888888888888], 0.5]}], 
          TagBox[
           
           DiskBox[{1981.9185043646808`, -0.03198376045583658}, {
            225.96739696293457`, 0.9468590014914985}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 18], 0.2777777777777778], 0, 
           NCache[
            Rational[13, 18], 0.7222222222222222], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 18], 0.2777777777777778], 0, 
             NCache[
              Rational[13, 18], 0.7222222222222222], 0.5]}], 
          TagBox[
           
           DiskBox[{1504.3284496316767`, 0.6941101180886552}, {
            344.345093983204, 1.5132980157329985`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[4, 9], 0.4444444444444444], 0, 
           NCache[
            Rational[5, 9], 0.5555555555555556], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[4, 9], 0.4444444444444444], 0, 
             NCache[
              Rational[5, 9], 0.5555555555555556], 0.5]}], 
          TagBox[
           
           DiskBox[{1323.9851074586113`, 1.0748898614137246`}, {
            462.99627520267006`, 1.7204145385224217`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[11, 18], 0.6111111111111112], 0, 
           NCache[
            Rational[7, 18], 0.3888888888888889], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[11, 18], 0.6111111111111112], 0, 
             NCache[
              Rational[7, 18], 0.3888888888888889], 0.5]}], 
          TagBox[
           
           DiskBox[{992.4594976463802, 0.6441816988940058}, {356.517254121968,
             1.1289851872224888`}], "Ellipsoid"]}}, {{
          RGBColor[0.49404706790123454`, 0, 0.5059529320987655, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1123.9100148617893`, 3.25948717948718}]}, {
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1039.3146373990742`, 0.8575789473684209}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1196.4203384012596`, 0.8220588235294121}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1462.291524712651, 4.7185964912280705`}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1679.8224953310614`, 4.375774647887324}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1413.9513090196706`, 1.9991851851851852`}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1426.0363629429155`, 2.455964912280702}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1776.5029267170219`, 1.6381521739130436`}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1438.1214168661609`, 0.10152000000000015`}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1305.1858237104648`, 0.29404109589041105`}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1849.4591535575169`, 3.9670422535211265`}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2513.69121603497, 1.5942995169082124`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1921.5235737959624`, 1.8344936708860762`}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1873.1833581029823`, 1.544696132596685}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1873.1833581029823`, 2.0527083333333334`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1803.4425260875814`, 0.01935064935064947}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{882.2089363968885, 2.8459183673469393`}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2501.606162111725, 3.674927536231884}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{966.8043138596038, 2.1738860103626942`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2296.1602454165586`, 0.26977443609022556`}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1293.1007697872196`, 0.37025641025641015`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1317.2708776337101`, -0.2011510791366907}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1752.3328188705318`, 0.04051724137931033}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1359.5685663650568`, 4.363675213675214}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{471.3171030065569, 2.952272727272728}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1849.0132502564923`, 0.4500000000000001}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1788.5879806402672`, 0.4897315436241609}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2296.160245416559, 1.2327853881278539`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2374.713095917652, 2.65719512195122}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1486.461632559141, -0.7574404761904764}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{120.85053923245047`, 1.0090476190476192`}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -2.3559428571428573`}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1844.591724671633, 4.741219512195122}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1763.1457618544844`, -1.8784671532846713`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1764.417872793777, -1.5849999999999997`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1522.716794328876, -0.7195833333333331}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1812.7580884867573`, -0.4567213114754099}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1897.3534659494724`, 0.053277777777777875`}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1909.4385198727173`, -1.4569270833333334`}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{809.6986128574182, 3.0402985074626865`}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1486.461632559141, 2.2496875000000003`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1655.6523874845711`, -1.8763888888888889`}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1075.5697991688091`, -2.699439252336449}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1293.10076978722, -1.6228712871287125`}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1172.2502305547694`, -1.0167080745341615`}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1268.93066194073, -3.014583333333333}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1065.4989208994527`, 3.912357142857142}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{652.5929118552324, 0.4400000000000003}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1897.2017707119364`, -1.8405063291139243`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1957.7787355656976`, 0.1033004926108375}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1619.3972257148364`, -0.19342105263157905`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1451.0696889267895`, -0.17188888888888879`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1377.6961472499354`, -1.2263541666666669`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{628.4228040087424, 1.4025}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{632.7388946956407, 1.8695833333333332`}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1087.654853092054, -0.17976190476190487`}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{990.9744217060938, -1.3934444444444445`}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1262.830859842029, -1.4118452380952382`}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1172.2502305547696`, -2.3463020833333332`}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{644.4177283189325, 0}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{930.5491520898685, -1.965114942528736}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1003.0594756293387`, -0.543216783216783}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1015.1445295525839`, 0.033833333333333035`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{990.9744217060938, -0.2699305555555557}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{628.4228040087424, -0.6301652892561981}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{954.7192599363586, -1.667397260273973}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{676.7630197017227, -1.0972527472527476`}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1087.654853092054, 1.2163999999999997`}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1317.2708776337101`, 0.3545454545454541}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{894.2939903201336, 1.5547826086956524`}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{978.889367782849, -0.10782608695652196`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1123.9100148617895`, -0.9508695652173919}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{604.2526961622523, -2.696129032258065}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1099.7399070152994`, -1.225428571428571}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{942.6342060131136, 1.5476923076923077`}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{918.4640981666237, 0.8116935483870968}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{471.31710300655675`, 2.6347368421052635`}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1268.93066194073, 0.2113235294117652}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{749.273343241193, -0.38732558139534884`}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{882.2089363968885, 1.453698630136986}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1438.1214168661604`, 1.8017054263565893`}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{582.49959910042, 3.270754716981132}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{580.0825883157622, 2.095079365079365}]}, {
          RGBColor[0.7866145833333331, 0, 0.21338541666666688`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1217.9048787092677`, 4.788461538461539}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{507.57226477629195`, -0.06897058823529434}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{265.871186311391, 0.8168181818181818}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{930.5491520898685, 3.3920454545454546`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{903.7893898312484, 4.067222222222222}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{362.5516176973514, 0.10097560975609748`}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{882.2089363968885, -0.15323809523809506`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{773.4434510876831, 1.0559574468085104`}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{604.2526961622525, 0.6223287671232876}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{253.78613238814597`, 1.9617241379310342`}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{410.8918333903316, 0.11214285714285717`}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"SZGK\"", TraditionalForm],
      PlotRange->{{0, 2000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 9], 0.1111111111111111], 0, 
           NCache[
            Rational[8, 9], 0.8888888888888888], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 9], 0.1111111111111111], 0, 
             NCache[
              Rational[8, 9], 0.8888888888888888], 0.5]}], 
          TagBox[
           
           DiskBox[{1335.526317673965, 0.15669953369568448`}, {
            267.5958771375075, 0.255385836626455}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 18], 0.2777777777777778], 0, 
           NCache[
            Rational[13, 18], 0.7222222222222222], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 18], 0.2777777777777778], 0, 
             NCache[
              Rational[13, 18], 0.7222222222222222], 0.5]}], 
          TagBox[
           
           DiskBox[{1013.9164843574109`, 0.6608208870098604}, {
            343.3062120236338, 1.0338506986512077`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[4, 9], 0.4444444444444444], 0, 
           NCache[
            Rational[5, 9], 0.5555555555555556], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[4, 9], 0.4444444444444444], 0, 
             NCache[
              Rational[5, 9], 0.5555555555555556], 0.5]}], 
          TagBox[
           
           DiskBox[{740.2806522361508, 1.2975697224085523`}, {
            244.67339221358225`, 1.1913685536068372`}], "Ellipsoid"]}}, {{
          RGBColor[0.49404706790123454`, 0, 0.5059529320987655, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{409.84405515920616`, 1.204285714285714}]}, {
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{685.4288508697069, 0.6930985915492957}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{805.555556692233, 0.7641666666666665}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{127.19298263561575`, 2.553}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1448.586746683401, 0.1891891891891888}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{643.0311899911684, 0.10030303030303053`}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{911.5497088885794, 0.7759782608695653}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1067.0077987765542`, 1.0802247191011238`}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{961.0136465802076, 0.5332857142857145}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{239.33426828201053`, 3.1033333333333335`}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1681.7738815153634`, 0.29979310344827576`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1024.6101378980156`, 1.0877419354838709`}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1102.3391828420029`, 0.9127192982456139}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1201.2670582252597`, 1.169886363636364}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{826.7543871315022, 0.44833333333333336`}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{282.6510725235937, 2.750588235294117}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{282.65107252359047`, 2.1683333333333334`}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1681.7738815153637`, -0.26246987951807227`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1116.4717364681826`, 0.3741129032258066}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{756.0916190006046, 1.795254237288136}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{953.947369767118, 1.2490909090909093`}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{897.3419821048161, 1.0510000000000002`}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{395.7115015330267, 3.8867499999999993`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{834.1739777852541, 3.793265306122449}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1144.7368437205414`, -0.0193506493506494}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{833.8206639445922, 0.35320987654320984`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1144.7368437205414`, 0.2526618705035972}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{913.3162780918518, 0.41660194174757276`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1109.4054596550927`, 0.12338028169014094`}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{470.801873489846, 3.3070212765957447`}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{113.0604290094362, 1.546}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{819.6881103184123, -0.06236000000000013}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{482.2733924933763, 3.591909090909091}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1034.9306211381902`, -2.6419736842105266`}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1081.1403524027337`, -2.0825}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1003.4113074587464`, -0.640714285714286}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -3.6173423423423423`}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{310.91617977594956`, 1.8542857142857145`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1618.1773901975557`, -1.0466321243523315`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1384.9902553655934`, 0.23196428571428584`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1137.6705669074518`, 0.392888888888889}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1377.9239785525037`, 0.17141975308641982`}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1328.4600408608753`, -0.021656050955414115`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1646.4424974499145`, -1.5877611940298506`}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{968.0799233932976, -1.5121100917431192`}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1031.6764147111053`, -0.874345238095238}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{975.1462002063872, -1.0319047619047619`}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1130.6042900943619`, -0.29017857142857145`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{91.8615985701669, 3.3854545454545457`}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{332.11501021521883`, 2.9846874999999997`}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1646.4424974499145`, -0.43381395348837215`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1462.7193003095808`, 0.4574603174603173}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1307.2612104216062`, 0.43329268292682926`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1109.4054596550927`, 0.6684337349397591}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1109.4054596550927`, 0.9490123456790123}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{65.32197751635185, 2.06}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{402.7777783461165, 2.4870588235294115`}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1356.7251481132344`, -0.5943646408839779}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1045.808968337285, -0.0836075949367088}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1314.3274872346958`, 0.5069306930693069}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1157.38775866011, 0.36352941176470593`}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{219.05458120578268`, -0.23412903225806447`}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 2.048378378378378}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1017.5438610849002`, -0.6512834224598931}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{805.555556692233, 0.8687394957983191}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{720.7602349351557, 1.0807638888888889`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{798.4892798791432, 1.233983739837398}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{664.2300204304377, 0.7443809523809524}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{805.555556692233, -0.17259259259259233`}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{777.2904494398738, 0.6414159292035396}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{791.4230030660534, 2.1239999999999997`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{805.555556692233, 1.9705}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{607.6998059257197, 1.5971428571428576`}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{247.31968845814166`, 2.7710204081632646`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{847.9532175707715, -0.2548148148148149}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{805.555556692233, 1.5950000000000004`}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{791.4230030660535, 1.8598734177215195`}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{770.224172626784, 0.007460317460317217}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{706.6276813089762, -0.5726562500000001}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{508.771930542463, -2.3619354838709676`}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{897.4171552623999, -0.6027272727272728}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{607.6998059257196, 1.0974999999999993`}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{593.56725229954, 1.1995698924731184`}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{657.1637436173479, 0.5382716049382715}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{685.4288508697069, 1.0464285714285715`}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{692.4951276827968, -0.32106382978723413`}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{473.44054647701415`, 0.1466666666666665}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{551.1695914210014, 0.5370129870129869}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{555.0203153022807, 0.9898611111111114}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{459.3079928508345, 1.8900000000000001`}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{939.8148161409384, -0.04731481481481494}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{310.91617977594956`, 0.9035135135135133}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{522.9044841686424, 1.4246153846153846`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{572.3684218602708, 1.2665060240963857`}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{346.2475638413984, 1.2260465116279076`}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{847.9532175707715, 0.5766055045871561}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{508.77193054246294`, 0.3250704225352113}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{685.4288508697069, 0.9908653846153845}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{204.92202757960314`, 0.6357142857142858}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{741.959065374425, 1.3535652173913046`}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}]},
    {
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"G\[OAcute]lyairoda\"", TraditionalForm],
      PlotRange->{{0, 3000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[2, 9], 0.2222222222222222], 0, 
           NCache[
            Rational[7, 9], 0.7777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[2, 9], 0.2222222222222222], 0, 
             NCache[
              Rational[7, 9], 0.7777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{1444.1838489883385`, 0.10157936291881108`}, {
            564.5602627486217, 0.4409886674623318}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[7, 18], 0.3888888888888889], 0, 
           NCache[
            Rational[11, 18], 0.6111111111111112], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[7, 18], 0.3888888888888889], 0, 
             NCache[
              Rational[11, 18], 0.6111111111111112], 0.5]}], 
          TagBox[
           
           DiskBox[{1427.3586806129158`, 0.7010510055251996}, {
            405.46734170717525`, 1.3587629295841963`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 9], 0.5555555555555556], 0, 
           NCache[
            Rational[4, 9], 0.4444444444444444], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 9], 0.5555555555555556], 0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0.5]}], 
          TagBox[
           
           DiskBox[{921.5255586993266, 0.7897435088270677}, {
            390.8637289225225, 1.1018395705812374`}], "Ellipsoid"]}}, {{
          RGBColor[0.49404706790123454`, 0, 0.5059529320987655, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{617.9846043011887, -0.04969696969696928}]}, {
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1033.5259761588848`, 0.29984848484848475`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1214.659394660957, 0.6842307692307692}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{191.78832547278267`, -0.41899999999999976`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2184.2559289955807`, 1.4174285714285713`}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{969.5965343346238, -0.13096774193548394`}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1374.4829992216096`, 0.7130434782608697}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1608.8909525772328`, -0.07460674157303368}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1449.0673480165801`, 0.07652173913043464}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{360.8809038904281, 0.11666666666666667`}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{681.9140461254495, 0.06060606060606066}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2535.8678590290156`, -0.003931034482758611}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1544.9615107529717`, 0.1725806451612903}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1662.1654874307833`, 0.12315789473684194`}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1811.3341850207253`, -0.09793103448275876}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1246.6241155730875`, -0.08642857142857154}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{426.1962788284108, 0.31588235294117645`}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{426.19627882840604`, -0.1610526315789473}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2535.867859029016, 1.0632530120481927`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1683.475301372204, -0.024032258064516074`}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1140.0750458659863`, 0.007288135593220183}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1438.41244104587, 0.04170454545454543}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1353.0598352060363`, 0.03169999999999998}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{596.6747903597685, 4.8325000000000005`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1257.8117678923447`, 3.0017346938775518`}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1726.0949292550442`, 0.19214285714285703`}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1257.2790225437977`, 0.30049382716049405`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1726.0949292550445`, 0.4370503597122302}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1377.1467259642868`, 0.13087378640776687`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1672.8203944014936`, 0.41669014084507056`}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{709.9000359535781, 5.3329787234042545`}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{170.4785115313624, 0.515}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1235.9692086023774`, 0.1711200000000002}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{727.1974007509679, 2.0409999999999995`}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1560.523282775989, 5.731381578947369}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1512.996789840841, 5.292105263157896}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 4.478565022421524}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{468.81590671124656`, -0.11028571428571426`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2439.9736962926245`, -0.9231606217616578}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2088.361766259189, -0.21714285714285708`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1715.4400222843342`, -0.8468888888888889}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2077.7068592884793`, -0.2799999999999999}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2003.1225104935083`, -0.6857324840764331}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{863.0474646275221, 1.5514545454545452`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2482.5933241754647`, -0.7762686567164178}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1459.7222549872906`, -0.4850467289719626}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1555.6164177236817`, 0.14517857142857143`}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1470.3771619580007`, -0.7282738095238095}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1704.7851153136241`, -0.4963690476190479}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{138.51379061923197`, 0.7}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{500.7806276233771, 0.498125}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2482.5933241754647`, -1.3652558139534885`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2205.5657429370012`, -0.8311640211640213}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1971.1577895813778`, -0.4064634146341464}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1672.8203944014936`, -0.9638554216867469}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1672.8203944014936`, 0.21006172839506165`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{98.49594234551645, 0.5474999999999999}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{607.3296973304786, 0.7792156862745099}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2045.7421383763487`, -0.5428176795580111}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1576.9262316651025`, -0.7106329113924049}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1981.812696552088, 0.5129665071770336}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1745.1706497993873`, 0.06313725490196086}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{330.30211609201467`, -0.9423870967741935}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 1.077027027027027}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 0.7367647058823529}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1534.3066037822227`, -0.44053475935828884`}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1214.659394660957, -0.1231092436974787}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1086.8005110124352`, -0.24513888888888896`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1204.0044876902468`, 0.34975609756097564`}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1001.5612552467542`, 0.3477443609022558}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1214.659394660957, 0.12407407407407399`}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1172.0397667781165`, -0.10106060606060625`}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1193.3495807195368`, 1.0070967741935481`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1214.659394660957, 0.9088461538461541}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{372.92174397485525`, 2.746909090909092}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1278.588836485218, 0.8823571428571428}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1214.6593946609573`, 0.5896694214876033}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1193.3495807195368`, 0.48847222222222203`}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1161.3848598074064`, 0.8059999999999999}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1065.490697071015, 1.070909090909091}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{767.1533018911307, -0.7430303030303029}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1353.173185280189, 1.0025742574257426`}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1097.4554179831453`, 0.17999999999999972`}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{916.3219994810728, 2.9299999999999997`}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{895.0121855396525, 0.8986021505376344}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{990.9063482760441, 0.8709876543209875}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1033.5259761588845`, 0.48136363636363666`}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1044.1808831295946`, 0.8274468085106381}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{713.87876703758, 1.7230952380952382`}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{831.0827437153916, 0.7444155844155845}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{836.8890694241327, 0.559027777777778}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{692.5689530961598, 1.5094999999999998`}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1417.10262710445, 1.251320754716981}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{468.81590671124667`, 0.8497297297297295}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{788.4631158325512, -0.03076923076923066}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{863.0474646275222, 0.123132530120482}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{522.0904415647973, 0.10302325581395357`}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1278.5888364852178`, 1.9958715596330276`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{767.1533018911308, 1.2925352112676058`}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1033.5259761588845`, 2.124615384615385}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{308.99230215059436`, 0.26928571428571463`}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1118.7652319245656`, 2.121739130434783}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"M\[EAcute]rce\"", TraditionalForm],
      PlotRange->{{0, 4000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 9], 0.1111111111111111], 0, 
           NCache[
            Rational[8, 9], 0.8888888888888888], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 9], 0.1111111111111111], 0, 
             NCache[
              Rational[8, 9], 0.8888888888888888], 0.5]}], 
          TagBox[
           
           DiskBox[{2565.582460182705, 0.6286116471768928}, {779.726905324929,
             0.6898331274087786}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 18], 0.2777777777777778], 0, 
           NCache[
            Rational[13, 18], 0.7222222222222222], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 18], 0.2777777777777778], 0, 
             NCache[
              Rational[13, 18], 0.7222222222222222], 0.5]}], 
          TagBox[
           
           DiskBox[{2391.94256728473, 1.0090155754435555`}, {
            625.4537468443764, 1.1116135415361141`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[4, 9], 0.4444444444444444], 0, 
           NCache[
            Rational[5, 9], 0.5555555555555556], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[4, 9], 0.4444444444444444], 0, 
             NCache[
              Rational[5, 9], 0.5555555555555556], 0.5]}], 
          TagBox[
           
           DiskBox[{1598.2761341486355`, 1.362147737021093}, {
            528.2532270091123, 1.228475742454143}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[11, 18], 0.6111111111111112], 0, 
           NCache[
            Rational[7, 18], 0.3888888888888889], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[11, 18], 0.6111111111111112], 0, 
             NCache[
              Rational[7, 18], 0.3888888888888889], 0.5]}], 
          TagBox[
           
           DiskBox[{1440.0710506923613`, 0.05139718847266813}, {
            564.9644354510373, 0.9051940823950565}], "Ellipsoid"]}}, {{
          RGBColor[0.49404706790123454`, 0, 0.5059529320987655, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{884.858965454491, 0.3654545454545451}]}, {
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1479.8503387773385`, 1.4917647058823535`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1739.2055527898617`, -0.16611111111111138`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3127.518757209839, 0.4864285714285725}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1388.313204419977, -0.20071428571428548`}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1968.0483886832642`, 0.8344736842105267}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2303.684547993589, 1.3278378378378382`}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2074.8417121001858`, 0.9891836734693878}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{516.7259848323564, 2.7633333333333336`}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{976.3960998118521, 0}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3630.972996175325, 0.624166666666667}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2212.147413636227, 2.62804347826087}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2379.965493291389, 2.099464285714286}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2593.552140125232, 1.5500000000000007`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1784.974119968542, 0.6515151515151519}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3630.972996175325, 0.038461538461539005`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2410.47787141051, 0.5791999999999998}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1632.41222937294, 1.4960000000000002`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2059.585523040625, 0.9308928571428572}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1937.373710680537, 1.089}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{854.3465873353707, 4.071052631578947}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1800.9931184810969`, 3.9348979591836737`}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2471.5026276487506`, 0.7988961038961039}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1800.2303090281023`, 0.8909876543209878}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2471.5026276487506`, 1.3366187050359712`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1971.8624359481541`, 0.8351456310679612}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2395.22168235095, 0.9317605633802817}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1016.4677356328452`, 4.255957446808511}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{244.09902495296305`, 1.9220000000000002`}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1769.717930908982, 0.12191235059760966`}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1041.2349033149828`, 4.340727272727273}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2234.4294792363835`, -1.0367763157894736`}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2334.196926112709, -0.4230555555555556}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2166.378846457547, -0.11487394957983206`}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -3.1522869955156954`}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{671.2723186206484, 2.2234285714285718`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3493.667294639283, 0.16471502590673576`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2990.213055673798, 1.9052380952380952`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2456.2464385891903`, 1.6483703703703705`}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2974.9568666142372`, 1.4255405405405408`}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2868.163543197315, 1.1912738853503186`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3554.6920508775233`, -0.2320398009950249}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2090.0979011597456`, -0.9621100917431191}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2227.4036026957874`, -0.4298214285714285}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2105.3540902193063`, -0.800654761904762}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2440.9902495296305`, -0.3195833333333334}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{198.3304577742825, 5.113636363636363}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{717.0408857993287, 2.4903125}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3554.6920508775233`, -0.8173953488372093}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3158.0311353289585`, 0.21396825396825395`}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2822.394976018635, 0.30621951219512195`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2395.22168235095, -0.10837349397590358`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2395.22168235095, 0.22265432098765434`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{141.03105002732707`, 1.4412499999999997`}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{869.6027763949307, 1.862156862745098}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2929.188299435556, -0.9231491712707183}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2257.915980814908, -0.3298734177215193}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2837.6511650781954`, 0.34594202898550747`}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2498.816127416683, 0.42754838709677406`}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{472.94186084636584`, -0.5232258064516128}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 1.7216216216216218`}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2196.8912245766114`, -1.2953475935828875`}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1739.2055527898615`, -0.3884033613445379}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1556.1312840751393`, -0.36236111111111113`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1723.9493637303015`, 0.29081300813008126`}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1434.0817715986575`, -0.6224812030075189}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1739.2055527898617`, -1.3033333333333335`}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1678.180796551621, -0.233787878787879}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1708.6931746707414`, -0.15666666666666682`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1739.2055527898617`, -0.6454166666666664}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1312.0322591221761`, -0.9320454545454544}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{533.9666170846067, 1.5076106194690262`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1830.7426871472228`, -1.9849404761904763`}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1739.2055527898617`, -0.6247933884297522}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1708.693174670741, -0.23000000000000012`}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1662.9246074920604`, -0.17893939393939395`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1525.6189059560188`, -0.36174242424242425`}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1098.4456122883337`, -2.1946}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1937.536010564144, -0.19641509433962262`}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1571.3874731346998`, 0.5496875}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1312.0322591221761`, 0.3070312499999999}]}, {
          RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1357.800826300857, -0.6189}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1281.5198810030558`, 0.21794871794871767`}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1418.8255825390977`, -0.046338028169014174`}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1479.8503387773385`, 0.5949999999999999}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1495.1065278368985`, -1.0353191489361702`}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1022.1646669905329`, 0.050952380952380964`}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1189.9827466456948`, 0.3102597402597403}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1198.2965125938574`, 0.1459722222222222}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{991.6522888714122, 0.2573333333333331}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2029.0731449215052`, -0.4567521367521367}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{671.2723186206482, 0.3518918918918919}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1128.957990407454, 0.4853846153846156}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1235.7513138243753`, 0.3228915662650603}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{747.5532639184493, 0.3546511627906974}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1830.7426871472228`, -0.6265714285714287}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"vend\[EAcute]gt\[EAcute]r\"", TraditionalForm],
      PlotRange->{{0, 6000}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 9], 0.1111111111111111], 0, 
           NCache[
            Rational[8, 9], 0.8888888888888888], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 9], 0.1111111111111111], 0, 
             NCache[
              Rational[8, 9], 0.8888888888888888], 0.5]}], 
          TagBox[
           
           DiskBox[{3383.052519402896, 1.2404437356919318`}, {
            668.8080254496567, 0.7227075197021824}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 18], 0.2777777777777778], 0, 
           NCache[
            Rational[13, 18], 0.7222222222222222], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 18], 0.2777777777777778], 0, 
             NCache[
              Rational[13, 18], 0.7222222222222222], 0.5]}], 
          TagBox[
           
           DiskBox[{3353.1755103810465`, 1.4340435691176026`}, {
            979.5668915954975, 0.9455312943066825}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[4, 9], 0.4444444444444444], 0, 
           NCache[
            Rational[5, 9], 0.5555555555555556], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[4, 9], 0.4444444444444444], 0, 
             NCache[
              Rational[5, 9], 0.5555555555555556], 0.5]}], 
          TagBox[
           
           DiskBox[{2431.1867811331267`, 2.037760760567664}, {
            992.3392842719061, 1.1581093381057332`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[11, 18], 0.6111111111111112], 0, 
           NCache[
            Rational[7, 18], 0.3888888888888889], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[11, 18], 0.6111111111111112], 0, 
             NCache[
              Rational[7, 18], 0.3888888888888889], 0.5]}], 
          TagBox[
           
           DiskBox[{1624.0363434013118`, 2.616964858538736}, {
            720.2313875933452, 1.098190318153547}], "Ellipsoid"]}}, {{
          RGBColor[0.49404706790123454`, 0, 0.5059529320987655, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1296.786768750713, 4.812321428571429}]}, {
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1548.9397515633516`, 5.061320754716981}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1873.1364437510301`, 4.804625}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{252.15298281263864`, 4.1979999999999995`}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2017.2238625011091`, 1.9376562499999999`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2197.3331359387084`, 4.254117647058823}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2557.5516828139057`, 4.3301612903225815`}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1657.005315625911, 3.0578205128205127`}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2665.6172468764657`, 2.8174285714285716`}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2269.3768453137477`, 2.4660759493670885`}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1584.9616062508715`, 1.693947368421053}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2377.4424093763073`, 1.1271153846153845`}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3386.0543406268616`, 2.3204210526315787`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5475.321912503011, 2.1453535353535353`}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2845.726520314065, 2.458265306122449}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3926.3821609396587`, 1.8848275862068964`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2341.4205546887874`, 2.4515999999999996`}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1044.6337859380744`, 2.2022222222222223`}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1620.9834609383913`, 2.4166037735849053`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2737.6609562515055`, 3.7166666666666672`}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1986.2050431868486`, 3.291052631578948}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1404.8523328132726`, 2.9126315789473685`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{959.0818810552148, 0.875263157894737}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1512.917896875832, 3.588571428571429}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2413.464264063827, 2.3835483870967744`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2701.6391015639856`, 2.5083495145631067`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2557.5516828139066`, 2.1693939393939394`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1657.005315625911, 2.2952222222222227`}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2629.595392188946, 1.1768627450980391`}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{279.3651447776772, 0.33909090909090944`}]}, {
          RGBColor[0.7260841049382717, 0, 0.2739158950617283, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1260.7649140631934`, -3.1652499999999995`}]}, {
          RGBColor[0.6275115740740741, 0, 0.3724884259259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1747.059952344711, 2.2620754716981133`}]}, {
          RGBColor[0.5575925925925925, 0, 0.44240740740740747`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3998.425870314699, -0.3353475935828877}]}, {
          RGBColor[0.39545524691358025`, 0, 0.6045447530864198, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3602.185468751981, 0.8629813664596271}]}, {
          RGBColor[0.2805111882716049, 0, 0.7194888117283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3962.404015627179, 0.8084076433121019}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{864.5245125004753, 1.2022580645161285`}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{648.3933843753564, 2.707}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2881.7483750015845`, -0.7321348314606743}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2696.6860965444416`, -1.1867878787878785`}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1595.7681626571177`, 2.3056338028169012`}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1395.8468691413925`, 2.686458333333334}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2160.0547049248594`, 2.6065217391304345`}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5753.995158950374, -0.054457831325301284`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4286.600707814856, 0.15161073825503354`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4574.775545315016, 1.0299248120300752`}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3386.0543406268616`, 0.6838749999999998}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5475.321912503011, 0.5262424242424243}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3638.2073234395007`, 0.7473118279569894}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3494.1199046894217`, 0.26685950413223136`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4718.862964065094, 1.2871666666666666`}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4088.480507033514, 0.5047435897435896}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3530.1417593769415`, 0.04377777777777751}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4164.12640187727, 0.585185185185185}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3169.923212501743, 0.36783333333333346`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5666.0258490840215`, -0.5911299435028249}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3818.3165968770995`, -0.18596491228070178`}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4160.524216408505, -0.10222222222222209`}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4682.841109377575, -0.20202247191011272`}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4718.862964065095, 0.11886363636363638`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3277.9887765643034`, 0.752887323943662}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2233.354990626228, 1.323981481481481}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2557.5516828139066`, 0.3846250000000002}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2485.5079734388664`, 0.9865753424657532}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3674.2291781270205`, 1.5239285714285717`}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2917.7702296891043`, 1.0802721088435376`}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3422.0761953143815`, 0.7553370786516855}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3350.0324859393418`, 0.7063999999999999}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3350.0324859393418`, 1.3284558823529413`}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1332.8086234382329`, 1.082741935483871}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1008.6119312505546`, 0.9670370370370373}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1548.9397515633516`, 2.4469523809523803`}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1873.1364437510301`, 2.2424}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1260.7649140631934`, 3.2745238095238087`}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1116.677495313114, 2.846268656716418}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{945.453612698412, 2.950114942528736}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{900.5463671879952, 3.694788732394365}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1584.9616062508715`, 3.795357142857143}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1224.7430593756735`, 2.8684466019417476`}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1620.9834609383913`, 2.830380952380952}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{864.5245125004753, 3.1879661016949155`}]}, {
          RGBColor[0.5463175154320987, 0, 0.4536824845679013, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{795.3857914067011, 2.393617021276596}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{900.5463671879952, 1.9849019607843135`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1404.8523328132726`, 3.5661194029850747`}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1224.7430593756735`, 3.4954022988505744`}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1332.8086234382329`, 3.210140845070423}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{972.5900765630348, 3.0874358974358973`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{360.21854687519806`, 4.324761904761904}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{684.4152390628764, 4.71625}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1188.7212046881536`, 4.601190476190476}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{324.19669218767825`, 4.8705}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{684.4152390628764, 4.758}]}, {
          RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{360.21854687519806`, 5.421000000000001}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{756.458948437916, 5.8293103448275865`}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2161.3112812511886`, 3.2697777777777777`}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2050.672727568097, 4.586129032258065}]}, {
          RGBColor[0.5811651234567902, 0, 0.41883487654320983`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{252.15298281263864`, 2.98}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{540.327820312797, 5.109411764705882}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{864.5245125004753, 4.565714285714286}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 4.385173913043479}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{648.3933843753565, 4.598214285714286}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}]},
    {
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"kisterem\"", TraditionalForm],
      PlotRange->{{0, 6500}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 6], 0.16666666666666666`], 0, 
           NCache[
            Rational[5, 6], 0.8333333333333334], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 6], 0.16666666666666666`], 0, 
             NCache[
              Rational[5, 6], 0.8333333333333334], 0.5]}], 
          TagBox[
           DiskBox[{4215.813449359703, -0.9756364673295677}, {
            843.6132682941509, 0.3707530679370617}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[1, 3], 0.3333333333333333], 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 3], 0.3333333333333333], 0, 
             NCache[
              Rational[2, 3], 0.6666666666666666], 0.5]}], 
          TagBox[
           
           DiskBox[{2957.5342462000926`, -0.8637013867884863}, {
            1109.1513604898837`, 0.6469059554245943}], "Ellipsoid"]}}, {{
          RGBColor[0.49404706790123454`, 0, 0.5059529320987655, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1416.0933501236718`, -0.5273214285714285}]}, {
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1691.444834869941, -0.45094339622641516`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2045.4681724008592`, -0.6003750000000002}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{275.3514847462695, -0.4439999999999998}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2202.811877970156, -1.15578125}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2399.491509931777, -0.5999999999999998}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2792.8507738550197`, -0.8388709677419356}]}, {
          RGBColor[0.18268904320987653`, 0, 0.8173109567901234, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1809.4526140469138`, -0.9376923076923079}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2910.858553031992, -0.735}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2478.163362716425, -0.7193670886075952}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1730.7807612622655`, -0.6507894736842106}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2596.171141893398, -0.8128846153846158}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3697.577080878476, -1.2898947368421052`}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5979.0608116332805`, -1.788}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3107.5381849936125`, -2.102551020408163}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4287.61597676334, -0.779298245614035}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2556.835215501074, -0.5369333333333333}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1140.741865377402, -0.6100000000000002}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1770.1166876545897`, -1.1052830188679246`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2989.5304058166403`, -1.1092857142857147`}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2168.939274687869, -1.2698214285714287`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1534.1011293006443`, -0.9107894736842105}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1927.4603932238863`, -0.8761643835616437}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{4068.458672577529, 1.0816161616161617`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1047.3190401956322`, 0.7248275862068967}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1652.1089084776168`, -1.7544444444444445`}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2635.507068285722, -1.3162365591397847`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2950.194479424316, -2.4393203883495147`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2792.850773855019, -1.1023232323232324`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1809.4526140469138`, -0.9657777777777778}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2871.5226266396676`, -0.7441176470588234}]}, {
          RGBColor[0.4615239197530864, 0, 0.5384760802469136, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{305.06721174917743`, -0.9353846153846154}]}, {
          RGBColor[0.7260841049382717, 0, 0.2739158950617283, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1376.7574237313474`, 0.1760526315789474}]}, {
          RGBColor[0.6275115740740741, 0, 0.3724884259259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1907.7924300277239`, -0.7776415094339624}]}, {
          RGBColor[0.5575925925925925, 0, 0.44240740740740747`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4366.287829547987, -0.26459893048128336`}]}, {
          RGBColor[0.39545524691358025`, 0, 0.6045447530864198, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3933.592639232421, -0.7408695652173912}]}, {
          RGBColor[0.2805111882716049, 0, 0.7194888117283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4326.951903155663, -0.011464968152866224`}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{944.0622334157811, -0.583548387096774}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{708.0466750618359, -0.7125000000000006}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3146.874111385937, -0.003089887640449502}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2944.785789545361, 0.38808641975308655`}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1742.581539179952, -1.0224324324324323`}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1524.267147702563, -0.47879999999999995`}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2358.7834000606285`, 0.5908661417322834}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6283.372469232671, 1.0637951807228916`}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4680.975240686582, 0.34604026845637575`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4995.662651825174, -0.6757142857142858}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3697.577080878476, -0.5393749999999999}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5979.0608116332805`, -0.9356969696969699}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3972.9285656247453`, -0.9548387096774195}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3815.584860055448, -1.206198347107438}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5153.006357394472, -1.2805}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4464.627645528816, -1.5467741935483872`}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3854.9207864477726`, -1.704722222222222}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4547.233090952657, -2.0366875}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3461.561522524531, -1.2315469613259666`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6187.309833710316, -1.2567428571428572`}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4169.608197586366, -0.9214912280701756}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4543.299498313411, -0.940888888888889}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5113.670431002148, -1.0030898876404495`}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5153.006357394472, -0.6950568181818183}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3579.569301701503, -0.41077464788732404`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2438.827436324101, -0.46361111111111103`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2792.8507738550184`, -0.3711250000000001}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2714.1789210703705`, -0.45135135135135135`}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4012.26449201707, -2.584999999999999}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3186.210037778261, -0.4654999999999999}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3736.9130072708, -0.8785393258426966}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3658.2411544861516`, -0.6073333333333333}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3658.2411544861525`, -0.7831617647058825}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1455.429276515996, -0.7143548387096775}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1101.405938985078, -0.9144444444444444}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1691.444834869941, -1.3407619047619048`}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2045.4681724008592`, -1.3186666666666667`}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1376.7574237313474`, -0.9225}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1219.4137181620506`, -0.9034328358208955}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1032.4369480438427`, -1.1366666666666667`}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{983.3981598081052, -0.6407042253521126}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1730.7807612622655`, -0.9269047619047621}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1337.4214973390233`, -1.033106796116505}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1770.1166876545897`, -1.5775238095238093`}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{944.0622334157811, -1.6989285714285711`}]}, {
          RGBColor[0.5463175154320987, 0, 0.4536824845679013, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{868.562632759561, -0.5970212765957448}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{983.3981598081052, 0.27274509803921576`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1534.1011293006443`, -0.9883582089552239}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1337.4214973390233`, -0.662873563218391}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1455.429276515996, -0.8683098591549295}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1062.0700125927538`, -0.7853846153846157}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{393.3592639232421, -0.6804761904761901}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{747.3826014541601, -0.93859375}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1298.085570946699, -1.5388372093023257`}]}, {
          RGBColor[0.8120158179012346, 0, 0.18798418209876544`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{354.02333753091796`, -0.7385000000000002}]}, {
          RGBColor[0.8107870370370369, 0, 0.18921296296296308`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{747.3826014541601, -0.5837777777777776}]}, {
          RGBColor[0.7805613425925926, 0, 0.21943865740740742`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{393.3592639232421, -0.6439999999999998}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{826.0544542388084, -0.5613793103448278}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2360.155583539453, 0.09955555555555541}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2239.3380953344617`, -0.4203125}]}, {
          RGBColor[0.5811651234567902, 0, 0.41883487654320983`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{275.3514847462695, -0.4466666666666666}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{590.0388958848632, -0.4517647058823529}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{944.0622334157811, -0.3771428571428572}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{786.7185278464842, -0.4626086956521737}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{78.67185278464842, -1.105625}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{0., -1.7611428571428571`}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{314.6874111385937, -1.0137735849056604`}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{393.3592639232421, -0.5740000000000002}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{511.3670431002148, -0.5863157894736839}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{236.01555835394527`, -0.3912500000000003}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 1.5760526315789476`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{708.0466750618359, -0.4682142857142856}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{786.7185278464842, -0.6264285714285714}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{786.7185278464842, -0.6368055555555556}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Oktopusz\"", TraditionalForm],
      PlotRange->{{0, 9500}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[1, 18], 0.05555555555555555], 0, 
           NCache[
            Rational[17, 18], 0.9444444444444444], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[1, 18], 0.05555555555555555], 0, 
             NCache[
              Rational[17, 18], 0.9444444444444444], 0.5]}], 
          TagBox[
           
           DiskBox[{6297.358224517879, -0.3274074074074074}, {
            152.29804362616815`, 0.3472679969827267}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[2, 9], 0.2222222222222222], 0, 
           NCache[
            Rational[7, 9], 0.7777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[2, 9], 0.2222222222222222], 0, 
             NCache[
              Rational[7, 9], 0.7777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{5424.942377866047, 0.6178272406077876}, {
            1473.7100023129672`, 1.5399923093214785`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[7, 18], 0.3888888888888889], 0, 
           NCache[
            Rational[11, 18], 0.6111111111111112], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[7, 18], 0.3888888888888889], 0, 
             NCache[
              Rational[11, 18], 0.6111111111111112], 0.5]}], 
          TagBox[
           
           DiskBox[{5045.416992087102, 0.34663515648781856`}, {
            1091.356330915391, 1.57407016972206}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 9], 0.5555555555555556], 0, 
           NCache[
            Rational[4, 9], 0.4444444444444444], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 9], 0.5555555555555556], 0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0.5]}], 
          TagBox[
           
           DiskBox[{4010.9450474399155`, 0.7675554892240195}, {
            1304.816773822672, 2.4922442816113133`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[13, 18], 0.7222222222222222], 0, 
           NCache[
            Rational[5, 18], 0.2777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[13, 18], 0.7222222222222222], 0, 
             NCache[
              Rational[5, 18], 0.2777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{2895.123196952675, 1.6280787564599617`}, {
            958.9506635576823, 2.7437577751901916`}], "Ellipsoid"]}}, {{
          RGBColor[0.49404706790123454`, 0, 0.5059529320987655, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3815.3375562225588`, 0.04074468085106396}]}, {
          RGBColor[0.3273167438271605, 0, 0.6726832561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3528.1616111305384`, 1.4036842105263156`}]}, {
          RGBColor[0.4580594135802468, 0, 0.5419405864197532, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4061.488366301433, 0.377878787878788}]}, {
          RGBColor[0.2945949074074074, 0, 0.7054050925925925, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4964.041336590641, 0.5659322033898305}]}, {
          RGBColor[0.19431520061728394`, 0, 0.8056847993827161, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5702.493766827266, 0.19138888888888894`}]}, {
          RGBColor[0.24070023148148148`, 0, 0.7592997685185185, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4799.940796538058, 0.13659259259259268`}]}, {
          RGBColor[0.3579513888888889, 0, 0.6420486111111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4840.9659315512035`, 0.9477777777777779}]}, {
          RGBColor[0.1320466820987654, 0, 0.8679533179012346, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4881.991066564349, 0.5257142857142857}]}, {
          RGBColor[0.2388329475308642, 0, 0.7611670524691359, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4430.714581419746, 1.5881632653061228`}]}, {
          RGBColor[0.30197916666666663`, 0, 0.6980208333333333, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6278.359365038057, -0.2179999999999996}]}, {
          RGBColor[0.10940393518518518`, 0, 0.8905960648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{9312.705647984094, -0.060937500000000366`}]}, {
          RGBColor[0.0668923611111111, 0, 0.9331076388888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{8533.228082734324, 0.6371428571428569}]}, {
          RGBColor[0.1225366512345679, 0, 0.8774633487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6522.99646709018, 1.576}]}, {
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6358.895927037597, 1.5116129032258068`}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6358.895927037597, 1.762}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6122.146710399211, 0.5304166666666666}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2994.834855959643, 0.11285714285714261`}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{8492.202947721178, -1.379999999999999}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3282.0108010516637`, -0.4666666666666662}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{7794.7756524977, 4.262857142857144}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4389.689446406599, 3.544705882352942}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4471.739716432891, 1.5116923076923074`}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5948.64457690614, -0.08769230769230801}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{4615.327688978864, -0.8236000000000001}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1599.9802655126857`, -1.076666666666666}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6276.845657011305, 0.09640000000000072}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6071.719981945577, 2.9577777777777783`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{7794.775652497701, 1.4291304347826093`}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{8061.439030083148, -0.3264999999999998}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5046.091606616932, 3.5191304347826087`}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6261.835903208386, -2.20448275862069}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1750.4057605609366`, -3.7937500000000006`}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5985.351276654731, 1.161851851851852}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5169.167011656371, 3.2724999999999995`}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6153.770251971868, 0}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6440.9461970638895`, -0.6548148148148148}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6481.971332077034, 3.856315789473684}]}, {
          RGBColor[0.12026427469135803`, 0, 0.879735725308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2748.684045880768, -4.363076923076922}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5046.091606616931, -0.5311666666666668}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5620.443496800973, 3.25}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3651.2370161699755`, -1.9842857142857138`}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4389.6894464066, 2.9519999999999995`}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3979.438096275142, -3.6665217391304346`}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4307.639176380308, 2.6500000000000004`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3617.0494036590703`, -3.926315789473684}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2215.357290709873, 0.3733333333333335}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6646.071872129617, -3.75}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5497.368091761537, -1.8649999999999995`}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4925.94656836418, -1.7778571428571426`}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2133.307020683581, -4.5840625}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2147.9588546169325`, -3.366}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5546.598253777267, 3.6999999999999997`}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3692.2621511831207`, 0}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3364.0610710779556`, 0}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2187.6049934951416`, 0}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3446.1113411042456`, 4.1425}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3364.0610710779542`, 0}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2133.307020683581, 0}]}, {
          RGBColor[0.6573418209876543, 0, 0.34265817901234574`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3240.985666038517, 0}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2297.4075607361647`, 0}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3692.2621511831207`, 0}]}, {
          RGBColor[0.5613888888888888, 0, 0.4386111111111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3405.086206091101, 0}]}, {
          RGBColor[0.5829070216049381, 0, 0.4170929783950619, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2625.6086408413303`, 0}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3117.91026099908, 7.32}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4307.639176380308, 5.773333333333333}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2543.5583708150393`, 1.0199999999999996`}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2994.834855959643, 2.753333333333333}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4881.991066564348, 0.534}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1977.4115076336568`, -0.2777777777777778}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{1969.2064806309977`, 7.68}]}, {
          RGBColor[0.7866145833333331, 0, 0.21338541666666688`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4134.421939658195, -0.5499999999999989}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1723.0556705521228`, 8.950000000000001}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{902.5529702892072, 6.620000000000001}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3158.9353960122257`, 0.13952380952380952`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{3068.0940256259532`, 0.06973684210526358}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1230.7540503943737`, 1.7594736842105263`}]}, {
          RGBColor[0.6118634259259258, 0, 0.3881365740740742, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{574.3518901840412, -0.0163636363636365}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2994.834855959643, 6.2620000000000005`}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2625.6086408413303`, 6.25}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2051.2567506572896`, 7.354193548387096}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{861.5278352760614, 7.406666666666666}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1394.854590446957, 3.601818181818183}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}], 
     GraphicsBox[{},
      AlignmentPoint->Center,
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{
        FormBox[
         RotationBox[
         "\"k\[ODoubleDot]lts\[EAcute]g (Ft)\"", BoxRotation -> 
          1.5707963267948966`], TraditionalForm], 
        FormBox["\"elt\[EAcute]r\[EAcute]s (\[Degree]C)\"", TraditionalForm]},
      
      AxesOrigin->{0, 0},
      AxesStyle->{},
      Background->None,
      BaseStyle->{},
      BaselinePosition->Automatic,
      ColorOutput->Automatic,
      ContentSelectable->Automatic,
      CoordinatesToolOptions:>Automatic,
      DisplayFunction->Identity,
      Epilog->{},
      FormatType:>TraditionalForm,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->{},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->{},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageMargins->0.,
      ImagePadding->All,
      ImageSize->350,
      ImageSizeRaw->Automatic,
      LabelStyle->{},
      Method->{
       "MessagesHead" -> ListPlot, "DownsampleWindow" -> None, 
        "OptimizePlotMarkers" -> True, "MessagesHead" -> ListPlot, 
        "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Lahmacun\"", TraditionalForm],
      PlotRange->{{0, 10500}, {-5, 6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      PlotRegion->Automatic,
      PreserveImageOptions->Automatic,
      Prolog->{{{
          RGBColor[
           NCache[
            Rational[2, 9], 0.2222222222222222], 0, 
           NCache[
            Rational[7, 9], 0.7777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[2, 9], 0.2222222222222222], 0, 
             NCache[
              Rational[7, 9], 0.7777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{5905.00354761676, 1.7117209057516922`}, {
            2244.0410271207843`, 1.4296961901433687`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[7, 18], 0.3888888888888889], 0, 
           NCache[
            Rational[11, 18], 0.6111111111111112], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[7, 18], 0.3888888888888889], 0, 
             NCache[
              Rational[11, 18], 0.6111111111111112], 0.5]}], 
          TagBox[
           
           DiskBox[{6026.025475704074, 0.11773782314172639`}, {
            1439.2997083706982`, 1.0657980682962258`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[5, 9], 0.5555555555555556], 0, 
           NCache[
            Rational[4, 9], 0.4444444444444444], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[5, 9], 0.5555555555555556], 0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0.5]}], 
          TagBox[
           
           DiskBox[{3824.8188750415, 1.0660241223157747`}, {
            1561.3661856154285`, 1.3379634598543022`}], "Ellipsoid"]}, {
          RGBColor[
           NCache[
            Rational[13, 18], 0.7222222222222222], 0, 
           NCache[
            Rational[5, 18], 0.2777777777777778], 0.25], 
          EdgeForm[{
            Thickness[Large], 
            Dashing[{Small, Small}], 
            RGBColor[
             NCache[
              Rational[13, 18], 0.7222222222222222], 0, 
             NCache[
              Rational[5, 18], 0.2777777777777778], 0.5]}], 
          TagBox[
           
           DiskBox[{3941.3908452484134`, 1.3981803599659106`}, {
            1473.2992439303107`, 1.2896640761520748`}], "Ellipsoid"]}}, {{
          RGBColor[0.19076581790123456`, 0, 0.8092341820987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6611.343684891492, 0.8467999999999999}]}, {
          RGBColor[0.19197916666666665`, 0, 0.8080208333333334, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{7204.669400202267, 2.1462745098039218`}]}, {
          RGBColor[0.17639660493827158`, 0, 0.8236033950617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4958.507763668619, 0.28178571428571414`}]}, {
          RGBColor[0.1757253086419753, 0, 0.8242746913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1695.2163294593759`, 0.20333333333333314`}]}, {
          RGBColor[0.19091628086419754`, 0, 0.8090837191358025, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1695.216329459357, 0.6814285714285717}]}, {
          RGBColor[0.21454282407407407`, 0, 0.7854571759259259, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{10086.537160283173`, 2.6957377049180327`}]}, {
          RGBColor[0.3790007716049382, 0, 0.6209992283950618, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6696.104501364459, 1.3609375}]}, {
          RGBColor[0.3991801697530864, 0, 0.6008198302469137, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4534.703681303779, 2.0415094339622635`}]}, {
          RGBColor[0.4473649691358024, 0, 0.5526350308641976, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5721.35511192533, 1.917894736842105}]}, {
          RGBColor[0.37674768518518514`, 0, 0.6232523148148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5381.860990626702, 1.8045833333333334`}]}, {
          RGBColor[0.3110030864197531, 0, 0.688996913580247, 0.75], PointSize -> 
          0.0125, 
          PointBox[{2373.3028612431, -1.3744444444444441`}]}, {
          RGBColor[0.35179205246913575`, 0, 0.6482079475308642, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5003.0071923169735`, -0.7956122448979595}]}, {
          RGBColor[0.25450424382716047`, 0, 0.7454957561728395, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6865.626134310396, 3.1528000000000005`}]}, {
          RGBColor[0.09573881172839506, 0, 0.904261188271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5000.888171905103, 1.8384210526315787`}]}, {
          RGBColor[0.20066743827160494`, 0, 0.7993325617283951, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6865.626134310395, 2.392857142857143}]}, {
          RGBColor[0.4161631944444444, 0, 0.5838368055555556, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5477.667764565546, 0.18168674698795148`}]}, {
          RGBColor[0.47280285493827157`, 0, 0.5271971450617284, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6653.724093127976, -0.10709677419354828`}]}, {
          RGBColor[0.2633622685185185, 0, 0.7366377314814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2823.6617563637, -1.42625}]}, {
          RGBColor[0.3298398919753086, 0, 0.6701601080246914, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4916.127355432135, -1.8392857142857146`}]}, {
          RGBColor[0.39136959876543204`, 0, 0.608630401234568, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2892.4628621400275`, 3.605081967213115}]}, {
          RGBColor[0.6114641203703703, 0, 0.38853587962962965`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6207.05689579348, 1.7215217391304347`}]}, {
          RGBColor[0.6465162037037037, 0, 0.35348379629629634`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6484.20246018204, 2.1729999999999996`}]}, {
          RGBColor[0.5522723765432098, 0, 0.4477276234567902, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6018.017969580717, 1.568666666666666}]}, {
          RGBColor[0.4881558641975309, 0, 0.5118441358024691, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 4.950000000000001}]}, {
          RGBColor[0.453599537037037, 0, 0.5464004629629631, 0.75], PointSize -> 
          0.0125, 
          PointBox[{1864.7379624052926`, 4.622424242424243}]}, {
          RGBColor[0.1812056327160494, 0, 0.8187943672839506, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{9705.113486154818, 5.00958904109589}]}, {
          RGBColor[0.11997492283950617`, 0, 0.8800250771604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{8306.560014350849, 5.11804347826087}]}, {
          RGBColor[0.014733796296296292`, 0, 0.9852662037037037, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6823.245726073911, 3.8874999999999997`}]}, {
          RGBColor[0.006294367283950608, 0, 0.9937056327160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{8264.179606114365, 3.565909090909091}]}, {
          RGBColor[0.14486496913580246`, 0, 0.8551350308641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{7967.516748458978, 3.8241025641025645`}]}, {
          RGBColor[0.1556327160493827, 0, 0.8443672839506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3432.8130671551976`, -1.0470588235294118`}]}, {
          RGBColor[0.20070601851851852`, 0, 0.7992939814814815, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{9874.635119100754, 4.934675324675325}]}, {
          RGBColor[0.2461458333333333, 0, 0.7538541666666667, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5806.115928398297, 0.16038834951456327`}]}, {
          RGBColor[0.11167438271604936`, 0, 0.8883256172839507, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6187.539602526653, 0.6653571428571426}]}, {
          RGBColor[0.4345293209876543, 0, 0.5654706790123457, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5848.49633663478, -0.42290322580645173`}]}, {
          RGBColor[0.23812885802469136`, 0, 0.7618711419753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6780.865317837428, -0.11948717948717981`}]}, {
          RGBColor[0.16315393518518517`, 0, 0.8368460648148148, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{550.9453070742911, 0.4449999999999994}]}, {
          RGBColor[0.1268557098765432, 0, 0.8731442901234567, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1991.8791871147446`, 0.157916666666667}]}, {
          RGBColor[0.020443672839506172`, 0, 0.9795563271604938, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{9874.635119100754, 0.8604210526315792}]}, {
          RGBColor[0.2286111111111111, 0, 0.7713888888888889, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{8772.744504952172, -0.18141176470588222`}]}, {
          RGBColor[0.3382793209876543, 0, 0.6617206790123458, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{7840.375523749525, -0.368918918918919}]}, {
          RGBColor[0.5965219907407407, 0, 0.40347800925925925`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6653.724093127976, -0.37727272727272754`}]}, {
          RGBColor[0.4583294753086419, 0, 0.5416705246913581, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6653.724093127976, -0.7259420289855071}]}, {
          RGBColor[0.456195987654321, 0, 0.543804012345679, 0.75], PointSize -> 
          0.0125, 
          PointBox[{391.77237846516385`, -0.14874999999999994`}]}, {
          RGBColor[0.39578510802469136`, 0, 0.6042148919753086, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2415.6832694795835`, -0.32142857142857145`}]}, {
          RGBColor[0.27021219135802466`, 0, 0.7297878086419753, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{8137.038381404912, 1.1013953488372092`}]}, {
          RGBColor[0.19196566358024691`, 0, 0.8080343364197531, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6272.30041899962, 0.3990384615384617}]}, {
          RGBColor[0.15008487654320987`, 0, 0.8499151234567901, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{7882.755931986009, 0.2176744186046514}]}, {
          RGBColor[0.36029513888888887`, 0, 0.6397048611111111, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6941.500736153161, 0.05589743589743575}]}, {
          RGBColor[0.43470100308641973`, 0, 0.5652989969135802, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1313.7926553310015`, -1.514285714285714}]}, {
          RGBColor[0.6379282407407407, 0, 0.3620717592592593, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., 0.14222222222222222`}]}, {
          RGBColor[0.6941628086419753, 0, 0.3058371913580247, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{0., -0.07259259259259249}]}, {
          RGBColor[0.8017669753086418, 0, 0.19823302469135817`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{6102.778786053529, 0.6162222222222224}]}, {
          RGBColor[0.7440451388888888, 0, 0.2559548611111112, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4831.366538959167, -0.26578947368421063`}]}, {
          RGBColor[0.6411207561728395, 0, 0.3588792438271605, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4322.801640121359, -0.9419512195121948}]}, {
          RGBColor[0.7292399691358025, 0, 0.27076003086419753`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4788.986130722683, -0.3367441860465116}]}, {
          RGBColor[0.7653395061728395, 0, 0.23466049382716048`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3983.758374229489, -1.2299999999999995`}]}, {
          RGBColor[0.6201350308641974, 0, 0.3798649691358026, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4661.844906013232, 1.3200000000000003`}]}, {
          RGBColor[0.4780131172839505, 0, 0.5219868827160494, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4746.6057224862, 0.6670312499999993}]}, {
          RGBColor[0.6124672067901235, 0, 0.38753279320987655`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1483.314288276937, 1.7520833333333332`}]}, {
          RGBColor[0.46378665123456786`, 0, 0.5362133487654321, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5085.6489883780705`, 1.376551724137931}]}, {
          RGBColor[0.6182908950617284, 0, 0.3817091049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4831.366538959167, 1.6232258064516125`}]}, {
          RGBColor[0.6137808641975309, 0, 0.38621913580246914`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4746.6057224862, 0.2856250000000007}]}, {
          RGBColor[0.6339834104938272, 0, 0.3660165895061728, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4619.464497776747, -0.41129032258064585`}]}, {
          RGBColor[0.7330497685185186, 0, 0.26695023148148145`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4238.040823648392, -0.47021739130434764`}]}, {
          RGBColor[0.8389236111111111, 0, 0.16107638888888887`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3051.3893930268423`, -1.4475675675675679`}]}, {
          RGBColor[0.8153722993827159, 0, 0.18462770061728406`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5382.311846033458, -0.16644444444444426`}]}, {
          RGBColor[0.6550578703703703, 0, 0.34494212962962967`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3559.954291864649, 0.7959999999999992}]}, {
          RGBColor[0.5314332561728394, 0, 0.46856674382716057`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3941.3779659930046`, 0.775394736842105}]}, {
          RGBColor[0.48592206790123454`, 0, 0.5140779320987654, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4110.8995989389405`, 1.2240909090909093`}]}, {
          RGBColor[0.8005574845679012, 0, 0.1994425154320988, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4153.2800071754245`, 1.151290322580645}]}, {
          RGBColor[0.6909394290123456, 0, 0.3090605709876544, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2839.487351844423, 1.7116666666666678`}]}, {
          RGBColor[0.7388445216049383, 0, 0.2611554783950617, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3305.671842445746, 1.131428571428572}]}, {
          RGBColor[0.7157889660493827, 0, 0.2842110339506173, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3328.7667840127515`, 0.3329545454545453}]}, {
          RGBColor[0.7309375, 0, 0.2690625, 0.75], PointSize -> 0.0125, 
          PointBox[{2754.726535371455, 0.36722222222222206`}]}, {
          RGBColor[0.5742631172839505, 0, 0.4257368827160495, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5636.5942954523625`, 3.537272727272727}]}, {
          RGBColor[0.46717592592592594`, 0, 0.5328240740740741, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1864.7379624052924`, -0.7016216216216216}]}, {
          RGBColor[0.5251658950617284, 0, 0.4748341049382716, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3136.150209499811, 1.2661538461538462`}]}, {
          RGBColor[0.718173225308642, 0, 0.281826774691358, 0.75], PointSize -> 
          0.0125, 
          PointBox[{3432.8130671551976`, 2.5001666666666673`}]}, {
          RGBColor[0.857878086419753, 0, 0.14212191358024695`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{2076.6400035877123`, 1.7870000000000004`}]}, {
          RGBColor[0.5793460648148148, 0, 0.42065393518518523`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{5085.6489883780705`, 6.181200000000001}]}, {
          RGBColor[0.677488425925926, 0, 0.32251157407407405`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{3051.389393026842, 2.893414634146341}]}, {
          RGBColor[0.8747087191358025, 0, 0.1252912808641975, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4110.8995989389405`, 3.203673469387755}]}, {
          RGBColor[0.9184992283950617, 0, 0.0815007716049383, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{1229.0318388580338`, 1.3092000000000001`}]}, {
          RGBColor[0.8866435185185184, 0, 0.11335648148148159`, 0.75], 
          PointSize -> 0.0125, 
          PointBox[{4449.942864830811, 4.282253521126761}]}}},
      RotateLabel->True,
      Ticks->{Automatic, Automatic},
      TicksStyle->{}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9284043281360044`*^9},
 CellLabel->"Out[407]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"binWidth", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binStep", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dataToBin", ",", "binRange"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dataToBin", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Quiet", "[", 
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Mean", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"NormalizeDate", ",", "seasonDays"}], "]"}], ",", 
                    
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                   
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "/", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                "}"}], "\[IndentingNewLine]", "&"}], ",", 
              RowBox[{"roomHeatVsTempDiffDaily", "[", 
               RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"NumberQ", "[", 
             RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"binRange", "=", 
         RowBox[{"MinMax", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "dataToBin", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"Select", "[", 
            RowBox[{"dataToBin", ",", 
             RowBox[{
              RowBox[{"Between", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"bin", "-", 
                   RowBox[{"binWidth", "/", "2"}]}], ",", 
                  RowBox[{"bin", "+", 
                   RowBox[{"binWidth", "/", "2"}]}]}], "}"}]}], "]"}], 
              "&"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"bin", ",", 
            RowBox[{"binRange", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"binRange", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "binStep"}], "}"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "\[IndentingNewLine]", "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.926871335054269*^9, 3.9268715546107144`*^9}, {
  3.926871606655013*^9, 3.9268716081577697`*^9}},
 CellLabel->"In[408]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -3391.7802515177696`}, \
{-2.052667824074074, -22369.578982178715`}, {-0.7354195601851851, \
-10089.904938796913`}, {0.010140625000000009`, 2283.6982441792943`}, {
        0.8263213734567901, -1768.2373147967207`}, {
        2.0125133547008547`, -5800.550419456064}, {
        3.1016729797979794`, -3947.672970109365}, {4.1239267676767675`, 
        5869.227613870418}, {5.126527777777778, 6622.547444348838}, {
        5.742246260683761, -2487.517073319545}, {
        7.419729166666667, -1669.4997656517112`}, {
        8.072326388888888, -2403.6192153776765`}, {
        8.930975694444445, -3970.422456463508}, {10.130849116161615`, 
        8856.272476371365}, {10.998928571428573`, 6628.246864842879}, {
        11.91348263888889, 2133.0763235344334`}, {
        12.91978298611111, -961.0216106175006}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-22369.578982178715`, 8856.272476371365}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, 
        10204.200410011807`}, {-2.052667824074074, 
        5840.776330739972}, {-0.7354195601851851, 1515.8408540873586`}, {
        0.023391203703703713`, 5038.169218970295}, {0.738798225308642, 
        6635.076990030051}, {2.0249045138888886`, 1776.2549844531568`}, {
        3.1016729797979794`, 4139.409143206561}, {4.1239267676767675`, 
        4375.419718381072}, {5.153943142361111, 130.6998969018671}, {
        5.66523726851852, 501.7588759479104}, {
        7.367936507936507, -2877.258894858937}, {8.129409722222222, 
        362.6719354400236}, {8.930975694444445, 2632.3057389606156`}, {
        10.03892361111111, -488.2239947190478}, {
        10.945060763888888`, -774.0034005043207}, {11.948962191358026`, 
        617.6976869655741}, {12.91978298611111, 
        2088.703427487147}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-2877.258894858937, 10204.200410011807`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, 
        2379.5616104718433`}, {-2.052667824074074, 
        2321.5365866778425`}, {-0.7791180555555555, -4392.150776505273}, {
        0.08026681286549706, -3270.743360924616}, {
        0.8451354166666667, -3230.5002767934006`}, {
        1.9692681623931623`, -4779.805509491041}, {3.2600315656565653`, 
        438.85290283628524`}, {4.117320601851851, 1287.1201682357635`}, {
        5.165335648148147, 640.5722671920648}, {5.783856336805555, 
        643.9025486142441}, {7.376199494949495, -1436.228564180512}, {
        8.137349537037036, 5647.047483032937}, {8.869146412037038, 
        8895.052338748028}, {10.03892361111111, 830.7860811141576}, {
        10.923595328282827`, -215.25013801213774`}, {
        12.044934895833332`, -418.44425953296377`}, {12.91978298611111, 
        461.16461525082957`}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-4779.805509491041, 8895.052338748028}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -3754.789718627528}, \
{-2.666938785422862, -12359.829401775849`}}], 
       LineBox[{{-0.09885824123084985, -12359.829401775849`}, {
        0.06632291666666668, -2025.2525597474018`}, {
        0.8451354166666667, -212.43228460800438`}, {1.9692681623931623`, 
        1981.9034034713527`}, {3.2600315656565653`, 243.85259850368013`}, {
        4.117320601851851, 16124.800619971114`}, {5.165335648148147, 
        11264.614822122045`}, {5.783856336805555, -1247.1251137990835`}, {
        7.364586805555556, -1997.637479846738}, {8.148509615384615, 
        88.03315571841989}, {8.940616319444445, 647.4818264905629}, {
        9.989469696969696, 776.3813418670245}, {10.981319444444445`, 
        294.35664959721606`}, {11.997307098765432`, 1176.3871262111436`}, {
        12.91978298611111, 1807.221663522413}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-12359.829401775849`, 16124.800619971114`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -257.26684508603074`}, \
{-2.052667824074074, 313.97345628376587`}, {-0.7791180555555555, 
        1773.881080497396}, {0.0267404513888889, 7393.051288965056}, {
        0.929734477124183, 6873.004157787771}, {1.9692681623931623`, 
        2981.346180465986}, {3.2600315656565653`, 2789.826301449604}, {
        4.117320601851851, 680.3606160416446}, {5.165335648148147, 
        53.90616112872351}, {5.783856336805555, -3217.1616308482344`}, {
        7.376199494949495, -8177.285579702721}, {
        8.137349537037036, -4308.337805965998}, {8.839542297979797, 
        688.7167548470413}, {10.224454861111111`, 3252.147329936426}, {
        10.986610576923077`, -457.6187093762889}, {
        11.753060515873017`, -609.3247483025598}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     11.753060515873017`}, {-8177.285579702721, 7393.051288965056}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -10435.883264695634`}, \
{-1.9066765873015874`, 7701.602052473879}, {-0.7581356837606836, 
        9213.101242263663}, {0.0027361111111111115`, -2837.0093475974436`}, {
        0.9257708333333333, -4317.411229287492}, {1.953881448412698, 
        3333.147346682808}, {3.1783541666666664`, 4912.556580459604}, {
        4.145381944444444, 2166.7330979583176`}, {5.093614969135802, 
        1764.0939127273673`}, {5.909370659722222, 218.29367450623806`}, {
        7.389985532407407, -668.5522741653552}, {8.154980468749999, 
        200.94023392239808`}, {8.806006944444446, 195.96908253986186`}, {
        10.08182098765432, 296.9907624371649}, {11.124532828282828`, 
        277.3195497890229}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     11.124532828282828`}, {-10435.883264695634`, 9213.101242263663}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, -6359.062919976864}, \
{-1.9066765873015874`, -4200.1658921755015`}, {-0.7581356837606836, \
-2424.373802556959}, {0.0027361111111111115`, -2320.6823037788386`}, {
        0.9257708333333333, -21360.95170656427}, {
        1.9968263888888889`, -27619.931547632117`}, {
        3.1802546296296295`, -2174.7634591895026`}, {
        4.117387820512821, -2919.1657186616626`}, {
        5.110222953216374, -2804.313654055243}, {
        5.879946895424836, -1541.4789542160006`}, {
        7.3858894230769225`, -78752.77828779026}, {
        8.106848447712418, -60785.231000486514`}, {
        8.952627314814816, -332.1159396147456}, {
        10.077214209401708`, -387.8278768743266}, {
        10.986610576923077`, -974.292256120707}, {
        11.877022569444446`, -978.2758296778668}, {
        12.906516203703703`, -1031.5092545620826`}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
      12.906516203703703`}, {-78752.77828779026, 0}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.886701388888889, -9836.286613163178}, \
{-1.5959861111111109`, -29145.479047034238`}, {-0.7964409722222222, \
-10360.212442270275`}, {-0.012694035947712417`, 4779.709958910669}, {
        0.8847938368055555, 10765.103728129521`}, {1.9354629629629627`, 
        6374.06517802277}, {3.0773302469135806`, -9827.955923208037}, {
        4.117029320987655, -9400.30054045284}, {5.123072916666666, 
        7431.11233839962}, {5.656931423611112, 16753.956379926807`}, {
        7.495873842592592, -2899.81586863526}, {
        8.06134548611111, -4905.410669121865}, {9.201646825396827, 
        5597.268954826813}, {9.816516203703705, 7963.858565091313}, {
        10.756293402777777`, 1093.8165849553225`}, {
        12.14304861111111, -731.5514870642679}, {12.91978298611111, 
        370.50164408469664`}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     12.91978298611111}, {-29145.479047034238`, 16753.956379926807`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       LineBox[{{-2.7511689814814813`, 5183.0809043406}, {-2.104013888888889, 
        5513.805484650224}, {-0.5970442708333333, 7814.103519128564}, {
        0.1223676215277778, 7271.669131551544}, {0.8428146701388888, 
        283.24283436705764`}, {1.960173611111111, -9663.739924794916}, {
        3.386236979166666, 12618.444243509432`}, {4.178611111111111, 
        12703.667509461435`}, {5.102046296296296, -3258.143865365924}, {
        5.749279513888889, -4218.058602343254}, {7.393429783950617, 
        1916.300956056891}, {8.1335202991453, 307.2229824541004}, {
        8.92437789351852, 1018.9788899452363`}, {
        9.989469696969696, -1831.2021165897138`}, {
        10.856538194444443`, -5516.131223006466}, {
        12.109330357142856`, -2492.7814159936797`}, {12.91978298611111, 
        1105.797364093014}}]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.7511689814814813`, 
     12.91978298611111}, {-9663.739924794916, 12703.667509461435`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9268714728253317`*^9, 3.926871557080282*^9}, 
   3.9268716103425198`*^9, 3.928404356141431*^9},
 CellLabel->"Out[410]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"externalTempDaily", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{"NormalizeDate", ",", "seasonDays"}], "]"}], ",", 
                    
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
           "}"}], "\[IndentingNewLine]", "&"}], ",", 
         RowBox[{"roomHeatVsTempDiffDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"NumberQ", "[", 
        RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92687056895706*^9, 3.9268706873085356`*^9}},
 CellLabel->"In[412]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtVAk01FsYF1N6khTGqyyDyZJISMvQ/6ddZEmJ9kRJIaT0XkWJigyTZopS
ljKWTrZCUXOzq0QkCU/RRpskryK9/1/vnnPPPffc+333+37L1XL3W+UpLSUl
5U5PZl2rVBe59LQqLsyaV1BlJ0BJQrCLubYsUos12TIDIqhEsw5++aGMaL42
V9QbilPTJK59u6Rx54qji1nkUdCn3p0tHdQ3ozD26YxwfImiL6z6SjlO6g7X
qDyFd05FGuFR42BmxsvSmlFC2jQ90t/3dklk9tSxbGVjcOfA7M9Xq/upXzcj
+MNSx7EhpvSr/kEZtMjPr6zNif29LxmS9Mu3GvvvT0Wo36aVlru6JbN0tcUJ
fak4d6ttmFPWSrk1fmVFLqqAwUhAO/Wxjh120j4NbKZ+70oqdlPWEb5+LE7u
WKIzqqOcUrSbkxQyeBIV+SmC0E+tlPhJ9WuRiwiPx8z3SYp7R6lpZq6QHozE
RQaAOAUkJPKuZbS0kfU5o9fn3FZEx2rXZbMnJJPY5Lyyx7OVwTo7utd7QxOS
GukEUABY3O4BpUj0e3e6PapmwaM66ErK03B8mGC6el+6HMbotH9VuBaMu+zd
d9l236ntGX0Og2lvSKqA7tCnX+J2pvsNhz9MyJxs3YvCLoofjyu7Nt+ERjiN
6MBE2FLG7+s74vHtdVN5vhwbbJc1eiYbwvH8PM3ofBU4rZdOnrUiDOseLSdz
QmQh9f8Qj9/7DDIcrJ/xadNScTYRqqcZF0rqqYhp6wTfo5vg8OOyw4+XPRLL
fmcrkyVJxJoJeD6aWLvbF8n6XyD5ZY9fDajKkuRby0QPbItJ4GCYvFC9RRK/
ND5r57ZruMwkuNUjKRxY3JxTFQrC9Le7RtKxqeeX5flCovb2+hH7812U0Qvt
FzuoJHJ5j5Vcc9cAzVeWTUK/mLBGBPFJUlpZVWQSIyRnFnTHLbBRgsQwyl5J
TEgIA/iZfkra2fxvm/rjMBENudfMzJEUfais6Nx5CJOn8+w2fnwteWhnZaQT
n/t7rzCavL26pl17o5A0pzIPfqaKdE4obzzxkDxgCCkYi05tZ0esyyO2h3Nf
qn7RgCAm0Ltq7l14Hs+4/+GXMhb/Ez2xYnEsuKM6ShKeKkPz73l5aR4CBKhV
+auFKGJqrP6QR+7Ab/80/KQ6rS2LQ43KiCODJ7ed4mVFBepEpJA9tHwNpzRK
9qf4jddUSCSraHu8ezEO3Ag5bu2+YvIX3b2XnRIW3Wtr4CgIwdCv0q6LOwX1
VW6nEglDv0YNF0knFvMbp5aSJ+W0gJW14LpEY8HeniwyAh+4YFvuLRVk/osR
PUVPQ8mNBzxH0UEw7UzI1MLzsaqL7BLfkFcDspOnO3PgFvbRy8HrOhh3lHiz
sXWPaUPM9xvkPePfXWoIcrE/c64mGUx53G/qWK4pHBv0Mhg0ur4h8hxUpDVM
FATuh3tPwGCYhwqihwN9PDeLfve7kIPuG4cddi4TkxH8/uTA1ObpcMTURHLr
p3XEvQYOSBy3lVdUQEb43MbFFgudq7yeoxh530wf5R5veKuWZoEJD16nh0M4
sd2nKRdKvbVZJ3l6ODZjx6Fn/cmkfqdMooWJHkoL41iB1kFQoOUunqyLWqOX
KUPifUi0oG8IteA0Vnh3tmoZbmwZV7Bl0RRsNrrZ9PjcczJS/xAb5tUBCzmf
QnDAxXxS7yNdGAsyLonqM4gvI8AObdRu9U1f1hYLDv2dmcRzYXjJdp65YhLk
C+iE5TpwrPQkP1YE4yZjWEcu3Cw6WvyDfGEpRyvQSRcGrnPdPruHoI/5H1zV
keu1ZEa+VRQ8amaKhlJUsHBl5ji/R/64r+B8trVuMv6ITg3ITg9FA23n7Gc6
uDNN+KW97zBuM3rr1Ede/oMk35itsJ9KG6xAHca6P01KvcpQUkyPbdo4ZmZX
5FSWjZmFVLXjIQOY8psnnddrBL9rLr9L0RBrWekfAyyaCRNu/84ANpm+3GI3
T/wHpSTu/Q==
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     13.53298611111111}, {-13959.046692167429`, 12460.711305503035`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtVAk4VWkYtmswst471izXcmXi0WKkcT6amhZ0o6GR7bFVUhHpuhEhkf12
FSpJTLjG2lCi89uyjYpMWUOkuHbSEM2cQ//znOc833/O9/3/+73v+6m7nbXx
FODj43MiHvJtL/vi2l42FT6Xq6Wvxp2HqnSm3TYNUajlMvW402yQjxcKnl+W
A45qbhSn+gbEaeFH504JgPtAn4ynsz8QX73fdQ9gTH05r91fL8B8LPGDzSfs
qUGehbJiFPAOP1K9EisOZWPxbRpa4aDmkTtheL4DY3H3W3XMJkHfJmJjZhgX
m0Ywl98KT4O2zxY0LWA6+UGhzXYl4JhY+0k3WBCyZQO+s9QMWY+rVnD5CB67
NCsVws46W+06NYZXigidrHNKgtTKvq9qdb1YkSU9K2OODfS1hH6s24/XZhcZ
BxQSj/czzEepK2UQLULM8T2a/AP12EXZwskeF39oKMtKDpvuxcIO7ehu3HMF
OkV2ns68zsPavNS59a0XIYNsyHVJqOkL3frwLoJjxcLHiqul4HXcaOnIPi4k
3Sut69wuB2aOFuL5nMco8xVRACSB+YssVUP1PSx4v/u9vUkI4l5QfhML8ofJ
jUZHAnPF4FaZqXTugjvUUHxqKJZLWKz5FJUnUQz3kwmEpxdwqV8/eTlGFwAy
LtLOSBnGAkfMFxiKd0D1CtHhRWngJLmHRU/Gwr+j/9SXiVHgCKbC4OVloMFb
BMM75WFSpMtXftYJHNr3IeNQUeD7th58H9ADgmowmh/OeMtgruPRokJq4uPG
t0fiUYrKH1sq8JdY4BcjjRaPZHRoOfvQ8sg4PlGa+8o4OhOZkwUGhdGT1u5l
DYEiVFbX+X6RKopYz1n0RPch8P8SIZGi0o23rDAOuLA4KJssUDmOlwRQd+rk
+AIi8fo0453MFoepnEhQ/vjwsvWtYWyQJW0/zI5F2b4/i70ZXsRiwgP0ZD4w
kdCaQKbxLJ5QlNtoNOKYjV032y8LO7aLP5oVZKNQkgDOAuZEnVEfsWYhwxsr
bs0Gxfhbk1A2U9gPFPRMLZ2mRvHJuoSiPP2b67GkMGqKaUsyVkpCb+6TB85i
2o10E+nwDvibJKh8Ayi0lJwwckDo4KWSEeq8Kri0XeuZD0bI82pe6+R/cmDr
2tB1Lz4Z0fgHqtK75OCSluHP+vzBcE650U85VAo+rDDGBHXOA4PsH60fi2y2
qr2aVYF8CfluVnyF8xK3CDiYRCEbwi68IXGozkjVzJqPRSwC7QlLWXgmcvBM
r0noGv3y/dowJ/5hU1xqCCLpV22mgcC+RXOZntvodT0hYDl16Dlu6ylt1b/u
J6DBgVlZjm9hAVrTU7wWPOekiQzRExF5/Y356jCkmLCaPXIZvV8UVdCzVYMc
pUj/XXsjEOmOKm8K+NsaueyZjYW1+1qoATczAmpF/oQ1vD+ogcWGMxCxdBkq
V82jWjrUIN2RfnLbk5r1/rvTAIJy2icusNEEOQ+26oJoJ43bKuiDyHSmgw5E
5usnBYrHIdmZNm6MqQ6UB5jFB26IgDs7Xp4UTFEHXOeuL70wGf5yFS933a0I
iyOiDUcdvcBt/NyXiBUK0Md7CwoDKiDIbpvMTLs2pA3e7x83yUBnSEEMaIBS
7VLD0uK3+ZNGg0tGC3Vps9EgUU4UrNcERVfdxBULL3hMGopBA097i2xJaz/Y
JUYo4rA29F9kmU61nIU50r9HVQDnmT4yx6uQR7PBjZUsefj4Y+TBGfsAaJW0
vdn7QgHqHWambbT8oIOwW1GPJqxqODu/fHYKqsn5+k4XbnsUOC5JFIC1EiH4
chV46B/QoBxSjqqeEMtdAwIdzVcfDEeBQQXWxAihw+ev45Qs+wRIGP4pYVhq
Mzw4lWr4fLMrkOnWPDrQmdrd/JkF8D8vptNq
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 13.53298611111111}, {-5173.531716565918, 
     5626.798051667876}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9VAk0VHsYb9FTSGiMFN5ghOo9Kiot7q96FRGavBYtdhWFZBktpJRemEQk
UimPUclOiuZ6tpFOlpLQRKZNSDUIbe9e8877n3PPPd//nO//fd9v+bRdfDju
E8aNG+dGffR/y/T6M2tj1dD6dGhQd00ASpO4m010ZFHdVK8W/JYH1WiZI5JR
BiSMvonp3BhQkWdXaweBLHddZrcFJJF6gq2cQUIlyLC+4V0Zejbe0ToZKY9O
46roLrkSsNz4vcYBTcTRwU7PFodYPP+VuvgoFnxysJXResHD/WDTT7eEA8Ro
wMwhc4NL2HH2n0GDIxOxL7ToTO26TdK49Jtggfd3lrC7EMd8dm1Y7tUt+HPK
ysPZPtFIvPv8B6uinTAV1ggmdMTCcCxBRJisUjtsJR8DJt2/ZzWha+FoRzRc
wl+71+iO76gkLIvrYjJytqEq/9q5Y/3txJ1q9dP2Vk548svS/Vfjeoj03oJ5
IbIl5GUagDhF2PGKU6/ZZWB7zqTtOWVKWDcjtPA85xBiUvMqnpgyYOWmIC4Q
ReDqY+oBKGL4SFS7y+0zGPDs2tYolEFVb76V6OA29E1bYB/IlwPjgRZmHPVC
OXNfOdN6hLgnyrHP7eolr5+jJtw/IOhU9uO7HrgGcnH27MvxYmKF3khfQV4u
tE5SCA8pw2zF9d0XWakYftNcmS/HxMDIhZbOs+UYqYp1nNf6leBmZyTx65zR
mUwxvFQVfkY5a50tOHBotCAXh8qC4a4ku/RWLUmzU/KbEjYm/+iJEDohY6p/
GyayYBTP/3H5MJcMyX2lZrVWG1NaRo+tMDsmxaNiFh41JFrYcxPJMTz01DDu
v7PtMyUIPgMLm3/xOD/ohnjN9N+LBQ3E051RNhyDRNJ2NM129NV7gV5Z0J4C
TjFW0gU7J5FX+rsX215JR37Fk9dDarLkcZ3wzA0eAhz8ekIhXrNV8OhjkIpE
0kdqvCsIs0kWE8JdC041L4wh03xXyLWIh4iEyh9m98eHkzJjguoXGIj221b6
xJLnzbvjzC2n4/mNPQHDEdFkKE3Y+QGC12n9k+t7mzRO+OZSa5QjUAvLEzvo
LIP6nGXWOz+8EXB2JxhyG7dLY8VJZK5cybvI9Cyy5Tpd8BPxbOuy0oFRPh7S
hBZNhtrUBhtGbAasaMAkWvji1jrS/OEi3CMy6/p+MlDy+lWj3B+xYI/vKE16
xsDptqzy24UE/DRqDmiEKkFkEFTnbO4m9V/Td4KljNtWzamkHY0XW0Twbqbp
r/EWkr6U/OfOfCwI9lOv8F6ZBg5lt56X8ih56OgR1sHHIWr6PdbTsaWpbGrP
8mhSsJUi5Avrf35oOamKZkOxrl2GuzeRpOWkVcuGWWDyff3RKDytpAzB0IbH
2sc9xi3hUn+CDUnb+gH+knCM6TNaDyqB9a5JXZGgx5t2Qxt2IyG1zsvyyNdD
supzNrFwSjaCs6U/FrTbSj2ZqNXrsS+3DEIvvR+8NBCXvdymNyoYdLvsYU34
TvOPeFETBApt71AFFsTtfXPYdpvh8t7v6wk3VXimmDv6/cyUzr+Khfkx2h2P
YkKleM5gwVDZxnR34iHc/b7y1IMmFiJn3pmcZTKCMX5d2cgvFGs9WBdHjtVf
aID6qrfykl5Pkk7nOugjut/gRuHqC2TD3okpi4z14Vu75kn+hjCkLKJu4rUx
Es60V+4LQaGTfJHT6pn4O66ef3x6nLS/b0ysFr4J0eWGI3izicrHxtmwVC3o
JVuvkt604Dp04Kft+G78kkzpPrzIRntWkY/flBgoFFEPVuriTnz25rSTYSih
DW7HRtF82aw0J298pvfHVk2cqn7dSbo/Jt1qjRK+XVOFzPqMw2/DAlCnuOlC
e706DjGPz6j7GIgmyt7ZbbqQRDkdbTY/gjJaT10GUKg3TOClH4DNLMpARZrI
FLjucB5NQOk96rjqwOvl8psH/RNhVEwI7Y4aooYzZ/3XlJPgiZfwxEpzsdN6
Fy9Bzx90uk2PIZSDqm4s0g7Dv7G+BK0=
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 13.53298611111111}, {-5715.947018170094, 
     6380.067138955002}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9VAk0VWkclzVLaDxPWd+zRyETRbj/Fk0NZUmLpZI9tDwiJJSMjOwhjCWE
MNYiefU+vcfY2l4kS1GWSLKEsaW5lzn9z7nnnv93z//77m/7qA7nLZ05OTg4
XPCHeB8Te/HnvngJmLwkuCX8QCOip/od3SbPB4eF1bPzxwpBPIo78NsCCfi1
WSp99DTAO/ePnb3YkcvMuoK0QPQtUolx3HIG42+/93lZ7DaMWjyUDYsUBO4F
I6blKB1RnAq+aPmwsYy55pJQ2QzokcMXJvoZ6Ul9woYi7eiJv85kceM01sK6
aaAexAa7mKczqoFc0DlSkxmuVgDv3+F1ZYJRHKt0qXm+fvU7fYnhaXDG4Wmp
Ql3I+ZMHDTxGGIKfWNeFA+vg9qOeZQqzGzvoeTpRyq4ZNq0MvMO2bLVSXSPK
RmQCj3sDpqOnzdWn3ooiXI0V1vSysAvzZdJDpESor8yOCxnvxpJ/fNTILs5F
bbz6Z7MSRjHK2qEI7uxsyCAISRCGK3eHXdQkJ5FtGY9t2WNRCJOL1XXdwLUr
9k4Fs02HBF0xNU4WHX2Q9RrfAISBrGb/yq1jAKbdP1q/auQGrL2tV/X9SRgT
0bbyLRCAx2nnB7y1AqCO7FlHNp3HciN2OlVE1kFOHI7w7DTDKsVrSuB4GaDt
pcoZif1YSHuc95uuEpANwxmfXQ/hJr4PbKJYMDfUzqoUIENKaOaQ+IlSmK+P
P7W5cxGbK/owU5JjD31puOL64kCS8/T1KLsINq/2o+3BfNDYdcyErUsHQq2a
LaIgxjYaq9rrC/nrLnYBFwUc+U+GneOmreJnSkFz4ulx6/c0WMGvJAEc/5f1
FG6IAhLwPpHoH00tQ4kyeRrVjJdYbfylU9S8XGS2kGu2MPCZkbH86eCjxqdo
F3FAHw+y0rQOMc/LRJXMtsFZCT4kzK1ReXqJjrwXQ4USZToZqfpeMgfYeQgR
/Hg2MYzlR1X2OFwF6eH7Vw+l9WMWmpxtO5YKUO4FQ4GO/lnsrXJp6cC1fMS9
YrBxxr4g2oPbYyy4ZTSSYHRADGaMp/VnIjNRMCHYrWms3tiulae9EGklLTk0
aZYxZi3SJEXobrBRbafpia9DDF26kHOee8xqL8yDnhR9rco+8xfqyCEOnMRc
bLfaba7NRa2EoFVrgTq1N+DGZAUyCSofkPgmCw76Yo7bZNOQc/i9lrEfJHhO
5/fzk2KA4ppeeupbvN9er9oR6AJe0v/QpINF4e06rvbfbW/ASh7Z37Elb6pc
EO1vZE7wp/gOO1scPUI+egddwO2vLvma0fP9fsF7jRKwxOM3+kEQOqNQpd5y
FwTg6N1MxSCpv2Lzl08+iHEcF+hfyk+9Jp8VRbh+l//ZE/YSf6cMrqbMqnyd
IkTYS7ZJEQR6aHK7jZnoDQsPCIkK6V5bDd0sylfzC4pwUdaqlT1QuOrXKCXg
WX8y3yokDwi4IoVUSOGodhqUZcLgLN9GtcMUEA9XjqnIa0BE+ujuZHAL5h18
GhoPX4j7w0MakhDns4kPtwBn+1ywEAUwdWz5yJw9OHz2Wgx1Egc5N84hw9wk
WMG/mwLuZiKGrRJZq3xuoMDb67bXhcg58Oj7rj+a2RQYvPvQsiI0CVb0dVQE
7e7YwTCJmNXzflUFUhqtr4cai4hxPxsViGu/drmFnAhiEzhBO1Vgt9jjy/Mv
q+HlGa50XS0VyA7QO/U80hvSdfGVRCp4y6dTBCgx8MBesMp+jyQsNsvcqWmI
W/3fJTLs9xkuUW3IAv+j236ZeKUMP6x1/GuqE+AcYcBeefBZMGh4NuAPK/dl
iiI8dLY2LKfFgVAVviFLAQLV9bo2OyVDDRF4c0U4ZpA8MFwcCFPEfXJcBqjn
7dUmy+PAqUkzaSlbHOL5ut80GV6FFuHDyd0vNgKP4uhve3g7ERuPe2mXAgy7
6fNvOF0Ljwl/fVQFM6GosfKWSjgkhQeqSgY84tu0xrmvA70WL0d5oHkvW+rc
vAaa1Vij+ZVN0Gu8xwZcgyC6f0d0v6g61JEMbZ+PxQExfmh0E/iBeLRJQAj8
B20bDO4=
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     13.53298611111111}, {-14862.342454864922`, 15611.873892051084`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9VAs0VGkctx7LShNmjMRoMKZBxa5HG637t+1ajkeRldhSHlt5Rw82kqw6
xGbKUERjPJqKNZKRluZjqBjKuxKVPAqlRMirvZc9e8+5557vO/f7/v/f66/j
E+rqLy0lJeWNv8R3J/lRku15dYhk6kjHj/CgKjPS3UxXHroEQTRNqXOgliIb
PTFLgRA93bUqEXVo4qy+yMP1E+avktWaQquEUZfb2glnV8DlvILhHtl/EN2P
/9bkSBsW93wmsSeIBz1r8Y0P/aJSMkmar5kFd6PMx4seTGJ6qpPzJF8u/Hau
9hMrWgZWb3nGbvLev7yumhf5jnI3bq8UwsnQPU5bAodFdnttr3x2SoKLd3oW
6eJnmJepLC9IyAaDpQO9WNAxmaJv9DOBSvQbcA/rC0zPOLy/ADq+tgzmXhjF
Br1N69yUpiGHAHSBBDmb/+RU2QjASyDnJahWhrlTfHK1EhtSc2+KO8wp8FoN
NU7b5QK3Hb8ASBDxeJsBqykLJgNe7Wp9IAuBV3fLR1sFwLtV37kd5StC/UkP
ukFWNNRQg2qojp+xHF+xq4MRH/LYOILgSVG0k8PmSfYVQJtKmDmcfqx+Q0Gc
3cBl0E7AGZxSgai3YjAN58HMUGddmSIVzIx5KnZq+fC5/rz3+qdzGL3QsV/Q
HQwvs3DFLNXgxPqaTkPkDZ6tdmhTrDwMpPWwWJ5NQLBfuUEZksMLU+Xmg+Hq
ysPdIEOHlcwpo51dXHSidEDdwVYHZj1diiNTytESH2JNiHBz6SkJaENLfOir
g9R/z66PuOB8CjRtLOtIfB4OHFrhxgpRC2buLBnLEHbAttn8bbMDI6J9eQY1
LxMugg1R8KUcepUzcjjILgPKxB2DU+ryKFFQEyVx4kLEXLwSh/ZUtJrGv2//
iAdab27FOWf1YwlPpKSvjTaj/LAfFB/3T2FzW4uobTNcJLtkmPciSV20qoH1
LZRmPXzB2p4MyeOkCsrZfBRLCJY2iZUonrJQ7KpGJunzPg3GAtFFheSEEL+t
oGFo5bh7bEjEVw59Mrx4aHlNkkONYfMNzfMC9DiPKDiOjXQOqRa1N0ETIahQ
AUb+ou6KkKoFB4KwCW0YN0kb9OF0Iv8z1yTvvlDgkowZ1ihdD4yvXlRlPqGA
uexxm8tHPSBc6/4hrVhlaHGzYDUaxyznqW0Bez0QNElu5KPtBF+MXky2l8mW
VN1BYbi9jda0izK+vdHqLofAFY/TaN8KsFlwqkroEMIfOPoDjmTQX1vAMcKS
kcgDF2Sa/r8+hJ3Uepkg7YISx2MzEWEn7QYG3NUz8uqMKUVddWU8NkUH4gsN
ewLvCdASncCAVEdqkQKrYtmfKfqg4zsXlfslFxHwVl3XgYP+lWsqnqahwSl5
DcMddCANOtt/r1iFftbDAQdQgUaWFNs61aO3RP4DtSDmxqnf968sQES7jBka
qCR9ei5e5CCc7ZBYJTpkm+zYMqB7FHxGwufi/dQAFj3jzrQlL+P/kQ7218vd
HUUFaInP1XSY7d4j0ZCrRncWbE43ttHhiKu8aTazdllfXwZYXZoYC4gSLNc3
ZcHt/NNGnnaxiDge6bkOKGKHFOwnMSJ/aL6RaLUOhs6Pn/T5tRBaDspkW5is
g5mHqfr2pQIg4fG4qsGEWEun9Aa9XJRtgf/B0QHuwtj6kWkhlO9dIdy7dQ30
jV1XqR3qRUv9z1Oh2cE01D4kD6LczVQ/tDLhhdzxhAOp6SiEMOQLXRhvbLB2
yGiHpXl4iQFv9k3E9E0Vg5IQv7BOD6r1adaJCggqiQGwnQHvw3x8GZp/w0di
vnjQQPHjwIyfZynyazBOn+epwbGbtbphD7NBQtqR8eyRBlgaxLc+NOJBGx7/
km49YKsmt/wyVAzVhN9esSDplGNL+TEuOGviARPSIDwrnVLSXoj+BX522PE=

       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     12.441805555555556`}, {-16886.342663180505`, 16297.519311098436`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
B8cbRiEOOdvxHxfN9RU=
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 12.100625}, {-5146.603588155683, 
     8953.698842654501}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
ZXR/
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     13.53298611111111}, {-10980.119799308948`, 5601.738202882315}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwdU2k0nGcUtoshCGZQYxkmSpwcSxmJaL7b06IRxtIcJSkStZQgqPTYJksn
TipkyNiXqISppFFLiJ3vtUSptEGtsYURCRo7J5bQ73PPec/7477Pe+/z3Ocy
fK64+omJiIjYEYe8v1V+eceWrwpaLE3Ln8c2oTEnys1cVxp0SiY4IoWFQL0r
Ebe2rQJ8K9Ethb12SDqKu69eFoOxOvqdWkYLENmg6ZFJLGTkfEm/2jisJRIP
XDewAfMUBb7BFCy41GrFJ8oCl+/Or1yrhDFt30f/LQvx3aLOCjO9VmiOtlgp
6VzHEoT+U0+6BfBdcuuGQZw4ZDlTlNa1x9DEOBGcZfwXdo06XizWcpBv3MXt
jvs2xhj8BTeueDlaX57D//aol944Vg5Z9WN7Om2j2G21d0ZPQ8vB8AAwjim7
lL3tMS0BGsknqAObYMRVKyV2QEKAjZ7oZDvGs46t15kfgeeVD+/dWBrFXled
Mn4uU4v6paxCClIXMPFLd89PRTWgfFKQVHlYtnfbYPDz4EK55IXyJkUYt+Yw
bnmkQsqDp239FiqwaO+naU4vhoJ/iQ9AHvzTBuqrk5fRetC0R2+nBFjI2N4f
Fj5D7xXMzv30iAKWPI1tsxOZqIUW3EJz2MJclAcsFbuXoPAewTBkHbdcVYzP
kikAZFmmn58uxLxzwkIs2M9AK55QePMIfJXkZppPH0YfZgfaKyk0MOHtCPIC
MqD4cOQrENeB9EFWnojpb+haxYzqWVsGUIMh1mYwDh30f1QVFrLmmpO1q8Bp
u8hpe2YeL1PiYU6lWVDZ1v9mU1UaWUU3lTFZbejHHa5cuuYIbiLpGBz3ZQ4U
kYD6efwD3eDqbBkXIbL/4C480sFnT5TXiujvqm6yc4UYu4IqGyWZC0Vhn1OG
hJvYTdY1FTbKQxIHBljC7fw6K2nWmZB2ei719BllGPIOvXpxIwVdJwVNW8e8
5aJfqPlng0nGrk+XcTnu176zP9qVhNSPnXLwXJzFe84EMPeO18BQIVlgBRN/
b1/BrMhFL0iBqw+BUeyGtKN0MTpLCrCmBUzzebtwgQAxRScbc4ZVYC3wnNw+
lYMi6H+G068rwvSuqovSChcd7EPfR0xD+bNE1+BMGGwnDKLCgJOLDia6+wlw
n9UTKJ7OANh6UvfJrzHgMx+xw92lAav7j2Fxl9sQ7WautNyrD2+nJXhesYUQ
ShKa1AXB72vckb0U0CHWwSSbCUwbR9qnoy0gV31RtrpdD8wohyJK/2lAdeSA
nZnAj+qL5EqFgTWFYOiiD6yQI3EMzya0SvrJXRM6bWK9BIo/gG+XccbuQyrM
+/lbdlMuQbf8N5mjL9VBrJ7nZUEfhL6vCQe90oPD4crLgbFvoInkN20AfY+l
+GJj8bBIhpQOlG5lSwfqTSG2BjHAak1gGsf0Umc40NhAxPe60Ef9+Jr3RQwY
12CdzhxDaJ5G9h2h4cATnuAJFY3gcXKQo7uKJ5Bw9oIhrAoehJw0j4L/Abk8
KQA=
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     13.53298611111111}, {-20526.288700641955`, 26350.079964145476`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9VHs01HkUR1otEzYM45HBEEk6bVSa/K5eVEOjdm1Mte0MZS2hlcVJU+mx
eooZyqzXkKFUNEIZzZeRR0NrsNqStZ61JqySR177+2VP95zv+Z77x73fez+P
rwU7dHeAmoqKyrf4Ie7rj17NUmXtGGfA7n449zHY7bta9cG2A1svp6Dc9beA
fFn9+PugGuy8mmbHSkcFxB/eaqXaWY3tL6AkJXggeCIWXjs53I6xnnnviAnN
htYvXEIyk5RYfhjp190b7kC6Ad4gSRt+YvsMOq8TA6twIauwQhe0VG86n/TL
goSs+7JWJ30IVUsJ3+4lgswWvAFog0/ba3YeQwSjQd2+ijp1mPFg1o18TEWD
Oqu/iczTBKeK3jgsoQxVkoMryYxJjHfVNsttQRZkXzsZeiBkVGpj+CI7CG4C
WnvPJp3fgzGcIkmhQbmw9KzSu2zsK2ioEvRtDO+Aif4/qsWaZGCp/lCk7jOE
Jp8kfr/ixRSWPDdFMR9OR34KD7SWqwG1wmXmRV05KO/tqmMPHXRBqNXEES6J
B9HiiJewgArlG7zkVPsCOFHUa7hzmwW8d1yjOblLNL+/zATujmd8qJ24M7+/
tSGo/B++7y5aS/P0gZPB5/Kco4FvlruyVNqEbWP4FrpsTYddH3N2fewdkKr9
FUeeYt0AN+LBvxeixrDb4+JgAYhlrX1jhhooxTMj1dhECD9PxZH4Zi+kA/Tc
zrltmYAIfILrpRdn29R10vKR6ZviU16CHizAVy/ZY0sG5IRt1HzeM4Y5LH51
SutOF6g/jnYaKRiWUujBdfV2VcBz/SfJdbseGMczJffV5IhLEMYbxQ6tmgso
faBEq5Kn2fWOhdKyL8dcvfcmAWX5Bsb+oX5p2uZNzRXCuvlceyGasBIo3YJq
4Hk28eAIZsJs0a357TVqIAgtWQQNjIjVepWtaCcB4PulcFU/x9JovQIFnM+X
D87pw9bnbJ3m/kpEU+2UpP6pD2ccw0zPJ+Wgo6a14aZcXTjcN3vmGKsCSVKj
fNY0z2CJYYUZw+0SYBL40Tqw0hVMwRbxMwg74Em3N26ROrRMnCi82wW7y3BF
dGnBJXCZCvaehRh8+0CGHijbmNefml5E0r04QePUz3yNNN6OPzxj+Tkn5GXQ
YQONVZ6J1d/JgJDX0noakJi+cj+kQG3VuEH0LUBk1zq6erAIfYIXaOCgxPpL
a+Tok14vW8OlaMEbkWc+6hvToCzfQwVX9/3oUMptINwmCSJDSGWvn3pDOeBo
HuGSqNDA7AxpjLgA7IGjU3H+BjDuHqs98apgfr9NVOBRhUNyEMEnvIyoIAhk
knguTfBoxu3c02YqcE6zmhTDT+b549AgbYhOj0qtRG/x8c9+bQv7rA2yun/J
RER5lN8yoG6ftMd4nSjNuenHBXwLiOTueOsZVQQPDmqVHNxsDBbHy1k67eL5
eabJcFDS455HvwXRPmuW/KuwgZkRBz0VxwI4Qgio0xLeDEcWC5Q3gOqPO+oG
DdiXXKZZLblAKsEbVlvB4KLY3NZzMnhIGJZJg8BDsYxznhXwjvgP9ppBYEQx
f6TvOvjXOyZPCw1AaZ6/6bQsB8m196S0/04BLHaa1eybDc24fe+9tAJJ8TjX
MoIPFYQ+um2hu24uf49tIniZ4IYoMYObHieMyCXxICnHg2MJiUa1HP+YBHAs
xeqYsXYAGnox5SQeXOlZd6VH1x5Wmsw0mftcBqLcS2kH7hc8RoX0BPgPGOSI
5A==
       "]]}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.886701388888889, 
     13.53298611111111}, {-22725.284527689626`, 25637.610084041604`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9268705918120365`*^9, {3.9268706335220146`*^9, 3.926870689626293*^9}, 
   3.926871234206482*^9, 3.9284043772172384`*^9},
 CellLabel->"Out[412]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Quiet", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]",
             "}"}], "\[IndentingNewLine]", "&"}], ",", 
          RowBox[{"roomHeatVsTempDiffDaily", "[", 
           RowBox[{"[", "room", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"room", ",", "roomsWithTempData"}], "}"}]}], "]"}], ",", "1"}],
    "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.926872041789678*^9, 3.926872167213524*^9}, {
  3.926872247806225*^9, 3.9268722681409845`*^9}},
 CellLabel->"In[411]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
oWG5
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{544.8, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10086.537160283173`}, {-4.5840625, 8.950000000000001}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9268720206287203`*^9, 3.9268721449785013`*^9}, 
   3.9268723022600317`*^9, 3.928404373536942*^9},
 CellLabel->"Out[411]="]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["szimul\[AAcute]ci\[OAcute]", "Chapter",
 CellChangeTimes->{{3.926609654206149*^9, 3.9266096544308543`*^9}, {
   3.926609698670888*^9, 3.92660970001445*^9}, {3.9266098156146207`*^9, 
   3.9266098168798327`*^9}, 3.926611286329875*^9, {3.926879537185534*^9, 
   3.9268795378881397`*^9}, {3.9273072933032255`*^9, 3.92730729493496*^9}}],

Cell["\<\
- megn\[EAcute]zni azt is, hogy a nem outlierek k\[ODoubleDot]zti k\
\[UDoubleDot]l\[ODoubleDot]nbs\[EAcute]gek mib\[ODoubleAcute]l eredhetnek\
\>", "Text",
 CellChangeTimes->{{3.9271755201948752`*^9, 3.9271755323581886`*^9}}],

Cell[CellGroupData[{

Cell["dev: egy szoba, egy nap", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.9273072915421944`*^9}, {3.92778941603788*^9, 3.927789416516179*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dayN", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"room", "=", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massOfAirInRoom", "=", 
   RowBox[{
    RowBox[{"roomAreas", "[", 
     RowBox[{"[", "room", "]"}], "]"}], "roomHeight", " ", 
    "airSpecificMass"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"externalWallArea", "=", 
   RowBox[{
    RowBox[{"roomExternalWallLength", "[", 
     RowBox[{"[", "room", "]"}], "]"}], " ", "roomHeight"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radiatorArea", "=", 
   RowBox[{
    RowBox[{"roomRadiatorLength", "[", 
     RowBox[{"[", "room", "]"}], "]"}], "radiatorHeight", " ", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomHeatCapacity", "=", 
   RowBox[{"massOfAirInRoom", " ", "airSpecificHeatCapacity"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"startTimeBin", "=", "4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"heatingStateStart", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"heatingStateDaily", "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", "+", 
         RowBox[{"roomToCycle", "[", 
          RowBox[{"[", "room", "]"}], "]"}]}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "startTimeBin", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomSetTemp", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"roomTempsDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}], "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomTempStart", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"roomTempsDaily", "[", 
         RowBox[{"[", "room", "]"}], "]"}], "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "startTimeBin", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomLowerBuffer", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"roomTempsDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}], "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomUpperBuffer", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"roomTempsDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}], "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"externalTemp", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{"externalTempDaily", "[", 
        RowBox[{"[", "dayN", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"roomTrueTemp", "=", 
   RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", 
              RowBox[{"NormalizeDate", "[", 
               RowBox[{"seasonDays", "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], "]"}], 
           "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"roomTempsDaily", "[", 
          RowBox[{"[", "room", "]"}], "]"}], "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"roomSetTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomSetTemp", "[", "t", "]"}], "-", 
      RowBox[{"roomLowerBuffer", "[", "t", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomSetTemp", "[", "t", "]"}], "+", 
      RowBox[{"roomUpperBuffer", "[", "t", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"externalTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"roomTrueTemp", "[", "t", "]"}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{
      RowBox[{"24", " ", "60"}], "-", "5"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "LightGreen", ",", "LightGreen", ",", "LightGreen", ",", "Blue", ",", 
      "Black"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{
     RowBox[{"roomNames", "[", 
      RowBox[{"[", "room", "]"}], "]"}], "<>", "\"\<, \>\"", "<>", 
     RowBox[{"DateString", "[", 
      RowBox[{"NormalizeDate", "[", 
       RowBox[{"seasonDays", "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.9271247040335836`*^9, 3.927124718200671*^9}, {
   3.92712493085896*^9, 3.9271249465766068`*^9}, {3.927125286569057*^9, 
   3.927125288923134*^9}, 3.927125327312951*^9, {3.9271256375812626`*^9, 
   3.9271256390141068`*^9}, {3.9271258888623295`*^9, 3.9271258896531105`*^9}, 
   3.927125928020767*^9, {3.9271262285406046`*^9, 3.9271262391844645`*^9}, {
   3.9271270820683565`*^9, 3.927127082347931*^9}, {3.9271274468319273`*^9, 
   3.9271274589233217`*^9}, {3.9271275136661396`*^9, 3.9271275169095*^9}, {
   3.927127715411962*^9, 3.927127725905908*^9}, {3.9271277665984583`*^9, 
   3.9271277756533995`*^9}, {3.927128974145183*^9, 3.9271289744916897`*^9}, 
   3.927130116211074*^9, {3.927130150139742*^9, 3.9271301502994523`*^9}, {
   3.9271304275905724`*^9, 3.9271304279202375`*^9}, {3.927131054253414*^9, 
   3.927131060250697*^9}, {3.9271312694092026`*^9, 3.9271312739514704`*^9}, {
   3.9271325432923822`*^9, 3.9271325615316505`*^9}, {3.927132646515608*^9, 
   3.9271326886425757`*^9}, {3.9271330907571993`*^9, 
   3.9271330939919233`*^9}, {3.9271331293409133`*^9, 3.927133192775775*^9}, {
   3.927299023301293*^9, 3.9272990237151823`*^9}, {3.927299415218779*^9, 
   3.9272994257794733`*^9}, {3.9273007687083406`*^9, 
   3.9273007936528234`*^9}, {3.927300827866495*^9, 3.9273008279248405`*^9}, {
   3.9273052231611357`*^9, 3.927305230504528*^9}, 3.9273052933545623`*^9, {
   3.9273055644700904`*^9, 3.9273055671742816`*^9}, {3.927305876246721*^9, 
   3.927305880261553*^9}, {3.9273060618324127`*^9, 3.9273060962663507`*^9}, {
   3.927306206985795*^9, 3.9273062070324383`*^9}, {3.927306299321516*^9, 
   3.9273062994800463`*^9}, {3.9273063380891743`*^9, 
   3.9273063381516914`*^9}, {3.927306369752971*^9, 3.927306396711417*^9}, {
   3.927306476118909*^9, 3.927306645305908*^9}, {3.927306807099012*^9, 
   3.9273068330167694`*^9}, {3.927306957001831*^9, 3.9273069570484285`*^9}, {
   3.9273069880908337`*^9, 3.927307051736837*^9}, {3.9273070859464154`*^9, 
   3.927307085992479*^9}},
 CellLabel->"In[1739]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCU5EhCqnFuKj+yrh1sjjCOHDlyZtzHiIrKNdPk
LEkkVhnqyUTZsroYuYYnR7aJHdE8SpvZSZPGtvs030+f5/k87+f1PJ/n/edH
IyjWNURcTEyM/nX/yw+RunzXVuF+sf9HFytyu8Nm6hlgIutrB/G69fYi83zU
ZWSJTsi40jhstM8D2WTpOnOS6Ysso+G0o2tnEDLhiFZMPi8YmVL/ie7eHoJs
us56tpEPnkzKU19lHIrc3Ei3uOEKPvGS5ekZB45a4szcyBJZD/NQ+BgvTgXv
N5AW97oM1rXdSG2igxOUbogRt4ch/8HZG7fmKph40t/1cEU48qJGllFb0VHk
a+RU6eRjkXA/TmKbuEYjc4l9dYF54LTJbVGFXWBrNQ+X2pdgGf8T+HYBOEao
ov1IKuabDTBWVbPSgDLY1NJWckIbXMGeXOLgwW3T53L21oLHZmwVihVjkdfP
t+gf4IH1Uws1UyOOIQctN2Vs8o+D/uP9zx8cJCHLWrwyM4wBZ/H/Lq/MA+8Z
SesZLgfzbq4WyNSDh7bY03ToYDqlQM+6FZwvHOzy6wCHRyv5pD4U2RBz4Zir
HVoGm/r4svEm8cgSDrXB89fALFPubJ1KAnKzhlva5Y/gAtkO2YrnicjZr09m
4xSTkJM6f+FTXMA8BnmY7g+Oa2pu6YsGtzTYq/slgt/VThXOZ4B3XE5bTj8l
8i4s6oJi5NoCcOjp5K0OjeDAhBfs3G4wQTeyh2yVjGw6KbiVcBd8rPK0Mb4y
BbnRF8dYIKci8/XrdDbdAx/4bFJmvwTmBmUOvFROQ6Yyn0gmmoDTOGMlqvvA
wUKuVqeNyLsxgsqXmyEEsCl+HbbWHSwdauR7KBg8WeGZcoUETjRP9RbMg+VG
L+xxC0tHztJqz833zEBejB1lPbQjI2/3Tht6fBx82Fpt8OkdsIARM9A9DC7R
7+zvWQB3nCmWY/LB0zPhzswvYOkD+4qYEpnfjMd2Vcv3M9eCM4l3nXo3gHtx
wX2928Bmsw3MgTJwbfu7p8OSx5FJL3atHhSAr2T+pP46KQt5Ljq20vI82NCv
bkNFM5jljo09/h2cSHhR+qEXbNuty5caBqvYJHmoT4BXiavlNP4J5j54eNtk
SmQjbJgcwenkgDss5HGEObCjKlluZUs28ujSnNQtb3AMb+Nm2ghY4r2zEcnl
BDKJT5ltw04i23rsdxzQOIUsv7v27bhSDrJ1SKLl7U/g2w2aG5XGc5HVjuaa
RfSeRp7P9hSnNJ1BvrWe/WNDzVnk9g6rWrvzecg6d+VnGfH5yHnG5ZGqYQXI
7pIFVU6OhciH3xB9JLcXIQfav/JqVaUg96ywJIyWwTjV+ymuKVTkpAAH23gu
OPlpjkuI5jnkFMMuL08iuHx38gw9BXzH2IC0pgxsy8g1x18DPzebEvq1gqtS
5KYXO8Ch7RaPzz4CM71ZDPdusKEgvEH9GTjA0Vjjh34w7cJKBXcA/IjLVBgc
Evnr/9lTmt86DHYuu0j1kqUh1y9Wl3y2AY9w13TeewC+cpS409L8PLiYk9jY
AFYT9kxSNIuReVJj6Uk+4F7F16p+xWBGgLBqvAxc3aSsdegiWGlEMwR3CZwn
MKxnVYFXtli8oVaLbIgl2Nnpu9SAHaaSjex/A29Ob7CwagF306UJRvfBpOkI
363PwE8cdpCl58CqNxcuvV1dgiymXrNAwsAzBe5WSxngIz8LwyVPgTlf6qnK
+WCJKBpxogCsPZGhXVUEtrEPexdIFdkAO8I42LaVBr5K0yE0lYA5MZ/ZxhXf
me28063+O/9akxnXCv4L76BGHwJP497f474FKwRoEP8xKEW2vu66tBIJ/hfV
xN/U
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#1"]& ], 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCUnInGUePcVH5kXTvYHGEcOXLkzLiPERWVc5Kz
JJFYZagnE2XL6mLkGp4c2SZ2RPMobWYnTRq77cP30+d5Ps/7eT3P53n/+VEN
iHYOEhYSEqL9t9/yY7gWz7lVcEDo/9mJFbjcZTF26WBrxmsEcLt37UPmeilL
SJIckHGlMdhonxuy0dINxiTDG1lC1UG3Sz8AmXhUPSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRXmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsZb2V2kQDx8ndFCJphyD/wd4Xs+EamHTK1/lIRSjyomqGQVvBMeTr
lGTxxOPhcD9OZhk5RyJzSH11/jnglMmdEfldYEslN6faV2AJ35OEdj44SqCg
8VgsatV4jFnVLDcgDzY2txad0ABXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
+INcMD45Xy057DhywHJT2jbfGOg/0f/i4SEysqTZaxO9KHAG7+/yyhzw3pGU
nuFyMPfWer5EPXhIxbZIkwamFebtsmwF5woGu3w6wKGRcl7Jj9asizmxTZUO
L4ONvbxZBKNYZBG72sD562CmMWe2TiEOuVnVJeXKJ3CeZIdkxYt45Mw3pzJx
sgnICZ2/8AqdwFw6ZZjmC45pam7piwS3NNgq+8SD39dO5c+ngXWvpCynnl6z
PhZxUTZ8Yx44+EziDrtGsH/cS1Z2N5ioFd5DsUhENp7k3467Bz5eecaQUJmE
3OiNoy9QkpF5+DrNbffBB78YldkugTkB6QOv5FOQqYynovFG4BT2WInifnCg
gKPeabXqjN0YUeHrrSAi2JiwCdvoChYPNvA+HAierHBPukoGx5sme/LnwVKj
F/e6hKQiZ6i3Z+e6pyEvRo8yH9lQkLU9U4aenAAfsVQafHYXzKdHDXQPg0vw
nf09C+COs8VSDB54eibUkfEVLH5wfwFDJH3Ve7Dd1dL9jI3gdNI9h94t4F5c
YF/vTrDJbANjoAxc2/7+2bDoCWTyy93rB/ngq+k/Kb9JyECei4yuNL8A1vOp
21LRDGa6YmNPfgfHE1+WfuwFW3dr8cSGwQpWCW7KE+B1wkpZjX+COQ8f3TGa
WjMBG6aEsTvZ4A4zaRxxDmyvSJFaUclEHl2aE7vtCY7ibt1eNAIW+eBoQHY6
iUzmFc62YaeQrd0O2A+onkaW3lP7blwuC9kyKN78zmfwnQa1rXLj2chKx7JN
wnrPIM9nugsXNp1Fvr2Z9WNDzTnk9g6LWpsLOcia96Rn6bG5yDmG5eGKIXnI
rqJ5VQ72+chH3pK8RLULkP1tX3u0KhYi96wwRQyWwTjFB0nOSVTkBD8761gO
OPFZllOQ2nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEH5OdjP3lD1h35w0cWVCs4A+DGHITM4
tOpv/2dvaW7rMNix7BLVQ7IIuX6xuuSLFXiEs6Hz/kPw1WMkfXPTC+Bidnxj
A1hJ0DNZqFaMzBUbS03wAvfKvlH0KQbT/QRV42Xg6iZ59cOXwHIjakG4y+Ac
vl49swq8omL2llq9Zl0szsYG71QDtptKNLD9Dbw9tcHMogXcTRMnGjwAk6fD
vHc8Bz+106WIz4EVby1cfre+BFlIuWaBjIFn8lwtltLAR38WhIqeBrO/1lPl
c8EiEUWkiTywxkSaRlUB2Mo25L0/dc147Cj9UNuOIvC1Ik1iUwmYHfWFZVjx
nVmO+i713/nXmvSYVvBfBDsl2hB4GvfhPucdWMZPlfSPTimy5Q3npZVw8L/7
CgA1
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#2"]& ], 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCm5EzkqnFuKj+yrh1sjjCOHDlyZtzHiIrKOclZ
kkisMtSTibJldTFyDU+ObBM7onmUNrOTJo1t9+H76fM8n+fzvJ7n/Xz+fKsE
RDsHCQsJCdG+7X/3Y7gmz7lVcEDo/9HCClzushi7dLA1a6sHcLt37UPmeilJ
SJIckHGlMdhonxuy0dINxiTDG1lCxUG3Sz8AmXhULSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRWmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsab2V2kQDx8ndFCJphSD/wd4Xs+EamHTK1/lIRSjyokqGQVvBMeTr
lGTxxOPhkB8ns4ycI5E5pL46/xxwyuTOiPwusKWim1PtK7CE70lCOx8cJVBQ
fywWtWpdjFnVLDcgDzY2txadUAdXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
2ge5YO3kfNXksOPIActNadt8Y+D/if4XDw+RkSXNXpvoRYEzeH+XV+aA946k
9AyXg7m31vMl6sFDyrZFGjQwrTBvl2UrOFcw2OXTAQ6NlPNKfrRmfcyJbap4
eBls7OXNIhjFIovY1QbOXwczjTmzdQpxyM0qLilXPoHzJDskK17EI2e+OZWJ
k01ATuj8hVfoBObSKcM0X3BMU3NLXyS4pcFWySce/L52Kn8+Dax7JWU59fSq
M3ZjERdlwzfmgYPPJO6wawT7x71kZXeDiZrhPRSLRGTjSf7tuHvg45VnDAmV
SciN3jj6AiUZmaddp7HtPvjgF6My2yUwJyB94JV8CjKV8VQ03gicwh4rwe8H
Bwo4ap1Wa96DERW+3goigo0Jm7CNrmDxYAPvw4HgyQr3pKtkcLxpsid/Hiw1
enGvS0gqcoZae3auexryYvQo85ENBVnLM2XoyQnwEUvFwWd3wXx61ED3MLhE
u7O/ZwHccbZYisEDT8+EOjK+gsUP7i9giKSvmoDtrpbuZ2wEp5PuOfRuAffi
Avt6d4JNZhsYA2Xg2vb3z4ZFTyCTX+5eP8gHX03/SelNQgbyXGR0pfkFsJ5P
3ZaKZjDTFRt78js4nviy9GMv2Lpbkyc2DFawSnBTmgCvE1bMavwTzHn46I7R
1JoNsGFKGLuTDe4wk8YR58D2eIrUinIm8ujSnNhtT3AUd+v2ohGwyAdHA7LT
SWQyr3C2DTuFbO12wH5A5TSy9J7ad+NyWciWQfHmdz6D7zSobpUbz0ZWPJZt
EtZ7Bnk+0124sOks8u3NrB8bas4ht3dY1NpcyEHWuCc9S4/NRc4xLA/Hh+Qh
u4rmVTnY5yMfeUvyEtUqQPa3fe3Rii9E7llhihgsg3H4B0nOSVTkBD8761gO
OPFZllOQ6nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEHpOdjP3lDlh35w0cWVCs4A+DGHITM4
tOZv/bO3NLd1GOxYdonqIVmEXL9YXfLFCjzC2dB5/yH46jGSvrnpBXAxO76x
Aawo6JksVC1G5oqNpSZ4gXtl3+B9isF0P0HVeBm4ukle7fAlsNyIahDuMjiH
r1fPrAKvKJu9pVav+lu/x9nYaDvVgO2mEg1sfwNvT20ws2gBd9PEiQYPwOTp
MO8dz8FP7XQp4nNg/K2Fy+/WlyALKdUskDHwTJ6rxVIa+OjPglDR02D213qq
fC5YJKKINJEHVp9IU68qAFvZhrz3p65ZFztKP9S2owh8rUiD2FQCZkd9YRlW
fGeWo75L/Xf+tSY9phX8F8FOkTYEnsZ9uM95B5bxUyH9o1OKbHnDeWklHPwv
88gOtA==
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#3"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxM23k8VN//AH7JVlJEFCJbqaSVRHq9kiJJJSFJlCzZ931fKusMMxKSLSQV
pbKFIlmz72PflZJUtvSb7+f3/nV/9x+P58PMPa/zOuee5c69ItdtNG8yMjAw
NDIxMPzf31kLyV+ar1aOxd3/v6MLIi6+6a/ZJYX/n3eLX5+r2nX0n+euCK9d
p3f2n3li7LCj/tI/y8w/qaHV6P/zWpGze97vvf7PkRkLz7QKbqJmvlDQ5wud
8EPE92B+hDmu7Ui1VVzbAY1f9u6qfED42Zv+ba3Z5vitgseb/087hPlH8g0V
maOfThpbznQ73DoL62dqzHHj1MHok33toLr5G9NKlzmmeZZv7fnUDhLDiUvs
k+You+Fipm1pOwy4rkzsYL2Feofs38YntUPJiWf9Mry38HPlKtX95HaIX2/Q
fkLiFnpfJjdX+rWDaxdH/YVDt5Dzy7ar+vbtoJ32tvzaiVto8r+jHbjkt+Z6
GBGua/BMvOdDuGD70kXWecLpXm5rXGwt/jlQdSdDkA9hI+6uX1ERFmg37zfi
ptMOx/ruTCc9sECmUC6bDartIPhYbuRZtgVStyYvpMm1w6LDRHdxkQXuyNkX
KL+zHTqPxTbV1FhgvlLZ+sYt7RDd+rtkbMICaab9YkuLbWD7MOPV3G8LtFm0
fkb63AYat3SyGVktkSF8RW47rQ2kZFhTOXktMUo4oryorg3WMry5LyRhieU/
JfUj37fBByrvbfkThH13OztqGxG28p/bWdlFWK/Lvl9G0+qfS9zWNKGhFTr0
Di+r0y3Kn/T+jLUV8uX9Lv/8sg2CC2XztD2tsCiEPTTkURtM6dU/MgqxwmtG
wpo779HjXbpxzzLWChnlDm6putMGL+IX77ikW2H6epUBE/c2cKftsAx/b4Vf
i6yt0662QZ9nydXYRiuMivKXOXGuDZS2XjqX2meFsuYxy4PYBulvP+OzL1bY
BVnlvgfo9TXwP1CwaIVevCUhwuJtYL2yWbyCzRqF6b01X6gNmhOfb2rgJSwL
p1i7xQnf76fNjxwgbLhtLW1Rg7Ck0eFSTgvCYas+5Qi4EZ5JNk7ZfpuwltJS
9H4q4fwhctDRVGtsipmcNBVoA8EASReVXGt0svqTw8JBbw+xUjPNUmvcoszl
+milFVSNv5wx67FGw+9yLMODrZDNFKDoMGmNTFXq9X4trcD5aMte79/WmJlo
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
BwA1/Iyg
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#4"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxF2Xc81t0bB3BEJElWFMrMduNRRupkZKYIWZHMSkTGY2akpIykUCpZLVFI
UqEoo8yEoqGEEglJlH56+H0/54/7fr3/us/3nOu6zvU9t/BuLzMXBjo6OtbZ
j7/fo/skJ8xuz2w4m/Z3KJDXXiVO7dJs5P/eXuhY0igtQPnLtqiUNTdXUa4K
MFtfeVaY8t63Z315Q0Qoc+h9yPPYKUq5JF/m46MNYmRC0i7hkZ8CseP1FeRf
LU75e/HpGe8cScrx2++8rZeWpbxmtLNS9KYC5V36v7eVn1WkvPCm7jHuECXK
ecvjH+7dqUz5kFHha55G2OxQ+8/KDf8Qs1Kh6EFTBSJRNMXjUQD/7BNSWr5a
hXJSNOE6kKNKWUZs93it9HrKQWd6aMPZcC2L436uVZqUlwe/u6qaBrsOOfTt
5NpA8vV6grjlFQhjq73DFeaNlDNLdnaOTsNfK+Q+ao8SynHZsvbxfZso1+2X
3ibapE2ZaZ2kVukdXcqyI27v6sdh86uXw14rbqYcvLtfYMQTzly55h5D3mbC
2pF1QJNVgXyLy/2xRkKPMqGT+GdLBvymV+xGSrI+5ZA6UYn3MQaUV+SLXJQN
NaRcmiTMF+BtRPmdkWPJsXwj8sX07wLJE2amS+bpg7B8+bvRfEljypYBq08+
dIFzPl1s6HsLj9uuYmWz2UJ56sUPKyKylTKd5MB2db9tlCM3X3DT64cZXcyD
za1NKWd/2VTZ4Qfr+iow2SaZkoZnf4c86ZsWMHyTDx+JYk1wfAo/SfrI585o
Rpk5szLTUxOOqfQvCS6AWd/K1scIb6dsNMxsnmADn/j9/vXpU7BsdLMI/024
ga3cLf0Z7Jl8PW/VJ5hdIO1bJpM5yZ5d/Y4sebLMmon/wSeY+4w36WiwoGz1
vvRbwA1LyunydFl8cTsol7dlTQ/8gt8F6Znf9bCi/G1LWvilbJhBeDDvWDcc
y8pdFToJc42vf+nNbT2fr7O/99rlqwsNFquJZ7Ixht252kumZGwo5zkIup9b
bEu5kelh5b5geOS6M//6QZj+UImumKgdZU4zFh82W/ichmIMXQAsJm5zYTwJ
zmOPKh7Ih1Umr9d319uR/8J7hzw58PDqfe8HOynnxV7OX3jTnvL0L4nB619g
Q6/cNaZSDpR9JPseZ+k5kP/Kh6o8SesRd55wgSvPujAYHIYHtudknMuEtQVa
2caW7KKcFG9qkGoI0w5ue/S+Cm7csVVDTtOR8gRHwstDtrBgfWNAayB8M3f4
yXSMI1k1y1IheaITxc4rngp3Osi7mFyGPdabFAeUwPfyG0YExmBW4S1yjxR2
U/b55GZh6w6/uhUZOp4Bjzsdq1lRALPzJi7b9ACWrD1j6/Z0N/mPTPJEK+h8
TtxL2P/NNbVX3+HrWqUNEpxOlEOeDwlaR8HGzqKex8fhYtkNZ8TknCkLfrcq
f+ACm1m7mrFGwkceHOyzvABneAXRQvOcievf0SdHyoQjgrLK4LbnR6vrauHh
6Hj2kXa4nLfaXkTfhXLC5Z/55nfhtUu1+q9NwN3+savo/3GlXHAtXyPPDI58
07pjhzfsMdn7MS/cdb5+yBELzh8HGRLhDbKLGKwuwpKbVybeyId9efLobKTc
KD/sXe+9MBseEw5XLo3fQ5T/jiI5YvPS562K2X5C93eEyxGZwDiRwL0H5vNB
jthHKFgVBcJJx1rihmLgvLjMK7GJB0jV99mE1JIjj08erFqTCr85rfOm+iI8
mcbz0/Ey7HDN2rn9Mfyk7HyTYS+c3CWeqyzsTXn3rxshAvbwGcZthZb74Tq2
0f7EEPg9RxWD/GHvuXonKkd+cScLPj0O8/K7qLqfgmmCa7cznYNT5ILKA+/C
M5rlUsMd8DP7zXQd3D6U0w41tleYwu77eWwDq+C1tnZvlVQOUh5R/bh0rzZ8
jdeTXDKFj0YXdt63gp3HJw50OsDESWPRuOtBkvBo9oGXyhHB1kOXlnrCiXEn
GcJiYUaDLKcvufC/jLerbargwYon4nVv4ezzWy3phmH74M4j637BGp8FVm1f
4DvXf/LLET5rxzuerPD3mpytscvg1rWf+3P44GPeh42dt8EkT+iWSAycMnYr
dEUCPKyua8h5BtaN7ORlPQ+n1+37QJ/tS62PoVVSyLdb8GRfKU9PBZzr9za/
uQE2Z1yoX9kFXzdK4y59DzOcku0p+ARbvaq4cXnEd74+z+a38Pagiz9g1o0Z
eWFcfpRd7Ybe7FSAH2SFX7dYC3MPcv27RRPep3RZR1fHj+jPtov5enLkUaD6
Mk0j+ACL4zVZa1go5ai2gBv8TDy/e7EfHFTc5jcdCbdMu2mNHYMltafZBxP9
5s9XORIWG9/1PgV+0SJ85dUFmPbV89XdMvgE2322tHa4ntkiWPINvGjB8Kc7
H/2I1Cy/X5Ej+jNHrPSG4CM/V9W0j8OMI6bZ3xf4U47oi4rg5oIrewRGslbA
M9237ZVFYM1Ok4ZHUnDI834NM0X/ufrwSI78rOPn9yawf6XRRMJW2OMs177F
J2BH3663R2rhDC9fE95m/7l6qixP3uxd8iCnAxZ0zZVReQvbOW48W90Hv9zh
HfDhO2xpkmXOwBRA+bTB+qqTbHCbzgtFYW6Yk3hm3FwJm2owLyWiAXP9fuxs
f6Go9sVeCTaW3FcXugmuEzqfm74N3szTFHXPAY7mcB81dIOrF9M7vvKEGZjP
Nu3xDyB/l1eyW55sYlDe8DMUXv/1zOTadHht91Shbxl8zY675Gto4Hw+0Uho
omqrehy8rdpuODodVn/jGSKTHTh3XhEaEZ0MZ225DrNxnkr1L4InZHIkBO7B
dQ51Wm71cPqpIfvCl/CRG3++7OiBD9QsC/49ANv0iC7KGpmfjxONaE+rpOhP
wp93hzW94Q2inFj/hNlPBQ7q7Ty9QhN2mvksWqkTNJd/R2nEmO/3LRdjeK3S
UrLYHF7kqmxn6QR3p+3495IP/KRoz0K9ILigITj5SwSc2h8nknQMjqTPuLnu
5Px8smjEQqX6WWQGLLlnYKChAJ5OZ2Pir4Abm2nCzo1w6WetgkXtcCajhWbB
a/iEkNtT849Bc+tZSSN+qoHWU19ggYyHJxMXB1N+xMxaLyEN5wkLWD1TDJ6P
Hxo5rSHf560Gh1kQ3+WbYHcvM4YH+rBGlr8QixXM3nFWfbsb7FM3/avNE35x
z67C0h9WzX8Q0RkKp2cI6dhEB5Pg2erZMzW7n9Hvancmw9J7M7c4ZsHfTJxb
nQvhUmWJHe4PYQGJo/yfa+FwvoGufc3Bc/3WckXSy2pwYagD1vt9dZfXW7j9
idxe/9+wc+Ktg6ErQyjXRnKu/SMSMp9PikTG7+BkuDQc79ZWxqAEj1qrhB5W
g+9u+EEfow+Hi949cnwH3MuzwmCJA6zHErw4wRW+NtXVwOEJsw+tT0zyC5nP
r9n5t8xwnzkMny+pTEs7BTufixQ6nwnLhutkZdyCE31yXETuwmPOCyWzK0Pm
+pWtisRyh9tn8Vq4zKA273ITrM9lXJI/BLd3N1XcXhxKWb2JFrmOK3Tufcd+
dn4PT+rcXQHTFY8u1BCBnXO3192XgmWP85hUqsJjXh2tVXrwiobrnNUmMJEO
N6u2gN2OmidV28HxvZKt1U6hc/ESpEi6L7SYPvaGpayDWh4fgv25RE2fxMHV
DU+bn5yDB6UzOGoyYc4Y3201V2HVj/qJNTdD5+uHInHQEmyuuQNPlXg21T6H
T8tUNtZ9he/HJLPXT8DvP7qb1P+GF2lrxtczhs3Fa4oioWUsa6xfDIfZlG15
yg8/5XZqeLoG5mtavOWZCux6rPjZM204ri+GrcEQLtbeadxgGjZfnxTJqwzF
Ew1WMP0M07MGBzjdZ8fTxmB4Xf+V+qYU2F4nlLX5Anz4kqlhc07Y/PuWIrk+
Ix7bnAe32k7VNRfBq3mzDFoewvubjepamuCy2HH91tcwi+752tZBWCHTm+X5
6PzzdczG+x9d/ec/4RC7FTHP6Q5Rzro7XPOcGebVqmhP0oFj6xM+mkbAqV17
aj7FwJe/aF+NSDw0f1+nSEp+Cx7nT4Wr2Sc9bl2Ee2h5tJ58eMZs1zhHObzS
j7uUNMCqKbXBB7rhzVcyd7L0Hpqvj4rE4m7IxoxB2LneUlh1DPbpoi1onoJr
w3w+/GEMp9yeYPw4hQ3emapW4sQB92ZIXFbghj2ucqVOL4fHbtEdq1kZPhe/
zEqEo63Y+Ic0LDfhzrFGHS6esaAf04TXM2uPlm8Kn6/PSqRqKe1DrC5syCfY
ZmkAW0n9uD28DXZTb0k5YgVfClNb1ecfPnefIKFEfKaOhP0KhXX8215zRsNy
/wQvuRAD844Ka0qdgP8U1HoUJ8AD+73SN54Kn+vnVZTIcRdWW49LsPzOHP60
Anj5SmMDsSKY7uXovwUl8KczaVfUy8Ln7md0lUirOel8/ADObo5b110N+xl3
nRl9Cm+ulZxgeQ7z6fhbrHoF0zMIRl97DX+uqCpW6Qkn/5UzcyXyPHRvb2Uv
fF9jGbfxALxARu9kDmMEZcMVoex/VsMCZ+r380jCQ8v4GmQU4Pam8l8lShHz
/Z4SKY9zkdVaC182YrNrUIMTFxUdt9KEd0fTDXrqwP/QmxhGG8GCFeOBHFvh
haHnrp4zg4fVtV5KWMIdkwMshdYRc/Xi4Ozz3lFh3/svnOkfySWSAtvlvuBu
vgDztEvyhuXCo/tbeS2uRcytb7QSaWQKWS6bD18/L863oBCOUWnie3Ubnk72
W7n2Mew5vlIoqQ3u2f5o9fAH2LzIXdRwDKYZcYoJ/4CXfLgnNjk1v/7Js/sd
5CLeNAM/4VwqkcsQSTlca/cac1ZYzee2JAMnzMvqIPWSBx69xCJ9kx9uUiuU
PioI57XYytgLR87lS64ScaEvkGWTgoUUGeTLaPDJxCs0XgIzjpgo+2yFWzk6
Fp3bD2coOryrOg6XqdCmYxLgNjV6XpNT8LBmK40rBWbWyjLqPBs5l3+3lYi6
oW7E7kzY06y/5MtVuG23jAj9XVjjoFccTy2cGVU0KdUBsyT/cNrQB4uk1oYt
+Bw5tz+PZ+tdelpa7RBsmbG3OO4b7JWt0WT2Hc7Me834+hfcXnxI3Y0xinL2
C+ZliSKwz0RCfymBHbrLttSbwMaPPhZ12cGzp8uSXbui5s8zJaKtMu3a6wSX
D0dXurvB6lc4VgzthWkrJRq+e8Nr4jXCZ/6FuX1d+5YehRlsThoLn4Ynn+X+
kUqHv268X6iUBe/9uZntTi7cV9jionENdvSwq6i4AXeL9/Pp3Iqau+8YmI2v
B0m3jn2CN1tsMGwSPkz59sBT34visFiI9UUvqcPz55sSSV7aX7dRDl6Q5Tu+
VBF+X5dgcFMVrhy5dmEbgUM29Oif3AqrnVg+1mIP8xUp6fu4whMvt5zn9IRd
9nfVvPeG2+j2jBb6wdrJEwJRgYfn7/eVSeGaw3rbQ2Evv7Jvp07AslUj59rO
wTn2O0csymChqTqdjk741+qPaQHv4C49uq/LB2DDrjj+gUG4zHOlTulXWIrh
qmfM2OG5/6OXKZPU02vTrH7A5h88tNMWRlNeppg19JIHNjevTFouBqcGvF5n
oQTvqRS71KsCqy/yYPVVg1nNig4u0IQ/iN9N7t4I/w95diiH
       "]], 
      LineBox[CompressedData["
1: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
/OP/Aemr5u0=
       "]]},
     Annotation[#, "Charting`Private`Tag$800269#5"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"G\[OAcute]lyairoda, Thu 7 Dec 2023\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9273060668247623`*^9, 3.9273060965976715`*^9}, 
   3.9273062072533574`*^9, 3.9273062997306576`*^9, 3.9273063385181804`*^9, 
   3.9273063973293295`*^9, {3.927306476492045*^9, 3.927306527174385*^9}, {
   3.9273065585770316`*^9, 3.9273065849999714`*^9}, {3.927306617944604*^9, 
   3.927306647916992*^9}, {3.927306808324854*^9, 3.9273068337042165`*^9}, 
   3.927306958221428*^9, {3.927306988898182*^9, 3.927307013314025*^9}, {
   3.927307046153123*^9, 3.9273070524310217`*^9}, 3.9273070870272264`*^9},
 CellLabel->"Out[1753]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"warmingCorrection", "=", "1.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.9273068847149715`*^9, 3.927306887622798*^9}},
 CellLabel->"In[1628]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeScaling", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", "60", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tStart", "=", 
   RowBox[{"dt", " ", "startTimeBin"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tEnd", "=", 
   RowBox[{
    RowBox[{"24", " ", "60"}], "-", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulation", "=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "roomTemp", ",", "roomTempList", ",", "heatingState", ",", 
       "heatingStateList", ",", "\[Tau]Start", ",", "\[Tau]End", ",", 
       "d\[Tau]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomTemp", "=", "roomTempStart"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"heatingState", "=", "heatingStateStart"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]Start", "=", 
       RowBox[{"tStart", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]End", "=", 
       RowBox[{"tEnd", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d\[Tau]", "=", 
       RowBox[{"dt", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"roomTempList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"heatingStateList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"warming", ",", "cooling", ",", "dRoomTemp"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"roomTempList", "=", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"roomTempList", "==", 
               RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"timeScaling", " ", "\[Tau]"}], ",", "roomTemp"}], 
                "}"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", 
               RowBox[{"roomTempList", ",", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"timeScaling", " ", "\[Tau]"}], ",", "roomTemp"}], 
                  "}"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"heatingStateList", "=", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"heatingStateList", "==", 
               RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                 "heatingState"}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Join", "[", 
               RowBox[{"heatingStateList", ",", 
                RowBox[{"{", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                   "heatingState"}], "}"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"warming", "=", 
            RowBox[{"warmingCorrection", " ", "heatingState", " ", 
             RowBox[{"roomWarmingCoefficientEstimates", "[", 
              RowBox[{"[", "room", "]"}], "]"}], " ", "radiatorArea", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"HeatingCurve", "[", 
                RowBox[{
                 RowBox[{"externalTemp", "[", 
                  RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], ",", "75", 
                 ",", "45"}], "]"}], "-", "roomTemp"}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"cooling", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"roomCoolingCoefficientEstimates", "[", 
               RowBox[{"[", "room", "]"}], "]"}], ")"}], "externalWallArea", 
             RowBox[{"(", 
              RowBox[{"roomTemp", "-", 
               RowBox[{"externalTemp", "[", 
                RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}], ")"}]}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"dRoomTemp", "=", 
            RowBox[{"d\[Tau]", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"warming", "-", "cooling"}], ")"}], "/", 
              "roomHeatCapacity"}]}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"roomTemp", "+=", "dRoomTemp"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"heatingState", "=", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"roomTemp", "<", 
                RowBox[{
                 RowBox[{"roomSetTemp", "[", 
                  RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], "-", 
                 RowBox[{"roomLowerBuffer", "[", 
                  RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}]}], "&&", 
               RowBox[{
                RowBox[{"roomTemp", "-", 
                 RowBox[{
                  RowBox[{"roomTempList", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "<", "0"}]}], ",", 
              "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"roomTemp", ">", 
                  RowBox[{
                   RowBox[{"roomSetTemp", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], "+", 
                   RowBox[{"roomUpperBuffer", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}]}], "&&", 
                 RowBox[{
                  RowBox[{"roomTemp", "-", 
                   RowBox[{
                    RowBox[{"roomTempList", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ">", "0"}]}], ",", 
                "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                "heatingState"}], "\[IndentingNewLine]", "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Tau]", ",", "\[Tau]Start", ",", "\[Tau]End", ",", "d\[Tau]"}], 
         "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"heatingStateList", ",", "1"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Drop", "[", 
         RowBox[{"roomTempList", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9272990597619166`*^9, 3.927299060406548*^9}, {
   3.927299102611973*^9, 3.9272991027246885`*^9}, {3.927299255890185*^9, 
   3.9272995519395905`*^9}, {3.92729962146099*^9, 3.927299665204871*^9}, {
   3.9272997352536774`*^9, 3.927299738451268*^9}, {3.927299902709608*^9, 
   3.9272999330123844`*^9}, {3.92729996810067*^9, 3.9272999687233915`*^9}, {
   3.9273000120360093`*^9, 3.9273001618586802`*^9}, {3.9273001920053644`*^9, 
   3.9273003210465555`*^9}, {3.927300370339628*^9, 3.927300530661478*^9}, {
   3.927300569701741*^9, 3.92730069707845*^9}, {3.9273007758613977`*^9, 
   3.927300776804621*^9}, {3.927301256101053*^9, 3.9273013032368755`*^9}, {
   3.927301338328105*^9, 3.927301379348349*^9}, {3.927301452933256*^9, 
   3.927301496484995*^9}, {3.927301574055316*^9, 3.927301656341563*^9}, {
   3.9273017007892227`*^9, 3.927301709748929*^9}, {3.9273019592698755`*^9, 
   3.9273021862627316`*^9}, {3.9273022252557755`*^9, 
   3.9273022283879805`*^9}, {3.927302295206486*^9, 3.9273024161994333`*^9}, {
   3.9273026007750163`*^9, 3.9273026387411795`*^9}, 3.9273026702295227`*^9, 
   3.927303087988696*^9, {3.9273031760394087`*^9, 3.9273031803737783`*^9}, {
   3.927303218997552*^9, 3.927303244534952*^9}, 3.9273037387927094`*^9, {
   3.927303836966634*^9, 3.927303860518626*^9}, {3.9273038928395357`*^9, 
   3.9273038944381104`*^9}, {3.9273040374985094`*^9, 3.927304061482455*^9}, {
   3.9273042684112277`*^9, 3.9273043580864325`*^9}, {3.9273044060074964`*^9, 
   3.9273044457353077`*^9}, {3.927304489254775*^9, 3.927304703894619*^9}, {
   3.9273047795769205`*^9, 3.9273051188872776`*^9}, {3.9273051497679057`*^9, 
   3.9273051949039555`*^9}, {3.9273055186642575`*^9, 3.927305522879727*^9}, {
   3.9273060542468224`*^9, 3.9273060545858088`*^9}, {3.9273061134958863`*^9, 
   3.927306162794012*^9}, {3.927306228060359*^9, 3.9273062683600388`*^9}, {
   3.9273064430019207`*^9, 3.927306443079611*^9}, {3.9273068722660007`*^9, 
   3.9273068975925503`*^9}, {3.927307106265581*^9, 3.9273071259383698`*^9}},
 CellLabel->"In[1768]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"roomSimulatedTemp", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"simulation", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Quiet", "[", 
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomSetTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"roomSetTemp", "[", "t", "]"}], "-", 
       RowBox[{"roomLowerBuffer", "[", "t", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"roomSetTemp", "[", "t", "]"}], "+", 
       RowBox[{"roomUpperBuffer", "[", "t", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"externalTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"roomTrueTemp", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"roomSimulatedTemp", "[", "t", "]"}]}], "\[IndentingNewLine]", 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{
       RowBox[{"24", " ", "60"}], "-", "5"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "LightGreen", ",", "LightGreen", ",", "LightGreen", ",", "Blue", ",", 
       "Black", ",", "Red"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{
      RowBox[{"roomNames", "[", 
       RowBox[{"[", "room", "]"}], "]"}], "<>", "\"\<, \>\"", "<>", 
      RowBox[{"DateString", "[", 
       RowBox[{"NormalizeDate", "[", 
        RowBox[{"seasonDays", "[", 
         RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9273066958958406`*^9, 3.9273067294632187`*^9}, {
  3.9273067738799067`*^9, 3.9273067990154867`*^9}, {3.9273068451271076`*^9, 
  3.927306845450076*^9}, {3.927306991943189*^9, 3.9273069925842743`*^9}},
 CellLabel->"In[1773]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCU5EhCqnFuKj+yrh1sjjCOHDlyZtzHiIrKNdPk
LEkkVhnqyUTZsroYuYYnR7aJHdE8SpvZSZPGtvs030+f5/k87+f1PJ/n/edH
IyjWNURcTEyM/nX/yw+RunzXVuF+sf9HFytyu8Nm6hlgIutrB/G69fYi83zU
ZWSJTsi40jhstM8D2WTpOnOS6Ysso+G0o2tnEDLhiFZMPi8YmVL/ie7eHoJs
us56tpEPnkzKU19lHIrc3Ei3uOEKPvGS5ekZB45a4szcyBJZD/NQ+BgvTgXv
N5AW97oM1rXdSG2igxOUbogRt4ch/8HZG7fmKph40t/1cEU48qJGllFb0VHk
a+RU6eRjkXA/TmKbuEYjc4l9dYF54LTJbVGFXWBrNQ+X2pdgGf8T+HYBOEao
ov1IKuabDTBWVbPSgDLY1NJWckIbXMGeXOLgwW3T53L21oLHZmwVihVjkdfP
t+gf4IH1Uws1UyOOIQctN2Vs8o+D/uP9zx8cJCHLWrwyM4wBZ/H/Lq/MA+8Z
SesZLgfzbq4WyNSDh7bY03ToYDqlQM+6FZwvHOzy6wCHRyv5pD4U2RBz4Zir
HVoGm/r4svEm8cgSDrXB89fALFPubJ1KAnKzhlva5Y/gAtkO2YrnicjZr09m
4xSTkJM6f+FTXMA8BnmY7g+Oa2pu6YsGtzTYq/slgt/VThXOZ4B3XE5bTj8l
8i4s6oJi5NoCcOjp5K0OjeDAhBfs3G4wQTeyh2yVjGw6KbiVcBd8rPK0Mb4y
BbnRF8dYIKci8/XrdDbdAx/4bFJmvwTmBmUOvFROQ6Yyn0gmmoDTOGMlqvvA
wUKuVqeNyLsxgsqXmyEEsCl+HbbWHSwdauR7KBg8WeGZcoUETjRP9RbMg+VG
L+xxC0tHztJqz833zEBejB1lPbQjI2/3Tht6fBx82Fpt8OkdsIARM9A9DC7R
7+zvWQB3nCmWY/LB0zPhzswvYOkD+4qYEpnfjMd2Vcv3M9eCM4l3nXo3gHtx
wX2928Bmsw3MgTJwbfu7p8OSx5FJL3atHhSAr2T+pP46KQt5Ljq20vI82NCv
bkNFM5jljo09/h2cSHhR+qEXbNuty5caBqvYJHmoT4BXiavlNP4J5j54eNtk
SmQjbJgcwenkgDss5HGEObCjKlluZUs28ujSnNQtb3AMb+Nm2ghY4r2zEcnl
BDKJT5ltw04i23rsdxzQOIUsv7v27bhSDrJ1SKLl7U/g2w2aG5XGc5HVjuaa
RfSeRp7P9hSnNJ1BvrWe/WNDzVnk9g6rWrvzecg6d+VnGfH5yHnG5ZGqYQXI
7pIFVU6OhciH3xB9JLcXIQfav/JqVaUg96ywJIyWwTjV+ymuKVTkpAAH23gu
OPlpjkuI5jnkFMMuL08iuHx38gw9BXzH2IC0pgxsy8g1x18DPzebEvq1gqtS
5KYXO8Ch7RaPzz4CM71ZDPdusKEgvEH9GTjA0Vjjh34w7cJKBXcA/IjLVBgc
Evnr/9lTmt86DHYuu0j1kqUh1y9Wl3y2AY9w13TeewC+cpS409L8PLiYk9jY
AFYT9kxSNIuReVJj6Uk+4F7F16p+xWBGgLBqvAxc3aSsdegiWGlEMwR3CZwn
MKxnVYFXtli8oVaLbIgl2Nnpu9SAHaaSjex/A29Ob7CwagF306UJRvfBpOkI
363PwE8cdpCl58CqNxcuvV1dgiymXrNAwsAzBe5WSxngIz8LwyVPgTlf6qnK
+WCJKBpxogCsPZGhXVUEtrEPexdIFdkAO8I42LaVBr5K0yE0lYA5MZ/ZxhXf
me28063+O/9akxnXCv4L76BGHwJP497f474FKwRoEP8xKEW2vu66tBIJ/hfV
xN/U
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#1"]& ], 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCUnInGUePcVH5kXTvYHGEcOXLkzLiPERWVc5Kz
JJFYZagnE2XL6mLkGp4c2SZ2RPMobWYnTRq77cP30+d5Ps/7eT3P53n/+VEN
iHYOEhYSEqL9t9/yY7gWz7lVcEDo/9mJFbjcZTF26WBrxmsEcLt37UPmeilL
SJIckHGlMdhonxuy0dINxiTDG1lC1UG3Sz8AmXhUPSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRXmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsZb2V2kQDx8ndFCJphyD/wd4Xs+EamHTK1/lIRSjyomqGQVvBMeTr
lGTxxOPhcD9OZhk5RyJzSH11/jnglMmdEfldYEslN6faV2AJ35OEdj44SqCg
8VgsatV4jFnVLDcgDzY2txad0ABXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
+INcMD45Xy057DhywHJT2jbfGOg/0f/i4SEysqTZaxO9KHAG7+/yyhzw3pGU
nuFyMPfWer5EPXhIxbZIkwamFebtsmwF5woGu3w6wKGRcl7Jj9asizmxTZUO
L4ONvbxZBKNYZBG72sD562CmMWe2TiEOuVnVJeXKJ3CeZIdkxYt45Mw3pzJx
sgnICZ2/8AqdwFw6ZZjmC45pam7piwS3NNgq+8SD39dO5c+ngXWvpCynnl6z
PhZxUTZ8Yx44+EziDrtGsH/cS1Z2N5ioFd5DsUhENp7k3467Bz5eecaQUJmE
3OiNoy9QkpF5+DrNbffBB78YldkugTkB6QOv5FOQqYynovFG4BT2WInifnCg
gKPeabXqjN0YUeHrrSAi2JiwCdvoChYPNvA+HAierHBPukoGx5sme/LnwVKj
F/e6hKQiZ6i3Z+e6pyEvRo8yH9lQkLU9U4aenAAfsVQafHYXzKdHDXQPg0vw
nf09C+COs8VSDB54eibUkfEVLH5wfwFDJH3Ve7Dd1dL9jI3gdNI9h94t4F5c
YF/vTrDJbANjoAxc2/7+2bDoCWTyy93rB/ngq+k/Kb9JyECei4yuNL8A1vOp
21LRDGa6YmNPfgfHE1+WfuwFW3dr8cSGwQpWCW7KE+B1wkpZjX+COQ8f3TGa
WjMBG6aEsTvZ4A4zaRxxDmyvSJFaUclEHl2aE7vtCY7ibt1eNAIW+eBoQHY6
iUzmFc62YaeQrd0O2A+onkaW3lP7blwuC9kyKN78zmfwnQa1rXLj2chKx7JN
wnrPIM9nugsXNp1Fvr2Z9WNDzTnk9g6LWpsLOcia96Rn6bG5yDmG5eGKIXnI
rqJ5VQ72+chH3pK8RLULkP1tX3u0KhYi96wwRQyWwTjFB0nOSVTkBD8761gO
OPFZllOQ2nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEH5OdjP3lD1h35w0cWVCs4A+DGHITM4
tOpv/2dvaW7rMNix7BLVQ7IIuX6xuuSLFXiEs6Hz/kPw1WMkfXPTC+Bidnxj
A1hJ0DNZqFaMzBUbS03wAvfKvlH0KQbT/QRV42Xg6iZ59cOXwHIjakG4y+Ac
vl49swq8omL2llq9Zl0szsYG71QDtptKNLD9Dbw9tcHMogXcTRMnGjwAk6fD
vHc8Bz+106WIz4EVby1cfre+BFlIuWaBjIFn8lwtltLAR38WhIqeBrO/1lPl
c8EiEUWkiTywxkSaRlUB2Mo25L0/dc147Cj9UNuOIvC1Ik1iUwmYHfWFZVjx
nVmO+i713/nXmvSYVvBfBDsl2hB4GvfhPucdWMZPlfSPTimy5Q3npZVw8L/7
CgA1
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#2"]& ], 
    TagBox[
     {RGBColor[0.88, 1, 0.88], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxN1Hk41HkcB3DJ5sjqwZCm5EzkqnFuKj+yrh1sjjCOHDlyZtzHiIrKOclZ
kkisMtSTibJldTFyDU+ObBM7onmUNrOTJo1t9+H76fM8n+fzvJ7n/Xz+fKsE
RDsHCQsJCdG+7X/3Y7gmz7lVcEDo/9HCClzushi7dLA1a6sHcLt37UPmeilJ
SJIckHGlMdhonxuy0dINxiTDG1lCxUG3Sz8AmXhULSqXG4hcWP+Z5toehGy8
yXK2kQeeTMhRWmcYjNzcSDO76Qw++Yrp7h4Djlhiz9zMWLM25ibzKVaYCj6g
Iy7scQWsab2V2kQDx8ndFCJphSD/wd4Xs+EamHTK1/lIRSjyokqGQVvBMeTr
lGTxxOPhkB8ns4ycI5E5pL46/xxwyuTOiPwusKWim1PtK7CE70lCOx8cJVBQ
fywWtWpdjFnVLDcgDzY2txadUAdXsCaX2ARw2/T5rH214LEZa5li2WjkzfMt
2ge5YO3kfNXksOPIActNadt8Y+D/if4XDw+RkSXNXpvoRYEzeH+XV+aA946k
9AyXg7m31vMl6sFDyrZFGjQwrTBvl2UrOFcw2OXTAQ6NlPNKfrRmfcyJbap4
eBls7OXNIhjFIovY1QbOXwczjTmzdQpxyM0qLilXPoHzJDskK17EI2e+OZWJ
k01ATuj8hVfoBObSKcM0X3BMU3NLXyS4pcFWySce/L52Kn8+Dax7JWU59fSq
M3ZjERdlwzfmgYPPJO6wawT7x71kZXeDiZrhPRSLRGTjSf7tuHvg45VnDAmV
SciN3jj6AiUZmaddp7HtPvjgF6My2yUwJyB94JV8CjKV8VQ03gicwh4rwe8H
Bwo4ap1Wa96DERW+3goigo0Jm7CNrmDxYAPvw4HgyQr3pKtkcLxpsid/Hiw1
enGvS0gqcoZae3auexryYvQo85ENBVnLM2XoyQnwEUvFwWd3wXx61ED3MLhE
u7O/ZwHccbZYisEDT8+EOjK+gsUP7i9giKSvmoDtrpbuZ2wEp5PuOfRuAffi
Avt6d4JNZhsYA2Xg2vb3z4ZFTyCTX+5eP8gHX03/SelNQgbyXGR0pfkFsJ5P
3ZaKZjDTFRt78js4nviy9GMv2Lpbkyc2DFawSnBTmgCvE1bMavwTzHn46I7R
1JoNsGFKGLuTDe4wk8YR58D2eIrUinIm8ujSnNhtT3AUd+v2ohGwyAdHA7LT
SWQyr3C2DTuFbO12wH5A5TSy9J7ad+NyWciWQfHmdz6D7zSobpUbz0ZWPJZt
EtZ7Bnk+0124sOks8u3NrB8bas4ht3dY1NpcyEHWuCc9S4/NRc4xLA/Hh+Qh
u4rmVTnY5yMfeUvyEtUqQPa3fe3Rii9E7llhihgsg3H4B0nOSVTkBD8761gO
OPFZllOQ6nnkJL0uD3cSuHxP4gwtCXzXUIe8oQxsTc82JVwHvzCZEvi0gquS
pKYXO8DB7WZPzj0GMzyZdNdusB4/tEHpOdjP3lDlh35w0cWVCs4A+DGHITM4
tOZv/bO3NLd1GOxYdonqIVmEXL9YXfLFCjzC2dB5/yH46jGSvrnpBXAxO76x
Aawo6JksVC1G5oqNpSZ4gXtl3+B9isF0P0HVeBm4ukle7fAlsNyIahDuMjiH
r1fPrAKvKJu9pVav+lu/x9nYaDvVgO2mEg1sfwNvT20ws2gBd9PEiQYPwOTp
MO8dz8FP7XQp4nNg/K2Fy+/WlyALKdUskDHwTJ6rxVIa+OjPglDR02D213qq
fC5YJKKINJEHVp9IU68qAFvZhrz3p65ZFztKP9S2owh8rUiD2FQCZkd9YRlW
fGeWo75L/Xf+tSY9phX8F8FOkTYEnsZ9uM95B5bxUyH9o1OKbHnDeWklHPwv
88gOtA==
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#3"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxM23k8VN//AH7JVlJEFCJbqaSVRHq9kiJJJSFJlCzZ931fKusMMxKSLSQV
pbKFIlmz72PflZJUtvSb7+f3/nV/9x+P58PMPa/zOuee5c69ItdtNG8yMjAw
NDIxMPzf31kLyV+ar1aOxd3/v6MLIi6+6a/ZJYX/n3eLX5+r2nX0n+euCK9d
p3f2n3li7LCj/tI/y8w/qaHV6P/zWpGze97vvf7PkRkLz7QKbqJmvlDQ5wud
8EPE92B+hDmu7Ui1VVzbAY1f9u6qfED42Zv+ba3Z5vitgseb/087hPlH8g0V
maOfThpbznQ73DoL62dqzHHj1MHok33toLr5G9NKlzmmeZZv7fnUDhLDiUvs
k+You+Fipm1pOwy4rkzsYL2Feofs38YntUPJiWf9Mry38HPlKtX95HaIX2/Q
fkLiFnpfJjdX+rWDaxdH/YVDt5Dzy7ar+vbtoJ32tvzaiVto8r+jHbjkt+Z6
GBGua/BMvOdDuGD70kXWecLpXm5rXGwt/jlQdSdDkA9hI+6uX1ERFmg37zfi
ptMOx/ruTCc9sECmUC6bDartIPhYbuRZtgVStyYvpMm1w6LDRHdxkQXuyNkX
KL+zHTqPxTbV1FhgvlLZ+sYt7RDd+rtkbMICaab9YkuLbWD7MOPV3G8LtFm0
fkb63AYat3SyGVktkSF8RW47rQ2kZFhTOXktMUo4oryorg3WMry5LyRhieU/
JfUj37fBByrvbfkThH13OztqGxG28p/bWdlFWK/Lvl9G0+qfS9zWNKGhFTr0
Di+r0y3Kn/T+jLUV8uX9Lv/8sg2CC2XztD2tsCiEPTTkURtM6dU/MgqxwmtG
wpo779HjXbpxzzLWChnlDm6putMGL+IX77ikW2H6epUBE/c2cKftsAx/b4Vf
i6yt0662QZ9nydXYRiuMivKXOXGuDZS2XjqX2meFsuYxy4PYBulvP+OzL1bY
BVnlvgfo9TXwP1CwaIVevCUhwuJtYL2yWbyCzRqF6b01X6gNmhOfb2rgJSwL
p1i7xQnf76fNjxwgbLhtLW1Rg7Ck0eFSTgvCYas+5Qi4EZ5JNk7ZfpuwltJS
9H4q4fwhctDRVGtsipmcNBVoA8EASReVXGt0svqTw8JBbw+xUjPNUmvcoszl
+milFVSNv5wx67FGw+9yLMODrZDNFKDoMGmNTFXq9X4trcD5aMte79/WmJlo
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
BwA1/Iyg
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#4"]& ], 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJxF2Xc81t0bB3BEJElWFMrMduNRRupkZKYIWZHMSkTGY2akpIykUCpZLVFI
UqEoo8yEoqGEEglJlH56+H0/54/7fr3/us/3nOu6zvU9t/BuLzMXBjo6OtbZ
j7/fo/skJ8xuz2w4m/Z3KJDXXiVO7dJs5P/eXuhY0igtQPnLtqiUNTdXUa4K
MFtfeVaY8t63Z315Q0Qoc+h9yPPYKUq5JF/m46MNYmRC0i7hkZ8CseP1FeRf
LU75e/HpGe8cScrx2++8rZeWpbxmtLNS9KYC5V36v7eVn1WkvPCm7jHuECXK
ecvjH+7dqUz5kFHha55G2OxQ+8/KDf8Qs1Kh6EFTBSJRNMXjUQD/7BNSWr5a
hXJSNOE6kKNKWUZs93it9HrKQWd6aMPZcC2L436uVZqUlwe/u6qaBrsOOfTt
5NpA8vV6grjlFQhjq73DFeaNlDNLdnaOTsNfK+Q+ao8SynHZsvbxfZso1+2X
3ibapE2ZaZ2kVukdXcqyI27v6sdh86uXw14rbqYcvLtfYMQTzly55h5D3mbC
2pF1QJNVgXyLy/2xRkKPMqGT+GdLBvymV+xGSrI+5ZA6UYn3MQaUV+SLXJQN
NaRcmiTMF+BtRPmdkWPJsXwj8sX07wLJE2amS+bpg7B8+bvRfEljypYBq08+
dIFzPl1s6HsLj9uuYmWz2UJ56sUPKyKylTKd5MB2db9tlCM3X3DT64cZXcyD
za1NKWd/2VTZ4Qfr+iow2SaZkoZnf4c86ZsWMHyTDx+JYk1wfAo/SfrI585o
Rpk5szLTUxOOqfQvCS6AWd/K1scIb6dsNMxsnmADn/j9/vXpU7BsdLMI/024
ga3cLf0Z7Jl8PW/VJ5hdIO1bJpM5yZ5d/Y4sebLMmon/wSeY+4w36WiwoGz1
vvRbwA1LyunydFl8cTsol7dlTQ/8gt8F6Znf9bCi/G1LWvilbJhBeDDvWDcc
y8pdFToJc42vf+nNbT2fr7O/99rlqwsNFquJZ7Ixht252kumZGwo5zkIup9b
bEu5kelh5b5geOS6M//6QZj+UImumKgdZU4zFh82W/ichmIMXQAsJm5zYTwJ
zmOPKh7Ih1Umr9d319uR/8J7hzw58PDqfe8HOynnxV7OX3jTnvL0L4nB619g
Q6/cNaZSDpR9JPseZ+k5kP/Kh6o8SesRd55wgSvPujAYHIYHtudknMuEtQVa
2caW7KKcFG9qkGoI0w5ue/S+Cm7csVVDTtOR8gRHwstDtrBgfWNAayB8M3f4
yXSMI1k1y1IheaITxc4rngp3Osi7mFyGPdabFAeUwPfyG0YExmBW4S1yjxR2
U/b55GZh6w6/uhUZOp4Bjzsdq1lRALPzJi7b9ACWrD1j6/Z0N/mPTPJEK+h8
TtxL2P/NNbVX3+HrWqUNEpxOlEOeDwlaR8HGzqKex8fhYtkNZ8TknCkLfrcq
f+ACm1m7mrFGwkceHOyzvABneAXRQvOcievf0SdHyoQjgrLK4LbnR6vrauHh
6Hj2kXa4nLfaXkTfhXLC5Z/55nfhtUu1+q9NwN3+savo/3GlXHAtXyPPDI58
07pjhzfsMdn7MS/cdb5+yBELzh8HGRLhDbKLGKwuwpKbVybeyId9efLobKTc
KD/sXe+9MBseEw5XLo3fQ5T/jiI5YvPS562K2X5C93eEyxGZwDiRwL0H5vNB
jthHKFgVBcJJx1rihmLgvLjMK7GJB0jV99mE1JIjj08erFqTCr85rfOm+iI8
mcbz0/Ey7HDN2rn9Mfyk7HyTYS+c3CWeqyzsTXn3rxshAvbwGcZthZb74Tq2
0f7EEPg9RxWD/GHvuXonKkd+cScLPj0O8/K7qLqfgmmCa7cznYNT5ILKA+/C
M5rlUsMd8DP7zXQd3D6U0w41tleYwu77eWwDq+C1tnZvlVQOUh5R/bh0rzZ8
jdeTXDKFj0YXdt63gp3HJw50OsDESWPRuOtBkvBo9oGXyhHB1kOXlnrCiXEn
GcJiYUaDLKcvufC/jLerbargwYon4nVv4ezzWy3phmH74M4j637BGp8FVm1f
4DvXf/LLET5rxzuerPD3mpytscvg1rWf+3P44GPeh42dt8EkT+iWSAycMnYr
dEUCPKyua8h5BtaN7ORlPQ+n1+37QJ/tS62PoVVSyLdb8GRfKU9PBZzr9za/
uQE2Z1yoX9kFXzdK4y59DzOcku0p+ARbvaq4cXnEd74+z+a38Pagiz9g1o0Z
eWFcfpRd7Ybe7FSAH2SFX7dYC3MPcv27RRPep3RZR1fHj+jPtov5enLkUaD6
Mk0j+ACL4zVZa1go5ai2gBv8TDy/e7EfHFTc5jcdCbdMu2mNHYMltafZBxP9
5s9XORIWG9/1PgV+0SJ85dUFmPbV89XdMvgE2322tHa4ntkiWPINvGjB8Kc7
H/2I1Cy/X5Ej+jNHrPSG4CM/V9W0j8OMI6bZ3xf4U47oi4rg5oIrewRGslbA
M9237ZVFYM1Ok4ZHUnDI834NM0X/ufrwSI78rOPn9yawf6XRRMJW2OMs177F
J2BH3663R2rhDC9fE95m/7l6qixP3uxd8iCnAxZ0zZVReQvbOW48W90Hv9zh
HfDhO2xpkmXOwBRA+bTB+qqTbHCbzgtFYW6Yk3hm3FwJm2owLyWiAXP9fuxs
f6Go9sVeCTaW3FcXugmuEzqfm74N3szTFHXPAY7mcB81dIOrF9M7vvKEGZjP
Nu3xDyB/l1eyW55sYlDe8DMUXv/1zOTadHht91Shbxl8zY675Gto4Hw+0Uho
omqrehy8rdpuODodVn/jGSKTHTh3XhEaEZ0MZ225DrNxnkr1L4InZHIkBO7B
dQ51Wm71cPqpIfvCl/CRG3++7OiBD9QsC/49ANv0iC7KGpmfjxONaE+rpOhP
wp93hzW94Q2inFj/hNlPBQ7q7Ty9QhN2mvksWqkTNJd/R2nEmO/3LRdjeK3S
UrLYHF7kqmxn6QR3p+3495IP/KRoz0K9ILigITj5SwSc2h8nknQMjqTPuLnu
5Px8smjEQqX6WWQGLLlnYKChAJ5OZ2Pir4Abm2nCzo1w6WetgkXtcCajhWbB
a/iEkNtT849Bc+tZSSN+qoHWU19ggYyHJxMXB1N+xMxaLyEN5wkLWD1TDJ6P
Hxo5rSHf560Gh1kQ3+WbYHcvM4YH+rBGlr8QixXM3nFWfbsb7FM3/avNE35x
z67C0h9WzX8Q0RkKp2cI6dhEB5Pg2erZMzW7n9Hvancmw9J7M7c4ZsHfTJxb
nQvhUmWJHe4PYQGJo/yfa+FwvoGufc3Bc/3WckXSy2pwYagD1vt9dZfXW7j9
idxe/9+wc+Ktg6ErQyjXRnKu/SMSMp9PikTG7+BkuDQc79ZWxqAEj1qrhB5W
g+9u+EEfow+Hi949cnwH3MuzwmCJA6zHErw4wRW+NtXVwOEJsw+tT0zyC5nP
r9n5t8xwnzkMny+pTEs7BTufixQ6nwnLhutkZdyCE31yXETuwmPOCyWzK0Pm
+pWtisRyh9tn8Vq4zKA273ITrM9lXJI/BLd3N1XcXhxKWb2JFrmOK3Tufcd+
dn4PT+rcXQHTFY8u1BCBnXO3192XgmWP85hUqsJjXh2tVXrwiobrnNUmMJEO
N6u2gN2OmidV28HxvZKt1U6hc/ESpEi6L7SYPvaGpayDWh4fgv25RE2fxMHV
DU+bn5yDB6UzOGoyYc4Y3201V2HVj/qJNTdD5+uHInHQEmyuuQNPlXg21T6H
T8tUNtZ9he/HJLPXT8DvP7qb1P+GF2lrxtczhs3Fa4oioWUsa6xfDIfZlG15
yg8/5XZqeLoG5mtavOWZCux6rPjZM204ri+GrcEQLtbeadxgGjZfnxTJqwzF
Ew1WMP0M07MGBzjdZ8fTxmB4Xf+V+qYU2F4nlLX5Anz4kqlhc07Y/PuWIrk+
Ix7bnAe32k7VNRfBq3mzDFoewvubjepamuCy2HH91tcwi+752tZBWCHTm+X5
6PzzdczG+x9d/ec/4RC7FTHP6Q5Rzro7XPOcGebVqmhP0oFj6xM+mkbAqV17
aj7FwJe/aF+NSDw0f1+nSEp+Cx7nT4Wr2Sc9bl2Ee2h5tJ58eMZs1zhHObzS
j7uUNMCqKbXBB7rhzVcyd7L0Hpqvj4rE4m7IxoxB2LneUlh1DPbpoi1onoJr
w3w+/GEMp9yeYPw4hQ3emapW4sQB92ZIXFbghj2ucqVOL4fHbtEdq1kZPhe/
zEqEo63Y+Ic0LDfhzrFGHS6esaAf04TXM2uPlm8Kn6/PSqRqKe1DrC5syCfY
ZmkAW0n9uD28DXZTb0k5YgVfClNb1ecfPnefIKFEfKaOhP0KhXX8215zRsNy
/wQvuRAD844Ka0qdgP8U1HoUJ8AD+73SN54Kn+vnVZTIcRdWW49LsPzOHP60
Anj5SmMDsSKY7uXovwUl8KczaVfUy8Ln7md0lUirOel8/ADObo5b110N+xl3
nRl9Cm+ulZxgeQ7z6fhbrHoF0zMIRl97DX+uqCpW6Qkn/5UzcyXyPHRvb2Uv
fF9jGbfxALxARu9kDmMEZcMVoex/VsMCZ+r380jCQ8v4GmQU4Pam8l8lShHz
/Z4SKY9zkdVaC182YrNrUIMTFxUdt9KEd0fTDXrqwP/QmxhGG8GCFeOBHFvh
haHnrp4zg4fVtV5KWMIdkwMshdYRc/Xi4Ozz3lFh3/svnOkfySWSAtvlvuBu
vgDztEvyhuXCo/tbeS2uRcytb7QSaWQKWS6bD18/L863oBCOUWnie3Ubnk72
W7n2Mew5vlIoqQ3u2f5o9fAH2LzIXdRwDKYZcYoJ/4CXfLgnNjk1v/7Js/sd
5CLeNAM/4VwqkcsQSTlca/cac1ZYzee2JAMnzMvqIPWSBx69xCJ9kx9uUiuU
PioI57XYytgLR87lS64ScaEvkGWTgoUUGeTLaPDJxCs0XgIzjpgo+2yFWzk6
Fp3bD2coOryrOg6XqdCmYxLgNjV6XpNT8LBmK40rBWbWyjLqPBs5l3+3lYi6
oW7E7kzY06y/5MtVuG23jAj9XVjjoFccTy2cGVU0KdUBsyT/cNrQB4uk1oYt
+Bw5tz+PZ+tdelpa7RBsmbG3OO4b7JWt0WT2Hc7Me834+hfcXnxI3Y0xinL2
C+ZliSKwz0RCfymBHbrLttSbwMaPPhZ12cGzp8uSXbui5s8zJaKtMu3a6wSX
D0dXurvB6lc4VgzthWkrJRq+e8Nr4jXCZ/6FuX1d+5YehRlsThoLn4Ynn+X+
kUqHv268X6iUBe/9uZntTi7cV9jionENdvSwq6i4AXeL9/Pp3Iqau+8YmI2v
B0m3jn2CN1tsMGwSPkz59sBT34visFiI9UUvqcPz55sSSV7aX7dRDl6Q5Tu+
VBF+X5dgcFMVrhy5dmEbgUM29Oif3AqrnVg+1mIP8xUp6fu4whMvt5zn9IRd
9nfVvPeG2+j2jBb6wdrJEwJRgYfn7/eVSeGaw3rbQ2Evv7Jvp07AslUj59rO
wTn2O0csymChqTqdjk741+qPaQHv4C49uq/LB2DDrjj+gUG4zHOlTulXWIrh
qmfM2OG5/6OXKZPU02vTrH7A5h88tNMWRlNeppg19JIHNjevTFouBqcGvF5n
oQTvqRS71KsCqy/yYPVVg1nNig4u0IQ/iN9N7t4I/w95diiH
       "]], 
      LineBox[CompressedData["
1:eJxN2Xk4VG8bB3Blr6jwo4hQShtjK0vq2LVYKkVSUUIha5EibZTdMLZsScgW
EiXZRUKoLEUisstSUrZ3vOPy7fzB9blmrjNzzrmf5/nezwidsTl8bikdHZ0q
9c/8/wMJnlHsk96EZocLV3qFFMGl5n2k/h/PnorqiJ6G68nFM3IMPouOf929
9uNyeL+Y2OHlfPAo5bKX0la47E1EQqsEHDZTUOIkB9/kqddVU4QtJb594VCC
9Q78svqqCu85xzyVpulDXOVK1+jIkyK6qnWkuvRhL+kwS15z+CO9qWziBVjw
vTij9EXYMm6qvsjOhzDyL/klGilF5NhVRGtdgg+uOi1rfg3+lj5R734LdtHy
s4zwglcNijBmB8InXo7WExQ4wetVdE2YDzFPI3/q/Tp+z9IwEt695ahsTwx8
3uy2JW86HPLwabRWPtxhf93yUyG8XfmArHmpD2GnuKzpoa0U4bSah/Hna7jk
a2e9exVscN3FMqIe/sHPwZjdDHvkP46uaYfXnVCS7fkOm29lY3Ts9yHuDBx6
LqAmRWT9aa6nG4ZnKuOjfUdhzTBbS95f8JedLIzS0/CljzHRWvS+iy6Kt7T8
xASvcNwla74M1lehZ/zJBsdxvKt3X+1LmM0fm6SIWp1Zhuz18JTPDtmeHbC6
0R8GRwmYvK28nk4GbvsbEO0r60vMX63iMilCtMrIknc3XGDxk0FaBdZj9onW
2g+butlbqRyCL/0ykJczgGdJB4WyT8AeVntZxE/D7EmSPx6f8SXo/n9Qn/83
kcaNZnBO/ZjdKke4qbCQbfoGbDyV9fPyHbh3Z8Ln0bu+xITofEVKErb24SVW
PvBkms/jHn+YRcTBqS0EXhN5XO19FCzKSXC+iYflvDZ1FKTAJeVrK+WewPuX
sD3JzvIlpOaPcUmiYTddiHgObOg8fi35BexiVrQmpAK+r+ebfeMjvDHA/f50
sy+xZf70vZJE6luHm06tsDSz+fmxdjhf2VDX+htc/YIQONsPt5I2DxqMwoOJ
bHnak/CMwE9P1TnYw7DnYuFSP2KQWn53BiQJ9pBPR+WZ4JD6mt3PWGEBtuIN
JDZY7HbiqAgXvGfKt5CPD36980ZCiACsbe/ou1oYbkwzd/QRgU/3GZ5g3uJH
q9/vkoTuXikFYVmYoCznU9SA85OXvKc/AMsW/faq0oazPw4pBx72o81frZIE
aeDbX/1jsCh33YXuk7CgUv4n+3PwGquk/XTW8KrQ4DxfR9gn1ctez9mPNn+9
o9ZbiftWvmvw7abLnR3XYbohq4ikW/Akz/FlO73hEWU1l1IybGWgIOkVAvda
S/TrRsCmtzbH8UTDX8P4Db888KONvypJom74l9yfDLhItXYtVxG827Cs/lMp
/Nwm796DClj6ToaSxVs/oqZ6/pAkMiIS/oi9g5PKyefzG+HYEbeWfV/gMD7L
fU3dcIC6/gvTIXiFkZbdtlF83l07lS1jP2EGT7mO55Owe6R4+PVp2LmCj5WN
wX/RtmPMVyKWw4PMsySTlbAF/8/ezZxwl2R/7DA3bKL51eAZr//i92t2iJGq
EYW1Y06xd++Et19gZ7SUh1llCqZGFOHvc9Zjl5X8ifnl2uWDJFFWxd83rQq7
G7s2shyEFSZaS7mOwBPeuzMFDeEsocjo7SZwwOABSpYpbJ075S1r4b9Y//tv
ptwssIRFtU5cUbWBo5159Yxc4f/iW8QcveGxi/dE/vrBdXJy69zJ/ovzVzpD
HwdTCOzzLozVJxzWODc5ERoLL53S73qYCL8KyK1/kg47b+IpfPkMPjb6+pnS
C3/i/8v1DLUe8y+nVuTDHJ6bHmoVwT8ONYa/L4WTe2Q826tgM1eK40A9rKqp
Zmn3ERbi/GXyuxmebYs3cG2FW5P0dOi/+i+ub4c/cG7lG4bfzDUwSE3DWg3K
ZkvpAhads3Hd/oElsIDTrx0f6GHPN7WrXzEG0J4nFzXfXLzR4scKb+WUfmDM
Bk/nfreQXA3XGIWTGP6Ddz6x5xrihqOXHJz8uCaAWP//wCFFMOuJtBbwwrYJ
s4WJ62DOkbM6BzbCOXJvvgxvg9f7xJU07Qgg4qnfvmmDFHH3y9WEInF4hHTU
67EEfPyW2EWyFLxVtEPGdBc8XR00I6MAn1tv3SGgCNfaqZcz74V3lq1/PEIE
0NaPbVJEDPcfnxZl2PZlil6KOqxsfGqd636Yi3F1l7Y23P24NEXwMKw9HenP
qhdAy4sk6vVrX3YYOwqvf6Cj/1kfvjsuqlB2HDYM+7w05CS8TdGvytwEDvY3
T9c9C093EGS5c/A5ad7LwuZwrcf48eXnA2h5REaKsKsz6Eu3hbl4C5wPO8Ni
Gj+neF1gDcet179dhY0fGC9NdQ0g5lffQ7LUfqA25I7jdThNlN6H8Rb89aYN
OcQDVt+lGfPcF04dEEz9FAw76zWUCzyE1V7daj+TCZ/qf3Fm29N/3s8z0j2e
DZNVN53Pz/nn/HZGg7ef4360v60c+y8f5tgk8yehEFZzfzC3qxR2/sTG9OY1
TGZWvRdYCadIu6wwrILLTDL8hasDaHlJlJr3/b5zDNTAqiqF69k+wsm/Q7eL
t8JlG2uf/G6D2w4xSBW1wxNu8jl3O1DPq1Jt5Q59g1WY2vZ2focvG+9Td+iH
v29qMxsbgo8N2XrajcJ+dXk8EuPw66cMSSM/A4j5dlRDiJrfQ7RlMybgnS5h
lTaTMDdzEevFOXgiqGe/FVPgosWcJD5vYwmk5aF1UoSZ4VXLAVY4WrF8Knk5
3Ci40ucCG6zeE5fatwrOSdtZY8EFb3KsGurhgUPkT7Gb88G1/EnRm/gDiYhw
6rFWimBaMib2XQDe06VQ+EgQdqq4o3NOGO71XWvbJQIb6KUFnN0CB+z6Lbhh
G1zJq5TZuR2mm/VSihODZTs+1JuQAhfn2zUXpzmMd8GTfzfondoDk75Yd/ET
sEVxrmObEhwbv4QxSgVu9jxAMVILpOW9ldR+VLv92WdN+DmXQ6PhQVj0M9Pv
Fh047EEEz/EjcN3trsQ1R2EWCzHZ5mMwccC5MtQgkCidb8+XUsePWImBviFM
2PxQGDKBWTLWrb91Hpan6w21sIStdJ+u0rYOpO1f/KXmj1i3e1I2cN3IvqVr
7WDpwK/j3xzhMAmn7nRnuOqG8qlgF3i6nq3pyjVYTLhF57QbbGwfX6nqHriY
L8o4FPJW3oZFn9anfPKEfY5YRD3yhkfGZ/1s/WFh1SrmY4GwXjDFXSEI9ugy
/iNICVzsb3Klt9szhcJul44fjYyG1XM8ZCUTYGemw5k8SQvjrYOaZ47xb515
DLcm9MZ1psDsv5/yVabB9qH72YIy4cZdHbMnn8Esd1OdVHJh+WanEdEXsJWo
ynn2l3C0M3vneH4g8f+40kTNc2sfvS8ogs1eKJTfK4Orjjfk6FXCYn8tktZX
w8b7pYUYa2FyxFx4/zu4rL+Ko64+kJa/XlHzsHyI97P38Apy08EvHbBw3xp2
5hG4d8/5PYHjcFrwi4t8v+GAwg6Pr5OBxP+HVzr1fvWzxjz6Cx/9TzL3wjQs
Sxi+E5+FZynJcy+WkBddOvBXXJURTuDeoMnKDN9VOmBcywJbWjk4By2DtUPv
BxisIC/st0kSLcq7R604YdPh1kM3eGGNtYwX1NfBW1V33FwuAK+wORpRtx7+
Ee6aRREi0+aTYGp//KOmc70I7KImwJksChP3L6pIb4cZRwscCsThXr4e71sS
cJX6ynhNKTjNblc+mwyZtv/pSb3fkac/NOyE12nSyfQowonjsZQpVZj3iEZY
4kHYJ2so4ogerN5JRG4xgOdWB0fNnYBbHytG958k08a/C7W/VeqJ/ngaprQE
xBSZwPZ28rEpZ2EDkucjegd4z4/3ySduwnyerinqt8m08e5A7ecFNqdKeMAf
cupS192FM7Vd0pi94AtuNeltvvDGdMGMp4EwnXpVRnQQ3NbmkHmPAudd4s9y
DIVD2CqyToeTafOHpSShq8ibLRMFs1pbP1v+AC6JLMrpiIevVXM+z02CDUxf
PY9LhmWmzV74ppJpeeIstf8KXpXnnA4Pb8vLO5sBm3gbv1r5HP7Qz1T0shB+
J1tWE1W8UC961PrxuPH5ein8+sOePpNyuFh4ekKlAn5ecJmD5S2cbji6o7oW
jiB/N9VrhD2rPt9vbYPdzI7lxnbAjkvrG0y7YRtdv6/qPfCF6APDon1kWr+2
X5I4N8gyvWwANpZ/zTo0CGvZvyQu/YTlkzOcZqZgmUnrO+0zZNp8pChJkNS3
BRXPwduDe2MfLgla9ObOR+l36GEBN8GqfcwwF+/9brbl8PC9O0cEeIMW8qwk
0SVCZ9PJD38udvFKEIIbV8qG3d0AN5z89eiCSNBC3pMkalKynh7cDFf+sSkW
2wIXUPpbx7bD2RLnJnNI8JPrwkzhknByTTvnVWk4gS9K6ORO+MF5Q/G9skEL
+Yfq4K5LyUlBC/s1EoTswOFqzQy4TqlYuCcXXmc9qZXzErYIE79ypxBmF3vL
bl0MZ5eaxeuVwobHl8rvLg9amJ8lCLofUe82VMBhais2ldTCpEiXa8aNcKME
N4dmcxCtX46WIK5VZCaKf4KFT2op8rTClWO9DbNtMJeA4GxNB3x6n/6WqG6Y
oX2s4HYPnOzop2fVB+su29p/ZACeiCm/rjAURByejxeBEoTy2+nkZaOw34RU
Y8tP+JOQ5ZLHk/AmrbjtztNwdadiyelZ2N65RV+DLpiW925KEGvYLw2JLYUL
Hq66xc0AH/vr1pK9HB7WHRI/wgkHf79bLv9f8ML8JkHIX9t4QpgH/rq6aIR1
LeyReMJjlBduaCBnFgnA/LNvWv2FYceLJav1N8JVX/LUBTbBQjpPr3Zvhp0L
UzJStwTT9sPMJAiR2EhehR1wg7vv7Tck2N3EbVhfGt6hbGPwfRd8O8vcN00O
/iRsXOKoAEsEGfxWUAym5SF9CeIu/aHt9Hvhb2WSdILq8B4Prg+7tWDKxApW
Bh140Ixxz1vdYNr6JU99/k0z9uTDcLjGROJxPVhdtGd1rz78k6X56uUTcFxf
ZTfDaVin6oVO0Bk4QT7rtqFp8MJ+igQxnZz8QsgMPsL3cLjXHE72vr8h4zzM
qOX6u9oWNmY//bbPCc5106fLvBK8sB9FHc8/dGScr8KmpzUv7HWFX74jYpiu
wxYZEqyUmzB3oLDDBg/YaglfUr8nXGrH2ZZ5D+btXM5xxRu2PcygQfgGL/RP
EoSA1K+M2gD4Led33pPBcI7xbHRLKBybxr3h2H34vw/C57iiYK+/YokN0fCc
oEJfQGzwwu9j1HrW0NimEwfv63CS0nwMC1xNUlDKgIMeZLvOZcIslUWFr57C
bsPVS649W6j/cRIxztWiIp8LfzEZrcjJgyvTWQ9KFcBZU0J1T4rhKE15ve3l
MIeNekj/a/gu5XBzUuXC9b0jETMvT/GaV8H2nReMRKrh1/t2uLL2wryZP6KG
6CmLvqfqWlnPSKHtHz0nEZNNy8afMcMWlmH8Eaxw06yIpttyOEdEKUp9JRx8
0GiMnROm/9q3bpwLtndw0mjihjuYGO1frqHQ6jWFROhGkCNjeGGx4rRRcwGY
rbdSnSQMD7J33Z8Ugatk5kaKtsByb3z4Hm2Dk4x41e/toCzkfRLBM5Joay0O
e9ySuX9IAjZN1h1ZKwOr1FuqdcrCWaZ/bF7Lw8KTHhHJu+FAb65yvz0w3fq4
H/bEwv33JxH5Vs3h9JrwlTx21WAduFcr8qLzIdigY0u40RG4wjG3lDhKodWj
O4nYyaI2vFEf5hI3VhkyhMeOXg17dgquuxYy5HoGfvIwU1ndDBbYtdd6qwVl
YX4nEX5V1aHsF+CZk4YlY5aw1WjPYKM1vH8NvXKMHSy6VyDU/BIc2pBSfMAJ
ZjKTGxS/Al/+85qb6yrc7aOnNHmNspCPSUTXTGIAt/c/vjjVLh0ObzxQ55Af
CZtufsSsGgvfpvjXM8fB8fQu998+hMvsTM/5P6IsrA/U87drix9JhE3DJo+d
Sf/ndd04N7tnMEOhj6ZMLrxxhxPHn+cUWv+lQSJU75u05ufBpqwHE9zz4fhu
QXmWIrir+FeNf+k/73eJ+RVdBX+T3MefXg+fGRhTfdUMdz6MtKpuhz00zSP+
/OP/Aemr5u0=
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#5"]& ], 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwVl3k8VesXxokooW6kUppLOOLsnYjiaS6VCkkyFoqM55gzRM4xHOewxUGD
UinpGjIWklRuKRqUcN0GJVJKqcz6vb+/9uf72fvd79rvWut51l540NvcZYKE
hIShpITE/68/ji7/bV46bnw2zJ9nd00H7g3Wr9dptZu8DJZw08nVwex3RVxp
rS8mCgGCHZJXdfC9x6G6U3PUJMwrSyn7sg7+8y471KwpDzuHhqwvWTqwKHIq
a9ScC7V1S6uPpetAZFH+pl6ThbPSL39n8HSgteTgzweaa3BWsPJIs4MOfh6Y
LydvsxM7djo2uirqQFnsi1cNe5Hmcu7NgrsroDd4rb693hZPgh6OTA5ZAbmF
O7VrdQ7im/pokkBrBRKvDOVb3nRB/5BO5ViHNvoXHqdviNwgk+o9PilVGzat
nDd65p44nd+XqbVNG1rBwkXB7j6ofe6iKCmljY1h9mtVOD74YO85/kxSG/aR
OtbFwT6Q+ez39YKENpLjngl7Y32wXSq6ceM4C4MZM4acrvigeAovPG6IhbqK
s09MP/hgvMSlQqmPhYOjeaFz7X1ReW3XJPo/FkIlItJuuvjivbP/rontLIil
dxdZefpCbt5p8as2Fh7K/+hKCvWFTdLHJaEtLOiqrbKYeNoXfXfOWtY1sTC+
tlrj6ytfeCdb/DpQz0JGRGPz7T0cKDtoHTtVzkLA1+ne/1pzQF+nWqPKWDC3
2yc74MCBuZSh/tFSFuSN3uqv8OKAubK136iYheO/v6efiecgwqOf8y6fhSOe
Mw4E3+UgKLiOp32ZhU3t+/tT6jkw8HSQm5XNwqLtmYLCZxwMOQ6KJlxioX25
elXXGw5Ctmqmv8piYdcHAzWrUQ7CZopyI8+ywLIIK/WV4sJ4irqOxxkWJtXe
2SmU4+LP+O1iq9Ms1J4zDb83i4vD2W/MWRksrDpg+4bS48K1kLO9JYUFpfrz
gWZruFjGTdt29yQLfQadU903cPFRr2pLfjILDVc0cnimXGQPvt2UwbCQq+KF
rD1cuFRO3BidxEIMr6ilypqLpeGa670TWXD++dunxYGLD9gFGxELOGQ0+acr
F+kV4uASsl7teUTWVC8u1L39e9VTWRjGvdVa/lyULbZ0Op3OQnPBpOebQ7nY
1EK9VCTfkyRkJoTHc3FoXV/VrwssSG+7eOjLZS4ylY4m3C1k4V1514hsPhfa
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
DR0y3AFd/A8Wzenj
       "]]},
     Annotation[#, "Charting`Private`Tag$804306#6"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"G\[OAcute]lyairoda, Thu 7 Dec 2023\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9273067088979855`*^9, 3.927306729826426*^9}, {
   3.9273067842956057`*^9, 3.9273067993999343`*^9}, {3.9273068458465977`*^9, 
   3.927306901067723*^9}, 3.927306963000427*^9, {3.9273069931746907`*^9, 
   3.9273070170562863`*^9}, {3.9273070609152336`*^9, 3.9273071278572874`*^9}},
 
 CellLabel->"Out[1774]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["dev: egy k\[ODoubleDot]r, egy nap", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, 3.927789418726903*^9}],

Cell[CellGroupData[{

Cell["simulation", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.927696014997943*^9}, {
   3.9276964080823855`*^9, 3.927696408241493*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetSimulationParameters", "[", "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"startTimeBin", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"timeScaling", "=", " ", 
      RowBox[{"1", "/", 
       RowBox[{"(", "60", ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dt", "=", "5"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tStart", "=", 
      RowBox[{"dt", " ", "startTimeBin"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tEnd", "=", 
      RowBox[{"24", " ", "60"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9274530926318784`*^9, 3.927453131237296*^9}, {
   3.9274533584714427`*^9, 3.9274533673027496`*^9}, {3.927455036647355*^9, 
   3.927455040471947*^9}, 3.927455092806878*^9, {3.9274554265994425`*^9, 
   3.9274554285041313`*^9}},
 CellLabel->"In[53]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetSimulatedCycle", "[", "cycleToSet_", "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cycle", "=", "cycleToSet"}], ";", "\[IndentingNewLine]", 
     RowBox[{"roomsOnCycle", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"roomToCycle", ",", "cycleToSet"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"roomEnvelopeThermalConductivity", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"roomEnvelopeThermalConductivities", "[", 
         RowBox[{"[", "room", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"roomRadiatorThermalConductivity", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"roomRadiatorThermalConductivities", "[", 
         RowBox[{"[", "room", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"roomHeatCapacity", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"roomAreas", "[", 
          RowBox[{"[", "room", "]"}], "]"}], "roomHeight", " ", 
         "airSpecificMass", " ", "airSpecificHeatCapacity"}], ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.9273074063423433`*^9, {3.9273074696859303`*^9, 3.9273074698669777`*^9}, {
   3.927311234395136*^9, 3.9273112346013346`*^9}, {3.9273113088260703`*^9, 
   3.9273113307928658`*^9}, {3.927311410554267*^9, 3.9273114106653566`*^9}, {
   3.927311484634174*^9, 3.9273114847294407`*^9}, {3.9273117032919245`*^9, 
   3.927311703977828*^9}, {3.927312263097784*^9, 3.927312281482777*^9}, {
   3.92731336185113*^9, 3.9273133655147915`*^9}, {3.9273134409397163`*^9, 
   3.927313441098397*^9}, {3.92736039159949*^9, 3.9273603917108383`*^9}, {
   3.9273899569036555`*^9, 3.927389956997441*^9}, {3.927390339235085*^9, 
   3.927390339458087*^9}, {3.9273908051869965`*^9, 3.9273908156353664`*^9}, {
   3.9274530367943487`*^9, 3.9274530632222185`*^9}, {3.927454915639304*^9, 
   3.9274549593682356`*^9}, 3.92745509551235*^9, {3.928404465919602*^9, 
   3.9284045289495335`*^9}},
 CellLabel->"In[54]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetSimulatedDayForComparison", "[", 
    RowBox[{
    "dayNToSet_", ",", "roomsTempStartIn_", ",", "heatingStateStartIn_"}], 
    "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dayN", "=", "dayNToSet"}], ";", "\[IndentingNewLine]", 
     RowBox[{"heatingTrueState", "=", 
      RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"DateDifference", "[", 
               RowBox[{
                RowBox[{"DateList", "[", 
                 RowBox[{"NormalizeDate", "[", 
                  RowBox[{"seasonDays", "[", 
                   RowBox[{"[", "dayNToSet", "]"}], "]"}], "]"}], "]"}], ",", 
                
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
           "&"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"heatingStateDaily", "[", 
              RowBox[{"[", "dayNToSet", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "cycle"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
           "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"roomsSetTemp", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"DateDifference", "[", 
                 RowBox[{
                  RowBox[{"DateList", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "dayNToSet", "]"}], "]"}], "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
              "}"}], "&"}], "\[IndentingNewLine]", ",", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"roomTempsDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}], "[", 
                RowBox[{"[", "dayNToSet", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}],
              "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], 
         "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"roomsLowerBuffer", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"DateDifference", "[", 
                 RowBox[{
                  RowBox[{"DateList", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
              "}"}], "&"}], "\[IndentingNewLine]", ",", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"roomTempsDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}], "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}],
              "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"roomsUpperBuffer", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"DateDifference", "[", 
                 RowBox[{
                  RowBox[{"DateList", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "dayNToSet", "]"}], "]"}], "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
              "}"}], "&"}], "\[IndentingNewLine]", ",", 
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"roomTempsDaily", "[", 
                 RowBox[{"[", "room", "]"}], "]"}], "[", 
                RowBox[{"[", "dayNToSet", "]"}], "]"}], "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}],
              "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"roomsTrueTemp", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"DateDifference", "[", 
                 RowBox[{
                  RowBox[{"DateList", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "dayNToSet", "]"}], "]"}], "]"}], "]"}], ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
              "}"}], "&"}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"roomTempsDaily", "[", 
               RowBox[{"[", "room", "]"}], "]"}], "[", 
              RowBox[{"[", "dayNToSet", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"room", ",", "roomsOnCycle"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"externalTemp", "=", 
      RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"DateDifference", "[", 
               RowBox[{
                RowBox[{"DateList", "[", 
                 RowBox[{"NormalizeDate", "[", 
                  RowBox[{"seasonDays", "[", 
                   RowBox[{"[", "dayNToSet", "]"}], "]"}], "]"}], "]"}], ",", 
                
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
           "&"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"externalTempDaily", "[", 
             RowBox[{"[", "dayNToSet", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
           "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"roomsTempStart", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NumberQ", "[", 
            RowBox[{"roomsTempStartIn", "[", 
             RowBox[{"[", "roomN", "]"}], "]"}], "]"}], ",", 
           RowBox[{"roomsTempStartIn", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], ",", 
           RowBox[{"First", "[", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{"roomsTrueTemp", "[", 
                 RowBox[{"[", "roomN", "]"}], "]"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"24", " ", "60"}], ",", "5"}], "]"}]}], "]"}], ",", 
              "\"\<n\>\""}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"roomN", ",", "1", ",", 
           RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"heatingStateStart", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "heatingStateStartIn", "]"}], ",", 
        "heatingStateStartIn", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"heatingStateDaily", "[", 
             RowBox[{"[", "dayNToSet", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", "+", "cycle"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.927307503543253*^9, 3.927307507271658*^9}, {
   3.9273099564887776`*^9, 3.9273099565539865`*^9}, 3.927311241628481*^9, {
   3.927311783710665*^9, 3.927311857130314*^9}, {3.927312065275762*^9, 
   3.927312090714825*^9}, {3.9273121298699484`*^9, 3.9273121489074073`*^9}, {
   3.927312488927308*^9, 3.9273124918337164`*^9}, 3.927360661444872*^9, {
   3.9273866780498233`*^9, 3.927386682753128*^9}, 3.9273867217141123`*^9, {
   3.927389934016899*^9, 3.9273899342356696`*^9}, {3.927453037978382*^9, 
   3.9274530935606985`*^9}, {3.9274549287793813`*^9, 3.92745503397939*^9}, 
   3.9274550933057947`*^9, {3.9277829543085966`*^9, 3.927783052861505*^9}, {
   3.927783606279357*^9, 3.927783633090927*^9}, 3.9277879166953154`*^9, {
   3.927794442086138*^9, 3.927794467021099*^9}, {3.927795772618135*^9, 
   3.9277957820983315`*^9}, {3.9277960935480433`*^9, 3.9277961087154365`*^9}},
 
 CellLabel->"In[55]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetSimulatedDay", "[", 
    RowBox[{
    "dayNToSet_", ",", "roomsSetTempIn_", ",", "roomsLowerBufferIn_", ",", 
     "roomsUpperBufferIn_", ",", "roomsTempStartIn_", ",", 
     "heatingStateStartIn_"}], "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dayN", "=", "dayNToSet"}], ";", "\[IndentingNewLine]", 
     RowBox[{"roomsSetTemp", "=", "roomsSetTempIn"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"roomsLowerBuffer", "=", "roomsLowerBufferIn"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"roomsUpperBuffer", "=", "roomsUpperBufferIn"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"externalTemp", "=", 
      RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"DateDifference", "[", 
               RowBox[{
                RowBox[{"DateList", "[", 
                 RowBox[{"NormalizeDate", "[", 
                  RowBox[{"seasonDays", "[", 
                   RowBox[{"[", "dayNToSet", "]"}], "]"}], "]"}], "]"}], ",", 
                
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
           "&"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"externalTempDaily", "[", 
             RowBox[{"[", "dayNToSet", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
           "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"roomsTempStart", "=", "roomsTempStartIn"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"heatingStateStart", "=", "heatingStateStartIn"}], ";"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.927307503543253*^9, 3.927307507271658*^9}, {
   3.9273099564887776`*^9, 3.9273099565539865`*^9}, 3.927311241628481*^9, {
   3.927311783710665*^9, 3.927311857130314*^9}, {3.927312065275762*^9, 
   3.927312090714825*^9}, {3.9273121298699484`*^9, 3.9273121489074073`*^9}, {
   3.927312488927308*^9, 3.9273124918337164`*^9}, 3.927360661444872*^9, {
   3.9273866780498233`*^9, 3.927386682753128*^9}, 3.9273867217141123`*^9, {
   3.927389934016899*^9, 3.9273899342356696`*^9}, {3.927453037978382*^9, 
   3.9274530935606985`*^9}, {3.9274549287793813`*^9, 3.92745503397939*^9}, 
   3.9274550933057947`*^9, {3.9277829543085966`*^9, 3.927783052861505*^9}, {
   3.927783606279357*^9, 3.927783633090927*^9}, {3.9277879166953154`*^9, 
   3.9277879882266264`*^9}, {3.9277900742447042`*^9, 3.927790097569831*^9}, {
   3.9277944051123323`*^9, 3.9277944221407566`*^9}, {3.9277958047986083`*^9, 
   3.927795809887888*^9}},
 CellLabel->"In[56]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulateDayForCycle", "[", 
   RowBox[{"warmingCorrection_", ",", "coolingCorrection_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "simulation", ",", "simulatedHeatDynamics", ",", "heatingSimulatedState",
       ",", "roomSimulatedTemp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simulation", "=", 
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "roomsTemp", ",", "roomsTempList", ",", "heatingState", ",", 
            "heatingStateList", ",", "\[Tau]Start", ",", "\[Tau]End", ",", 
            "d\[Tau]"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"roomsTemp", "=", "roomsTempStart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"heatingState", "=", "heatingStateStart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Tau]Start", "=", 
            RowBox[{"tStart", "/", "timeScaling"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Tau]End", "=", 
            RowBox[{"tEnd", "/", "timeScaling"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"d\[Tau]", "=", 
            RowBox[{"dt", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"roomsTempList", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"roomN", ",", "1", ",", 
                RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"heatingStateList", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Module", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "heatingStateVotes", "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"heatingStateVotes", "=", "\[IndentingNewLine]", 
                 RowBox[{"Table", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Module", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "warming", ",", "cooling", ",", "dRoomTemp", ",", 
                    "heatingStateVote"}], "}"}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomsTempList", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "=", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomsTempList", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "==", 
                    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}], "}"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"roomsTempList", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}], "}"}], "}"}]}], "]"}
                    ]}], "\[IndentingNewLine]", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"warmingPower", "=", 
                    RowBox[{
                    RowBox[{"warmingCorrection", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
                    "roomRadiatorThermalConductivity", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"HeatingCurve", "[", 
                    RowBox[{
                    RowBox[{"externalTemp", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], ",", "75", 
                    ",", "45"}], "]"}], "-", 
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}], ")"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"coolingPower", "=", 
                    RowBox[{
                    RowBox[{"coolingCorrection", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
                    "roomEnvelopeThermalConductivity", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "-", 
                    RowBox[{"externalTemp", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}], 
                    ")"}]}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"dRoomTemp", "=", 
                    RowBox[{"d\[Tau]", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"warmingPower", "-", "coolingPower"}], ")"}], "/", 
                    RowBox[{"roomHeatCapacity", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}]}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "+=", "dRoomTemp"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"heatingStateVote", "=", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "<", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomsSetTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"roomsLowerBuffer", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}]}], "&&", 
                    RowBox[{"dRoomTemp", "<", "0"}]}], ",", 
                    "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], ">", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomsSetTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"roomsUpperBuffer", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}]}], "&&", 
                    RowBox[{"dRoomTemp", ">", "0"}]}], ",", 
                    "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
                    "heatingState"}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ";", 
                    "\[IndentingNewLine]", "heatingStateVote"}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"roomN", ",", "1", ",", 
                    RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                
                RowBox[{"heatingStateList", "=", 
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"heatingStateList", "==", 
                    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    "heatingState"}], "}"}], "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Join", "[", 
                    RowBox[{"heatingStateList", ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    "heatingState"}], "}"}], "}"}]}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"heatingState", "=", 
                 RowBox[{"Max", "[", "heatingStateVotes", "]"}]}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{
              "\[Tau]", ",", "\[Tau]Start", ",", "\[Tau]End", ",", 
               "d\[Tau]"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "heatingStateList", ",", "\[IndentingNewLine]", "roomsTempList"}],
             "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"simulatedHeatDynamics", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Module", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "roomTemp", ",", "externalTemp", ",", "tempDiffExt", ",", 
              "tempDiffHeater", ",", "heatLoss", ",", "heatGain"}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"roomTemp", "=", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{"simulation", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"externalTemp", "=", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"externalTempDaily", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"tempDiffExt", "=", 
              RowBox[{"roomTemp", "-", "externalTemp"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tempDiffHeater", "=", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"HeatingCurve", "[", 
                   RowBox[{"#", ",", "65", ",", "45"}], "]"}], "&"}], ",", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
               "roomTemp"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"heatLoss", "=", 
              RowBox[{
               RowBox[{"coolingCorrection", "[", 
                RowBox[{"[", 
                 RowBox[{"roomsOnCycle", "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
               "tempDiffExt", " ", 
               RowBox[{"roomEnvelopeThermalConductivity", "[", 
                RowBox[{"[", "roomN", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"heatGain", "=", 
              RowBox[{
               RowBox[{"warmingCorrection", "[", 
                RowBox[{"[", 
                 RowBox[{"roomsOnCycle", "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
               "tempDiffHeater", " ", 
               RowBox[{"roomRadiatorThermalConductivity", "[", 
                RowBox[{"[", "roomN", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"heatLoss", ",", "\[IndentingNewLine]", "heatGain"}], 
              "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"heatingSimulatedState", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{"simulation", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"roomSimulatedTemp", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"simulation", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "roomN", "]"}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
       ";"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "simulation", ",", "\[IndentingNewLine]", "simulatedHeatDynamics", ",", 
       "\[IndentingNewLine]", "heatingSimulatedState", ",", 
       "\[IndentingNewLine]", "roomSimulatedTemp"}], "\[IndentingNewLine]", 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92738958053071*^9, 3.927389580984152*^9}, {
  3.927389899513644*^9, 3.9273899444789886`*^9}, {3.9274531639796114`*^9, 
  3.92745319188067*^9}, {3.927465229147805*^9, 3.9274652835055103`*^9}, {
  3.9274653783037305`*^9, 3.927465392332333*^9}, {3.927699433834343*^9, 
  3.9276994423488426`*^9}, {3.9277943474641848`*^9, 3.927794375041957*^9}, {
  3.92779568676348*^9, 3.927795715273203*^9}, {3.9284045575037317`*^9, 
  3.9284046019245005`*^9}, {3.9284046792984056`*^9, 3.928404753410231*^9}, {
  3.9284048841281176`*^9, 3.9284049485449104`*^9}, {3.9284049929159675`*^9, 
  3.9284050062130136`*^9}, {3.9284051623812194`*^9, 3.928405203242468*^9}},
 CellLabel->"In[57]:="],

Cell[CellGroupData[{

Cell[BoxData["roomEnvelopeThermalConductivities"], "Input",
 CellChangeTimes->{{3.928405988890835*^9, 3.928405991004369*^9}},
 CellLabel->"In[119]:="],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   StringJoin["Making second backup, ", 
    FileNameTake[NotebookBackup`Private`bakfile2$774080], "..."], 
   StandardForm],
  Evaluator->"Local",
  ImageSizeCache->{
   153.953125, {20.5751953125, 11.0390625}}]], "PrintTemporary",
 CellChangeTimes->{3.928405991378255*^9},
 CellLabel->"During evaluation of In[119]:="],

Cell[BoxData[
 DynamicBox[ToBoxes[
   StringJoin["Backing up ", 
    FileNameTake[NotebookBackup`Private`nbfile$774080], " to ", 
    FileNameTake[NotebookBackup`Private`bakfile$774080], "..."], StandardForm],
  Evaluator->"Local",
  ImageSizeCache->{
   131.953125, {20.5751953125, 11.0390625}}]], "PrintTemporary",
 CellChangeTimes->{3.9284059914087114`*^9},
 CellLabel->"During evaluation of In[119]:="]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetSimulatedDayWithTimedHeating", "[", 
    RowBox[{
    "dayNToSet_", ",", "roomsSchedulesIn_", ",", "roomsTempStartIn_"}], "]"}],
    ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dayN", "=", "dayNToSet"}], ";", "\[IndentingNewLine]", 
     RowBox[{"roomSchedules", "=", "roomsSchedulesIn"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"externalTemp", "=", 
      RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"DateDifference", "[", 
               RowBox[{
                RowBox[{"DateList", "[", 
                 RowBox[{"NormalizeDate", "[", 
                  RowBox[{"seasonDays", "[", 
                   RowBox[{"[", "dayNToSet", "]"}], "]"}], "]"}], "]"}], ",", 
                
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Minute\>\""}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
           "&"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"externalTempDaily", "[", 
             RowBox[{"[", "dayNToSet", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "!=", "\"\<n\>\""}], "&"}]}], 
           "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"roomsTempStart", "=", "roomsTempStartIn"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"heatingStateStart", "=", "0"}], ";"}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.927307503543253*^9, 3.927307507271658*^9}, {
   3.9273099564887776`*^9, 3.9273099565539865`*^9}, 3.927311241628481*^9, {
   3.927311783710665*^9, 3.927311857130314*^9}, {3.927312065275762*^9, 
   3.927312090714825*^9}, {3.9273121298699484`*^9, 3.9273121489074073`*^9}, {
   3.927312488927308*^9, 3.9273124918337164`*^9}, 3.927360661444872*^9, {
   3.9273866780498233`*^9, 3.927386682753128*^9}, 3.9273867217141123`*^9, {
   3.927389934016899*^9, 3.9273899342356696`*^9}, {3.927453037978382*^9, 
   3.9274530935606985`*^9}, {3.9274549287793813`*^9, 3.92745503397939*^9}, 
   3.9274550933057947`*^9, {3.9277829543085966`*^9, 3.927783052861505*^9}, {
   3.927783606279357*^9, 3.927783633090927*^9}, {3.9277879166953154`*^9, 
   3.9277879882266264`*^9}, {3.9277900742447042`*^9, 3.927790097569831*^9}, {
   3.9277944051123323`*^9, 3.9277944221407566`*^9}, {3.9277958047986083`*^9, 
   3.927795809887888*^9}, {3.9283295522508497`*^9, 3.9283295776112123`*^9}, {
   3.928329806325898*^9, 3.928329847451209*^9}, {3.928330465229353*^9, 
   3.928330466682751*^9}},
 CellLabel->"In[58]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulateDayForCycleWithTimedHeating", "[", 
   RowBox[{"warmingCorrection_", ",", "coolingCorrection_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "simulation", ",", "simulatedHeatDynamics", ",", "heatingSimulatedState",
       ",", "roomSimulatedTemp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simulation", "=", 
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "roomsTemp", ",", "roomsTempList", ",", "heatingState", ",", 
            "heatingStateList", ",", "\[Tau]Start", ",", "\[Tau]End", ",", 
            "d\[Tau]"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"roomsTemp", "=", "roomsTempStart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"heatingState", "=", "heatingStateStart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Tau]Start", "=", 
            RowBox[{"tStart", "/", "timeScaling"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"\[Tau]End", "=", 
            RowBox[{"tEnd", "/", "timeScaling"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"d\[Tau]", "=", 
            RowBox[{"dt", "/", "timeScaling"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"roomsTempList", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"roomN", ",", "1", ",", 
                RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"heatingStateList", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Module", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "heatingStateVotes", "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"heatingStateVotes", "=", "\[IndentingNewLine]", 
                 RowBox[{"Table", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Module", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "warming", ",", "cooling", ",", "dRoomTemp", ",", 
                    "heatingStateVote"}], "}"}], ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomsTempList", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "=", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomsTempList", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "==", 
                    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}], "}"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"roomsTempList", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}], "}"}], "}"}]}], "]"}
                    ]}], "\[IndentingNewLine]", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"warmingPower", "=", 
                    RowBox[{
                    RowBox[{"warmingCorrection", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
                    "roomRadiatorThermalConductivity", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"HeatingCurve", "[", 
                    RowBox[{
                    RowBox[{"externalTemp", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}], ",", "75", 
                    ",", "45"}], "]"}], "-", 
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}], ")"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"coolingPower", "=", 
                    RowBox[{
                    RowBox[{"coolingCorrection", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
                    "roomEnvelopeThermalConductivity", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "-", 
                    RowBox[{"externalTemp", "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}], 
                    ")"}]}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"dRoomTemp", "=", 
                    RowBox[{"d\[Tau]", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"warmingPower", "-", "coolingPower"}], ")"}], "/", 
                    RowBox[{"roomHeatCapacity", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}]}]}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"roomsTemp", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "+=", "dRoomTemp"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"heatingStateVote", "=", 
                    RowBox[{
                    RowBox[{"roomSchedules", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"timeScaling", " ", "\[Tau]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "heatingStateVote"}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                   
                   RowBox[{"{", 
                    RowBox[{"roomN", ",", "1", ",", 
                    RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                
                RowBox[{"heatingStateList", "=", 
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"heatingStateList", "==", 
                    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    "heatingState"}], "}"}], "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Join", "[", 
                    RowBox[{"heatingStateList", ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"timeScaling", " ", "\[Tau]"}], ",", 
                    "heatingState"}], "}"}], "}"}]}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"heatingState", "=", 
                 RowBox[{"Max", "[", "heatingStateVotes", "]"}]}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{
              "\[Tau]", ",", "\[Tau]Start", ",", "\[Tau]End", ",", 
               "d\[Tau]"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
            "heatingStateList", ",", "\[IndentingNewLine]", "roomsTempList"}],
             "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"simulatedHeatDynamics", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Module", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "roomTemp", ",", "externalTemp", ",", "tempDiffExt", ",", 
              "tempDiffHeater", ",", "heatLoss", ",", "heatGain"}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"roomTemp", "=", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{"simulation", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"externalTemp", "=", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"externalTempDaily", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"tempDiffExt", "=", 
              RowBox[{"roomTemp", "-", "externalTemp"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tempDiffHeater", "=", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"HeatingCurve", "[", 
                   RowBox[{"#", ",", "65", ",", "45"}], "]"}], "&"}], ",", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{"externalTempDaily", "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
               "roomTemp"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"heatLoss", "=", 
              RowBox[{
               RowBox[{"coolingCorrection", "[", 
                RowBox[{"[", 
                 RowBox[{"roomsOnCycle", "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
               "tempDiffExt", " ", 
               RowBox[{"roomEnvelopeThermalConductivity", "[", 
                RowBox[{"[", "roomN", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"heatGain", "=", 
              RowBox[{
               RowBox[{"warmingCorrection", "[", 
                RowBox[{"[", 
                 RowBox[{"roomsOnCycle", "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], 
               "tempDiffHeater", " ", 
               RowBox[{"roomRadiatorThermalConductivity", "[", 
                RowBox[{"[", "roomN", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"heatLoss", ",", "\[IndentingNewLine]", "heatGain"}], 
              "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"heatingSimulatedState", "=", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{"simulation", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"roomSimulatedTemp", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"simulation", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "roomN", "]"}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
       ";"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "simulation", ",", "\[IndentingNewLine]", "simulatedHeatDynamics", ",", 
       "\[IndentingNewLine]", "heatingSimulatedState", ",", 
       "\[IndentingNewLine]", "roomSimulatedTemp"}], "\[IndentingNewLine]", 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92738958053071*^9, 3.927389580984152*^9}, {
   3.927389899513644*^9, 3.9273899444789886`*^9}, {3.9274531639796114`*^9, 
   3.92745319188067*^9}, {3.927465229147805*^9, 3.9274652835055103`*^9}, {
   3.9274653783037305`*^9, 3.927465392332333*^9}, {3.927699433834343*^9, 
   3.9276994423488426`*^9}, {3.9277943474641848`*^9, 3.927794375041957*^9}, {
   3.92779568676348*^9, 3.927795715273203*^9}, {3.9283295586054907`*^9, 
   3.9283295614005995`*^9}, {3.928329724568923*^9, 3.9283297622311735`*^9}, {
   3.9283298635845995`*^9, 3.928329917062208*^9}, {3.9283346634486847`*^9, 
   3.9283346660319176`*^9}, 3.928335589151145*^9, {3.9284050229198303`*^9, 
   3.928405032427521*^9}, {3.928405228235957*^9, 3.92840524016521*^9}},
 CellLabel->"In[59]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"EvaluateParameterVector", "[", 
   RowBox[{"warmingParams_", ",", "coolingParams_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "warmingCorrection", ",", "coolingCorrection", ",", "simulation", ",", 
      "simulatedHeatDynamics", ",", "heatingSimulatedState", ",", 
      "roomSimulatedTemp", ",", "tempSimulationError", ",", 
      "heatSimulationError"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"warmingCorrection", "=", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
        "1", ",", "1", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"coolingCorrection", "=", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
        "1", ",", "1", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"warmingCorrection", "[", 
          RowBox[{"[", 
           RowBox[{"roomsOnCycle", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"warmingParams", "[", 
          RowBox[{"[", "roomN", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"coolingCorrection", "[", 
          RowBox[{"[", 
           RowBox[{"roomsOnCycle", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "=", 
         RowBox[{"coolingParams", "[", 
          RowBox[{"[", "roomN", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"{", 
        RowBox[{"roomN", ",", "1", ",", 
         RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "simulation", ",", "\[IndentingNewLine]", "simulatedHeatDynamics", ",",
         "\[IndentingNewLine]", "heatingSimulatedState", ",", 
        "\[IndentingNewLine]", "roomSimulatedTemp"}], "\[IndentingNewLine]", 
       "}"}], "=", 
      RowBox[{"SimulateDayForCycle", "[", 
       RowBox[{"warmingCorrection", ",", "coolingCorrection"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"tempSimulationError", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"Select", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"roomSimulatedTemp", "[", 
                 RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
               RowBox[{
                RowBox[{"roomsTrueTemp", "[", 
                 RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], "]"}],
              "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", 
               RowBox[{"24", " ", "60"}], ",", "5"}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", ",", "NumberQ"}], "]"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"roomN", ",", "1", ",", 
          RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"heatSimulationError", "=", 
      RowBox[{
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"Total", ",", "#"}], "]"}], "\[IndentingNewLine]", 
             "&"}], ",", "simulatedHeatDynamics"}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"Mean", "[", 
           RowBox[{"Total", "[", 
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{"Total", ",", "#"}], "]"}], "\[IndentingNewLine]", 
               "&"}], ",", "simulatedHeatDynamics"}], "]"}], "]"}], "]"}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], "-", 
       RowBox[{"100", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"heatStockDaily", "[", 
            RowBox[{"[", "cycle", "]"}], "]"}], "[", 
           RowBox[{"[", "dayN", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"warmingCorrection", ",", 
       RowBox[{"(*", "1", "*)"}], "\[IndentingNewLine]", "coolingCorrection", 
       ",", 
       RowBox[{"(*", "2", "*)"}], "\[IndentingNewLine]", "simulation", ",", 
       RowBox[{"(*", "3", "*)"}], "\[IndentingNewLine]", 
       "simulatedHeatDynamics", ",", 
       RowBox[{"(*", "4", "*)"}], "\[IndentingNewLine]", 
       "heatingSimulatedState", ",", 
       RowBox[{"(*", "5", "*)"}], "\[IndentingNewLine]", "roomSimulatedTemp", 
       ",", 
       RowBox[{"(*", "6", "*)"}], "\[IndentingNewLine]", 
       "tempSimulationError", ",", 
       RowBox[{"(*", "7", "*)"}], "\[IndentingNewLine]", 
       "heatSimulationError"}], 
      RowBox[{"(*", "8", "*)"}], "\[IndentingNewLine]", "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9274528154650946`*^9, 3.9274528435934067`*^9}, {
   3.927452930390992*^9, 3.92745299688822*^9}, {3.9274532719155703`*^9, 
   3.927453302296705*^9}, {3.9274533754038734`*^9, 3.927453411158662*^9}, {
   3.927455089324356*^9, 3.927455090091329*^9}, {3.9274653077932124`*^9, 
   3.9274653251274743`*^9}, {3.9276959437020636`*^9, 3.927695979066929*^9}, 
   3.927696768270372*^9, 3.9276994583266335`*^9, 3.927706450494398*^9, 
   3.927706496941099*^9, {3.9277827816899185`*^9, 3.927782783429142*^9}, {
   3.927783195925104*^9, 3.92778324433713*^9}, {3.9277833751251373`*^9, 
   3.9277833756452875`*^9}, {3.927784598862335*^9, 3.9277846188285246`*^9}, 
   3.9277944668160305`*^9},
 CellLabel->"In[60]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell["model fitting via genetic algorithm", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, 
   3.9276963625693574`*^9}],

Cell[CellGroupData[{

Cell["functions", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.9276963663406076`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FitnessFunction", "[", 
   RowBox[{
   "individual_", ",", "tempErrorWeight_", ",", "heatErrorWeight_", ",", 
    "heatMeasureType_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"chromosomeLength", ",", "simulationResults"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"chromosomeLength", "=", 
      RowBox[{"Length", "[", "individual", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"simulationResults", "=", 
      RowBox[{"EvaluateParameterVector", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"individual", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"chromosomeLength", "/", "2"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"individual", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{"chromosomeLength", "/", "2"}], "+", "1"}], ";;", 
           "chromosomeLength"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"tempErrorWeight", " ", 
           RowBox[{"Total", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{"simulationResults", "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}], "]"}], "]"}]}], "+", 
          RowBox[{"heatErrorWeight", " ", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"simulationResults", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "heatMeasureType", "]"}], "]"}], "]"}]}]}], ")"}], 
        "/", "100"}], ")"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.92769633477112*^9, 3.9276963551078596`*^9}, {
   3.927696422688532*^9, 3.927696434655146*^9}, 3.9276964648096113`*^9, {
   3.9276967189762535`*^9, 3.927696720780692*^9}, {3.9277832786662245`*^9, 
   3.9277832825866957`*^9}},
 CellLabel->"In[61]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateNewPopulation", "[", "\[IndentingNewLine]", 
   RowBox[{
   "FitnessFunction_", ",", "tempErrorWeight_", ",", "heatErrorWeight_", ",", 
    "heatMeasureType_", ",", "\[IndentingNewLine]", "population_", ",", 
    "\[IndentingNewLine]", "tournamentSize_", ",", "tournamentWinnerNumber_", 
    ",", "tournamentRounds_", ",", "\[IndentingNewLine]", 
    "mutationMagnitude_"}], "\[IndentingNewLine]", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "chromosomeLength", ",", "populationFitness", ",", "parents", ",", 
      "offspring", ",", "offspringFitness", ",", "newPopulation"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"chromosomeLength", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"population", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"populationFitness", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FitnessFunction", "[", 
          RowBox[{
          "#", ",", "tempErrorWeight", ",", "heatErrorWeight", ",", 
           "heatMeasureType"}], "]"}], "&"}], ",", "population"}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"parents", "=", 
      RowBox[{"population", "[", 
       RowBox[{"[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{"populationFitness", ",", "#"}], "]"}], 
              "\[IndentingNewLine]", "&"}], ",", 
             RowBox[{
              RowBox[{"Reverse", "[", 
               RowBox[{"Sort", "[", 
                RowBox[{"RandomSample", "[", 
                 RowBox[{"populationFitness", ",", "tournamentSize"}], "]"}], 
                "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "tournamentWinnerNumber"}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"round", ",", "1", ",", "tournamentRounds"}], "}"}]}], 
          "]"}], "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"offspring", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Module", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"crossoverPoint", ",", "child"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"crossoverPoint", "=", 
                RowBox[{"RandomInteger", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"chromosomeLength", "-", "1"}]}], "}"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"child", "=", 
                RowBox[{"Clip", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"p1", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "crossoverPoint"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"p2", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"crossoverPoint", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}], "+", 
                   RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "mutationMagnitude"}], ",", 
                    "mutationMagnitude"}], "}"}], ",", "chromosomeLength"}], 
                    "]"}]}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"p2", ",", "parents"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"p1", ",", "parents"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"offspringFitness", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FitnessFunction", "[", 
          RowBox[{
          "#", ",", "tempErrorWeight", ",", "heatErrorWeight", ",", 
           "heatMeasureType"}], "]"}], "&"}], ",", "offspring"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"newPopulation", "=", 
      RowBox[{
       RowBox[{"Sort", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"population", ",", "offspring"}], "}"}], ",", "1"}], "]"}],
         "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Length", "[", "population", "]"}]}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "populationFitness", ",", "\[IndentingNewLine]", "offspringFitness", 
       ",", "\[IndentingNewLine]", "population", ",", "\[IndentingNewLine]", 
       "offspring", ",", "\[IndentingNewLine]", "newPopulation"}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfSD15kNW57eO+9atfAGi14Xnl7IBaa+8tRUgejlz
+UYQvSEochOIjrnt/AlEb5uw+DuI/jHVVZ4dSJ8qMdIF0Sd6txqC6O8mE51B
tMCUUi8Q7RF63RtE79m6+waIrsuOvAuijeTPPAXRr0sNn4Hod07pr0B0WXAW
mG5xUOHiANJnfjHzgOga98XpIDqp/FYGiH4duuw4N5D2Np5/FUQLvfxdwwuk
C8XX14LoHwmnQ/lB7o5LjALR+3Ic82uAtCJfdjmIDvj0sgNET3se0wuirxYv
V68F0p8un9YA0ad2bpgColmm1E8F0QCXL43y
  "],
 CellLabel->"In[62]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["fit for multiple days cycle 2", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9278736949149466`*^9, 
   3.9278736966356626`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"daysToFit", "=", 
   RowBox[{"{", 
    RowBox[{
    "34", ",", "38", ",", "43", ",", "47", ",", "53", ",", "63", ",", "73", 
     ",", "78", ",", "83", ",", "88", ",", "93", ",", "98", ",", "103", ",", 
     "108", ",", "114", ",", "122", ",", "128"}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[455]:="],

Cell[CellGroupData[{

Cell[TextData[StyleBox["calc fit",
 FontWeight->"Plain"]], "Subsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696807398823*^9}, {3.9278679625655046`*^9, 3.927867962815778*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["calc",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.92777781639787*^9}, {
   3.927867237704297*^9, 3.927867253304248*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetSimulatedCycle", "[", "2", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSimulationParameters", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9274550685657244`*^9, 3.927455079814877*^9}, {
  3.9274587826534233`*^9, 3.9274587830976877`*^9}, {3.9274653350022993`*^9, 
  3.9274653354694*^9}},
 CellLabel->"In[70]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tournamentSize", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tournamentWinnerNumber", "=", "3"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tournamentRounds", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutationMagnitude", "=", "0.1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9274561441662283`*^9, 3.9274561448723316`*^9}, 
   3.9277008731390705`*^9, {3.9277016882852507`*^9, 3.9277016996458626`*^9}, 
   3.9277021990858583`*^9, 3.9277034807538896`*^9},
 CellLabel->"In[54]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initialPopulationSize", "=", "30"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chromosomeLength", "=", "8"}], ";"}]}], "Input",
 CellChangeTimes->{{3.927467291229319*^9, 3.9274672959979*^9}, {
  3.9277017066317167`*^9, 3.9277017131748323`*^9}, {3.9277022096008315`*^9, 
  3.927702209637347*^9}},
 CellLabel->"In[58]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"daysToFitCandidates", "=", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"30", ",", "125", ",", "5"}], "]"}], "+", "3"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataExistenceCheck", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"SetSimulatedDayForComparison", "[", 
            RowBox[{"#", ",", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{"None", ",", 
               RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "]"}], ",", 
             "None"}], "]"}], ",", "\"\<error\>\""}], "]"}]}], "}"}], "]"}], 
      "&"}], ",", "\[IndentingNewLine]", "daysToFitCandidates"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorDays", "=", 
   RowBox[{"daysToFitCandidates", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"dataExistenceCheck", ",", "\"\<error\>\""}], "]"}], "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"daysToFit", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"daysToFitCandidates", ",", "errorDays"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9277054347388754`*^9, 3.927705435140396*^9}, {
   3.927705484168851*^9, 3.92770549357543*^9}, {3.9277055421557426`*^9, 
   3.9277055891736846`*^9}, 3.927705984911271*^9, {3.9277830736181555`*^9, 
   3.9277830854880753`*^9}, 3.9277879167013083`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"daysToFit", "=", 
   RowBox[{"{", 
    RowBox[{
    "34", ",", "38", ",", "43", ",", "47", ",", "53", ",", "63", ",", "73", 
     ",", "78", ",", "83", ",", "88", ",", "93", ",", "98", ",", "103", ",", 
     "108", ",", "114", ",", "122", ",", "128"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.92770676294326*^9, 3.9277067684755187`*^9}, {
   3.927707141345888*^9, 3.92770715916174*^9}, 3.9277071960925183`*^9, {
   3.927707227434126*^9, 3.9277072277726336`*^9}},
 CellLabel->"In[167]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dayFitResults", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numOfGenerations", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempErrorWeight", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatErrorWeight", "=", "0"}], ";", 
  RowBox[{"heatMeasureType", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dayN", "=", 
     RowBox[{"daysToFit", "[", 
      RowBox[{"[", "dayNN", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"startPopulation", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "2"}], "}"}], ",", "chromosomeLength"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "1", ",", "initialPopulationSize"}], "}"}]}], 
        "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"startPopulation", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"bestFiveFromEachDay", ",", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "evolution", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{
         RowBox[{"DateString", "[", 
          RowBox[{"Date", "[", "]"}], "]"}], "<>", "\"\<: starting \>\"", "<>", 
         RowBox[{"DateString", "[", 
          RowBox[{"NormalizeDate", "[", 
           RowBox[{"seasonDays", "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"SetSimulatedDayForComparison", "[", 
        RowBox[{"dayN", ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"None", ",", 
           RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "]"}], ",", 
         "None"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"evolution", "=", 
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "generations", ",", "population", ",", "newGeneration", ",", 
            "newPopulation"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"generations", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"g", ",", "5"}], "]"}], "==", "0"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Echo", "[", 
                  RowBox[{
                   RowBox[{"DateString", "[", 
                    RowBox[{"Date", "[", "]"}], "]"}], "<>", 
                   "\"\<: starting generation \>\"", "<>", 
                   RowBox[{"ToString", "[", "g", "]"}]}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"g", "==", "1"}], ",", 
                RowBox[{"population", "=", "startPopulation"}], ",", 
                RowBox[{"population", "=", 
                 RowBox[{
                  RowBox[{"generations", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"newGeneration", "=", 
               RowBox[{"GenerateNewPopulation", "[", "\[IndentingNewLine]", 
                RowBox[{
                "FitnessFunction", ",", "tempErrorWeight", ",", 
                 "heatErrorWeight", ",", "heatMeasureType", ",", 
                 "\[IndentingNewLine]", "population", ",", 
                 "\[IndentingNewLine]", "tournamentSize", ",", 
                 "tournamentWinnerNumber", ",", "tournamentRounds", ",", 
                 "\[IndentingNewLine]", "mutationMagnitude"}], 
                "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"g", "==", "1"}], ",", 
                RowBox[{"generations", "=", 
                 RowBox[{"{", "newGeneration", "}"}]}], ",", 
                RowBox[{"generations", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{"generations", ",", 
                   RowBox[{"{", "newGeneration", "}"}]}], "]"}]}]}], "]"}], 
              ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"g", ",", "1", ",", "numOfGenerations"}], "}"}]}], 
            "]"}], ";", "\[IndentingNewLine]", "generations"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"dayFitResults", "==", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"dayFitResults", "=", 
          RowBox[{"{", "evolution", "}"}]}], ",", 
         RowBox[{"dayFitResults", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"dayFitResults", ",", 
            RowBox[{"{", "evolution", "}"}]}], "]"}]}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
          "\"\<\\\\ga_2.mx\>\""}], ",", "dayFitResults"}], "]"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"dayNN", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "7"}], "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9274567690167875`*^9, 3.9274569141841583`*^9}, {
   3.9274579054821672`*^9, 3.9274579241589375`*^9}, {3.9274586432260027`*^9, 
   3.927458671930293*^9}, {3.927458789419142*^9, 3.9274591186188264`*^9}, {
   3.927464279500599*^9, 3.927464286851693*^9}, {3.9274644106180663`*^9, 
   3.9274644982108827`*^9}, {3.9274645621806397`*^9, 3.927464562528467*^9}, {
   3.927467293634835*^9, 3.927467294099141*^9}, {3.9276963199081645`*^9, 
   3.9276963204384456`*^9}, {3.9276976668503323`*^9, 
   3.9276977005930853`*^9}, {3.9276977488352337`*^9, 
   3.9276978387459955`*^9}, {3.927698184500781*^9, 3.927698235781805*^9}, {
   3.9277022147167573`*^9, 3.9277022293337355`*^9}, {3.927702783477537*^9, 
   3.927702813155833*^9}, {3.927703472559493*^9, 3.9277034739266715`*^9}, {
   3.9277047769364357`*^9, 3.9277047769758673`*^9}, {3.9277048795702515`*^9, 
   3.9277049436465025`*^9}, {3.9277053571532497`*^9, 3.927705433599264*^9}, 
   3.9277055501705184`*^9, 3.927713929791606*^9, {3.927714781787706*^9, 
   3.927714834130328*^9}, {3.92778312240606*^9, 3.927783127556961*^9}, 
   3.9277879167084293`*^9, {3.9278679224158764`*^9, 3.9278679226127667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", "Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.927713291281966*^9, 3.9277162320000362`*^9},
 CellLabel->"Out[313]="]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dayFitResults", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\ga_2.mx\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927867133845441*^9, 3.927867146035495*^9}},
 CellLabel->"In[446]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dayFitResults", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.927867199745812*^9, 3.9278672011078444`*^9}},
 CellLabel->"In[447]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17", ",", "30", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.927867201375947*^9},
 CellLabel->"Out[447]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"g", ",", 
           RowBox[{"GetMeanAndSEM", "[", 
            RowBox[{"100", " ", "/", 
             RowBox[{
              RowBox[{
               RowBox[{"dayFitResults", "[", 
                RowBox[{"[", "fittedDay", "]"}], "]"}], "[", 
               RowBox[{"[", "g", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"g", ",", "1", ",", "30"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"fittedDay", ",", "1", ",", 
       RowBox[{"Length", "[", "dayFitResults", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GrayLevel", "[", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "dayFitResults", "]"}], "+", "2"}], ")"}]}],
         "+", 
        RowBox[{"#", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "dayFitResults", "]"}], "+", "2"}], 
          ")"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "dayFitResults", "]"}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9274643353648047`*^9, 3.92746434008138*^9}, {
  3.927464576621414*^9, 3.9274646897012777`*^9}, {3.9274647259647884`*^9, 
  3.92746474396358*^9}, {3.92747184542624*^9, 3.9274719233452573`*^9}, {
  3.9274725221155233`*^9, 3.9274725232803445`*^9}, {3.92769767290164*^9, 
  3.9276976832881775`*^9}, {3.927699914011529*^9, 3.927699925307643*^9}, {
  3.927702572248382*^9, 3.9277025903281455`*^9}, {3.9277033101942053`*^9, 
  3.9277033326662536`*^9}, {3.927713792141761*^9, 3.927713794601362*^9}, {
  3.927716145753454*^9, 3.927716171120576*^9}, {3.9277162394439325`*^9, 
  3.927716241991703*^9}, {3.927867207438738*^9, 3.9278672075453815`*^9}},
 CellLabel->"In[448]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[
      NCache[
       Rational[2, 19], 0.10526315789473684`]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7BPqDOcu0ljiABVwOOfxueLqs3lQPocD+9b1
syRY50D5Ag7S5axOXxmnQPkiDnOyi32nne+D8iUc/J4Jtt362AHlyzgsT5B5
3nmhGMpXcDB6PW9S1sUCKF/J4YrPW6mGchhfxcHplMBaUcUiKF/Nwdft50cH
/jIoX8Nh7dI1E1LPwszTcnBxNL3Qr1sO5es4KH3q8Pv1HaZfz4Hvk+/TX/dg
fAMHm1MmHzl+FUL5hg4hW1epCZXAzDdymPBO0XZSewWUb+zga+Tw3t4Opt/E
YVFVYYvRYZh7TR3crkllmzPAzDNzKEvjyjWKgLnP3OHXbtuMU6dgfAuH67vv
WD6fCXOvpQPrqXfXD22D2WflsFlYYG/06hIo39ph8eIsJidTmP02Dhd7Lh/f
2gizz9ZBW3FeuuALmLydg76bikxCUoEDAGXZfTk=
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[3, 19], 0.15789473684210525`]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7JOO9V2KTlnqABVwSDjYdGL9ugVQPodDU1T+
u+Mus6B8AYdu9yn/p26bDuWLOPSo7ZIL+DsNypdwqFu0I8xv1gQoX8bh9b68
SzHqHVC+gkOeau+W9zvqoXwlhxiJh9+MXtdA+SoOTr3b095X1UL5ag46hgEC
d9xgfA2HxIdJGSVsFVC+lsPGhJWpztZNUL6Ow68fJTa2PeVQvp7Dl7+uYj+C
YXwDh9DgLbU830uhfEOHWr+lX8T+FEP5Rg7dp540RG2EyRs7LFodMYPXEqbf
xGG1h3Ku2c8SKN/UQUvvzYKQX2VQvplD+5GO9OsGMPeaO3Ce3eE9SwNmnoXD
9fmXi/PXw9RbOrBpPJXigZtn5eBjxSix/DbMPdYOObLrztezwvTbODzJOxrx
Yw/M/7YOy19f+fWeHeY+O4cjKvtbOJwqHAAbj4MM
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[4, 19], 0.21052631578947367`]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7O9qyjGWVC11gAo4FL67KrAgawGUz+Fg52b5
1/jBZChfwGHJw/ldYrcaoXwRh18tM75khlRC+RIORbarLHp2w/gyDqekT+iV
e1ZD+QoO7KvZvm0uhMkrObzXWiV5c3o5lK/iEDLtyoHfX6ugfDUHG2bXVZtq
Yeo1HGYefXDurBmMr+XgvLvQMSgbxtdxSKuQE/PZWgPl6zn4ytWwHfWohfIN
HH4GTZj6Ugwmb+ggJ6r4yf5lGZRv5GBp8zng97tSKN/Y4fM6ca+A98VQvolD
EsPlL2c2FkH5pg6M+pnnOd1KoHwzhw8Ta3W/lFZA+eYO6yQaeBv+wNRbOFwX
fra9kQGm3tJBUeLCoacnYPJWDjv5OVolK2Dy1g5Ve1bPMTeH+c/G4b1a2cm7
52Dus3XYf59LVdIE5n47hxbuicWzjEsdAO/Gfb4=
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[5, 19], 0.2631578947368421]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7H2y5j63Fp/sABVwWP505rP1slOgfA6H4lU3
XJb19EH5Ag7Gl/+/2vi6HcoXceCdmbr6fkILlC/hkOK2SeWxcQOUL+Mgwn9s
gmxgI5Sv4DCx3dD54o5KKF/JwfmCdOYuwxooX8Uh7uIfvSeppVC+msOT+Smx
nh4VUL6GQ4its7+IQjmUr+Ug/YpZcZoyTF7HIaZm49uHQWVQvp5DuPTjenZj
mHkGDmwpiSJ1j6ugfEOH/Jy7etLSdVC+kYPou3nfG47AzDN2CFm/y3ufFky/
iYP2ma+Ht12G8U0dTBbP7VKZBPO/mcObi2ePFTyC2W/u0JOzkSlaC2aehUNC
Xy238NESKN/SodWvm1uwByZv5ZCY0SmWwgnjWzsUVEj9ObQHZp+Ng69X1b0H
f2Dm2zrsv/JsqW5TNZRv5xD5qMb+aUejAwDBmH1v
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[6, 19], 0.3157894736842105]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7KWu+x7e3r3SASrgsExygrYh/woon8Oh4VHO
W9VvS6B8AYdrWZvWmfMshfJFHMzYluzYdnYRlC/hEMr9+oxgxEIoX8YhT/p/
vPnXeVC+gsP8+zvU3LQXQPlKDjyJS0t//IXxVRz85hx7FFkE06/mIDzz285q
Ixhfw8G0IOJt8U8YX8vBIdI96CYXzH4dh8tH7u1fcwTG13MwYau9/fsXjG/g
UPPnyI68S4uhfEOHW0ENG3g0Yf4zcmB7ordXrBnGN3ZYZaV5P7IE5l8Th+AV
6u7hQjC+qYNmyNfQ6ytgfDOHuSIsnXzuy6B8cwdLBb6Psy1gfAuHSd7zxVqE
lkP5lg72p+bK3mWGhbeVwxuRo7m6E2B8a4ebzmsfGpXD+DYOrflyv6uewPi2
Dlp2F/epxsP4dg7+zsFzZ09e6QAA8rmA2w==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[7, 19], 0.3684210526315789]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7G0Ctj8/3bnIASrg4GoqYWzlPgfK53Bwin7S
2/BkMpQv4DD9EadOpVk/lC/ikLXcpy6bpQ/Kl3C4Mn/HhZbgLihfxqHtao76
zqoOKF/B4fXBr1l9WjB5JYeUuEdz+ZLboXwVh3/xpbOvy8LUqznwnOF5/0um
E8rXcMi6tGTzEV+Yei0Ht+fL+dT9YOp1HDZlqwetYIfx9RyOycSni5vC1Bs4
JP8yXHPZHMY3dJjgFaoy+WozlG/koLbz8FbN7U1QvrED1xMG3ZulML6Jg00y
Z4XJ8joo39Th/wY/CYbgWijfzEHlnU+ut1wNlG/ucIh1+zxlpmoo38Kh4Gf/
BtmqBijf0mH1vHr5qrZKKN/KQXlxt2a6PIxv7WA+9f+dy8kw82wcznzraAt/
ADPP1sE71UuY+StMvZ1D9La9Bln/Kh0ANB161g==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[8, 19], 0.42105263157894735`]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7HfdPLz2XudcB6iAA2O8wNe36nOgfA6Hm8FH
shY1L4TyBRwe9EUmTBGdDeWLOKwRMJ2+c8V0KF/CwU6sbI7z+6lQvozD26Kl
yVcLYXwFh8k6azzuVkyB8pUc5PWt+Q1XTIbyVRy+lLtFOkrA+GoOAXaH3i3b
B1Ov4bAx8lz9BV+YeVoOdzUtH5aUwdTrOPSxxNQu3wVTr+fwveEn99PdML6B
g83cqxkrNsL4hg6HNK/ePP4cxjdy8JTo6D/LC+MbO4TvviXtdxFmvomDft6c
qU8vwew3dUhrfhQa6gCTN3NYqCLFPKMQxjd3aF0RcHvZdBjfwkFfOcDvnBeM
b+kQXBeuGeYKs8/KQXnanqZ31jB5a4c7R7hvBBrB+DYOnxtW7jeNgPFtHcxV
/XSXfYPx7RwM34kdeHdjsgMAMNCC3g==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[9, 19], 0.47368421052631576`]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7CUf6b5KrlvkABVw+H5ky0OVnwuhfA6Hk6eu
v4g5MgfKF3Bw+bX+oJTMFChfxGHtoeB7in4ToXwJh8Q37mU1O3qhfBkHYQZR
1T7NLihfwcF09lI2G4c2KF/JQX4j8wtLWxhfxeHh5Yz2bwztUL6aA4+fXuMj
Xhhfw4HFwHkvq38HlK/l8GT+oc9aP2H6dRzOl3xzS2bqhPL1HHyT3jws/wHj
GzhwzZu1assEGN/Q4fmnTxnmFd1QvpHDWRkTIY8yGN/YYYmX/y0ZRph/TBwC
5i/Lnso3Aco3dehidozfvLYfyjdzKH5itlHbEiZv7uC/+/SyZ6kwvoXDyl1H
XgoywPiWDpv3izuIz4OFn5XD55+fpiybBuNbO8g4+60tXwbj2zjMdO7633x3
EpRv62Du+Wr5pB5YfNg5fNdIaqwrneoAANkVgTQ=
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[10, 19], 0.5263157894736842]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7A9elOXrq1vsABVwqC1XPF6wYh6Uz+EQ+Xky
y9aE6VC+gMPNuWrvZm+fCOWLOLDUfvurNW8ClC/hsGs929Z55/ugfBmH6d8v
uvYowfgKDjZ/Gs9IT+qF8pUcVuWUzLaWhfFVHO7LbOPwle+B8tUclLNd7uqF
dkP5Gg6eUxm/XvSEqddyqOuOKbVhgtmv43Asc91qVyOY+/QcoqNOc+mvg8kb
OHy3DywQuwvjGzp8ndB6JbwXxjdyYNj62u1NSz+Ub+xgsD/974dkmLyJg7FU
uuALMZi8qcPtwmUmkTwweTOHv7PevmtaA7Pf3EG2NUPR4cMkKN/CYfHGrM75
gjC+pcOVTLGpDX9gfCuHWfmLzjfbwfjWDvUXlsl2n4aZZ+NgLvH/1NfJMHlb
h90evT2XAmB8OwfOp/M82MomOgAAVZyBzA==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[11, 19], 0.5789473684210527]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7D+8DV4mMXGSA1TAQflvDp/G4y4on8Mhh0fx
ySmldihfwIH1RFtu1p5WKF/EIUYlf3eFXhOUL+Hg/EPToM+iDMqXcXjOrjjp
5/ZiKF/BQVr+sO3sa4VQvpJDVIfkb7dNKVC+igNvSS6D9oxEKF/N4fJN0adv
bsRD+RoOKU5rJFqmwvhaDh8q94d/boTxdRxm808pDX0bBeXrOZTyz2R+HhEL
5Rs4ZO3KYTgF12/ocMr9gn4eI0zeyCHM0LZ79yyYfmOHvSLT9y+zioTyTRwU
eCoX582MgfJNHThOH5n0iTEByjdzSD8oZxD2B6bf3KHp663rlpXRUL6Fw/yJ
SaKGd2H6LR20N7zRi5oL41s5WOV1ZYpow8yzdrijV6/QbA7j2zgYq7HfDJkN
49s6XGebV/t2Pyy87ByiD+3t4smNdgAANrl3Ng==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[12, 19], 0.631578947368421]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7H//jPvi8GSyA1TAQUzwDFe78SQon8Mha0u6
Dbt4N5Qv4GD4NWt72vlOKF/E4UqvwQOTr+1QvoSD9Lrd+dd2t0L5Mg5Trxy3
vG4J4ys4NHqbVvHZNEP5Sg73pITd5mQ2QvkqDjnctVMO9NZB+WoOB9tC6izf
V0P5Gg5qfrvvhxvXQPlaDp8nMxw/GQ+T13G48oezN35/GZSv5+AvzpL1ZSaM
b+Cg2eZ0d3lKJZRv6PB7hvyvuLXlUL6Rwxx/gylsd2B8YwexPbVHb9jC+CYO
4cWHO/ONq6B8UwfJA+Xpv3hh9ps5xFv/Ole0BGa+uUMCe9DL0oswvoWDunPl
mVYumHpLh777ormfu2F8K4fmvVvmvnsIs8/a4XD+PLuc5TD32zh41pgdc1OE
yds6CHJ3zBRpgMnbOTjfWdvxflmpAwAop36k
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[13, 19], 0.6842105263157895]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7Ntsojlj1k1xgAo4iBibc3ls6IPyORzOrym0
EyjqhvIFHEr4ND8setcI5Ys4VM5463NlYjOUL+EQElCS8PxAE5Qv4zCl62nS
HTmYegWHZJ4K08UnG6B8JQc2Fz1966B6KF/FofceS888Xpi8moOM9DfmmFl1
UL6GQ3n408iEaph6LQfFN0dPxYrVQvk6DmsNF95fyQaT13Mw+LZywplamLyB
w5TdtY2yl2HmGTocd1BvXbeqGso3ckiQLf07Xw+m3tjh35wp99RWwPgmDt0S
NeJ+FjD9pg7aruZegvtg+s0cvpnabE66WQXlmzvEd82V2bKvBsq3cKhd941v
8RuY/ywdpP6ouhrGwuStHM5EBlzTlIa539rB5uKZL7eaK6F8G4eZl7PsZz2v
gPJtHXxO7RaTUIDZb+cQ7WB48yFXgwMA58958g==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[14, 19], 0.7368421052631579]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7I/7uF5ovt7hABVweHifcTkLcxuUz+Gg0HTZ
WP9ZFZQv4OCcy3xL/kcRlC/iUF/wgX/DtgwoX8JhN8vt6wbRqVC+jMO7i84O
iVFpUL6CwxO1HZJHBGB8JQeVe2+jq/1SoHwVh6TrfH2L4fJqDoJ/tG5tVUuC
8jUcdnx0+vxHPQHK13IoUPpUmr0/HsrXcfiwlrvzysJYKF/PoS5kXuSFczC+
gQOf6Z8277poKN/QQdh0x7ll/lFQvpGD/gflhy+1IqF8Y4fuHxZduw/A5E0c
RNKk9p2cGgHlmzrEdW5/398bBuWbOXyNs67OOQTjmztkfa0VzqsLgfItHJIO
eswxYAiH8i0dWCavnrxibyiUb+VwT3a7zbHnMPXWDlW/Rb3XBcPU2zh8f9d8
MrADpt7WYZrS0ztn7sDU2zlsPn78mk5lqAMAWLqAWg==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[15, 19], 0.7894736842105263]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7CWX3dfMnTLBASrgIL3a0yLatx3K53AQNuTc
I13cCOULOHwvl3JYNKMWyhdxMGvj6KkPq4byJRy2pt9+kCVRDuXLOOzZZNo2
I7AYyldwWP6F8fdDmUIoX8mh+lKv4jEWGF/Fwff25A2d//OgfDWHsvMiy+et
gunXcDi3fdqhoAMw9VoOgjf1bwoLwPg6DruFflhoxBdA+XoOJze8mv/8RSaU
b+CgzGyy89QbmPmGDrVcDzX+f8mG8o0ckucdi7qVnAvlGzs8KMlU4UuEyZs4
rOlYrP75Eoxv6mAVv3JRwBIY38zBQS1LLVM4C8o3d2j43+8uPD0HyrdwuHUh
oWHKbph6S4eTgqz97vIw9VYO5a7JiuK3Ye61dljy+kRz8lSYvI3DWXP567ry
MPNsHe4HcrOYpsPca+dQGuVy+ei2PAcA+bt61g==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[16, 19], 0.8421052631578947]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7E0PMz+7XNDiABVwOMhldk91fSWUz+Hw7X71
MfEzGVC+gMPSjhmHDaYmQvkiDnIRJV8Os8dA+RIO8tM3TjFzgvFlHP7635ly
ziUWyldwMN3Ad/VtZhyUr+RQvfTjX9YvUVC+ikP6kmzPFc+joXw1h+naMvW7
VsHM03CYeHdjiAZXApSv5bD5lEZGBmM4lK/jsNZf/y17agSUr+ewOdbr3qV5
YVC+gcOEW94l5vGhUL6hA6dHRObpSTC+kYOxuG/x/gkw9cYO7mUsnP8ewsw3
cTj9X3PPptZgKN/Uof0ty9PD4UFQvpnDs7D3Bpy8IVC+uUPnn91tz/pgfAuH
I6qXnK2bYPZZOky4YLs3rRAmb+UQdjOmS+QEzHxrh2oHub7V1jB5G4c7laJv
UvbA5G0dgiT5DZ/0w9xr57D88imO7AuhDgA9rnwr
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[17, 19], 0.8947368421052632]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7P8rBmuoXZjiABVw4PH9fW+702Qon8NhTtQz
hSnG3VC+gEOS5Apm2UldUL6Iw4qp1VOv+DZA+RIOlX7Fq67+rIDyZRyEo6Y9
+6pSCuUrOFj92cJi2l8M5Ss5BAh+XavDWATlqzjo507ts72TB+WrOWyL3Ne2
pCMHytdwkH5dVFdjngvlazmkpPzeUZ8N4+s4SM9Zu3bWz3woX8/h8jzdsGXT
YeYZOKQWnvZZ/Rim3tDhLd+XyxnbC6B8IwedsKJC83sw+4wdYjfKMPE6wNSb
OBxVtwy5fTITyjd18Kk6U7gnKQvKN3NI42j/IiEEs9/coW2hn3Hm/2wo38JB
5fVVl4uTYeotHUyzDcR53GDus3IIWlmySvRjOpRv7SA3calMwrRUKN/G4VL/
rcvb5qVA+bYOz6ct4ckQTIPy7Ry4LSfKvNLIcgAArZ96fQ==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[18, 19], 0.9473684210526315]], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxTTMoPSmViYGCQA2IQDQEf7LUzTp62WjzDASrgcG9SScXulglQPofDreT8
ksXveqB8AYdel+t3ROzaoXwRB+FZr3gn2DRD+RIOa6XPCqhvrIHyZRy69KUn
VXwth/IVHBa4KS1/mQvjKznMZ52SsWdVFZSv4tAuoT6nuxamX83hjXy3+48V
1VC+hkPWoy69uZdg6rUcVjN67eqzrIDydRw+nZXOOn6lEsrXc/i9QMBJ+AFM
v4GD3DyPGVeX1EL5hg5hLzk2/HoG4xs5hC5bs+SOWD2Ub+zwXWnJwg2bYfIm
DoUf3xV4RsDMN3XYWnprbfrhMijfzKFGf7LhTm2Ye8wdeM0v181/VgrlWziU
9HMfZP9TDOVbOmzu6NKJY4PJWzl8Sj53eb03TN7aYeNJroh97wugfBuHhZUv
pGOPF0H5tg6CPdsNT3fCwtPOwYzvZJ9IYZkDAG6OgfU=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 34.596915990522135`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5, 30.5}, {34.596915990522135`, 3541.2185279354876`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{{{{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[2, 19], 0.10526315789473684`]], 
       PolygonBox[{{1, 2396.6037185103437`}, {2, 1810.6186584613008`}, {
         3, 1634.24613422409}, {4, 1182.3879105561814`}, {
         5, 948.8953932896119}, {6, 729.1523034632911}, {
         7, 294.43714000542866`}, {8, 246.23771107217524`}, {
         9, 236.9300165677205}, {10, 268.7744804932688}, {
         11, 320.41018030966353`}, {12, 292.4304110421398}, {
         13, 339.0375760534965}, {14, 277.7636896330743}, {
         15, 277.2574913248448}, {16, 251.17202895423674`}, {
         17, 321.5716902543029}, {18, 346.2458687935032}, {
         19, 273.7829152181515}, {20, 244.95703815206025`}, {
         21, 250.68484112480056`}, {22, 279.7555961696207}, {
         23, 291.8609897831403}, {24, 349.41660890960264`}, {
         25, 363.77230931556426`}, {26, 303.5391847161324}, {
         27, 267.3803227345886}, {28, 262.67978378066334`}, {
         29, 278.94916508394056`}, {30, 245.17473354906343`}, {
         30, 279.1221951269618}, {29, 326.0593333323757}, {
         28, 297.5339762641354}, {27, 315.27690843713265`}, {
         26, 357.8806094862918}, {25, 427.0728291060095}, {
         24, 405.821294422614}, {23, 341.48784185357374`}, {
         22, 339.2690258713681}, {21, 293.34221863020446`}, {
         20, 291.442628525944}, {19, 309.99830283522283`}, {
         18, 438.70053687007567`}, {17, 396.9371725593212}, {
         16, 324.08233736009976`}, {15, 326.61501635123153`}, {
         14, 329.233530472945}, {13, 402.6576452905494}, {
         12, 341.244181308635}, {11, 385.49653121859757`}, {
         10, 311.36110350939043`}, {9, 290.00753479136756`}, {
         8, 291.939326397262}, {7, 339.63019533478473`}, {
         6, 867.3110985978677}, {5, 1023.0013865369748`}, {
         4, 1378.591108771735}, {3, 1952.3019209391487`}, {
         2, 2144.7982799414826`}, {1, 2764.0314925695907`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[3, 19], 0.15789473684210525`]], 
       PolygonBox[{{1, 2611.8505296331555`}, {2, 1980.7661846490766`}, {
         3, 1532.650000011928}, {4, 1355.9154175129338`}, {
         5, 1302.4650963887073`}, {6, 908.0672355679267}, {
         7, 638.9109543615791}, {8, 487.2285126487883}, {
         9, 439.6958459144139}, {10, 444.26708308471217`}, {
         11, 428.7969980944897}, {12, 354.66747472963095`}, {
         13, 526.9075184390309}, {14, 341.2444361367847}, {
         15, 338.00569190466246`}, {16, 317.4145391736724}, {
         17, 293.5750253337365}, {18, 298.4931472586822}, {
         19, 321.6596837414734}, {20, 285.09622720587754`}, {
         21, 346.7661711785494}, {22, 407.7786444480649}, {
         23, 316.654729520611}, {24, 331.69869150483555`}, {
         25, 313.04142390043677`}, {26, 301.3942770163067}, {
         27, 308.9507953319492}, {28, 363.3682051870077}, {
         29, 336.41892623450747`}, {30, 358.4766423733348}, {
         30, 417.77751707081563`}, {29, 400.5732514077822}, {
         28, 428.25305788066373`}, {27, 363.7366125052251}, {
         26, 334.0623117379577}, {25, 358.0894867729755}, {
         24, 394.2307286357317}, {23, 360.4206102199106}, {
         22, 526.326533496593}, {21, 388.5251513819124}, {
         20, 386.0553481455087}, {19, 421.4719544924151}, {
         18, 395.67604389906995`}, {17, 345.93618347846}, {
         16, 385.4665599634365}, {15, 408.49044432848854`}, {
         14, 412.2854643318968}, {13, 639.9082990568173}, {
         12, 414.13936499634315`}, {11, 508.06045489556595`}, {
         10, 499.09981205116577`}, {9, 485.70403903293936`}, {
         8, 527.8885309443368}, {7, 906.9296921250873}, {
         6, 1217.085769812547}, {5, 1640.191388040848}, {
         4, 1679.377548026744}, {3, 1829.7404909775648`}, {
         2, 2289.9204686523635`}, {1, 2864.508151972597}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[4, 19], 0.21052631578947367`]], 
       PolygonBox[{{1, 2530.391798718739}, {2, 1905.5244205224908`}, {
         3, 1150.0220011298914`}, {4, 513.9620172401576}, {
         5, 369.9149584704179}, {6, 391.4698037538644}, {
         7, 412.2911957239432}, {8, 380.2134676509942}, {
         9, 355.35191964159577`}, {10, 408.35420880916604`}, {
         11, 387.3350205151586}, {12, 377.06625368053403`}, {
         13, 380.7590876863394}, {14, 431.4116682564265}, {
         15, 436.6270601196789}, {16, 418.5398156324878}, {
         17, 348.3168930494464}, {18, 323.98631593524067`}, {
         19, 300.94451302009435`}, {20, 283.10009413889406`}, {
         21, 303.9586091584079}, {22, 361.7088391424452}, {
         23, 278.3829666034244}, {24, 293.59876027447314`}, {
         25, 284.2121469301756}, {26, 306.5684156739304}, {
         27, 370.6208170441125}, {28, 312.37376428013636`}, {
         29, 315.1005529655406}, {30, 313.43171041108565`}, {
         30, 365.01870532717646`}, {29, 395.4117247186265}, {
         28, 385.48453013349047`}, {27, 436.28133725055886`}, {
         26, 348.44404509475}, {25, 316.90004105213217`}, {
         24, 346.4645787657876}, {23, 329.1795591465004}, {
         22, 421.0353882488132}, {21, 344.79618097768804`}, {
         20, 315.124982201256}, {19, 336.9696908001595}, {
         18, 377.88639705864375`}, {17, 384.8393304941565}, {
         16, 480.32423916900694`}, {15, 500.46914365541676`}, {
         14, 487.2504833072649}, {13, 432.6560762011874}, {
         12, 429.78423856421523`}, {11, 428.3772183107932}, {
         10, 454.3937175794197}, {9, 399.6290863412183}, {
         8, 433.99940395020053`}, {7, 460.8919989737688}, {
         6, 431.973663701046}, {5, 440.6367775902569}, {
         4, 628.5599959454837}, {3, 1394.0795401888347`}, {
         2, 2297.10083636944}, {1, 2968.0613433379363`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[5, 19], 0.2631578947368421]], 
       PolygonBox[{{1, 1109.0590347553662`}, {2, 1181.227491125825}, {
         3, 894.194408419627}, {4, 726.985159327152}, {
         5, 608.6859188052938}, {6, 467.7109701459904}, {
         7, 493.5416641613603}, {8, 368.1225832666801}, {
         9, 407.6694696356165}, {10, 327.4295990111008}, {
         11, 345.43166170517253`}, {12, 339.0460699366059}, {
         13, 356.6519719207277}, {14, 339.2616648701939}, {
         15, 322.22944381240984`}, {16, 371.6723588598064}, {
         17, 404.78757798611207`}, {18, 346.996917768508}, {
         19, 323.00128368395127`}, {20, 333.9738325907851}, {
         21, 562.52013268796}, {22, 348.5545742879857}, {
         23, 329.4453613948772}, {24, 317.65244082559724`}, {
         25, 326.02998873086887`}, {26, 349.04899451056207`}, {
         27, 333.2760519130814}, {28, 345.5948786045555}, {
         29, 362.156420673039}, {30, 465.2803812697471}, {
         30, 656.9434937295998}, {29, 518.1158684155607}, {
         28, 390.01492073797425`}, {27, 362.31915549849435`}, {
         26, 420.1248765998752}, {25, 459.478334069132}, {
         24, 346.98185843445395`}, {23, 443.849077335482}, {
         22, 383.75049240052215`}, {21, 754.0155523392447}, {
         20, 364.4904083610326}, {19, 354.3416341956069}, {
         18, 445.5660545307251}, {17, 558.6006949954092}, {
         16, 488.7642034502836}, {15, 356.149218081694}, {
         14, 375.0986517750542}, {13, 415.7963332384423}, {
         12, 400.9638468699099}, {11, 431.6041609592118}, {
         10, 357.30681873557603`}, {9, 494.5465511557168}, {
         8, 454.9795956759522}, {7, 614.7372084188535}, {
         6, 569.260849527115}, {5, 695.5325084593646}, {
         4, 803.9385886865977}, {3, 1060.9679635833593`}, {
         2, 1393.6160650964075`}, {1, 1334.5579667011098`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[6, 19], 0.3157894736842105]], 
       PolygonBox[{{1, 3037.27371138541}, {2, 2891.6128979151194`}, {
         3, 2523.537859379243}, {4, 2525.517163245915}, {
         5, 2272.4070239089156`}, {6, 2095.4964293236285`}, {
         7, 1954.806716404543}, {8, 2041.5501193007785`}, {
         9, 2140.3055616885676`}, {10, 2199.612911905681}, {
         11, 2175.1258138594694`}, {12, 2269.1249413557075`}, {
         13, 2290.6557556150956`}, {14, 2379.77327810289}, {
         15, 2400.0110382527787`}, {16, 2513.337667483276}, {
         17, 2558.890428164293}, {18, 2596.3737945035923`}, {
         19, 2717.7465055092757`}, {20, 2682.446065232528}, {
         21, 2750.6270448494533`}, {22, 2816.6691691270903`}, {
         23, 2818.267923721657}, {24, 2927.788722474878}, {
         25, 3038.3700524358032`}, {26, 3101.394895818445}, {
         27, 3098.418451091249}, {28, 3137.5961548450823`}, {
         29, 3097.0235183761597`}, {30, 3239.2668309835453`}, {
         30, 3308.3410383591945`}, {29, 3142.1239245156066`}, {
         28, 3234.884239425077}, {27, 3164.7803049636905`}, {
         26, 3186.782560386549}, {25, 3109.493680724098}, {
         24, 2978.727247713215}, {23, 2870.3412232384744`}, {
         22, 2886.3876090702292`}, {21, 2794.21411052035}, {
         20, 2711.8948642552677`}, {19, 2774.6045559081344`}, {
         18, 2654.715029702445}, {17, 2602.159140031267}, {
         16, 2561.094839375208}, {15, 2458.972779624051}, {
         14, 2424.901524603879}, {13, 2328.1931561083175`}, {
         12, 2332.3278989986343`}, {11, 2227.35749246489}, {
         10, 2266.7382046687594`}, {9, 2209.6649834471145`}, {
         8, 2097.7239090525263`}, {7, 2007.8014378657228`}, {
         6, 2344.57310372907}, {5, 2541.30673098488}, {
         4, 2862.7003461678833`}, {3, 2842.6102946938026`}, {
         2, 3267.579173051851}, {1, 3502.444112468097}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[7, 19], 0.3684210526315789]], 
       PolygonBox[{{1, 2199.72800328736}, {2, 1678.9781019566017`}, {
         3, 1203.1713542451278`}, {4, 965.1911477881597}, {
         5, 923.9117087103672}, {6, 813.7921574373293}, {
         7, 761.7105493205136}, {8, 810.406820007961}, {
         9, 729.0850810797683}, {10, 751.8051814517803}, {
         11, 783.5061493843009}, {12, 722.4265800643476}, {
         13, 760.3103784306006}, {14, 744.5293131583587}, {
         15, 715.850705708978}, {16, 708.2746070119329}, {
         17, 612.364137451942}, {18, 571.9330993903309}, {
         19, 551.3987897138295}, {20, 468.3462473864872}, {
         21, 441.22515991997267`}, {22, 426.1809496388903}, {
         23, 405.1566368353317}, {24, 493.36766706877876`}, {
         25, 367.5292935068943}, {26, 377.5058474822125}, {
         27, 431.1598916961497}, {28, 423.141044053853}, {
         29, 385.9781992872106}, {30, 396.00193276425995`}, {
         30, 435.7999180144414}, {29, 444.6483023504544}, {
         28, 468.90169302007547`}, {27, 477.3185571685403}, {
         26, 426.41952472821004`}, {25, 449.2803368842549}, {
         24, 561.1613267758252}, {23, 459.1107557331261}, {
         22, 473.6058799290356}, {21, 497.14988644269107`}, {
         20, 512.554372190292}, {19, 630.0632960233211}, {
         18, 625.8576330488777}, {17, 657.0295558355983}, {
         16, 777.6821045482282}, {15, 769.4221495596255}, {
         14, 793.385062734231}, {13, 795.2277634146169}, {
         12, 769.0155114725011}, {11, 823.7389031440366}, {
         10, 791.6553725128192}, {9, 767.6791930758591}, {
         8, 864.2322598870212}, {7, 804.9702651369339}, {
         6, 871.0875450208189}, {5, 997.1932652712213}, {
         4, 1032.4271842683197`}, {3, 1343.0797283050545`}, {
         2, 1940.6355691139765`}, {1, 2546.0685011692444`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[8, 19], 0.42105263157894735`]], 
       PolygonBox[{{1, 1738.253293038508}, {2, 1696.5993625166063`}, {
         3, 2140.849477986848}, {4, 1656.5395969963408`}, {
         5, 1477.0388583380732`}, {6, 1368.2866819157716`}, {
         7, 1340.3233074817872`}, {8, 1277.9597119551165`}, {
         9, 1230.5309748065386`}, {10, 1198.9975038300627`}, {
         11, 1297.7165055005423`}, {12, 1310.9187167192}, {
         13, 1223.0007535960528`}, {14, 1301.9578193816135`}, {
         15, 1302.4987223995865`}, {16, 1289.2751728578983`}, {
         17, 1313.215873648994}, {18, 1252.7404761177745`}, {
         19, 1239.1632659506515`}, {20, 1346.1444104081972`}, {
         21, 1196.260766470654}, {22, 1216.6334947107823`}, {
         23, 1218.7329578195474`}, {24, 1205.6659278533104`}, {
         25, 1267.5257106709705`}, {26, 1201.446025058261}, {
         27, 1197.488109349635}, {28, 1220.685410373561}, {
         29, 1251.489587972306}, {30, 1248.7686557133784`}, {
         30, 1291.6976535637518`}, {29, 1303.8349764293614`}, {
         28, 1255.4195675173987`}, {27, 1259.6717420753268`}, {
         26, 1260.5198161333428`}, {25, 1327.1425734917134`}, {
         24, 1263.7370133777447`}, {23, 1289.092934171659}, {
         22, 1272.1634039565258`}, {21, 1267.9059044035027`}, {
         20, 1447.3039966585773`}, {19, 1297.4892903117163`}, {
         18, 1314.1610095665865`}, {17, 1362.6744601573753`}, {
         16, 1359.5537519653321`}, {15, 1351.448634584545}, {
         14, 1351.3693089100468`}, {13, 1268.2275272213226`}, {
         12, 1415.9885083636254`}, {11, 1357.6095348342608`}, {
         10, 1245.1301304111776`}, {9, 1285.564844523202}, {
         8, 1342.4724831174783`}, {7, 1404.5934683840337`}, {
         6, 1439.3453711640386`}, {5, 1551.323623406965}, {
         4, 1810.2502005945737`}, {3, 2342.7849636468254`}, {
         2, 1907.365397797951}, {1, 2042.6816264335455`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[9, 19], 0.47368421052631576`]], 
       PolygonBox[{{1, 2224.701037855006}, {2, 2143.154155213361}, {
         3, 1683.564656938411}, {4, 1196.8719335119588`}, {
         5, 1073.7262331996744`}, {6, 915.1333273584531}, {
         7, 803.9711233149784}, {8, 683.8445211924042}, {
         9, 685.124625641095}, {10, 709.8471040694363}, {
         11, 706.6075726021502}, {12, 748.7517066744509}, {
         13, 712.7812792192819}, {14, 776.1876251167905}, {
         15, 805.8621417387387}, {16, 795.6500758555302}, {
         17, 848.2727570271211}, {18, 845.1128067407305}, {
         19, 895.6473571624978}, {20, 994.1549636058991}, {
         21, 980.6538231984338}, {22, 1007.247334678073}, {
         23, 1019.7942479786732`}, {24, 992.4978252666979}, {
         25, 1096.109987974304}, {26, 1099.1625068984945`}, {
         27, 1107.3974055362403`}, {28, 1177.7548203785914`}, {
         29, 1291.0703980650937`}, {30, 1336.715485453014}, {
         30, 1410.031595414277}, {29, 1339.2160392760597`}, {
         28, 1237.002988612604}, {27, 1151.8363385564073`}, {
         26, 1152.162848243156}, {25, 1158.9354228897162`}, {
         24, 1055.5371613702132`}, {23, 1079.156243322496}, {
         22, 1069.3380017356794`}, {21, 1046.7713448540878`}, {
         20, 1061.1368733300478`}, {19, 960.6308193730425}, {
         18, 912.457575200357}, {17, 909.7813542591143}, {
         16, 840.5263561969829}, {15, 856.2549310280419}, {
         14, 824.4093252720029}, {13, 757.5106662772857}, {
         12, 807.003898117005}, {11, 768.8636233087934}, {
         10, 762.3936468517483}, {9, 738.1819234861839}, {
         8, 740.2140979135053}, {7, 870.4176900167491}, {
         6, 986.9882175975657}, {5, 1141.3399161471675`}, {
         4, 1377.180325455727}, {3, 1998.616807012227}, {
         2, 2457.9899137888738`}, {1, 2509.6892541864863`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[10, 19], 0.5263157894736842]], 
       PolygonBox[{{1, 2300.0492289014746`}, {2, 1858.4108107101001`}, {
         3, 1413.5764961563345`}, {4, 1085.0662280398305`}, {
         5, 1010.2073159338555`}, {6, 941.7075149139787}, {
         7, 920.6266340821152}, {8, 909.3558142069395}, {
         9, 906.574603905112}, {10, 877.9707471469136}, {
         11, 847.1083722423333}, {12, 909.6907205850064}, {
         13, 992.5089702646748}, {14, 1056.7293167561331`}, {
         15, 1029.9609942136376`}, {16, 1043.663818040967}, {
         17, 1028.8082685009147`}, {18, 981.665345719304}, {
         19, 1021.2705585273562`}, {20, 966.7971807634307}, {
         21, 1006.5181201139062`}, {22, 1087.5205160362711`}, {
         23, 1172.0826342238931`}, {24, 1108.5565224307372`}, {
         25, 1173.2727330741357`}, {26, 1136.1545607576077`}, {
         27, 1107.8318463285757`}, {28, 1158.5395045163143`}, {
         29, 1143.6093631248102`}, {30, 1085.9818138498752`}, {
         30, 1149.0304589519612`}, {29, 1200.8018654510186`}, {
         28, 1219.4405598487922`}, {27, 1169.9398642703234`}, {
         26, 1199.1028827430287`}, {25, 1256.9784043736206`}, {
         24, 1204.2550728510394`}, {23, 1252.0426206610643`}, {
         22, 1174.7352130908207`}, {21, 1047.6561097000495`}, {
         20, 1022.9294481227674`}, {19, 1076.7001248013564`}, {
         18, 1035.565393571813}, {17, 1089.86327478631}, {
         16, 1114.880007622655}, {15, 1105.130885015698}, {
         14, 1144.4067586932495`}, {13, 1056.6091126325382`}, {
         12, 964.7643156019144}, {11, 902.1873937002775}, {
         10, 921.8544813968564}, {9, 956.733606295324}, {
         8, 983.1713331157345}, {7, 1008.0103510107505`}, {
         6, 1030.197472520862}, {5, 1116.8766528988858`}, {
         4, 1182.738323281932}, {3, 1578.7770543955144`}, {
         2, 2065.8094585367985`}, {1, 2690.505673998944}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[11, 19], 0.5789473684210527]], 
       PolygonBox[{{1, 1075.0597297430913`}, {2, 763.0064967917866}, {
         3, 647.2620724734417}, {4, 620.8096662777814}, {
         5, 528.6206780662321}, {6, 332.4241110760141}, {
         7, 287.5869016036912}, {8, 254.35435755900107`}, {
         9, 151.6806658625117}, {10, 131.96095105916007`}, {
         11, 116.36540164171655`}, {12, 116.44271080942585`}, {
         13, 116.54451146308513`}, {14, 99.55743450004175}, {
         15, 108.4590105755381}, {16, 117.46941075839158`}, {
         17, 106.87844894376532`}, {18, 99.02070181343994}, {
         19, 95.77476138234663}, {20, 105.58340010103208`}, {
         21, 117.2765157726004}, {22, 98.42237623234979}, {
         23, 103.47556768797003`}, {24, 105.78045847757907`}, {
         25, 105.99854795249746`}, {26, 120.61691405722198`}, {
         27, 122.45305447573705`}, {28, 124.70139063495832`}, {
         29, 131.56561516612786`}, {30, 101.58051344204927`}, {
         30, 117.82726755868262`}, {29, 152.4298659599821}, {
         28, 141.00682415150123`}, {27, 137.01645893750984`}, {
         26, 138.07556940677532`}, {25, 122.91871075100286`}, {
         24, 125.1317831649125}, {23, 116.31274324767443`}, {
         22, 117.46314475999534`}, {21, 138.84520622821117`}, {
         20, 123.21135558326799`}, {19, 106.0580936468359}, {
         18, 113.81469172934287`}, {17, 125.16625158990864`}, {
         16, 135.21149764725544`}, {15, 126.31918938225805`}, {
         14, 115.85924754225329`}, {13, 135.51644346433758`}, {
         12, 136.22966423677397`}, {11, 138.4135161884431}, {
         10, 149.54954739546034`}, {9, 179.46166344860816`}, {
         8, 316.47144383678403`}, {7, 343.4099591465583}, {
         6, 378.6453167269194}, {5, 634.9972244383018}, {
         4, 770.2942671576188}, {3, 833.4360633949963}, {
         2, 957.782620738035}, {1, 1301.4884142376932`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[12, 19], 0.631578947368421]], 
       PolygonBox[{{1, 1186.7473097380364`}, {2, 1083.7945592408205`}, {
         3, 825.1434731389364}, {4, 782.1108923223702}, {
         5, 722.1249096287395}, {6, 679.2841721299051}, {
         7, 657.7399316006226}, {8, 596.4460665284057}, {
         9, 537.9610523904925}, {10, 470.6226355335071}, {
         11, 433.8731653612157}, {12, 433.7114018419039}, {
         13, 416.77736296300577`}, {14, 348.94600235439884`}, {
         15, 348.19267146620575`}, {16, 387.9021005716376}, {
         17, 365.2071332363565}, {18, 366.7155092349293}, {
         19, 358.4236984276447}, {20, 402.37988138461236`}, {
         21, 420.9278530728279}, {22, 394.569754687339}, {
         23, 399.95791994291244`}, {24, 414.19117731917316`}, {
         25, 420.54136932600943`}, {26, 365.5711431553576}, {
         27, 351.14281721216844`}, {28, 354.55811768724254`}, {
         29, 348.54719800473515`}, {30, 333.71308519312197`}, {
         30, 359.153874720403}, {29, 371.4628604582067}, {
         28, 385.6014400612353}, {27, 373.7850365988912}, {
         26, 398.67036858249776`}, {25, 460.95249108171004`}, {
         24, 451.1241540896726}, {23, 426.22465398673125`}, {
         22, 425.9863041533524}, {21, 444.8194145887912}, {
         20, 436.0495805971204}, {19, 385.30714700683257`}, {
         18, 396.78770310011316`}, {17, 392.464242273722}, {
         16, 424.6798644168031}, {15, 375.05167136823}, {
         14, 378.9756533749219}, {13, 459.19616113492805`}, {
         12, 468.7065053611242}, {11, 460.0299076257327}, {
         10, 507.09639768574556`}, {9, 576.4415586730021}, {
         8, 634.5680715338171}, {7, 700.7202497523265}, {
         6, 711.6752384731428}, {5, 811.1767268369592}, {
         4, 869.7394167360245}, {3, 908.6135932257206}, {
         2, 1245.9691950097877`}, {1, 1359.379554664749}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[13, 19], 0.6842105263157895]], 
       PolygonBox[{{1, 1229.6766135010023`}, {2, 899.1380503505032}, {
         3, 782.4552698959511}, {4, 534.7058591949508}, {
         5, 571.7334580923534}, {6, 546.4938116554056}, {
         7, 506.21292130645986`}, {8, 502.01741128773483`}, {
         9, 473.08096055472305`}, {10, 494.7277952126311}, {
         11, 461.445654186655}, {12, 478.1230232993012}, {
         13, 447.6276155423248}, {14, 475.9915480617837}, {
         15, 438.9645725477375}, {16, 451.78165713268}, {
         17, 420.48210724727534`}, {18, 428.0465496899589}, {
         19, 429.5695532681289}, {20, 445.8203475105672}, {
         21, 418.9248722243704}, {22, 414.0392295275647}, {
         23, 423.61583529464156`}, {24, 487.41267008771115`}, {
         25, 407.57544486442606`}, {26, 438.3664896761974}, {
         27, 394.51836564189915`}, {28, 380.83190438086217`}, {
         29, 396.38540647818604`}, {30, 465.07598568721403`}, {
         30, 561.6445693984955}, {29, 471.62635563263007`}, {
         28, 416.11841189052154`}, {27, 421.9635465896752}, {
         26, 557.0289386263199}, {25, 500.0736128068882}, {
         24, 595.7465666813928}, {23, 496.22210990988845`}, {
         22, 445.13396389894586`}, {21, 468.8335701124734}, {
         20, 521.2177832205376}, {19, 519.4494259580225}, {
         18, 505.78157046056805`}, {17, 464.85310766005074`}, {
         16, 534.6077500083254}, {15, 504.76031275177877`}, {
         14, 516.8413980092006}, {13, 483.16818137298566`}, {
         12, 529.2990231634557}, {11, 517.8492752440227}, {
         10, 532.6770357925449}, {9, 529.1979380291192}, {
         8, 572.3919723675806}, {7, 589.5022997043044}, {
         6, 653.7321422262423}, {5, 680.723866615089}, {
         4, 612.9532600691819}, {3, 974.0605933091693}, {
         2, 1064.9323011190065`}, {1, 1417.5031453826057`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[14, 19], 0.7368421052631579]], 
       PolygonBox[{{1, 687.9473509065558}, {2, 601.6515761696453}, {
         3, 380.41589513259464`}, {4, 261.0525477958838}, {
         5, 189.36573470947891`}, {6, 161.5704258781634}, {
         7, 168.70145982493693`}, {8, 163.0347521394951}, {
         9, 154.56765295817684`}, {10, 154.72966951626387`}, {
         11, 137.26586400919015`}, {12, 124.92613069724756`}, {
         13, 122.23646914837214`}, {14, 113.82427720112534`}, {
         15, 114.10722130396374`}, {16, 104.11102707673744`}, {
         17, 99.59996200621764}, {18, 96.20363395458648}, {
         19, 100.96827999292078`}, {20, 92.63646667358299}, {
         21, 86.1333020021535}, {22, 86.85025442297443}, {
         23, 78.7107682669121}, {24, 87.88842842906462}, {
         25, 82.78269581191527}, {26, 79.7737539740346}, {
         27, 89.43319706030188}, {28, 82.05298396803626}, {
         29, 80.32193284213984}, {30, 80.9791556838327}, {
         30, 90.80756782518854}, {29, 86.57807483258235}, {
         28, 90.20699981729025}, {27, 97.18182897780527}, {
         26, 87.46919489915126}, {25, 91.14413241522898}, {
         24, 96.11750546804956}, {23, 85.24016876198517}, {
         22, 95.225487932333}, {21, 94.29051835847835}, {
         20, 104.04441010746106`}, {19, 113.05461306516106`}, {
         18, 105.13741578352676`}, {17, 110.88915023722483`}, {
         16, 115.83569256265186`}, {15, 124.35571205445603`}, {
         14, 123.23291705356999`}, {13, 131.74539861602355`}, {
         12, 133.57312473249794`}, {11, 153.15353350506606`}, {
         10, 198.31026088265236`}, {9, 170.33746400918733`}, {
         8, 190.01312395088215`}, {7, 188.94728310349365`}, {
         6, 180.12899872772203`}, {5, 206.05224924134254`}, {
         4, 345.9630047503998}, {3, 480.3571529367953}, {
         2, 807.1029671627307}, {1, 901.9313732706246}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[15, 19], 0.7894736842105263]], 
       PolygonBox[{{1, 977.3453121189613}, {2, 676.7349564354378}, {
         3, 523.4086125813623}, {4, 444.80378159815723`}, {
         5, 403.30296264994087`}, {6, 349.9301497254238}, {
         7, 288.3186067995574}, {8, 261.1339937342584}, {
         9, 256.8586233420395}, {10, 236.82403874131896`}, {
         11, 293.77715840139933`}, {12, 269.3728981918508}, {
         13, 259.13936536393953`}, {14, 246.36640554296696`}, {
         15, 193.87014824940627`}, {16, 232.4013329065802}, {
         17, 207.33391219786657`}, {18, 220.33229049049882`}, {
         19, 210.62577522729842`}, {20, 211.56549300821632`}, {
         21, 207.9058566522698}, {22, 194.3341511478152}, {
         23, 216.2313925342786}, {24, 212.2940916660297}, {
         25, 197.18898489583847`}, {26, 194.13424462281938`}, {
         27, 199.21352650555258`}, {28, 211.24726516792464`}, {
         29, 220.8622863153618}, {30, 234.65169929513414`}, {
         30, 256.77159788790766`}, {29, 249.58815699463003`}, {
         28, 238.7014263164744}, {27, 226.12326909614495`}, {
         26, 219.55890245262265`}, {25, 220.76598548284903`}, {
         24, 231.42966357744987`}, {23, 241.2108143849074}, {
         22, 222.87902025287121`}, {21, 234.36382972392926`}, {
         20, 233.61887096616817`}, {19, 227.4401774665832}, {
         18, 249.90851873635197`}, {17, 239.97838264682403`}, {
         16, 262.3981601231791}, {15, 220.68640074347553`}, {
         14, 277.5282343668456}, {13, 286.87032623095854`}, {
         12, 298.66751201922045`}, {11, 335.55030871837187`}, {
         10, 259.1470769217946}, {9, 287.73812034462304`}, {
         8, 286.4763483060693}, {7, 329.880867935242}, {
         6, 389.12203696786537`}, {5, 471.5093161611284}, {
         4, 502.2754422318618}, {3, 593.3684719061906}, {
         2, 814.6041254728535}, {1, 1144.8678979764686`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[16, 19], 0.8421052631578947]], 
       PolygonBox[{{1, 596.8069673587004}, {2, 355.84054156050775`}, {
         3, 182.5871996829054}, {4, 131.47983488406166`}, {
         5, 107.64575706816122`}, {6, 106.94696149599638`}, {
         7, 111.08045887502544`}, {8, 113.43764081174797`}, {
         9, 103.17541986753363`}, {10, 105.94893908633719`}, {
         11, 108.6268072272991}, {12, 118.77701587212519`}, {
         13, 88.55948422952065}, {14, 93.32589184448118}, {
         15, 84.72547487051145}, {16, 80.18432143283465}, {
         17, 81.15181671229935}, {18, 85.52861635180491}, {
         19, 87.25155244010521}, {20, 72.15073595744532}, {
         21, 69.19383198104427}, {22, 75.44884973916656}, {
         23, 75.48696672876581}, {24, 80.37978191369602}, {
         25, 76.07922732356533}, {26, 74.77056292403891}, {
         27, 76.68774538976224}, {28, 74.71594181186319}, {
         29, 84.06054264995494}, {30, 80.62714826399439}, {
         30, 93.88591745193467}, {29, 96.43606277443972}, {
         28, 83.17137779295834}, {27, 85.17694640090023}, {
         26, 83.4819444586836}, {25, 87.46456408567141}, {
         24, 91.68995257426134}, {23, 88.97867368944047}, {
         22, 84.95852222763399}, {21, 77.54883093478128}, {
         20, 84.02733228179501}, {19, 103.81070771911537`}, {
         18, 94.99475405774825}, {17, 91.43551379347666}, {
         16, 90.79119788875184}, {15, 96.23776589148017}, {
         14, 101.83132574623686`}, {13, 95.48451075002444}, {
         12, 137.857830524118}, {11, 120.70845846161622`}, {
         10, 117.29035373577457`}, {9, 112.4503115739314}, {
         8, 129.87264144598834`}, {7, 123.0697585916129}, {
         6, 119.12220120356578`}, {5, 116.59691320775086`}, {
         4, 149.8445704006626}, {3, 214.168604840454}, {
         2, 466.05294867978307`}, {1, 711.3999647652367}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[17, 19], 0.8947368421052632]], 
       PolygonBox[{{1, 1225.379056219532}, {2, 1128.930616559984}, {
         3, 816.404157499072}, {4, 753.0934361690507}, {
         5, 492.8388068162905}, {6, 377.0249559326991}, {
         7, 321.4953267121218}, {8, 289.9385149789709}, {
         9, 272.3962202698657}, {10, 231.2033045147926}, {
         11, 212.86989248955842`}, {12, 212.46041589994076`}, {
         13, 217.28848897137846`}, {14, 240.31885766499994`}, {
         15, 227.1127561635632}, {16, 224.23841133980724`}, {
         17, 248.04919806157727`}, {18, 211.67763415941025`}, {
         19, 214.7462359307218}, {20, 191.44574916174562`}, {
         21, 193.7210733277904}, {22, 226.76429908191315`}, {
         23, 206.77347207625348`}, {24, 194.06291633367084`}, {
         25, 219.03993984610946`}, {26, 172.82838396727863`}, {
         27, 157.61619360335246`}, {28, 149.59091835457886`}, {
         29, 163.22776853847665`}, {30, 186.19365478412524`}, {
         30, 232.3635013660028}, {29, 189.86013414375867`}, {
         28, 180.32871727865805`}, {27, 187.78227121631303`}, {
         26, 210.23940554507777`}, {25, 265.3380119562738}, {
         24, 231.17567470371625`}, {23, 241.18971161968477`}, {
         22, 270.3667934926565}, {21, 228.44993363664622`}, {
         20, 221.17029795669222`}, {19, 253.25693991164093`}, {
         18, 250.21090176609957`}, {17, 286.8769874573603}, {
         16, 253.99090994419984`}, {15, 262.3653533661273}, {
         14, 271.28140562365365`}, {13, 253.4301933005795}, {
         12, 255.00747812862744`}, {11, 243.6702750744106}, {
         10, 262.5617240417424}, {9, 303.7505959023439}, {
         8, 335.9623729051189}, {7, 355.1247420045223}, {
         6, 422.20437308191913`}, {5, 550.618794665156}, {
         4, 947.4348980924136}, {3, 924.4904992537818}, {
         2, 1336.4285065299543`}, {1, 1438.6954701837997`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[18, 19], 0.9473684210526315]], 
       PolygonBox[{{1, 1469.1436983111448`}, {2, 973.6806546500263}, {
         3, 837.6597487084845}, {4, 668.8032320622883}, {
         5, 557.2544981701114}, {6, 426.4594937413696}, {
         7, 366.6368314393372}, {8, 359.2394990894163}, {
         9, 410.16199022031265`}, {10, 437.63167980419945`}, {
         11, 425.1892272292192}, {12, 413.7541040198556}, {
         13, 376.8856294590959}, {14, 401.1388432553017}, {
         15, 430.35356299346273`}, {16, 452.6887534753113}, {
         17, 461.11860438781724`}, {18, 475.24104740955715`}, {
         19, 449.8272555175171}, {20, 376.8980986453073}, {
         21, 340.8879512112075}, {22, 359.6432552445993}, {
         23, 326.7690410672623}, {24, 300.0309356473613}, {
         25, 315.5329251512161}, {26, 281.27274506768777`}, {
         27, 249.37000804597676`}, {28, 281.4908293305343}, {
         29, 343.081623388606}, {30, 326.92573723818606`}, {
         30, 391.2093007283001}, {29, 410.14259253275975`}, {
         28, 319.4296340562033}, {27, 292.5979333185787}, {
         26, 336.18810813935215`}, {25, 357.26305824178235`}, {
         24, 339.4728505258063}, {23, 374.0588375510901}, {
         22, 413.82217134335104`}, {21, 387.53767335650826`}, {
         20, 434.1377612892546}, {19, 500.63399028852564`}, {
         18, 519.6166885569594}, {17, 495.75380168443775`}, {
         16, 495.91554088897453`}, {15, 461.6558403591915}, {
         14, 425.45852709956284`}, {13, 398.3090617966413}, {
         12, 444.57264490920113`}, {11, 459.93200297909345`}, {
         10, 474.06148912722375`}, {9, 443.1800061217947}, {
         8, 390.49958922443057`}, {7, 400.04704098611245`}, {
         6, 491.684581273133}, {5, 673.886179916793}, {4, 818.71714162885}, {
         3, 1013.9998751437394`}, {2, 1140.6854987264844`}, {
         1, 1684.4711377083386`}}]}, Null}}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.927471840780354*^9, 3.927471849309012*^9}, {
   3.927471894723832*^9, 3.927471923898903*^9}, 3.9274725242746196`*^9, {
   3.927699898150323*^9, 3.927699925939505*^9}, 3.927700674159978*^9, {
   3.927701223079998*^9, 3.927701226924763*^9}, 3.9277019026526637`*^9, 
   3.92770320625677*^9, {3.927703311032092*^9, 3.927703333326731*^9}, 
   3.9277046889783688`*^9, {3.927713772230177*^9, 3.9277137953111796`*^9}, {
   3.9277162322984447`*^9, 3.927716242557663*^9}, 3.927867208384063*^9},
 CellLabel->"Out[448]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\ga_1.mx\>\""}], 
     ",", "dayFitResults"}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.927472353075333*^9, 3.927472380560938*^9}, 
   3.927701938249535*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["best fits for each day fitted",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.92777781639787*^9}, {
   3.927867237704297*^9, 3.9278672790855103`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bestFiveFromEachDay", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Reverse", "[", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"dayFitResults", "[", 
                   RowBox[{"[", "day", "]"}], "]"}], "[", 
                  RowBox[{"[", "generation", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"dayFitResults", "[", 
                   RowBox[{"[", "day", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"generation", "-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"generation", ",", "2", ",", "30"}], "}"}]}], "]"}], 
           ",", "1"}], "]"}], ",", "First"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "1", ",", 
       RowBox[{"Length", "[", "dayFitResults", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.927713996013114*^9, 3.9277140612859344`*^9}, {
   3.9277141285223074`*^9, 3.927714139133232*^9}, {3.9277141696318493`*^9, 
   3.9277142309318047`*^9}, {3.9277142961158648`*^9, 3.9277144215766425`*^9}, 
   3.9277162903572035`*^9},
 CellLabel->"In[317]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Range", "[", "8", "]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GetMeanAndSEM", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"bestFiveFromEachDay", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}],
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "Black", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"False", ",", "False", ",", "True"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9277142193486023`*^9, 3.9277142331107235`*^9}, {
  3.9277143201505985`*^9, 3.927714391402392*^9}, {3.9277144250059137`*^9, 
  3.927714508581872*^9}},
 CellLabel->"In[318]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
    PointBox[{{1., 4.826786542704907}, {2., 1.4364476273309654`}, {3., 
     1.594473258521002}, {4., 1.535149765592805}, {5., 2.3208531184449646`}, {
     6., 0.5376704214934703}, {7., 0.39861244914571586`}, {8., 
     0.6594402077962794}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 0.15428204497580023`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5, 8.5}, {0.15428204497580023`, 5.198441093076747}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{{{Null, {
       GrayLevel[0], 
       Thickness[Large], {
        LineBox[{{1, 4.699462396502983}, {1, 4.954110688906831}}], 
        LineBox[{{2, 1.3815180666654374`}, {2, 1.4913771879964934`}}], 
        LineBox[{{3, 1.4266338918607508`}, {3, 1.762312625181253}}], 
        LineBox[{{4, 1.410999649478693}, {4, 1.6592998817069171`}}], 
        LineBox[{{5, 2.210893382769032}, {5, 2.430812854120897}}], 
        LineBox[{{6, 0.459537988297787}, {6, 0.6158028546891536}}], 
        LineBox[{{7, 0.30856408995160045`}, {7, 0.4886608083398313}}], 
        LineBox[{{8, 0.5888760448654706}, {8, 0.7300043707270882}}]}}}}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9277142197705*^9, 3.927714233360473*^9}, {
   3.9277143188638425`*^9, 3.927714392060548*^9}, {3.927714425679277*^9, 
   3.9277145088791437`*^9}, 3.9277162923744326`*^9},
 CellLabel->"Out[318]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bestFitMeansOverall", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"bestFiveFromEachDay", ",", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927714516199644*^9, 3.927714528119983*^9}},
 CellLabel->"In[321]:="]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["seasonal trends in correction?",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.92777781639787*^9}, {
   3.927867237704297*^9, 3.927867243712931*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "populationFitness", ",", "\[IndentingNewLine]", "offspringFitness", ",", 
    "\[IndentingNewLine]", "population", ",", "\[IndentingNewLine]", 
    "offspring", ",", "\[IndentingNewLine]", "newPopulation"}], 
   "\[IndentingNewLine]", "}"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9278678508577566`*^9, 3.9278678531045103`*^9}, {
  3.9278679764440155`*^9, 3.9278679790739584`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seasonalCorrector", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}], 
                  "&"}], ",", 
                 RowBox[{"dayFitResults", "[", 
                  RowBox[{"[", "fittedDayN", "]"}], "]"}]}], "]"}], ",", 
               "1"}], "]"}], ",", "First"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "20"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"fittedDayN", ",", "1", ",", 
         RowBox[{"Length", "[", "daysToFit", "]"}]}], "}"}]}], "]"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9278692375657215`*^9, 3.927869241046961*^9}},
 CellLabel->"In[547]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"seasonalCorrector", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9278691514338813`*^9, 3.927869247193791*^9}},
 CellLabel->"In[548]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 1.1684905170545614`}, {2., 1.646836741004283}, {3., 
      1.4532479745480062`}, {4., 1.3240490818988429`}, {5., 
      1.0845669313757893`}, {6., 1.3773297841321355`}, {7., 
      1.2972965366342766`}, {8., 0.8653062164325428}, {9., 
      1.4242608300177706`}, {10., 1.482688685088859}, {11., 
      1.3028925420008148`}, {12., 1.202232286749784}, {13., 
      1.3047855737979612`}, {14., 1.5920567070600429`}, {15., 
      1.5596134804811759`}, {16., 1.5277063052472613`}, {17., 
      1.2866106399617223`}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.8218878539563353},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 17.}, {0.8218878539563353, 1.646836741004283}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.927869168054242*^9, 3.927869248224923*^9}},
 CellLabel->"Out[548]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"daysToFit", "[", 
            RowBox[{"[", "fittedDayN", "]"}], "]"}], ",", "8"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"SortBy", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}], 
                    "&"}], ",", 
                    RowBox[{"dayFitResults", "[", 
                    RowBox[{"[", "fittedDayN", "]"}], "]"}]}], "]"}], ",", 
                  "1"}], "]"}], ",", "First"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "10"}], ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
          RowBox[{"seasonalCorrector", "[", 
           RowBox[{"[", "fittedDayN", "]"}], "]"}]}]}], "\[IndentingNewLine]",
         "}"}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"fittedDayN", ",", "1", ",", 
        RowBox[{"Length", "[", "daysToFit", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Nest", "[", 
           RowBox[{"Lighter", ",", "Red", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Nest", "[", 
           RowBox[{"Lighter", ",", "Blue", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<w_\>\"", "<>", "#"}], "&"}], ",", 
         RowBox[{"roomNames", "[", 
          RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<c_\>\"", "<>", "#"}], "&"}], ",", 
         RowBox[{"roomNames", "[", 
          RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}], "]"}]}], "}"}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"#", ",", "\[IndentingNewLine]", 
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"DateString", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], ",", 
                  "\"\< \>\""}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "\"\< \>\""}], 
              "]"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
          "}"}], "\[IndentingNewLine]", "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"startDayN", ",", "endDayN", ",", "4"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "Automatic"}], "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.927867355975403*^9, 3.9278673687460938`*^9}, {
  3.927867863245887*^9, 3.9278678925062532`*^9}, {3.927868054953772*^9, 
  3.9278682782039623`*^9}, {3.9278683137038383`*^9, 3.9278683720127506`*^9}, {
  3.927868469675736*^9, 3.927868521435177*^9}, {3.927868848165592*^9, 
  3.927868876233674*^9}, {3.9278689411852474`*^9, 3.9278689538281174`*^9}, {
  3.927869016873782*^9, 3.9278690170707564`*^9}, {3.92786905704871*^9, 
  3.9278690576158447`*^9}, {3.927869272970684*^9, 3.9278693505519233`*^9}, {
  3.927869386803735*^9, 3.9278693868563805`*^9}},
 CellLabel->"In[557]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[{{34., 2.35121697410607}, {38., 1.7141629048045601`}, {43., 
         2.5893049049452057`}, {47., 2.2947207812765513`}, {53., 
         1.3937208103478664`}, {63., 2.7889581665699366`}, {73., 
         1.9242442452648678`}, {78., 3.051828029759843}, {83., 
         1.6516137666349837`}, {88., 2.140464958255713}, {93., 
         2.394981701198906}, {98., 2.7163741151394247`}, {103., 
         2.9089161341731926`}, {108., 2.021550020767903}, {114., 
         2.415976553436278}, {122., 2.540922040801069}, {128., 
         3.0175384145371638`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 
          NCache[
           Rational[5, 9], 0.5555555555555556], 
          NCache[
           Rational[5, 9], 0.5555555555555556]]], 
        LineBox[{{34., 1.0022931805363335`}, {38., 1.1485961883840317`}, {43.,
          0.8890281990273058}, {47., 0.3321874027256096}, {53., 
         0.49815503092775104`}, {63., 0.5926238557511734}, {73., 
         0.792546949047114}, {78., 0.444190367450249}, {83., 
         0.878065119980218}, {88., 0.901452511672308}, {93., 
         0.8651735992739282}, {98., 1.0238774952006002`}, {103., 
         0.8135796430851322}, {108., 0.7155313599817664}, {114., 
         0.7478843306173236}, {122., 0.8471926252313353}, {128., 
         0.7693476405060056}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 
          NCache[
           Rational[19, 27], 0.7037037037037037], 
          NCache[
           Rational[19, 27], 0.7037037037037037]]], 
        LineBox[{{34., 1.2585746125141333`}, {38., 0.6264710694546811}, {43., 
         0.8391254400364478}, {47., 0.48707740123743626`}, {53., 
         0.3435064042684598}, {63., 0.8612334531659857}, {73., 
         1.1123266159163727`}, {78., 0.32495611304012034`}, {83., 
         1.0007172488213623`}, {88., 1.1408178277004246`}, {93., 
         0.9353105787228424}, {98., 1.703492270955765}, {103., 
         0.5579898499548888}, {108., 1.3332870478385332`}, {114., 
         1.4490103629563542`}, {122., 1.4094321122181683`}, {128., 
         0.7901954209852305}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 
          NCache[
           Rational[65, 81], 0.8024691358024691], 
          NCache[
           Rational[65, 81], 0.8024691358024691]]], 
        LineBox[{{34., 0.6901529916458943}, {38., 0.9240046756696835}, {43., 
         1.32764486374572}, {47., 1.350087782299553}, {53., 
         0.8392104107355907}, {63., 1.2780829392676627`}, {73., 
         1.0425031252002397`}, {78., 0.5754078728925012}, {83., 
         0.7897782042414777}, {88., 1.1220596799483953`}, {93., 
         1.086221741775269}, {98., 0.35986139839767634`}, {103., 
         1.330543216082376}, {108., 0.6947020349844087}, {114., 
         0.5749784510664607}, {122., 1.206210987982551}, {128., 
         0.6144293669752818}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 1]], 
        LineBox[{{34., 1.95606170844237}, {38., 1.3917323777262662`}, {43., 
         1.4323577629178603`}, {47., 1.357190325328468}, {53., 
         1.3903298918514166`}, {63., 1.7658786245602043`}, {73., 
         1.2612016191347484`}, {78., 2.7669305728420115`}, {83., 
         1.3476580655105828`}, {88., 0.877587781861626}, {93., 
         1.6443083907958282`}, {98., 1.48233614309329}, {103., 
         0.7609619041885294}, {108., 1.5377094299963854`}, {114., 
         1.2942705919744344`}, {122., 0.998690770158023}, {128., 
         1.8622559868408144`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[5, 9], 0.5555555555555556], 
          NCache[
           Rational[5, 9], 0.5555555555555556], 1]], 
        LineBox[{{34., 0.33127423252489757`}, {38., 1.028276486298687}, {43., 
         0.413661117197068}, {47., 0.4382217731595581}, {53., 
         1.3293946463823754`}, {63., 0.09584435303782934}, {73., 
         0.437497649891675}, {78., 0.12612573978753527`}, {83., 
         0.9411742902214087}, {88., 0.633718452897375}, {93., 
         0.4503348746654513}, {98., 0.4965173864494256}, {103., 
         0.029664844611849168`}, {108., 0.44806388564618743`}, {114., 
         0.5782109210348392}, {122., 0.3177399946960043}, {128., 
         0.4829264330990185}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[19, 27], 0.7037037037037037], 
          NCache[
           Rational[19, 27], 0.7037037037037037], 1]], 
        LineBox[{{34., 0.05742466258907114}, {38., 0.16444156586763767`}, {
         43., 0.08790517940635284}, {47., 0.6619807972048974}, {53., 
         0.3972638982494727}, {63., 0.08148142387199885}, {73., 
         0.42661890084855913`}, {78., 0.0711893177034338}, {83., 
         0.2977291288940034}, {88., 0.4724380319700441}, {93., 
         0.023191352317560896`}, {98., 0.1396527929692933}, {103., 
         0.1754535687848808}, {108., 0.6355814438982663}, {114., 
         0.4898359754591768}, {122., 0.3116623398282939}, {128., 
         0.060510951608874486`}}]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[65, 81], 0.8024691358024691], 
          NCache[
           Rational[65, 81], 0.8024691358024691], 1]], 
        LineBox[{{34., 0.27499101240527773`}, {38., 0.8357328565566902}, {43.,
          0.5850726078673623}, {47., 0.7273139064339463}, {53., 
         1.4886776615261117`}, {63., 0.5417658792502924}, {73., 
         0.845370290419223}, {78., 0.6241990641825382}, {83., 
         0.8728993737860961}, {88., 0.6440352922052418}, {93., 
         0.29830182281578643`}, {98., 0.20759594846473384`}, {103., 
         1.4713692004299415`}, {108., 0.5838622434237738}, {114., 
         0.5017054934191336}, {122., 0.44249108545282023`}, {128., 
         0.49880951309082633`}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {32.04166666666667, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{32.04166666666667, 128.}, {0, 4}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{{15, 
         FormBox[
          RotationBox["\"Wed 22 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {19, 
         FormBox[
          RotationBox["\"Sun 26 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {23, 
         FormBox[
          RotationBox["\"Thu 30 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {27, 
         FormBox[
          RotationBox["\"Mon 4 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {31, 
         FormBox[
          RotationBox["\"Fri 8 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {35, 
         FormBox[
          RotationBox["\"Tue 12 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {39, 
         FormBox[
          RotationBox["\"Sat 16 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {43, 
         FormBox[
          RotationBox["\"Wed 20 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {47, 
         FormBox[
          RotationBox["\"Sun 24 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {51, 
         FormBox[
          RotationBox["\"Thu 28 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {55, 
         FormBox[
          RotationBox["\"Mon 1 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {59, 
         FormBox[
          RotationBox["\"Fri 5 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {63, 
         FormBox[
          RotationBox["\"Tue 9 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {67, 
         FormBox[
          RotationBox["\"Sat 13 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {71, 
         FormBox[
          RotationBox["\"Wed 17 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {75, 
         FormBox[
          RotationBox["\"Sun 21 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {79, 
         FormBox[
          RotationBox["\"Thu 25 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {83, 
         FormBox[
          RotationBox["\"Mon 29 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {87, 
         FormBox[
          RotationBox["\"Fri 2 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {91, 
         FormBox[
          RotationBox["\"Tue 6 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {95, 
         FormBox[
          RotationBox["\"Sat 10 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {99, 
         FormBox[
          RotationBox["\"Wed 14 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {103, 
         FormBox[
          RotationBox["\"Sun 18 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {107, 
         FormBox[
          RotationBox["\"Thu 22 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {111, 
         FormBox[
          RotationBox["\"Mon 26 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {115, 
         FormBox[
          RotationBox["\"Fri 1 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {119, 
         FormBox[
          RotationBox["\"Tue 5 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {123, 
         FormBox[
          RotationBox["\"Sat 9 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {127, 
         FormBox[
          RotationBox["\"Wed 13 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {131, 
         FormBox[
          RotationBox["\"Sun 17 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {135, 
         FormBox[
          RotationBox["\"Thu 21 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {139, 
         FormBox[
          RotationBox["\"Mon 25 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {143, 
         FormBox[
          RotationBox["\"Fri 29 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"w_SZGK\"", "\"w_G\[OAcute]lyairoda\"", "\"w_M\[EAcute]rce\"", 
       "\"w_Lahmacun\"", "\"c_SZGK\"", "\"c_G\[OAcute]lyairoda\"", 
       "\"c_M\[EAcute]rce\"", "\"c_Lahmacun\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[19, 27], 0.7037037037037037], 
                    NCache[
                    Rational[19, 27], 0.7037037037037037]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[19, 27], 0.7037037037037037], 
                    NCache[
                    Rational[19, 27], 0.7037037037037037]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[65, 81], 0.8024691358024691], 
                    NCache[
                    Rational[65, 81], 0.8024691358024691]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[65, 81], 0.8024691358024691], 
                    NCache[
                    Rational[65, 81], 0.8024691358024691]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[19, 27], 0.7037037037037037], 
                    NCache[
                    Rational[19, 27], 0.7037037037037037], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[19, 27], 0.7037037037037037], 
                    NCache[
                    Rational[19, 27], 0.7037037037037037], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[65, 81], 0.8024691358024691], 
                    NCache[
                    Rational[65, 81], 0.8024691358024691], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[65, 81], 0.8024691358024691], 
                    NCache[
                    Rational[65, 81], 0.8024691358024691], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["1", "3"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[5, 9], 
                    Rational[5, 9]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.37037037037037035`, 
                    0.37037037037037035`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["5", "9"], ",", 
                    FractionBox["5", "9"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[5, 9], 
                    Rational[5, 9]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[5, 9], 
                    Rational[5, 9]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[19, 27], 
                    Rational[19, 27]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.4691358024691358, 
                    0.4691358024691358], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["19", "27"], ",", 
                    FractionBox["19", "27"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[19, 27], 
                    Rational[19, 27]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[19, 27], 
                    Rational[19, 27]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[65, 81], 
                    Rational[65, 81]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5349794238683128, 
                    0.5349794238683128], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["65", "81"], ",", 
                    FractionBox["65", "81"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[65, 81], 
                    Rational[65, 81]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[65, 81], 
                    Rational[65, 81]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["1", "3"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[5, 9], 
                    Rational[5, 9], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37037037037037035`, 0.37037037037037035`, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["5", "9"], ",", 
                    FractionBox["5", "9"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[5, 9], 
                    Rational[5, 9], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[5, 9], 
                    Rational[5, 9], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[19, 27], 
                    Rational[19, 27], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4691358024691358, 0.4691358024691358, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["19", "27"], ",", 
                    FractionBox["19", "27"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[19, 27], 
                    Rational[19, 27], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[19, 27], 
                    Rational[19, 27], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[65, 81], 
                    Rational[65, 81], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5349794238683128, 0.5349794238683128, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["65", "81"], ",", 
                    FractionBox["65", "81"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[65, 81], 
                    Rational[65, 81], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[65, 81], 
                    Rational[65, 81], 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9278673606955113`*^9, 3.9278673698243523`*^9}, {
   3.927867878993699*^9, 3.927867892894059*^9}, {3.9278680811152363`*^9, 
   3.9278680837940054`*^9}, {3.9278681195818806`*^9, 3.927868169147971*^9}, {
   3.92786822836594*^9, 3.927868278633383*^9}, {3.9278683147779756`*^9, 
   3.9278683724130945`*^9}, 3.927868470425818*^9, 3.927868536255547*^9, 
   3.927868848595296*^9, 3.9278689542460823`*^9, 3.9278690177253523`*^9, 
   3.9278690581038632`*^9, {3.92786928858566*^9, 3.927869352810296*^9}, 
   3.9278694348852596`*^9},
 CellLabel->"Out[557]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"seasonCorrectedBestFits", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Mean", ",", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"SortBy", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}], 
                   "&"}], ",", 
                  RowBox[{"dayFitResults", "[", 
                   RowBox[{"[", "fittedDayN", "]"}], "]"}]}], "]"}], ",", 
                "1"}], "]"}], ",", "First"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "10"}], ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
        RowBox[{"seasonalCorrector", "[", 
         RowBox[{"[", "fittedDayN", "]"}], "]"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"{", 
        RowBox[{"fittedDayN", ",", "1", ",", 
         RowBox[{"Length", "[", "daysToFit", "]"}]}], "}"}]}], "]"}], "]"}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.9278694539221935`*^9, 3.927869470256035*^9}},
 CellLabel->"In[561]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seasonCorrectedBestFits", "=", 
  RowBox[{"{", 
   RowBox[{
   "2.3480290895305607`", ",", "0.7801014999645991`", ",", 
    "0.9513837546933651`", ",", "0.9297576319359259`", ",", 
    "1.4780859968954623`", ",", "0.5046262989177167`", ",", 
    "0.2679036077336363`", ",", "0.6731878383370469`"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.927869476377467*^9, 3.927869476377536*^9}},
 CellLabel->"In[562]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.3480290895305607`", ",", "0.7801014999645991`", ",", 
   "0.9513837546933651`", ",", "0.9297576319359259`", ",", 
   "1.4780859968954623`", ",", "0.5046262989177167`", ",", 
   "0.2679036077336363`", ",", "0.6731878383370469`"}], "}"}]], "Output",
 CellChangeTimes->{3.927869477565405*^9},
 CellLabel->"Out[562]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["eval fit",
 FontWeight->"Plain"]], "Subsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.92777781639787*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["for one day",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.9277778022826457`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bestFitMeansOverall", "=", 
   RowBox[{"{", 
    RowBox[{
    "3.1725563115559083`", ",", "1.0683009750379302`", ",", 
     "1.29468510022947`", ",", "1.278422223763722`", ",", 
     "1.9544085048287771`", ",", "0.6946838470957711`", ",", 
     "0.3455993563985235`", ",", "0.9222435820921898`"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.927716315821035*^9, 3.927716323083461*^9}, {
  3.927716358490817*^9, 3.9277163597255955`*^9}},
 CellLabel->"In[338]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"individual", "=", "bestFitMeansOverall"}]], "Input",
 CellLabel->"In[322]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.826786542704907`", ",", "1.4364476273309654`", ",", "1.594473258521002`",
    ",", "1.535149765592805`", ",", "2.3208531184449646`", ",", 
   "0.5376704214934703`", ",", "0.39861244914571586`", ",", 
   "0.6594402077962794`"}], "}"}]], "Output",
 CellChangeTimes->{3.9277145496733356`*^9, 3.9277146111142364`*^9, 
  3.9277163280674324`*^9},
 CellLabel->"Out[322]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"warmingParams", "=", 
   RowBox[{"bestFitMeansOverall", "[", 
    RowBox[{"[", 
     RowBox[{"1", " ", ";;", " ", "4"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coolingParams", "=", 
   RowBox[{"bestFitMeansOverall", "[", 
    RowBox[{"[", 
     RowBox[{"5", " ", ";;", " ", "8"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"warmingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coolingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"warmingCorrection", "[", 
       RowBox[{"[", 
        RowBox[{"roomsOnCycle", "[", 
         RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "=", 
      RowBox[{"warmingParams", "[", 
       RowBox[{"[", "roomN", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coolingCorrection", "[", 
       RowBox[{"[", 
        RowBox[{"roomsOnCycle", "[", 
         RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "=", 
      RowBox[{"coolingParams", "[", 
       RowBox[{"[", "roomN", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "warmingCorrection", "\[IndentingNewLine]", \
"coolingCorrection"}], "Input",
 CellChangeTimes->{{3.9274651485811152`*^9, 3.9274652035904427`*^9}, {
   3.927472474387267*^9, 3.927472484514825*^9}, {3.927472651698136*^9, 
   3.9274726570587783`*^9}, {3.927696899268684*^9, 3.927696900325385*^9}, {
   3.9277007750900497`*^9, 3.9277007804716034`*^9}, {3.927714565926175*^9, 
   3.9277145676485834`*^9}, 3.927869505732187*^9},
 CellLabel->"In[339]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"warmingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "1.0683009750379302`", ",", "1.5`", ",", 
     "1", ",", "1", ",", "1", ",", "1", ",", "1.278422223763722`"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"coolingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1.8`", ",", "0.8`", ",", "0.7`", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1.1"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9277193082114177`*^9, 3.927719367803648*^9}, {
  3.927719408229206*^9, 3.9277194552650495`*^9}},
 CellLabel->"In[430]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetSimulatedDayForComparison", "[", 
   RowBox[{"simulatedDay", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.927783527950965*^9, 3.9277879167134256`*^9}],

Cell[CellGroupData[{

Cell[BoxData["roomTempStart"], "Input",
 CellChangeTimes->{{3.927783534741186*^9, 3.9277835431102424`*^9}},
 CellLabel->"In[607]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.9277835434952445`*^9, 3.9277836501106825`*^9},
 CellLabel->"Out[607]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"NumberQ", "[", "None", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9277835700488586`*^9, 3.927783589802072*^9}},
 CellLabel->"In[604]:="],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.9277835718760123`*^9, 3.9277835900284986`*^9}},
 CellLabel->"Out[604]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simulatedDay", "=", "29"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSimulatedDayForComparison", "[", 
   RowBox[{"simulatedDay", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "daySimulation", ",", "\[IndentingNewLine]", "daySimulatedHeatDynamics", 
     ",", "\[IndentingNewLine]", "dayHeatingSimulatedState", ",", 
     "\[IndentingNewLine]", "dayRoomSimulatedTemp"}], "\[IndentingNewLine]", 
    "}"}], "=", 
   RowBox[{"SimulateDayForCycle", "[", 
    RowBox[{"warmingCorrection", ",", "coolingCorrection"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"roomSimulatedTemp", "=", "dayRoomSimulatedTemp"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatingSimulatedState", "=", "dayHeatingSimulatedState"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatedHeatDynamics", "=", "daySimulatedHeatDynamics"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"roomsSetTemp", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
          RowBox[{
           RowBox[{"roomsLowerBuffer", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomsSetTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"roomsSetTemp", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "+", 
          RowBox[{
           RowBox[{"roomsUpperBuffer", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomsTrueTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomSimulatedTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"24", " ", "60"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "LightGreen", ",", "None", ",", "LightGreen", ",", "Black", ",", 
          "Red"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "30"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{
         RowBox[{"roomNames", "[", 
          RowBox[{"[", 
           RowBox[{"roomsOnCycle", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<, \>\"", "<>", 
         RowBox[{"DateString", "[", 
          RowBox[{"NormalizeDate", "[", 
           RowBox[{"seasonDays", "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"heatingTrueState", "[", "t", "]"}], "==", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0", ",", "0.1"}], "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"-", "100"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"t", "+", "5"}], ",", "100"}], "}"}]}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], " ", "-", "5"}], ",", "5"}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"heatingSimulatedState", "[", "t", "]"}], "==", "1"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1", ",", "0.1"}], "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"-", "100"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"t", "+", "5"}], ",", "100"}], "}"}]}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], " ", "-", "5"}], ",", "5"}], 
             "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], "//", 
  "Row"}], "\[IndentingNewLine]", 
 RowBox[{"Join", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"100", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"heatStockDaily", "[", 
         RowBox[{"[", "cycle", "]"}], "]"}], "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Total", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Total", ",", "#"}], "]"}], "\[IndentingNewLine]", "&"}], ",",
       "simulatedHeatDynamics"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"Total", "[", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Total", ",", "#"}], "]"}], "\[IndentingNewLine]", "&"}], 
        ",", "simulatedHeatDynamics"}], "]"}], "]"}], "]"}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9274724668689523`*^9, 3.927472471360813*^9}, {
   3.927472630560645*^9, 3.927472630705639*^9}, {3.92747269029074*^9, 
   3.9274726903853617`*^9}, {3.92747277448322*^9, 3.9274727746255493`*^9}, {
   3.92769544178176*^9, 3.9276954418320165`*^9}, {3.927695520672686*^9, 
   3.927695520934449*^9}, {3.927703351204032*^9, 3.9277033524697056`*^9}, 
   3.9277034152870054`*^9, {3.927704721475465*^9, 3.927704723475757*^9}, {
   3.927714602908888*^9, 3.927714602939947*^9}, {3.927714663407255*^9, 
   3.9277146638622475`*^9}, {3.927714697436451*^9, 3.9277147326243277`*^9}, {
   3.927719275984352*^9, 3.927719284870777*^9}, {3.9277193775291686`*^9, 
   3.927719386765739*^9}, {3.927719461774562*^9, 3.9277194618256054`*^9}, {
   3.9277197926585283`*^9, 3.9277198235743227`*^9}, {3.927719858402924*^9, 
   3.9277198600955544`*^9}, {3.9277198936752243`*^9, 3.927719929403372*^9}, 
   3.927777484683955*^9, 3.9277775147711115`*^9, {3.9277775732129364`*^9, 
   3.927777573315346*^9}, {3.927777658267164*^9, 3.927777658323238*^9}, {
   3.927777697690387*^9, 3.927777752271983*^9}, {3.927783150069131*^9, 
   3.927783152713993*^9}, {3.9277834352363834`*^9, 3.927783439989834*^9}, 
   3.927787916723674*^9, {3.9277943474714336`*^9, 3.9277943750469584`*^9}, 
   3.927794466823236*^9}],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1GlMEwYUB/BuoF2oQph2jGMYDhU6BnNlIIZJEShRoCpO4rAMRyVQ5CiH
QAtYkKMWEGlX5lTQoLZpxqEWUXTaIEIFKVDKMQtO61YShdDAtAMmwtwC773k
5Z/ft/f/8pzi0iLjPyQQCBnv979M7/fceluztJPw/3jREn2eqyeDPGirNj0c
ev4yyB98deKf7B1ZEeBvE0hf7HlxEGzvfIZfYWCCPaRZ694GxIHrM1z3tarj
wZrsAN8SKRvs9P0IIyY5BRy/fKv5My4HbDPVRrSJywBnUf2fiilZ4Ljpxe4N
k8fBTbsyiZcGcsBy+zTDZkUu9nmT9KBRwgUzLuo7rLTohdCozgwrHviooqWk
1xHd72Ad4uqJNtcGSDVfo/0EqWsKvkGn+tfFu4esuHAb7epsb9dIOJqrKqML
jqEZFwIfbS9HXzF6PF4yzwPPB37a18lHJ9Wvjx3i5IN/J5jNvvihALyvZMZA
Po/uID57sluLvpioG4nSo/N6hrUsI3qSG7k/yYQ+RNEMcBbRqrEIRo7ZiRV/
RfOu6FUXWKCnwztUZ7egZZZ32m/sQpeTJXLbFnSqQ1p1kQsf/NdbfnADqRDc
zO5urylFvzwvFnx0Ge2kZjLylGil4cGNm2p09LstZOMYuiiIkJr/DC0X6lQW
f6yaStMMKDadm0DPkStzt75C0y/vpATPoCWes+NH5tBEUSmb/mURmPfadu5z
Nnr7pusyrgFt2kOPehR7ErzUeG0D6QR6rZXtIKMWbdHed43TgLZMP1klvove
W+e19rASXd3ztMClY9XetEGT0DTVhf7Y2TflZg9awhMxQwbRNkNTYaNP0G5n
laoYcjHY77AocGI/umyHzehwB1prW5fUSS0B28mK78ndSsFteko4Y30Z2HF4
JiF7Gk2tETVe0QvAdeavPcUPT4FvBXqNld4Rgn/2Lbde/KUcPDAuLaNWVoBb
I2pdOYWV4NmUA4TUo6fBJrp7ojGoCiyf1s1n+pwBH6qXsmLWVYNbFGGxZgK0
n712QbiAbn7nMNm0TQR20SeMDbLRGxvkOcGn0ObZrzbelqHzx4WsmVb0GxpF
4d6FjozWrpnvRl/P5H2nUqNjCxnFTf1oy9POTRLNit//q/vn/h7N06KTZY8J
rGG0m85OvjyONpCO7a39Ex3dx9SlO4jBmioGK/QgWpJ7iXRcg76nXF5g7f4R
bMWkCah30X5HjPJSbwm46td8dpsMHZppx2n8pAb8m2gzyaUaLSZah/A++Anv
TW52vE9D+2jD5pf56H8BMi4Rag==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235755#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$427235755#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxFz2tM0wcUBfBuoF2oQpgyxmMYHip0DNmKIIbJH4ESBaqySRzCcFQCRSjl
IdACAkKpBURay5wONKhtmvFQQRSdNlihghQo5TEBp3UriUJoYNoBE2EzWe+9
ycnJ79u5zgnpUYkfkkikzP/yvjMGvLbe1qzsIr2/Ym8i2fe5ejrYkzDZ+HD4
+cvgAPDVqX9ydmZHgr9Nonyx98VBsIPLmaJKfSzYU5q97m1gArgh021/uzoR
rMkJ9CuTssDO348y4lLTwImrt1o+43LAtjMdZNuETHA2LeCpmJoNTphd7tkw
fRzcvDuLfGkwFyx3SNdvbs3Df96kPGiScMGMizqllRa9FBbdlWnFAx9tbSvr
c0IPOFqHunmhzbWBUs12tL+AvabwazQ7oD7RI9Tkr4ir833doxForqqcLjiG
Zvwc9GhHBfqKwfPxink+eDHo0/6uInRKw/r4YU4B+HeS2fyLHwrB+8vm9DYX
0Erysyd7tOiLyeOj0Tp0fu+IlmlAT3OjDqQY0YeomkHOMlo1EcnINTvxv2mE
T2WfutACPRuhVJ3bgpZZ3um8sRtdYSOR27Wh2Y7pNSWuReC/3haFNFKKwS2s
ns5aPvrlBbHgo8toZ3UsI1+BVugf3LipRse822JjmECXBJPYBc/QcuG4yuIP
k30IzWDrpvNT6AWbqrytr9D0y7uoIXNoidf85JEFNFnEZ9G9S8C813YLn7PQ
OzZdl3H1aONeevSj+JPglaZrGygn0Gut7IYYdWiLzv5rnEa0ZcbJavFd9L76
bWsPK9A1vU8LXZUmbyeGjELjTDf6Yxe/tJu9aAlPFBs6hLYdngkfe4J2P6dQ
xdmUgv0Pi4KmDqDLd9qOjSjRWrv6lC5aGdheVnpP7s4Hd+ioEYz15WCnkbmk
nFk0rVbUdEUnANebv/YSPzwFvhW0bYJ/Rwj+ya/CevmXCvDgpLScVlUJbo+s
c+MUV4Hn074hsY+eBhvpHsmG4GqwfHZ8Mcv3DPhQg5QZt64G3NYaHm8mQPs7
aJeES+iWd47TzV+KwK66pIkhFnpjozw35BTaPOfVxtsydMGkkDnXjn5DUFs9
utFRMdo1iz3o61m871RqdHwxo7R5AG152qVZojHZm7h//u+xfC06VfaYxBxB
u4/by1cn0XrKsX11f6Jj+mPHMxzFYE01gxl2EC3Ju0Q5rkHfU6wuMfecBVvF
EgLaXbT/EYOc7yMBV/9awOqQocOy7DlNn9SCfxNtprjWoMVk61DeBz/i3tQW
p/sE2lcbvrhahP4XlkMl3A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235755#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxN3Xk8lN/7P3BFkgopaxIqobLNKCRuuxCKkjVbRHaR7PuenSRJJclOIkuS
KBWSiEolSaGEEiH9fH7mO6/3/NPj+TCjuec+51znus45g9/K5cjJlTQ0NK70
NDT/+9etQ3RndeeifPjY4bu8LSSi3Dvw4SqVBYX/M/fnbSa/ldcR/2etH34y
Hm3MVDcsjK71LthA9atgDt8q541Uj9OrjP6SZCNo/vdoJBG8Gy63utVxUq2z
+XfeuDIP1YE7dMNPt22luo+jW+JMAT/VNsYO9ilxAlRPZNFcrXDeRrXfh/S+
F3rbibu8/3sHJIJBYA/LpOQOqqV3R4w71QlRfWrvh7ZR5d1U//L2pGMU3EN1
UN1aOWEGUcLtAGPv9TISsW7xqofGKJxBSBfatYlR3WcluV6/VZxqmxutKu4F
ElRPfDH3S4qTpNpPZPp2mTOJ6iatRt3GDzCDU+zYcz0yIWya0DSdv/R5xR+L
/PAATi3l3/ZDUorqIrJO8p6ZvVQ31/iscKyTpprxrepl390yxEefTSXqV0mE
3gKLTOxlOH1Lf3cmkyzV/fI3XQsC4VPBB/KfWO6nevrhyw9fleWozv085yV7
5hDxv7fv6k8iDOzW7tH8eJTY+r+P05xEiIRf2WfDdYxqmuskpYDD8Fi5v3qs
E/yq8bF2RvQxYum3HWA0XPp8nm84cuMGXPzexLDiAWzMHeY4LGFINf2xomDu
a/Ckze+InQ1wvwcRR35jSBz5/zecRDwOiUlS/A1XJHWn67Aepzqq9NTVU5rw
ifaFwpAQeO9YYlVWLbxuzY4HVVPwDIfLo4dMRkR729JDm0QMCtY86xSB26Vo
X7xTg++qHHo1agXHW30coLsE2wR5jvG+hHUT7k/s+gHLZq/5Lb3WmGrBYv15
1Z3whvrLNPrKxsT/btcBzaX+PNPCFnkbdiCNi9RtM6H6qJK0eKsCTBwOkeox
gXdZtMkOnoXZXdiJHykmy+OBKon4FleguaYNbiqQP7qNzpTqjNauEwfkYOdh
WwfDM7DRdJmLTSKsQjd/xq0IFt+o6hPQako8nBYyTVAiEZsFEgJjh+Ds5u3C
SuZmVAvY1XbN9sIPn2/1t/0N20iH7+zeZL48vhAkYtXV0ReKJDhvjZ5f6WH4
6xvuFzHxsEjR5x22z+Bnm7Q6X47Ajv5lPooMJ6heP8y2o1QQLtHxfc6jeoLw
XepeH2WXxo+tattng2HJSZZzLxvgM01v20vm4bcH9Teo8lhQvXsxfNh3F+xX
cbeuQhZusx1LHDlosTz+SZOILZt5bfmMYPNvX2vn0+Cce7eZe7vgCbfhofWD
FgRp+UEoCnLVqkzCyW+0EnxpLKkejA+wqWCGQ2c+MfGJwtstDtac14bPbPKL
bzaBW1pLrOcdYHb/j9KSPrCtxCYm+2jL5fFUnESszjx399VNOH/lByuVR/DB
0yrrK4bg0Ze3qrfSWlEtG9Ufd4wVjpVjtjrPb0V8W2p+4buWxpMJxX3N4vDu
G2fWzSvAtNdKyx55w2+yRw2Sy2EW8z8HWu7DalsYds62WxG2/3sILt2vfnaW
Xf1wxaUdf8xGYV5u5WcP6a2pjs6wuCy8Df7FHuCSoABbpF1SnDaB0w0KRIQc
rIncpeGxd9tSe9hYs9HEG1758vHC+QhYOvnV58ZUOJflV7VgOcycsCEmrh1W
0eHzuP8W9lkvZjo1Ape1HVDdMQsPx2qLHqe3WY4HvEvjU1Rk1zYFOC28yevH
WfipyosTAhEwDd2AxtFUeO/DcYmoazZE5sWlB9dS/wv5y11XBvfRbP7O1w6r
BErfjxiBy/4eTfq26iTVm/08rI8IwHr7Q7TDxeGIuUSpu/Jwfc0V3jHtk8vx
h4NETHmXrOY1gZ96jhSOpMBX3bfr3WmDK943xnL2w02aZo99x04ux5cNJOJl
1Z+VH+bgIYF0eSVGW6pXzXfcYRCGBV+u3vNcHd6nkHtK0hDWKCRy02zh4xzv
Psx6wvah5zabhtsSS7MLIVNmEhFjUpEskAsXkcbWjDTBHWu3B5d+hH98Mp31
pLGjmkbvD+k1M8xSn+YitxXmF5IsvCJqtxy/1i2Nf6kdwyvlYU8VoifBF777
q/whTw38xELnX2CrHaHxvwnL6qX+1zYq+6kXHpWO9FL7As/nbqu49Rvm8TcV
dmU7RbX80bScvWRY94FE/0Vl2GJPB8ffI7DrRQd9C6tTy/FqFYkIXrU64aEb
fO2dAn1MItx8x9tfrxQePl/+i70DXm07evrdN5izK+ImsQALyW/7dH2t/fJ8
7K8kIVNwn3f1ZliT3dTYQQR2HE99IX4QPv+oXWPGDs6WdAgzPguXZNM33ouA
7zNen+dLhzu9FPaF3bBfji9zkoRqz93WyY9wLUnS+ASvA9WGsYkNPnvgX4Pj
AulycLLsochyLYfleDMrSYglF461GcMOiqcqac/BuRPb/WUvwO+vfFR1uwNz
6WYz5b+Eq/IW3B8OOizHj5+ShMGice/7SXjyaM3+OZrTVMcXc+SwscCtpt2n
tEVh2nVJEqHacI71j7RsE1i+7tBcjQP8lrXIvOcc7O3A+HAi6vRyvJmQJL63
hhqYt8BWO/9+frbCkep/ASaaX1jgrFc1JSv5HImlT89n07gkISvKuZFXDO4N
9zorIw+zSi21UVNYe+gHw00fOCKl6MW7DPiBkn3mpmrYPPPxotgjx+X4NSZJ
LEzusNbqgS8eDHtsOwTvvTq4K+Qn7KZ35dfdDU5UF/0zufdDDD5oWMu/VgEe
LuGMENSBw+jPjiqawfzmPTpmjk7L8eSTJLH7a4NYXS681z2fhesdXNM9GCU+
Bsvt27JC4w/ccNHw3InVzsv5zkdJQnEhadKLDVZ7QD94QwLWjvDt6j4EH9aa
aKJ1gI+xnLwtGQG/dr+ySzMVNu15fd3ymvNy/Hq/1H73beI5VwZbZuqkJjbA
jtulPcd/w14l/Me0xVyonmUx7bA+APt6pKv5arkQ/0sPhfolicWezoZkIzhI
eu2+Ajs44m/gztehcGzTLw6GHFhv7NM3SwbX5Xj3WpI4+a+qZMs5V+J/V+PT
LUlsWr059UEQ3MQUeO5kFOzG/sl8TaLrcnx5IUnw8aqrFF+AA/YwM0/nwf1y
va/lquAjPjN0pj9dl+PFc0miLPr+8+sr3ahefzEyc2wDXJ8zFpjABTvk654k
8cNcZbc1e4Xg1moOcV9xt+X85qkkEfrqZgujLiw/vc8k0wn+s7F1QjgOrpQ8
HlFTALMq8R1eUQu7HP66+eATmNdIe8X3TjdKPUWSaLMoG07sg31PbWojD8Ai
rt7lfV/gqEDCj28G/hzPoH6K3p3q1HTH3euYYKXszg1lbPDkDfKM/hY4pzij
f2a7+3J+1LTUPtuE3COVYY6xu6s5rGDpWcYZaXvYeJXZsLGrO6Ves/T+WUt7
/M7CWVtXtGQHwB9kblwfjIMFDA6GCF6CTzp/t3C4BedHJSmUVMNP0z6JdjbA
Y9ekeKda3Jfj0z1JYl1Z5PpN7bDovdcLUt1w5SR/7b0JWFbQ4azqeg+qTUn1
tnabPJbjU60k4U8wHYveDGcfslAtFIAbjSvI7cIwreexjRukYbWEuUkDNfhU
lvZHr0Nw9K3szgwDuKBq4n6tCdz2UKm038qDUr+SJJjfD5/nc4OPzMY42gTC
fbtfCn+7BJtZbv7icRceTLPOne+GTz0ttAydhGN6/+rdmIULh3SJx//gtsmr
YiP0Z6if1/jiT961TLAEV8ZfHR74DEmuP1kEVpG59ileGt6owDAWowbPKdaN
Rx2CB1WcpyIMzlDb61N1/t9hJnCFZvefECv48LEcBt8AeMLSkcMjE+6z2brZ
7eoZan9stOvidcmH8x3CBZxK4QQnacHTVbC5R/Yeu2ZY9BydlHUX/DfAQe7E
ANwW1qlsMg5XRoaqG02foY5vWTF7tQwX4LDzIzpHaT2pPp2YdUSfEZZNX2ms
ywkzZp2y1BKEp7I3nzy4B359teOUOhluzA12VN0P598kuyoreS7nH72ShPpt
msD95vBwQ9t5kg/c8SAwSSIYrmqWTBOLgrMff87YkwCHP83I2pXuSY1PBp2L
13fmwttf2RRuq4B/vX1asbURfvhRvHZzB1ww9OkeVw+c/CX9AUc/7DN6sIXt
k+dyffTr0nzq+0LrxlG4+siQnyODF9Xr7j4TbxGELZNazExE4SqH+zGTUl7U
+eRalZrqyAOwxZbbQ1tUYcbOPHlNA/hOSGaGl/V/fm6a2rLu9H9eLxU/dc39
P89nitoq4/Of538N1n4e7EXNdyozPfPmE2HzQ/Y0QjkwA42ZsUEpfLtCrzKo
4T8/j9P8yP7oP68/qcJU3P6f58vL71fu8aLmgwyc0qde98Om/lt5JOfh8kH6
zhius1TT19P85eM/uzx/4Fl6ftqccLUQXO7869ghcZheYzz00z64bO7jO2Z1
2Li4Z5/cMbg04rlNlxlMZ/Ek6dTJ/zxf5mHDouN/ns96byz1zFlq/cW4pUz1
QShM55175XsyXCKS8YfrGnz8Xay+WjlcXBUe1H8XXpkYWOzeeJZaLztuf+4N
QytcrOSx+spzuO0e66cfY/A36YoGgsGb6kqOzGkDZtjvd/Bue3Zvav1Vpcfe
2n8LvLbycGbSdjjTjZ+hVhIWEZv0HCTg2m+Nnxh1Yc2CxMMkM5g12jtK3cab
Wk9/Y2dx3+Q0fE1N47eLO2y/Q3xP2Dl4dvBfZlEkHJXznKEnDdYLrFYYyYI5
za94/b0OD8hFFm8ohPM3uwztqPBe/rxPk4jWdKZGrw74y4aSS49H4ZKJtK63
k7DXc/81E7OwfMlJgo7m3HI8CF9qf+cPneVcDadrbvlMsMGCDN+P2G+Dq1rq
G5MkYLXQONFaBZjJ6szJDjX4FWGaNXgIzt6q8vK3wbnl+XEqiTi5uItxrSkc
du7ZZxNvOPeXw4OiVHhWkbO9OdB3ef5DQyZ+fbupeCjSl9L/yMSPC/uqeuLh
UaXHIubp8PD3Y1eGL8PvlL2iZorg7otpbgz1cKfKjuHEh/CzH5XGXM/gR5kq
z692+VLqe2SiSbVbWeQNXHvp5+79I3D5JCu79iycry75z3S1H9U5lw9/dWKH
szQ+mv7eAl/46foiYIcfpf+RieRsGrXVe+D4g4m1CWQ4/Erp9Rxl2G+6I678
COydY75C1hj20Br3bLKEnX/7j2raww5X15946epHqeeTieOHtCWm42H1PzG0
HMWwUi6395VKWF634NvOelh2Tsay7KHfcj6iSyb23njSI/0M3jP/teHgG3j7
YYZ84xF4882dSadnYda/aj5+q/2pZsp/NU7HDK/Rt7U+z+5P6V9kgm5xupeN
F6a5Fa6dvQOeWcyVKiXD4wbNvI3K8Og//RQNLXi44NPqF0fgwaMefkbG8Dsa
2smPlv6U9UAykd70Z3TeH9YLmxhiy4QbyM7WPFfh3Z/HPgrkw5lp9hbCpfAa
tS/vxar8l9uL9dL7yRt8K9cMN61+33ewC84+9brn2ADs+6S7y3ocHj135LDD
NHxcpPO56wL86M0hnbO0Acv1EmcyQY591ubPCH/Xbnp0QRDOY6ppLFeCN93f
q3D3IBziUnmvQS+A+P2/9MqTTExslZRrMYRPdJbWPjOH5SQKq/scYc7kvMrP
PvCvqavlU1HwC/3LJf/SYYJu8x76bLikMqNw3Y0AynovmeA5yS6ysQiOYUvN
57oNK/fGXCM9hxcygrMOjcEOB/9xG0wFLOeLIWSi74/fReM/sFrBHIclTSDV
d4y90+1Ww8l1Hiln2GBnHpfE4G2w5nWSNN8uWFBk9kODJLyyvD7STBZ+ty9Y
bEExcDnexZCJVFXGQJnDsLZ+SoeXBUxrycNb6QLXOt9wmgyA06ft2RIjYHc/
0Xui8bAO7U+b9rTA5fEyiUwIx1Svc7wMZ9x4UjhcB9M/eKtp+QYeVM+Z+vcx
cLn/XFjqDx02mdkjcOZRYaUDk7Bn//eRt7Mwu2dd1jq6IKqn5gNVCtfCFgpW
GT7McEeIyreDG2G5R4IEFwdcsGZN6lfuIMr+ADIRkdi+P1IAtuRI/rRDBJbL
PhbbLAFz7thMspb5z+tP/Y2QPAD/KvzwZoVi0PJ4W0gmrH48EH2hAndK5obk
aMBRxJ6ud4awgk4V/2Y7uCgpw3PUIWi5/nqbTHD3+DypcYajOM22RLvDv00U
3I57wV2DtFwz/nCJfWtjWjjcU3qVa3s0vDDt414RB2+XM3hGJAZR6hVkQitk
z/bnKXAm00DPWCb8NTM5kuEavHenqsyOW3DY7ZlRxTK48E+ncudtuEuhIMu8
Gp4LD53+Vhu0vF7xmEzwt5nq+DbADUMPyivbYOO/gmzjb+BgZRpnv/dwfvTr
R4yDQZT62dL9eF6x9eJneIYtznvnCKx2TV5EZQJOFZ18azEDD9ZeP++/CEuo
H1PIXBVM9fHzYhlCa4Ip+SSZCHrJMFm1Dr7JNXhQlQXuOFF37eVGmOebk8EE
N+zgzUe/XgBOavhjfmkHfJfuZbWwMDygWcRydze8OincXk08mJJvkoncW6Nt
gfIw0aQrXqMN2zEIR6vrwfE6Kwd79OGq1LeyNobwuzeVKVPGwZT69FK8s7NT
ZbaCfX5yzeyyh/ce29g14ApP3V1XnOYN6zlEc7v6wSWb6aM0g4Ip9X0ysa49
ZHp7GOwQ8M/qXyQ8qDzFaX8BNlrzuaMrD66qtZQrLgim5KtL8czx/a3IEth9
iwmHVQXc2dEbJlcFx0m8ODF5D9ZIfSqb1wLnqarnBz2B6WYespm0w1b5RKjU
i2DKfFiKaDS6N8HcA/vVVz1r7oelt5blnRuCfwXfChb9BpcNXTP99BNmSt/6
9N4M7KietS9jPpiyHidFPJ3lvOH+D95ZkMZ6iDaE6sF1Cd9XrIWzXaJaq1jh
Bb5Ve5PYYeOu4OunueG7oYssarwwu5RvAJ9ACGU9aak9zTmRYyRg+kaL0Z8E
bOP2zrBDBW4SMG7J1wihrEeQCb7uV5Kh2nBAuH6OmR4s+1Xbl/U4PK2pduzx
Cdj7eo7qcTt4bn6OPOIM7xfKLyp3D6G2Pz+Do9t9vOB7QSuzlHzgxaLSjWsD
4JXmNlO7z8P0zFwvdLJgxsb2UtdCmMktJD65Fta9LEZv0gAnPun339YUsrw/
YnhpPjQdPT3WArMK7HOqfAKn+iSZqr6AOV6Oab3qgzN3qe23G4B5wnJEZr/A
ZmWHrjWOhVDqSUvzzf45rugf8AeG/KTDP2E+qaNruGfga+dLZwsW4e3Da77u
pw+l+iRr9Qk6RjhP3qa3bT38xWGDbtqGUGp/FbrQ8MiMDd6t4XEjcDss/mdn
2FUS7LajZ95+H1xxOMRDcn8oZT2STPz0Fxubk4fJBf1WD5XgqpX7jhhowjIm
SYqfD//n+TFSDY5HYdGa17K/jsNCX/2rfU1hAQ4BMq1FKLU9c3g67GG1g9e9
rBDkd4Z/xytzKfjBA5rda81i4Kf0Jxd9MuDbTdMTGXlwyeRFJ74COJ9PfvRm
MXxNd9BWrDx0ef48vZSvBkR8qqqEk/o7+lvq4AhZjlfdTbBRhXQdywd4t4hx
jvY8LGi0yNO9CPNHXbtosjKMOv7xVKuxf1oFsw+PJjusgRlVSHHnWOB/V33D
ozjgr2brvPN2wF1clx2aSTBZZ/f50/vh9JC6UlZl+DEPreKwGjxbpdlVowmL
HE62Pq8Dm4y9/mVxJIyy/r/U3g1mZUot4aF69sC/rjCboTnLizOw2uSNq7ne
YZT9CGTibOx3SW8/OH+HVLNWEMxo3Dw8FQk7xeuvyUyAO5sGdylegCVn3HS+
ZsPWSTUf6q7h/afuWuGWkAe3tGistC6Af59ITNlbAh9P3Vr17g5c21rSF3YP
HrP6bX/8wX/u598D87taYJ0L4XH/WsOo7S1Qon3LyzZYJXPMir8fZqBlzHcZ
g2UuH5ZR/gE77Lv4lP1nGLU/XXoxYDL6G247LfT93hwsmlPNfHJlONVJ3WqS
6xjhJuf4hx/Ww78YXhnc3gDvuL5lOIINPnbg5FljrnBqe77r9uviCn6YOy+0
Pl8I/vGBZqRdDG7mCmD7uRcuqaovDJeFL+rPK3LKw2ETMn0FiuGU/TpShPN5
b+cDqjDnCo/Hkfpw0xknvi5L2F7ZMGw+M5yyP0uKYK0+/E71Flwvor03sRrO
exzTJlAXvhz/+KWIJJsnVncaYL8VDH/Um2DbbLWENy3w/r6Hdf/aYBZWxa/b
u+G5ksCA6l74s1bDJs23cOfXhYL+93Bt+H5Fl8Hw5fFbVIpIuH/XKXUEtvkj
lVkzAcuQbj96PwMzOYn/pP0Hz65xiU5fGUH1p7zircL0cIfytzt1ayIo9eul
+cuAiLbOenhc4Uu73mZ4x5XruvrC8FQV68TL3XBjR3CigXjEcn88IEXED0+I
95Bg08UTL47ug2f2yLMaysPJZjz6x1XhPefnUoy04db6vm5jfTi9W93z7THY
+lsVm6lxBGU/rRQhTidY1W8GL25OO2ZmCZN9D/edcIFPv1lvbOUPS0/5zQ0G
4froGb9lWofB3fwm+4ci4WsyT9/axMIH7PN5bJPhvowIM7uLsEerTfapHJhp
VumD/U24n7kicLQA9+vWTn6+0yWwl0Ji41g5rGL4z8LxDvwh4t1Vp3rYp6pu
0PkhrNEhEvrjEcw+fHGb61N46C9D80Q7XM7mbeP2ImJ5viIkRXw9Qx72+ADz
dk/YeX2HBQxptyhPwoJv2LqYp2ERM6HI/tkIyv5QKUJsQFbu1gIsPXwiT4ku
kmriWxhL/1r44NQtH8+N8JHZjiGmzfAx348X3/LCxos/dfIFIin7QaUI82B6
Ok9B2JqOq0ZRBHZklN/2VgI+w2J9/owM7J3iqaR4APZnj5pZrwiHXMwseqMC
R/AUW97UiFxeH9gkRVwQmpF6YwjnkxUZ19vBRdX69187wOWytmfynOGqe97C
Hu6Ry/UrxqXxg4h9r+AFN6mVabz2h59p91S4h8PdR+Z41p2H+49vjbyRCg+8
lZBzz4ikjq+fzVUm5bPg0Y/H8tbmwOM29iZ91+HfDvEtboXwP9fbYmtvw3S/
WoZ6q2CGs30Xc2vhdXOjOm4NMIv/X1r5pkhqficQrd7n+gImpSUVXR+AJ7gv
2YoNwSU5uXx1X2BHwZI3amORmP8UVad2jcM3qp8yjE7DfA/f+a34C2d1TExw
0kVRzfGG9qT4Wrj7xPqt9Uxw8mf21+qsUdT4qneaL+UlG8w0KXzoBBdMx6An
Fb8Tnuf12nJPCr6bG9irIRNFzR+8RKKTuuVgclmylgUBT0llrfqmDDsplp6j
1YK/ajd95z4C53U9u5l3FLY+3mMpaQTzvX+/ucEUfm/9teegRRS1PmLsMn/Q
0g7u8WFq8HaG9SL4JRM94bYkct5NPziGQ96CFASrX1bnvh8K02073K0ZCTfl
G8e/iomi7JcgEzX3g7xWXYTLXuWZk2/CzqZlnI0F8K7Bmi6tEvir3cO43vIo
aj0t73ubmvUdWODPh1qfevgy3U/R5IdwxLB2m+Iz2Lk1z36yC7aq0Zd+8go2
LKBZffVNFGX/C5nQvlTc4/0eJuKMc/UGYVY9pg+lk/DQxiYu5hXRVFf1eho4
s8CRl4QT2rfCfnGvzG5sg139Q3f774RtnMXnDXZFU+uTx0+8e7JbDFZU3GfX
vxcW2ZZEFycPb1w1dnW/GrwwrKIwdgie6J1c//BwNPX6h1qz+zOPwn01WoXu
RnB7wew5TTO4Ku4Ix5wNnO1cVHnLEU4+YRQa7ApH6tEfMToD+yne5pPwjqbW
L10lLX4w+MFKvzeKnIqFN9Y+tnmcCTMUniFdyYYXLvGvPHstmrL/cun64jo6
dfLgIX/fK4IFcPuJHrlX5XCVotib8Bo4vnjdba178Emu0dgND2C58Mc2vc3w
psncA5dbo6n1nIetJ34IdcLuOdxXK3thfu+eI8QHuFM3ka5tGM6vc3qXNAoH
7tSqMhyHj6UIJWyZiqbs913KP/6tOvVpGo4r8X02RxdD9ajZpCjrJrjpScfq
Pg74olTRwOXNMdT8x/VqdI31VlhjvV2y8DZ4dohf5Y4IfLO+f5qQhAOEajvo
98LHUi/cbJOBRWk8g5IPwPSOR4yOK8ZQ89c7yuvXDmnANptb61304I0/Q5zn
DeGmpwf4Ik/AmXs3/9G2ht2uzb5gtYM1mF4V9DnEUOuFfD63Q7Od4QBh4S93
/OH+vmzN9ji4UsVvW0piDDVex5YZLRxPha149vXwZsCyUZtKhi7BIyeen3C9
Dmfsi9mwUAAL55n/CCqBazeR2ldVwFqhqwtj7sD9k2+jmGtiqPOdxY4wFa5G
eGvRHpptj2Ei+lXd7g7Yyjbw7N4e+Ge3/tG6PjhMWYhE9MNsFQssLR/gPL4X
4wc/xVDzqdE3ArZmk/CetDPvXP/BDbQH66ZXxlKt477log89/GFg0uvfmljq
fNVV95FB2Ho4ebcLS/wmuHINZ9uFzfCr4cbIqwLw7EN75UJhOFpSnl98D8x9
lfVfpXgs5XybFFHA/KVfhgzvD6irbdgHB0ivl+xShZumzG991of1LUmRDobw
0PPVJ38Yxy7n21JL81n5fqUz5vCq4jK+P5awYIxR/0p7WMNuZcY6V9hBpVCf
/Swcx2/AzBcAb0kU+p4bHEvZP7E0/1pceCocDss7vcgviYKfv70RQYqDzRPS
TvekwONK4XpnL8FVPH+VNK7A/r/PSHFdh1U6v+0czYPXFdhw1xXEUvZPLeUf
G1SGFmtgDe9tJUpPYJYjl3I2tsO9uzamDHXGUs4TSxHZq2LD73TDth9Wekf0
wb+Tp0yFBuBwtUHFp1/gTXMvBB1/wLnFD9YyzcCOkTKL7+dil9u30dL81rJ8
onQRnpMV/hS0Mo7qpk1Xew7Tw4dbE2t/rocHfIOupLHB+Udnk2y5YFcx17B9
W2DpNV+9GPjjKPtBlubvgyfsX2+HeTUVSFvIsFw5718LZZguNv2HhDr8zIZp
cKVW3HL+YrDUf+Qjul/qwMaci49yj8Ajz74XqhnD3oHvEr9awoTR0dCak/Bq
UrtnjD3csU71lIkTnD5cb7zbLY6yv2apfWcWKXR4w3cOZW13DYKr6H02JkbC
d+8briyLh2WyHv1RSIZrvaUmn6fB+4/mfj1xMY5y3luKqJfYOPAjC2683nFP
rBBuZou55FIDq07NJv+rhx912MUkNMZR26N64avgrc1wa6TqudLH8FNi26nn
HXDbHxrDHz1w5+l6stgQ/PLdWVaXKfiVLmmihOY81W8ejLePM8Em2WYtAazn
Kee1l8Z/n7Z6JnbYzHB/ZTYX/J5UUCi6BR74Fpmpsx0evHEy2nkXbB3SHbQo
Cg+ZK3vHS8In91e48O6Fhzn47UpkzlPrQV87F492EPBodL/KuDr8TamWxKQL
j89fEBA9Brv00XM3GMETlZ4bdMxg16QhhvcW5ynnnaWISSd9GmcbOORZJ72t
O8wqrLPePAj2CvrO1B8Kv+mNYzGOhOXFdrP2xZynxodrEc82HouHHaQYOY6k
wZJDGtw6WbCHsTxZtPs8tf7RV/5OqqgXllvjv0/k7XlqPSHHgkcm/z1Md7dO
VnAQbrOdOyAwAqeyySjyTsCmzWdVuGfg7R5V6uyLcNTTowdTV8RTzpMuff78
05qsq2C9c6naiQxwZSdJh2kdrCJabkDPDXfHipos7oSlP7Wb+u2Kp85HsmSd
zOdEYZrkdRbekrDNSKHlbyl4d8aozZQcPK0mfGpcGU5c4xhwVx0WaStJDdGC
W+InC7R1YYvD5Afs+vHU+kX6q5rvBcZwm4kCt4IVvPJjs9pLe3ifraaHnRvc
JXQ+WsITdhx7fmXeO566/rG6hLWqxQ++5nq0LSEIXu9rseNuAuwdfjpgIBve
qFGSWnAtHutpjJMFZ/JgjXbSA/kC+FOCVy9DCczJtkB7+Q6skxksLnEPHjFt
VptvhMO2rjZraYZ5Bw96JLTGU+sJNblx0UZt8Lgwa9X3l/D20guDwW9hY/IW
ZvZPcGLNtf0Fo/Auv8+Hz4zDj+SFTslPxVPXfy1WnA5g+A3PPyxO7foDix8k
PbBdkUC1bcfd73MM8IqkedqWdXCWvjx3Agu8jz1Y3GgT3NX3UG0bZwI1/znw
qeOK1k44//vrWY+98ELFxk1/ZWA970NiEQfg3AORmsyKCdT139mVD05mqMA5
58lZBVrwQc78rvoj8NS1zWueG8GZexIUPlrA41Otxg42sNLdlV4/7eB0f7kk
v9MJ1PxmVMmraJULLHvcjEvEH451UonQiYUHJAOu9sbD5NnqeovkBGq9Lure
ZO9IGtwfsuun+0U4bP0V4fAceHcGq8WFm3C3QET6rRLYr/hPW90duNOd9FWl
JmE5nqxcGr+knWg76mHvv3m8ho1we9OAzMBD2Pl7yUbhgQRqfnb86g1rs3WJ
1PHg04uQFEkW2HmlxcPVm+DKTB2TKTb4j+SBn/0csPyzXbGPuRKp412YNfe2
is1wZnN3iOk2uHRHwiD9LvjXPX+fyd2J1PFY9pgja78oHDhuXPBIHG6OOKhU
LgnrVgu6R+yF33yhvWYiC/MFTcmoycEnOT++EJeHC8qe228mEinnPZbiqUbD
Cnol2PfcJYm3qjB9gbdl2UE46c3RpPBDMM9a0gPjw7DldX4jVX04bz/LpNjR
RMp+9KV483IxitsQlnD8zrfKCK7Peqr3xhRWa78ZVGoBx51M58y0gl/8DSsL
s4HZ0z00XGxhU1GrAaNTidT1E/cEHoLOFY6aeHWl5CzcEdWy7+I5eCN/5fNQ
X/h4zTU7Z/9E6vpU9uGkf8cDYaEQZzHRUPh2hdYJ2kh49vPW1AsxsBzXr9Zd
8fB7SfNP0wlwkHbr3/tJicvxRl2KELCV5IxJgZsDsyQN0mDtYZUsvyy4W/v7
qhvXYS9bQz6XG4nU+Thn0ANZmZtw7cVdR2lvwaa301zaC+CcYftcyxL4M5f8
6+lyOIqU//P+bVjkECtTzB24zdZPyKAadg4aVuKtSaTsR5ciKm7Xnq2oh38P
xxepNcKy3NYf3zyEAw7tY3d5DPPZXRWXeQI3Ba3Von0G22R6nmxvS1yuL1gu
5SuVHwIvdMCJ3FEj93tgzmBx/a/9cG1mplPFe9i0ki7KbyBxOZ7YShGL7c7X
1AbhnC999SxD8BB38WTuF1hIJ1hQZgx2DD5q0j4Ol1UKJ1pOwUc6Ugp2/Upc
rie4Lo0nX/42T0/D6StOfbg/A8ts7voT/QeOOvv2bDxNEtWvXg5NJ6+GR0Xs
2AzWJC3PBzyWrid4hMy2FmZ9fdrg1Tp4h/i4xwUmWPv9VAUXK3wmbmbyEhvc
9JXGNYcH3qDKOJ67DZb+ybRn507Y4upGx1si//l9s2mxDrvhSF3Owl2icGZe
5tNvYnDJX57RYokkynkBKWLBSPBUhTSsVSU2XKUAm6+vWOWtCLvbkHfIKMMR
dVUqcypJy/OXU0v/H6uMTZ0a/KDxwPUDmvBXZ6XB+4dgli3q/EqH4X3PtCya
DWBNgY7A8GOw+Tm9K2rHkyjnJ5beT2dXw2pjOGLn0fetJnB3qLlpuxW8bcDu
zQt7uOvbfrqa03DIH2bRHKckanuWoB8yjHSBB1jvBju7wfK7LXrkPOEsVQbh
tedgrSP9R6Z84DnzMr/XfvCt02F5jQHwce/jnTeDkpbjhelSvp9Es90rDN5U
mH9WJQp2b9Z7xhoHd76b5f2YAAeOtmm0JsGiMznupSnwO1rPrPS0JGp9JY7l
4CP/C7CG8kUn7iswndfIpuo8+HbIPfns/CRqfcgqIelUeAG8IetksmMR3Jgv
U69fAvM2fWQWqID93kZbT9yBd301O99bDb/5JVHdUANHr6D/eKMOlmZ6w3j+
XhK1PpG+M8Tc5AH8ixCpEG6Bjxh3rZpthcs8fIwetcEngnRCiztgpvMCxamd
SZTvl5Mi7l38/cq3C3bMe0pj3Q0LvebO//cWHlp7WjfrEzxxsXbe6nMSdX/F
wk7GfOEvMEOVkcHEV3ijyi2a6lFYxELDSGUcVvL7Uv5iEtZh3Gee8RM2yohg
PDEN2wi+qtoxA7tW7rD+NptEOa+2ND52NtedW4CvfLPetJommeoqBlqnVFq4
Y/u1Fv7V8JuKSbevDPBnQpG3lBGe6Eh86rkumVovXzAd8JJjgnel8QoZssHG
7aav3XhgW5OicGle2H1kXuLfVjjgrNb7Fv5k6nwzetWlmLhtcA6/7CeunfDd
A6/33xSBnxt5p5JF4WFPju8PJOApWruLUSR4MalKVVcqmTp/Z+Sjn2LbB7OV
HM3ul4ZVhlN0ZxRgd94uGlZ1OKCIv7hPI5maT8XIuhld0YTTWxtX2WrDV4+x
VOzWge+6lzLWHoY743Ws1Y/CZ7t+cJENYV72pE4+I7jFSDJyvQnsePnlgTnT
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235755#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwdjH1QE2QAxmdIkhhCRxRKdDpGgjg2xstEkJ75ATZkfFgNBWICxhAZOETW
nMMPxuRrjMHe6hpSGIM4IqdJjLAkDYWjC1HzGk2BJp4UahgnqBdRz91zvz+e
+z2rMvKT9jzHYDD4C/2PPbYrZ9p3qcH4P36Q+eTrjzJLIBI2Lf47zw8dOVcu
GDVH4ChWnrotZ0H5yPvx2pyjcIm6VmyT+GNGGP3u5fRjKHUytjhS30B4Sq3g
TuJx3PO9NHVCtAbD3g17L/FKEacoH58JDMAK8/Ge1jUa/FBhLrR4BqJrNHC7
6MUyFDSqJp+fDITv9YfZB6fKkLXulsnYuRY8Y237qVEtVvdHWmJrgtCw+BHb
cPEE3LZ+EtH99jp0CoJtGms5NDt/1KpYbHzEr/B41laBuTdFQv4UGz+PNJfx
qirR4uMk/rMpGOfiTH4FR6rgtks1aOZy8FfeDoYsqxqVfPkNcTkHM9EB0vub
dThfJ/RJt3PQOvXrbGFYDUayuWxVGBfJnzVnpi3TQxFjmO7VcnH2TGy6k1YP
3Usuxb/YuQhfOTxXPqfHHy4uPqlBIWCOZtuu5tTCGHmd+XlxCByuufGm32th
HYjcmX85BEM6UWbMOwbwEi96stx5qFc0uhYNGdB66HGhZxoPPd/Nz2W+VQd9
BHP1T2YelqdCy+uuQ3uv+sGzezyES+63akLrkTle4hzADYXuW1VOl7kemqIl
DHd5KGIKVxS0exkRNVvHiTkdipu1LFem3ogLDmHphulQGJZ4bFUuophvCPpH
zCbombanHHCi6DBuNO0OJrhrb5PLnCnSqkUbcjkEkV9v+TTjBYrlRXuth0MI
JiSKp0IPisKDLU8awwgium9bVq6i+O1De99YFIFjX4fveVC0CUb8E+MJ3JIP
kW82UXx/a+SkOIEgfPO27ZYtFOp4pTUtkUDnPf5B8zYKr5S0eukOgvV9L9+o
TqCIljOFajFB9euHK9+TUMRt/DKxOZ2ga6mwKTmDIiHj5LkvJATjM17WpCyK
JG2Nd8fuBX/w9ES0lEJ8df9YZ+bCrnAIggso+E/2C/qyCZZlWZID5BSMjIem
fikBP16dzzxAMdAvmx3MIahivdrwioIi9ePcr67lEnS63znroaTwXzS59OY+
grGnlgFXFcUDqfR9W97C3131mLOawjo00WuXEYQNx87Ol1AcW7/ntbF8gn8B
5hSFjw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235755#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 10.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 10.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"SZGK, Wed 6 Dec 2023\"", TraditionalForm], 
     PlotRange -> {All, {10, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{0, -100}, {5, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{5, -100}, {10, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{10, -100}, {15, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{15, -100}, {20, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{20, -100}, {25, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{25, -100}, {30, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{30, -100}, {35, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{35, -100}, {40, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{40, -100}, {45, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{45, -100}, {50, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{50, -100}, {55, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{55, -100}, {60, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{60, -100}, {65, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{65, -100}, {70, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{70, -100}, {75, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{75, -100}, {80, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{80, -100}, {85, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{85, -100}, {90, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{90, -100}, {95, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{95, -100}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{100, -100}, {105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{105, -100}, {110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{110, -100}, {115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{115, -100}, {120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{120, -100}, {125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{125, -100}, {130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{130, -100}, {135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{135, -100}, {140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{140, -100}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{145, -100}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{150, -100}, {155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{155, -100}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{160, -100}, {165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{165, -100}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{170, -100}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{175, -100}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{180, -100}, {185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{185, -100}, {190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{190, -100}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{195, -100}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{200, -100}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{205, -100}, {210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{210, -100}, {215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{215, -100}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{220, -100}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1145, -100}, {1150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1150, -100}, {1155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1155, -100}, {1160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1160, -100}, {1165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1165, -100}, {1170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1170, -100}, {1175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1175, -100}, {1180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1180, -100}, {1185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1185, -100}, {1190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1190, -100}, {1195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1195, -100}, {1200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1200, -100}, {1205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1205, -100}, {1210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1210, -100}, {1215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1215, -100}, {1220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1220, -100}, {1225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1225, -100}, {1230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1230, -100}, {1235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1235, -100}, {1240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1240, -100}, {1245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1245, -100}, {1250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1250, -100}, {1255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1255, -100}, {1260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1260, -100}, {1265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1265, -100}, {1270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1270, -100}, {1275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1275, -100}, {1280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1280, -100}, {1285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1285, -100}, {1290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1290, -100}, {1295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1295, -100}, {1300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1300, -100}, {1305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1305, -100}, {1310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1310, -100}, {1315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1315, -100}, {1320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1320, -100}, {1325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1325, -100}, {1330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1330, -100}, {1335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1335, -100}, {1340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1340, -100}, {1345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1345, -100}, {1350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1350, -100}, {1355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1355, -100}, {1360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1360, -100}, {1365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1365, -100}, {1370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1370, -100}, {1375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1375, -100}, {1380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1380, -100}, {1385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1385, -100}, {1390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1390, -100}, {1395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1395, -100}, {1400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1400, -100}, {1405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1405, -100}, {1410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1410, -100}, {1415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1415, -100}, {1420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1420, -100}, {1425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1425, -100}, {1430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1430, -100}, {1435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1435, -100}, {1440, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxN03s0FHgUB/ARRZ5rSxJxSMprKHl1xEhGjzErldDkMYgZjPd45/0Wxo6S
RDTs7IbKo9gyW15ZxOxgd4dEGq2IpViUats9/G73nO+553PO95/7x1UlB9h7
bcBgMLe/5L8d1Ivdc5/7yRzz/+zB+RiN9kxZ6eDWvdjaPzppZYbMmnhPPxhq
i3zaW0L3+IszyIpquXFZAhKyTkWo5AcLMvKrLALWcZMnclmwul1DjxeyQO2y
+WHxC8ga/aK6fTZgYwuWz/6z4KO3cKyCC2BH+ZHR5TAwJSlSkZSybk1c5rna
fDUWuMpgevPrFvB+Zu+rDebeyI0Ld1uVmsBtDRGxdrd9kLl0C+PkCgpyBFW8
dS7dF1nVZZB43s8fWWeSo/eABTYKZn+jMAJuGhhP158GmxnvFDq6AuZcPRvp
KkpbszbOcpUxT5cD4x9vGq/YByakRvMGbMHuRURmHgdMr1F1IOgFINtNv3zj
LhaI7PX5Xs3OSLD5ovG5Iv8gZPnpRlF5cjBysYpQe8lFsNrpY4ka18BetBk3
6o9gdjrDouY+uKvgJZbLAU+XGyq/bV+3Lk7yTprU1qdgbDN/1XAAfFCDGm4t
FYKMz30/fxoPPu+u+FdIIzjUwOxZvlYosm9esf0p8TBk8sxq55YpsGRjt367
Bh25IbGokO4BFicx2yV9wW6GOW/Lg7/qS6ermEZ91Z9MIPQlrFsPV18UVvkh
D+xiS8HsvQGuq7Wrj+eAxbab+PCfgZ2rB43NHMKRqw+HiJb2gdmKAYLdtRHI
rAXq4ypmJDKxZKxFhgdesXFoC5aJQvasrUvuVgb3Kslaq2PBIjyLCq4h2DSN
tjH2EJhmdt1L03rN8fo41nx3+yABHNmRik/zBROvWT4xyQTfnNXp+iQSjbxs
uf1pWxyYWibl2h8YgzyCEZ5/4R6LbJc8J5ArAreIPv/zGA9c4sMfdBgDR/86
wPOYBU9F2p+kLoIdtbh9gavgjiFbYrjwxTXvwx3I6u6JFQfPEFo6rmiAK6Wb
Ht09DM6UY7IV6sA0pYC8hF1xyG8/xB25JRGPXEPpfFSQAp4syk8TKwer9pCI
0RwwR/D4bn0P2PmjhtzsEDjBCkOLeQ5mZ/A7xMfXvR/H7atVuToBXpLLjtjz
GowvN9c6MgdmYueH3ZbAoowUCl4/ATnqncKSNgVsonKnMlIAXjyOd3jimohs
eo5hOXEyCZmncJ3aZpCMvKMy6SF7bwpy45gWgSiViqw8MOdNnwEbFDCqbo6l
IV8XeYfNb01HvmepN5TSlIFcaJwpu/pTJnLfcEWqQXYWcoNtsXpgfDbyvP8p
DM3zEtyD1/SZtcpBZs/wl0OMcpEdyyo8zkvmIdfVnnAVTgObKvJWMlbANR+V
pqr3MZB3jXkP/UYBb73FDj+SDhahv956vxIcM5zhMdcAXsBp1Wq2g+2deRuX
O8F3QqKcOnrArvHEpOpesPQltWomd81f/r356j+/R/PAfpVdGI8B8F7+Dvbn
YbBAwve74pdg56ckfpBSPjI3h+hhcwbMjCiVCOOCH3I+r3gc+x5ZhoRLM/gZ
rO4iX0haApu6zbJTDjCRpZdknb49CRZcMtxc6g8mOtm4T0SDm9SdmrQzwTRx
8gSRAVafo8oGF4I/kQN+EC4G8wdDDhWUgvEydDGXsnXr4uqPRvRr3ASrJkaV
/M0C5zyIoTRWgqlXuv1qn4NtQnYEVm0rQJ4+OLJN3BCcu+FGs/cpsPsFIcZl
Mtigi+zZHgRWitnSS4oEb8S2GS/Eg9+nFr/5JRk8OxpalpUO9pF8ER2UCR43
sXU4mw0meTXpH8oB/8HYLbErb93auHqCIru3E5wvKmsdJXQZWeBXo9yMAxvx
Tix/jgP/C9s//K8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235953#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$427235953#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxN1Xs0FHgUB/ARReO1tiQRh6SIoSavjhjJ6MGsVEKTxyAMxnu8834LY0dJ
Ihp2dkM1KLbMllcWMTvYXSTSaEUsxaKUbffwu91zvueezznff+5fV4Xib+ux
AYPB3PmS/3ZgN27PA95nE8z/o0Hw0h/pmjTXIqx7obl3ZMLcGJk1/oF+KMQa
+YynuPaJl2eRFVRzYjMFZGSt8hCJj6YU5NeZVjj7Te7IpUFqNnVdHsgC1Ssm
R7AXkdV7RbV7LMEGpiyvA+fAx24TWPkXwfZywyNLoWDvxAgFcvK69xEyznPy
VFngSvzU5jdN4APM7tcbTDyR6+fvNSs2gFvqwmNs7ngh8+imBknl3sjhVGzz
bJoPsopTP+mCrx+y1gRX5yELrB/E/kZ+GNzQN5amOwU2NtgpdGwZzL12LsJZ
lLZmbYLZCmOOLgsmPtk0Vr4fbJUSxe+zBrsWkpi5XDC9WsXOSscf2Wbq1VtX
sQBkj9X71TsjwCYLBucL/QKR5abqReUoQchFykKtxZfAqmeOJ6hfB3vQpl2o
P4LZaQzT6gfgjvxXOB4XPFWmp/Sudd06BIm7qZJbn4FxjQMren3gQ+rUMAvJ
YGRizoe5M0TwBVeFv4LrwSF44+d5miHIPrlFtqexociU6ZX2LZNgifpO3VZ1
OnJdQmEB3Q2MJTNbJXzALnrZ78qCvupLpSkbRX7Vn4i36olfc5wuobYwtOJj
LtjJ2huz9ya4hmNTG8cFi2039Bp4Dnas6jcwtgtDrjoSLFrSA2Yr+At2c8KR
WfPUJ5XMCGRS8WiTNB+8bGnXEiQdiezOqUnqVAJ3K8pYqOHAInzTcp4e2CiV
tjHmMJhmfMNDw2Ld+wmsuc7WfitwRFsKMdUHTLpu9tQwA3xrRqvjs0gU8pLZ
9mctsWBqqaRzb0A08jBGeO6lawyyTdKsQLYQ3CT64s/jfHCx10C/3Sg46tc+
vtsMeDLC9hR1AWyvyesJWAG3DVqTwoQvrfkA4WBmZ1cMFjxt1dR2VR1cIdXw
+N4RcIYsky1fA6Yp+ufG74pFfvcx9uht8Tjkau/2x/nJ4InCvFSxMrBKF5kU
xQVzBU/u1XaBHT+py84MguPNMbToF2B2+kAbdmzdeAKvh6N8bRy8KJsVvucN
mFhmonl0FszEzQ25LIJFGcneRN145Mj38ov7vMGGyncrIgTghRNEu6fOCchG
5xlm46cSkfnyN6gt+CTkHRWJj9h7k5HrRzWtSJIpyEp9s570aTA+n1F5azQV
+YbIe1xecxryfTOdweSGdOQCgwyZlZ8ykHuGylPwWZnIddZFagFxWchzfqcx
NPfLcA9Rw2vGPBuZPT2wFKyfg2xfWu52QSIXuYZz0lk4FWykwF9OXwZXf1Kc
rNrPQN416jn4mzd462122NE0sAj9zdYHFeDooXS32TrwPEGTo9EKtnXkb1xq
B98NjnRo6wI7x5ESq7rBUpdVq5i8desSGq/983sUH+xb0YFx6wPvHdjBXh0C
C8R9vit6BXZ8Rh4IVMxD5mWT3CzPgpnhJeKhPPAj7uqy2/HvkaXJhFT8z2A1
J7kC8iLYyGWGnXyQiSy1KOPw7Smw4LLe5hI/MMnB0nU8Ctyg5tCwLwNMw1LG
SQyw2ixVJqgA/Jni/4NwEXigP/hwfgmYKE0Xcypd85f/UHssvFf9FlglIbL4
bxY4+2G0d30FmHq105fzAmwZvCOgcls+8tSh4W1YPXDOhpuNnqfBrheFGFco
YHwHxb01EKwYvaWbHAHeiGsxmI8Df0gpevtLEnhmJKQ0Mw3sJfEyKjADPGZo
bXcuC0z2aNA9nA3+g7FbfFfuurUJtVYK7O52cJ6ojEWk0BVkgW+1UiMBrM8/
ubQaC/4XlQsPOw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235953#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
CVVw3pOotm33Q5fj5Z+l62P71LriAexLy/hbswG2z9KIf90E7+l7dP9vG7ye
VXlEsBueKwnwr+qFP2k/YDvwBu4cWSjofwfXhO5RPvMRny/+n3tOKaOw7W/Z
jOpJWJ589/G7XzCzk9R3+r/w7OozkWl0YVQP5hVvFVkJd6h+qbi/Omw5PsyS
iXsDojq66+CJfZ/b9TbD27OvHzIQgacrWSdf7ITrOwITDKXw+nHDk1I9ZNh0
0eL5kd3wL3El1mNKcJIZj8FxdVg8di7ZSAduru3rNjaA07o1Pd4chW2+VG4y
NQ6jnk8pBqHKfjN4cXPqUTMrWMZHv8/iDHz69Tpjaz9Ybtp37uOFMGp/XMn0
JcMmBO7mN9kzFA5fk295YxsN7z2Vz2OfBPelh5mduAQzz6q8P3UTVjv219Kx
An4f9vaqUy3sXXn/o/MjWKtDNPjbY5h9+JKASws89IexcbIdLt3kZXv2edhy
vvF96X7nLjPs9h7m7Z484fkV3naMfovqFCz0elMXywwsaiYc3j8bRo0PkgMK
ircWYLlhizwVhnCqiS8h6/vXwIdnO4aYN8M2DFzVyqKwI5OSwBtp2H29Tay7
POyV7KGivBf2Y4/4tU4ZDrqUUfRaDQ7jKba6qRVOWc9YimfCv2RfH4PzZZSZ
1p2Ai6oM/nnlAJcq2LvnOcOVdV4ibq7hy/nCh6XxS0S/2+cJN2jc0XrlB7fq
9JS5hsLdh+d41sbC/ce3ht9IgQfeSCu6podT1m+W4oe52pRSJjz24Wjemhx4
wvaUSd91+KdDXNPZQvivy13JNXdhhh9NQ72VMOO5vku5NfDauTHdsw/g9X5/
6JUawon/Tdc8W+ofkZp9Ls9hcmpi0fUBeJL7sr3kEFySk8t3/zPsKFTyWmM8
nFJvL/WnoqqUrgn4RlUL49gMzPforS/tHzizY3KSkyGCao7X9HZSa+Bui3Vb
a5nhpE/srzRZIyjrL2RC7zRf8otNMPOUyEELLpiBUU82bgc8z+u5pU4Wvpcb
0KslH0GZfyETnqKRid2KsMydJG1LAp6WzVzxRRV2Ur59nl4bHtFp+Mp9GM7r
ar2ZdwS2Od5jRTKC+d692/zAFH5nM9Kz3zJi+fzGkwnjM/P7rU7APd7MD7yc
4YZ847iXURHL+VoQmaj+54LnikvwnZd55jI3YWfTO5z1BbDYx+ou7RJ45MSj
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
A76ssCDFywWXJPrrveeGG0ZoXHJ4Eqn1w1jaitvb+OAN6kwTuQKw3Hdm8R07
YMurGx1vicLus6nRDjvh8EOchWIScEZeRssXSbjkD89YsXQitX7SrpQcrtwH
jzirfPznILx+iya/ij68u1XbstEQPrCtIyD0KGx+Xi9b43gitd5z7ex6sMoY
Dttx5F2zCdwdbG7abg0LDJx4/fwUnKnOKLLmPMxWmH9OLeI/r9+o18oaA3e+
neX9EA8HjLVpNSfCEr9yXG8nw2/pPTLTUhOp9VfM+v2P/S7CWqqXnLizYQbP
UbaqPPhuUJ1SVn4itV6yjk88GVoAb8i0S3Isguvz5WsNSmDehg8s28pg3zeR
NpMVsNiIWWxvFfz6h3TVg2o4knblhxv3YTnm10yxdYnU8Z22I8jc5CH8gxAt
E2mCDxt3rZhthu+4eRs9boMtLugGF3fAzLHbilM6E7E/8NLPlz5dsGNeC41N
Nyz8ijv/7xt4aM3pQ5mD8OSlmnnrT4mU72uQiYUdTPkin2HGSiPDyRF4o9ot
mqoxWNRSy0htAlbx/Vz6fArWZdptnv4dNkoPY7KYgW2FXlZu/wW7lG+3+TKb
uJwfbVga352N988vwNlfbNhW0SRRXclI75RCD3cIXmviXwW/Lps6O8IIfyKU
eW8zwZMdCS0ea5OW55dWLbXfdMBTkRkWS+UVPrYJNm43fXWWB7Y3KQqV44Vd
R+el/26F/c9pv2viT6LsByARkSsuR8UIwDn8CoNcO+B7e1/tuSkKbyo5ktUv
l0S9f3bG6dpoHkmi7M8hEee6vnHJHIN52RM7+YzgJiNS+DoT2PHKi71zpknU
fKJGkL3whSXMWHScs9gWPkq+HBp2Es6teTtt4QhrL/rf0nGGp5X5LOVdKO1/
spQvhT5kF3KFlZ9at7O6w+96P99s8oG9hx2DvIJhflFmebtQSvvvkohmp9vf
9MPhM6V6eUqRMPvMlKlYNGzrK9PCEA+X0Z/b/S4JNtLknGhJgWmiq3Or0uCb
HcYmuelJlPXRpXqPdWFDYgaceUkpwCELHuML/KJ6DZbLf2S0JQ8Ok1z55Oct
WNztpt9gIdxdqSXTWZxE+X8mS/n83OhY7W1YQCn66q1S2LWpnTm4Aq7XWe9r
Wg2fSCgl7b8PM3cfHpWtgys4fmRv+wc2NUk9yvIwaTneOC/VV6e4pRua4RSv
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
bqECgwpYL4h5FVcVrGAUVDH/H/8fOyP3BA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235953#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwdj30s1HEAxi9HpTvVtXAoNJQ7efn9iNPL9sh7dCdWu41ycxS9YJLpBZXQ
eeuOu28tWm8j6WUdhaTL5mrtSnTTvFzqSHpvvaw6yaSe7dnnj2f7bM+ypIzY
FDMGg0HN9B89tuiE2rJjYPyPK+zrCzsa3IugfFG74EuBK9qM/GihVTEEJ0Yj
cgLc4Nj3ZUfOp2LEa2jdhbdu8FUprl40lkDU9GDWvbrlOGP+3auq6zhkz2dX
i+NWoCXIe6jotgxWSoV2G9sdpwJKOX8aS7GEqx03atzRY6gr9i0vw5FN3ahJ
4uHWxlrXzMPl6D4l4IVx+Pi6J46RnlyBSFWPXK3m40cYL/VzcCWC650sC6M9
0PBp0LTX/wRUgqmh5189ID5fJ93KlkPE2rm5RbYSzU1RicwSOQYGuZnNHp4I
dNBPyCbkOP3RiSXr9ISLccfQ0zQF2mWXLvvHeGGMtUtU+0qB1NW6+JPvvNBb
KZSGb66CX6M8MS3HG8rcs6x9vVVo+PabHTrbBx2a6QlpZDUMoUs/3BX6YEEC
Snzbq9E31zgcovBBoORzQ5GfEvd/b53CgA8q7xxKa6tX4rUt//g+Owrhe+0z
r9qowJEptdvFFPoVbiwXuQp+ZbH9p2soVM3hhB6YRZD60tJaNEih49twfDaT
gH1OXysZovBmuDEr3YJALalxzTJQWHsz5FySJUGzVH9NOUxhXJI7uYFDEGDG
fNI/QmFN+0u1wzKCHE2Mc8J7CmO7rzveBYEuzyFxyySF+eKDq1rXE7RFBl1O
+UMhMDgiWh1CIOU/vJE9RaHSbnR/XQRBhVbzUDFNQfDA+llFDMGo6YrpEZNG
hVNe2TYJQVjnpVXr2DTa5m24IE4iKDBMMaOsaIz+sLkdm0zQ+jNOL55PQ/D4
xnhYKgHfk5GRvXBmzx0L8s4k6HI05zYupsFOVot5WQRXfgXyWq1pBIjyM1yy
CZS9Gau1NjTK3bhnbHMJUo4aEl5wabQsfN3MOUAgjOekf7CjMTKp1rEOzfz3
Cy8w2c/43uSPWOQTOFvlyS2W0PDXR5mmCwjmjjedX7SUxl+qt1m9
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235953#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 10.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 10.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"G\[OAcute]lyairoda, Wed 6 Dec 2023\"", TraditionalForm], 
     PlotRange -> {All, {10, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{0, -100}, {5, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{5, -100}, {10, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{10, -100}, {15, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{15, -100}, {20, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{20, -100}, {25, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{25, -100}, {30, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{30, -100}, {35, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{35, -100}, {40, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{40, -100}, {45, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{45, -100}, {50, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{50, -100}, {55, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{55, -100}, {60, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{60, -100}, {65, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{65, -100}, {70, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{70, -100}, {75, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{75, -100}, {80, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{80, -100}, {85, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{85, -100}, {90, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{90, -100}, {95, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{95, -100}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{100, -100}, {105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{105, -100}, {110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{110, -100}, {115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{115, -100}, {120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{120, -100}, {125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{125, -100}, {130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{130, -100}, {135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{135, -100}, {140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{140, -100}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{145, -100}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{150, -100}, {155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{155, -100}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{160, -100}, {165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{165, -100}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{170, -100}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{175, -100}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{180, -100}, {185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{185, -100}, {190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{190, -100}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{195, -100}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{200, -100}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{205, -100}, {210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{210, -100}, {215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{215, -100}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{220, -100}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1145, -100}, {1150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1150, -100}, {1155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1155, -100}, {1160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1160, -100}, {1165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1165, -100}, {1170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1170, -100}, {1175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1175, -100}, {1180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1180, -100}, {1185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1185, -100}, {1190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1190, -100}, {1195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1195, -100}, {1200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1200, -100}, {1205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1205, -100}, {1210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1210, -100}, {1215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1215, -100}, {1220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1220, -100}, {1225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1225, -100}, {1230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1230, -100}, {1235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1235, -100}, {1240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1240, -100}, {1245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1245, -100}, {1250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1250, -100}, {1255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1255, -100}, {1260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1260, -100}, {1265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1265, -100}, {1270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1270, -100}, {1275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1275, -100}, {1280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1280, -100}, {1285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1285, -100}, {1290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1290, -100}, {1295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1295, -100}, {1300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1300, -100}, {1305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1305, -100}, {1310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1310, -100}, {1315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1315, -100}, {1320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1320, -100}, {1325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1325, -100}, {1330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1330, -100}, {1335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1335, -100}, {1340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1340, -100}, {1345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1345, -100}, {1350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1350, -100}, {1355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1355, -100}, {1360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1360, -100}, {1365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1365, -100}, {1370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1370, -100}, {1375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1375, -100}, {1380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1380, -100}, {1385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1385, -100}, {1390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1390, -100}, {1395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1395, -100}, {1400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1400, -100}, {1405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1405, -100}, {1410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1410, -100}, {1415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1415, -100}, {1420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1420, -100}, {1425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1425, -100}, {1430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1430, -100}, {1435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1435, -100}, {1440, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1GlMEwYUB/BuoF2oQph2jGMYDhU6BnNlIIZJEShRoCpO4rAMRyVQ5CiH
QAtYkKMWEGlX5lTQoLZpxqEWUXTaIEIFKVDKMQtO61YShdDAtAMmwtwC773k
5Z/ft/f/8pzi0iLjPyQQCBnv979M7/fceluztJPw/3jREn2eqyeDPGirNj0c
ev4yyB98deKf7B1ZEeBvE0hf7HlxEGzvfIZfYWCCPaRZ694GxIHrM1z3tarj
wZrsAN8SKRvs9P0IIyY5BRy/fKv5My4HbDPVRrSJywBnUf2fiilZ4Ljpxe4N
k8fBTbsyiZcGcsBy+zTDZkUu9nmT9KBRwgUzLuo7rLTohdCozgwrHviooqWk
1xHd72Ad4uqJNtcGSDVfo/0EqWsKvkGn+tfFu4esuHAb7epsb9dIOJqrKqML
jqEZFwIfbS9HXzF6PF4yzwPPB37a18lHJ9Wvjx3i5IN/J5jNvvihALyvZMZA
Po/uID57sluLvpioG4nSo/N6hrUsI3qSG7k/yYQ+RNEMcBbRqrEIRo7ZiRV/
RfOu6FUXWKCnwztUZ7egZZZ32m/sQpeTJXLbFnSqQ1p1kQsf/NdbfnADqRDc
zO5urylFvzwvFnx0Ge2kZjLylGil4cGNm2p09LstZOMYuiiIkJr/DC0X6lQW
f6yaStMMKDadm0DPkStzt75C0y/vpATPoCWes+NH5tBEUSmb/mURmPfadu5z
Nnr7pusyrgFt2kOPehR7ErzUeG0D6QR6rZXtIKMWbdHed43TgLZMP1klvove
W+e19rASXd3ztMClY9XetEGT0DTVhf7Y2TflZg9awhMxQwbRNkNTYaNP0G5n
laoYcjHY77AocGI/umyHzehwB1prW5fUSS0B28mK78ndSsFteko4Y30Z2HF4
JiF7Gk2tETVe0QvAdeavPcUPT4FvBXqNld4Rgn/2Lbde/KUcPDAuLaNWVoBb
I2pdOYWV4NmUA4TUo6fBJrp7ojGoCiyf1s1n+pwBH6qXsmLWVYNbFGGxZgK0
n712QbiAbn7nMNm0TQR20SeMDbLRGxvkOcGn0ObZrzbelqHzx4WsmVb0GxpF
4d6FjozWrpnvRl/P5H2nUqNjCxnFTf1oy9POTRLNit//q/vn/h7N06KTZY8J
rGG0m85OvjyONpCO7a39Ex3dx9SlO4jBmioGK/QgWpJ7iXRcg76nXF5g7f4R
bMWkCah30X5HjPJSbwm46td8dpsMHZppx2n8pAb8m2gzyaUaLSZah/A++Anv
TW52vE9D+2jD5pf56H8BMi4Rag==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427236295#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$427236295#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxFz2tM0wcUBfBuoF2oQpgyxmMYHip0DNmKIIbJH4ESBaqySRzCcFQCRSjl
IdACAkKpBURay5wONKhtmvFQQRSdNlihghQo5TEBp3UriUJoYNoBE2EzWe+9
ycnJ79u5zgnpUYkfkkikzP/yvjMGvLbe1qzsIr2/Ym8i2fe5ejrYkzDZ+HD4
+cvgAPDVqX9ydmZHgr9Nonyx98VBsIPLmaJKfSzYU5q97m1gArgh021/uzoR
rMkJ9CuTssDO348y4lLTwImrt1o+43LAtjMdZNuETHA2LeCpmJoNTphd7tkw
fRzcvDuLfGkwFyx3SNdvbs3Df96kPGiScMGMizqllRa9FBbdlWnFAx9tbSvr
c0IPOFqHunmhzbWBUs12tL+AvabwazQ7oD7RI9Tkr4ir833doxForqqcLjiG
Zvwc9GhHBfqKwfPxink+eDHo0/6uInRKw/r4YU4B+HeS2fyLHwrB+8vm9DYX
0Erysyd7tOiLyeOj0Tp0fu+IlmlAT3OjDqQY0YeomkHOMlo1EcnINTvxv2mE
T2WfutACPRuhVJ3bgpZZ3um8sRtdYSOR27Wh2Y7pNSWuReC/3haFNFKKwS2s
ns5aPvrlBbHgo8toZ3UsI1+BVugf3LipRse822JjmECXBJPYBc/QcuG4yuIP
k30IzWDrpvNT6AWbqrytr9D0y7uoIXNoidf85JEFNFnEZ9G9S8C813YLn7PQ
OzZdl3H1aONeevSj+JPglaZrGygn0Gut7IYYdWiLzv5rnEa0ZcbJavFd9L76
bWsPK9A1vU8LXZUmbyeGjELjTDf6Yxe/tJu9aAlPFBs6hLYdngkfe4J2P6dQ
xdmUgv0Pi4KmDqDLd9qOjSjRWrv6lC5aGdheVnpP7s4Hd+ioEYz15WCnkbmk
nFk0rVbUdEUnANebv/YSPzwFvhW0bYJ/Rwj+ya/CevmXCvDgpLScVlUJbo+s
c+MUV4Hn074hsY+eBhvpHsmG4GqwfHZ8Mcv3DPhQg5QZt64G3NYaHm8mQPs7
aJeES+iWd47TzV+KwK66pIkhFnpjozw35BTaPOfVxtsydMGkkDnXjn5DUFs9
utFRMdo1iz3o61m871RqdHwxo7R5AG152qVZojHZm7h//u+xfC06VfaYxBxB
u4/by1cn0XrKsX11f6Jj+mPHMxzFYE01gxl2EC3Ju0Q5rkHfU6wuMfecBVvF
EgLaXbT/EYOc7yMBV/9awOqQocOy7DlNn9SCfxNtprjWoMVk61DeBz/i3tQW
p/sE2lcbvrhahP4XlkMl3A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427236295#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxN030w03EcB/AdMa6yy3kmD7Ee9HBd23CuO1+GTR7uLJQJcdc5u45YOWbG
PBztD4nl4TyUbq15SKSGUqEJOWIsetDl8S4PZVKzVq1Wd79Pf3zuc6/Pff74
/PH+OMUnM87p4XC40D+l625Pz3gatqajFtosx6yFhCS2yQvEe+C9RmuMROcM
zKJNVm+zEPy6ocopsgZsEjvINxBloIKV0E57AzLyNVPNtjWBM4aIPjHt4AVS
nl5HHzik7kMfQQ52YVdTe9fBalqELJXAwSxSDvcrgsAh1d4DHgLwlrfViCw7
E+muo8WR0ebqbe/gwkzUaa/bIKPPFe5SRTF42WfANaYcvLQWcX2pFjxDTStS
NYMnq66lGHWD+/wmqa5vwG1KU4ugLXBxQMnDK2QuZlb9ztiJC2CaWqBveQfs
EmokYX4Em/7053DxWZhxDQVBdUSw6peIcpcM/hQms++hgpe1J8vogeClxnn8
OAM8F87mRjLBMzh95WxcFmLoBrsoqA//fjpADhabdPW0+fAwW5WK7y9ywAJz
ocS6HUydEtwkvQT/qOTXBK+AWQFam7AN3r88JVHQtJpbxVSD/Ru/W8bhsjE/
YKaXJ+DBpY/YZRfNwUl2ySV8Z/ABQceO87XgDU22b9P2HMxxlqXzRFfw2DFR
7g06uAgdls+cAnuFSJ1sE8DNVysvLbNyEF0XuAEKslFwhrqSwEVW0bsvp4K/
RXmlnE4Dy+f0rVVZ4JbEwZ5rBWDhEeXbsyow54u16mAiHzOLp43XFoIjjRdH
5WLw2OhU/nEpmC584SnuB4v9aJKcIfA21TPzqBFwvATlUcb5yOHvg7mhnsjH
6wQFmNstHZa9A3s4tIozFsAWlEye455czF9P+EcMxIINCdbjITVgy4mVwFfT
YEdKuLGNCry/4snzaPM8zIfo7FvZLuCj6n359SRwClGhSXQH261qkOY//wb6
9ErZ
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAmIQbfbiDJv6gXaHHXKtrwMtzBwEav8y2x1C8JU63W8U
XETwjadOXLP4AYLP91HTN16yA85/4XPorVQQgr/s0unly0IR/OSIq4lGkQi+
wr170vtiEPx7yS+ueiZ0ODysElnn/tDUISr/t2diOoJ/tYpvX0Uegn9mosmy
5TUI/qEVUX3XuhD8DdeWxZksR/DnsnzWm3QYwXfoiVoS8AjBfyJ8SJKfsRPO
33a9NCRPAMFvn63Zf1Yewa/puRa7VBnBL6ht1qlVR/BT8gx+h2h3Opw9AwKm
DhHxd0/q6CP4jo7m6XfMEHwt5YksPXYIfoFRwnuOGgR/m6P+rdadCL7ef9aM
x18R/OV77nx1MOqC89lygiIjHBH8FOkTe/IDEHzhz015v8MR/EOnbBXa4xH8
WWbSP32SEfzCRT8uCqUj+B5811bdyOpyeBMIikFTB4Wqzc3z8hD8OzfmeZ3t
QfBnmHcJ/lmF4Gsui3vfsA7B3yVifJZ1E4Lv3cy+umsrknkfb3fw7+xysOW6
vrjgr6nDv3MtLpIHEHz5NboMyscR/KS0+nKzqwj+MoWL7zwfI/i6U0vuFvxH
8LdwSpyZLt0N5x/6FLfyaTCCf/720jbjHgQ/rn9q9tXJCP47p9aA8tkI/jaZ
v04e8xH82m8lppKLEXyXC2/UXy1D8Hce60q5txzBBwDDY8ds
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427236295#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwdT3ssFHAAvjyynCltKTRl7nD4rZDX0vpEcl7nkXceeYSRt1zosvLmzuP4
2UyTlqZGOSrPaldbKpXHalbCeUS1vGdjJl1927fvj2/ft+/Ti0jyjlZgMBjG
cv5TMVeaI0wqBeM/WBgcayqwKCtFm4rnpWENFp6417OSc8ug/eewknozCyuX
fRiJUUJEBgYXSc3ZWHfixC46iHC0usia281G88KXjTSrciToxy63cg0Q0NgU
GaJWAcv80YLfHw3Q0e4aplhYAV4ds6Q/xBC2OiObxZsV0Dq/Vts+ZQh9WczX
4bhKGK+Zc+5fNMIsM55XP1OJ7bsdvSu/jDAk8og851sF3o8Si+Y4Dqr5DcyM
oSrk7TeMz1jhoO/5zmYkVwxO1XKXQ4Yx9l5AoUWPGBMzC8cnF41hG77YnH+i
GlZFE/bcFBOIenPiuu5Vg+Wbvrv9pwnOpWknt2jWgC1L4AlCTTFayWbqV9Qg
81SQ26cxU1SpaJzN2kXRMCZbF/AI+lbHg9MVKTy8b8pyvQjmxx+kJipT7Lxh
D9zwIbB77Hg7Yg+FaWPMWr4/wVw4f8tFg0Ld0OtlcRjByZ5JiY4ehf9y4Iwo
iWA24aHuM1A0DhnVFJQTqAdkW3aeoVhqvVKfX0lg6+DsJnGkUPWWuueJCURa
01ebnCkUXH1ScmsJbF4f+Cz0pFi1y+ziNxAIj1wrDQ2niJU620Y/IuhSdbkT
EEFhMqLgFyEhmF7X7PaOoliY7ksN65Dn37fNOcVSpCmZtQR2yn3+rP2xZPlf
00AttxcEalGSAE4qhaZ6lr2zlMCaJ0jST6cQLtXFOb4iKGMfunWQT5Hd/q3b
rp/g6b7vHRpZFCvi7SmbtwRTW5J3zBz5ngxdVcsBed+8YEpZQCHzO21u9oHA
asR1Y+c6hZ9NeBAZJPgLgB4ofg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427236295#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 10.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 10.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"M\[EAcute]rce, Wed 6 Dec 2023\"", TraditionalForm], 
     PlotRange -> {All, {10, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{0, -100}, {5, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{5, -100}, {10, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{10, -100}, {15, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{15, -100}, {20, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{20, -100}, {25, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{25, -100}, {30, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{30, -100}, {35, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{35, -100}, {40, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{40, -100}, {45, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{45, -100}, {50, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{50, -100}, {55, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{55, -100}, {60, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{60, -100}, {65, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{65, -100}, {70, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{70, -100}, {75, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{75, -100}, {80, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{80, -100}, {85, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{85, -100}, {90, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{90, -100}, {95, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{95, -100}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{100, -100}, {105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{105, -100}, {110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{110, -100}, {115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{115, -100}, {120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{120, -100}, {125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{125, -100}, {130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{130, -100}, {135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{135, -100}, {140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{140, -100}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{145, -100}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{150, -100}, {155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{155, -100}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{160, -100}, {165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{165, -100}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{170, -100}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{175, -100}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{180, -100}, {185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{185, -100}, {190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{190, -100}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{195, -100}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{200, -100}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{205, -100}, {210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{210, -100}, {215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{215, -100}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{220, -100}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1145, -100}, {1150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1150, -100}, {1155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1155, -100}, {1160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1160, -100}, {1165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1165, -100}, {1170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1170, -100}, {1175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1175, -100}, {1180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1180, -100}, {1185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1185, -100}, {1190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1190, -100}, {1195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1195, -100}, {1200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1200, -100}, {1205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1205, -100}, {1210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1210, -100}, {1215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1215, -100}, {1220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1220, -100}, {1225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1225, -100}, {1230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1230, -100}, {1235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1235, -100}, {1240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1240, -100}, {1245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1245, -100}, {1250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1250, -100}, {1255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1255, -100}, {1260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1260, -100}, {1265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1265, -100}, {1270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1270, -100}, {1275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1275, -100}, {1280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1280, -100}, {1285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1285, -100}, {1290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1290, -100}, {1295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1295, -100}, {1300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1300, -100}, {1305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1305, -100}, {1310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1310, -100}, {1315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1315, -100}, {1320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1320, -100}, {1325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1325, -100}, {1330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1330, -100}, {1335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1335, -100}, {1340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1340, -100}, {1345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1345, -100}, {1350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1350, -100}, {1355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1355, -100}, {1360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1360, -100}, {1365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1365, -100}, {1370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1370, -100}, {1375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1375, -100}, {1380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1380, -100}, {1385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1385, -100}, {1390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1390, -100}, {1395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1395, -100}, {1400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1400, -100}, {1405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1405, -100}, {1410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1410, -100}, {1415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1415, -100}, {1420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1420, -100}, {1425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1425, -100}, {1430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1430, -100}, {1435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1435, -100}, {1440, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQXXhOT337hX92DCDQYOSQYXb/zCtnHQcY/+vhy/df
ONvA+Uue/iqzKvGF80PSuXW9HobC+dJK/fXdT2LgfJ2lJTy/7ZPg/IVFKgFb
z6TC+RfK7M1blmbC+YpxV/1ic3Lh/NT/29bJVhbA+eKvd7CLJxXB+SXGNncm
aZXA+Ulv/5wQflUK5691Kmaff74c4f4vWQfXTKmE8384Spw9Ul8N599lYP74
MLEWzs+TyZ/QqFwP56/LPHFgamsDnF/1WfK7dmYjIry83MKOxzfB+ZbREx2f
BjbD+Zck52YdMW6B86WWNe9ZodEK5+94oOXjx9sG58td+ZBe9hbBN546cc3i
B+1w/lyWz3qTDnfA+dsc9W+17uyE85fvufPVwagLzp9h3iX4ZxWCr7ks7n3D
OgR/l4jxWdZNCL53M/vqrq0I/p2Ptzv4d0L5DNoO/861uEgeQPDl1+gyKB9H
8JPS6svNriL4yxQuvvN8jODrTi25W/Afwd/CKXFmunQ3nH/oU9zKp8EI/vnb
S9uMe5DkRRZeDWTrgfO3+s5RKWhA8D/mBjPkpfTC+V/dNDPeOffB+Sve3vxR
bNYP50csXJocyzMBzt+8yTueuR3Bt5S+9LPzJ4Kv/CD91sXMiXD+E+5s/zmP
EfwLfX7J7qGT4PwpFfO5Sy8g+Hv2/f+Z7DkZzuePcWg33oXgWya8W9FqMgXO
79tdk7ljGYLvXixVsEZsKpx/faIqt/IEBH8Su6BrFeM0hPty1sntdUDwzS55
//hfj+ADAMpCJv0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427237301#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$427237301#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQXXhOT337hX92DCDQYOyQYXb/zCtnHQcY/+vhy/df
ONvA+Uue/iqzKvGF80PSuXW9HobC+dJK/fXdT2LgfJ2lJTy/7ZPg/IVFKgFb
z6TC+RfK7M1blmbC+YpxV/1ic3Lh/NT/29bJVhbA+eKvd7CLJxXB+SXGNncm
aZXA+Ulv/5wQflUK5691Kmaff74c4f4vWQfXTKmE8384Spw9Ul8N599lYP74
MLEWzs+TyZ/QqFwP56/LPHFgamsDnF/1WfK7dmYjIry83MKOxzfB+ZbREx2f
BjbD+Zck52YdMW6B86WWNe9ZodEK5+94oOXjx9sG58td+ZBe9hbBN546cc3i
B+1w/lyWz3qTDnfA+dsc9W+17uyE85fvufPVwagLzp9h3iX4ZxWCr7ks7n3D
OgR/l4jxWdZNCL53M/vqrq0I/p2Ptzv4d0L5DLoO/861uEgeQPDl1+gyKB9H
8JPS6svNriL4yxQuvvN8jODrTi25W/Afwd/CKXFmunQ3nH/oU9zKp8EI/vnb
S9uMe5DkRRZeDWTrgfO3+s5RKWhA8D/mBjPkpfTC+V/dNDPeOffB+Sve3vxR
bNYP50csXJocyzMBzt+8yTueuR3Bt5S+9LPzJ4Kv/CD91sXMiXD+E+5s/zmP
EfwLfX7J7qGT4PwpFfO5Sy8g+Hv2/f+Z7DkZzuePcWg33oXgWya8W9FqMgXO
79tdk7ljGYLvXixVsEZsKpx/faIqt/IEBH8Su6BrFeM0hPty1sntdUDwzS55
//hfj+ADAGg/J1w=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427237301#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQnfvvYTjXh04HW67riwts9R3CJmv0y35C8PX+s2Y8
/orgv4r9qCck0gXnL99z56uDEYJfp7HrHJsZgh82ZfryM5YIvh5DacMkWwSf
LScoMsKxyyFoh1zr64t6DludebmfeCD4KdIn9uQHIPiHTtkqtMcj+ApVm5vn
5SH4d27M8zrbg+DPMO8S/LMKwddcFve+YR2Cv0vE+CzrJgTfu5l9dddWJPM+
3u7g39nl0Po6ECii5/DvXIuL5AEEX36NLoPycQQ/Ka2+3Owqgr9M4eI7z8cI
/qtbSmmxHxF83akldwv+I/j7mD13f2XqhvP9imRnVrEh+PcffCz7z9ntAAo9
rnA9hwL/YyEtvAj+JJ18gT4RBH8Lp8SZ6dII/qFPcSufBiP4528vbTPuQfDj
+qdmX52M4L9zag0on43gb5P56+QxH8Gv/VZiKrkYwXe58Eb91TIEf+exrpR7
yxF8AFRjFpU=
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQHcm+Ro5jR79D0A651teCBg4XioxfuOxE8FUscpnP
7UHwK/4ukws/gOCfPfTA8sFhBF/uxvFlLJcQ/Ly364Q1HyD4/BK1bwv/IPgR
C5cmx/JMgPPXq/Y/YtNG8NlWVSRu8ETwZbiND0YFIviGOW8VWCMR/D1zTgXc
ikHw3c4ub1ifgOD3pE6TmJWE4F/827KhJQXBF5tW7JGfhuDH6CU9iMyY4LDO
/WGVSJ6BQ8eHa/PXlSP4mzd5xzO3I/hXfN6yLl2M4H971rfG7QCCz77lfv30
cwi+RKNB8Is7CP6C5zf2CDxB8DX8GtUsXyP4OY2h0WffIfgbtmhOSPyE4B86
rXT772cEHwCrN9UP
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfeVtvTLPlUkOO+RaXwfuMHA4WiXUbIPEv/f7tJ3C
NQT/W03rL+YbCL5G/Y/C07cR/MjG7JeT7iP4e1oDbyg+R/DlusyPb3iH4D+e
xLz03F8Ef8Xs801veCbD+blLZidwySD4RmvT7TS0Efzk9be2vtdD8Kds9NXd
boTgrzVifznLBME/tvnAkjozBP+eSVVCksVkh4dVIuvcEw0cvm81lnGzQvCj
dklyX3VE8Pfs+/8z2RPBF3zmf3d6KoKfxrvgwOlGBF9A0WPT034Ef5fJh8X/
5yL4/XZH5vAsRfBTPGZMlVyD4N/yOnv5zloE39+XSWjBegT/iL95QPLGyQ4g
38ixGjhYBeX0qW1G8FXCr3Gt3Ybg88c4tBvvQvCl7q7mP3EDSX2c+IyY7wh+
mp3RLsb/CP5KOd87y9imwPmn+qJyK7kQ/Df/0v958yH4f7a9czMVQPB580v7
5YQQfDn1P9fZRaY4xPQf+qoRo++gd79J4aMogr9l/o4Ua1UE3zLh3YpWEwT/
Sa8p5/xcBL9vd03mjmUIvs/KjZwWqxB8runPVm5fi+C/5GWsKl+P4J9okfYy
34jgL/ttKvV9E4J/vdMl7e1mBB8Av356cQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427237301#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwdzAlMkwccBfAq45gwBVw5J0g4BqiAfNDSfiS8KlRukMM1QScrGIGOIxyT
SyoqhwW6tsDHmFRuRhhjoNxW2YCo23AIcSygTEAOlWOAQ2GYsW7/5OXll5f8
zfjxQed202g0N2X+62Yi1q47MQG0/88C53Y6Ww6kJaDOyjO0Rs0C+ovd6vr8
RMj6Nq0OLVkimXB9KrNNRtFuUfOS/GPwl9892P8qBY89Hi72Odvgu2NJ6pXD
F6A7YN+VPGmLur9ifmwuScPN8n+KX3xyGJscg4eDwgwYuwYSQVNHMElTWZv+
7CL6Cu15+YH2iPsoXpJtLoTGgQCnVl8HtEQ/+KE05xKCFbpExlsHpL82fHso
Oht7/oydM5EcxYY399T9s5fBlLXGiewcwQqTcuZOXkHXUxspd8ARo4bymEHi
KkYFgjRPTwJGDVcUjdY50F3alSkZJdA9Zevr/0EudOt/LeD6O8Hk8er5L5Zz
YZ145/71ficQpdLm2qk8aC1UloWQzpC/99pONpAPTtFgvvo3zujk2E/k9FyD
TDvGIUOPga+YIp13TSIIGaJMRRYDw0/qc4nCArxytW7Nf8JAh1+FRcKlQnwr
4NUrSCbWYoNpcZFF8AsLbKiVMrHBtYlaOS7G1Zo/PIJnmGhcHt9MYnwJ3xsn
px0ZLuBV10ec0ZJAoEjRPprtgls3fc6q5EkQEn1dqDbsApbx6Na1LQlSpjzt
yj5kwXzq/MRItBTc8S7TnVAWZjUFARXPpShr99peLWfhkdg/4kSoDCpWZk3i
MRZKUis1Ux7JcPjrqtgwOhuKuztbEV7FeLM+dM89kI19p5FH9BYjSOa2+Owq
G6zwlcYcpxKMqJqupN1mQ3w7M7q7oQQdawbPscTGiSSjhGa9UnTRJ7yMjEj8
LrXUNJeUIq+mZbnHi4RMXccjfReFX2yCXTnJJBTrk2HJKhTcJi0E20ovTDYl
xqlSaJe8Ke9IIeHa7l7Ff1/pBdmO9QUS8+Gp2946FOjzNEIrnQTZ+6zN2IyC
X63m3mEhidnPW0zugMKLn+6eYReQ2MvLcO46RoFoLYhbVZp13NO3zZ3CwX66
WkMhCbHhTFq9J4X48ZikfWISLvfovxUFUtDSoPvPSEgUmV4s+DScgkbUUshl
ikT3Hu8aHp/C9w1q7c5lJGY29HqCIimcmju4/6XSLkOt89woCnX80JGAcuWe
OsuxT6Awpv0yw6iChFZkG88mkYLOEVrukNLMgKx482QKPl76kiw5iUJLA7l+
KoW+bI+6mRskOrXnbumkU/hbfrqlpJLE9Hbbz5qZFJx6k7q5Vcp/C1nTqlkU
4sZE/ZtKM0Z9NneEFBrXq4eaqkn8C8TjwXw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427237301#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 10.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 10.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Lahmacun, Wed 6 Dec 2023\"", TraditionalForm], 
     PlotRange -> {All, {10, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{0, -100}, {5, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{5, -100}, {10, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{10, -100}, {15, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{15, -100}, {20, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{20, -100}, {25, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{25, -100}, {30, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{30, -100}, {35, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{35, -100}, {40, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{40, -100}, {45, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{45, -100}, {50, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{50, -100}, {55, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{55, -100}, {60, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{60, -100}, {65, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{65, -100}, {70, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{70, -100}, {75, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{75, -100}, {80, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{80, -100}, {85, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{85, -100}, {90, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{90, -100}, {95, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{95, -100}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{100, -100}, {105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{105, -100}, {110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{110, -100}, {115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{115, -100}, {120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{120, -100}, {125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{125, -100}, {130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{130, -100}, {135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{135, -100}, {140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{140, -100}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{145, -100}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{150, -100}, {155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{155, -100}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{160, -100}, {165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{165, -100}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{170, -100}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{175, -100}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{180, -100}, {185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{185, -100}, {190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{190, -100}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{195, -100}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{200, -100}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{205, -100}, {210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{210, -100}, {215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{215, -100}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{220, -100}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1145, -100}, {1150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1150, -100}, {1155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1155, -100}, {1160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1160, -100}, {1165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1165, -100}, {1170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1170, -100}, {1175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1175, -100}, {1180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1180, -100}, {1185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1185, -100}, {1190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1190, -100}, {1195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1195, -100}, {1200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1200, -100}, {1205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1205, -100}, {1210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1210, -100}, {1215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1215, -100}, {1220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1220, -100}, {1225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1225, -100}, {1230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1230, -100}, {1235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1235, -100}, {1240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1240, -100}, {1245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1245, -100}, {1250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1250, -100}, {1255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1255, -100}, {1260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1260, -100}, {1265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1265, -100}, {1270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1270, -100}, {1275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1275, -100}, {1280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1280, -100}, {1285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1285, -100}, {1290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1290, -100}, {1295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1295, -100}, {1300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1300, -100}, {1305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1305, -100}, {1310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1310, -100}, {1315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1315, -100}, {1320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1320, -100}, {1325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1325, -100}, {1330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1330, -100}, {1335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1335, -100}, {1340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1340, -100}, {1345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1345, -100}, {1350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1350, -100}, {1355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1355, -100}, {1360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1360, -100}, {1365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1365, -100}, {1370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1370, -100}, {1375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1375, -100}, {1380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1380, -100}, {1385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1385, -100}, {1390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1390, -100}, {1395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1395, -100}, {1400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1400, -100}, {1405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1405, -100}, {1410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1410, -100}, {1415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1415, -100}, {1420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1420, -100}, {1425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1425, -100}, {1430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1430, -100}, {1435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1435, -100}, {1440, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.927783417134145*^9, 3.927783516786029*^9, 
  3.9277843622410297`*^9},
 CellLabel->"Out[614]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "15600.`", ",", "12206.482510859172`", ",", "49042.70806998812`", ",", 
   "30624.595290423647`"}], "}"}]], "Output",
 CellChangeTimes->{3.927783417134145*^9, 3.927783516786029*^9, 
  3.9277843625066476`*^9},
 CellLabel->"Out[615]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["for season",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.927777813264164*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"warmingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "1.0683009750379302`", ",", "1.5`", ",", 
     "1", ",", "1", ",", "1", ",", "1", ",", "1.278422223763722`"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"coolingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1.8`", ",", "0.8`", ",", "0.7`", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1.1"}], "}"}]}], ";"}]}], "Input",
 CellLabel->"In[629]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"seasonFitEvaluation", "=", 
   RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"roomEndTemps", ",", "heatingStateEnd"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"roomEndTemps", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"None", ",", 
          RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"heatingStateEnd", "=", "None"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Check", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Module", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "evaluationResults", "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"SetSimulatedDayForComparison", "[", 
                 RowBox[{"day", ",", "roomEndTemps", ",", "heatingStateEnd"}],
                  "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"evaluationResults", "=", 
                 RowBox[{
                 "EvaluateParameterVector", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"warmingCorrection", "[", 
                    RowBox[{"[", "roomsOnCycle", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"coolingCorrection", "[", 
                    RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
                
                RowBox[{"roomEndTemps", "=", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"None", ",", 
                   RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"heatingStateEnd", "=", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"24", " ", "60"}], "]"}], "&"}], ",", 
                   RowBox[{"evaluationResults", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"evaluationResults", "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"7", ",", "8"}], "}"}], "]"}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "5", 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"DateString", "[", 
               RowBox[{"NormalizeDate", "[", 
                RowBox[{"seasonDays", "[", 
                 RowBox[{"[", "day", "]"}], "]"}], "]"}], "]"}], "<>", 
              "\"\<: timeout error\>\""}]}], "\[IndentingNewLine]", "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DateString", "[", 
             RowBox[{"NormalizeDate", "[", 
              RowBox[{"seasonDays", "[", 
               RowBox[{"[", "day", "]"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<: other error\>\""}]}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"day", ",", "simulatedDays"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9277778888806915`*^9, 3.9277779205488935`*^9}, {
   3.927779509559647*^9, 3.9277796174187455`*^9}, {3.9277796865538416`*^9, 
   3.9277797605852137`*^9}, {3.927780097061149*^9, 3.92778010048519*^9}, {
   3.9277801335242343`*^9, 3.9277801398463135`*^9}, 3.9277831641390953`*^9, {
   3.92778330614975*^9, 3.9277833438748646`*^9}, {3.927785672774666*^9, 
   3.9277856728288918`*^9}, {3.927786104862074*^9, 3.9277861066469297`*^9}, {
   3.927786166889786*^9, 3.9277862233835745`*^9}, {3.9277862622528667`*^9, 
   3.927786283614313*^9}, {3.927786503108276*^9, 3.9277865216340685`*^9}, 
   3.9277879167306685`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatedDays", "=", 
   RowBox[{"{", 
    RowBox[{
    "29", ",", "30", ",", "31", ",", "34", ",", "35", ",", "36", ",", "37", 
     ",", "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", "43", ",", 
     "44", ",", "45", ",", "46", ",", "47", ",", "49", ",", "53", ",", "54", 
     ",", "57", ",", "59", ",", "60", ",", "61", ",", "62", ",", "63", ",", 
     "64", ",", "65", ",", "66", ",", "67", ",", "69", ",", "70", ",", "71", 
     ",", "72", ",", "73", ",", "74", ",", "75", ",", "76", ",", "77", ",", 
     "78", ",", "79", ",", "80", ",", "81", ",", "82", ",", "83", ",", "84", 
     ",", "85", ",", "86", ",", "87", ",", "88", ",", "90", ",", "91", ",", 
     "92", ",", "93", ",", "94", ",", "98", ",", "99", ",", "103", ",", "104",
      ",", "105", ",", "106", ",", "107", ",", "108", ",", "111", ",", "112", 
     ",", "114", ",", "120", ",", "121", ",", "122", ",", "125", ",", "126", 
     ",", "127", ",", "128", ",", "129", ",", "132", ",", "133", ",", "134", 
     ",", "135", ",", "136", ",", "139"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9277866246405983`*^9, 3.9277866258771725`*^9}},
 CellLabel->"In[659]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatedDays", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "seasonDays", "]"}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"seasonFitEvaluation", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"seasonFitEvaluation", ",", "StringQ"}], "]"}]}], "]"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927780048769559*^9, 3.9277800887817984`*^9}, {
  3.9277808580786505`*^9, 3.92778091479702*^9}},
 CellLabel->"In[656]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seasonFitEvaluation", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.9277864719633164`*^9, 3.9277864781787653`*^9}, {
  3.9277865316348953`*^9, 3.9277865406671147`*^9}},
 CellLabel->"In[655]:="],

Cell[BoxData["80"], "Output",
 CellChangeTimes->{{3.9277864723695855`*^9, 3.9277864786160965`*^9}, {
  3.927786532074345*^9, 3.9277865409793844`*^9}},
 CellLabel->"Out[655]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"day", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"seasonFitEvaluation", "[", 
             RowBox[{"[", "day", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "roomN", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"roomN", ",", "1", ",", 
          RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"day", ",", "1", ",", 
        RowBox[{"Length", "[", "seasonFitEvaluation", "]"}]}], "}"}]}], "]"}],
     "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"roomNames", "[", 
     RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9277809228051777`*^9, 3.9277810396977544`*^9}, {
  3.9277813233578386`*^9, 3.927781325905283*^9}, {3.927786651941554*^9, 
  3.927786684537616*^9}},
 CellLabel->"In[663]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kwtMU2cYhovxQnSTZtKkOlyEaKljOpAK2tL2lUsRyqUXJhqcBlEXEVKq
hHR4yRnRzbvGRKNLBmUiLIU5Gu1G0lY7ogUygxdqsaBQpFPGRbyA0YC3he8/
ycnJc57z//n+9/tO+BaDbts0Ho+n+Xj//5y6nimxWb0x+4cBJb2A2NdS+Yv5
P+JgdDb4M8qE3cR8ZHjU7UGP+4hDcXrHPNuY1E8sxPtDZ3w75vxLHIZCYfbX
P198QrwI44L9YSV5zEegap9ok3xwnHgxJFleqfv2Y2IR8HYwZJ+3n1iMAfMF
y69/MP4SNdUz+b8FHhJ/BcUFm898hNWzHNP/Wnq4w91DHI2HJ/d6E1XPiGMQ
2d20vKJymHgFnL5Kq/jiZ5jiWOjirBO2n96Rl0B8PN9sVw0Sr0RU7I0T8XE8
+j4OuStDe0ptXvLxGD11rdl+YDb5VeC0B9T2UXa+1ShX/iMMKnpNLEXEwFCd
MY3lJUNb3d+FLXmPiBNQuieE76ln/ZJj2Fnd65hgeSgQdrU/et23zCvhnD9N
r5BPEgMp3qBGB+j8HNAZYvS7rS/Ir0H1N5JLR2XUD24NykcQFVzL6knE+fJd
Ze7i5+QTIRcEikQ9LM8k8Ca1Qls+W58E25ui3LIZLN9kLCu4VBRzP0A+GQX1
xl1yQS/5FDRc8dQ69Q/Ip8Awmfk02tBFXgUF//O2zVZWvwpHonID6u1j5FNR
94lsKKeK+s+lotXnvyeVsXleizqp41bHcZoHbi2uBRJ7mk6xeU5D7Lnv+gV5
dF4uDZt2qiKqB1l+6bieejkh/iWrPx3umtSWKHcHeTX2G+4knHjQSV6N6QdL
7E3r2f+TgYUvTQqRgurhMtBqjHzUN5fVl4mcDbGW3gmaJy4TL0zbirdcfkU+
C5+GWg3BB2k/LgvH2vNDy+7eJ5+N4Sums1nnKC8uGxVjs7r7d/rIa7CixtQx
v1QwtT80mNdacrXeSfPIadAcc73XsbRxil0aJLWf/bOqYITWayEvDG/zb6V5
hBaO88XP+XaWpxbplkjZ6kPUf5cWLoRbjC42HzpIGiXff9FF+UGHH0ca3t40
0rxyOujjRWJLMvXDpcPMBXcP/84N0Xo9Nmzta7dYR2m9HinmJfUzKuZQXnrI
FwY3L7lH37v0eGXq2j1ey/6HHMTIKzy5nnHlB2vbgf8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kwtMU2cYhit4jXE0rgEvNGxMjRdUEKRqlb5cWyiFUg4BVMBLFMPG0KBl
QZ0HF8Y6giHeQGOEkWGnqIM4VMALiHgJJSg6FOQiWsUqZWXIpVjwEr7/JCcn
z3nP953/f7/3/3ZLimabnUAgUH++vzzHL4tsaVqfi71jn4xeoGlomUuS1kg8
FXN2t6nPlL8jFiLQXf8uXvWeWISNuxotOZsfEc/CjNaeCsvP3cTOaJP1CFtF
z4m/wV/p2sKze58Qu2JN+kGrhGsinof5363PqJtgJl4Aa0OqQbj9X+KFyPtt
NPaAUzvxYnjmKKwj7W3EbnA8XpNVnsx4Ga7XTkmWhL4gdkdqvqQoquIlsQeq
514aO5DYT7wCk1Y477mkmolx9sSck3p9ZvZH0r3wIMFY9v+kLuKVsAwltfrF
jxB7I5fzKTkzmf1fAv3WmKV1m4TUbxXs/jxVFJ3P/FqNksnnf+0YYH6ugX2O
zSvjCvNfCvnjqq8Sh03EazFR5Mqvy2DrX4fFLbFGOxHz0wc/3FCkGytZvQx+
UQd1R0deEwPdjk0BBnvrOPPAvawdHecus3n5otk/xXRHS37wvqhaIuw5UdZD
uh9G5bfMTqfpe94PKTu6ou9zzA9/KF+5/Rf6fJh0f4RX/KJ0m9FLegCWNwxX
xUdTHvgA5Kl+eqncz/IXiFuzlwdN7+okPRDOpSZuwJetPwjbRhK9W4qfkR6E
ZP/dg9q1bH5yHHumHQoDrZeXY25/QvHU0kbSFXCY35stemQhXYGHqZVmY/Fb
0oOR6V0mqx8gf/lgWMK9OsVHaD+CELhGSQsbTXQe+BBIdXEPjYeZf0rcnv1h
kYemg3QlFlXZ3iRvpf0IQpH2406Tuwfthw9FX67P08EClk8VPNsPrTcoPpCu
ws19lfG6v1n/MNwN6XCxEzP/w5Aaw9kn6ZtJD8fluPanGzdQvvhw5Df/U94f
yOajxn7DmxoH8RSMx0ENLjjm9+nX2DzUyJxWUhvA0Tyq1Xihex+yOov5H4Et
nWmnK8foPCICavHKbnOCgeojUKBrcFfOHKX6COis5ubYlAGq18Dhwn2ubhfN
DxqUXiz+uvdcC9VrUHE2X67QUZ6rNcg0XPX9o5blORI1Xnnfb4iiPCESC6VP
Nt1ztVF9JDwdpNvbnKhfdSRs2blxg0UNVM9BPFYvqbf1yT4BelWIZg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1lA1MU1cUxwuMsYoEBptj02yuGt2ayUcLpXVI/+VTscBrK1rBZpkREV1w
CUayROVVF9ims+AQZMJAw5Q4Y8KcbKjRTpBtWOmQMRSlyscslrZQsTED8Suc
+5KXl9/7vXPufeeee9/fuF2b5ysQCLgX98vn7DWh3FDaHWwPH1TSCxwcDfB7
tm2G+DWY//dp+CWnlzgEJ+OaDUd3DBC/AcuA4mKfoJs4HDG52Zbjm38nXgBh
T77z+3aWfyGGuKLRUMW/xCKMj7U4fCNvES/GKReXfDbgPvESaEXSCkXrCPEH
aJ201pvEdmIx5m0SvXdI+B/xR+BiFffUgn+II5DMrb3yVHqHOAqTcxNL5fph
4miU1Gb6xb7pIZbAMyzJNiwMwCxL0RFWXVAn85KPQeXUs9ND3lHiWOxoLe50
qdn8ZNgtNNZ9dYaNHwenbc8lyx9CyieH/ddPxdOprJ4K7Hd/E6Zbz+qzHNXG
nC0tDWPEH0NZvuvO2xuYj8eP/fXh8gs3iVcgTjFxLTeI5UvAYKPvW1MR48RK
uPSRFe4I9j2w/XKRxVpD9eOBnvQfvnsUNEReBQ28P0s6KJ5XIbhcv/lUEfOJ
KBsJLThbTPPhE5H2imsg/sx18klwRL1uCElyk0+CKeZ2RN4Uq38ygpeWFZ6+
YiOfjOkbe088jWTrlwKuP33Ru16qH5+C+3nHZFEJDvKpSJh5fLVraz/5VDTN
jBWWL2PzS8OByi1hwkPEfBrmrWsedB5lfiXc57o8vVVUX34lqgT13V4TG38V
lqQNSz6L7iC/Cs07axqasuh/BOlorCr54h3f2+TTYbHnBLZU3yO/GmbroM+R
S3+TXw1jrdizZyfrNzU2OZLchu4u8mo0mj9JdbbfIJ+BJ4XBlW0KysdnwNqQ
4fU3ushnIm//9cPyOcxngpNfuypb30M+C+f38vY5i2k/8llom7Ed/zqe6iXg
cKBv5GDFeR/MtgMH5+fGphIb9Q/P4cOQ/Ae12RRv5uCvmtacHGf7VQO7Z61d
1Uffv+iWlNLHA36iNorXoPPPI4G9BRMUr4FKYZiS3n1A8VrE6+vml8FK8Vrk
BrWLH9bQecFrYbr7k8qk7qR4LX4LLRJ561n/6DDpuFkc6E/rBR2aZN/Ktknp
vOJ1yN8oO2bQU36zDtGmV//a9yU7n9ZgrkliXJdoUz4HTPmDcg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1VAtMU2cYLaDSKvKyOt4IItrVqYCKbBVOAQu0VPqYj5DFZYYyDA9dpowF
WO4gssWJupgAyisQRDSCYgxGIsvdYoYSA8jIsLzEIawgYC0ginRuS7//Jjc3
557vfOd7/PcGHDmmM9gLBALNf/f/T9tljpKuORH5+TUn0At8ubTsz6wjYsJC
1Bf/ZpCXzkbZsCskdclF1btfExbD+0D3tLObhbAHOr2tBuE3bwn7QLXCslhS
Z0f51qOh+uXD+dw54gOR7GF6lfkL44Pg+U7jN2GZID4YNy4HXhHMMv/N+HHV
RYd03SvCH2JdR0rH8+IFwluQObIttWTITHgrbu8PEy81s3zboTc/Md9a/o5w
CLhdTS4t0mbCoWiVnHHJ+2gj1ROGGlnEocpTzG8HGja1Ww7XDhDeCQcEq9fG
OlD8LgzkGH7/4jqrNxzi82Vpq0Mcid8Nn2GP8M/M/xAfgQ7PO4VHr74g/DEU
V4LqRNJVFP8JBjeMJZX1LicsQ1WPRT0TzurfA8/RFqf8CivhSMid0p84bX5G
OApG+97JP/LYfIDBdMml+CWBLR8HZIUcnD40wvYhR6G/NOTcGO2Dk+PsqDyj
OsGe/KOhyt508kTOuC2ei8ZYzncXhr1MpI/Bssf9haoI6peLwYvSB+fTNpKf
IBZ8fb/2edYb0seifO3qLTXTrL69iDzbdHrnB+TH7cXE1z73E5SsHwUCetqP
3jj3mPQKLGTkiGS574mPg6Ho6s+ufbR/Lg5Cidfwy2MzxMdjaCK+StU+T3w8
xFO/7uH6mT4BPse7nMcCR4lPgG9qY5smdCXVr0THbIP70pyQ6lPiYv7AV4Xj
bB8qJO7vH3Q+xfxVSO0xCZq/Zf0ngnN9fzL0KX1vXCLmGw9UiBP7SK9GTHG5
a2/GIunVCPO1+Kb8zc7XPsz1tHbKnlE/3D5UTJ85/dprhPRJsAq7uWwJ6y8J
fTV2CvcUdn41qFR+X2ANWmfLBw0s9/m2dkfaP6eBVLX414UC0vMaGHmFn+NP
LuSvRaDbPaO/lfYNLWqzm4yj0eTPadFqCposkK2wxfNaTN3OM9/dTvMS6OBr
vVXZraTzBR0W1Tejymdp/5wObW65fL2R/i+8Dn2ZPzRm+YtIr0fRQr5jSxvF
Qw/vYNF4Wqk7zVOPw568X3QZzZ/XI+7R5ExeBPsffApT19S9rgER/gWTGnKJ

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 80.}, {0, 10.588837133273831`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"SZGK\"", "\"G\[OAcute]lyairoda\"", "\"M\[EAcute]rce\"", 
       "\"Lahmacun\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9277866566060066`*^9, 3.927786684990553*^9}},
 CellLabel->"Out[663]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"day", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"seasonFitEvaluation", "[", 
            RowBox[{"[", "day", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "heatMeasureType", "]"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"heatMeasureType", ",", "1", ",", "1"}], "}"}]}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"day", ",", "1", ",", 
       RowBox[{"Length", "[", "seasonFitEvaluation", "]"}]}], "}"}]}], "]"}], 
   "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.927781078339054*^9, 3.927781082756375*^9}, {
  3.9277811186778746`*^9, 3.927781163133838*^9}, {3.927786693178293*^9, 
  3.9277867051783733`*^9}},
 CellLabel->"In[665]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1lA1ME3cYxs8xBMWZsploIgacDokShiK1TIGH0pa2SCmlmjHQiFFiM5xO
w8gU3c3Nj4VsKTpcmQi1VARBik4BDeohRUBwgo6MJRtSNkOEbHZCFre4D5c+
veRy+d3zPs/7/u/uf4u37jJtf0kQBOOL8/+r7/AmD7ged7RuqgVvQJppGAw4
WkYOhjbKotynaSXL8HJJkzFux1XJx/OgDTq0tUJlJS/AAmOMra+wkfVhENsu
TtnbiskRkJWL1fLeavLrKNn3S6TqyA3yUlj/WHi+dPAcORKjzy8Lf88/Ro7C
jt9CPcWv3iQvx+6q3/tvvnKSHA1Z1Yo56cHl5BiYqwNTugQn54tFz6/Pa9QG
f7+VyN9/V3Qs6iCvwpXaxXn//NBFjsPwA53i9HsV5NVA4Uh8jtNFjodse+o8
8W4D8+UYbp15a2LcQV4D5aTC3ZDfx3oFKhPsZ02bW8gJePvjGY+Sf2pi/VvA
uLo8t/QweS3m6Hs9vYOXWL8O3p7bNc1X/etLhPhXmbfWs5P1Seg5ec4xlnyP
ejLaHGHy/HcvUQdio28nXKk75dNFwNv3NDSpoJn1KZBGW4rv/bzNVy+mQGjv
PhQ9WUpdCaU78rWdR3vpV+JgwcM1Fzy3qKei7sex2M822OlPhZizdE/q/Ub2
V0Gln3W9yFpPXYXmZ0mT66b986kR1e5d/uRUDXU1nlbJZ4wV+/M1WF8tJbyT
+A37a2BPVJg7cIb+NFjvm78f6T5LPQ1CeUbGDUc+dS2O6QcHDlv4vYpahP9r
K/vT4Ga+DlZXyLJdH7XTr8N0Z9ediW2t9OtRsje+v6aA71fUQzgzNaR7vJ/+
dHwX1BiuCPSvPx32uQcVRYFH6F+PCOe1uiWhnzD/BVv69zysP01/BmxBUyGW
oCbqGWj7eiAgpaGKugHSt8PO8Zj3mW+AkDtV2b03l3omBENaZ+eHG+nPhBgs
i/Ec/5z9jbDFRV0LOc/9ByM0j4ZmrQrh8xeNED6tNL3xwOLTJSPcjiXaikgH
87MgK3UpdBe4P5EF8clIwNr6evbLgvxA3vSQotaXJ2UhYv6d3UWZdvpNgLmw
7mLjl/SbYNu8Iaxwwka/CaNG2dhsNd+fZILw7E1DYssJzp+ND9SXt8zNk+jP
RpjLvUWzkPOJ2Yjon73oK+dx+rMRnCMbKQr3/2/MkA7YNQMbv8B/2uJ3TA==

     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 80.}, {-6504.200449853208, 15999.77058882582}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9277810841335435`*^9, {3.9277811166062527`*^9, 3.9277811635172005`*^9}, {
   3.927786699710941*^9, 3.92778670544381*^9}},
 CellLabel->"Out[665]="]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["fit for multiple days cycle 1", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9278736949149466`*^9, 
   3.92787370026421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"daysToFit", "=", 
   RowBox[{"{", 
    RowBox[{
    "32", ",", "37", ",", "42", ",", "57", ",", "67", ",", "72", ",", "77", 
     ",", "82", ",", "92", ",", "122", ",", "127"}], "}"}]}], ";"}]], "Input",\

 CellLabel->"In[128]:="],

Cell[CellGroupData[{

Cell[TextData[StyleBox["calc fit",
 FontWeight->"Plain"]], "Subsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696807398823*^9}, {3.9278679625655046`*^9, 3.927867962815778*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["calc",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.92777781639787*^9}, {
   3.927867237704297*^9, 3.927867253304248*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetSimulatedCycle", "[", "1", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSimulationParameters", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9274550685657244`*^9, 3.927455079814877*^9}, {
   3.9274587826534233`*^9, 3.9274587830976877`*^9}, {3.9274653350022993`*^9, 
   3.9274653354694*^9}, 3.9278737081143074`*^9},
 CellLabel->"In[60]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tournamentSize", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tournamentWinnerNumber", "=", "3"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tournamentRounds", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutationMagnitude", "=", "0.1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9274561441662283`*^9, 3.9274561448723316`*^9}, 
   3.9277008731390705`*^9, {3.9277016882852507`*^9, 3.9277016996458626`*^9}, 
   3.9277021990858583`*^9, 3.9277034807538896`*^9},
 CellLabel->"In[62]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"initialPopulationSize", "=", "30"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chromosomeLength", "=", 
   RowBox[{"2", 
    RowBox[{"Length", "[", "roomsOnCycle", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.927467291229319*^9, 3.9274672959979*^9}, {
  3.9277017066317167`*^9, 3.9277017131748323`*^9}, {3.9277022096008315`*^9, 
  3.927702209637347*^9}, {3.9278738649114485`*^9, 3.927873870156542*^9}},
 CellLabel->"In[66]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"daysToFitCandidates", "=", 
   RowBox[{"{", 
    RowBox[{
    "32", ",", "37", ",", "42", ",", "47", ",", "52", ",", "57", ",", "62", 
     ",", "67", ",", "72", ",", "77", ",", "82", ",", "87", ",", "92", ",", 
     "103", ",", "107", ",", "112", ",", "117", ",", "122", ",", "127"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testIndividual", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", "chromosomeLength"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataExistenceCheck", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"#", ",", "\[IndentingNewLine]", 
         RowBox[{"Check", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"SetSimulatedDayForComparison", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"None", ",", 
                   RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "]"}], ",",
                  "None"}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{
               "EvaluateParameterVector", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"testIndividual", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"chromosomeLength", "/", "2"}]}], "]"}], "]"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"testIndividual", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"chromosomeLength", "/", "2"}], "+", "1"}], ";;", 
                    "chromosomeLength"}], "]"}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
              "}"}], ",", "\[IndentingNewLine]", "5", ",", 
             "\[IndentingNewLine]", "\"\<error\>\""}], "\[IndentingNewLine]", 
            "]"}], ",", "\[IndentingNewLine]", "\"\<error\>\""}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], "&"}], 
     ",", "\[IndentingNewLine]", "daysToFitCandidates"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorDays", "=", 
   RowBox[{"daysToFitCandidates", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"dataExistenceCheck", ",", "\"\<error\>\""}], "]"}], "]"}], 
      "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"daysToFit", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"daysToFitCandidates", ",", "errorDays"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9277054347388754`*^9, 3.927705435140396*^9}, {
   3.927705484168851*^9, 3.92770549357543*^9}, {3.9277055421557426`*^9, 
   3.9277055891736846`*^9}, 3.927705984911271*^9, {3.9277830736181555`*^9, 
   3.9277830854880753`*^9}, 3.9277879167013083`*^9, {3.9278737317247934`*^9, 
   3.9278737623295116`*^9}, {3.927876687906621*^9, 3.927876688610524*^9}, {
   3.9278768283111486`*^9, 3.9278768943126564`*^9}, {3.9278772086493106`*^9, 
   3.9278772102614045`*^9}, {3.9278772945921884`*^9, 
   3.9278772994941273`*^9}, {3.927877373035617*^9, 3.927877405143362*^9}, {
   3.927877509784393*^9, 3.927877511141227*^9}, {3.9278775414940033`*^9, 
   3.927877545041109*^9}, {3.9278776214610205`*^9, 3.9278776269166613`*^9}, {
   3.9278776572844143`*^9, 3.9278776595359316`*^9}, {3.9278777759763556`*^9, 
   3.927877828189341*^9}, 3.9278778692739496`*^9, {3.9278779113826222`*^9, 
   3.9278779799736967`*^9}, {3.9278793711614122`*^9, 3.927879446960685*^9}, {
   3.9278795575085373`*^9, 3.9278795963179636`*^9}, {3.9278796758918295`*^9, 
   3.927879710510893*^9}, 3.9278799903970127`*^9, {3.927880048510295*^9, 
   3.927880089466241*^9}, 3.9278801956415467`*^9, 3.9278802316718683`*^9},
 CellLabel->"In[114]:="],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9278780885648613`*^9, 3.927878095880519*^9}, 
   3.9278800808984714`*^9, 3.9278803113545647`*^9, 3.9279498085446644`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dayFitResults", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numOfGenerations", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempErrorWeight", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatErrorWeight", "=", "0"}], ";", 
  RowBox[{"heatMeasureType", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dayN", "=", 
      RowBox[{"daysToFit", "[", 
       RowBox[{"[", "dayNN", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"startPopulation", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "2"}], "}"}], ",", "chromosomeLength"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "initialPopulationSize"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "evolution", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{"DateString", "[", 
           RowBox[{"Date", "[", "]"}], "]"}], "<>", "\"\<: starting \>\"", "<>", 
          RowBox[{"DateString", "[", 
           RowBox[{"NormalizeDate", "[", 
            RowBox[{"seasonDays", "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"SetSimulatedDayForComparison", "[", 
         RowBox[{"dayN", ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"None", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "]"}], ",", 
          "None"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"evolution", "=", 
         RowBox[{"Module", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "generations", ",", "population", ",", "newGeneration", ",", 
             "newPopulation"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"generations", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{"g", ",", "2"}], "]"}], "==", "0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Echo", "[", 
                   RowBox[{
                    RowBox[{"DateString", "[", 
                    RowBox[{"Date", "[", "]"}], "]"}], "<>", 
                    "\"\<: starting generation \>\"", "<>", 
                    RowBox[{"ToString", "[", "g", "]"}]}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"g", "==", "1"}], ",", 
                 RowBox[{"population", "=", "startPopulation"}], ",", 
                 RowBox[{"population", "=", 
                  RowBox[{
                   RowBox[{"generations", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"newGeneration", "=", 
                RowBox[{"GenerateNewPopulation", "[", "\[IndentingNewLine]", 
                 RowBox[{
                 "FitnessFunction", ",", "tempErrorWeight", ",", 
                  "heatErrorWeight", ",", "heatMeasureType", ",", 
                  "\[IndentingNewLine]", "population", ",", 
                  "\[IndentingNewLine]", "tournamentSize", ",", 
                  "tournamentWinnerNumber", ",", "tournamentRounds", ",", 
                  "\[IndentingNewLine]", "mutationMagnitude"}], 
                 "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"g", "==", "1"}], ",", 
                 RowBox[{"generations", "=", 
                  RowBox[{"{", "newGeneration", "}"}]}], ",", 
                 RowBox[{"generations", "=", 
                  RowBox[{"Join", "[", 
                   RowBox[{"generations", ",", 
                    RowBox[{"{", "newGeneration", "}"}]}], "]"}]}]}], "]"}], 
               ";"}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", "1", ",", "numOfGenerations"}], "}"}]}], 
             "]"}], ";", "\[IndentingNewLine]", "generations"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"dayFitResults", "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"dayFitResults", "=", 
           RowBox[{"{", "evolution", "}"}]}], ",", 
          RowBox[{"dayFitResults", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"dayFitResults", ",", 
             RowBox[{"{", "evolution", "}"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
           "\"\<\\\\ga_3.mx\>\""}], ",", "dayFitResults"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"dayNN", ",", "1", ",", 
      RowBox[{"Length", "[", "daysToFit", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9274567690167875`*^9, 3.9274569141841583`*^9}, {
   3.9274579054821672`*^9, 3.9274579241589375`*^9}, {3.9274586432260027`*^9, 
   3.927458671930293*^9}, {3.927458789419142*^9, 3.9274591186188264`*^9}, {
   3.927464279500599*^9, 3.927464286851693*^9}, {3.9274644106180663`*^9, 
   3.9274644982108827`*^9}, {3.9274645621806397`*^9, 3.927464562528467*^9}, {
   3.927467293634835*^9, 3.927467294099141*^9}, {3.9276963199081645`*^9, 
   3.9276963204384456`*^9}, {3.9276976668503323`*^9, 
   3.9276977005930853`*^9}, {3.9276977488352337`*^9, 
   3.9276978387459955`*^9}, {3.927698184500781*^9, 3.927698235781805*^9}, {
   3.9277022147167573`*^9, 3.9277022293337355`*^9}, {3.927702783477537*^9, 
   3.927702813155833*^9}, {3.927703472559493*^9, 3.9277034739266715`*^9}, {
   3.9277047769364357`*^9, 3.9277047769758673`*^9}, {3.9277048795702515`*^9, 
   3.9277049436465025`*^9}, {3.9277053571532497`*^9, 3.927705433599264*^9}, 
   3.9277055501705184`*^9, 3.927713929791606*^9, {3.927714781787706*^9, 
   3.927714834130328*^9}, {3.92778312240606*^9, 3.927783127556961*^9}, 
   3.9277879167084293`*^9, {3.9278679224158764`*^9, 3.9278679226127667`*^9}, {
   3.9278738347556844`*^9, 3.9278739014357214`*^9}, {3.927876333822257*^9, 
   3.9278763468962417`*^9}, {3.9278767702672033`*^9, 3.9278767721118145`*^9}},
 
 CellLabel->"In[122]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"dayFitResults", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\ga_3.mx\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927867133845441*^9, 3.927867146035495*^9}, {
  3.9278739083547277`*^9, 3.9278739084119377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dayFitResults", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.927867199745812*^9, 3.9278672011078444`*^9}},
 CellLabel->"In[447]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17", ",", "30", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.927867201375947*^9},
 CellLabel->"Out[447]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"g", ",", 
           RowBox[{"GetMeanAndSEM", "[", 
            RowBox[{"100", " ", "/", 
             RowBox[{
              RowBox[{
               RowBox[{"dayFitResults", "[", 
                RowBox[{"[", "fittedDay", "]"}], "]"}], "[", 
               RowBox[{"[", "g", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"g", ",", "1", ",", "30"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"fittedDay", ",", "1", ",", 
       RowBox[{"Length", "[", "dayFitResults", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"GrayLevel", "[", 
       RowBox[{
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "dayFitResults", "]"}], "+", "2"}], ")"}]}],
         "+", 
        RowBox[{"#", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "dayFitResults", "]"}], "+", "2"}], 
          ")"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "dayFitResults", "]"}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9274643353648047`*^9, 3.92746434008138*^9}, {
  3.927464576621414*^9, 3.9274646897012777`*^9}, {3.9274647259647884`*^9, 
  3.92746474396358*^9}, {3.92747184542624*^9, 3.9274719233452573`*^9}, {
  3.9274725221155233`*^9, 3.9274725232803445`*^9}, {3.92769767290164*^9, 
  3.9276976832881775`*^9}, {3.927699914011529*^9, 3.927699925307643*^9}, {
  3.927702572248382*^9, 3.9277025903281455`*^9}, {3.9277033101942053`*^9, 
  3.9277033326662536`*^9}, {3.927713792141761*^9, 3.927713794601362*^9}, {
  3.927716145753454*^9, 3.927716171120576*^9}, {3.9277162394439325`*^9, 
  3.927716241991703*^9}, {3.927867207438738*^9, 3.9278672075453815`*^9}},
 CellLabel->"In[127]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[
      NCache[
       Rational[2, 13], 0.15384615384615385`]], PointSize[
     0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7IN27/U+5afpABVweBJfsfL6JiUon8Ohe432
tfVuglC+gEOlZdKBv4ycUL6Iw9fHSxYsm8YG5Us4ON1mufN6OYwv42BvdeZl
1lFWKF/BYd4Noe9F02B8JQfBqsUzG+phfBUHq91rjUx+MkP5ag5Peb8enO0N
M0/Doaw+bOruJzD1Wg7JTttnmu2AqddxELuT1RlRzATl6zm81rE+sfIZTL2B
g+p13wjjFHYo39DhecgMoc+uML6RA++6aq5XfDD1xg7nvHIStUxYoHwThw2z
H/98+BBmn6lDsaaX3UozDijfzOHgFum5v0/D5M0dWIVf5opawtxv4RCzJPTg
4Scw+ywdPsleqOvlhclbORhrqc1cswJmv7XDVLbtvJ/WMUL5Ng6SFx9zTLWA
2WfrYFLxeoGmI8w+O4dpJtw29yQ4HABeoXNB
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[3, 13], 0.23076923076923078`]], PointSize[
     0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7E35rLdNmKrpABVwuBU5c/LtaxJQPoeDrVPP
8U4tQShfwEGRV2vjxiJuKF/EoYkjXu8YE4wv4TBXbmt9wVd2KF/GoT7nyJGP
nBxQvoLDHiu1HVbtnFC+ksO/GjmGTQkw9SoOfjwTml3XMkP5ag6H3/r7FJ5n
gfI1HM7ZqK+J3wLjazksWLOIe89qmHodB6vnFxbHaMDM03MwdfbfNiMDxjdw
qL1ozXbjN0y9ocO6kFViywSZoHwjh2o+U8137axQvrFDsdYCQf4vML6Jw0pj
3iOP/GH+MXWY11m0uiIaZr6Zw//0D9zdZWxQvrlD+vyY9y0zYPIWDoksdjLi
r2H6LR0cHOZInjDlgvKtHFqrPDbFXYbJWzusNEk4q7cIZp6Nw/8A49roXzC+
rUNyfPqVy7Ng5ts5GOqslnKrY3MAAGPObDw=
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[4, 13], 0.3076923076923077]], PointSize[0.007333333333333334],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7DOn912xbtRxgAo46MhvaGv0UofyORx451op
2UcqQPkCDonHLOc+spSE8kUcdjU1LjezEYPyJRym6qRYdjeLQPkyDsem3Nke
08wH5Ss41EQzXO5iYIPylRw8j2gaiXoyQ/kqDt9PZp0RXMMK5as5SMdkW1dU
wvgaDv3+k2pWusP0azmcYu6cYvIOJq/jcNxXrk1ClQPK13P4lrnH+uJ2mHoD
h9cfbuwsvsAF5Rs6yC36++7mRhYo38jBMEP9j1sHI5Rv7ODbdKiLxwBmvokD
77nFRyQ+sUP5pg4CRzr+VfLC5M0cPuqbrGV5BPOPuUPBlgd8Gzth6i0cHKw/
f5sVB+NbOqQnX7DMP8oJ5Vs5JCvf0/Nwgpln7SApabVUcAFM3sYhOHIulyQb
zD+2DmvWJD468QSm3s5BdcP05twINgcAluJtSw==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[5, 13], 0.38461538461538464`]], PointSize[
     0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7A1Onyi681vSASrgkPe44ED5RyEon8Pht9mz
5lMLBKF8AQdW1eXckZL8UL6IQ/CkvN086qxQvoRDzTZtD6nrP+0hfBmHddns
ckaFP6B8BYe3kv7t6czfoXwlB+ENeh++X4TxVRzSD6T3bDsPU6/mEBJqt7gi
G8bXcJg2KfzDHEaY+VoOC+95TZT2/gXl6ziolPk5t5fB1Os53J0jvPLHe5h6
AwcRE+lf9w7B+IYO4gX9YfPLYfqNHNyyPprmHfoN5Rs7fDT5/0/XE8Y3cTBv
4Lb8ZAnjmzoUX9MTmOYD45s5aG/I+cPb8QfKN3d4PjG/6/0xmH0WDtzZ/44k
t8Pss3T4kr3p2dfJML6Vw+0+UekEuPusHRY+cFtQMQtmvo3D8psRlqIdMHlb
hwlFIvvWR8Pk7RzC70g0mn/6ZQ8ACPyJKg==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[6, 13], 0.46153846153846156`]], PointSize[
     0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Cdm2NVP5DdwgAo4CChc7k5p1obyORyO9570
YDJVhvIFHLbET3mQkCgH5Ys4mFpv33g9QhLKl3BofRO1Jl1KDMqXcZge39Og
eAvGV3Co9N6wb/MmcShfySGP6W+B9mkYX8VBpPVF55alElC+msP5it0Kv/7D
+BoOj0r2Ps1PgPG1HMofKO1Y9RDG13HQC7v63YMR5h49hyP37i7uWSwL5Rs4
LH+y/89jJ5j7DR0Snc00+grloXwjh6XO1xbxCspA+cYOB9puNASugKk3cchk
/G0mdgXGN3UoyEr/dfsiTL2Zw9Jl21p+tShA+eYOAVW1uh9EYOotHGYWL67Z
zQqTt3SQX+UWHmigCOVbOew/w2Zq2AELb2uH3ZaXtOxYVKB8G4efp5U6orVh
fFuH4z87n28vUYLy7RwKZQy5gp8oOQAALVJ2SQ==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[7, 13], 0.5384615384615384]], PointSize[0.007333333333333334],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7EtyEn4k7ldxgAo4HPmy5c3nJkUon8MhrK2R
efMXCShfwEHncpVKzUYxKF/EYf9+gZnbX4pC+RIOD+Wf3+6WEoHyZRxOv6q+
LxkCU6/gkJCo8PBnI0xeycHeOqOv4oYwlK/ikDL3QfBdRph6NYefnqaz/HJg
5ms41J1f5J/cB9Ov5cCa7fJm/QwYX8dh5uH294FbYfr1HBZIqMucVhSH8g0c
tvPxL1R5DpM3dNhY+uG57jEY38ghZ/qnBRK6MPXGDqcsGzxyGWB8E4cnAX8m
W/NLQfmmDmsOCe4zbIfJmzlYvprXe0UGJm/uYBn3UuauniSUb+Gwcypj5eQP
MHlLh/U3Ep3j2WF8K4eLv7f8l9skDeVbO6gWJazvfgyTt3GYIiDc8uYZTN7W
oeBN1jXj+zJQvp3D5a3z51kvlXEAAIb0eLU=
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[8, 13], 0.6153846153846154]], PointSize[0.007333333333333334],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7KUPzvD9/VHbASrg4HKk1KhzggqUz+HwR7n1
q06YIpQv4PCKY12J2xYZKF/EQSZOI+FFtySUL+FgXuj6WyQPxpdxiC07wxWS
LQrlKziEN9478PWBGJSv5GDwrGNO/yeYvIqDX27/PflycShfzWH23tsfGoUl
oHwNh+J8Dl6pKzC+lsP5fbyHZO/D1Os4TAi4rxvaKwXl6zmIbHvMHbdcGso3
cPAun63qs00Wyjd0EDgQNu/fPBjfyGHOH9fp96bC1Bs7+OW7vp5hBfOvicO1
y1ta1b7A5E0dlLm1LR8+htln5rDBe/GBhzth5pk71Lh9LbDNgfEtHKJ9r361
2CsP5Vs6XDvULnL/PEzeyuEOn06hVpkClG/t0Lbe/Zb5Y5h6Gwen57U8vy/B
+LYOX6LXeBe3w9TbOSTMvSqmFK7oAAD2mHaj
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[9, 13], 0.6923076923076923]], PointSize[0.007333333333333334],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7C8G9V7N5lVwgAo4fPFs38GyQQbK53A48GQz
c95/SShfwOF89PLdl1aIQfkiDlzlfY9vTRCA8iUcVI4vi3Bn4oTyZRwefJCL
2L+VA8pXcHA+kiCXeJcVyldyeNzXFfwxiRnKV3HwUe3UOO/EDuWrOZy1TD7g
6whTr+EQLmw4J3AuG5Sv5XCstEps70UYX8ch/Nm5dzZHuaF8PYedDWoV1fow
voGD30TJpicTYeoNHZTOu0+bOJMPyjdyECz7+PHFbph/jB3exa2ftjkAxjdx
YGK0XTjfBuYeU4dfNxz72Uph8mYOs847PD7TBXO/uYP2jpkRjRtg6i0c3iby
TnqUBpO3dPjkPyHFbb8QlG/lcFThcIXRTBjf2uGac/300Okw820cmiolY8XX
w/i2Dv2vVnywFYSpt3Pw8RHzOOop4AAAQjhz7w==
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[10, 13], 0.7692307692307693]], PointSize[
     0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7IOvvnPIz5dzgAo47Pl9aiuHsTCUz+Hw9/JF
B+51/FC+gEOvzvdZRmzsUL6Iw5sGrinPtzNA+RIOCx7y5kyK/2sP4cs4nJuy
yip56k8oX8HB7dGS4pBfML6Sw6Ffh9WFO2F8FQfBkB3RWkq/oHw1B0bLVQw+
135D+RoOURkPZ/Dk/YHytRzYhE+kPZgMk9dx8OqpPbGlHMbXc5hZK/2T0R/G
N3Dw3HG/86UsjG/owP//scb/eph9Rg7CqztL+w7CzDd2sCuWnx9eAJM3cShe
uOzrlGYY39ThovT0eXWXYOaZOZi5Pnxuuhbmf3OHo6bPvTLWweQtHPbdYf93
di6Mb+nwesfh+Q6GMPusHMrtDgVtmASTt3ZYuGelt87+f1C+jUPMrX8c9nUw
820d/t6r61vLA+PbOYR4VS9Pv/LHHgA6b4za
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[11, 13], 0.8461538461538461]], PointSize[
     0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Avsvc6uiFd3gAo4xPltijAVU4byORza2AVk
jD/LQ/kCDp2rDdZMF5OC8kUcVCfUGP9fKgTlSzgsC/J/FPGOB8qXcSioEEiT
fcgJ5Ss4LHo1/9mTqRxQvpLD/n+yyr/K2KF8FYfJaj7vG2+zQPlqDtvW/w1L
04PJazhclkys77zHCuVrOSh4sGTa68L4Og7/mr6XfOaH8fUc2kV2yU36BzPP
wIHrC4fl5ckwvqHDPVmVtK3WMPcYOTy5kfCg5NB/ewjf2CGd/bTz+XWMUHkT
Bx3FZVlhHsxQvqlDS7zdU+NPTFC+mcNFhxWGDmdg9ps7eL77XL+bDSZv4fAo
4zCvySqY/ZYOlXt7TE2KYeZZORQrTShoPgazz9pBLfvfZ954NijfxmHOq7+H
Qr1h5ts6KGmd3yimCJO3c/jU9vtjxFMmBwDxS3J/
      "]]}, 
    {GrayLevel[
      NCache[
       Rational[12, 13], 0.9230769230769231]], PointSize[
     0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7H/PkLi3s0HaASrgYLKYPXnzDGEon8OhR1rF
dMEbfihfwKH1iN77pXxcUL6Iw9lVwQt2zGaE8iUcjIvlbwZM+GMP4cs4OL/c
KzxV/TuUr+Bwe97Vq+Y3vkL5Sg62Wzhltsl8gfJVHL66m7k9m/IDyldzYM1g
zV56Byav4TBX5mXeVOFPUL6Ww6+MX0lxXt+gfB0Hw88rzaIYf0L5eg42/adt
VHtg+g0c/mZ8XMVZDNNv6PBO/mpCxwWYe4wc6p2PXCw4ATPP2OGeyp55czfC
9Js4qH62myJqDeObOiw8FfDo3sLPUL6ZQ5o9s98HDZi8ucM8c5U5TY0w/1s4
HH7SHFx8F2a/pYPgSbHwgGiYeiuHzjsd3lGSMPXWDkqBE/8/vgVzj43Dcunl
oUu/wPi2DjqHWW9d2Q8LLzuH/1uWGdy0+GYPAMZ0igg=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 0.5185368361206104},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5, 30.5}, {0.5185368361206104, 17.625853265673875`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{{{{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[2, 13], 0.15384615384615385`]], 
       PolygonBox[{{1, 11.808947730965862`}, {2, 8.468628794600413}, {
         3, 3.6888641323758278`}, {4, 2.9091129899578836`}, {
         5, 2.6116875962482835`}, {6, 2.6072369154160606`}, {
         7, 2.5415434474843948`}, {8, 2.483874805559569}, {
         9, 2.492385279124304}, {10, 2.2642752715216155`}, {
         11, 2.55181660394216}, {12, 2.5392457461484645`}, {
         13, 2.31269809632295}, {14, 2.1166284859375444`}, {
         15, 2.5173803058536643`}, {16, 2.7135008556174753`}, {
         17, 2.6309658897183477`}, {18, 2.3873001769034166`}, {
         19, 2.3417868137839033`}, {20, 2.2633162310846515`}, {
         21, 2.675627491182851}, {22, 2.281239300303111}, {
         23, 2.5582325475153724`}, {24, 2.71169578858665}, {
         25, 2.4938294770237417`}, {26, 2.4652412017945755`}, {
         27, 2.0553007785763207`}, {28, 2.76062489332725}, {
         29, 2.259814658925716}, {30, 2.715530556623042}, {
         30, 3.308754700891839}, {29, 2.553820704054097}, {
         28, 3.2946311290353}, {27, 2.3655444575305546`}, {
         26, 2.9494797082342608`}, {25, 3.019405597451024}, {
         24, 3.2617072082892795`}, {23, 2.9975132614204854`}, {
         22, 2.6679627173055738`}, {21, 3.377752495843825}, {
         20, 2.7072723619377896`}, {19, 2.7091561052173248`}, {
         18, 2.8772644934674685`}, {17, 3.1873441713049697`}, {
         16, 3.1343512597761647`}, {15, 2.95787673666093}, {
         14, 2.496013942600968}, {13, 2.6171976878741527`}, {
         12, 2.9341260775480653`}, {11, 3.0220197518221585`}, {
         10, 2.7290879104067525`}, {9, 2.882128729018962}, {
         8, 2.913048126612518}, {7, 2.901247206783926}, {
         6, 3.056748754479508}, {5, 3.035432412281489}, {
         4, 3.3428315576906873`}, {3, 4.949196144448454}, {
         2, 10.229974446259881`}, {1, 13.49882655894848}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[3, 13], 0.23076923076923078`]], 
       PolygonBox[{{1, 12.11845979684918}, {2, 5.875928914771238}, {
         3, 4.050632405936433}, {4, 3.213098876291203}, {
         5, 3.180968426672409}, {6, 2.8689640018033913`}, {
         7, 2.843510055850535}, {8, 3.025773470758499}, {
         9, 2.7461922857014645`}, {10, 2.3137097852240105`}, {
         11, 2.438724036147753}, {12, 2.424936817085245}, {
         13, 2.3021809384763676`}, {14, 2.7337540666609725`}, {
         15, 2.7548344123593873`}, {16, 2.3509819593621177`}, {
         17, 2.1126415638934852`}, {18, 2.542324243395531}, {
         19, 2.5950432497290588`}, {20, 2.879818908945113}, {
         21, 2.7502481725303767`}, {22, 2.623144974548731}, {
         23, 2.8059168986763794`}, {24, 2.949741518942003}, {
         25, 3.0834329706511046`}, {26, 2.927218128962725}, {
         27, 2.675302824447715}, {28, 2.718789870044853}, {
         29, 2.7957768366152713`}, {30, 2.699375234764341}, {
         30, 2.9239390664380016`}, {29, 3.105421854571026}, {
         28, 3.025699758038475}, {27, 2.9830788369644576`}, {
         26, 3.2791977967057457`}, {25, 3.469088162926054}, {
         24, 3.2798388274374903`}, {23, 3.093027708131557}, {
         22, 2.9926198212774486`}, {21, 3.0890793334070263`}, {
         20, 3.198194571532958}, {19, 2.8932954833725435`}, {
         18, 2.840420206089595}, {17, 2.404593576092711}, {
         16, 2.6449592956361085`}, {15, 3.0973106382500113`}, {
         14, 3.055661826536508}, {13, 2.6155285854912345`}, {
         12, 2.751209394438639}, {11, 2.7638565992839794`}, {
         10, 2.605500701824135}, {9, 3.0982367321864666`}, {
         8, 3.356286463221813}, {7, 3.1662012807514452`}, {
         6, 3.1207229597803776`}, {5, 3.571740699371262}, {
         4, 3.6489070900780507`}, {3, 4.53245001810477}, {
         2, 6.5437150714249}, {1, 13.465779580571098`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[4, 13], 0.3076923076923077]], 
       PolygonBox[{{1, 13.379762118166534`}, {2, 10.75695315087114}, {
         3, 7.2051200424137845`}, {4, 5.291929782725336}, {
         5, 4.635334240828219}, {6, 4.245073547909212}, {
         7, 3.189374204195123}, {8, 2.553665086453288}, {
         9, 2.245486228758645}, {10, 2.55450974833003}, {
         11, 2.541060682747215}, {12, 2.620734696494129}, {
         13, 2.571795291228088}, {14, 2.8134083395931375`}, {
         15, 2.6845580430894684`}, {16, 3.0688599220710437`}, {
         17, 2.4275300636688204`}, {18, 2.078591655425305}, {
         19, 2.4810076373398653`}, {20, 2.792769950430624}, {
         21, 2.5298137630677306`}, {22, 2.3539231099272526`}, {
         23, 2.75947394711743}, {24, 2.774038706433206}, {
         25, 2.9615141186426004`}, {26, 2.5477819597362084`}, {
         27, 2.950206170766225}, {28, 2.5623582421553417`}, {
         29, 2.5933547012304015`}, {30, 2.630290782727449}, {
         30, 2.956064480156028}, {29, 2.8800678615705575`}, {
         28, 2.9435966584468236`}, {27, 3.4561111411606387`}, {
         26, 2.7669465218504783`}, {25, 3.481292986749867}, {
         24, 3.0683493117892873`}, {23, 3.124990538494385}, {
         22, 2.6167978548003954`}, {21, 2.7333469206571746`}, {
         20, 3.1936526574660444`}, {19, 2.81591520670948}, {
         18, 2.3044916307696988`}, {17, 2.7461528493775837`}, {
         16, 3.634706537456957}, {15, 2.9949510562746906`}, {
         14, 3.222818024160752}, {13, 2.910827161376892}, {
         12, 2.9492477811041575`}, {11, 2.8275620288423324`}, {
         10, 2.863526897576303}, {9, 2.575883689873137}, {
         8, 2.946864485935181}, {7, 4.438909175205326}, {
         6, 6.011848023324814}, {5, 6.482270238541331}, {
         4, 7.321127271129227}, {3, 9.14349955150209}, {
         2, 12.534085760946866`}, {1, 15.125057069772504`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[5, 13], 0.38461538461538464`]], 
       PolygonBox[{{1, 6.136423493867859}, {2, 4.421870291308213}, {
         3, 4.085721176043849}, {4, 3.5422393221965507`}, {
         5, 2.408220840397259}, {6, 1.5099237881761802`}, {
         7, 1.458365991266605}, {8, 1.3681795578092613`}, {
         9, 1.4262459192841206`}, {10, 1.481509099443226}, {
         11, 1.46128374070433}, {12, 1.5030271362857495`}, {
         13, 1.5855757656181362`}, {14, 1.4837611172991894`}, {
         15, 1.5606792561554559`}, {16, 1.5414094864368195`}, {
         17, 1.600597263673537}, {18, 1.6741429709122093`}, {
         19, 1.646940518507399}, {20, 1.6401131951514916`}, {
         21, 1.6645256726867736`}, {22, 1.718549868811973}, {
         23, 1.5744600163850706`}, {24, 1.6126636144948792`}, {
         25, 1.612629123099534}, {26, 1.5644065251831805`}, {
         27, 1.67115190165143}, {28, 1.5559156167708457`}, {
         29, 1.654987353041399}, {30, 1.6327936077438858`}, {
         30, 1.7354763207793575`}, {29, 1.7647814429247575`}, {
         28, 1.6355311148194187`}, {27, 1.7792734868402085`}, {
         26, 1.6555033445786669`}, {25, 1.709617239891797}, {
         24, 1.7034446494881086`}, {23, 1.6476765588654063`}, {
         22, 1.8478830574298057`}, {21, 1.747869925180594}, {
         20, 1.7631808394854616`}, {19, 1.7637917433060446`}, {
         18, 1.7957938018442767`}, {17, 1.7078121184336024`}, {
         16, 1.678742370896538}, {15, 1.6814942447744086`}, {
         14, 1.5741140637386701`}, {13, 1.7010979090581297`}, {
         12, 1.6227604820390107`}, {11, 1.591192451140383}, {
         10, 1.6199133028587975`}, {9, 1.5512777665763209`}, {
         8, 1.508482750980449}, {7, 1.5969053811484222`}, {
         6, 1.7201068093522867`}, {5, 2.879913666423185}, {
         4, 4.23251442200196}, {3, 4.728323892556222}, {
         2, 5.049746466828843}, {1, 6.855492768769231}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[6, 13], 0.46153846153846156`]], 
       PolygonBox[{{1, 15.107018798196918`}, {2, 12.76514202028714}, {
         3, 8.878553065017886}, {4, 7.098009836723457}, {
         5, 5.888634510981344}, {6, 5.179421094795805}, {
         7, 5.268866167451478}, {8, 5.548059105376564}, {
         9, 5.561741103676446}, {10, 5.74973323573747}, {
         11, 5.8796347589087725`}, {12, 5.6947627850135305`}, {
         13, 5.831955187708687}, {14, 5.870374759928944}, {
         15, 6.962288800047527}, {16, 7.10759297480102}, {
         17, 7.3383664033250176`}, {18, 6.5952525112223395`}, {
         19, 7.188615230174642}, {20, 7.239741920684343}, {
         21, 6.768244600945041}, {22, 7.778951028704279}, {
         23, 7.04622162023527}, {24, 7.52210159501018}, {
         25, 8.062881304702787}, {26, 9.244814621908708}, {
         27, 9.432550375794168}, {28, 9.551623974425032}, {
         29, 8.627610000810494}, {30, 8.845401754042102}, {
         30, 10.046490332931102`}, {29, 9.828321158385856}, {
         28, 10.617741439713098`}, {27, 10.584023221469728`}, {
         26, 10.287186219384727`}, {25, 9.12585985926824}, {
         24, 8.50029047757699}, {23, 7.994673290164274}, {
         22, 8.740496578901196}, {21, 7.64163682407708}, {
         20, 8.17449006454164}, {19, 8.140131590686641}, {
         18, 7.438054648826434}, {17, 8.383421294108382}, {
         16, 8.02305268028212}, {15, 7.8571435737944855`}, {
         14, 6.6321350674865895`}, {13, 6.608800422049141}, {
         12, 6.493590924566913}, {11, 6.620320440222959}, {
         10, 6.573909790265193}, {9, 6.335074702602687}, {
         8, 6.300968489209201}, {7, 6.1571706836069335`}, {
         6, 5.8721511194253}, {5, 6.7848861051848655`}, {
         4, 8.092182403144747}, {3, 10.328513041022568`}, {
         2, 14.74811094282116}, {1, 17.014608919272185`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[7, 13], 0.5384615384615384]], 
       PolygonBox[{{1, 9.710170698325964}, {2, 8.376793220351102}, {
         3, 5.967568762553947}, {4, 5.426678131688007}, {
         5, 5.274040205916798}, {6, 4.818467674956537}, {
         7, 5.392369346982034}, {8, 4.938618241810604}, {
         9, 4.754010434635106}, {10, 5.327577029777426}, {
         11, 5.132963331034282}, {12, 4.969347365139179}, {
         13, 4.970709018675477}, {14, 5.475049967017802}, {
         15, 5.565153816952649}, {16, 5.52913810815159}, {
         17, 5.507561592953655}, {18, 5.564112478708821}, {
         19, 5.50035159773331}, {20, 6.235173979275463}, {
         21, 5.6773135785263715`}, {22, 6.323702839002049}, {
         23, 6.128827279330872}, {24, 6.556824382849758}, {
         25, 6.327573708984861}, {26, 6.7470087982675695`}, {
         27, 6.555486832503881}, {28, 6.781151226517485}, {
         29, 7.016017064310284}, {30, 6.96918027787403}, {
         30, 7.353540208762971}, {29, 7.419925299955344}, {
         28, 7.169871996717875}, {27, 6.888938254970158}, {
         26, 7.100883954229848}, {25, 6.68682496664203}, {
         24, 6.913050744411846}, {23, 6.462703428493179}, {
         22, 6.7326063132661655`}, {21, 6.0867378013145}, {
         20, 6.794577440316718}, {19, 6.000482166965249}, {
         18, 6.023966048372878}, {17, 5.87950739212992}, {
         16, 5.922313224978361}, {15, 6.000848914153617}, {
         14, 5.879090777499296}, {13, 5.3275081666804835`}, {
         12, 5.308754068256522}, {11, 5.578573857500454}, {
         10, 5.676064691155344}, {9, 5.168784336772559}, {
         8, 5.315241311719785}, {7, 5.771890548224996}, {
         6, 5.233380614498346}, {5, 5.682438659987588}, {
         4, 5.919972125416173}, {3, 6.510359503552779}, {
         2, 9.134741274219381}, {1, 11.037417958615382`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[8, 13], 0.6153846153846154]], 
       PolygonBox[{{1, 13.32158147024369}, {2, 9.442041245063612}, {
         3, 7.879419052720273}, {4, 6.561063376299003}, {
         5, 6.000727148027093}, {6, 6.089656701586302}, {
         7, 5.174158046850424}, {8, 5.526187720912588}, {
         9, 5.29681140321266}, {10, 5.721420033848251}, {
         11, 5.823508447123061}, {12, 6.0004038010760965`}, {
         13, 5.778779518010475}, {14, 6.452733497024567}, {
         15, 6.694357487941899}, {16, 7.246116505243976}, {
         17, 7.1790841672295915`}, {18, 6.709141191696718}, {
         19, 6.871007545550813}, {20, 6.802451393677878}, {
         21, 6.519206078765112}, {22, 7.212499147591485}, {
         23, 7.157934656359173}, {24, 7.7161277289839125`}, {
         25, 7.273777794075234}, {26, 8.005522527516444}, {
         27, 7.725749716035816}, {28, 7.71534682569067}, {
         29, 7.927543726258967}, {30, 8.36019549325979}, {
         30, 8.98016841660658}, {29, 8.60155929496208}, {
         28, 8.196724774621622}, {27, 8.21803578091499}, {
         26, 8.456062587207104}, {25, 7.632221047756352}, {
         24, 8.153447468510464}, {23, 7.553471603121147}, {
         22, 7.650551332234061}, {21, 6.925871613747718}, {
         20, 7.1744050080742765`}, {19, 7.243440384046971}, {
         18, 7.083572667187431}, {17, 7.631452167847341}, {
         16, 7.60993319952495}, {15, 7.132531904478662}, {
         14, 6.823306993612349}, {13, 6.156994392681644}, {
         12, 6.413857451593911}, {11, 6.214592297910022}, {
         10, 6.011244985194885}, {9, 5.6769405153047625`}, {
         8, 5.9131872286964855`}, {7, 5.535467519115976}, {
         6, 6.625347124771384}, {5, 6.772530112226515}, {
         4, 7.791036658647901}, {3, 9.45720446813565}, {
         2, 11.122552216689877`}, {1, 14.623659360934532`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[9, 13], 0.6923076923076923]], 
       PolygonBox[{{1, 7.464286670841436}, {2, 6.5819429893790735`}, {
         3, 5.96804450777766}, {4, 5.19486576881831}, {
         5, 3.655351463494204}, {6, 2.8588685422694624`}, {
         7, 2.775313090206503}, {8, 2.4970999470725603`}, {
         9, 2.2094891499101483`}, {10, 2.5882590589372194`}, {
         11, 2.3668205232009614`}, {12, 2.534525476349249}, {
         13, 2.472808328030992}, {14, 3.1435795814809744`}, {
         15, 2.925612341089312}, {16, 2.5146071105024537`}, {
         17, 3.4349788312667044`}, {18, 3.763867496820455}, {
         19, 3.5676012144341023`}, {20, 2.341101172237663}, {
         21, 3.6557297911399216`}, {22, 2.5740542359548213`}, {
         23, 2.3981205708335156`}, {24, 2.5884138870277886`}, {
         25, 4.232808373530522}, {26, 4.1529194752579555`}, {
         27, 3.732128345481324}, {28, 3.6331007624553866`}, {
         29, 3.868573904629155}, {30, 3.559240228750352}, {
         30, 4.584843035335349}, {29, 5.165101785659063}, {
         28, 4.708874363200453}, {27, 4.563446543020107}, {
         26, 5.146293718463183}, {25, 5.140775556119065}, {
         24, 3.2620597859027423`}, {23, 3.024247845363582}, {
         22, 3.3114929736234506`}, {21, 4.572835879625033}, {
         20, 2.96810151726542}, {19, 4.5900189379512}, {
         18, 4.603144108180274}, {17, 4.214990601690831}, {
         16, 3.127866141613294}, {15, 3.8707570945548624`}, {
         14, 3.7990356713744786`}, {13, 3.232014547205871}, {
         12, 3.1191061540669858`}, {11, 2.946952637787142}, {
         10, 3.2269843124261426`}, {9, 2.6371345619923923`}, {
         8, 2.9690908437296013`}, {7, 3.402174642574415}, {
         6, 3.393356747246333}, {5, 4.627568526225899}, {
         4, 6.134866996550647}, {3, 7.030841710970111}, {
         2, 7.761843027576069}, {1, 8.588139998282031}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[10, 13], 0.7692307692307693]], 
       PolygonBox[{{1, 7.174582060939911}, {2, 4.486265036963607}, {
         3, 3.6919416577376114`}, {4, 2.770593911253014}, {
         5, 1.9735686389584937`}, {6, 1.7269305346359012`}, {
         7, 1.5523805702452624`}, {8, 1.5726054996264431`}, {
         9, 1.5581626355470035`}, {10, 1.593109712187813}, {
         11, 1.6896763898652871`}, {12, 1.7219557967771353`}, {
         13, 1.664091629321126}, {14, 1.6620609279909795`}, {
         15, 1.6557637831237972`}, {16, 1.6403485785469116`}, {
         17, 1.6064294670165247`}, {18, 1.7359311055327629`}, {
         19, 1.5958079713095414`}, {20, 1.6133951990396762`}, {
         21, 1.6871038966595961`}, {22, 1.7946259383517262`}, {
         23, 1.688836974902082}, {24, 1.681878306064964}, {
         25, 1.713226639033192}, {26, 1.6820542201026736`}, {
         27, 1.8655368084882133`}, {28, 1.7738227407157368`}, {
         29, 1.755654637350184}, {30, 1.7548414678043036`}, {
         30, 1.848871861940057}, {29, 1.8755357706381708`}, {
         28, 1.9128209267699727`}, {27, 1.9778093973351671`}, {
         26, 1.764571152357555}, {25, 1.8108224028678925`}, {
         24, 1.7701747493310565`}, {23, 1.7713228849277924`}, {
         22, 1.914949535016161}, {21, 1.7906766733577133`}, {
         20, 1.7008537625498168`}, {19, 1.7090466535791484`}, {
         18, 1.8585788949477}, {17, 1.7060689302936327`}, {
         16, 1.7492570171751805`}, {15, 1.7578141989694864`}, {
         14, 1.771389357282974}, {13, 1.7831137263047736`}, {
         12, 1.8317791679549345`}, {11, 1.7899607610849384`}, {
         10, 1.6735726423222614`}, {9, 1.633768431603418}, {
         8, 1.6746258917742343`}, {7, 1.645562600617629}, {
         6, 1.9447354620811943`}, {5, 2.2060256995931127`}, {
         4, 2.9854585077765132`}, {3, 4.228023144820228}, {
         2, 5.113410791043366}, {1, 8.043063612005547}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[11, 13], 0.8461538461538461]], 
       PolygonBox[{{1, 11.10184757190763}, {2, 9.212690055152775}, {
         3, 7.796309423730428}, {4, 6.230192516037461}, {
         5, 4.42631343465115}, {6, 3.440693183044682}, {
         7, 3.101832133281629}, {8, 2.9375560082529537`}, {
         9, 2.8075257713702038`}, {10, 2.517854257193597}, {
         11, 2.7472102406685694`}, {12, 2.562977747091554}, {
         13, 2.44000865615912}, {14, 2.415999535843104}, {
         15, 2.3883863289195983`}, {16, 2.3889587377688244`}, {
         17, 2.741569130109039}, {18, 1.8441353757358558`}, {
         19, 2.0749802773970445`}, {20, 2.214661324842099}, {
         21, 2.147934220219014}, {22, 2.5156665382632086`}, {
         23, 2.103824398753742}, {24, 2.353205053495585}, {
         25, 2.1940865447364697`}, {26, 2.021553617640499}, {
         27, 2.537577701514168}, {28, 2.4587968598827765`}, {
         29, 2.499624261865952}, {30, 2.171789562546224}, {
         30, 2.552182549133805}, {29, 3.032688873537989}, {
         28, 2.8647724824899554`}, {27, 3.055248962841564}, {
         26, 2.4223071600210875`}, {25, 2.6684173049750397`}, {
         24, 2.8130091408516646`}, {23, 2.402750231281043}, {
         22, 2.9337970923123144`}, {21, 2.588591870338039}, {
         20, 2.6059808283158454`}, {19, 2.345732250132578}, {
         18, 2.1258141109542295`}, {17, 3.316740039616748}, {
         16, 2.75540170074156}, {15, 2.860217949747311}, {
         14, 2.849577616034218}, {13, 2.8541785471397696`}, {
         12, 2.904343639533323}, {11, 3.0481020297188772`}, {
         10, 2.696508592063747}, {9, 3.058662801232789}, {
         8, 3.208824991799051}, {7, 3.3680065763162226`}, {
         6, 3.79206775759432}, {5, 4.89789922037381}, {
         4, 6.813933404202149}, {3, 8.17868988672176}, {
         2, 9.874061447391407}, {1, 12.271821890894213`}}]}, Null}, {{
       Opacity[0.15], 
       GrayLevel[
        NCache[
         Rational[12, 13], 0.9230769230769231]], 
       PolygonBox[{{1, 6.439730088967894}, {2, 4.55898948000656}, {
         3, 3.6694166140082185`}, {4, 2.952273511178917}, {
         5, 2.0168466347528673`}, {6, 1.645253852722435}, {
         7, 1.3117436672669196`}, {8, 1.208772659388934}, {
         9, 1.1569459812262304`}, {10, 1.3498476811972069`}, {
         11, 1.186454712496259}, {12, 1.0370736722412208`}, {
         13, 1.3187110607221753`}, {14, 1.4319578884255173`}, {
         15, 1.2111801334755319`}, {16, 1.0625311205428116`}, {
         17, 1.2544061149824888`}, {18, 1.2922199363757878`}, {
         19, 1.1583168454686943`}, {20, 1.16791153405052}, {
         21, 1.1122086544663548`}, {22, 1.1176132479235594`}, {
         23, 1.3083018541536977`}, {24, 1.0771853489067453`}, {
         25, 1.1644746883191661`}, {26, 1.2927487417828452`}, {
         27, 1.3250383238429497`}, {28, 1.3563356862998495`}, {
         29, 1.409176081962203}, {30, 1.2657889704538583`}, {
         30, 1.5119690366791434`}, {29, 1.684491619092231}, {
         28, 1.5131202893873987`}, {27, 1.53184186092403}, {
         26, 1.5946305136208456`}, {25, 1.3801121421851137`}, {
         24, 1.2809447746728266`}, {23, 1.6299355457632019`}, {
         22, 1.4023763469881212`}, {21, 1.3418297443626872`}, {
         20, 1.3609382185387773`}, {19, 1.428409572184103}, {
         18, 1.5556514995544561`}, {17, 1.472416505890057}, {
         16, 1.243639662969544}, {15, 1.3572502663830794`}, {
         14, 1.693702461478983}, {13, 1.4676017799940997`}, {
         12, 1.2224886928033794`}, {11, 1.4212826723976237`}, {
         10, 1.7228571571087692`}, {9, 1.3570732401236234`}, {
         8, 1.5218025879767134`}, {7, 1.5825836435175435`}, {
         6, 1.925212852859495}, {5, 2.38522484609987}, {
         4, 3.5620313529696723`}, {3, 4.311663279417564}, {
         2, 5.239254132933573}, {1, 7.311687967999492}}]}, Null}}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.927471840780354*^9, 3.927471849309012*^9}, {
   3.927471894723832*^9, 3.927471923898903*^9}, 3.9274725242746196`*^9, {
   3.927699898150323*^9, 3.927699925939505*^9}, 3.927700674159978*^9, {
   3.927701223079998*^9, 3.927701226924763*^9}, 3.9277019026526637`*^9, 
   3.92770320625677*^9, {3.927703311032092*^9, 3.927703333326731*^9}, 
   3.9277046889783688`*^9, {3.927713772230177*^9, 3.9277137953111796`*^9}, {
   3.9277162322984447`*^9, 3.927716242557663*^9}, 3.927867208384063*^9, 
   3.9279002837314386`*^9},
 CellLabel->"Out[127]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<\\\\ga_1.mx\>\""}], 
     ",", "dayFitResults"}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.927472353075333*^9, 3.927472380560938*^9}, 
   3.927701938249535*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["best fits for each day fitted",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.92777781639787*^9}, {
   3.927867237704297*^9, 3.9278672790855103`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bestFiveFromEachDay", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Reverse", "[", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"dayFitResults", "[", 
                   RowBox[{"[", "day", "]"}], "]"}], "[", 
                  RowBox[{"[", "generation", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"dayFitResults", "[", 
                   RowBox[{"[", "day", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"generation", "-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"generation", ",", "2", ",", "30"}], "}"}]}], "]"}], 
           ",", "1"}], "]"}], ",", "First"}], "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "5"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"day", ",", "1", ",", 
       RowBox[{"Length", "[", "dayFitResults", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.927713996013114*^9, 3.9277140612859344`*^9}, {
   3.9277141285223074`*^9, 3.927714139133232*^9}, {3.9277141696318493`*^9, 
   3.9277142309318047`*^9}, {3.9277142961158648`*^9, 3.9277144215766425`*^9}, 
   3.9277162903572035`*^9},
 CellLabel->"In[317]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ErrorListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Range", "[", "8", "]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GetMeanAndSEM", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{"bestFiveFromEachDay", ",", "1"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", "]"}],
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "Black", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"False", ",", "False", ",", "True"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9277142193486023`*^9, 3.9277142331107235`*^9}, {
  3.9277143201505985`*^9, 3.927714391402392*^9}, {3.9277144250059137`*^9, 
  3.927714508581872*^9}},
 CellLabel->"In[318]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
    PointBox[{{1., 4.826786542704907}, {2., 1.4364476273309654`}, {3., 
     1.594473258521002}, {4., 1.535149765592805}, {5., 2.3208531184449646`}, {
     6., 0.5376704214934703}, {7., 0.39861244914571586`}, {8., 
     0.6594402077962794}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 0.15428204497580023`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5, 8.5}, {0.15428204497580023`, 5.198441093076747}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{{{Null, {
       GrayLevel[0], 
       Thickness[Large], {
        LineBox[{{1, 4.699462396502983}, {1, 4.954110688906831}}], 
        LineBox[{{2, 1.3815180666654374`}, {2, 1.4913771879964934`}}], 
        LineBox[{{3, 1.4266338918607508`}, {3, 1.762312625181253}}], 
        LineBox[{{4, 1.410999649478693}, {4, 1.6592998817069171`}}], 
        LineBox[{{5, 2.210893382769032}, {5, 2.430812854120897}}], 
        LineBox[{{6, 0.459537988297787}, {6, 0.6158028546891536}}], 
        LineBox[{{7, 0.30856408995160045`}, {7, 0.4886608083398313}}], 
        LineBox[{{8, 0.5888760448654706}, {8, 0.7300043707270882}}]}}}}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9277142197705*^9, 3.927714233360473*^9}, {
   3.9277143188638425`*^9, 3.927714392060548*^9}, {3.927714425679277*^9, 
   3.9277145088791437`*^9}, 3.9277162923744326`*^9},
 CellLabel->"Out[318]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bestFitMeansOverall", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"bestFiveFromEachDay", ",", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927714516199644*^9, 3.927714528119983*^9}},
 CellLabel->"In[321]:="]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["seasonal trends in correction?",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.92777781639787*^9}, {
   3.927867237704297*^9, 3.927867243712931*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
   "populationFitness", ",", "\[IndentingNewLine]", "offspringFitness", ",", 
    "\[IndentingNewLine]", "population", ",", "\[IndentingNewLine]", 
    "offspring", ",", "\[IndentingNewLine]", "newPopulation"}], 
   "\[IndentingNewLine]", "}"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9278678508577566`*^9, 3.9278678531045103`*^9}, {
  3.9278679764440155`*^9, 3.9278679790739584`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seasonalCorrector", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"SortBy", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}], 
                  "&"}], ",", 
                 RowBox[{"dayFitResults", "[", 
                  RowBox[{"[", "fittedDayN", "]"}], "]"}]}], "]"}], ",", 
               "1"}], "]"}], ",", "First"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "20"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"fittedDayN", ",", "1", ",", 
         RowBox[{"Length", "[", "daysToFit", "]"}]}], "}"}]}], "]"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9278692375657215`*^9, 3.927869241046961*^9}},
 CellLabel->"In[129]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"seasonalCorrector", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9278691514338813`*^9, 3.927869247193791*^9}},
 CellLabel->"In[130]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 1.3376232164094606`}, {2., 1.533615170233005}, {3., 
      1.1255529836666476`}, {4., 1.2489361053953048`}, {5., 
      0.9589923683010241}, {6., 0.9255675068991067}, {7., 
      0.961423436257962}, {8., 1.163646314386326}, {9., 
      1.3986812532312516`}, {10., 1.1043560452381673`}, {11., 
      1.487856390589874}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.8917870811583348},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 11.}, {0.8917870811583348, 1.533615170233005}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.927869168054242*^9, 3.927869248224923*^9}, 
   3.927949846127345*^9},
 CellLabel->"Out[130]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"startDayN", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endDayN", "=", "170"}], ";"}]}], "Input",
 CellChangeTimes->{{3.92794987211978*^9, 3.927949880387188*^9}},
 CellLabel->"In[131]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"daysToFit", "[", 
            RowBox[{"[", "fittedDayN", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", "roomsOnCycle", "]"}], "2"}]}], "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"SortBy", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}], 
                    "&"}], ",", 
                    RowBox[{"dayFitResults", "[", 
                    RowBox[{"[", "fittedDayN", "]"}], "]"}]}], "]"}], ",", 
                  "1"}], "]"}], ",", "First"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "10"}], ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
          RowBox[{"seasonalCorrector", "[", 
           RowBox[{"[", "fittedDayN", "]"}], "]"}]}]}], "\[IndentingNewLine]",
         "}"}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"fittedDayN", ",", "1", ",", 
        RowBox[{"Length", "[", "daysToFit", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Nest", "[", 
           RowBox[{"Lighter", ",", "Red", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Nest", "[", 
           RowBox[{"Lighter", ",", "Blue", ",", "#"}], "]"}], "&"}], ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<w_\>\"", "<>", "#"}], "&"}], ",", 
         RowBox[{"roomNames", "[", 
          RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<c_\>\"", "<>", "#"}], "&"}], ",", 
         RowBox[{"roomNames", "[", 
          RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}], "]"}]}], "}"}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"#", ",", "\[IndentingNewLine]", 
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"DateString", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], ",", 
                  "\"\< \>\""}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "\"\< \>\""}], 
              "]"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
          "}"}], "\[IndentingNewLine]", "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"startDayN", ",", "endDayN", ",", "4"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "Automatic"}], "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.927867355975403*^9, 3.9278673687460938`*^9}, {
  3.927867863245887*^9, 3.9278678925062532`*^9}, {3.927868054953772*^9, 
  3.9278682782039623`*^9}, {3.9278683137038383`*^9, 3.9278683720127506`*^9}, {
  3.927868469675736*^9, 3.927868521435177*^9}, {3.927868848165592*^9, 
  3.927868876233674*^9}, {3.9278689411852474`*^9, 3.9278689538281174`*^9}, {
  3.927869016873782*^9, 3.9278690170707564`*^9}, {3.92786905704871*^9, 
  3.9278690576158447`*^9}, {3.927869272970684*^9, 3.9278693505519233`*^9}, {
  3.927869386803735*^9, 3.9278693868563805`*^9}, {3.9279498978713865`*^9, 
  3.9279499100785117`*^9}},
 CellLabel->"In[134]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333]]], 
        LineBox[{{32., 2.221582923120858}, {37., 1.8934338033764777`}, {42., 
         1.9501457756200102`}, {57., 1.8707714761109668`}, {67., 
         2.4048467663119957`}, {72., 2.607718780270295}, {77., 
         2.059392101175379}, {82., 2.369646159781047}, {92., 
         1.842556061271716}, {122., 3.4118783780192974`}, {127., 
         2.242057312636873}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 
          NCache[
           Rational[5, 9], 0.5555555555555556], 
          NCache[
           Rational[5, 9], 0.5555555555555556]]], 
        LineBox[{{32., 0.6596190245315938}, {37., 0.7614965961421118}, {42., 
         1.0572796489853595`}, {57., 1.1374097263223268`}, {67., 
         0.5892944178756021}, {72., 0.34237022820245333`}, {77., 
         0.7678384101659324}, {82., 0.375669905961453}, {92., 
         0.8053735695134616}, {122., 0.8903248262298946}, {127., 
         1.0532155627403725`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 
          NCache[
           Rational[19, 27], 0.7037037037037037], 
          NCache[
           Rational[19, 27], 0.7037037037037037]]], 
        LineBox[{{32., 1.3495353182848207`}, {37., 1.353232690164732}, {42., 
         1.0348114089291889`}, {57., 1.0008693083064208`}, {67., 
         0.2967100727797002}, {72., 0.5771073942611229}, {77., 
         1.3716366438949363`}, {82., 1.1786873845030832`}, {92., 
         1.353010893049539}, {122., 0.9748221146829018}, {127., 
         1.4247450988851107`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 
          NCache[
           Rational[65, 81], 0.8024691358024691], 
          NCache[
           Rational[65, 81], 0.8024691358024691]]], 
        LineBox[{{32., 1.014752826215629}, {37., 1.2179861006684543`}, {42., 
         0.9182615797333822}, {57., 0.4382114411473133}, {67., 
         1.4904543590926513`}, {72., 1.79073189176115}, {77., 
         0.704830730183356}, {82., 1.389875214605718}, {92., 
         1.305491099234576}, {122., 0.731174355978341}, {127., 
         0.7986202051472784}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[1, 3], 0.3333333333333333], 
          NCache[
           Rational[1, 3], 0.3333333333333333], 1]], 
        LineBox[{{32., 0.6008828275772886}, {37., 0.6762806540506268}, {42., 
         0.8387856490421978}, {57., 1.3943600590415401`}, {67., 
         1.163239219473156}, {72., 0.5416320805710415}, {77., 
         1.0424594613866096`}, {82., 0.5680304519401074}, {92., 
         0.6685964500685834}, {122., 0.08937988005224032}, {127., 
         0.6085363839049555}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         RGBColor[
          NCache[
           Rational[5, 9], 0.5555555555555556], 
          NCache[
           Rational[5, 9], 0.5555555555555556], 1]], 
        LineBox[{{32., 0.0774715691713543}, {37., 0.061982051615137077`}, {
         42., 0.05112569231758418}, {57., 0.07015814081184103}, {67., 0.}, {
         72., 0.07979700657811492}, {77., 0.1701191289855262}, {82., 
         0.14461452666478616`}, {92., 0.00014906420727073643`}, {122., 0.}, {
         127., 0.07909770392322345}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {30.020833333333336`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{30.020833333333336`, 127.}, {0, 4}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{{1, 
         FormBox[
          RotationBox["\"Wed 8 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {5, 
         FormBox[
          RotationBox["\"Sun 12 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {9, 
         FormBox[
          RotationBox["\"Thu 16 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {13, 
         FormBox[
          RotationBox["\"Mon 20 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {17, 
         FormBox[
          RotationBox["\"Fri 24 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {21, 
         FormBox[
          RotationBox["\"Tue 28 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {25, 
         FormBox[
          RotationBox["\"Sat 2 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {29, 
         FormBox[
          RotationBox["\"Wed 6 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {33, 
         FormBox[
          RotationBox["\"Sun 10 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {37, 
         FormBox[
          RotationBox["\"Thu 14 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {41, 
         FormBox[
          RotationBox["\"Mon 18 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {45, 
         FormBox[
          RotationBox["\"Fri 22 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {49, 
         FormBox[
          RotationBox["\"Tue 26 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {53, 
         FormBox[
          RotationBox["\"Sat 30 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {57, 
         FormBox[
          RotationBox["\"Wed 3 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {61, 
         FormBox[
          RotationBox["\"Sun 7 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {65, 
         FormBox[
          RotationBox["\"Thu 11 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {69, 
         FormBox[
          RotationBox["\"Mon 15 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {73, 
         FormBox[
          RotationBox["\"Fri 19 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {77, 
         FormBox[
          RotationBox["\"Tue 23 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {81, 
         FormBox[
          RotationBox["\"Sat 27 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {85, 
         FormBox[
          RotationBox["\"Wed 31 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {89, 
         FormBox[
          RotationBox["\"Sun 4 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {93, 
         FormBox[
          RotationBox["\"Thu 8 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {97, 
         FormBox[
          RotationBox["\"Mon 12 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {101, 
         FormBox[
          RotationBox["\"Fri 16 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {105, 
         FormBox[
          RotationBox["\"Tue 20 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {109, 
         FormBox[
          RotationBox["\"Sat 24 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {113, 
         FormBox[
          RotationBox["\"Wed 28 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {117, 
         FormBox[
          RotationBox["\"Sun 3 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {121, 
         FormBox[
          RotationBox["\"Thu 7 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {125, 
         FormBox[
          RotationBox["\"Mon 11 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {129, 
         FormBox[
          RotationBox["\"Fri 15 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {133, 
         FormBox[
          RotationBox["\"Tue 19 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {137, 
         FormBox[
          RotationBox["\"Sat 23 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {141, 
         FormBox[
          RotationBox["\"Wed 27 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {145, 
         FormBox[
          RotationBox["\"Sun 31 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {149, 
         FormBox[
          RotationBox["\"Thu 4 Apr\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {153, 
         FormBox[
          RotationBox["\"Mon 8 Apr\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {157, 
         FormBox[
          RotationBox["\"Fri 12 Apr\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {161, 
         FormBox[
          RotationBox["\"Tue 16 Apr\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {165, 
         FormBox[
          RotationBox["\"Sat 20 Apr\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {169, 
         FormBox[
          RotationBox["\"Wed 24 Apr\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"w_ovi\"", "\"w_PK\"", "\"w_Oktopusz\"", "\"c_ovi\"", "\"c_PK\"", 
       "\"c_Oktopusz\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[19, 27], 0.7037037037037037], 
                    NCache[
                    Rational[19, 27], 0.7037037037037037]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[19, 27], 0.7037037037037037], 
                    NCache[
                    Rational[19, 27], 0.7037037037037037]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[65, 81], 0.8024691358024691], 
                    NCache[
                    Rational[65, 81], 0.8024691358024691]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 
                    NCache[
                    Rational[65, 81], 0.8024691358024691], 
                    NCache[
                    Rational[65, 81], 0.8024691358024691]]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 
                    NCache[
                    Rational[1, 3], 0.3333333333333333], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 
                    NCache[
                    Rational[5, 9], 0.5555555555555556], 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.2222222222222222, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["1", "3"], ",", 
                    FractionBox["1", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[1, 3], 
                    Rational[1, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[5, 9], 
                    Rational[5, 9]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.37037037037037035`, 
                    0.37037037037037035`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["5", "9"], ",", 
                    FractionBox["5", "9"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[5, 9], 
                    Rational[5, 9]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[5, 9], 
                    Rational[5, 9]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[19, 27], 
                    Rational[19, 27]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.4691358024691358, 
                    0.4691358024691358], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["19", "27"], ",", 
                    FractionBox["19", "27"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[19, 27], 
                    Rational[19, 27]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[19, 27], 
                    Rational[19, 27]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 
                    Rational[65, 81], 
                    Rational[65, 81]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5349794238683128, 
                    0.5349794238683128], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", 
                    FractionBox["65", "81"], ",", 
                    FractionBox["65", "81"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 
                    Rational[65, 81], 
                    Rational[65, 81]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 
                    Rational[65, 81], 
                    Rational[65, 81]], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2222222222222222, 0.2222222222222222, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["1", "3"], ",", 
                    FractionBox["1", "3"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[1, 3], 
                    Rational[1, 3], 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[5, 9], 
                    Rational[5, 9], 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37037037037037035`, 0.37037037037037035`, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["5", "9"], ",", 
                    FractionBox["5", "9"], ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[5, 9], 
                    Rational[5, 9], 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[5, 9], 
                    Rational[5, 9], 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9278673606955113`*^9, 3.9278673698243523`*^9}, {
   3.927867878993699*^9, 3.927867892894059*^9}, {3.9278680811152363`*^9, 
   3.9278680837940054`*^9}, {3.9278681195818806`*^9, 3.927868169147971*^9}, {
   3.92786822836594*^9, 3.927868278633383*^9}, {3.9278683147779756`*^9, 
   3.9278683724130945`*^9}, 3.927868470425818*^9, 3.927868536255547*^9, 
   3.927868848595296*^9, 3.9278689542460823`*^9, 3.9278690177253523`*^9, 
   3.9278690581038632`*^9, {3.92786928858566*^9, 3.927869352810296*^9}, 
   3.9278694348852596`*^9, {3.9279499001270533`*^9, 3.9279499106663013`*^9}},
 CellLabel->"Out[134]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"seasonCorrectedBestFits", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"Mean", ",", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"SortBy", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}], 
                   "&"}], ",", 
                  RowBox[{"dayFitResults", "[", 
                   RowBox[{"[", "fittedDayN", "]"}], "]"}]}], "]"}], ",", 
                "1"}], "]"}], ",", "First"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "10"}], ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", 
        RowBox[{"seasonalCorrector", "[", 
         RowBox[{"[", "fittedDayN", "]"}], "]"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"{", 
        RowBox[{"fittedDayN", ",", "1", ",", 
         RowBox[{"Length", "[", "daysToFit", "]"}]}], "}"}]}], "]"}], "]"}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.9278694539221935`*^9, 3.927869470256035*^9}},
 CellLabel->"In[135]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seasonCorrectedBestFits", "=", 
  RowBox[{"{", 
   RowBox[{
   "2.2612754125177195`", ",", "0.7672629015155057`", ",", 
    "1.083197120703778`", ",", "1.0727627094334409`", ",", 
    "0.7447439197371224`", ",", "0.06677408038862163`"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9279499331885033`*^9, 3.9279499394878283`*^9}},
 CellLabel->"In[136]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.2612754125177195`", ",", "0.7672629015155057`", ",", 
   "1.083197120703778`", ",", "1.0727627094334409`", ",", 
   "0.7447439197371224`", ",", "0.06677408038862163`"}], "}"}]], "Output",
 CellChangeTimes->{3.9279499402021084`*^9},
 CellLabel->"Out[136]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["eval fit",
 FontWeight->"Plain"]], "Subsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.92777781639787*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["for one day",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.9277778022826457`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bestFitMeansOverall", "=", 
   RowBox[{"{", 
    RowBox[{
    "3.1725563115559083`", ",", "1.0683009750379302`", ",", 
     "1.29468510022947`", ",", "1.278422223763722`", ",", 
     "1.9544085048287771`", ",", "0.6946838470957711`", ",", 
     "0.3455993563985235`", ",", "0.9222435820921898`"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.927716315821035*^9, 3.927716323083461*^9}, {
  3.927716358490817*^9, 3.9277163597255955`*^9}},
 CellLabel->"In[338]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"individual", "=", "bestFitMeansOverall"}]], "Input",
 CellLabel->"In[322]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.826786542704907`", ",", "1.4364476273309654`", ",", "1.594473258521002`",
    ",", "1.535149765592805`", ",", "2.3208531184449646`", ",", 
   "0.5376704214934703`", ",", "0.39861244914571586`", ",", 
   "0.6594402077962794`"}], "}"}]], "Output",
 CellChangeTimes->{3.9277145496733356`*^9, 3.9277146111142364`*^9, 
  3.9277163280674324`*^9},
 CellLabel->"Out[322]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"warmingParams", "=", 
   RowBox[{"bestFitMeansOverall", "[", 
    RowBox[{"[", 
     RowBox[{"1", " ", ";;", " ", "4"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"coolingParams", "=", 
   RowBox[{"bestFitMeansOverall", "[", 
    RowBox[{"[", 
     RowBox[{"5", " ", ";;", " ", "8"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"warmingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coolingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"warmingCorrection", "[", 
       RowBox[{"[", 
        RowBox[{"roomsOnCycle", "[", 
         RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "=", 
      RowBox[{"warmingParams", "[", 
       RowBox[{"[", "roomN", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coolingCorrection", "[", 
       RowBox[{"[", 
        RowBox[{"roomsOnCycle", "[", 
         RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "=", 
      RowBox[{"coolingParams", "[", 
       RowBox[{"[", "roomN", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", "warmingCorrection", "\[IndentingNewLine]", \
"coolingCorrection"}], "Input",
 CellChangeTimes->{{3.9274651485811152`*^9, 3.9274652035904427`*^9}, {
   3.927472474387267*^9, 3.927472484514825*^9}, {3.927472651698136*^9, 
   3.9274726570587783`*^9}, {3.927696899268684*^9, 3.927696900325385*^9}, {
   3.9277007750900497`*^9, 3.9277007804716034`*^9}, {3.927714565926175*^9, 
   3.9277145676485834`*^9}, 3.927869505732187*^9},
 CellLabel->"In[339]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"warmingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "1.0683009750379302`", ",", "1.5`", ",", 
     "1", ",", "1", ",", "1", ",", "1", ",", "1.278422223763722`"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"coolingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1.8`", ",", "0.8`", ",", "0.7`", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1.1"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9277193082114177`*^9, 3.927719367803648*^9}, {
  3.927719408229206*^9, 3.9277194552650495`*^9}},
 CellLabel->"In[430]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetSimulatedDayForComparison", "[", 
   RowBox[{"simulatedDay", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.927783527950965*^9, 3.9277879167134256`*^9}],

Cell[CellGroupData[{

Cell[BoxData["roomTempStart"], "Input",
 CellChangeTimes->{{3.927783534741186*^9, 3.9277835431102424`*^9}},
 CellLabel->"In[607]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.9277835434952445`*^9, 3.9277836501106825`*^9},
 CellLabel->"Out[607]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Evaluate", "[", 
  RowBox[{"NumberQ", "[", "None", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9277835700488586`*^9, 3.927783589802072*^9}},
 CellLabel->"In[604]:="],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.9277835718760123`*^9, 3.9277835900284986`*^9}},
 CellLabel->"Out[604]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simulatedDay", "=", "29"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSimulatedDayForComparison", "[", 
   RowBox[{"simulatedDay", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "daySimulation", ",", "\[IndentingNewLine]", "daySimulatedHeatDynamics", 
     ",", "\[IndentingNewLine]", "dayHeatingSimulatedState", ",", 
     "\[IndentingNewLine]", "dayRoomSimulatedTemp"}], "\[IndentingNewLine]", 
    "}"}], "=", 
   RowBox[{"SimulateDayForCycle", "[", 
    RowBox[{"warmingCorrection", ",", "coolingCorrection"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"roomSimulatedTemp", "=", "dayRoomSimulatedTemp"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatingSimulatedState", "=", "dayHeatingSimulatedState"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatedHeatDynamics", "=", "daySimulatedHeatDynamics"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"roomsSetTemp", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
          RowBox[{
           RowBox[{"roomsLowerBuffer", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomsSetTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"roomsSetTemp", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "+", 
          RowBox[{
           RowBox[{"roomsUpperBuffer", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomsTrueTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomSimulatedTemp", "[", 
           RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"24", " ", "60"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "LightGreen", ",", "None", ",", "LightGreen", ",", "Black", ",", 
          "Red"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "30"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{
         RowBox[{"roomNames", "[", 
          RowBox[{"[", 
           RowBox[{"roomsOnCycle", "[", 
            RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<, \>\"", "<>", 
         RowBox[{"DateString", "[", 
          RowBox[{"NormalizeDate", "[", 
           RowBox[{"seasonDays", "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"heatingTrueState", "[", "t", "]"}], "==", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0", ",", "0", ",", "0.1"}], "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"-", "100"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"t", "+", "5"}], ",", "100"}], "}"}]}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], " ", "-", "5"}], ",", "5"}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"heatingSimulatedState", "[", "t", "]"}], "==", "1"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0", ",", "1", ",", "0.1"}], "]"}], ",", 
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"t", ",", 
                    RowBox[{"-", "100"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"t", "+", "5"}], ",", "100"}], "}"}]}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], " ", "-", "5"}], ",", "5"}], 
             "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], "//", 
  "Row"}], "\[IndentingNewLine]", 
 RowBox[{"Join", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"100", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"heatStockDaily", "[", 
         RowBox[{"[", "cycle", "]"}], "]"}], "[", 
        RowBox[{"[", "dayN", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Total", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Total", ",", "#"}], "]"}], "\[IndentingNewLine]", "&"}], ",",
       "simulatedHeatDynamics"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"Total", "[", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Total", ",", "#"}], "]"}], "\[IndentingNewLine]", "&"}], 
        ",", "simulatedHeatDynamics"}], "]"}], "]"}], "]"}], 
    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9274724668689523`*^9, 3.927472471360813*^9}, {
   3.927472630560645*^9, 3.927472630705639*^9}, {3.92747269029074*^9, 
   3.9274726903853617`*^9}, {3.92747277448322*^9, 3.9274727746255493`*^9}, {
   3.92769544178176*^9, 3.9276954418320165`*^9}, {3.927695520672686*^9, 
   3.927695520934449*^9}, {3.927703351204032*^9, 3.9277033524697056`*^9}, 
   3.9277034152870054`*^9, {3.927704721475465*^9, 3.927704723475757*^9}, {
   3.927714602908888*^9, 3.927714602939947*^9}, {3.927714663407255*^9, 
   3.9277146638622475`*^9}, {3.927714697436451*^9, 3.9277147326243277`*^9}, {
   3.927719275984352*^9, 3.927719284870777*^9}, {3.9277193775291686`*^9, 
   3.927719386765739*^9}, {3.927719461774562*^9, 3.9277194618256054`*^9}, {
   3.9277197926585283`*^9, 3.9277198235743227`*^9}, {3.927719858402924*^9, 
   3.9277198600955544`*^9}, {3.9277198936752243`*^9, 3.927719929403372*^9}, 
   3.927777484683955*^9, 3.9277775147711115`*^9, {3.9277775732129364`*^9, 
   3.927777573315346*^9}, {3.927777658267164*^9, 3.927777658323238*^9}, {
   3.927777697690387*^9, 3.927777752271983*^9}, {3.927783150069131*^9, 
   3.927783152713993*^9}, {3.9277834352363834`*^9, 3.927783439989834*^9}, 
   3.927787916723674*^9, {3.9277943474714336`*^9, 3.9277943750469584`*^9}, 
   3.927794466823236*^9}],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1GlMEwYUB/BuoF2oQph2jGMYDhU6BnNlIIZJEShRoCpO4rAMRyVQ5CiH
QAtYkKMWEGlX5lTQoLZpxqEWUXTaIEIFKVDKMQtO61YShdDAtAMmwtwC773k
5Z/ft/f/8pzi0iLjPyQQCBnv979M7/fceluztJPw/3jREn2eqyeDPGirNj0c
ev4yyB98deKf7B1ZEeBvE0hf7HlxEGzvfIZfYWCCPaRZ694GxIHrM1z3tarj
wZrsAN8SKRvs9P0IIyY5BRy/fKv5My4HbDPVRrSJywBnUf2fiilZ4Ljpxe4N
k8fBTbsyiZcGcsBy+zTDZkUu9nmT9KBRwgUzLuo7rLTohdCozgwrHviooqWk
1xHd72Ad4uqJNtcGSDVfo/0EqWsKvkGn+tfFu4esuHAb7epsb9dIOJqrKqML
jqEZFwIfbS9HXzF6PF4yzwPPB37a18lHJ9Wvjx3i5IN/J5jNvvihALyvZMZA
Po/uID57sluLvpioG4nSo/N6hrUsI3qSG7k/yYQ+RNEMcBbRqrEIRo7ZiRV/
RfOu6FUXWKCnwztUZ7egZZZ32m/sQpeTJXLbFnSqQ1p1kQsf/NdbfnADqRDc
zO5urylFvzwvFnx0Ge2kZjLylGil4cGNm2p09LstZOMYuiiIkJr/DC0X6lQW
f6yaStMMKDadm0DPkStzt75C0y/vpATPoCWes+NH5tBEUSmb/mURmPfadu5z
Nnr7pusyrgFt2kOPehR7ErzUeG0D6QR6rZXtIKMWbdHed43TgLZMP1klvove
W+e19rASXd3ztMClY9XetEGT0DTVhf7Y2TflZg9awhMxQwbRNkNTYaNP0G5n
laoYcjHY77AocGI/umyHzehwB1prW5fUSS0B28mK78ndSsFteko4Y30Z2HF4
JiF7Gk2tETVe0QvAdeavPcUPT4FvBXqNld4Rgn/2Lbde/KUcPDAuLaNWVoBb
I2pdOYWV4NmUA4TUo6fBJrp7ojGoCiyf1s1n+pwBH6qXsmLWVYNbFGGxZgK0
n712QbiAbn7nMNm0TQR20SeMDbLRGxvkOcGn0ObZrzbelqHzx4WsmVb0GxpF
4d6FjozWrpnvRl/P5H2nUqNjCxnFTf1oy9POTRLNit//q/vn/h7N06KTZY8J
rGG0m85OvjyONpCO7a39Ex3dx9SlO4jBmioGK/QgWpJ7iXRcg76nXF5g7f4R
bMWkCah30X5HjPJSbwm46td8dpsMHZppx2n8pAb8m2gzyaUaLSZah/A++Anv
TW52vE9D+2jD5pf56H8BMi4Rag==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235755#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$427235755#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxFz2tM0wcUBfBuoF2oQpgyxmMYHip0DNmKIIbJH4ESBaqySRzCcFQCRSjl
IdACAkKpBURay5wONKhtmvFQQRSdNlihghQo5TEBp3UriUJoYNoBE2EzWe+9
ycnJ79u5zgnpUYkfkkikzP/yvjMGvLbe1qzsIr2/Ym8i2fe5ejrYkzDZ+HD4
+cvgAPDVqX9ydmZHgr9Nonyx98VBsIPLmaJKfSzYU5q97m1gArgh021/uzoR
rMkJ9CuTssDO348y4lLTwImrt1o+43LAtjMdZNuETHA2LeCpmJoNTphd7tkw
fRzcvDuLfGkwFyx3SNdvbs3Df96kPGiScMGMizqllRa9FBbdlWnFAx9tbSvr
c0IPOFqHunmhzbWBUs12tL+AvabwazQ7oD7RI9Tkr4ir833doxForqqcLjiG
Zvwc9GhHBfqKwfPxink+eDHo0/6uInRKw/r4YU4B+HeS2fyLHwrB+8vm9DYX
0Erysyd7tOiLyeOj0Tp0fu+IlmlAT3OjDqQY0YeomkHOMlo1EcnINTvxv2mE
T2WfutACPRuhVJ3bgpZZ3um8sRtdYSOR27Wh2Y7pNSWuReC/3haFNFKKwS2s
ns5aPvrlBbHgo8toZ3UsI1+BVugf3LipRse822JjmECXBJPYBc/QcuG4yuIP
k30IzWDrpvNT6AWbqrytr9D0y7uoIXNoidf85JEFNFnEZ9G9S8C813YLn7PQ
OzZdl3H1aONeevSj+JPglaZrGygn0Gut7IYYdWiLzv5rnEa0ZcbJavFd9L76
bWsPK9A1vU8LXZUmbyeGjELjTDf6Yxe/tJu9aAlPFBs6hLYdngkfe4J2P6dQ
xdmUgv0Pi4KmDqDLd9qOjSjRWrv6lC5aGdheVnpP7s4Hd+ioEYz15WCnkbmk
nFk0rVbUdEUnANebv/YSPzwFvhW0bYJ/Rwj+ya/CevmXCvDgpLScVlUJbo+s
c+MUV4Hn074hsY+eBhvpHsmG4GqwfHZ8Mcv3DPhQg5QZt64G3NYaHm8mQPs7
aJeES+iWd47TzV+KwK66pIkhFnpjozw35BTaPOfVxtsydMGkkDnXjn5DUFs9
utFRMdo1iz3o61m871RqdHwxo7R5AG152qVZojHZm7h//u+xfC06VfaYxBxB
u4/by1cn0XrKsX11f6Jj+mPHMxzFYE01gxl2EC3Ju0Q5rkHfU6wuMfecBVvF
EgLaXbT/EYOc7yMBV/9awOqQocOy7DlNn9SCfxNtprjWoMVk61DeBz/i3tQW
p/sE2lcbvrhahP4XlkMl3A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235755#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
rie4Lo0nX/42T0/D6StOfbg/A8ts7voT/QeOOvv2bDxNEtWvXg5NJ6+GR0Xs
2AzWJC3PBzyWrid4hMy2FmZ9fdrg1Tp4h/i4xwUmWPv9VAUXK3wmbmbyEhvc
9JXGNYcH3qDKOJ67DZb+ybRn507Y4upGx1si//l9s2mxDrvhSF3Owl2icGZe
5tNvYnDJX57RYokkynkBKWLBSPBUhTSsVSU2XKUAm6+vWOWtCLvbkHfIKMMR
dVUqcypJy/OXU0v/H6uMTZ0a/KDxwPUDmvBXZ6XB+4dgli3q/EqH4X3PtCya
DWBNgY7A8GOw+Tm9K2rHkyjnJ5beT2dXw2pjOGLn0fetJnB3qLlpuxW8bcDu
zQt7uOvbfrqa03DIH2bRHKckanuWoB8yjHSBB1jvBju7wfK7LXrkPOEsVQbh
tedgrSP9R6Z84DnzMr/XfvCt02F5jQHwce/jnTeDkpbjhelSvp9Es90rDN5U
mH9WJQp2b9Z7xhoHd76b5f2YAAeOtmm0JsGiMznupSnwO1rPrPS0JGp9JY7l
4CP/C7CG8kUn7iswndfIpuo8+HbIPfns/CRqfcgqIelUeAG8IetksmMR3Jgv
U69fAvM2fWQWqID93kZbT9yBd301O99bDb/5JVHdUANHr6D/eKMOlmZ6w3j+
XhK1PpG+M8Tc5AH8ixCpEG6Bjxh3rZpthcs8fIwetcEngnRCiztgpvMCxamd
SZTvl5Mi7l38/cq3C3bMe0pj3Q0LvebO//cWHlp7WjfrEzxxsXbe6nMSdX/F
wk7GfOEvMEOVkcHEV3ijyi2a6lFYxELDSGUcVvL7Uv5iEtZh3Gee8RM2yohg
PDEN2wi+qtoxA7tW7rD+NptEOa+2ND52NtedW4CvfLPetJommeoqBlqnVFq4
Y/u1Fv7V8JuKSbevDPBnQpG3lBGe6Eh86rkumVovXzAd8JJjgnel8QoZssHG
7aav3XhgW5OicGle2H1kXuLfVjjgrNb7Fv5k6nwzetWlmLhtcA6/7CeunfDd
A6/33xSBnxt5p5JF4WFPju8PJOApWruLUSR4MalKVVcqmTp/Z+Sjn2LbB7OV
HM3ul4ZVhlN0ZxRgd94uGlZ1OKCIv7hPI5maT8XIuhld0YTTWxtX2WrDV4+x
VOzWge+6lzLWHoY743Ws1Y/CZ7t+cJENYV72pE4+I7jFSDJyvQnsePnlgTnT
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235755#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwdjH1QE2QAxmdIkhhCRxRKdDpGgjg2xstEkJ75ATZkfFgNBWICxhAZOETW
nMMPxuRrjMHe6hpSGIM4IqdJjLAkDYWjC1HzGk2BJp4UahgnqBdRz91zvz+e
+z2rMvKT9jzHYDD4C/2PPbYrZ9p3qcH4P36Q+eTrjzJLIBI2Lf47zw8dOVcu
GDVH4ChWnrotZ0H5yPvx2pyjcIm6VmyT+GNGGP3u5fRjKHUytjhS30B4Sq3g
TuJx3PO9NHVCtAbD3g17L/FKEacoH58JDMAK8/Ge1jUa/FBhLrR4BqJrNHC7
6MUyFDSqJp+fDITv9YfZB6fKkLXulsnYuRY8Y237qVEtVvdHWmJrgtCw+BHb
cPEE3LZ+EtH99jp0CoJtGms5NDt/1KpYbHzEr/B41laBuTdFQv4UGz+PNJfx
qirR4uMk/rMpGOfiTH4FR6rgtks1aOZy8FfeDoYsqxqVfPkNcTkHM9EB0vub
dThfJ/RJt3PQOvXrbGFYDUayuWxVGBfJnzVnpi3TQxFjmO7VcnH2TGy6k1YP
3Usuxb/YuQhfOTxXPqfHHy4uPqlBIWCOZtuu5tTCGHmd+XlxCByuufGm32th
HYjcmX85BEM6UWbMOwbwEi96stx5qFc0uhYNGdB66HGhZxoPPd/Nz2W+VQd9
BHP1T2YelqdCy+uuQ3uv+sGzezyES+63akLrkTle4hzADYXuW1VOl7kemqIl
DHd5KGIKVxS0exkRNVvHiTkdipu1LFem3ogLDmHphulQGJZ4bFUuophvCPpH
zCbombanHHCi6DBuNO0OJrhrb5PLnCnSqkUbcjkEkV9v+TTjBYrlRXuth0MI
JiSKp0IPisKDLU8awwgium9bVq6i+O1De99YFIFjX4fveVC0CUb8E+MJ3JIP
kW82UXx/a+SkOIEgfPO27ZYtFOp4pTUtkUDnPf5B8zYKr5S0eukOgvV9L9+o
TqCIljOFajFB9euHK9+TUMRt/DKxOZ2ga6mwKTmDIiHj5LkvJATjM17WpCyK
JG2Nd8fuBX/w9ES0lEJ8df9YZ+bCrnAIggso+E/2C/qyCZZlWZID5BSMjIem
fikBP16dzzxAMdAvmx3MIahivdrwioIi9ePcr67lEnS63znroaTwXzS59OY+
grGnlgFXFcUDqfR9W97C3131mLOawjo00WuXEYQNx87Ol1AcW7/ntbF8gn8B
5hSFjw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235755#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 10.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 10.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"SZGK, Wed 6 Dec 2023\"", TraditionalForm], 
     PlotRange -> {All, {10, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{0, -100}, {5, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{5, -100}, {10, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{10, -100}, {15, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{15, -100}, {20, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{20, -100}, {25, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{25, -100}, {30, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{30, -100}, {35, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{35, -100}, {40, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{40, -100}, {45, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{45, -100}, {50, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{50, -100}, {55, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{55, -100}, {60, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{60, -100}, {65, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{65, -100}, {70, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{70, -100}, {75, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{75, -100}, {80, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{80, -100}, {85, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{85, -100}, {90, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{90, -100}, {95, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{95, -100}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{100, -100}, {105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{105, -100}, {110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{110, -100}, {115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{115, -100}, {120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{120, -100}, {125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{125, -100}, {130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{130, -100}, {135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{135, -100}, {140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{140, -100}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{145, -100}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{150, -100}, {155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{155, -100}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{160, -100}, {165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{165, -100}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{170, -100}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{175, -100}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{180, -100}, {185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{185, -100}, {190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{190, -100}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{195, -100}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{200, -100}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{205, -100}, {210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{210, -100}, {215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{215, -100}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{220, -100}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1145, -100}, {1150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1150, -100}, {1155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1155, -100}, {1160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1160, -100}, {1165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1165, -100}, {1170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1170, -100}, {1175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1175, -100}, {1180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1180, -100}, {1185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1185, -100}, {1190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1190, -100}, {1195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1195, -100}, {1200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1200, -100}, {1205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1205, -100}, {1210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1210, -100}, {1215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1215, -100}, {1220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1220, -100}, {1225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1225, -100}, {1230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1230, -100}, {1235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1235, -100}, {1240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1240, -100}, {1245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1245, -100}, {1250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1250, -100}, {1255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1255, -100}, {1260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1260, -100}, {1265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1265, -100}, {1270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1270, -100}, {1275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1275, -100}, {1280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1280, -100}, {1285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1285, -100}, {1290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1290, -100}, {1295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1295, -100}, {1300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1300, -100}, {1305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1305, -100}, {1310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1310, -100}, {1315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1315, -100}, {1320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1320, -100}, {1325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1325, -100}, {1330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1330, -100}, {1335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1335, -100}, {1340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1340, -100}, {1345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1345, -100}, {1350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1350, -100}, {1355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1355, -100}, {1360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1360, -100}, {1365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1365, -100}, {1370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1370, -100}, {1375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1375, -100}, {1380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1380, -100}, {1385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1385, -100}, {1390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1390, -100}, {1395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1395, -100}, {1400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1400, -100}, {1405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1405, -100}, {1410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1410, -100}, {1415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1415, -100}, {1420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1420, -100}, {1425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1425, -100}, {1430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1430, -100}, {1435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1435, -100}, {1440, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxN03s0FHgUB/ARRZ5rSxJxSMprKHl1xEhGjzErldDkMYgZjPd45/0Wxo6S
RDTs7IbKo9gyW15ZxOxgd4dEGq2IpViUats9/G73nO+553PO95/7x1UlB9h7
bcBgMLe/5L8d1Ivdc5/7yRzz/+zB+RiN9kxZ6eDWvdjaPzppZYbMmnhPPxhq
i3zaW0L3+IszyIpquXFZAhKyTkWo5AcLMvKrLALWcZMnclmwul1DjxeyQO2y
+WHxC8ga/aK6fTZgYwuWz/6z4KO3cKyCC2BH+ZHR5TAwJSlSkZSybk1c5rna
fDUWuMpgevPrFvB+Zu+rDebeyI0Ld1uVmsBtDRGxdrd9kLl0C+PkCgpyBFW8
dS7dF1nVZZB43s8fWWeSo/eABTYKZn+jMAJuGhhP158GmxnvFDq6AuZcPRvp
KkpbszbOcpUxT5cD4x9vGq/YByakRvMGbMHuRURmHgdMr1F1IOgFINtNv3zj
LhaI7PX5Xs3OSLD5ovG5Iv8gZPnpRlF5cjBysYpQe8lFsNrpY4ka18BetBk3
6o9gdjrDouY+uKvgJZbLAU+XGyq/bV+3Lk7yTprU1qdgbDN/1XAAfFCDGm4t
FYKMz30/fxoPPu+u+FdIIzjUwOxZvlYosm9esf0p8TBk8sxq55YpsGRjt367
Bh25IbGokO4BFicx2yV9wW6GOW/Lg7/qS6ermEZ91Z9MIPQlrFsPV18UVvkh
D+xiS8HsvQGuq7Wrj+eAxbab+PCfgZ2rB43NHMKRqw+HiJb2gdmKAYLdtRHI
rAXq4ypmJDKxZKxFhgdesXFoC5aJQvasrUvuVgb3Kslaq2PBIjyLCq4h2DSN
tjH2EJhmdt1L03rN8fo41nx3+yABHNmRik/zBROvWT4xyQTfnNXp+iQSjbxs
uf1pWxyYWibl2h8YgzyCEZ5/4R6LbJc8J5ArAreIPv/zGA9c4sMfdBgDR/86
wPOYBU9F2p+kLoIdtbh9gavgjiFbYrjwxTXvwx3I6u6JFQfPEFo6rmiAK6Wb
Ht09DM6UY7IV6sA0pYC8hF1xyG8/xB25JRGPXEPpfFSQAp4syk8TKwer9pCI
0RwwR/D4bn0P2PmjhtzsEDjBCkOLeQ5mZ/A7xMfXvR/H7atVuToBXpLLjtjz
GowvN9c6MgdmYueH3ZbAoowUCl4/ATnqncKSNgVsonKnMlIAXjyOd3jimohs
eo5hOXEyCZmncJ3aZpCMvKMy6SF7bwpy45gWgSiViqw8MOdNnwEbFDCqbo6l
IV8XeYfNb01HvmepN5TSlIFcaJwpu/pTJnLfcEWqQXYWcoNtsXpgfDbyvP8p
DM3zEtyD1/SZtcpBZs/wl0OMcpEdyyo8zkvmIdfVnnAVTgObKvJWMlbANR+V
pqr3MZB3jXkP/UYBb73FDj+SDhahv956vxIcM5zhMdcAXsBp1Wq2g+2deRuX
O8F3QqKcOnrArvHEpOpesPQltWomd81f/r356j+/R/PAfpVdGI8B8F7+Dvbn
YbBAwve74pdg56ckfpBSPjI3h+hhcwbMjCiVCOOCH3I+r3gc+x5ZhoRLM/gZ
rO4iX0haApu6zbJTDjCRpZdknb49CRZcMtxc6g8mOtm4T0SDm9SdmrQzwTRx
8gSRAVafo8oGF4I/kQN+EC4G8wdDDhWUgvEydDGXsnXr4uqPRvRr3ASrJkaV
/M0C5zyIoTRWgqlXuv1qn4NtQnYEVm0rQJ4+OLJN3BCcu+FGs/cpsPsFIcZl
Mtigi+zZHgRWitnSS4oEb8S2GS/Eg9+nFr/5JRk8OxpalpUO9pF8ER2UCR43
sXU4mw0meTXpH8oB/8HYLbErb93auHqCIru3E5wvKmsdJXQZWeBXo9yMAxvx
Tix/jgP/C9s//K8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235953#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$427235953#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxN1Xs0FHgUB/ARReO1tiQRh6SIoSavjhjJ6MGsVEKTxyAMxnu8834LY0dJ
Ihp2dkM1KLbMllcWMTvYXSTSaEUsxaKUbffwu91zvueezznff+5fV4Xib+ux
AYPB3PmS/3ZgN27PA95nE8z/o0Hw0h/pmjTXIqx7obl3ZMLcGJk1/oF+KMQa
+YynuPaJl2eRFVRzYjMFZGSt8hCJj6YU5NeZVjj7Te7IpUFqNnVdHsgC1Ssm
R7AXkdV7RbV7LMEGpiyvA+fAx24TWPkXwfZywyNLoWDvxAgFcvK69xEyznPy
VFngSvzU5jdN4APM7tcbTDyR6+fvNSs2gFvqwmNs7ngh8+imBknl3sjhVGzz
bJoPsopTP+mCrx+y1gRX5yELrB/E/kZ+GNzQN5amOwU2NtgpdGwZzL12LsJZ
lLZmbYLZCmOOLgsmPtk0Vr4fbJUSxe+zBrsWkpi5XDC9WsXOSscf2Wbq1VtX
sQBkj9X71TsjwCYLBucL/QKR5abqReUoQchFykKtxZfAqmeOJ6hfB3vQpl2o
P4LZaQzT6gfgjvxXOB4XPFWmp/Sudd06BIm7qZJbn4FxjQMren3gQ+rUMAvJ
YGRizoe5M0TwBVeFv4LrwSF44+d5miHIPrlFtqexociU6ZX2LZNgifpO3VZ1
OnJdQmEB3Q2MJTNbJXzALnrZ78qCvupLpSkbRX7Vn4i36olfc5wuobYwtOJj
LtjJ2huz9ya4hmNTG8cFi2039Bp4Dnas6jcwtgtDrjoSLFrSA2Yr+At2c8KR
WfPUJ5XMCGRS8WiTNB+8bGnXEiQdiezOqUnqVAJ3K8pYqOHAInzTcp4e2CiV
tjHmMJhmfMNDw2Ld+wmsuc7WfitwRFsKMdUHTLpu9tQwA3xrRqvjs0gU8pLZ
9mctsWBqqaRzb0A08jBGeO6lawyyTdKsQLYQ3CT64s/jfHCx10C/3Sg46tc+
vtsMeDLC9hR1AWyvyesJWAG3DVqTwoQvrfkA4WBmZ1cMFjxt1dR2VR1cIdXw
+N4RcIYsky1fA6Yp+ufG74pFfvcx9uht8Tjkau/2x/nJ4InCvFSxMrBKF5kU
xQVzBU/u1XaBHT+py84MguPNMbToF2B2+kAbdmzdeAKvh6N8bRy8KJsVvucN
mFhmonl0FszEzQ25LIJFGcneRN145Mj38ov7vMGGyncrIgTghRNEu6fOCchG
5xlm46cSkfnyN6gt+CTkHRWJj9h7k5HrRzWtSJIpyEp9s570aTA+n1F5azQV
+YbIe1xecxryfTOdweSGdOQCgwyZlZ8ykHuGylPwWZnIddZFagFxWchzfqcx
NPfLcA9Rw2vGPBuZPT2wFKyfg2xfWu52QSIXuYZz0lk4FWykwF9OXwZXf1Kc
rNrPQN416jn4mzd462122NE0sAj9zdYHFeDooXS32TrwPEGTo9EKtnXkb1xq
B98NjnRo6wI7x5ESq7rBUpdVq5i8desSGq/983sUH+xb0YFx6wPvHdjBXh0C
C8R9vit6BXZ8Rh4IVMxD5mWT3CzPgpnhJeKhPPAj7uqy2/HvkaXJhFT8z2A1
J7kC8iLYyGWGnXyQiSy1KOPw7Smw4LLe5hI/MMnB0nU8Ctyg5tCwLwNMw1LG
SQyw2ixVJqgA/Jni/4NwEXigP/hwfgmYKE0Xcypd85f/UHssvFf9FlglIbL4
bxY4+2G0d30FmHq105fzAmwZvCOgcls+8tSh4W1YPXDOhpuNnqfBrheFGFco
YHwHxb01EKwYvaWbHAHeiGsxmI8Df0gpevtLEnhmJKQ0Mw3sJfEyKjADPGZo
bXcuC0z2aNA9nA3+g7FbfFfuurUJtVYK7O52cJ6ojEWk0BVkgW+1UiMBrM8/
ubQaC/4XlQsPOw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235953#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
CVVw3pOotm33Q5fj5Z+l62P71LriAexLy/hbswG2z9KIf90E7+l7dP9vG7ye
VXlEsBueKwnwr+qFP2k/YDvwBu4cWSjofwfXhO5RPvMRny/+n3tOKaOw7W/Z
jOpJWJ589/G7XzCzk9R3+r/w7OozkWl0YVQP5hVvFVkJd6h+qbi/Omw5PsyS
iXsDojq66+CJfZ/b9TbD27OvHzIQgacrWSdf7ITrOwITDKXw+nHDk1I9ZNh0
0eL5kd3wL3El1mNKcJIZj8FxdVg8di7ZSAduru3rNjaA07o1Pd4chW2+VG4y
NQ6jnk8pBqHKfjN4cXPqUTMrWMZHv8/iDHz69Tpjaz9Ybtp37uOFMGp/XMn0
JcMmBO7mN9kzFA5fk295YxsN7z2Vz2OfBPelh5mduAQzz6q8P3UTVjv219Kx
An4f9vaqUy3sXXn/o/MjWKtDNPjbY5h9+JKASws89IexcbIdLt3kZXv2edhy
vvF96X7nLjPs9h7m7Z484fkV3naMfovqFCz0elMXywwsaiYc3j8bRo0PkgMK
ircWYLlhizwVhnCqiS8h6/vXwIdnO4aYN8M2DFzVyqKwI5OSwBtp2H29Tay7
POyV7KGivBf2Y4/4tU4ZDrqUUfRaDQ7jKba6qRVOWc9YimfCv2RfH4PzZZSZ
1p2Ai6oM/nnlAJcq2LvnOcOVdV4ibq7hy/nCh6XxS0S/2+cJN2jc0XrlB7fq
9JS5hsLdh+d41sbC/ce3ht9IgQfeSCu6podT1m+W4oe52pRSJjz24Wjemhx4
wvaUSd91+KdDXNPZQvivy13JNXdhhh9NQ72VMOO5vku5NfDauTHdsw/g9X5/
6JUawon/Tdc8W+ofkZp9Ls9hcmpi0fUBeJL7sr3kEFySk8t3/zPsKFTyWmM8
nFJvL/WnoqqUrgn4RlUL49gMzPforS/tHzizY3KSkyGCao7X9HZSa+Bui3Vb
a5nhpE/srzRZIyjrL2RC7zRf8otNMPOUyEELLpiBUU82bgc8z+u5pU4Wvpcb
0KslH0GZfyETnqKRid2KsMydJG1LAp6WzVzxRRV2Ur59nl4bHtFp+Mp9GM7r
ar2ZdwS2Od5jRTKC+d692/zAFH5nM9Kz3zJi+fzGkwnjM/P7rU7APd7MD7yc
4YZ847iXURHL+VoQmaj+54LnikvwnZd55jI3YWfTO5z1BbDYx+ou7RJ45MSj
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
A76ssCDFywWXJPrrveeGG0ZoXHJ4Eqn1w1jaitvb+OAN6kwTuQKw3Hdm8R07
YMurGx1vicLus6nRDjvh8EOchWIScEZeRssXSbjkD89YsXQitX7SrpQcrtwH
jzirfPznILx+iya/ij68u1XbstEQPrCtIyD0KGx+Xi9b43gitd5z7ex6sMoY
Dttx5F2zCdwdbG7abg0LDJx4/fwUnKnOKLLmPMxWmH9OLeI/r9+o18oaA3e+
neX9EA8HjLVpNSfCEr9yXG8nw2/pPTLTUhOp9VfM+v2P/S7CWqqXnLizYQbP
UbaqPPhuUJ1SVn4itV6yjk88GVoAb8i0S3Isguvz5WsNSmDehg8s28pg3zeR
NpMVsNiIWWxvFfz6h3TVg2o4knblhxv3YTnm10yxdYnU8Z22I8jc5CH8gxAt
E2mCDxt3rZhthu+4eRs9boMtLugGF3fAzLHbilM6E7E/8NLPlz5dsGNeC41N
Nyz8ijv/7xt4aM3pQ5mD8OSlmnnrT4mU72uQiYUdTPkin2HGSiPDyRF4o9ot
mqoxWNRSy0htAlbx/Vz6fArWZdptnv4dNkoPY7KYgW2FXlZu/wW7lG+3+TKb
uJwfbVga352N988vwNlfbNhW0SRRXclI75RCD3cIXmviXwW/Lps6O8IIfyKU
eW8zwZMdCS0ea5OW55dWLbXfdMBTkRkWS+UVPrYJNm43fXWWB7Y3KQqV44Vd
R+el/26F/c9pv2viT6LsByARkSsuR8UIwDn8CoNcO+B7e1/tuSkKbyo5ktUv
l0S9f3bG6dpoHkmi7M8hEee6vnHJHIN52RM7+YzgJiNS+DoT2PHKi71zpknU
fKJGkL3whSXMWHScs9gWPkq+HBp2Es6teTtt4QhrL/rf0nGGp5X5LOVdKO1/
spQvhT5kF3KFlZ9at7O6w+96P99s8oG9hx2DvIJhflFmebtQSvvvkohmp9vf
9MPhM6V6eUqRMPvMlKlYNGzrK9PCEA+X0Z/b/S4JNtLknGhJgWmiq3Or0uCb
HcYmuelJlPXRpXqPdWFDYgaceUkpwCELHuML/KJ6DZbLf2S0JQ8Ok1z55Oct
WNztpt9gIdxdqSXTWZxE+X8mS/n83OhY7W1YQCn66q1S2LWpnTm4Aq7XWe9r
Wg2fSCgl7b8PM3cfHpWtgys4fmRv+wc2NUk9yvIwaTneOC/VV6e4pRua4RSv
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
bqECgwpYL4h5FVcVrGAUVDH/H/8fOyP3BA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235953#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwdj30s1HEAxi9HpTvVtXAoNJQ7efn9iNPL9sh7dCdWu41ycxS9YJLpBZXQ
eeuOu28tWm8j6WUdhaTL5mrtSnTTvFzqSHpvvaw6yaSe7dnnj2f7bM+ypIzY
FDMGg0HN9B89tuiE2rJjYPyPK+zrCzsa3IugfFG74EuBK9qM/GihVTEEJ0Yj
cgLc4Nj3ZUfOp2LEa2jdhbdu8FUprl40lkDU9GDWvbrlOGP+3auq6zhkz2dX
i+NWoCXIe6jotgxWSoV2G9sdpwJKOX8aS7GEqx03atzRY6gr9i0vw5FN3ahJ
4uHWxlrXzMPl6D4l4IVx+Pi6J46RnlyBSFWPXK3m40cYL/VzcCWC650sC6M9
0PBp0LTX/wRUgqmh5189ID5fJ93KlkPE2rm5RbYSzU1RicwSOQYGuZnNHp4I
dNBPyCbkOP3RiSXr9ISLccfQ0zQF2mWXLvvHeGGMtUtU+0qB1NW6+JPvvNBb
KZSGb66CX6M8MS3HG8rcs6x9vVVo+PabHTrbBx2a6QlpZDUMoUs/3BX6YEEC
Snzbq9E31zgcovBBoORzQ5GfEvd/b53CgA8q7xxKa6tX4rUt//g+Owrhe+0z
r9qowJEptdvFFPoVbiwXuQp+ZbH9p2soVM3hhB6YRZD60tJaNEih49twfDaT
gH1OXysZovBmuDEr3YJALalxzTJQWHsz5FySJUGzVH9NOUxhXJI7uYFDEGDG
fNI/QmFN+0u1wzKCHE2Mc8J7CmO7rzveBYEuzyFxyySF+eKDq1rXE7RFBl1O
+UMhMDgiWh1CIOU/vJE9RaHSbnR/XQRBhVbzUDFNQfDA+llFDMGo6YrpEZNG
hVNe2TYJQVjnpVXr2DTa5m24IE4iKDBMMaOsaIz+sLkdm0zQ+jNOL55PQ/D4
xnhYKgHfk5GRvXBmzx0L8s4k6HI05zYupsFOVot5WQRXfgXyWq1pBIjyM1yy
CZS9Gau1NjTK3bhnbHMJUo4aEl5wabQsfN3MOUAgjOekf7CjMTKp1rEOzfz3
Cy8w2c/43uSPWOQTOFvlyS2W0PDXR5mmCwjmjjedX7SUxl+qt1m9
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427235953#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 10.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 10.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"G\[OAcute]lyairoda, Wed 6 Dec 2023\"", TraditionalForm], 
     PlotRange -> {All, {10, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{0, -100}, {5, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{5, -100}, {10, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{10, -100}, {15, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{15, -100}, {20, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{20, -100}, {25, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{25, -100}, {30, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{30, -100}, {35, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{35, -100}, {40, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{40, -100}, {45, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{45, -100}, {50, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{50, -100}, {55, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{55, -100}, {60, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{60, -100}, {65, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{65, -100}, {70, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{70, -100}, {75, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{75, -100}, {80, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{80, -100}, {85, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{85, -100}, {90, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{90, -100}, {95, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{95, -100}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{100, -100}, {105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{105, -100}, {110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{110, -100}, {115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{115, -100}, {120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{120, -100}, {125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{125, -100}, {130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{130, -100}, {135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{135, -100}, {140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{140, -100}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{145, -100}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{150, -100}, {155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{155, -100}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{160, -100}, {165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{165, -100}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{170, -100}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{175, -100}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{180, -100}, {185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{185, -100}, {190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{190, -100}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{195, -100}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{200, -100}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{205, -100}, {210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{210, -100}, {215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{215, -100}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{220, -100}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1145, -100}, {1150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1150, -100}, {1155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1155, -100}, {1160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1160, -100}, {1165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1165, -100}, {1170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1170, -100}, {1175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1175, -100}, {1180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1180, -100}, {1185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1185, -100}, {1190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1190, -100}, {1195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1195, -100}, {1200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1200, -100}, {1205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1205, -100}, {1210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1210, -100}, {1215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1215, -100}, {1220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1220, -100}, {1225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1225, -100}, {1230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1230, -100}, {1235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1235, -100}, {1240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1240, -100}, {1245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1245, -100}, {1250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1250, -100}, {1255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1255, -100}, {1260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1260, -100}, {1265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1265, -100}, {1270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1270, -100}, {1275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1275, -100}, {1280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1280, -100}, {1285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1285, -100}, {1290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1290, -100}, {1295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1295, -100}, {1300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1300, -100}, {1305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1305, -100}, {1310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1310, -100}, {1315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1315, -100}, {1320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1320, -100}, {1325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1325, -100}, {1330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1330, -100}, {1335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1335, -100}, {1340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1340, -100}, {1345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1345, -100}, {1350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1350, -100}, {1355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1355, -100}, {1360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1360, -100}, {1365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1365, -100}, {1370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1370, -100}, {1375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1375, -100}, {1380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1380, -100}, {1385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1385, -100}, {1390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1390, -100}, {1395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1395, -100}, {1400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1400, -100}, {1405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1405, -100}, {1410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1410, -100}, {1415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1415, -100}, {1420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1420, -100}, {1425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1425, -100}, {1430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1430, -100}, {1435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1435, -100}, {1440, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxF1GlMEwYUB/BuoF2oQph2jGMYDhU6BnNlIIZJEShRoCpO4rAMRyVQ5CiH
QAtYkKMWEGlX5lTQoLZpxqEWUXTaIEIFKVDKMQtO61YShdDAtAMmwtwC773k
5Z/ft/f/8pzi0iLjPyQQCBnv979M7/fceluztJPw/3jREn2eqyeDPGirNj0c
ev4yyB98deKf7B1ZEeBvE0hf7HlxEGzvfIZfYWCCPaRZ694GxIHrM1z3tarj
wZrsAN8SKRvs9P0IIyY5BRy/fKv5My4HbDPVRrSJywBnUf2fiilZ4Ljpxe4N
k8fBTbsyiZcGcsBy+zTDZkUu9nmT9KBRwgUzLuo7rLTohdCozgwrHviooqWk
1xHd72Ad4uqJNtcGSDVfo/0EqWsKvkGn+tfFu4esuHAb7epsb9dIOJqrKqML
jqEZFwIfbS9HXzF6PF4yzwPPB37a18lHJ9Wvjx3i5IN/J5jNvvihALyvZMZA
Po/uID57sluLvpioG4nSo/N6hrUsI3qSG7k/yYQ+RNEMcBbRqrEIRo7ZiRV/
RfOu6FUXWKCnwztUZ7egZZZ32m/sQpeTJXLbFnSqQ1p1kQsf/NdbfnADqRDc
zO5urylFvzwvFnx0Ge2kZjLylGil4cGNm2p09LstZOMYuiiIkJr/DC0X6lQW
f6yaStMMKDadm0DPkStzt75C0y/vpATPoCWes+NH5tBEUSmb/mURmPfadu5z
Nnr7pusyrgFt2kOPehR7ErzUeG0D6QR6rZXtIKMWbdHed43TgLZMP1klvove
W+e19rASXd3ztMClY9XetEGT0DTVhf7Y2TflZg9awhMxQwbRNkNTYaNP0G5n
laoYcjHY77AocGI/umyHzehwB1prW5fUSS0B28mK78ndSsFteko4Y30Z2HF4
JiF7Gk2tETVe0QvAdeavPcUPT4FvBXqNld4Rgn/2Lbde/KUcPDAuLaNWVoBb
I2pdOYWV4NmUA4TUo6fBJrp7ojGoCiyf1s1n+pwBH6qXsmLWVYNbFGGxZgK0
n712QbiAbn7nMNm0TQR20SeMDbLRGxvkOcGn0ObZrzbelqHzx4WsmVb0GxpF
4d6FjozWrpnvRl/P5H2nUqNjCxnFTf1oy9POTRLNit//q/vn/h7N06KTZY8J
rGG0m85OvjyONpCO7a39Ex3dx9SlO4jBmioGK/QgWpJ7iXRcg76nXF5g7f4R
bMWkCah30X5HjPJSbwm46td8dpsMHZppx2n8pAb8m2gzyaUaLSZah/A++Anv
TW52vE9D+2jD5pf56H8BMi4Rag==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427236295#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$427236295#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxFz2tM0wcUBfBuoF2oQpgyxmMYHip0DNmKIIbJH4ESBaqySRzCcFQCRSjl
IdACAkKpBURay5wONKhtmvFQQRSdNlihghQo5TEBp3UriUJoYNoBE2EzWe+9
ycnJ79u5zgnpUYkfkkikzP/yvjMGvLbe1qzsIr2/Ym8i2fe5ejrYkzDZ+HD4
+cvgAPDVqX9ydmZHgr9Nonyx98VBsIPLmaJKfSzYU5q97m1gArgh021/uzoR
rMkJ9CuTssDO348y4lLTwImrt1o+43LAtjMdZNuETHA2LeCpmJoNTphd7tkw
fRzcvDuLfGkwFyx3SNdvbs3Df96kPGiScMGMizqllRa9FBbdlWnFAx9tbSvr
c0IPOFqHunmhzbWBUs12tL+AvabwazQ7oD7RI9Tkr4ir833doxForqqcLjiG
Zvwc9GhHBfqKwfPxink+eDHo0/6uInRKw/r4YU4B+HeS2fyLHwrB+8vm9DYX
0Erysyd7tOiLyeOj0Tp0fu+IlmlAT3OjDqQY0YeomkHOMlo1EcnINTvxv2mE
T2WfutACPRuhVJ3bgpZZ3um8sRtdYSOR27Wh2Y7pNSWuReC/3haFNFKKwS2s
ns5aPvrlBbHgo8toZ3UsI1+BVugf3LipRse822JjmECXBJPYBc/QcuG4yuIP
k30IzWDrpvNT6AWbqrytr9D0y7uoIXNoidf85JEFNFnEZ9G9S8C813YLn7PQ
OzZdl3H1aONeevSj+JPglaZrGygn0Gut7IYYdWiLzv5rnEa0ZcbJavFd9L76
bWsPK9A1vU8LXZUmbyeGjELjTDf6Yxe/tJu9aAlPFBs6hLYdngkfe4J2P6dQ
xdmUgv0Pi4KmDqDLd9qOjSjRWrv6lC5aGdheVnpP7s4Hd+ioEYz15WCnkbmk
nFk0rVbUdEUnANebv/YSPzwFvhW0bYJ/Rwj+ya/CevmXCvDgpLScVlUJbo+s
c+MUV4Hn074hsY+eBhvpHsmG4GqwfHZ8Mcv3DPhQg5QZt64G3NYaHm8mQPs7
aJeES+iWd47TzV+KwK66pIkhFnpjozw35BTaPOfVxtsydMGkkDnXjn5DUFs9
utFRMdo1iz3o61m871RqdHwxo7R5AG152qVZojHZm7h//u+xfC06VfaYxBxB
u4/by1cn0XrKsX11f6Jj+mPHMxzFYE01gxl2EC3Ju0Q5rkHfU6wuMfecBVvF
EgLaXbT/EYOc7yMBV/9awOqQocOy7DlNn9SCfxNtprjWoMVk61DeBz/i3tQW
p/sE2lcbvrhahP4XlkMl3A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427236295#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxN030w03EcB/AdMa6yy3kmD7Ee9HBd23CuO1+GTR7uLJQJcdc5u45YOWbG
PBztD4nl4TyUbq15SKSGUqEJOWIsetDl8S4PZVKzVq1Wd79Pf3zuc6/Pff74
/PH+OMUnM87p4XC40D+l625Pz3gatqajFtosx6yFhCS2yQvEe+C9RmuMROcM
zKJNVm+zEPy6ocopsgZsEjvINxBloIKV0E57AzLyNVPNtjWBM4aIPjHt4AVS
nl5HHzik7kMfQQ52YVdTe9fBalqELJXAwSxSDvcrgsAh1d4DHgLwlrfViCw7
E+muo8WR0ebqbe/gwkzUaa/bIKPPFe5SRTF42WfANaYcvLQWcX2pFjxDTStS
NYMnq66lGHWD+/wmqa5vwG1KU4ugLXBxQMnDK2QuZlb9ztiJC2CaWqBveQfs
EmokYX4Em/7053DxWZhxDQVBdUSw6peIcpcM/hQms++hgpe1J8vogeClxnn8
OAM8F87mRjLBMzh95WxcFmLoBrsoqA//fjpADhabdPW0+fAwW5WK7y9ywAJz
ocS6HUydEtwkvQT/qOTXBK+AWQFam7AN3r88JVHQtJpbxVSD/Ru/W8bhsjE/
YKaXJ+DBpY/YZRfNwUl2ySV8Z/ABQceO87XgDU22b9P2HMxxlqXzRFfw2DFR
7g06uAgdls+cAnuFSJ1sE8DNVysvLbNyEF0XuAEKslFwhrqSwEVW0bsvp4K/
RXmlnE4Dy+f0rVVZ4JbEwZ5rBWDhEeXbsyow54u16mAiHzOLp43XFoIjjRdH
5WLw2OhU/nEpmC584SnuB4v9aJKcIfA21TPzqBFwvATlUcb5yOHvg7mhnsjH
6wQFmNstHZa9A3s4tIozFsAWlEye455czF9P+EcMxIINCdbjITVgy4mVwFfT
YEdKuLGNCry/4snzaPM8zIfo7FvZLuCj6n359SRwClGhSXQH261qkOY//wb6
9ErZ
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAmIQbfbiDJv6gXaHHXKtrwMtzBwEav8y2x1C8JU63W8U
XETwjadOXLP4AYLP91HTN16yA85/4XPorVQQgr/s0unly0IR/OSIq4lGkQi+
wr170vtiEPx7yS+ueiZ0ODysElnn/tDUISr/t2diOoJ/tYpvX0Uegn9mosmy
5TUI/qEVUX3XuhD8DdeWxZksR/DnsnzWm3QYwXfoiVoS8AjBfyJ8SJKfsRPO
33a9NCRPAMFvn63Zf1Yewa/puRa7VBnBL6ht1qlVR/BT8gx+h2h3Opw9AwKm
DhHxd0/q6CP4jo7m6XfMEHwt5YksPXYIfoFRwnuOGgR/m6P+rdadCL7ef9aM
x18R/OV77nx1MOqC89lygiIjHBH8FOkTe/IDEHzhz015v8MR/EOnbBXa4xH8
WWbSP32SEfzCRT8uCqUj+B5811bdyOpyeBMIikFTB4Wqzc3z8hD8OzfmeZ3t
QfBnmHcJ/lmF4Gsui3vfsA7B3yVifJZ1E4Lv3cy+umsrknkfb3fw7+xysOW6
vrjgr6nDv3MtLpIHEHz5NboMyscR/KS0+nKzqwj+MoWL7zwfI/i6U0vuFvxH
8LdwSpyZLt0N5x/6FLfyaTCCf/720jbjHgQ/rn9q9tXJCP47p9aA8tkI/jaZ
v04e8xH82m8lppKLEXyXC2/UXy1D8Hce60q5txzBBwDDY8ds
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427236295#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwdT3ssFHAAvjyynCltKTRl7nD4rZDX0vpEcl7nkXceeYSRt1zosvLmzuP4
2UyTlqZGOSrPaldbKpXHalbCeUS1vGdjJl1927fvj2/ft+/Ti0jyjlZgMBjG
cv5TMVeaI0wqBeM/WBgcayqwKCtFm4rnpWENFp6417OSc8ug/eewknozCyuX
fRiJUUJEBgYXSc3ZWHfixC46iHC0usia281G88KXjTSrciToxy63cg0Q0NgU
GaJWAcv80YLfHw3Q0e4aplhYAV4ds6Q/xBC2OiObxZsV0Dq/Vts+ZQh9WczX
4bhKGK+Zc+5fNMIsM55XP1OJ7bsdvSu/jDAk8og851sF3o8Si+Y4Dqr5DcyM
oSrk7TeMz1jhoO/5zmYkVwxO1XKXQ4Yx9l5AoUWPGBMzC8cnF41hG77YnH+i
GlZFE/bcFBOIenPiuu5Vg+Wbvrv9pwnOpWknt2jWgC1L4AlCTTFayWbqV9Qg
81SQ26cxU1SpaJzN2kXRMCZbF/AI+lbHg9MVKTy8b8pyvQjmxx+kJipT7Lxh
D9zwIbB77Hg7Yg+FaWPMWr4/wVw4f8tFg0Ld0OtlcRjByZ5JiY4ehf9y4Iwo
iWA24aHuM1A0DhnVFJQTqAdkW3aeoVhqvVKfX0lg6+DsJnGkUPWWuueJCURa
01ebnCkUXH1ScmsJbF4f+Cz0pFi1y+ziNxAIj1wrDQ2niJU620Y/IuhSdbkT
EEFhMqLgFyEhmF7X7PaOoliY7ksN65Dn37fNOcVSpCmZtQR2yn3+rP2xZPlf
00AttxcEalGSAE4qhaZ6lr2zlMCaJ0jST6cQLtXFOb4iKGMfunWQT5Hd/q3b
rp/g6b7vHRpZFCvi7SmbtwRTW5J3zBz5ngxdVcsBed+8YEpZQCHzO21u9oHA
asR1Y+c6hZ9NeBAZJPgLgB4ofg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427236295#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 10.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 10.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"M\[EAcute]rce, Wed 6 Dec 2023\"", TraditionalForm], 
     PlotRange -> {All, {10, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{0, -100}, {5, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{5, -100}, {10, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{10, -100}, {15, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{15, -100}, {20, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{20, -100}, {25, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{25, -100}, {30, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{30, -100}, {35, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{35, -100}, {40, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{40, -100}, {45, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{45, -100}, {50, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{50, -100}, {55, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{55, -100}, {60, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{60, -100}, {65, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{65, -100}, {70, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{70, -100}, {75, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{75, -100}, {80, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{80, -100}, {85, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{85, -100}, {90, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{90, -100}, {95, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{95, -100}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{100, -100}, {105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{105, -100}, {110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{110, -100}, {115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{115, -100}, {120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{120, -100}, {125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{125, -100}, {130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{130, -100}, {135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{135, -100}, {140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{140, -100}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{145, -100}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{150, -100}, {155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{155, -100}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{160, -100}, {165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{165, -100}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{170, -100}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{175, -100}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{180, -100}, {185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{185, -100}, {190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{190, -100}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{195, -100}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{200, -100}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{205, -100}, {210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{210, -100}, {215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{215, -100}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{220, -100}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1145, -100}, {1150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1150, -100}, {1155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1155, -100}, {1160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1160, -100}, {1165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1165, -100}, {1170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1170, -100}, {1175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1175, -100}, {1180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1180, -100}, {1185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1185, -100}, {1190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1190, -100}, {1195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1195, -100}, {1200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1200, -100}, {1205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1205, -100}, {1210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1210, -100}, {1215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1215, -100}, {1220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1220, -100}, {1225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1225, -100}, {1230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1230, -100}, {1235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1235, -100}, {1240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1240, -100}, {1245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1245, -100}, {1250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1250, -100}, {1255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1255, -100}, {1260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1260, -100}, {1265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1265, -100}, {1270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1270, -100}, {1275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1275, -100}, {1280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1280, -100}, {1285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1285, -100}, {1290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1290, -100}, {1295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1295, -100}, {1300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1300, -100}, {1305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1305, -100}, {1310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1310, -100}, {1315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1315, -100}, {1320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1320, -100}, {1325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1325, -100}, {1330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1330, -100}, {1335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1335, -100}, {1340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1340, -100}, {1345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1345, -100}, {1350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1350, -100}, {1355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1355, -100}, {1360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1360, -100}, {1365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1365, -100}, {1370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1370, -100}, {1375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1375, -100}, {1380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1380, -100}, {1385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1385, -100}, {1390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1390, -100}, {1395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1395, -100}, {1400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1400, -100}, {1405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1405, -100}, {1410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1410, -100}, {1415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1415, -100}, {1420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1420, -100}, {1425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1425, -100}, {1430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1430, -100}, {1435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1435, -100}, {1440, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQXXhOT337hX92DCDQYOSQYXb/zCtnHQcY/+vhy/df
ONvA+Uue/iqzKvGF80PSuXW9HobC+dJK/fXdT2LgfJ2lJTy/7ZPg/IVFKgFb
z6TC+RfK7M1blmbC+YpxV/1ic3Lh/NT/29bJVhbA+eKvd7CLJxXB+SXGNncm
aZXA+Ulv/5wQflUK5691Kmaff74c4f4vWQfXTKmE8384Spw9Ul8N599lYP74
MLEWzs+TyZ/QqFwP56/LPHFgamsDnF/1WfK7dmYjIry83MKOxzfB+ZbREx2f
BjbD+Zck52YdMW6B86WWNe9ZodEK5+94oOXjx9sG58td+ZBe9hbBN546cc3i
B+1w/lyWz3qTDnfA+dsc9W+17uyE85fvufPVwagLzp9h3iX4ZxWCr7ks7n3D
OgR/l4jxWdZNCL53M/vqrq0I/p2Ptzv4d0L5DNoO/861uEgeQPDl1+gyKB9H
8JPS6svNriL4yxQuvvN8jODrTi25W/Afwd/CKXFmunQ3nH/oU9zKp8EI/vnb
S9uMe5DkRRZeDWTrgfO3+s5RKWhA8D/mBjPkpfTC+V/dNDPeOffB+Sve3vxR
bNYP50csXJocyzMBzt+8yTueuR3Bt5S+9LPzJ4Kv/CD91sXMiXD+E+5s/zmP
EfwLfX7J7qGT4PwpFfO5Sy8g+Hv2/f+Z7DkZzuePcWg33oXgWya8W9FqMgXO
79tdk7ljGYLvXixVsEZsKpx/faIqt/IEBH8Su6BrFeM0hPty1sntdUDwzS55
//hfj+ADAMpCJv0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427237301#1"]& ], 
       TagBox[{}, Annotation[#, "Charting`Private`Tag$427237301#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.88, 1, 0.88]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBGIQXXhOT337hX92DCDQYOyQYXb/zCtnHQcY/+vhy/df
ONvA+Uue/iqzKvGF80PSuXW9HobC+dJK/fXdT2LgfJ2lJTy/7ZPg/IVFKgFb
z6TC+RfK7M1blmbC+YpxV/1ic3Lh/NT/29bJVhbA+eKvd7CLJxXB+SXGNncm
aZXA+Ulv/5wQflUK5691Kmaff74c4f4vWQfXTKmE8384Spw9Ul8N599lYP74
MLEWzs+TyZ/QqFwP56/LPHFgamsDnF/1WfK7dmYjIry83MKOxzfB+ZbREx2f
BjbD+Zck52YdMW6B86WWNe9ZodEK5+94oOXjx9sG58td+ZBe9hbBN546cc3i
B+1w/lyWz3qTDnfA+dsc9W+17uyE85fvufPVwagLzp9h3iX4ZxWCr7ks7n3D
OgR/l4jxWdZNCL53M/vqrq0I/p2Ptzv4d0L5DLoO/861uEgeQPDl1+gyKB9H
8JPS6svNriL4yxQuvvN8jODrTi25W/Afwd/CKXFmunQ3nH/oU9zKp8EI/vnb
S9uMe5DkRRZeDWTrgfO3+s5RKWhA8D/mBjPkpfTC+V/dNDPeOffB+Sve3vxR
bNYP50csXJocyzMBzt+8yTueuR3Bt5S+9LPzJ4Kv/CD91sXMiXD+E+5s/zmP
EfwLfX7J7qGT4PwpFfO5Sy8g+Hv2/f+Z7DkZzuePcWg33oXgWya8W9FqMgXO
79tdk7ljGYLvXixVsEZsKpx/faIqt/IEBH8Su6BrFeM0hPty1sntdUDwzS55
//hfj+ADAGg/J1w=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427237301#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQnfvvYTjXh04HW67riwts9R3CJmv0y35C8PX+s2Y8
/orgv4r9qCck0gXnL99z56uDEYJfp7HrHJsZgh82ZfryM5YIvh5DacMkWwSf
LScoMsKxyyFoh1zr64t6DludebmfeCD4KdIn9uQHIPiHTtkqtMcj+ApVm5vn
5SH4d27M8zrbg+DPMO8S/LMKwddcFve+YR2Cv0vE+CzrJgTfu5l9dddWJPM+
3u7g39nl0Po6ECii5/DvXIuL5AEEX36NLoPycQQ/Ka2+3Owqgr9M4eI7z8cI
/qtbSmmxHxF83akldwv+I/j7mD13f2XqhvP9imRnVrEh+PcffCz7z9ntAAo9
rnA9hwL/YyEtvAj+JJ18gT4RBH8Lp8SZ6dII/qFPcSufBiP4528vbTPuQfDj
+qdmX52M4L9zag0on43gb5P56+QxH8Gv/VZiKrkYwXe58Eb91TIEf+exrpR7
yxF8AFRjFpU=
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQHcm+Ro5jR79D0A651teCBg4XioxfuOxE8FUscpnP
7UHwK/4ukws/gOCfPfTA8sFhBF/uxvFlLJcQ/Ly364Q1HyD4/BK1bwv/IPgR
C5cmx/JMgPPXq/Y/YtNG8NlWVSRu8ETwZbiND0YFIviGOW8VWCMR/D1zTgXc
ikHw3c4ub1ifgOD3pE6TmJWE4F/827KhJQXBF5tW7JGfhuDH6CU9iMyY4LDO
/WGVSJ6BQ8eHa/PXlSP4mzd5xzO3I/hXfN6yLl2M4H971rfG7QCCz77lfv30
cwi+RKNB8Is7CP6C5zf2CDxB8DX8GtUsXyP4OY2h0WffIfgbtmhOSPyE4B86
rXT772cEHwCrN9UP
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQfeVtvTLPlUkOO+RaXwfuMHA4WiXUbIPEv/f7tJ3C
NQT/W03rL+YbCL5G/Y/C07cR/MjG7JeT7iP4e1oDbyg+R/DlusyPb3iH4D+e
xLz03F8Ef8Xs801veCbD+blLZidwySD4RmvT7TS0Efzk9be2vtdD8Kds9NXd
boTgrzVifznLBME/tvnAkjozBP+eSVVCksVkh4dVIuvcEw0cvm81lnGzQvCj
dklyX3VE8Pfs+/8z2RPBF3zmf3d6KoKfxrvgwOlGBF9A0WPT034Ef5fJh8X/
5yL4/XZH5vAsRfBTPGZMlVyD4N/yOnv5zloE39+XSWjBegT/iL95QPLGyQ4g
38ixGjhYBeX0qW1G8FXCr3Gt3Ybg88c4tBvvQvCl7q7mP3EDSX2c+IyY7wh+
mp3RLsb/CP5KOd87y9imwPmn+qJyK7kQ/Df/0v958yH4f7a9czMVQPB580v7
5YQQfDn1P9fZRaY4xPQf+qoRo++gd79J4aMogr9l/o4Ua1UE3zLh3YpWEwT/
Sa8p5/xcBL9vd03mjmUIvs/KjZwWqxB8runPVm5fi+C/5GWsKl+P4J9okfYy
34jgL/ttKvV9E4J/vdMl7e1mBB8Av356cQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427237301#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwdzAlMkwccBfAq45gwBVw5J0g4BqiAfNDSfiS8KlRukMM1QScrGIGOIxyT
SyoqhwW6tsDHmFRuRhhjoNxW2YCo23AIcSygTEAOlWOAQ2GYsW7/5OXll5f8
zfjxQed202g0N2X+62Yi1q47MQG0/88C53Y6Ww6kJaDOyjO0Rs0C+ovd6vr8
RMj6Nq0OLVkimXB9KrNNRtFuUfOS/GPwl9892P8qBY89Hi72Odvgu2NJ6pXD
F6A7YN+VPGmLur9ifmwuScPN8n+KX3xyGJscg4eDwgwYuwYSQVNHMElTWZv+
7CL6Cu15+YH2iPsoXpJtLoTGgQCnVl8HtEQ/+KE05xKCFbpExlsHpL82fHso
Oht7/oydM5EcxYY399T9s5fBlLXGiewcwQqTcuZOXkHXUxspd8ARo4bymEHi
KkYFgjRPTwJGDVcUjdY50F3alSkZJdA9Zevr/0EudOt/LeD6O8Hk8er5L5Zz
YZ145/71ficQpdLm2qk8aC1UloWQzpC/99pONpAPTtFgvvo3zujk2E/k9FyD
TDvGIUOPga+YIp13TSIIGaJMRRYDw0/qc4nCArxytW7Nf8JAh1+FRcKlQnwr
4NUrSCbWYoNpcZFF8AsLbKiVMrHBtYlaOS7G1Zo/PIJnmGhcHt9MYnwJ3xsn
px0ZLuBV10ec0ZJAoEjRPprtgls3fc6q5EkQEn1dqDbsApbx6Na1LQlSpjzt
yj5kwXzq/MRItBTc8S7TnVAWZjUFARXPpShr99peLWfhkdg/4kSoDCpWZk3i
MRZKUis1Ux7JcPjrqtgwOhuKuztbEV7FeLM+dM89kI19p5FH9BYjSOa2+Owq
G6zwlcYcpxKMqJqupN1mQ3w7M7q7oQQdawbPscTGiSSjhGa9UnTRJ7yMjEj8
LrXUNJeUIq+mZbnHi4RMXccjfReFX2yCXTnJJBTrk2HJKhTcJi0E20ovTDYl
xqlSaJe8Ke9IIeHa7l7Ff1/pBdmO9QUS8+Gp2946FOjzNEIrnQTZ+6zN2IyC
X63m3mEhidnPW0zugMKLn+6eYReQ2MvLcO46RoFoLYhbVZp13NO3zZ3CwX66
WkMhCbHhTFq9J4X48ZikfWISLvfovxUFUtDSoPvPSEgUmV4s+DScgkbUUshl
ikT3Hu8aHp/C9w1q7c5lJGY29HqCIimcmju4/6XSLkOt89woCnX80JGAcuWe
OsuxT6Awpv0yw6iChFZkG88mkYLOEVrukNLMgKx482QKPl76kiw5iUJLA7l+
KoW+bI+6mRskOrXnbumkU/hbfrqlpJLE9Hbbz5qZFJx6k7q5Vcp/C1nTqlkU
4sZE/ZtKM0Z9NneEFBrXq4eaqkn8C8TjwXw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$427237301#5"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 10.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 10.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 300, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Lahmacun, Wed 6 Dec 2023\"", TraditionalForm], 
     PlotRange -> {All, {10, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Prolog -> {{{
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[1, 0, 0, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}}, {{
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{0, -100}, {5, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{5, -100}, {10, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{10, -100}, {15, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{15, -100}, {20, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{20, -100}, {25, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{25, -100}, {30, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{30, -100}, {35, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{35, -100}, {40, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{40, -100}, {45, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{45, -100}, {50, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{50, -100}, {55, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{55, -100}, {60, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{60, -100}, {65, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{65, -100}, {70, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{70, -100}, {75, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{75, -100}, {80, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{80, -100}, {85, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{85, -100}, {90, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{90, -100}, {95, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{95, -100}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{100, -100}, {105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{105, -100}, {110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{110, -100}, {115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{115, -100}, {120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{120, -100}, {125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{125, -100}, {130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{130, -100}, {135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{135, -100}, {140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{140, -100}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{145, -100}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{150, -100}, {155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{155, -100}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{160, -100}, {165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{165, -100}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{170, -100}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{175, -100}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{180, -100}, {185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{185, -100}, {190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{190, -100}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{195, -100}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{200, -100}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{205, -100}, {210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{210, -100}, {215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{215, -100}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{220, -100}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{225, -100}, {230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{230, -100}, {235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{235, -100}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{240, -100}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{245, -100}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{250, -100}, {255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{255, -100}, {260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{260, -100}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{265, -100}, {270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{270, -100}, {275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{275, -100}, {280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{280, -100}, {285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{285, -100}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{290, -100}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{295, -100}, {300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{300, -100}, {305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{305, -100}, {310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{310, -100}, {315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{315, -100}, {320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{320, -100}, {325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{325, -100}, {330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{330, -100}, {335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{335, -100}, {340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{340, -100}, {345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{345, -100}, {350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{350, -100}, {355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{355, -100}, {360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{360, -100}, {365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{365, -100}, {370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{370, -100}, {375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{375, -100}, {380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{380, -100}, {385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{385, -100}, {390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{390, -100}, {395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{395, -100}, {400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{400, -100}, {405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{405, -100}, {410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{410, -100}, {415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{415, -100}, {420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{420, -100}, {425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{425, -100}, {430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{430, -100}, {435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{435, -100}, {440, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{440, -100}, {445, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{445, -100}, {450, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{450, -100}, {455, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{455, -100}, {460, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{460, -100}, {465, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{465, -100}, {470, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{470, -100}, {475, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{475, -100}, {480, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{480, -100}, {485, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{485, -100}, {490, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{490, -100}, {495, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{495, -100}, {500, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{500, -100}, {505, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{505, -100}, {510, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{510, -100}, {515, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{515, -100}, {520, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{520, -100}, {525, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{525, -100}, {530, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{530, -100}, {535, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{535, -100}, {540, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{540, -100}, {545, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{545, -100}, {550, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{550, -100}, {555, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{555, -100}, {560, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{560, -100}, {565, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{565, -100}, {570, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{570, -100}, {575, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{575, -100}, {580, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{580, -100}, {585, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{585, -100}, {590, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{590, -100}, {595, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{595, -100}, {600, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{600, -100}, {605, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{605, -100}, {610, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{610, -100}, {615, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{615, -100}, {620, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{620, -100}, {625, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{625, -100}, {630, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{630, -100}, {635, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{635, -100}, {640, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{640, -100}, {645, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{645, -100}, {650, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{650, -100}, {655, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{655, -100}, {660, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{660, -100}, {665, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{665, -100}, {670, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{670, -100}, {675, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{675, -100}, {680, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{680, -100}, {685, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{685, -100}, {690, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{690, -100}, {695, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{695, -100}, {700, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{700, -100}, {705, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{705, -100}, {710, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{710, -100}, {715, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{715, -100}, {720, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{720, -100}, {725, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{725, -100}, {730, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{730, -100}, {735, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{735, -100}, {740, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{740, -100}, {745, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{745, -100}, {750, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{750, -100}, {755, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{755, -100}, {760, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{760, -100}, {765, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{765, -100}, {770, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{770, -100}, {775, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{775, -100}, {780, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{780, -100}, {785, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{785, -100}, {790, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{790, -100}, {795, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{795, -100}, {800, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{800, -100}, {805, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{805, -100}, {810, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{810, -100}, {815, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{815, -100}, {820, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{820, -100}, {825, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{825, -100}, {830, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{830, -100}, {835, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{835, -100}, {840, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{840, -100}, {845, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{845, -100}, {850, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{850, -100}, {855, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{855, -100}, {860, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{860, -100}, {865, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{865, -100}, {870, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{870, -100}, {875, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{875, -100}, {880, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{880, -100}, {885, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{885, -100}, {890, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{890, -100}, {895, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{895, -100}, {900, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{900, -100}, {905, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{905, -100}, {910, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{910, -100}, {915, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{915, -100}, {920, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{920, -100}, {925, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{925, -100}, {930, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{930, -100}, {935, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{935, -100}, {940, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{940, -100}, {945, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{945, -100}, {950, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{950, -100}, {955, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{955, -100}, {960, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{960, -100}, {965, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{965, -100}, {970, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{970, -100}, {975, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{975, -100}, {980, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{980, -100}, {985, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{985, -100}, {990, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{990, -100}, {995, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{995, -100}, {1000, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1000, -100}, {1005, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1005, -100}, {1010, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1010, -100}, {1015, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1015, -100}, {1020, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1020, -100}, {1025, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1025, -100}, {1030, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1030, -100}, {1035, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1035, -100}, {1040, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1040, -100}, {1045, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1045, -100}, {1050, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1050, -100}, {1055, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1055, -100}, {1060, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1060, -100}, {1065, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1065, -100}, {1070, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1070, -100}, {1075, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1075, -100}, {1080, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1080, -100}, {1085, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1085, -100}, {1090, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1090, -100}, {1095, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1095, -100}, {1100, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1100, -100}, {1105, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1105, -100}, {1110, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1110, -100}, {1115, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1115, -100}, {1120, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1120, -100}, {1125, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1125, -100}, {1130, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1130, -100}, {1135, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1135, -100}, {1140, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1140, -100}, {1145, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1145, -100}, {1150, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1150, -100}, {1155, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1155, -100}, {1160, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1160, -100}, {1165, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1165, -100}, {1170, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1170, -100}, {1175, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1175, -100}, {1180, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1180, -100}, {1185, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1185, -100}, {1190, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1190, -100}, {1195, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1195, -100}, {1200, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1200, -100}, {1205, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1205, -100}, {1210, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1210, -100}, {1215, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1215, -100}, {1220, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1220, -100}, {1225, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1225, -100}, {1230, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1230, -100}, {1235, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1235, -100}, {1240, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1240, -100}, {1245, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1245, -100}, {1250, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1250, -100}, {1255, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1255, -100}, {1260, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1260, -100}, {1265, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1265, -100}, {1270, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1270, -100}, {1275, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1275, -100}, {1280, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1280, -100}, {1285, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1285, -100}, {1290, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1290, -100}, {1295, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1295, -100}, {1300, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1300, -100}, {1305, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1305, -100}, {1310, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1310, -100}, {1315, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1315, -100}, {1320, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1320, -100}, {1325, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1325, -100}, {1330, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1330, -100}, {1335, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1335, -100}, {1340, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1340, -100}, {1345, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1345, -100}, {1350, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1350, -100}, {1355, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1355, -100}, {1360, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1360, -100}, {1365, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1365, -100}, {1370, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1370, -100}, {1375, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1375, -100}, {1380, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1380, -100}, {1385, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1385, -100}, {1390, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1390, -100}, {1395, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1395, -100}, {1400, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1400, -100}, {1405, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1405, -100}, {1410, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1410, -100}, {1415, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1415, -100}, {1420, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1420, -100}, {1425, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1425, -100}, {1430, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1430, -100}, {1435, 100}]}, {
         RGBColor[0, 0, 1, 0.1], 
         RectangleBox[{1435, -100}, {1440, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.927783417134145*^9, 3.927783516786029*^9, 
  3.9277843622410297`*^9},
 CellLabel->"Out[614]="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "15600.`", ",", "12206.482510859172`", ",", "49042.70806998812`", ",", 
   "30624.595290423647`"}], "}"}]], "Output",
 CellChangeTimes->{3.927783417134145*^9, 3.927783516786029*^9, 
  3.9277843625066476`*^9},
 CellLabel->"Out[615]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["for season",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.927696378828594*^9}, {3.9276968071258936`*^9, 
   3.927696815982481*^9}, {3.927777793798297*^9, 3.927777813264164*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"warmingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "1.0683009750379302`", ",", "1.5`", ",", 
     "1", ",", "1", ",", "1", ",", "1", ",", "1.278422223763722`"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"coolingCorrection", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1.8`", ",", "0.8`", ",", "0.7`", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1.1"}], "}"}]}], ";"}]}], "Input",
 CellLabel->"In[629]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"seasonFitEvaluation", "=", 
   RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"roomEndTemps", ",", "heatingStateEnd"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"roomEndTemps", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"None", ",", 
          RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"heatingStateEnd", "=", "None"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Check", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Module", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "evaluationResults", "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"SetSimulatedDayForComparison", "[", 
                 RowBox[{"day", ",", "roomEndTemps", ",", "heatingStateEnd"}],
                  "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"evaluationResults", "=", 
                 RowBox[{
                 "EvaluateParameterVector", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"warmingCorrection", "[", 
                    RowBox[{"[", "roomsOnCycle", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"coolingCorrection", "[", 
                    RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
                
                RowBox[{"roomEndTemps", "=", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"None", ",", 
                   RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"heatingStateEnd", "=", 
                 RowBox[{"Map", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"24", " ", "60"}], "]"}], "&"}], ",", 
                   RowBox[{"evaluationResults", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"evaluationResults", "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"7", ",", "8"}], "}"}], "]"}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "5", 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"DateString", "[", 
               RowBox[{"NormalizeDate", "[", 
                RowBox[{"seasonDays", "[", 
                 RowBox[{"[", "day", "]"}], "]"}], "]"}], "]"}], "<>", 
              "\"\<: timeout error\>\""}]}], "\[IndentingNewLine]", "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DateString", "[", 
             RowBox[{"NormalizeDate", "[", 
              RowBox[{"seasonDays", "[", 
               RowBox[{"[", "day", "]"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<: other error\>\""}]}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"day", ",", "simulatedDays"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9277778888806915`*^9, 3.9277779205488935`*^9}, {
   3.927779509559647*^9, 3.9277796174187455`*^9}, {3.9277796865538416`*^9, 
   3.9277797605852137`*^9}, {3.927780097061149*^9, 3.92778010048519*^9}, {
   3.9277801335242343`*^9, 3.9277801398463135`*^9}, 3.9277831641390953`*^9, {
   3.92778330614975*^9, 3.9277833438748646`*^9}, {3.927785672774666*^9, 
   3.9277856728288918`*^9}, {3.927786104862074*^9, 3.9277861066469297`*^9}, {
   3.927786166889786*^9, 3.9277862233835745`*^9}, {3.9277862622528667`*^9, 
   3.927786283614313*^9}, {3.927786503108276*^9, 3.9277865216340685`*^9}, 
   3.9277879167306685`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatedDays", "=", 
   RowBox[{"{", 
    RowBox[{
    "29", ",", "30", ",", "31", ",", "34", ",", "35", ",", "36", ",", "37", 
     ",", "38", ",", "39", ",", "40", ",", "41", ",", "42", ",", "43", ",", 
     "44", ",", "45", ",", "46", ",", "47", ",", "49", ",", "53", ",", "54", 
     ",", "57", ",", "59", ",", "60", ",", "61", ",", "62", ",", "63", ",", 
     "64", ",", "65", ",", "66", ",", "67", ",", "69", ",", "70", ",", "71", 
     ",", "72", ",", "73", ",", "74", ",", "75", ",", "76", ",", "77", ",", 
     "78", ",", "79", ",", "80", ",", "81", ",", "82", ",", "83", ",", "84", 
     ",", "85", ",", "86", ",", "87", ",", "88", ",", "90", ",", "91", ",", 
     "92", ",", "93", ",", "94", ",", "98", ",", "99", ",", "103", ",", "104",
      ",", "105", ",", "106", ",", "107", ",", "108", ",", "111", ",", "112", 
     ",", "114", ",", "120", ",", "121", ",", "122", ",", "125", ",", "126", 
     ",", "127", ",", "128", ",", "129", ",", "132", ",", "133", ",", "134", 
     ",", "135", ",", "136", ",", "139"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9277866246405983`*^9, 3.9277866258771725`*^9}},
 CellLabel->"In[659]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatedDays", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "seasonDays", "]"}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"seasonFitEvaluation", ",", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"seasonFitEvaluation", ",", "StringQ"}], "]"}]}], "]"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927780048769559*^9, 3.9277800887817984`*^9}, {
  3.9277808580786505`*^9, 3.92778091479702*^9}},
 CellLabel->"In[656]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seasonFitEvaluation", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.9277864719633164`*^9, 3.9277864781787653`*^9}, {
  3.9277865316348953`*^9, 3.9277865406671147`*^9}},
 CellLabel->"In[655]:="],

Cell[BoxData["80"], "Output",
 CellChangeTimes->{{3.9277864723695855`*^9, 3.9277864786160965`*^9}, {
  3.927786532074345*^9, 3.9277865409793844`*^9}},
 CellLabel->"Out[655]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"day", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"seasonFitEvaluation", "[", 
             RowBox[{"[", "day", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "roomN", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"roomN", ",", "1", ",", 
          RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"day", ",", "1", ",", 
        RowBox[{"Length", "[", "seasonFitEvaluation", "]"}]}], "}"}]}], "]"}],
     "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"roomNames", "[", 
     RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9277809228051777`*^9, 3.9277810396977544`*^9}, {
  3.9277813233578386`*^9, 3.927781325905283*^9}, {3.927786651941554*^9, 
  3.927786684537616*^9}},
 CellLabel->"In[663]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kwtMU2cYhovxQnSTZtKkOlyEaKljOpAK2tL2lUsRyqUXJhqcBlEXEVKq
hHR4yRnRzbvGRKNLBmUiLIU5Gu1G0lY7ogUygxdqsaBQpFPGRbyA0YC3he8/
ycnJc57z//n+9/tO+BaDbts0Ho+n+Xj//5y6nimxWb0x+4cBJb2A2NdS+Yv5
P+JgdDb4M8qE3cR8ZHjU7UGP+4hDcXrHPNuY1E8sxPtDZ3w75vxLHIZCYfbX
P198QrwI44L9YSV5zEegap9ok3xwnHgxJFleqfv2Y2IR8HYwZJ+3n1iMAfMF
y69/MP4SNdUz+b8FHhJ/BcUFm898hNWzHNP/Wnq4w91DHI2HJ/d6E1XPiGMQ
2d20vKJymHgFnL5Kq/jiZ5jiWOjirBO2n96Rl0B8PN9sVw0Sr0RU7I0T8XE8
+j4OuStDe0ptXvLxGD11rdl+YDb5VeC0B9T2UXa+1ShX/iMMKnpNLEXEwFCd
MY3lJUNb3d+FLXmPiBNQuieE76ln/ZJj2Fnd65hgeSgQdrU/et23zCvhnD9N
r5BPEgMp3qBGB+j8HNAZYvS7rS/Ir0H1N5JLR2XUD24NykcQFVzL6knE+fJd
Ze7i5+QTIRcEikQ9LM8k8Ca1Qls+W58E25ui3LIZLN9kLCu4VBRzP0A+GQX1
xl1yQS/5FDRc8dQ69Q/Ip8Awmfk02tBFXgUF//O2zVZWvwpHonID6u1j5FNR
94lsKKeK+s+lotXnvyeVsXleizqp41bHcZoHbi2uBRJ7mk6xeU5D7Lnv+gV5
dF4uDZt2qiKqB1l+6bieejkh/iWrPx3umtSWKHcHeTX2G+4knHjQSV6N6QdL
7E3r2f+TgYUvTQqRgurhMtBqjHzUN5fVl4mcDbGW3gmaJy4TL0zbirdcfkU+
C5+GWg3BB2k/LgvH2vNDy+7eJ5+N4Sums1nnKC8uGxVjs7r7d/rIa7CixtQx
v1QwtT80mNdacrXeSfPIadAcc73XsbRxil0aJLWf/bOqYITWayEvDG/zb6V5
hBaO88XP+XaWpxbplkjZ6kPUf5cWLoRbjC42HzpIGiXff9FF+UGHH0ca3t40
0rxyOujjRWJLMvXDpcPMBXcP/84N0Xo9Nmzta7dYR2m9HinmJfUzKuZQXnrI
FwY3L7lH37v0eGXq2j1ey/6HHMTIKzy5nnHlB2vbgf8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kwtMU2cYhit4jXE0rgEvNGxMjRdUEKRqlb5cWyiFUg4BVMBLFMPG0KBl
QZ0HF8Y6giHeQGOEkWGnqIM4VMALiHgJJSg6FOQiWsUqZWXIpVjwEr7/JCcn
z3nP953/f7/3/3ZLimabnUAgUH++vzzHL4tsaVqfi71jn4xeoGlomUuS1kg8
FXN2t6nPlL8jFiLQXf8uXvWeWISNuxotOZsfEc/CjNaeCsvP3cTOaJP1CFtF
z4m/wV/p2sKze58Qu2JN+kGrhGsinof5363PqJtgJl4Aa0OqQbj9X+KFyPtt
NPaAUzvxYnjmKKwj7W3EbnA8XpNVnsx4Ga7XTkmWhL4gdkdqvqQoquIlsQeq
514aO5DYT7wCk1Y477mkmolx9sSck3p9ZvZH0r3wIMFY9v+kLuKVsAwltfrF
jxB7I5fzKTkzmf1fAv3WmKV1m4TUbxXs/jxVFJ3P/FqNksnnf+0YYH6ugX2O
zSvjCvNfCvnjqq8Sh03EazFR5Mqvy2DrX4fFLbFGOxHz0wc/3FCkGytZvQx+
UQd1R0deEwPdjk0BBnvrOPPAvawdHecus3n5otk/xXRHS37wvqhaIuw5UdZD
uh9G5bfMTqfpe94PKTu6ou9zzA9/KF+5/Rf6fJh0f4RX/KJ0m9FLegCWNwxX
xUdTHvgA5Kl+eqncz/IXiFuzlwdN7+okPRDOpSZuwJetPwjbRhK9W4qfkR6E
ZP/dg9q1bH5yHHumHQoDrZeXY25/QvHU0kbSFXCY35stemQhXYGHqZVmY/Fb
0oOR6V0mqx8gf/lgWMK9OsVHaD+CELhGSQsbTXQe+BBIdXEPjYeZf0rcnv1h
kYemg3QlFlXZ3iRvpf0IQpH2406Tuwfthw9FX67P08EClk8VPNsPrTcoPpCu
ws19lfG6v1n/MNwN6XCxEzP/w5Aaw9kn6ZtJD8fluPanGzdQvvhw5Df/U94f
yOajxn7DmxoH8RSMx0ENLjjm9+nX2DzUyJxWUhvA0Tyq1Xihex+yOov5H4Et
nWmnK8foPCICavHKbnOCgeojUKBrcFfOHKX6COis5ubYlAGq18Dhwn2ubhfN
DxqUXiz+uvdcC9VrUHE2X67QUZ6rNcg0XPX9o5blORI1Xnnfb4iiPCESC6VP
Nt1ztVF9JDwdpNvbnKhfdSRs2blxg0UNVM9BPFYvqbf1yT4BelWIZg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1lA1MU1cUxwuMsYoEBptj02yuGt2ayUcLpXVI/+VTscBrK1rBZpkREV1w
CUayROVVF9ims+AQZMJAw5Q4Y8KcbKjRTpBtWOmQMRSlyscslrZQsTED8Suc
+5KXl9/7vXPufeeee9/fuF2b5ysQCLgX98vn7DWh3FDaHWwPH1TSCxwcDfB7
tm2G+DWY//dp+CWnlzgEJ+OaDUd3DBC/AcuA4mKfoJs4HDG52Zbjm38nXgBh
T77z+3aWfyGGuKLRUMW/xCKMj7U4fCNvES/GKReXfDbgPvESaEXSCkXrCPEH
aJ201pvEdmIx5m0SvXdI+B/xR+BiFffUgn+II5DMrb3yVHqHOAqTcxNL5fph
4miU1Gb6xb7pIZbAMyzJNiwMwCxL0RFWXVAn85KPQeXUs9ND3lHiWOxoLe50
qdn8ZNgtNNZ9dYaNHwenbc8lyx9CyieH/ddPxdOprJ4K7Hd/E6Zbz+qzHNXG
nC0tDWPEH0NZvuvO2xuYj8eP/fXh8gs3iVcgTjFxLTeI5UvAYKPvW1MR48RK
uPSRFe4I9j2w/XKRxVpD9eOBnvQfvnsUNEReBQ28P0s6KJ5XIbhcv/lUEfOJ
KBsJLThbTPPhE5H2imsg/sx18klwRL1uCElyk0+CKeZ2RN4Uq38ygpeWFZ6+
YiOfjOkbe088jWTrlwKuP33Ru16qH5+C+3nHZFEJDvKpSJh5fLVraz/5VDTN
jBWWL2PzS8OByi1hwkPEfBrmrWsedB5lfiXc57o8vVVUX34lqgT13V4TG38V
lqQNSz6L7iC/Cs07axqasuh/BOlorCr54h3f2+TTYbHnBLZU3yO/GmbroM+R
S3+TXw1jrdizZyfrNzU2OZLchu4u8mo0mj9JdbbfIJ+BJ4XBlW0KysdnwNqQ
4fU3ushnIm//9cPyOcxngpNfuypb30M+C+f38vY5i2k/8llom7Ed/zqe6iXg
cKBv5GDFeR/MtgMH5+fGphIb9Q/P4cOQ/Ae12RRv5uCvmtacHGf7VQO7Z61d
1Uffv+iWlNLHA36iNorXoPPPI4G9BRMUr4FKYZiS3n1A8VrE6+vml8FK8Vrk
BrWLH9bQecFrYbr7k8qk7qR4LX4LLRJ561n/6DDpuFkc6E/rBR2aZN/Ktknp
vOJ1yN8oO2bQU36zDtGmV//a9yU7n9ZgrkliXJdoUz4HTPmDcg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1VAtMU2cYLaDSKvKyOt4IItrVqYCKbBVOAQu0VPqYj5DFZYYyDA9dpowF
WO4gssWJupgAyisQRDSCYgxGIsvdYoYSA8jIsLzEIawgYC0ginRuS7//Jjc3
557vfOd7/PcGHDmmM9gLBALNf/f/T9tljpKuORH5+TUn0At8ubTsz6wjYsJC
1Bf/ZpCXzkbZsCskdclF1btfExbD+0D3tLObhbAHOr2tBuE3bwn7QLXCslhS
Z0f51qOh+uXD+dw54gOR7GF6lfkL44Pg+U7jN2GZID4YNy4HXhHMMv/N+HHV
RYd03SvCH2JdR0rH8+IFwluQObIttWTITHgrbu8PEy81s3zboTc/Md9a/o5w
CLhdTS4t0mbCoWiVnHHJ+2gj1ROGGlnEocpTzG8HGja1Ww7XDhDeCQcEq9fG
OlD8LgzkGH7/4jqrNxzi82Vpq0Mcid8Nn2GP8M/M/xAfgQ7PO4VHr74g/DEU
V4LqRNJVFP8JBjeMJZX1LicsQ1WPRT0TzurfA8/RFqf8CivhSMid0p84bX5G
OApG+97JP/LYfIDBdMml+CWBLR8HZIUcnD40wvYhR6G/NOTcGO2Dk+PsqDyj
OsGe/KOhyt508kTOuC2ei8ZYzncXhr1MpI/Bssf9haoI6peLwYvSB+fTNpKf
IBZ8fb/2edYb0seifO3qLTXTrL69iDzbdHrnB+TH7cXE1z73E5SsHwUCetqP
3jj3mPQKLGTkiGS574mPg6Ho6s+ufbR/Lg5Cidfwy2MzxMdjaCK+StU+T3w8
xFO/7uH6mT4BPse7nMcCR4lPgG9qY5smdCXVr0THbIP70pyQ6lPiYv7AV4Xj
bB8qJO7vH3Q+xfxVSO0xCZq/Zf0ngnN9fzL0KX1vXCLmGw9UiBP7SK9GTHG5
a2/GIunVCPO1+Kb8zc7XPsz1tHbKnlE/3D5UTJ85/dprhPRJsAq7uWwJ6y8J
fTV2CvcUdn41qFR+X2ANWmfLBw0s9/m2dkfaP6eBVLX414UC0vMaGHmFn+NP
LuSvRaDbPaO/lfYNLWqzm4yj0eTPadFqCposkK2wxfNaTN3OM9/dTvMS6OBr
vVXZraTzBR0W1Tejymdp/5wObW65fL2R/i+8Dn2ZPzRm+YtIr0fRQr5jSxvF
Qw/vYNF4Wqk7zVOPw568X3QZzZ/XI+7R5ExeBPsffApT19S9rgER/gWTGnKJ

         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 80.}, {0, 10.588837133273831`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"SZGK\"", "\"G\[OAcute]lyairoda\"", "\"M\[EAcute]rce\"", 
       "\"Lahmacun\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9277866566060066`*^9, 3.927786684990553*^9}},
 CellLabel->"Out[663]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"day", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"seasonFitEvaluation", "[", 
            RowBox[{"[", "day", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "heatMeasureType", "]"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"heatMeasureType", ",", "1", ",", "1"}], "}"}]}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"day", ",", "1", ",", 
       RowBox[{"Length", "[", "seasonFitEvaluation", "]"}]}], "}"}]}], "]"}], 
   "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.927781078339054*^9, 3.927781082756375*^9}, {
  3.9277811186778746`*^9, 3.927781163133838*^9}, {3.927786693178293*^9, 
  3.9277867051783733`*^9}},
 CellLabel->"In[665]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1lA1ME3cYxs8xBMWZsploIgacDokShiK1TIGH0pa2SCmlmjHQiFFiM5xO
w8gU3c3Nj4VsKTpcmQi1VARBik4BDeohRUBwgo6MJRtSNkOEbHZCFre4D5c+
veRy+d3zPs/7/u/uf4u37jJtf0kQBOOL8/+r7/AmD7ged7RuqgVvQJppGAw4
WkYOhjbKotynaSXL8HJJkzFux1XJx/OgDTq0tUJlJS/AAmOMra+wkfVhENsu
TtnbiskRkJWL1fLeavLrKNn3S6TqyA3yUlj/WHi+dPAcORKjzy8Lf88/Ro7C
jt9CPcWv3iQvx+6q3/tvvnKSHA1Z1Yo56cHl5BiYqwNTugQn54tFz6/Pa9QG
f7+VyN9/V3Qs6iCvwpXaxXn//NBFjsPwA53i9HsV5NVA4Uh8jtNFjodse+o8
8W4D8+UYbp15a2LcQV4D5aTC3ZDfx3oFKhPsZ02bW8gJePvjGY+Sf2pi/VvA
uLo8t/QweS3m6Hs9vYOXWL8O3p7bNc1X/etLhPhXmbfWs5P1Seg5ec4xlnyP
ejLaHGHy/HcvUQdio28nXKk75dNFwNv3NDSpoJn1KZBGW4rv/bzNVy+mQGjv
PhQ9WUpdCaU78rWdR3vpV+JgwcM1Fzy3qKei7sex2M822OlPhZizdE/q/Ub2
V0Gln3W9yFpPXYXmZ0mT66b986kR1e5d/uRUDXU1nlbJZ4wV+/M1WF8tJbyT
+A37a2BPVJg7cIb+NFjvm78f6T5LPQ1CeUbGDUc+dS2O6QcHDlv4vYpahP9r
K/vT4Ga+DlZXyLJdH7XTr8N0Z9ediW2t9OtRsje+v6aA71fUQzgzNaR7vJ/+
dHwX1BiuCPSvPx32uQcVRYFH6F+PCOe1uiWhnzD/BVv69zysP01/BmxBUyGW
oCbqGWj7eiAgpaGKugHSt8PO8Zj3mW+AkDtV2b03l3omBENaZ+eHG+nPhBgs
i/Ec/5z9jbDFRV0LOc/9ByM0j4ZmrQrh8xeNED6tNL3xwOLTJSPcjiXaikgH
87MgK3UpdBe4P5EF8clIwNr6evbLgvxA3vSQotaXJ2UhYv6d3UWZdvpNgLmw
7mLjl/SbYNu8Iaxwwka/CaNG2dhsNd+fZILw7E1DYssJzp+ND9SXt8zNk+jP
RpjLvUWzkPOJ2Yjon73oK+dx+rMRnCMbKQr3/2/MkA7YNQMbv8B/2uJ3TA==

     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 80.}, {-6504.200449853208, 15999.77058882582}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9277810841335435`*^9, {3.9277811166062527`*^9, 3.9277811635172005`*^9}, {
   3.927786699710941*^9, 3.92778670544381*^9}},
 CellLabel->"Out[665]="]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["summary", "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9276960118487263`*^9, 3.9276960527322435`*^9}, {
   3.9276963655078955`*^9, 3.9276963663406076`*^9}, {3.927950011558824*^9, 
   3.9279500121986437`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"daysFitted", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "32", ",", "37", ",", "42", ",", "57", ",", "67", ",", "72", ",", "77", 
       ",", "82", ",", "92", ",", "122", ",", "127"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "34", ",", "38", ",", "43", ",", "47", ",", "53", ",", "63", ",", "73", 
       ",", "78", ",", "83", ",", "88", ",", "93", ",", "98", ",", "103", ",",
        "108", ",", "114", ",", "122", ",", "128"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927950077953003*^9, 3.9279501106278152`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seasonCorrectedBestFits", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "2.2612754125177195`", ",", "0.7672629015155057`", ",", 
       "1.083197120703778`", ",", "1.0727627094334409`", ",", 
       "0.7447439197371224`", ",", "0.06677408038862163`"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "2.3480290895305607`", ",", "0.7801014999645991`", ",", 
       "0.9513837546933651`", ",", "0.9297576319359259`", ",", 
       "1.4780859968954623`", ",", "0.5046262989177167`", ",", 
       "0.2679036077336363`", ",", "0.6731878383370469`"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927869476377467*^9, 3.927869476377536*^9}, {
  3.9279500955295696`*^9, 3.9279501160101132`*^9}},
 CellLabel->"In[139]:="]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["deploy: szezon", "Section",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.927787678597627*^9}, {
   3.9277894212861905`*^9, 3.9277894228948975`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"final", " ", "jav"}], "*)"}], "\[IndentingNewLine]", 
  "\t\t\t\t       ", 
  RowBox[{"(*", 
   RowBox[{
   "ovi", "  ", "PK", "   ", "SZGK", "  ", "GI", "    ", "M", "   ", "k", "  ",
     "v", "  ", "t", "  ", "Okt", "  ", "Lah"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"warmingCorrection", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.88", ",", "0.89", ",", "0.74", ",", "0.72", ",", "0.73", ",", "1", 
       ",", "1", ",", "1", ",", "0.90", ",", "0.69"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"coolingCorrection", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.75", ",", "1.09", ",", "0.86", ",", "0.95", ",", "0.58", ",", "1", 
       ",", "1", ",", "1", ",", "0.09", ",", "0.92"}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.928305910568635*^9, 3.9283059260191283`*^9}, 
   3.928306698361965*^9, {3.928312088702439*^9, 3.928312090286734*^9}, {
   3.928312248974511*^9, 3.928312249982863*^9}, 3.9283123588474817`*^9, {
   3.9283124219723125`*^9, 3.928312422382887*^9}, {3.9283124613542886`*^9, 
   3.9283124624136076`*^9}, {3.928312506851617*^9, 3.928312509815914*^9}, {
   3.9283125543630486`*^9, 3.9283125680026484`*^9}, {3.928312696669774*^9, 
   3.928312699483758*^9}, 3.928312818851951*^9, {3.9283128556096296`*^9, 
   3.9283128556765194`*^9}, {3.928312909993595*^9, 3.9283129399719276`*^9}, 
   3.9283129748126593`*^9, {3.9283130086840315`*^9, 3.9283130106547885`*^9}, {
   3.928313041245637*^9, 3.9283130429211826`*^9}, {3.9283138595739045`*^9, 
   3.9283138655227757`*^9}, {3.9283139452880526`*^9, 
   3.9283139475126777`*^9}, {3.9283140118044157`*^9, 3.928314011845981*^9}, {
   3.9283140713965263`*^9, 3.9283140735865803`*^9}, {3.928314130305023*^9, 
   3.9283141315800858`*^9}, {3.9283141909475503`*^9, 3.928314191844429*^9}, {
   3.9283142315671062`*^9, 3.9283142352818975`*^9}, {3.9283142937304106`*^9, 
   3.928314294711018*^9}, {3.92832295063892*^9, 3.928322950899794*^9}, 
   3.928323367284505*^9, {3.9283234650471234`*^9, 3.928323501022392*^9}, 
   3.9283235523099337`*^9, {3.928323599487301*^9, 3.928323614294615*^9}, {
   3.928323657474863*^9, 3.9283237751419*^9}, {3.928323817269637*^9, 
   3.9283238357631693`*^9}, {3.928323880837443*^9, 3.9283238868712907`*^9}, {
   3.928323926584784*^9, 3.928323936171574*^9}, {3.928323985277403*^9, 
   3.9283239854124775`*^9}, {3.9283240275004597`*^9, 
   3.9283240403682594`*^9}, {3.9283240818857584`*^9, 
   3.9283240911884823`*^9}, {3.92832413953689*^9, 3.928324163414467*^9}, {
   3.9283241986776133`*^9, 3.928324198812272*^9}, {3.928324231087064*^9, 
   3.9283242360085144`*^9}, {3.9283242683171062`*^9, 3.928324280042473*^9}, 
   3.9283243135109067`*^9, {3.9283243465297127`*^9, 3.928324408735531*^9}, 
   3.928324441015524*^9, {3.928324481030879*^9, 3.9283244973233657`*^9}, {
   3.9283245298414087`*^9, 3.9283245393194046`*^9}, {3.928324569546238*^9, 
   3.928324574216771*^9}, {3.928324606038293*^9, 3.928324643389815*^9}, {
   3.9283246820032873`*^9, 3.9283246843197327`*^9}, {3.928324722514763*^9, 
   3.9283247255241714`*^9}, {3.9283247678978148`*^9, 
   3.9283247679748435`*^9}, {3.9283247986870613`*^9, 3.928324804557166*^9}, {
   3.9283248374340105`*^9, 3.928324898933529*^9}, {3.928327314446089*^9, 
   3.928327366642455*^9}, {3.928327402324439*^9, 3.9283274144785194`*^9}, {
   3.928327449916834*^9, 3.928327456108758*^9}, {3.928327498944662*^9, 
   3.9283275025151224`*^9}, {3.92832767515494*^9, 3.9283277076070323`*^9}, {
   3.928327745763403*^9, 3.9283277460891447`*^9}, {3.928327776221701*^9, 
   3.9283277785562625`*^9}, {3.9283278135480814`*^9, 3.928327817491483*^9}, {
   3.9283278721013117`*^9, 3.9283281468408623`*^9}, {3.928328183241878*^9, 
   3.928328205633472*^9}, {3.9283282380485477`*^9, 3.9283283072515135`*^9}, {
   3.9283283437945538`*^9, 3.9283284183160267`*^9}, {3.9283284499305506`*^9, 
   3.9283284500333242`*^9}, {3.928328486604694*^9, 3.9283285392859764`*^9}, {
   3.9283285720932384`*^9, 3.9283285754710073`*^9}, {3.92832860565341*^9, 
   3.928328609575766*^9}, {3.9283286530241957`*^9, 3.928328660915894*^9}, {
   3.9283286914675756`*^9, 3.9283288182074194`*^9}, {3.928328848482658*^9, 
   3.9283288495983195`*^9}, {3.928328883485587*^9, 3.9283288846918*^9}},
 CellLabel->"In[62]:="],

Cell[BoxData[
 RowBox[{"\t\t\t\t       ", 
  RowBox[{"(*", 
   RowBox[{
   "ovi", "  ", "PK", "   ", "SZGK", "  ", "GI", "    ", "M", "   ", "k", "  ",
     "v", "  ", "t", "  ", "Okt", "  ", "Lah"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"warmingCorrection", "=", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"coolingCorrection", "=", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1"}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.928305910568635*^9, 3.9283059260191283`*^9}, 
   3.928306698361965*^9, {3.928312088702439*^9, 3.928312090286734*^9}, {
   3.928312248974511*^9, 3.928312249982863*^9}, 3.9283123588474817`*^9, {
   3.9283124219723125`*^9, 3.928312422382887*^9}, {3.9283124613542886`*^9, 
   3.9283124624136076`*^9}, {3.928312506851617*^9, 3.928312509815914*^9}, {
   3.9283125543630486`*^9, 3.9283125680026484`*^9}, {3.928312696669774*^9, 
   3.928312699483758*^9}, 3.928312818851951*^9, {3.9283128556096296`*^9, 
   3.9283128556765194`*^9}, {3.928312909993595*^9, 3.9283129399719276`*^9}, 
   3.9283129748126593`*^9, {3.9283130086840315`*^9, 3.9283130106547885`*^9}, {
   3.928313041245637*^9, 3.9283130429211826`*^9}, {3.9283138595739045`*^9, 
   3.9283138655227757`*^9}, {3.9283139452880526`*^9, 
   3.9283139475126777`*^9}, {3.9283140118044157`*^9, 3.928314011845981*^9}, {
   3.9283140713965263`*^9, 3.9283140735865803`*^9}, {3.928314130305023*^9, 
   3.9283141315800858`*^9}, {3.9283141909475503`*^9, 3.928314191844429*^9}, {
   3.9283142315671062`*^9, 3.9283142352818975`*^9}, {3.9283142937304106`*^9, 
   3.928314294711018*^9}, {3.92832295063892*^9, 3.928322950899794*^9}, 
   3.928323367284505*^9, {3.9283234650471234`*^9, 3.928323501022392*^9}, 
   3.9283235523099337`*^9, {3.928323599487301*^9, 3.928323614294615*^9}, {
   3.928323657474863*^9, 3.9283237751419*^9}, {3.928323817269637*^9, 
   3.9283238357631693`*^9}, {3.928323880837443*^9, 3.9283238868712907`*^9}, {
   3.928323926584784*^9, 3.928323936171574*^9}, {3.928323985277403*^9, 
   3.9283239854124775`*^9}, {3.9283240275004597`*^9, 
   3.9283240403682594`*^9}, {3.9283240818857584`*^9, 
   3.9283240911884823`*^9}, {3.92832413953689*^9, 3.928324163414467*^9}, {
   3.9283241986776133`*^9, 3.928324198812272*^9}, {3.928324231087064*^9, 
   3.9283242360085144`*^9}, {3.9283242683171062`*^9, 3.928324280042473*^9}, 
   3.9283243135109067`*^9, {3.9283243465297127`*^9, 3.928324408735531*^9}, 
   3.928324441015524*^9, {3.928324481030879*^9, 3.9283244973233657`*^9}, {
   3.9283245298414087`*^9, 3.9283245393194046`*^9}, {3.928324569546238*^9, 
   3.928324574216771*^9}, {3.928324606038293*^9, 3.928324643389815*^9}, {
   3.9283246820032873`*^9, 3.9283246843197327`*^9}, {3.928324722514763*^9, 
   3.9283247255241714`*^9}, {3.9283247678978148`*^9, 
   3.9283247679748435`*^9}, {3.9283247986870613`*^9, 3.928324804557166*^9}, {
   3.9283248374340105`*^9, 3.928324898933529*^9}, {3.928327314446089*^9, 
   3.928327366642455*^9}, {3.928327402324439*^9, 3.9283274144785194`*^9}, {
   3.928327449916834*^9, 3.928327456108758*^9}, {3.928327498944662*^9, 
   3.9283275025151224`*^9}, {3.92832767515494*^9, 3.9283277076070323`*^9}, {
   3.928327745763403*^9, 3.9283277460891447`*^9}, {3.928327776221701*^9, 
   3.9283277785562625`*^9}, {3.9283278135480814`*^9, 3.928327817491483*^9}, {
   3.9283278721013117`*^9, 3.9283281468408623`*^9}, {3.928328183241878*^9, 
   3.928328205633472*^9}, {3.9283282380485477`*^9, 3.9283283072515135`*^9}, {
   3.9283283437945538`*^9, 3.9283284183160267`*^9}, {3.9283284499305506`*^9, 
   3.9283284500333242`*^9}, {3.928328486604694*^9, 3.9283285392859764`*^9}, {
   3.9283285720932384`*^9, 3.9283285754710073`*^9}, {3.92832860565341*^9, 
   3.928328609575766*^9}, {3.9283286530241957`*^9, 3.928328660915894*^9}, {
   3.9283286914675756`*^9, 3.9283288182074194`*^9}, {3.928328848482658*^9, 
   3.9283288495983195`*^9}, {3.928328883485587*^9, 3.9283288846918*^9}, {
   3.928405267779992*^9, 3.928405286608383*^9}},
 CellLabel->"In[63]:="],

Cell[CellGroupData[{

Cell["replik\[AAcute]l\[AAcute]s", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"startDayN", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"seasonDays", ",", 
       RowBox[{"heatDataDays", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endDayN", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"seasonDays", ",", 
       RowBox[{"heatDataDays", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[65]:="],

Cell[CellGroupData[{

Cell[TextData[StyleBox["set temps & offdays setup",
 FontWeight->"Plain"]], "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.927792614210777*^9, 
   3.9277926162638187`*^9}, 3.9283268738589134`*^9}],

Cell[CellGroupData[{

Cell[BoxData["roomNames"], "Input",
 CellChangeTimes->{{3.928326423100939*^9, 3.9283264251403513`*^9}},
 CellLabel->"In[1535]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ovi\"\>", ",", "\<\"PK\"\>", ",", "\<\"SZGK\"\>", 
   ",", "\<\"G\[OAcute]lyairoda\"\>", ",", "\<\"M\[EAcute]rce\"\>", 
   ",", "\<\"vend\[EAcute]gt\[EAcute]r\"\>", ",", "\<\"kisterem\"\>", 
   ",", "\<\"traf\[OAcute]h\[AAcute]z\"\>", ",", "\<\"Oktopusz\"\>", 
   ",", "\<\"Lahmacun\"\>", 
   ",", "\<\"Kaz\[AAcute]n k\[ODoubleDot]z\[ODoubleDot]s terek\"\>", 
   ",", "\<\"m\[UDoubleAcute]hely\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.928326425349925*^9},
 CellLabel->"Out[1535]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noneTemps", "=", 
   RowBox[{"{", 
    RowBox[{
    "14", ",", "14", ",", "14", ",", "14", ",", "14", ",", "14", ",", "14", 
     ",", "14", ",", "12", ",", "14"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomsSeasonSetTemps", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{
             RowBox[{"roomTempsDaily", "[", 
              RowBox[{"[", "room", "]"}], "]"}], "[", 
             RowBox[{"[", "dayN", "]"}], "]"}], "]"}], "==", "0"}], "||", 
          RowBox[{
           RowBox[{
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"roomTempsDaily", "[", 
                  RowBox[{"[", "room", "]"}], "]"}], "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "==", "\"\<n\>\""}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Interpolation", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "]"}], 
              ",", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{
                RowBox[{"noneTemps", "[", 
                 RowBox[{"[", "room", "]"}], "]"}], ",", "288"}], "]"}]}], 
             "}"}], "]"}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Interpolation", "[", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{
                   RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "]"}], 
                ",", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{
              RowBox[{"NumberQ", "[", 
               RowBox[{"Total", "[", "#", "]"}], "]"}], "&"}]}], "]"}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomsSeasonLowerBuffers", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "]"}], ",", 
            
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0.5", ",", "288"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomsSeasonUpperBuffers", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "]"}], ",", 
            
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0.5", ",", "288"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9283258328512163`*^9, 3.928325843779229*^9}, {
  3.9283258747038193`*^9, 3.928325913205285*^9}, {3.928326358923031*^9, 
  3.928326412773449*^9}, {3.928326455565176*^9, 3.9283264565866284`*^9}, {
  3.9283265316792297`*^9, 3.928326553109913*^9}, {3.9283266462604313`*^9, 
  3.9283267064121313`*^9}, {3.928326768118985*^9, 3.928326855870716*^9}, {
  3.9283269068682785`*^9, 3.9283269098094063`*^9}},
 CellLabel->"In[67]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"startDay", "=", 
   RowBox[{"69", "+", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomsOffdaySetTemps", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "]"}], ",", 
            
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "12", ",", "12", ",", "12", ",", "12", ",", "12", ",", "12", 
                 ",", "12", ",", "0", ",", "12", ",", "12"}], "}"}], "[", 
               RowBox[{"[", "room", "]"}], "]"}], ",", "288"}], "]"}]}], 
           "}"}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}], ",", "7"}], 
      "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"roomsOffdayLowerBuffer", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "]"}], ",", 
            
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"roomTempsDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "[", 
                  RowBox[{"[", "startDay", "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "288"}], "]"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}], ",", "7"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roomsOffdayUpperBuffer", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "]"}], ",", 
            
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"roomTempsDaily", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "[", 
                  RowBox[{"[", "startDay", "]"}], "]"}], "[", 
                 RowBox[{"[", "4", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "288"}], "]"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}], ",", "7"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.927790243067215*^9, 3.9277902549845967`*^9}, {
   3.9277906941667604`*^9, 3.927790707807515*^9}, {3.927791338377621*^9, 
   3.927791351968744*^9}, {3.9277914066055355`*^9, 3.9277915415468736`*^9}, {
   3.927791933890428*^9, 3.9277919775984573`*^9}, 3.9277921938491106`*^9, {
   3.927792531452078*^9, 3.9277925433091955`*^9}, {3.9277925740584526`*^9, 
   3.9277925811565385`*^9}, {3.9277945456149035`*^9, 3.927794549816473*^9}, {
   3.9277958591854973`*^9, 3.9277958596842957`*^9}, {3.9278000751713204`*^9, 
   3.927800080914055*^9}, {3.927806929438294*^9, 3.9278069416107006`*^9}, {
   3.9283251356642303`*^9, 3.9283251357586565`*^9}},
 CellLabel->"In[71]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"room", ",", "day"}], "}"}], ",", " ", 
    RowBox[{"1", "-", 
     RowBox[{"es", " ", 
      RowBox[{"k\[ODoubleDot]r", ":", " ", 
       RowBox[{
        RowBox[{"dec", " ", "24"}], " ", "-", "  ", 
        RowBox[{"jan", " ", "6"}]}]}]}]}], ",", " ", 
    RowBox[{"2", "-", 
     RowBox[{"es", " ", 
      RowBox[{"k\[ODoubleDot]r", ":", " ", 
       RowBox[{
        RowBox[{"dec", " ", "24"}], " ", "-", " ", 
        RowBox[{"jan", " ", "1"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"offdays", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"room", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"Range", "[", 
                   RowBox[{"47", ",", "60"}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"47", ",", "60"}], "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"room", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"roomToCycle", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
           "]"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"room", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"Range", "[", 
                   RowBox[{"47", ",", "56"}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"47", ",", "56"}], "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"room", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"roomToCycle", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
           "]"}], ",", "1"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
      "1"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.9279504666079535`*^9, 3.9279504714885807`*^9}, {
  3.927950836157989*^9, 3.9279508477183747`*^9}, {3.9283063590693946`*^9, 
  3.928306430398897*^9}, {3.928306592526997*^9, 3.9283065967536187`*^9}},
 CellLabel->"In[75]:="]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["simulation",
 FontWeight->"Plain"]], "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799797701474*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cycle", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSimulatedCycle", "[", "cycle", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSimulationParameters", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9277946603794794`*^9, 3.927794664114851*^9}, {
   3.927794708304123*^9, 3.9277947137216053`*^9}, {3.9277954962592983`*^9, 
   3.927795496527539*^9}, 3.927951075181748*^9, {3.928307122737069*^9, 
   3.928307123415867*^9}, {3.928307946524138*^9, 3.9283079465853596`*^9}, {
   3.9283119187066216`*^9, 3.928311918740692*^9}, {3.9283231623944917`*^9, 
   3.928323163216504*^9}, {3.928323252777521*^9, 3.9283232535540667`*^9}, 
   3.9283232882268286`*^9, 3.928327064745101*^9, 3.9283276378066263`*^9, 
   3.928405368068614*^9},
 CellLabel->"In[76]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simulationDayNToDayN", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"startDayN", ",", "endDayN"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulationStarted", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dayN", "=", "startDayN"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"simulatedSeasonForCycle", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"simulationStarted", "==", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomsTempStartIn", "=", 
           RowBox[{"{", 
            RowBox[{"21", ",", "18", ",", "18", ",", "18"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"heatingStateStartIn", "=", "0"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"simulationStarted", "=", "True"}], ";"}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dayN", "=", 
       RowBox[{"simulationDayNToDayN", "[", 
        RowBox[{"[", "simulationDayN", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dayOfWeek", "=", 
       RowBox[{
        RowBox[{"DateValue", "[", 
         RowBox[{
          RowBox[{"seasonDays", "[", 
           RowBox[{"[", "dayN", "]"}], "]"}], ",", "\"\<DayNameShort\>\""}], 
         "]"}], "/.", "dayNameToDayOfWeek"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"roomsSetTempIn", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"room", ",", "offdayForRoom"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"room", "=", 
             RowBox[{"roomsOnCycle", "[", 
              RowBox[{"[", "roomN", "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"offdayForRoom", "=", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"offdays", ",", 
               RowBox[{"{", 
                RowBox[{"room", ",", "dayN"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{"offdayForRoom", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roomsOffdaySetTemps", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "dayOfWeek", "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roomsSeasonSetTemps", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "simulationDayN", "]"}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"roomN", ",", "1", ",", 
           RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"roomsLowerBufferIn", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"room", ",", "offdayForRoom"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"room", "=", 
             RowBox[{"roomsOnCycle", "[", 
              RowBox[{"[", "roomN", "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"offdayForRoom", "=", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"offdays", ",", 
               RowBox[{"{", 
                RowBox[{"room", ",", "dayN"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{"offdayForRoom", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roomsOffdayLowerBuffer", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "dayOfWeek", "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roomsSeasonLowerBuffers", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "simulationDayN", "]"}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"roomN", ",", "1", ",", 
           RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"roomsUpperBufferIn", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"room", ",", "offdayForRoom"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"room", "=", 
             RowBox[{"roomsOnCycle", "[", 
              RowBox[{"[", "roomN", "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"offdayForRoom", "=", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"offdays", ",", 
               RowBox[{"{", 
                RowBox[{"room", ",", "dayN"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{"offdayForRoom", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roomsOffdayUpperBuffer", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "dayOfWeek", "]"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"roomsSeasonUpperBuffers", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "simulationDayN", "]"}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"roomN", ",", "1", ",", 
           RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"SetSimulatedDay", "[", 
       RowBox[{
       "dayN", ",", "roomsSetTempIn", ",", "roomsLowerBufferIn", ",", 
        "roomsUpperBufferIn", ",", "roomsTempStartIn", ",", 
        "heatingStateStartIn"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "simulation", ",", "simulatedHeatDynamics", ",", 
         "heatingSimulatedState", ",", "roomsSimulatedTemp"}], "}"}], "=", 
       RowBox[{"SimulateDayForCycle", "[", 
        RowBox[{"warmingCorrection", ",", "coolingCorrection"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"roomsTempStartIn", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"24", " ", "60"}], "]"}], "&"}], ",", 
         "roomsSimulatedTemp"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"heatingStateStartIn", "=", 
       RowBox[{"heatingSimulatedState", "[", 
        RowBox[{"24", " ", "60"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"dayN", ",", 
          RowBox[{"seasonDays", "[", 
           RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}], ",", 
        "simulatedHeatDynamics", ",", "heatingSimulatedState", ",", 
        "roomsSimulatedTemp", ",", "roomsSetTemp", ",", "roomsLowerBuffer", 
        ",", "roomsUpperBuffer"}], "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"simulationDayN", ",", "1", ",", 
       RowBox[{"Length", "[", "simulationDayNToDayN", "]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9277991235916166`*^9, 3.927799143961009*^9}, {
  3.9277999723047333`*^9, 3.927799986387164*^9}, {3.92780030583689*^9, 
  3.927800309926969*^9}, {3.927805503540064*^9, 3.927805533520029*^9}, {
  3.9278106329639*^9, 3.9278106457857666`*^9}, {3.9283238388083086`*^9, 
  3.9283238404966516`*^9}, {3.928326722112266*^9, 3.928326736755944*^9}, {
  3.9283268983496876`*^9, 3.9283269353427*^9}, {3.928327059047203*^9, 
  3.9283270594741335`*^9}, {3.9283271532980843`*^9, 3.9283271873169317`*^9}, {
  3.9283272272259593`*^9, 3.928327227585387*^9}, {3.928327273824485*^9, 
  3.9283272790234175`*^9}},
 CellLabel->"In[79]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"simulatedSeasonForCycle", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "50", "]"}]], "Input",
 CellChangeTimes->{{3.9284055734221864`*^9, 3.928405621014538*^9}},
 CellLabel->"In[108]:="],

Cell[BoxData["16.`"], "Output",
 CellChangeTimes->{{3.9284055661565146`*^9, 3.9284056227714605`*^9}},
 CellLabel->"Out[108]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["evaluation",
 FontWeight->"Plain"]], "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799810262416*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["plot",
 FontWeight->"Plain"]], "Subsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799810262416*^9}, {
   3.928312666830741*^9, 3.9283126670966854`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotDay", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}], "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                   RowBox[{"[", "6", "]"}], "]"}], "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                   RowBox[{"[", "5", "]"}], "]"}], "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "+", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                   RowBox[{"[", "7", "]"}], "]"}], "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"simulatedSeasonForCycle", "[", 
                   RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "[", 
                 RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
              "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", 
               RowBox[{"24", " ", "60"}], ",", "5"}], "}"}]}], "]"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
                RowBox[{"roomTempsDaily", "[", 
                 RowBox[{"[", 
                  RowBox[{"roomsOnCycle", "[", 
                   RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
              "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"roomTempsDaily", "[", 
                  RowBox[{"[", 
                   RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             "Nothing"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]",
            "}"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"LightGreen", ",", "LightGreen", ",", "Black", ",", "Red"}],
           "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}]}], "\[IndentingNewLine]", "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"roomN", ",", "1", ",", 
        RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"simulatedDay", ",", "plotDay", ",", 
      RowBox[{"plotDay", "+", "4"}]}], "}"}]}], "]"}], "//", 
  "Grid"}]}], "Input",
 CellChangeTimes->{{3.927799863073245*^9, 3.9277998852646384`*^9}, {
   3.927799920544774*^9, 3.9277999424665337`*^9}, {3.927800031694501*^9, 
   3.9278000379580727`*^9}, {3.927800116341462*^9, 3.9278001473782334`*^9}, {
   3.927800228716725*^9, 3.927800234701495*^9}, {3.927800323416201*^9, 
   3.92780033356672*^9}, {3.927805257845621*^9, 3.927805307917751*^9}, {
   3.9278091559313326`*^9, 3.927809166646768*^9}, {3.9278102014946675`*^9, 
   3.9278102635688596`*^9}, {3.9278103068299427`*^9, 
   3.9278104071929665`*^9}, {3.9278105226947727`*^9, 3.927810547383517*^9}, {
   3.927810712153268*^9, 3.9278107888187323`*^9}, {3.927810819648286*^9, 
   3.927810845144555*^9}, 3.9278700247737947`*^9, {3.927870127529954*^9, 
   3.9278701439488525`*^9}, {3.927951447878933*^9, 3.927951453358951*^9}, {
   3.9279515156888423`*^9, 3.9279515157798824`*^9}},
 CellLabel->"In[109]:="],

Cell[BoxData[
 TemplateBox[{
  "ListPlot", "lpn", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\\\", \
\\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3.`\\\
\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4.`\\\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5.`\\\", \\\",\\\", \\\"15.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6.`\\\", \\\",\\\", \\\
\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7.`\\\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"8.`\\\", \\\",\\\", \\\"15.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \\\
\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"10.`\\\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"279\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", \\\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\\\", \\\"16.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3.`\\\", \\\",\\\", \\\
\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4.`\\\", \\\",\\\", \\\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5.`\\\", \\\",\\\", \\\"16.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6.`\\\", \\\",\\\", \\\
\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7.`\\\", \\\",\\\", \\\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"8.`\\\", \\\",\\\", \\\"16.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \\\
\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"10.`\\\", \\\",\\\", \\\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"279\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \
\\\"\\\\\\\"n\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2.`\\\", \\\",\\\", \\\"18.91`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"3.`\\\", \\\",\\\", \\\"18.88`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"4.`\\\", \\\",\\\", \\\
\"18.85`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"5.`\\\", \\\",\\\", \\\"18.81`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"6.`\\\", \\\",\\\", \\\"18.78`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"7.`\\\", \\\",\\\", \\\
\"18.76`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"8.`\\\", \\\",\\\", \\\"18.74`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \\\"18.71`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10.`\\\", \\\",\\\", \
\\\"18.7`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"278\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\) is \
not a list of numbers or pairs of numbers.\"", 2, 110, 4, 
   30419994271241779544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9284056524043045`*^9},
 CellLabel->"During evaluation of In[109]:="],

Cell[BoxData[
 TemplateBox[{
  "ListPlot", "lpn", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"11.5`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\\\", \
\\\"11.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3.`\\\
\", \\\",\\\", \\\"11.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4.`\\\", \\\",\\\", \\\"11.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5.`\\\", \\\",\\\", \\\"11.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6.`\\\", \\\",\\\", \\\
\"11.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7.`\\\", \\\",\\\", \\\"11.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"8.`\\\", \\\",\\\", \\\"11.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \\\
\"11.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"10.`\\\", \\\",\\\", \\\"11.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"279\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", \\\"12.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\\\", \\\"12.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3.`\\\", \\\",\\\", \\\
\"12.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4.`\\\", \\\",\\\", \\\"12.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5.`\\\", \\\",\\\", \\\"12.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6.`\\\", \\\",\\\", \\\
\"12.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7.`\\\", \\\",\\\", \\\"12.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"8.`\\\", \\\",\\\", \\\"12.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \\\
\"12.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"10.`\\\", \\\",\\\", \\\"12.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"279\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"15.6`\
\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\
\\\", \\\"15.6`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"3.`\\\", \\\",\\\", \\\"15.53`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"4.`\\\", \\\",\\\", \\\"15.53`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"5.`\\\", \\\",\\\", \\\
\"15.46`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"6.`\\\", \\\",\\\", \\\"15.46`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"7.`\\\", \\\",\\\", \\\"15.46`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"8.`\\\", \\\",\\\", \\\
\"15.38`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"9.`\\\", \\\",\\\", \\\"15.38`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"10.`\\\", \\\",\\\", \\\"15.31`\\\"}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"278\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\) is not a list of \
numbers or pairs of numbers.\"", 2, 110, 5, 30419994271241779544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9284056529317737`*^9},
 CellLabel->"During evaluation of In[109]:="],

Cell[BoxData[
 TemplateBox[{
  "ListPlot", "lpn", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\
\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\\\", \
\\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3.`\\\
\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4.`\\\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5.`\\\", \\\",\\\", \\\"15.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6.`\\\", \\\",\\\", \\\
\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7.`\\\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"8.`\\\", \\\",\\\", \\\"15.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \\\
\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"10.`\\\", \\\",\\\", \\\"15.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"279\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1.`\\\", \\\",\\\", \\\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\\\", \\\"16.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3.`\\\", \\\",\\\", \\\
\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4.`\\\", \\\",\\\", \\\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5.`\\\", \\\",\\\", \\\"16.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6.`\\\", \\\",\\\", \\\
\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7.`\\\", \\\",\\\", \\\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"8.`\\\", \\\",\\\", \\\"16.5`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \\\
\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"10.`\\\", \\\",\\\", \\\"16.5`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"279\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \
\\\"\\\\\\\"n\\\\\\\"\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"2.`\\\", \\\",\\\", \\\"\\\\\\\"n\\\\\\\"\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"3.`\\\", \\\",\\\", \
\\\"19.92`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"4.`\\\", \\\",\\\", \\\"19.89`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"5.`\\\", \\\",\\\", \\\"19.85`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"6.`\\\", \\\",\\\", \\\
\"19.82`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"7.`\\\", \\\",\\\", \\\"19.8`\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"8.`\\\", \\\",\\\", \\\"19.78`\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"9.`\\\", \\\",\\\", \\\
\"19.74`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"10.`\\\
\", \\\",\\\", \\\"19.71`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"278\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]}], \\\"}\\\"}]\\) is not a list of numbers or pairs of \
numbers.\"", 2, 110, 6, 30419994271241779544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.928405653456562*^9},
 CellLabel->"During evaluation of In[109]:="],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ListPlot\\\", \
\\\"::\\\", \\\"lpn\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 110, 7, 30419994271241779544, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9284056534721084`*^9},
 CellLabel->"During evaluation of In[109]:="],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.9284056564561715`*^9},
 CellLabel->"Out[110]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simulatedSeasonForCycle", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.927952806774789*^9, 3.9279528122105603`*^9}},
 CellLabel->"In[85]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"129", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.927952974835229*^9, 3.9282247368416595`*^9, 
  3.9282968628278217`*^9, 3.9284054403149357`*^9},
 CellLabel->"Out[85]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotDay", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"simulatedDay", "-", "1"}], ")"}], " ", "24", " ", 
                  "60"}], "+", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], 
                  "]"}]}], ",", "\[IndentingNewLine]", "#"}], 
               "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
             "&"}], ",", 
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "+", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", 
                   RowBox[{
                    RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], 
                  "}"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"If", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", 
                   RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=",
                   "0"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                 "Nothing"}], "\[IndentingNewLine]", "]"}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}],
            "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"simulatedDay", ",", "plotDay", ",", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"plotDay", "+", "20"}], ",", 
              RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], 
             "]"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", "None", ",", "Black", ",", "Red"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.1"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"roomNames", "[", 
        RowBox[{"[", 
         RowBox[{"roomsOnCycle", "[", 
          RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"simulatedDay", "-", "1"}], ")"}], " ", "24", " ", 
               "60"}], "+", 
              RowBox[{"12", " ", "60"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"DateString", "[", 
                RowBox[{"NormalizeDate", "[", 
                 RowBox[{"seasonDays", "[", 
                  RowBox[{"[", 
                   RowBox[{"startDayN", "+", "simulatedDay", "-", "1"}], 
                   "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"simulatedDay", ",", "plotDay", ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"plotDay", "+", "20"}], ",", 
               RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], 
              "]"}], ",", "2"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         "Automatic"}], "\[IndentingNewLine]", "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Prolog", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "Black", ",", "Thin", ",", "Dotted", ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"simulatedDay", "-", "1"}], ")"}], " ", "24", " ", 
                 "60"}], ",", 
                RowBox[{"-", "50"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"simulatedDay", "-", "1"}], ")"}], " ", "24", " ", 
                 "60"}], ",", "50"}], "}"}]}], "}"}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"simulatedDay", ",", "plotDay", ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"plotDay", "+", "20"}], ",", 
               RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], 
              "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAWIQraGy6dIW57eODjqcV0B0xeJp30D0gvjPf0F0Viwz
21Yg7cO1mR9EXzh1SRhEK/18IAKi8y/WSYHoo2HrwPSZBRONQfSdV/vA9JoX
E81B9L/K55Yg2lp2gQOIvtX+CEyL1BjLXQTS3z5dlwfRLUGui0G03M9NS0A0
x+Gfa0H0UsX/YHrKPlH3S0B6gg2vL4gu0/7w8gfI3YmHX4HoFTYlLD+BNHdb
BxuI/iPbLA+iV5v6KoLohmu5LSDa37cATPsJvV4JogvSvdaA9S0LOg2i2SQ0
zoLohJiPRxe6vHWU//oJTD9fVdWzDEiHba8G0/v21xwB0SffFpwG0WX7ZpwH
0QInZa6DaKt13mzLgXSRhy+YlrvN5bQSSL9w4AHTnTUBtquA9IqiUDBd0i2Y
uBFIl2s4gulHB5cf2Qykdf9tA9P7JdZxbgHSL7fvBNMA3+TrBA==
  "],
 CellLabel->"In[83]:="],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.9278117450368814`*^9, 3.9278120223597536`*^9, 3.9278120802659674`*^9, {
   3.927812144971407*^9, 3.927812226180132*^9}, 3.9278122678878317`*^9, 
   3.927812314044662*^9, 3.9278123999725466`*^9, 3.927812512179178*^9, {
   3.9278125531997004`*^9, 3.9278125635985374`*^9}, 3.9278126176420383`*^9, 
   3.9278127214656105`*^9, 3.9278696111014686`*^9, {3.9278696872993355`*^9, 
   3.92786969982311*^9}, 3.9278698042616887`*^9, 3.9278698722919626`*^9, 
   3.927870199711276*^9, 3.9278703686254005`*^9, 3.927870444255515*^9, 
   3.9278705159247117`*^9, 3.9278707623639545`*^9, {3.9278708152078304`*^9, 
   3.9278708373465085`*^9}, 3.9278708730836587`*^9, 3.927870971179044*^9, 
   3.927871052663348*^9, 3.9278711340565677`*^9, 3.927871217718139*^9, {
   3.9278720624954395`*^9, 3.9278721098684826`*^9}, {3.927951181915385*^9, 
   3.92795119846772*^9}, {3.927951388882357*^9, 3.927951421095573*^9}, {
   3.9279516213199*^9, 3.9279516350154724`*^9}, 3.9279517138810487`*^9, 
   3.9279521171664534`*^9, 3.927952235960907*^9, 3.927952335900752*^9, 
   3.9279524472449512`*^9, 3.927952516812724*^9, 3.9279526397818356`*^9, {
   3.927952727486886*^9, 3.927952747756247*^9}, 3.927953010951296*^9, 
   3.9282969142877274`*^9, 3.928297011191372*^9, 3.928306496393679*^9, 
   3.9283066230193434`*^9, 3.9283067249270487`*^9, 3.9283067917805557`*^9, 
   3.9283071552272587`*^9, {3.9283072397505765`*^9, 3.928307266925561*^9}, {
   3.928307307259325*^9, 3.928307388808693*^9}, 3.9283074550999975`*^9, 
   3.928307767780447*^9, 3.928307978169808*^9, 3.928312054570065*^9, 
   3.9283121346537523`*^9, 3.928312294977623*^9, 3.9283123401746883`*^9, 
   3.928312400757284*^9, 3.928313079409688*^9, 3.928314350689189*^9, 
   3.928322834470186*^9, 3.928322977026864*^9, 3.9283230177640038`*^9, 
   3.928323067176509*^9, 3.928325211598228*^9, 3.9283275570271664`*^9, {
   3.9283289531609864`*^9, 3.928328973944527*^9}, 3.9284054359402294`*^9},
 CellLabel->"Out[84]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["heat (cost)",
 FontWeight->"Plain"]], "Subsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799836982658*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"simulatedHeatDynamics", ":", " ", "loss"}], ",", " ", "gain"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9277993218705435`*^9, 3.9277993312776775`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatedHeatStockDailyForCycle", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"simulatedSeasonForCycle", "[", 
            RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Total", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"simulatedSeasonForCycle", "[", 
                 RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "roomN", "]"}], "]"}], "[", 
              RowBox[{"[", "heatLossOrGain", "]"}], "]"}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"roomN", ",", "1", ",", 
              RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"heatLossOrGain", ",", "1", ",", "2"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"simulatedDay", ",", "1", ",", 
       RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9277991260040007`*^9, 3.9277991379848795`*^9}, {
   3.9277991863535385`*^9, 3.927799429924572*^9}, 3.9278003135360045`*^9, {
   3.9278076889973025`*^9, 3.927807705753889*^9}},
 CellLabel->"In[111]:="],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.92840567373726*^9},
 CellLabel->"Out[111]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"dayN", ",", 
          RowBox[{"100", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"heatStockDaily", "[", 
               RowBox[{"[", "cycle", "]"}], "]"}], "[", 
              RowBox[{"[", "dayN", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<heat supply\>\"", ",", "\"\<simulated loss\>\"", ",", 
      "\"\<simulated gain\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"#", ",", "\[IndentingNewLine]", 
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"DateString", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], ",", 
                  "\"\< \>\""}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "\"\< \>\""}], 
              "]"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
          "}"}], "\[IndentingNewLine]", "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"startDayN", ",", "endDayN", ",", "4"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "Automatic"}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9277994251055803`*^9, 3.9277994480005083`*^9}, {
   3.927799567735262*^9, 3.9277996194086914`*^9}, 3.9277996804160933`*^9, {
   3.9278077287424655`*^9, 3.927807743648611*^9}, {3.9278078190229964`*^9, 
   3.9278078383274007`*^9}},
 CellLabel->"In[2073]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        PointBox[CompressedData["
1:eJxdlUtIVFEYgA8hraKViwoJAxMxCXv46KV/+ShNzUbH0XzNGMFQ9NrNKm7h
wjYmvZAQMhGCWZSUSUWPm5WGmUFFi3IhBTELF9GqXY3+3xHuOTB8fPe///nP
f+89Zzb1nA2dWGWMuZj+LVHHVllG/qTSFCpnfXybsuU1vl05Mo3vUOa+x3cq
v03hRco19v5i5cQsXqIss/FS5bq3+C65mbu+p2DuA75bueUrvkfZ+AXfq1z7
Ed+nrJ7Dyxwvl1vJZDJ/o51flL3PlB5eYuffr5x/QRzv/0T8gPLXG+J4re2n
Qhmif69iuX7yt41XKhP3iOM/7PqqlCmbX+XUr1bmfCaOr35H/CBkeLhc4foh
J+64qXHijptaJ+64OezEHTd16osPlR5+wfZfL4Ph9Lg8RrxeKfeJN0hqw8yp
vG77fBqc+Y+o99o4PmSfT6OyjnqCJ/lePHwe9/GCp+QfVdrnLfjkDPl4zyvy
cfu9mJDyzyT5+CX7PYWksv9naX+RzSc+Pk5+kzLB+gQfZT94eAHr8Zvk78Tp
7xMxu/+alZXsX8Ebmd9rllROzdWczbjfLIv/0qOc+UxYeZ31CZ7BeeKFJaM9
Ej9znH78cLBf0wIZ0iIDifQYsvWJZ7L/fLzYnlcRZRyXiFM/EuzHjwTrmVan
Pr6y3/GFR+S3Bvs1bcH1CG6ekG+d4eP+CNePOevH7fnh4SnOJx8ffUl+u9Ke
54Jns4+8dqc+3sd+Mx3KKfv+8ITtvyO4Xh8fe05+p5jMJXaR3xms5znu43Kb
613B+QRfOQ9xux/8ruB8pjvogpc+Jh+357uPr/z/RCVvCYMP1LOj3IdLVPqy
ps9nXeP/MEr8JPvdw+OcT8N44R3mwe33u4Db92liynN3qR9z+sEXblA/FuzH
s/fzvQ3j9v36eHyYefCBpPwH8uouLg==
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJw1VAtUjGkYno0IWaEse0poc6kWi6goT1dFNdPMdJlpmouwNkpHqdz/SFkl
USlCbWfD1iilWpH8UYlyK6VTJCQczmrXqVxqb8f7zTlz5jzn+Z553+95n/eb
vnqTeK2OQCCI/e/7/++Xz1xwltYWs/ur8QXPR+vGclsrl1rCP6D1cE1+QwFP
eAEEEY/K3kTXEF6I3kWbE7K66ggvQpi4LmacPsPWGLyUFu7icp3wYqQcdNHX
br1BeAlE2XdfeTfVE7bB0fmx2cFiprfF0Nm7cmEeq2eHuPuilyarbxJeiv62
oinN6bcIL4Pdh1Pik8GMt0fq4Gm3qGJWzwHNPSeXBmYwvByWXl1mZo8ZBiK4
IwfWZBHmgKY7wwsdNrD+HBF226e3U0qYc0RGcrh2ou814p2wOWZLulKf/OSc
cDHsO1lt+1XinaEfnWW34w2d55wxed6gV+hedj8XhBxxrn/3E/nNucDBfCC9
cy/zzxWGgQut7NpYf67IHtr1uDCD6d3gqRG+9LKk85wbjh9dEnk6m813Ba4Y
JL7QL2D8Cki+KShIP3CReHfs6905U1j5K/Hu+Nkg/ZBdo5Z4D7RI/fVqQoqJ
98DXNRWmSZ6XiF+JzrL3A7NiWP8rkTlV8U90UxXxqxAVViNX9F8mfhVKJqTc
OGlSQbwnLGx6jcaWXiDeE1rZ1BBFeCHxXthkdSL32+J84r0guFItMomkfgTe
8DJMuaoUlhHvjXDdlz31GqonEEIQNeWCypz5J8Qj3Zwfyx3Y/EVY022tU/6B
5gsR2ndHrW0zoDxxItwa5jH6aTztBy9CXlui+yx2XuCDfp+tc4RVNA/4YPvH
kbU33QlzPnguVQuin18jvQ94vQYzk50s72J8NXlORqSc/IIYOvGjjs3RoXqc
GN4bE/YmjqB+eDG6lSqbpKtML0Hq3Pb18mS6DyRY/PSw9ul1Nm8JihU9Mxzn
E+YlaCp5EBoz/grppdDn+pRpqZQXSNHYUxS7cTHrX4pO3dnjjQKYXoqLoeXn
DGPYe+ELbfuZ783HUT/whYtevv67MYQ5XyQ5pvokNFA+eF/otqeIbDNYPvww
0Stt5q49NH/4wbAjLzG0NI/0fniYEtUsHX6W9H6Ie3Q7Mzm4lPT+SOg1Pj6v
kvIIf7wwrn0Vn/876f0xydl4meoznef9cU/Vk+UWUUD6AAzk3HRNNT9P+gDc
6XcPOatm+gC0mmYHHnejPPEBqHsfHrS8hb2PMsTWdXySm5KfkGFIMvVJRwTL
uwwd9+8vn8X642WQ8ctWm7nRfQVyVFdKOsyfML0cxkUvLPf00n5ycsgs/lo/
zJTVlyP8eZ9Rxj22f4GwWFAVOuY15R+BWJgc0X1Xw/YpELGewzrtO4pIH4jM
8ryWCi3tk0CB+kvr5WnHSkivgF9f/Tm9deQXp8B2j3Kh7S3mnwKN5r02DVqq
JwjCfqP8z4fiyC8EQWYgVFs3k79cEF6tGvPw2Xvadz4IJ469LW3YvY7/oldi
xtu+IZUx618JrvHgPdUpej85JR6UxmzznsTyo0RM9digRdns/VIhLXJIIU+i
elAhsWVAdzDzN9Kr8EkSEmjfS/fjVXB8skUuHsnyo8aC8n2jXEuov2lqBJeG
SSqOsH7U2H8+acLoGvJTrQY3cptFaCl779RYZ2jV07mGcI4auljrXRdP+8Sr
kZzbXHlGl+bVpYbe5fpWfnY51dfgF6RyCRsof9M0sNde+2Ol7BzV10BQr9dy
agf5q9YgNy63TDSa5UuD/FKT139fJz5HA3n39M6PI+j/eA2cwuz+fFZI8+/S
oOqDU8nj5iL8C9WMdlQ=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJw1VA1QzHkY3svgdHVTwpkLuyV0RaWiD6Wnrd3t21Zb7W5tu1unLpIOd3Sh
f4q7WKNOkZrELYl0SBfj61YnXZE+xpFqnFO4U50kzVHcufF7d2Zn55n3fd7n
eZ/3/1+rhLURK414PF72u+//v+8/Dig6Uy+1GLuB99gJirduNeWmtxhejF1D
7QWcsIVhZ8zu7q//enorwy7gxs82Vk9tY9gVD+9/Hromk+pLsOXK3SC9A81b
CpvJK8ySTajfDQ7JsVscAgm743GFS80fKuJ7YMY1+8dX64nviQy+hehgMvUv
g2VZxaK2IsJeSOnY/TxvOWFvOK492dHdQPOWY1q+3Cj3JmEfcDJFqpsR9QMY
V6w/a8EwB9zZw99v+yX1+4J/THx/5Sjzw/nCLGXBZ/4C8ifEX6m6U09DqC5E
KH/RcGED5eeHieu2f1P+gmHOD66je91NK4nvjzsj9knfVTI9zh8zXXSDTg7k
T4Q5+re92/vJnwhrRD5d+7KpLoaTctdQ7eBNVhfj06ZS8ympDPMk4AnV8/xM
iS9B5/DQvx/b0n4BmLlaVFymJ34AbqUvaGh6Sv4DMequy/a7TvsFYtKT0xXm
NqQfhNJ7k/IvlNP8IFhfbJXqpVQPxjPhsYboQdovGKmvD9v+sJ/0QxB8+pMi
ZQvND0FLXdprsRnlE4rtl67v8/mZ8gvF/NzyEO9eqofhdUDxtLwkmh8Ge9O+
iqYrVF+BH634klE78rcCj5JzKm1ayJ8UTlXdh/p2tb/HkMK/bueBySUMc1J0
vdDXru9j/QYpbPfUXL2uIn44HDYF7B8bYRjh6D8xPCmzgPTe1Z2vNh9dSfxw
OLbx7FI+YvN5EXByCZqlUzG/iMCA8XozI3o+uQh8JUlKf9LM9jNEoKfVw9O2
g/QjUVa3ue78TfIfiYnBHxb8pCF+JOqsMr6tPcjmGyJhctjvl4LZ9P7LMD/G
WtfcyO4PGboWbrJYWMbqnAy98vZEDwXL3yDDWHrARvDpflE4usDbPEJC+0eh
zyIz8eFF0o+CZ6ehtU9I/qNgnNqcZRNN94lG4TbHEvk60o+GrsdK5u9L945G
Z8fCnDf6ZsaPxrz7xZJT402MH4OB8KnB6iZWRwzqPabq9+xmdS4Gyt6U3I4E
hg0xaK04IXOX/sr4cgRK1Z23rdm+kMNnwt60ZV60vxxPM0SlnVQ3yFGVt6T6
1jV6vxRI6hFJN48SX4H8uVniyQ+Ir4CLfW3p3Hus36BA0+3juZkCer+U6DTe
N6F4iGEo8fvlJwmOVcRX4rznxRnD/qSvRGmcdoP/I7YvLxa9JrPry3rYfojF
5se2Xvw22j8WyiFbcaML6ccisVzySqaj/OJQM5x6xKuL5YE4pL3qOB6eyzAX
B7Vpo37eBoYNcdjavmXV1n7KT4UbeePVIecofxVk49WCwlTyr0K02Fhld4bu
r4LrWM0OQRj5j8fJ1WF701opv3iU5Cz3HppG/0fxKLwkdrv2N/mPR8LznjHj
7yl/NXjbWpc+tKTnR41/plgeG+LYfE6NLN+K3aPbKD810tJLKlc7k74GJw7t
7F6VyPIQaGD9JnTtgBHto8GR5EH7l66srtEg4krGZcEHNF+DjSYdFxZ3MXxI
gyTTc0aik+RXgwPZnDg/g933gQYjDR5ZdrNIX4sZ3kVeVYksT4EWvc2zig++
pHtocSTH/O6zpWyeRosRgfbPL6ZTPlq0/Ob8YNNx0tdCuMRyjtccupcWGzqV
5S/cG5m+FpUDOpW4vxH/AccVeQY=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {12.333333333333334`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{12.333333333333334`, 143.}, {-179.9936165448279, 22700.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{{15, 
         FormBox[
          RotationBox["\"Wed 22 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {19, 
         FormBox[
          RotationBox["\"Sun 26 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {23, 
         FormBox[
          RotationBox["\"Thu 30 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {27, 
         FormBox[
          RotationBox["\"Mon 4 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {31, 
         FormBox[
          RotationBox["\"Fri 8 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {35, 
         FormBox[
          RotationBox["\"Tue 12 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {39, 
         FormBox[
          RotationBox["\"Sat 16 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {43, 
         FormBox[
          RotationBox["\"Wed 20 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {47, 
         FormBox[
          RotationBox["\"Sun 24 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {51, 
         FormBox[
          RotationBox["\"Thu 28 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {55, 
         FormBox[
          RotationBox["\"Mon 1 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {59, 
         FormBox[
          RotationBox["\"Fri 5 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {63, 
         FormBox[
          RotationBox["\"Tue 9 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {67, 
         FormBox[
          RotationBox["\"Sat 13 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {71, 
         FormBox[
          RotationBox["\"Wed 17 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {75, 
         FormBox[
          RotationBox["\"Sun 21 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {79, 
         FormBox[
          RotationBox["\"Thu 25 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {83, 
         FormBox[
          RotationBox["\"Mon 29 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {87, 
         FormBox[
          RotationBox["\"Fri 2 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {91, 
         FormBox[
          RotationBox["\"Tue 6 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {95, 
         FormBox[
          RotationBox["\"Sat 10 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {99, 
         FormBox[
          RotationBox["\"Wed 14 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {103, 
         FormBox[
          RotationBox["\"Sun 18 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {107, 
         FormBox[
          RotationBox["\"Thu 22 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {111, 
         FormBox[
          RotationBox["\"Mon 26 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {115, 
         FormBox[
          RotationBox["\"Fri 1 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {119, 
         FormBox[
          RotationBox["\"Tue 5 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {123, 
         FormBox[
          RotationBox["\"Sat 9 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {127, 
         FormBox[
          RotationBox["\"Wed 13 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {131, 
         FormBox[
          RotationBox["\"Sun 17 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {135, 
         FormBox[
          RotationBox["\"Thu 21 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {139, 
         FormBox[
          RotationBox["\"Mon 25 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {143, 
         FormBox[
          RotationBox["\"Fri 29 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"heat supply\"", "\"simulated loss\"", "\"simulated gain\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9277994390013027`*^9, 3.9277994485381985`*^9}, 
   3.9277995684400187`*^9, 3.9277996197937856`*^9, 3.9277996807850714`*^9, 
   3.927799820133582*^9, 3.9278000224608064`*^9, 3.9278001042455854`*^9, 
   3.927800329586172*^9, 3.9278055618099737`*^9, 3.9278058314041557`*^9, 
   3.927806597864184*^9, {3.927807710902501*^9, 3.927807743981991*^9}, {
   3.927807826779453*^9, 3.927807839286166*^9}, 3.927810941439642*^9, 
   3.927811603069677*^9, 3.927812416965779*^9, 3.927812729876561*^9, 
   3.927869623362537*^9, 3.927869814661282*^9, 3.927869878470911*^9, 
   3.927869952737315*^9, 3.9278702348534985`*^9, 3.927870373559942*^9, 
   3.927870449434214*^9, 3.9278705282369432`*^9, 3.927870881032827*^9, 
   3.9278711489067936`*^9, 3.927871224086941*^9, 3.927951219160451*^9, 
   3.92795173102507*^9, 3.9279521304845085`*^9, 3.9279522471064897`*^9, 
   3.9279523488702507`*^9, 3.9279525473240194`*^9, 3.927952655089589*^9, 
   3.927953058950734*^9, 3.928306507701517*^9, 3.9283066287216616`*^9, 
   3.9283067317226715`*^9, 3.9283071814013014`*^9, 3.9283073932404795`*^9, 
   3.928307461453707*^9, 3.9283079844524226`*^9, 3.928313087962701*^9, 
   3.928314358451805*^9, 3.9283252181537747`*^9, 3.928327575285671*^9, 
   3.928328983726446*^9},
 CellLabel->"Out[2073]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Quiet", "[", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Mean", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], 
        "\[IndentingNewLine]", "&"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"dayN", ",", 
               RowBox[{"100", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"heatStockDaily", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                   RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], 
            "]"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}]}], 
         "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Purple"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<simulated loss/heat supply\>\"", ",", 
      "\"\<simulated gain/heat supply\>\"", ",", "\"\<mean\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"#", ",", "\[IndentingNewLine]", 
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"DateString", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], ",", 
                  "\"\< \>\""}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "\"\< \>\""}], 
              "]"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
          "}"}], "\[IndentingNewLine]", "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"startDayN", ",", "endDayN", ",", "4"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "Automatic"}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9278717820533895`*^9, 3.927871809492728*^9}, {
  3.927871856923914*^9, 3.9278718633565736`*^9}, {3.928313356381607*^9, 
  3.928313388416501*^9}},
 CellLabel->"In[2074]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJw1VAtMk2cULfIQkYeKijxEWGIEnJs8hoIPDhUxkAKl5VGgQEt5C040IujU
bvWxrBFEhQUmCoxhfExmnHMaHj8BgxNhRHHgnIqs5T3oQIYOkbn0fk3+NCfn
u+d+995zP+ekT0Up83g8Xvb77/9//e8jZEfX1F2uHvfT4/W4m+m/UuP/irA7
1Fnme9+WjBD2wNeC6XaHWwx7Qjd7L997epiwF5JNVZvLX4wR/gRFZkEjYo7x
3rB63alycmN4A2xC3Tnx8r8Jb4RxpDo8b0xH2AdLq47UHHDrJ+yLxusOnitE
fYQ3YV63i0Cr0xDeDPuf7mlzXZn+FrR86V6iWDhEeCsGjAxS2sYHCfshxbfT
8Dcfdh7oKPM61HPoXz1WArWC0oQe8Z/E+2NO0eNnt+kN8f5oXGpl31X+gng+
MuO/v/qLHekp+ehM8Rhv0w0Qvw3mFq8H2mVa4rfB41xbXfDIX8QHwNXLItlh
iwH0fAAECYZ4pGX1bYdZmiRVncL0tyPfYpHx06aXxAfC9I7ncnuTXuIDUXUt
ff3lfMqv3IG5HM3zeGdbvT5PgOKRlv3ONTR/pQBuYfxVn6k6SS8Elb6Jql2P
qH/KEOyz9smIecHmFYo6o6lkkwU9hMOQt228L+0NOx8G6bO4+k4f5gchFKED
anUg+QdCzM8+75fuwuoR4qjYW3VaRPPmhMitMa8uPfGO4sMxcTXqw88rWXw4
DrZ4XnHk0zyV4bjkYGnankT348Kh/fn5wR82sPuKEJx013pXFd0PIrRMSepm
FeQ3pQi2nQmDioBpihfBbo+BZflZmgdPjPslLS2Z9ZQPYtRmHbaKnSV/KMXY
YXypeXUu9ZsTQ7FAbrhWw/wTgQeWHZXNfJY/AqmOM+tuds9RfARsOoqdAu5Q
vVwEVp/cNzmzlvkzEq9aBd4uS2k/EYnuH0Nysk3+ofhIKCqsu9yldJ6LxBmz
B8HcY5YvCg3lMUbiJ8wfURD0Xyz4+OQTOh+FwCW6X79dxfwWDauRTTM3l5Ae
onGjNaKpvJr5KRr+aZzp7HHqHySoSHMe/mMLm4cEH2SVHQicnCR9CfiKqv6G
auaHGJwanCqUNIxSfAyErx+ndBWx+cVAfq1bl7uHR/2PRfPcy433nWlfEAv/
OoPGqAZ6D5SxuLLfIs/OhPS5WFw/NqwrcGTvVRwKi6fv3hPQPBCHvtHDR3db
ROn1uTjUVy+8YPM77SdPivPz9j3c30D9ghTLghYfzs9i+yvFYM4NdWU9+YOT
IqPOzdAonu17PNZNhQ6PLQsiPh42foGa+Wa3GvV8AnYH6YYlTeR3JODs9t2n
isuoXmUCXM+Zf+Vkx+aXiC6VUYHHEJtfIoqN8765CLoPl4iH3T13Is48pfwy
vA3CRIUD+cNJhrnLRXtvp0+Qngz2Ctet79aQnkyGC8MupR5aVt97bNeap31D
/qyQYY3twJFW4SKqR4aMq14rw2qpv70y9MtSV2tOsPdVjuMTopkNOyk/5JAW
nk9vX7dYHy+TQ93mG+4moXkp5Th9ofG2aifhCjm+GBX2CfnMz3IMqY5/t7Cf
9qNXjhU1z+w1ayf9/gPvTheW
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJw1VQlQlGUYXgGvFcRIGUyHIzWwkDVQkxX1QZESOXaXhYU92H8xD0IFvLAJ
6S8FElFBI1JA8Cxr0jBJd3JhRUVQyfUIBOSQI0RDwdBcRcna9/tndv555nne
+33/dYtNkC2zEggEq1///ntbHi+ETH9l9+ORZ/MteDqqUzMMRcUDhN/H0wmx
OT6zGO+N9V3C1OWjnhD2wWUbg/OrvseEZ2DN7uWDZuFTwjPxqO92uXN/P+FZ
6LQJ4Oza+wh/gBWmdn+PVUw/G6XiErXp8j+EfVE875e+JVt6CYvxfVyjJ453
EZ4Dzz+dH1a73ifsh7dzXGa6Gph+LkaWubi1XmZ4HhpDDdc//p3h+Qgeuiip
OY/lA0hbPnHMF1rhf8gDve4N+va2e8T7w+Hcjpsn7ATE+6PujYslK593E78A
ZlFgm9Gb8ucXYHhxXrkDx+pbiJS01OC+BxSfX4gV4poN/irGB2BgimLGg6Ix
5D8AythTA8fCWX6LkDZ6du/E36jf/CIsiQs6npv8F/GByLKZ8yLbi/LlAzEk
d7zvkx6m/xAH3TRdn3WJLP4FwcjqrkgZahhB8YKhdh+drwpj/QlBz319vU+V
LfEhSLjbwVkfsCf7UNzVNuUHlLL8wrAvrXR76WQWLwxZz4KsGm6zfZHAqddX
EfXu3xYMCbK9uzsUMUwvQcGF5pagreTPKIHZMzqjysqG4klxynRvm/wb6hek
2Hm1bG2iifzxUggLvZqTRK/IXorA+Mg26fjnFF8G/rpuu/CImexlyBgnc1//
nPabl+GL8RO3Dtv1kuxlUFRs8G8cHEnxwyGCuFFfQvkiHLa11lvl2Wyer/mT
o6omnSHeGA4v37Zkx53sPuRIcvUQbjpO9wA5LvSsc4swDqX+yhF/4rxPUNhw
CzbK8et99VXxM2YfgRsjf3iHO0j5IQJpKZqNp06zfYxAZa50c/RXVI8xAlM0
zQeq97N6I6EtfK/NUDqM9JHwvHKztkJB926MxNI3/Yqdj5JeoEDgyvRxu12o
f1DgJ1lB3bQM4nkFKivnpDsMWlv8IQqtu9QHe+eSPz4KeTfap7rUE2+MQqN9
zeYCEZtHNK59rbgSufcF+Y/GecfEztF1Q0gfjbV79q9vanCi/isRKnlSXePN
6lfi4cZPCxOuUD95JeLP9a5zms7mr0T78qI1m3zIv0AF4UtzbO0ltj8q6M3x
wj0xqymeCsoJZ23qeti+qdHZrVHEaZlejdZrNzLKyln9aqjzlg28bBpL9mpo
pR1+q+6w+jSQ/JGrx+dq4jVoCjwtKH/0FvmPgby/NnPQzOqJwc0UTaY41Y7m
E4OK1o4lP+9m8bWYX5Y1NvFL6g+vxUXxYo+dLaxeLTw2j3p8ZgTbFw6FMSu+
q7xN++XK4XS0vd1H3jR/cLiTbDqRuY/6x3EoCL2kNwnp/ngOh1Q5bWaR0KIv
5uBnNfWYSwnlb+Qwqf6s00nVoEXfyiGkRhm/o4v9f+ig7zP4Rh2l7xl0iNyb
bLY/NNmCOR22TVua3rmF7Hkdvk1drA4ZQ/UV67D01uGOh+fY/ujgcGtjUNkR
Rwtu1WFS/+GqMpMt/gUZphrB
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5]], 
        PointBox[CompressedData["
1:eJw1VAtQlFUYXQHFEJAoHyEoaANqPFRgBVngLKyIpLC77Ivdhd01QoFxKBct
yPJPUUSYUEAhQ1NARWVxxnwQIC46Y4pGaZakRruiWbmYtGWI0Gv2u//MP/+c
+e653z3nP98NWFUgfdOJx+Ot/e/9/+t4QuHUOpfPE/wR78AL8EVh9qDw7WHC
CzFzXuGDPp6d8CJYkrasKzYOEQ6Htftr0zX+E8IREE+6mZp97nfCkajv6FK/
Op+t58PGBTf4DT8mvBjxlW7j4rrZ/lH4YdlMZZOWnScaxybbRWV1jwgvwSmP
0bBg3gPCMajtn7Pv1vaHhAVYYHNuvnN9kHAs8jdH2XaJGY5D6vXYkpQkhuPx
wewQ45VT7DxAW/B4eenyfxyYA8Tt0e5ZM36iuhDe9iK74Pgo1YWYkXpYd/T+
faonQFmQetfbn/RzCXg3t04jCGb6E+FUUQxVPenhEoGSV/KMzcwvEbzMmTlF
cS/AUReBe/FMffUlpn8p3BKyG+8N/kb8pVgVY8po82X6k5CiOztR4UPn4ZIg
ta2U9BwjfdwySEyr86cIAh3781Yg2ls9mJTOo34rENjR37DkLaZnJa7eTT5X
un8c1Vdi92mzmyrZhfip8DroE7ntLOufBkVQyPu5Aex8adhn3LjAWsz0iXHo
6h7Pr3IoLxDj5dw2l4p1bL0YWY+LAmpMNgc2i+FjPtGS0kj9eRLseclt545w
2g8SXGtVXd40xPgS3NbONM668hfxJZha5RP2YfOf1F8KqbChxz+G8gYpDm/9
dijqBOWNk+LLwlj+6dwR4ksRtbcjSNAznvqno6a8PrbAi/ohHdnuF8vHVf5K
/HTciLAc5RvJb3M6LOeqnr3GkR6eDLbq0kHbEaZfho1dUXenfedE/soQ87rr
bL7C2YHNMjT1TXrD15XNlxwDa94LFd2h+YQcTxQuYY/an1N/OUZPmsKj75A/
ZjkWL2wYuCliehXodUlo9LaRPk4B/b24zNJMyqdZgURPH9HwbZZXJR6GVpVt
qGF8JRI1c7RdLSzfSuSMfOK2K4HmASr0HTxTXhDK/FSheeLC1RdujNH+KnT5
Vw6Pmdl8Z6BCdLRMOEoYGXjkrZn+7FPmfwYkkVs3uO/wIv/VmD433Pi9lf4n
1PCUj4zunc/yrcaBrue3qj5+Snw1+mU77DoD66fBLwMjq/wWM/81mNImP3xo
UTb5rUGZyyabNpv687SIyK/DoS7aH1pEtq9tHFvC9GshFsdf6O30IL4WPbcE
s95Zyu6zTNiPZE3z3SqjeiasIYHWPdVupCcL2yqCeAoT05+FCGuOxxp3V8pD
FvJr1ydbKul/QIeIHz3aOjtJP6fD5f1Oz5+cJ75ZB9/Puv0/GvyZ+uvR2524
s9xI8+2vBz+s71JTDt1v0CNv3oPeslbKp14P20XNhLwxdj/pUVRYnLZhKuX/
gB4nPbbX2LkppEePltrj37Qwvy16WP6ecP78bua3AerWqqhA4QTHehjgYr1k
ehrt58B6A44s55RjSppXzoCNOZ+nhB6nfB8woGRytN8WKcuDAe7r+8KFOk8H
32JA3cDyfFW4M/4FjuwHjQ==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {12.333333333333334`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{12.333333333333334`, 143.}, {0, 4}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{{15, 
         FormBox[
          RotationBox["\"Wed 22 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {19, 
         FormBox[
          RotationBox["\"Sun 26 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {23, 
         FormBox[
          RotationBox["\"Thu 30 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {27, 
         FormBox[
          RotationBox["\"Mon 4 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {31, 
         FormBox[
          RotationBox["\"Fri 8 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {35, 
         FormBox[
          RotationBox["\"Tue 12 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {39, 
         FormBox[
          RotationBox["\"Sat 16 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {43, 
         FormBox[
          RotationBox["\"Wed 20 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {47, 
         FormBox[
          RotationBox["\"Sun 24 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {51, 
         FormBox[
          RotationBox["\"Thu 28 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {55, 
         FormBox[
          RotationBox["\"Mon 1 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {59, 
         FormBox[
          RotationBox["\"Fri 5 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {63, 
         FormBox[
          RotationBox["\"Tue 9 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {67, 
         FormBox[
          RotationBox["\"Sat 13 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {71, 
         FormBox[
          RotationBox["\"Wed 17 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {75, 
         FormBox[
          RotationBox["\"Sun 21 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {79, 
         FormBox[
          RotationBox["\"Thu 25 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {83, 
         FormBox[
          RotationBox["\"Mon 29 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {87, 
         FormBox[
          RotationBox["\"Fri 2 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {91, 
         FormBox[
          RotationBox["\"Tue 6 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {95, 
         FormBox[
          RotationBox["\"Sat 10 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {99, 
         FormBox[
          RotationBox["\"Wed 14 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {103, 
         FormBox[
          RotationBox["\"Sun 18 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {107, 
         FormBox[
          RotationBox["\"Thu 22 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {111, 
         FormBox[
          RotationBox["\"Mon 26 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {115, 
         FormBox[
          RotationBox["\"Fri 1 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {119, 
         FormBox[
          RotationBox["\"Tue 5 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {123, 
         FormBox[
          RotationBox["\"Sat 9 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {127, 
         FormBox[
          RotationBox["\"Wed 13 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {131, 
         FormBox[
          RotationBox["\"Sun 17 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {135, 
         FormBox[
          RotationBox["\"Thu 21 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {139, 
         FormBox[
          RotationBox["\"Mon 25 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {143, 
         FormBox[
          RotationBox["\"Fri 29 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"simulated loss/heat supply\"", "\"simulated gain/heat supply\"", 
       "\"mean\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9278717833121047`*^9, 3.9278718097586875`*^9}, 
   3.9278718636272383`*^9, 3.927951223846077*^9, 3.9279517339080305`*^9, 
   3.9279521399175787`*^9, 3.927952249074181*^9, 3.9279523511188974`*^9, 
   3.927952555583449*^9, 3.9279526590364175`*^9, 3.9279530875252438`*^9, 
   3.9283065100662107`*^9, 3.9283066307319174`*^9, 3.928306733390257*^9, 
   3.928307184125621*^9, 3.9283073949078665`*^9, 3.928307986185665*^9, 
   3.928313093113933*^9, 3.928313390169307*^9, 3.9283143608793306`*^9, 
   3.9283252215290127`*^9, 3.9283275770813403`*^9, 3.9283289884235606`*^9},
 CellLabel->"Out[2074]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}], 
       "\[IndentingNewLine]", "&"}], ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dayN", ",", 
              RowBox[{"100", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"heatStockDaily", "[", 
                   RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], 
           "]"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}]}],
         "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9283134465088053`*^9, 3.92831344869718*^9}},
 CellLabel->"In[2075]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9lAtQVGUUxxdEIAQk8kEICuiAEg8RWF4L/FFEHgK7C/sAdlkjQpFxKBct
iPKWKCJMKKCSoSWggrA4Yz4IFS86Y4pGaRYkZqxIVi4GbRnyqGw4X3dm585v
z3ce//Odc12z8qWvmwoEgk3Pf/+9p5+RSNO2pUKB6I9I+gNfFGQPR705RmyJ
hcsKhvoERmI7DMRs31ykHSWeA33X17qbwhFiB4hn3UnKvvg7sRPqznemL/Fk
511g4LzqnceeELshstLKJKKLxV+CH9YsVDSqWD3uODHbGF1W+5h4KU7bTPp6
CYaIPXHg/uJDvbseEXthuWFGU/+tYWIf5H0QbNgrZrwcSbfCS+JjGPvhPTdv
7fXTrJ4VaPeaKSuN+4fYH+KOEOvMBT8RB8DeWGgUtUwSB2JB0jFN88OHxEIo
8pPu2bsw/UF4O7c2Q+TF9AfDtKIIyjqmJwQoeXmjtomdD4Udr84pjHgB0xwG
7sWzddVX2XkRrFZmNzwY/o04HFlhurR2J6Y/AvGac5ZyR1ZPJKSGREn3CdLH
ARLd+ry5IneKvxoh9unDMSmCaeZWw/38/frQN5h/DG7ci71YetiE7DHYd4a3
Usaakf8a2B1xDNx5juWPhdzD+91cV6qPi8UhbfFyfRHTF4ejN/bbfpVD88LF
YU5uu1nFZqYnHplPCl1rdAayx8ORP9ka30D5BQnY/5LVnt3+FI9LwM025bVt
o8x/Le6qFmoXXf+L7Gsxr8rR9/2mP8meCGlUfbdLGM0bl4hjO74dDT7J5i0J
XxaEC8/kjpM9CcEHz3uIumdS/mTUlNeF59sxfcnItr5SblL5K/mLcTtgoFmo
pX5DjIGLVc9e4ZgeMQzVpcOG46SfF6O4M/je/O9MKb4EYQkWbkL5jGmGBI19
s15zsmD9kmBwwzs+0f20n7wEI3Iz38cdE5RfislTOv+QfuoPpAjyqx+8E016
eSl6zFY22BtInyAF6x5EqEvVNJ9IwSpbx+ixu8RcCh75VJVtrWH+z+0Zi1Wd
rew+U5Ez/rHV3pW0D3wq+o6cLc/3Yf2UocnSb/3l21MUX4ZOl8qxKZ7snAwV
0c1lUZPEvAyP7TMcnn1C9UEOSeCOrda77ab7wcnhsNRf+72e7pOXw1Y2PnnQ
k+2vAp92TvRWffSU/BW4n7rbqHmV5VPgl8HxLOcg1n8F5rbLjh1dkU39VqLM
bJtBlc3uX4mAvFoc7aT4vBKBHZsapkKZ/jSIxZGXey7YkH8auntFi95azeYr
DcbjmfOddqSSPR16b3f9/mor0pOOnRUeArmO6U9HgD7HZoO1Bc1DBvIObIkd
qKT74DMQ8KNN+4ULbJ5VuHbYdGLkEvlDBafPulw+HP6Z8qvQ07VqT7mW9ptX
Qejbd7Uxh33f1Ni4bKinrI3mE2oYrmSYb5yi7w2nRmFBUfLWeTT/vBqnbHbV
GLm5VF8mWg+0fNP6f78zMfC3+aVL+1i/M5HeVhXsHmVO5zUw01/VPQ1xpn5o
cDyOU0wp2L5qUJzzebxPC5tvDUpmhzhvl7J5XQfrLX3+URrbaX+XdagdjMtT
+s/Av3D7/fc=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.}, {0, 4.108217196209741}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9283134489709654`*^9, 3.92831436299454*^9, 
  3.9283252230268383`*^9, 3.9283275789869432`*^9, 3.928328989999339*^9},
 CellLabel->"Out[2075]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Quiet", "[", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}], 
        "\[IndentingNewLine]", "&"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"dayN", ",", 
               RowBox[{"100", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"heatStockDaily", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                   RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], 
            "]"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}]}], 
         "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "]"}], "]"}], ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.928313426236899*^9, 3.928313434416854*^9}},
 CellLabel->"In[2076]:="],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5599999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5599999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.6, 0}, {0.8, 9.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{16.25185100247763, 
           23.3596414241115}, {-1.5540338282570687`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.8, 0}, {1., 22.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{22.8596414241115, 
           29.967431845745367`}, {-43.63381880240618, 28.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.2, 20.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{29.467431845745367`, 
           36.57522226737924}, {-37.16000572946017, 28.078125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.2, 0}, {1.4, 18.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{36.07522226737924, 
           43.183012689013104`}, {-30.68619265651414, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.4, 0}, {1.6, 7.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{42.683012689013104`, 49.79080311064698}, {
           4.919779244688947, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.6, 0}, {1.8, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{49.29080311064698, 56.39859353228085}, {
           1.682872708215939, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.8, 0}, {2., 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{55.89859353228085, 63.00638395391472}, {
           17.867405390580977`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0}, {2.2, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{62.50638395391472, 69.6141743755486}, {
           21.10431192705399, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.2, 0}, {2.4, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{69.1141743755486, 76.22196479718247}, {
           17.867405390580977`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.4, 0}, {2.6, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{75.72196479718247, 82.82975521881633}, {
           17.867405390580977`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.6, 0}, {2.8, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{82.32975521881633, 89.4375456404502}, {
           17.867405390580977`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.8, 0}, {3., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{88.9375456404502, 96.04533606208408}, {
           24.341218463526996`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {3.2, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{95.54533606208408, 102.65312648371795`}, {
           24.341218463526996`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.2, 0}, {3.4, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{102.15312648371795`, 109.26091690535182`}, {
           24.341218463526996`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.6, 0}, {3.8, 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{115.36870732698569`, 122.47649774861955`}, {
           21.10431192705399, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {4.2, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{128.58428817025344`, 135.6920785918873}, {
           24.341218463526996`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.2, 0}, {5.4, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{168.23103070005666`, 175.33882112169056`}, {
           24.341218463526996`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.2, 0}, {7.4, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{234.30893491639537`, 241.41672533802927`}, {
           24.341218463526996`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11., 0}, {11.2, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{359.8569529274389, 366.96474334907276`}, {
           24.341218463526996`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{82., 0}, {82.2, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{2705.6225526074627`, 2712.7303430290967`}, {
           24.341218463526996`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{161.4, 0}, {161.6, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{5328.915349996109, 5336.023140417743}, {
           24.341218463526996`, 28.078125000000004`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.528, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{
      Rational[3, 5], 
      Rational[21, 5]}, {All, All}}, {{0.6, 4.2}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.928313419782217*^9, 3.928313434803686*^9}, 
   3.9283143647018943`*^9, 3.92832522448116*^9, 3.928327580226017*^9, 
   3.9283289914491158`*^9},
 CellLabel->"Out[2076]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Quiet", "[", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "/", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "&"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"dayN", ",", 
               RowBox[{"100", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"heatStockDaily", "[", 
                    RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                   RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], 
            "]"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}]}], 
         "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "]"}], "]"}], ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.9278718965833025`*^9, 3.9278719312765636`*^9}, {
  3.928304766141636*^9, 3.9283048041716843`*^9}, {3.928307465217143*^9, 
  3.9283074657602096`*^9}},
 CellLabel->"In[2077]:="],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.504], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.504], Thickness[Small]}], RectangleBox[{-0.1, 0}, {0., 1.},
      RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 1.},
      RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 2.},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 2.},
      RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 8.},
      RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 14.},
      RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 14.},
      RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 23.},
      RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 10.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 7.},
      RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 3.},
      RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 3.},
      RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 2.},
      RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2.},
      RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 1.},
      RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 1.},
      RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 5.},
      RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 2.},
      RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 2.},
      RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 1.},
      RoundingRadius->0], RectangleBox[{4., 0}, {4.1, 1.},
      RoundingRadius->0], RectangleBox[{4.2, 0}, {4.3, 1.},
      RoundingRadius->0], RectangleBox[{6.2, 0}, {6.3, 1.},
      RoundingRadius->0], RectangleBox[{50.1, 0}, {50.2, 1.},
      RoundingRadius->0], RectangleBox[{88.2, 0}, {88.3, 1.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.15200000000000002`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->NCache[{{
      Rational[-1, 10], 
      Rational[5, 2]}, {All, All}}, {{-0.1, 2.5}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9278718973543606`*^9, 3.927871931738057*^9}, 
   3.9279512270676355`*^9, 3.9279517371561565`*^9, 3.9279521448093867`*^9, 
   3.927952251894212*^9, 3.9279523530855513`*^9, 3.9279525580493107`*^9, 
   3.927952660641732*^9, 3.9279530895836296`*^9, {3.9283047802029057`*^9, 
   3.9283048046807995`*^9}, 3.9283065125833874`*^9, 3.9283066328647947`*^9, 
   3.928306735244772*^9, 3.9283071864465528`*^9, 3.928307396456616*^9, 
   3.92830746634238*^9, 3.928307531977642*^9, 3.9283079876065445`*^9, 
   3.928313095545103*^9, 3.9283143664037523`*^9, 3.928325226312945*^9, 
   3.9283275815991683`*^9, 3.928328992664976*^9},
 CellLabel->"Out[2077]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Map", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "&"}], ",", 
      
      RowBox[{"Transpose", "[", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"dayN", ",", 
              RowBox[{"100", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"heatStockDaily", "[", 
                   RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                  RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], 
           "]"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}]}],
         "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.927871966920515*^9, 3.9278720045285964`*^9}},
 CellLabel->"In[2078]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1lAtQVGUUx3mLCIKKIg8VnExALXkEgo/9Q4IuLrDs8lhwecjyUsFAh5em
XlvDph1BVGw0ESHCEUlyzEyHx3WEgUSIUQzM1KRd3sEGEhoi2XC+O7Nz57fn
O4/vnP+5DvGfSBL1dHR00t79/n/PPFpBWkRFTWX5iID+QOMunyVqn5fExlCl
mu57c2aQ2AJfiSZa7W4ytoR2qjnXY2KAeDESjJUbip8PE9uh0EQ4KOWZ3R7m
r9qV9s6Ml8MqyIWXLvqb+D0YhqlCcoa1xO/DsuxwxX7nHmJH1F+zc1ss6SZ2
hl6no0ijVROvhu2PzZosJxb/AzR84XJGMaefeC16DXQTW0b6iF2Q6N2u/6sX
O++KtnPuB7sO/kvshmrR2Zgu6Z/E7phWdAls1r8m/gj1lua2HcXPiT2wK/q7
qp9tWDxPtCe6jrRoe4nXwdTsVW9rnIbYC67nW2oCBv8i9oaTu1mC3UZdzPB6
iGL08VDD7rcBJsmyJFUii78RuWYWhk/uvCDeBOPbbotsjf4gFqDsasraylzK
zwHTGepn0Q7WFN8PRYMN2Q4VNH/OD87Bvss+VbaTvz9KvWOVex5S/zh/ZC7w
2hn5nM1rC2oMxhOMZncRb0XOxyPdya/Z+a2QP91e2+7F9CCEIqhXpfIn/XBC
zEq7IEhxZPcJwFGph/KkhObNBSCrwrT87LG3ZN+G0arw1UdKmf82HGhwu7LU
l81ThMt2c41b46k+TgTNT88OfO/J6g1EQHzjgj1lrL5ANIzLaqYUTG9BsG6P
6VNsniB7EGz26s4tPs3mEYx7ZxoadtVSPi4Y1amHzKOmmD7E2GJ4+e6KLOo3
xFDM3qG/Sk12Toz7c9tK7/pSfl6MpKWTa250TpN/CKzaiuw336b7IgQrjmeO
Ta6i/nAheNkk8nC0pP3kQ9D5Q2BGmtE/5C+B4uKCDhc5nYcEp0zuB/CPWD4J
6oojDaSPmT6kEPVcyv/w+GM6L4X/fO0v3ywjvXFSmA+un7wxn+LxUlxvCr1T
XM70HAqfZN54Ko/6x4fiYrLDwO8b2TzCsDz13H7/sTGKHwZfRVlPXTnpgQvD
ib7xAlndEPmHQfzqUWJHIc0L4dhxtVObtVdnpv9cOO5Ov1h3z4H2hQ+HT41u
fXgd+x5E4Eq2WY6NEcVHBK59PqDNX8r0EoGCoonGZhHNg49A99Cho+lm4TPx
IUNt+ZwSq99oPzkZLuhlPsiuo37xMiwUzjuUm8r2NxJ9GddVpbWkD0RiZ42z
vkE027dIrBkPGhheKCR7FKwE/upZJjfrZ+xRSBdqB2R3SO98FE77pZ8oOkf3
1dkOp/OmX9rbsPltR4fSIN+1n81PjiLDnK8vgeqBHA86u26HnnpC+eV4I8To
RTvSBy/HdGXhvlspo+QfDVuF06a3KykeolEy4HjWVcPu/45tmnI0r0mffDRW
WvcebhJbUH0x2FnlviS4mvqLGPTEJa1QH2P7EYO8Ucmk526mz1jICy6ktK6Z
R/2IharFO8RZxvQQi5Ml9beUu4n5WHw2JO4W+7LvQxz6lXnfzumh/bCPw+KK
p7bqVWOC/wDRXQ4P
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 129.}, {-0.08999680827241395, 2.4753913194609956`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9278719653541484`*^9, 3.927872005064686*^9}, 
   3.9279512289216633`*^9, 3.927951738732688*^9, 3.9279521465624924`*^9, 
   3.9279522535318227`*^9, 3.927952355169922*^9, 3.9279525603735223`*^9, 
   3.9279526623245554`*^9, 3.9279527782426825`*^9, 3.9279530908019857`*^9, 
   3.928306515774641*^9, 3.9283066348960314`*^9, 3.9283067371514344`*^9, 
   3.9283071895326295`*^9, 3.9283073979866734`*^9, 3.928307533327875*^9, 
   3.928307989135317*^9, 3.9283131006638217`*^9, 3.9283134051872272`*^9, 
   3.9283143678930526`*^9, 3.9283252305617046`*^9, 3.928327582962323*^9, 
   3.9283289943145976`*^9},
 CellLabel->"Out[2078]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}], "[", 
     
     RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "/", "100"}]], "Input",
 CellChangeTimes->{{3.92779963551254*^9, 3.927799650018516*^9}, {
  3.9278080411766963`*^9, 3.927808042345873*^9}},
 CellLabel->"In[2079]:="],

Cell[BoxData["10204.457803490326`"], "Output",
 CellChangeTimes->{{3.927799637482269*^9, 3.9277996502702093`*^9}, 
   3.9277998261037073`*^9, 3.927800024192445*^9, 3.927800105593503*^9, 
   3.927800334997204*^9, 3.9278055639635267`*^9, 3.927805831512455*^9, 
   3.9278070074775887`*^9, 3.9278080121299543`*^9, 3.9278080427939262`*^9, 
   3.9278109451651917`*^9, 3.927811606057662*^9, 3.9278124191874385`*^9, 
   3.927812734039815*^9, 3.9278696321980386`*^9, 3.927869818703597*^9, 
   3.927869880798194*^9, 3.9278699528679914`*^9, 3.9278702366083293`*^9, 
   3.927870375255192*^9, 3.927870452185952*^9, 3.927870529736902*^9, 
   3.9278708828684688`*^9, 3.9278711512453737`*^9, 3.9278712305388436`*^9, 
   3.9279512312092934`*^9, 3.9279517408573494`*^9, 3.927952148582868*^9, 
   3.927952255323371*^9, 3.9279523572520013`*^9, 3.9279525625564346`*^9, 
   3.927952664620469*^9, 3.927953092216311*^9, 3.928296925653042*^9, 
   3.928306517697525*^9, 3.928306638288416*^9, 3.928306739141635*^9, 
   3.928307194337802*^9, 3.9283074005805235`*^9, 3.928307536694105*^9, 
   3.9283079923513155`*^9, 3.9283131028182364`*^9, 3.9283134655293865`*^9, 
   3.928314369708568*^9, 3.9283252331988797`*^9, 3.928327584637278*^9, 
   3.9283289994374046`*^9},
 CellLabel->"Out[2079]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"heatStockDaily", "[", 
        RowBox[{"[", "cycle", "]"}], "]"}], "[", 
       RowBox[{"[", "dayN", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.92779966666682*^9, 3.927799672404826*^9}, {
  3.927799741253587*^9, 3.927799763944642*^9}},
 CellLabel->"In[2080]:="],

Cell[BoxData["10468.151504425765`"], "Output",
 CellChangeTimes->{
  3.9277996593507023`*^9, {3.927799749089362*^9, 3.9277997643108683`*^9}, 
   3.927799826702244*^9, 3.92780002485843*^9, 3.927800106380831*^9, 
   3.927800334535843*^9, 3.927805565361512*^9, 3.9278058315955105`*^9, 
   3.9278080451431265`*^9, 3.927812420968831*^9, 3.9278127356683393`*^9, 
   3.927869633133277*^9, 3.927869820071268*^9, 3.9278698824759283`*^9, 
   3.9278699529686737`*^9, 3.9278702374120493`*^9, 3.927870376141138*^9, 
   3.9278704532892303`*^9, 3.927870530662131*^9, 3.9278708837548995`*^9, 
   3.927871152269988*^9, 3.9278712317859*^9, 3.927951232694529*^9, 
   3.927951742005315*^9, 3.927952150048205*^9, 3.927952256175206*^9, 
   3.927952358158506*^9, 3.9279525635800037`*^9, 3.9279526655430384`*^9, 
   3.9279530928993044`*^9, 3.9282969267190905`*^9, 3.9283065194183064`*^9, 
   3.928306639929881*^9, 3.9283067411062155`*^9, 3.9283071960133452`*^9, 
   3.9283079937681365`*^9, 3.9283131046812267`*^9, 3.9283143722360983`*^9, 
   3.9283252340652533`*^9, 3.9283275858512487`*^9, 3.9283290000761986`*^9},
 CellLabel->"Out[2080]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}],
            "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", "100"}], ")"}], "/", 
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"heatStockDaily", "[", 
             RowBox[{"[", "cycle", "]"}], "]"}], "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
       "]"}]}], ")"}], "-", "1"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.927808053641984*^9, 3.9278080789553003`*^9}},
 CellLabel->"In[2081]:="],

Cell[BoxData[
 RowBox[{"-", "2.5190092140331966`"}]], "Output",
 CellChangeTimes->{{3.927808058507922*^9, 3.927808079488817*^9}, 
   3.9278109481988964`*^9, 3.927811612932908*^9, 3.927812422529174*^9, 
   3.927812737642296*^9, 3.927869634128824*^9, 3.927869820568119*^9, 
   3.927869883657115*^9, 3.9278699530482855`*^9, 3.9278703766615133`*^9, 
   3.9278704537134132`*^9, 3.927870531872486*^9, 3.9278708843842025`*^9, 
   3.9278711532551537`*^9, 3.9278712328150797`*^9, 3.927951233683798*^9, 
   3.927951743103812*^9, 3.9279521518073344`*^9, 3.927952257886528*^9, 
   3.927952564156352*^9, 3.9279526659621363`*^9, 3.927953093949993*^9, 
   3.928296927102922*^9, 3.9283065218784695`*^9, 3.9283066417403574`*^9, 
   3.92830674237374*^9, 3.928307197344496*^9, 3.9283075383439584`*^9, 
   3.928307995800839*^9, 3.9283131062072697`*^9, 3.928314374522812*^9, 
   3.9283252358288794`*^9, 3.9283275874574385`*^9, 3.928329001044468*^9},
 CellLabel->"Out[2081]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}], "[", 
     
     RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "/", "100"}]], "Input",
 CellLabel->"In[2082]:="],

Cell[BoxData["19472.214380740304`"], "Output",
 CellChangeTimes->{3.9278716476141796`*^9, 3.9279512349127216`*^9, 
  3.9279517438407197`*^9, 3.927953094766257*^9, 3.928307997417448*^9, 
  3.92831310761401*^9, 3.928325237945342*^9, 3.9283275905758047`*^9, 
  3.9283290018458023`*^9},
 CellLabel->"Out[2082]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}],
            "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", "100"}], ")"}], "/", 
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"heatStockDaily", "[", 
             RowBox[{"[", "cycle", "]"}], "]"}], "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
       "]"}]}], ")"}], "-", "1"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.9278716515270987`*^9, 3.927871651600707*^9}},
 CellLabel->"In[2083]:="],

Cell[BoxData["86.01387620830445`"], "Output",
 CellChangeTimes->{3.9278716518519945`*^9, 3.927951236193101*^9, 
  3.9279517452164354`*^9, 3.927953096315943*^9, 3.9283079985008473`*^9, 
  3.928313108847263*^9, 3.928325238569726*^9, 3.928327590949961*^9, 
  3.9283290023496275`*^9},
 CellLabel->"Out[2083]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["temperature (performance)",
 FontWeight->"Plain"]], "Subsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799846228552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatedDailyTempVsTrueTempForCycle", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"simulatedSeasonForCycle", "[", 
           RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"roomTempsD_aily", "[", 
                RowBox[{"[", 
                 RowBox[{"roomsOnCycle", "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"simulatedSeasonForCycle", "[", 
                   RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
             "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Select", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], 
                    "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"NumberQ", "[", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], 
                 "\[IndentingNewLine]", "&"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"simulatedDay", ",", "1", ",", 
        RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927809458408825*^9, 3.9278094645603094`*^9}, {
   3.927809580608006*^9, 3.927809690953267*^9}, {3.9278097396217785`*^9, 
   3.9278097397228084`*^9}, 3.9278105694220724`*^9, 3.9278116145151386`*^9, {
   3.927870278759116*^9, 3.9278702805424323`*^9}},
 CellLabel->"In[2084]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"simulatedDailyTempVsTrueTempForCycle", "[", 
             RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Mean", "[", "#", "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", "&"}], ",", 
        RowBox[{
         RowBox[{"simulatedDailyTempVsTrueTempForCycle", "[", 
          RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"simulatedDay", ",", "1", ",", 
        RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
     "]"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"#", ",", "\[IndentingNewLine]", 
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"DateString", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], ",", 
                  "\"\< \>\""}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "\"\< \>\""}], 
              "]"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
          "}"}], "\[IndentingNewLine]", "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"startDayN", ",", "endDayN", ",", "4"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "Automatic"}], "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"roomNames", "[", 
     RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9278097765324807`*^9, 3.9278100099866314`*^9}, {
  3.9278101152067595`*^9, 3.92781011558966*^9}, {3.927812757566035*^9, 
  3.9278127611509037`*^9}, {3.92787007955303*^9, 3.9278700969770947`*^9}, {
  3.927870599311369*^9, 3.9278706069793177`*^9}},
 CellLabel->"In[2085]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{15., -0.1754883751471322}, {16., -0.36670700818753305`}, {
         17., -0.6522899534861547}, {18., -1.340551535283503}, {
         19., -1.561295517685872}, {20., -1.661147019629963}, {
         21., -1.2431926910672608`}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQHmDixJr30evbhoD+FbOPy7G1X8bNWU/RC+pcNu
tfWmD7+fh8pbOdxW/cfxVeMyVN7aYYvbW98f7z5B+TYO6YV/HySsvAXl2zoc
2Gr0793TfVC+nQN7qP0+ngvHoebZO5xpOfn2rOJ+KN/B4T1X45bKk68g/AYH
h9tHOTJbTsHc5+gg8k20UJbtIcS8BkeHyUrSJlJn70HNd3K482fxJpUpN6Hy
Tg4zeRbznnZ/DZV3dmjcOWPnnLzHUHlnh4YZQg15s6DmMbg4dEs0cqz9D/VP
g4vDykUXbEq1/0LlXR3eFxxw45/4Hyrv6sAcHyd84R3TAYi8m8PnKzvSdbd+
gcq7OZht+aRvLzsfqt/dIfaMAfMSxTNQeXeHo3lMwZxCKVD/eTiwLV/lPiX0
AdT/Hg4n9pVrZTskQ+U9HeR+Fwi6euyDyns6bDuvl3Qz4DZU3suBm2n9t93f
PkPlvRz2lVxclJTwCyrv7fBZ6O+NA5f+2QMAzIWlMg==
         "]], 
        LineBox[CompressedData["
1:eJw1kWtIU3EYxqc5SIIuEpYtIfsQGmGakWbMnsRZEOrudy8UliWllsZwVifQ
ymt9KjPN1Gl5C8yUsshJoSwwJ3hBM0ndShtecmZKU7ucdwcOhwfe3//3f5/j
cypFnOjK4XBC/r7/vuwTg6p9OlgcA+3/IxODAvvYq+kLk2zmCHHl8rm3+RE/
2AwhQgvtvO8RdpoXwnTEFver/CebjULoyirTJy2OoywvwqShu8bzdjvxIhwe
2ZS2eIjOZ0SIyjF27VtaJF4Egf/1+HejTr8Yd8fveOSvdbDnQQxjcUJbt2qa
zYwY+gDrgRA3d7C8GHXm5argrhXyS3Dvvlh/MWWC/BL0lCe5RQ/RPowEr4/X
ctP1Dey8UYKDkh19Z8ZsxEtxPjN83cnOWfJL4Qg9m7rYsZH1MVIEhYV/nLVz
yS9Fy/svzz9wzcTL0CT11KxmD5NfhqKX7vqo8Xnyy8DLW1/sGKI+jTJ4Zrkk
bs/ooP3luBoYleSSZyW/HOYHI7r83AXi5cgrSA57XOHsT46gOF15Udoo8QoI
mk2BDQGt5FegJWtn9vDNPupPgeRSf1HJwzHaX4HRZn6luZb25Shh8OLPce1f
ya+EqWwpfuIF9cko0Zgwdaukfpz8Sjza3Ft4YtBCfhWqt3CYDTzn/irErhna
zE8pMyq8eVJTfY1P80YV9vK3NrtaqA+OGr51wd6R25z/Tw2B4Ma8wUzzjBq7
5gZ+T4tMxKthyz2Wbd1joPtroOR5RPakPyNegxpfQflM4CfaXwMPv5VsV0kT
8RrUf+Od7rdRvxwtLiVb2+zRU8RrkZbTX5Fa3Ut+LRy9Xq0+FXSeUYuk2Ua/
1DqG+Fh0Zsx4L3x28rEYXM0s3b97uf0PDxs1fw==
         "]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQFxDhfqxS8X72E9AOY6xDncVF36XSz0y34wvyHO
4aV89MlXL79D+AfiHBou1bZ8kvgK4TPEO6z5xhUsdPI3hO8Q75Bnee7L2uWM
EPMa4h0+zTT3m+HHAuEfiHcIkJy4b1szA4TPkOCgX5Jy3NHtOUS/QoLD6Uxj
/tZ3UPMdEhz2vekI+LvrJ4SfkODQ3P7rwmnmR1D3JThkLjjCZGX9CsJfkOCg
9bnnwrW/n6DuTXD4uIN723MFLoh9DxIcAuWnMx1pYIban+jQ7yfM8F4Y6l+F
RIcdia/Kd7pB9TskOvwrZlr39eJfqP2JDqcjnXXy/P5A7U902PXmo5eGB1T/
gkSHIJW/Lz8yPoPan+jAWs3NH/CiyR5if6KDRY2tZwD/4/0AyP2GLA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQF6Dmy8kedLg9kOQPgGDpfichuDrv3fD+EbOrB+
TprMpPMPyjdy6DltaLkz8zuUb+wQ0ZyYLTjrEZRv4hBSqmb9adkHKN/Ugalj
Mifb/K9QvpnD5HOdKVe7YfLmDlZWy08zxd6G8i0cjhSLNbm+eQzlWzqENX+c
zsW43x7Ct3I4+fvktcSq21C+tYO6iH75O+4nUPU2DiY/Wfhrv3ZA5W0dRH+G
Bm1MOwSVt3PwOnOnPujWESjf3uF4mMMZ1a0noXwHh/7NyooHd7+C6G9wcGgT
da++qPsJap6jw4kg63OWzw9A5R0drE7H3P257CVUv5PDnEvnGc/2fYLwG5wc
fl+N/uXX8hkq7+yQXWTuN6cZGl4Nzg6xloyLbYNh/ndx6J9U2HLU7g9U3sVh
oXHU1LttTND4cXWY07b495RaaPw0uDr4nn+qtVkJFl9uDpcDppx+8Wg31H1u
DgsPMVTuLHsPdb+7Q3TDQeEJVTeg+t0d4raayQWug4W3h8MlngbdRMZjUHkP
h2dX+FXZzsH85+lwsOfbjkfK0PBu8HRwkgoLnuW2GGq+l4NIWIDW0v4vUPu9
HEKdX4f+ZP8Plfd2+OwQYzZP+rc9AP4lxxo=
         "]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQYNPg7qZms+FF38vR8i4Oug2slas96T6QBE3tfh
JaP8REErVgifwc9BoP6a3pmT3FB5P4dzr9osa3Zch+r3d0hmFvt64sMLe4i8
v8OBOS47svSeQOUDHLozlSXmnPsE4TsEOMzbrZh6W/81hN8Q4DBr3W+F03Yf
IPwDQL5+/Y97HzkcIPoDHayVi7iufbwFMd8h0GHKwSUN+sU3oPoDHdhfzZFa
nnUBqj/QofXspjeSlw5B1DMEObD+P8X0U+0tVH+QQ/OadS/nTP8GdW+Qw1Qf
yZyWAwIQ+w4EOTxuSJWV4/4D1R/s8FvxTuUhjo9Q9wc7MDmx38ufcgZqf7BD
efrt2+0MXyHqDwQ7XLgrOXPhWRao+0Mc7lnbJmsLQe1zCHGwsxSoDL4jDJFv
CHFo7Hv78txeQQcA7s+Etg==
         "]], 
        LineBox[{{84., -0.6939944743164654}, {85., -0.4191071799202441}, {
         86., -0.2726157008421421}, {87., 0.14623708038054714`}, {88., 
         0.652003124175003}, {89., -2.065363343440209}, {
         90., -0.9576546744402094}, {91., 0.6575852794796327}, {92., 
         0.6188837845858314}, {93., 0.9650389201026002}, {94., 
         0.005120501847417061}, {95., 0.03748390881451219}, {
         96., -0.2523208755262686}, {97., -0.2160127432585852}, {98., 
         0.5602251821581938}, {99., 0.10053202873544523`}}], 
        LineBox[{{105., -1.1479752654207653`}, {106., -0.5119918267393148}, {
         107., 0.35014046226164247`}, {108., 0.5742622708477437}, {
         109., -0.3424557893381753}, {110., -1.1887673439362845`}, {111., 
         0.3821315632755276}, {112., 0.08015384022176109}, {
         113., -0.08860869253264464}, {114., 0.9450731122388337}, {115., 
         0.4667224833774288}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQFxDops4VvnuLAdAHMd4hy8ZBfFWb16uR/Mb4hz
uLu0/X/psq8Q/oE4h+TMh0ZbV/+A8BniHeJPezHH3maE6o93UOP8FbBjFgeE
3xDv8GeixMsXc6DmH4h3uM1XtexYzBeo/gQHxet71s/ZctgezFVIcHhot+KD
+c9PEHmHBAetk5f9f66Dqk9IcChvFrbNMn8FUd+Q4LCgoYHNLGMShL8gwUHc
M+HuTYUPUPcmOKy6EL54+3leiP0PEhw2mMyeUWrzG2p/ooPqfmlZ26UfIXyF
RAfDi1bnXrP9hNoP5CvfVrmwAeq/hESH0GnFqgk7oPobEh2a/yz8mbQfat+C
RIdpRdM6lsjchdqf6KCn9dzow5TNEP6DRAfHdS/bEspe7QcAeymEwA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{15., 0.626755934618392}, {16., 0.12980311596935845`}, {
         17., -0.19351040921857365`}, {18., -1.2314626842114083`}, {
         19., -1.2664222339437556`}, {20., -0.9114554681396302}, {
         21., -0.779174730640805}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQHmDg+/q2+a5v9/P4Rv4dCdeDTg5NMfUL6lw4He
95LLwr9B+VYOy2rffL0a/BrKt3ZgeP3vntOUX1C+jcPPl5JcqiVfoXxbB1vn
lPrtEz9D+XYOT49u1tD7BzPf3uH65NlzVy6A8R0cWvtTJWffgapvcHDYunrq
dIsMmHmODm83V7vNmf8HKu/osOFUB4POQyifwclhp0PdZVV3mLyTQ9YhMxld
L64DEHlnh1d+pe/56n9D5Z0dzE2KeXhtmKDyLg47PvyMOWQE5Te4OFyriXVb
/4sRKu/qcF+vNSNkHky/q4P/lJnMIgKcUHk3h8ptFWnavtDwaHBzuHouWbz6
4RWo+9wdlnUZytce3LgfAFMNf1A=
         "]], 
        LineBox[{{57., -0.662205069760214}, {58., -1.3953776632215231`}, {
         59., -2.6682357949001756`}, {60., -3.2225512283926907`}, {
         61., -2.996894131466989}}], 
        LineBox[{{63., -0.3743397662031465}, {64., -1.3062060501743993`}, {
         65., -2.2333425187938034`}, {66., -1.5842160181964635`}, {67., 
         0.46612494223194917`}, {68., -1.3931304238256907`}, {
         69., -1.396936684233588}, {70., -0.29113821502321147`}, {71., 
         0.3969193670539752}, {72., 0.11053148199258737`}, {73., 
         0.9216802138675902}, {74., 1.28229870139616}, {75., 
         1.6464247193839052`}}], 
        LineBox[{{77., -0.6272414476539397}, {78., -0.5026566006456221}, {79.,
          0.6441329220969929}}], 
        LineBox[{{81., 4.234998296355219}, {82., 3.46850507561719}, {83., 
         0.18675484812577567`}, {84., 0.37225621190662767`}}], 
        LineBox[{{92., 1.6215530321430347`}, {93., 1.5602848990224347`}}], 
        LineBox[{{122., -0.6294173418393346}, {123., -1.7854145878255003`}}], 
        
        LineBox[{{125., -1.3299971758039821`}, {126., -1.5507630941167747`}, {
         127., -0.13147247420311825`}, {128., 0.22017580317231963`}, {
         129., -1.3942890242289603`}, {130., -1.4890933631283148`}, {
         131., -0.49249368756074263`}, {132., -1.1726144353518393`}, {
         133., -0.3608788950051161}, {134., -4.167890357499295}, {
         135., -3.041411481555374}, {136., -1.5189031269791216`}}], 
        LineBox[{{138., -0.3052211231353917}, {139., -1.5045733825208825`}, {
         140., -1.260039795992607}, {141., -0.6618326946953458}, {142., 
         0.26712893439909613`}, {
         143., -1.1160617814921556`}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.25, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {12.333333333333334`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{12.333333333333334`, 143.}, {-8, 8}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{{15, 
         FormBox[
          RotationBox["\"Wed 22 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {19, 
         FormBox[
          RotationBox["\"Sun 26 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {23, 
         FormBox[
          RotationBox["\"Thu 30 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {27, 
         FormBox[
          RotationBox["\"Mon 4 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {31, 
         FormBox[
          RotationBox["\"Fri 8 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {35, 
         FormBox[
          RotationBox["\"Tue 12 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {39, 
         FormBox[
          RotationBox["\"Sat 16 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {43, 
         FormBox[
          RotationBox["\"Wed 20 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {47, 
         FormBox[
          RotationBox["\"Sun 24 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {51, 
         FormBox[
          RotationBox["\"Thu 28 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {55, 
         FormBox[
          RotationBox["\"Mon 1 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {59, 
         FormBox[
          RotationBox["\"Fri 5 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {63, 
         FormBox[
          RotationBox["\"Tue 9 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {67, 
         FormBox[
          RotationBox["\"Sat 13 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {71, 
         FormBox[
          RotationBox["\"Wed 17 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {75, 
         FormBox[
          RotationBox["\"Sun 21 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {79, 
         FormBox[
          RotationBox["\"Thu 25 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {83, 
         FormBox[
          RotationBox["\"Mon 29 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {87, 
         FormBox[
          RotationBox["\"Fri 2 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {91, 
         FormBox[
          RotationBox["\"Tue 6 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {95, 
         FormBox[
          RotationBox["\"Sat 10 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {99, 
         FormBox[
          RotationBox["\"Wed 14 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {103, 
         FormBox[
          RotationBox["\"Sun 18 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {107, 
         FormBox[
          RotationBox["\"Thu 22 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {111, 
         FormBox[
          RotationBox["\"Mon 26 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {115, 
         FormBox[
          RotationBox["\"Fri 1 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {119, 
         FormBox[
          RotationBox["\"Tue 5 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {123, 
         FormBox[
          RotationBox["\"Sat 9 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {127, 
         FormBox[
          RotationBox["\"Wed 13 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {131, 
         FormBox[
          RotationBox["\"Sun 17 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {135, 
         FormBox[
          RotationBox["\"Thu 21 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {139, 
         FormBox[
          RotationBox["\"Mon 25 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {143, 
         FormBox[
          RotationBox["\"Fri 29 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ovi\"", "\"PK\"", "\"Oktopusz\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9278097774751415`*^9, {3.92780985192288*^9, 3.9278100103450017`*^9}, 
   3.9278101159892635`*^9, 3.927810588711115*^9, 3.927811271811715*^9, 
   3.927811616238203*^9, 3.9278124305753593`*^9, {3.9278127409753437`*^9, 
   3.9278127629201746`*^9}, 3.927869641507431*^9, 3.9278698234838996`*^9, 
   3.927869896259491*^9, 3.9278699617509623`*^9, {3.9278700801925*^9, 
   3.9278700972792287`*^9}, {3.927870253913789*^9, 3.927870282362115*^9}, 
   3.9278703797007046`*^9, 3.9278704558923173`*^9, 3.9278705354244776`*^9, 
   3.9278706073230314`*^9, 3.9278708876614003`*^9, 3.9278711557760887`*^9, 
   3.927871234971797*^9, 3.9279512428456917`*^9, 3.9279517509873734`*^9, 
   3.927952156227178*^9, 3.9279522615580626`*^9, 3.927952363491702*^9, 
   3.9279525688310175`*^9, 3.9279526711486025`*^9, 3.9279530992324934`*^9, 
   3.928296929868888*^9, {3.9283066473158937`*^9, 3.9283066514606056`*^9}, 
   3.9283067463001623`*^9, 3.928307204688322*^9, 3.9283079001965995`*^9, 
   3.9283080015335746`*^9, 3.928313129255192*^9, 3.9283143888277073`*^9, 
   3.9283229337516856`*^9, 3.9283229878510895`*^9, 3.928323071530594*^9, 
   3.92832313385536*^9, 3.9283252432230597`*^9, 3.9283275961530905`*^9, 
   3.928329052589297*^9},
 CellLabel->"Out[2085]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatedDailyTempDivergenceVsTrueDivergenceForCycle", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"simulatedSeasonForCycle", "[", 
           RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "]"}], "&"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Select", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
                   
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "+", 
                   
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}]}], 
                 "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", 
                  RowBox[{
                   RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "}"}]}],
                "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Between", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", "]"}], "==", "False"}], "&"}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"roomTempsDaily", "[", 
                RowBox[{"[", 
                 RowBox[{"roomsOnCycle", "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"simulatedSeasonForCycle", "[", 
                   RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
             "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                "]"}], "&"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Select", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]",
                   "}"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Between", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}], "==", "False"}], "&"}]}], 
               "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"simulatedDay", ",", "1", ",", 
        RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927805610881756*^9, 3.9278056117445335`*^9}, {
   3.927805730683941*^9, 3.9278057465898943`*^9}, 3.9278058891241217`*^9, {
   3.927805919929137*^9, 3.9278060081913595`*^9}, {3.9278061386478653`*^9, 
   3.9278061841553073`*^9}, {3.927806355564726*^9, 3.9278064867956886`*^9}, {
   3.927806539772357*^9, 3.927806581083539*^9}, {3.9278071099977927`*^9, 
   3.9278071158057127`*^9}, {3.927807191336088*^9, 3.927807226999176*^9}, {
   3.9278074911562176`*^9, 3.9278074931586113`*^9}, {3.9278083676178694`*^9, 
   3.9278084321919017`*^9}, {3.9278086126600523`*^9, 3.927808661827595*^9}, {
   3.92780874871168*^9, 3.927808756942138*^9}, {3.9278088229157777`*^9, 
   3.9278089729629126`*^9}, {3.927809096706027*^9, 3.9278091052627287`*^9}, {
   3.9278097491209464`*^9, 3.927809749455613*^9}, 3.9278105995269256`*^9},
 CellLabel->"In[2086]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
               "simulatedDailyTempDivergenceVsTrueDivergenceForCycle", "[", 
                RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Mean", "[", "#", "]"}]}], "\[IndentingNewLine]", "}"}],
             "&"}], ",", 
           RowBox[{
            RowBox[{
            "simulatedDailyTempDivergenceVsTrueDivergenceForCycle", "[", 
             RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
            RowBox[{"[", "simulatedOrTrue", "]"}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"simulatedDay", ",", "1", ",", 
           RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}],
         "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Map", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"#", ",", "\[IndentingNewLine]", 
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"StringRiffle", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringSplit", "[", 
                    RowBox[{
                    RowBox[{"DateString", "[", 
                    RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], ",", 
                    "\"\< \>\""}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
                  "\"\< \>\""}], "]"}], ",", 
                RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
             "}"}], "\[IndentingNewLine]", "&"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"startDayN", ",", "endDayN", ",", "4"}], "]"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         "Automatic"}], "\[IndentingNewLine]", "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"startDayN", ",", 
         RowBox[{"-", "4"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"roomNames", "[", 
           RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}], "}"}], "[", 
        RowBox[{"[", 
         RowBox[{"simulatedOrTrue", "-", "1"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"simulatedOrTrue", ",", "2", ",", "3"}], "}"}]}], "]"}], "//", 
  "Row"}]], "Input",
 CellChangeTimes->{{3.927809178345389*^9, 3.927809179103574*^9}, {
  3.92780922682268*^9, 3.9278092399706326`*^9}, {3.9278092733328257`*^9, 
  3.927809420004166*^9}, {3.9278094726075277`*^9, 3.927809527399455*^9}, {
  3.927810016052391*^9, 3.927810097525054*^9}, {3.9278706438494186`*^9, 
  3.927870680315133*^9}},
 CellLabel->"In[2087]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kW1IU3EYxa/LJWrJPghOEcMMFURNy9Ta3PFl83VzW5oRGRkqEoEomrga
LQt6kfSDlWaWDNQoXyi1IF251JymQWFmLJWkVLQppdbSLcvacy/8ufw49zzn
+Z/rfSJfmcNhGEawef69bU8QBgqrTQ+5DrDxbpwxjuY/9uQQh2Aou37HiMmO
OBQp19zPhztviGy8B0UYX+elWYn34uZs5+r0xGfiMBgqtNbXShPxPngFL/Wu
hRmJw1HmMSkJOrxIHIHxkKyfzgfZ/EhY0mucSvvZ/P1oVs+uLubyiA+g++zJ
u3EF0+QXoDVPN2CuXyYW4p2+pGWuYYk4CsIRD7thnxViERyKAxnfGTYPECwb
xH4yytMAF4e46jtlbD/R6PsYZTBcsSc9Gs6rmRe/Dy7QvBhkpvZuWnQ9Nj0G
I+lNnqL3BtJjUXT/bYn4AUP+WAjaOX7xz4iZOPA83Wrcb1MfmjgEVKu8Lnsv
2+YxYlSNNzbF6r7SfDHcVJGn27LXSJdg3rVyWjND/0MjgbVBpeUK2f3jUVfW
xWvpNJO+yVuPpWXXOpKegMJdj3KNbVzaLwF814nAmFvsfomwi16u0JyzkD8R
LtJGiePUb7pfEra96PrE17H9JSH1i391pnYL+ZNhcukJVYyx/SWD8UEl48/q
KUieLJhacGL9KZgzGvrcdv6h+VKMSQubh2+w95PCu3jo6JN0ug8jg6G0o7Vd
sU66DFZV7fWXvHnqJxXFFRZOVfk09ZeKvlPZsknHFdLlyBLmuDzPsNP/R8hR
tHZcWjdqpu/lsHTkux0p/2ZjvRzziquztf1svwqIIoQhr/S9Nh0KXAjo5mR8
+EF+BS7dO8QPKF8lvwJvJMoN354Nyleio+pXt2E77QsldGZt8FM1F7l5xfaD
aiXl8PEXd9EZNA==
         "]], 
        LineBox[CompressedData["
1:eJw1k31MTWEcx49uqUQlNBZ2abcXK7K83Jj1xTJ1mbrn3u693bdzwm2hmLCy
4niZZjYxrlhltbhsbRLmnY4mpT+i6OIPtG5IUytFKQmdX2c7e/Y9z/n+Pr+X
55mXulO91Y1hmHX/3v+rdxR7YuCQGszYM1NaRTVQydtmDU2g7ywCFlTmbWuQ
iWMSLPZlqoIfHeurHtMCi5hKyIMPb4uV/CymdV9s27jut6QZDRot6Ucrc9yl
eNDgsTDyLb/TX9KCBo65t+16d2/ia7BLfe9ZuaOD/Fp423c0ae42Sjxo8TTt
fVV5+zhfi+oppr3ZtZ2SFrVIT1rrafrdRf5kaM75DPm+dSN+Ml7vCX276fkH
aV9IRkdz/Y85GRRPTMbpEy1BTIWT/Dq4e/qdqnvhkjR0WB/p80c28Iv8Ong4
J19T1FN9og5FSk3OuzVTqX96KCbYaj9XyIivx43izI6uhS8pfz2eOA7vu5L3
mfqnh9vP1GxTURPxDZAdTLw+/IH2YYBuSmi4TTFCfAMKG+S5rhgv4hvACFZ9
03SB/ClIGP3anHGnh/qXAsGwJG2ROo/8KVhdaErPV7wnfgrYIzlbN7u+k9+I
TIVgi7o0nr8RNXV84JH94/MzomB1VnzqrWHyG9GYVWPf4eiWeIwJ9/33sIMh
vZS/CcXRiYOJFQPEN6EkIm/pCEvnTTQhIPd+rE8A1cOYEdPuCkwYGiW/GcVe
vWUrnbXkNyNEVecR3N9GfDPaPQ6cjH74hvK3wJHR9qazrZ/qt2B3gSppfjj9
L1jgc6Nb5c8Nkt+C+onKm112ypexgmnVfLIE7Se+FecR1GyM+0Lzs2KmXMlo
Dz2h82OF4XV2hDJEpPo5dG0oiyz+wkj1yDk8EGplgWepXnB4WRVWpPal88Nx
2B4e6bIN+1F/OShXhH80Z3lIupSD14Wki99y6X6JHFRhx72cv15JupVDzeIt
AaPL+ih/Ho290Q0N3eSX85idv6ZvvRvNDzyOJk1a9TFhIvF5iLNYNs6d7pvA
oyRthetyfLsUr5THBl9nz7Kr/cTncb7lzN5UO/lbeRjVPctjZ3jiL3KVTRw=

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kXtIU3Ecxddm2mz94aMy308MRZnm+7XjI+druo0KyyQVa6JSFpqlWdOo
zCLCSWKQERT0sNRIMpNplI+ELIgU3ynDF6amZrk5rbjfe+FyOXx+55zv73sd
Mk7Jj3M5HE7Iv/f/l3k8kaKw3eq1qm5jtBD81hSnHvGAiNFeMNBZ5vx2HCfu
DR+15fhCwAbxfcg+0cTzD+KC0T5QvC2xHt78QdwXH8Q+2vXpNdJ+KEv/stIr
+UXaHy2F7uZP+v6QDkBh9bG6gqssD8RkkX1xwzdjyg9Cnd47UzJuTjoYhsnz
0is3F+l8CGZFUFTxeMRDYdR4x1CgYucLw0CBVX/OFIe0CIISX5fQzlXyA5Wn
/SRdYdSnBJwVzqalZ0zofDhKa3s1c7coTxmO4hftZfoi1h+ByEAbG273MKOV
Ebh41l57UDBKPBLexfFB2VUzxCMhdUnxyOXzKT8Kujyu232TJeJRGDMaKdih
n6f978dskf1ct7SF0cr9KFd1ekwphohHo37Xp6fm27fRfNHoWUhNtuswoHwx
DpULuaGqTcoX40DaZvtaALvfGFRp10fMpIbkj4HL7LO1PiW7r1godFnRS4nr
5I/FqL9jTqNmC/E41FiYDtZWGJE/Dq8KLZfdX7P58ajJHYrbkywgHg/19UcX
9may90/A+wpx3mc+25+AG4PD1l4a9n9KcHS3Z6pYS31KCawHMgqsNDQPJxFf
R5vz72WzPBEzE22Obtox4kkwrn886d7cT/Mn4fnUkUUnG9onRwr1z0qe68tp
RkOKjJA+YVr1d9q3FHXchx0bimVGt0vh7WC/eCnYjOaTYcHu8IrnbR2TDxm4
4kzVjO0c+WWAqNU5/+ME+WV4cPJ81rWdGuqXw6Ff+EYf2EV+OZrFl21dNU1t
Jg1336Wfk1OPBf4C3wIPHQ==
         "]], 
        LineBox[CompressedData["
1:eJw1kwtMjWEcxr/odhIm3axOIrewLjSzkR7i0GbSuXXu5/uI1JBDLq2tjlGU
tIZlUtRMcp0Vi5k6yCKXlCO0ytHFGBU5x07tLLfv37d9e/d87/v7nv/zf993
xqY08ZZxDMOI/r7/RvWS7MNhhWIw/x9/fjSJEV2X7rWj152+S5AZv7Bll2S0
/r+EBPPKtFFxyU94bZSgOfJJQ7VyOIbnJRDk6VPmVwqIl8I/99JFoYPmIUVf
mLuL9qIfP2+UYvmDT+l+nz3J/6++Vmh4G/iZX8/I4HTGd53Z9y7xMhziJrfM
iO8lfxk0pyOF7XvbeG2SodOp+LbB/JXXjBwjqwLDQu024uWoFjROvaHo5bVR
jn1DU62ltkHi5WiPSlrTNkDrmURcFrU698hGiU+EIU6d5BHgQvUnImLP4skl
0p+UPxHSIavB7u1G+RVw6Q3Kf2V34jUUKDjaOFy78R3Vr0Ch6FRT8yPyMykQ
5xsTFL3gB/krcUG1MvhY+RD5KzFzvVvzUt0Dql+JWIf8uV3gIF6Js/nXDVfP
1ROvgjBzqCMydoD2T4UDryISmixfiFehWxQ63fFyhHgV7rtXJZcIGapfjdez
i88EbKN6oIY56fi1vJdj+dXImZCw+074L+LVsBTss82cZqf+ayCKTk3+Nvib
eA0WBYaUpTaM8Rpk+KQs02wkbdKgomDni0k3KQ+jxUO/I64HW8f6p0W6dUNW
5XYT1a9FxqbaE3PE3eSvRZDtzWhWeQPxOtQML5+1+14L5dehy1zr+siTzqNR
h+y0NauzftcSr4NX//6fnT+oH4weqd4+zTllj6l+PQSW8JYVpX20f3p4iRvZ
sLpq4vWY4D0S8tA+QDyLA/OEV5zy6D4Es9gc9Szt5vBYHhYdS78MZpZ48Jpl
8d1qNK8N8qH+sPj4fjA/usiV1+UsQurq5y7IJd7E4sLEOwvD+z7wfhYWXTXd
1xNqqN8MB4O18rxwOuUN5uAwJod+ShpP/hwq0oo2F6vo/yyH2VundAa0t1I+
Dk8fzxonu0vns5xDQL9bRE8V8SYOy/afTOkqpXwWDvNvLRnf5GyL+QOmElSl

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kw00lXccxx9jnBlm7o6sQjRm96iIXhbylXfhuve6uC4twoxEQrOd6XpJ
yFtOCZvNGSvFhsZWEy6yzuacwtal9SaXyq5MS7e7Gq2d53fvOc+553u+z+f/
/f5///9jFZsqiH+FYZjYl8///+xvPYx26g9E22uD1Q4o9n0vQd751J3Vjuio
H1H8PHKX9Ea0Vva5NW77vY/VTvBKSFh5jnOPtDN01k9kGFvISW/Cv3cGbK89
k5HejCjnhmSzXTdJb0HU5e+5+skzpLdikzonY/fWW6Tfx2GTji/POShIb4P4
DW57feEcaRcUGfnYK9yVpF1R3nTWTtiq6eMGYz/XEFP5XdLbsdFpTGx8bJK0
O7x5xsXqu5p8oKwyLad18QWrpYD21ZNHfrR5Tr4HlmqqOFfLVOR7IHp/Qe5i
uZrmswMHvrlUydMZJX8H8l5fuu+xfYp4TwTYdyzY9CjZ96WeyI/a9/iLcs08
vfBC+7fPepXDxHthv/1yzXEDOa3vDbvNs65fWc4Q7437H5+OL8laJN4Htd0f
mtkELhHvA1GF/ga3Yc35+mJXaVnQ9ft0vlJfjLpZBvucbKb1/cA0uBvNH80k
3w+ioH7rtDXp5PuDsTvFyzRMId8fTo2P7oQyyeQHoIXbWWOgk0j5AWDUfN1e
7STqtxNM+/T5cos44l/q81Wvjn+UQH4g6sSfrvg1O5X8QDClN1pq9bJo/SD4
dBvsc+TmkR+ElqQFYXpPLPHBL/fZe2qdPZfyg/Gd4R9Z4vO6tH8ennJc3Gt4
xqyW8mBRJ1CknND4ISjqL1Cd8hxn10cI8hOu/3PkwiTlhaB07Fz/yCfPWC0L
QWBajOPtNl0Zy/PR5SAp4+T2s/ngI27Qv1YrY4l4PtJzD+XNv6vh+RieLLGr
ziSfEcDi2JlZvdtPKF+Auji/aVP5a9RXAIPGBfPxo9psnkyA5YlV3IHTWtRf
iAN9tubqJAXxQtioH+o9nrhH+UKsPhzTmDIwR/lCKJ32OjMNRsSHIjB+3cGh
Lg6rEYqzMSdUb8/R9yINhTSrIWySb8L6slBIHtnGfH2H5smIcHGDya51zX9T
vgiilUsVxVnTlC+CQ3f+g7Buuo8yEdqvdI7E++kRH4ahjKLhwap54sNgbXv8
8/ruVuLDcM088WDrPuorC8PqnOwzompT4sORs2rqSdPQCuofjtaNNwvc2t6k
+YVDcWHQsm6U+srCYfXcMac2XtM/AtM9NjWWMuqHCGjxMvamlukTH4HTe2pt
t3Rq8iOgzHww9UMv+YwYef27r6ywovOCGLf+alJx2mh/UjHWlixHSlUM8WJ0
zURXd1pp9h+Jdz5wsf5FYUh8JOSFdrOJPXQ/pZEYPSQztdH9k84vEmvS79Wn
/jRL90eCb7mplxwrHtL8JHAVFmavv2xAvAQXg9fEBPBUxEswVhrRfCPiLQTF
Gu5pV0qohxn+Ax2hzOg=
         "]], 
        LineBox[{{115.79185045348399`, 6.}, {116., 5.765709235367469}, {117., 
         3.7863167278716716`}, {118., 0.6118649430828265}, {119., 
         0.5337298470362387}, {120., 4.577807008949769}, {121., 
         5.737474453838733}, {122., 4.958151423353849}, {123., 
         4.049430941428201}, {124., 2.9165063340170767`}, {125., 
         3.4911543410826855`}, {126., 3.8779703679821473`}, {127., 
         4.56502708085545}, {127.67008676076355`, 6.}}], 
        LineBox[{{128.38560971985714`, 6.}, {129., 4.8743360039255625`}, {
         130., 1.7134898461823844`}, {131., 0.0005614554472603098}, {
         131.93212933667945`, 6.}}], 
        LineBox[{{132.42726870055972`, 6.}, {133., 5.4144467930069915`}, {
         134., 1.625862331758894}, {135., -1.068198415059706}, {136., 
         2.273842025669729}, {137., 5.89781986501919}, {138., 
         4.1260617617899715`}, {139., 4.9905601295706505`}, {140., 
         4.218200756702539}, {140.84615899283256`, 6.}}], 
        LineBox[{{142.2389334185114, 6.}, {143., 
         5.579544854837173}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {15., -4.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{15., 143.}, {-6, 6}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{{15, 
         FormBox[
          RotationBox["\"Wed 22 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {19, 
         FormBox[
          RotationBox["\"Sun 26 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {23, 
         FormBox[
          RotationBox["\"Thu 30 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {27, 
         FormBox[
          RotationBox["\"Mon 4 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {31, 
         FormBox[
          RotationBox["\"Fri 8 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {35, 
         FormBox[
          RotationBox["\"Tue 12 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {39, 
         FormBox[
          RotationBox["\"Sat 16 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {43, 
         FormBox[
          RotationBox["\"Wed 20 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {47, 
         FormBox[
          RotationBox["\"Sun 24 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {51, 
         FormBox[
          RotationBox["\"Thu 28 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {55, 
         FormBox[
          RotationBox["\"Mon 1 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {59, 
         FormBox[
          RotationBox["\"Fri 5 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {63, 
         FormBox[
          RotationBox["\"Tue 9 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {67, 
         FormBox[
          RotationBox["\"Sat 13 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {71, 
         FormBox[
          RotationBox["\"Wed 17 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {75, 
         FormBox[
          RotationBox["\"Sun 21 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {79, 
         FormBox[
          RotationBox["\"Thu 25 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {83, 
         FormBox[
          RotationBox["\"Mon 29 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {87, 
         FormBox[
          RotationBox["\"Fri 2 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {91, 
         FormBox[
          RotationBox["\"Tue 6 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {95, 
         FormBox[
          RotationBox["\"Sat 10 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {99, 
         FormBox[
          RotationBox["\"Wed 14 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {103, 
         FormBox[
          RotationBox["\"Sun 18 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {107, 
         FormBox[
          RotationBox["\"Thu 22 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {111, 
         FormBox[
          RotationBox["\"Mon 26 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {115, 
         FormBox[
          RotationBox["\"Fri 1 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {119, 
         FormBox[
          RotationBox["\"Tue 5 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {123, 
         FormBox[
          RotationBox["\"Sat 9 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {127, 
         FormBox[
          RotationBox["\"Wed 13 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {131, 
         FormBox[
          RotationBox["\"Sun 17 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {135, 
         FormBox[
          RotationBox["\"Thu 21 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {139, 
         FormBox[
          RotationBox["\"Mon 25 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {143, 
         FormBox[
          RotationBox["\"Fri 29 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, Automatic}}], 
   TemplateBox[{
     GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{15., 2.293493975903614}, {16., 2.197543859649123}, {17., 
           3.3016239316239324`}, {18., 3.488571428571428}, {19., 
           3.937874999999999}, {20., 2.7501599999999997`}, {21., 
           1.1561904761904767`}}], 
          
          LineBox[{{23., 2.4320689655172405`}, {24., 2.3991139240506327`}, {
           25., 1.953642857142857}}], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQHWDntrn3NOVGB3gPBtHHZyb3KQN2CE8m0d1k//
mbHX/Zs9hG/nMFWtXUPO7wuUb+/w5eWa9MmPYeodHFawVHpNWA6Vb3BwUJB0
m5SowgqVd3S4xzdjnUPIf6i8o4PM/9rbust/Qs1zcqg9plrq2HEbKu/k4FKv
vvpp70eovLND9QpvfS9vqHkNzg5O52rLGA1h5rs4vCv49cNd7itUv4vDN42Y
/kOpz6D6XR2EF6WHPkz+DJV3dbhYs+iz/UqYf9wceB6E91VsYYKa7+awfP/f
SRaFsPBxd8hbcJnNKvcDVL+7g4bg7QlLN57YD5H3cOhK8XTauontAETew+FF
zLJufw4OCJ/B08H5Uc5CuXx+qLynQ+1pg6lK1dxQeS8H++gdvfYGDFB5L4fi
exl/7dMZofLeDg9Tm+oCWJkPAADx3X0V
           "]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQH+DtJB7ocNd7+yB3Mb/B08JmSyzHS7sR8iH+DQ
6btU8fm/lxC+Q4DDGcZpuftkDkD4DQEOt2ZJvZux7QVE/4EAh/vcOb685b8g
fIZAh47c6TfKOi9C+A6BDsZV0ddezXgE1Q/kl/zPDvY/CdUf6JBwfn3Bp68f
oPYHOWhPv7rj6VIo3yHIYcecBMlKAXYHiP4gB7Z51fzTZbgh/ANBDusYdl6P
OfEYan+wA9fNNTY8D/5D9Qc7PNm2u+hJ0h6o/cEOga6cOhMLT0P4B4IdvgjP
bLnW9xSqP8Rh8jy1EsndP6DuD3FYdD9H9tfZZ9DwAsqXWy4+6nMG6v4QB7nW
14E73t2A6g91mFjLt5Lz2G6o/lAHJj41+b4Vm6H2hzoktwpN0HK7AtUf6rA1
wbRBl+mjPQBPQoUf
           "]], 
          
          LineBox[{{90., -0.004434389140271543}, {91., 0.9095081967213114}, {
           92., 0.6483251231527094}, {93., 1.3148717948717947`}, {94., 
           1.8464864864864865`}}], 
          
          LineBox[{{97., 0.2229896907216495}, {98., 1.9889247311827953`}, {
           99., 1.0185314685314686`}, {100., 1.4917757009345791`}, {101., 
           3.075}}], 
          
          LineBox[{{103., 0.8223376623376625}, {
           104., -0.15317535545023708`}, {105., 0.2353293413173654}, {
           106., -0.5638571428571425}, {107., 0.7884117647058824}, {108., 
           2.4979296874999997`}}], 
          
          LineBox[{{111., 1.3876000000000013`}, {112., 2.1624999999999988`}, {
           113., -0.019999999999999723`}, {114., 3.2858620689655185`}, {115., 
           3.4368518518518534`}, {116., 1.9841935483870965`}, {117., 
           1.6204878048780493`}}], 
          
          LineBox[{{120., 1.2140677966101696`}, {121., 2.322573529411765}, {
           122., 3.0657268722466964`}, {123., 2.1276512455516015`}, {124., 
           1.1284584980237153`}, {125., 1.5535245901639345`}, {126., 
           2.3203333333333336`}, {127., 1.664684684684685}, {128., 
           2.6389237668161436`}, {129., 3.5688297872340424`}, {130., 
           3.7694300518134716`}, {131., 4.912000000000001}, {132., 
           2.82932735426009}, {133., 2.589005235602094}, {134., 
           2.468921568627451}, {135., 2.9139855072463767`}, {136., 
           3.983571428571428}}], 
          
          LineBox[{{139., 2.0371428571428574`}, {140., 1.6862443438914028`}, {
           141., 1.3545147679324894`}, {142., 2.467356321839081}, {143., 
           3.466063829787234}}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{15., 3.5476146788990808`}, {16., 2.7338341968911917`}, {
           17., 1.424574468085106}, {18., 3.8599056603773585`}, {19., 
           3.871975308641976}, {20., 3.005494505494506}, {21., 
           2.687692307692305}, {22., 2.3111312217194566`}, {23., 
           2.2581725888324873`}, {24., 1.4836477987421381`}, {25., 
           3.196931407942238}}], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQHWDsvruD5dbP9lD+HbOFw60tl7U5vDAcK3dXg+
L0NAUQbGt3MQ2yPlO38RG5Rv7/DO/OlOlk1/oPodHPbs3cZez8AMkW9wcNBz
XzZ9LQ8nVL2jg2piQKOrJQtU3tFh/6YysehoKJ/ByeGdH/Pj8ngGqLyTw17d
nkWT5/6Fmu/s8OVr88mDnZ8g/AZnhxauHbavC3ig+l0c1AKThUzVGKH6XRxk
9LiCDj2EqmdwdUhNA4JjMHlXB7Yjyy5NKIb5383BIVTEslqVGyrv5jDxnl5w
yoe3UHl3h33F5xnCP/6A2u/u8CZwh1xr9hWovIeD5szeSTc1eA5A5D0cNmcY
77rbzA3hM3g63P6xK4hfgB0q7+kgo+nxwHETB1Tey+HppIszjX8IQuW9HCoC
9gQXx/zcD5H3dtgYxbohivXLfgDltXrX
           "]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQYNvg6ZRtaJ0dMFHCACfg6/rkxXfKH9Yz9E3s/h
k2j8R9H4p/YQeX8Hxni3tg97bkHl/R16f1s4S+27B5UPcIh8fNy0LuY2hO8Q
4PC+xt40btdDCL8hwOFpQgAf29MLEP0HAhweH1jfWxP1F6o/0MFHfZZ+Ct8f
qP5Ah3nF5yyfz7kLtS/Q4YPfp2VPS55A9Qc6XLxeribz+CWEzxDkkLh8Mf+V
ya8gfIcgB6abr+/Kv/8N1R/kIP9w65/c/XwQ/x4IckhOORT0PO0r1P5gh91e
Ulenrf4C1R/sMK3s84bY+8eg7g92UL/96WDj21MQ/oFgB4bdc0+2Z8H8H+LA
x1L+Qyn8IFR/iMNWM/6Uug9vofpDHG5cZnixXeulPQCM1IHu
           "]], 
          
          LineBox[{{84., 2.406545454545454}, {85., -0.23413919413919415`}, {
           86., -0.2695528455284554}, {87., -1.0630281690140846`}, {88., 
           0.4928508771929825}}], 
          
          LineBox[{{90., -0.4023308270676691}, {91., 0.5870833333333334}, {
           92., 1.0832558139534885`}, {93., 1.4576497695852537`}, {94., 
           0.9548520710059172}, {95., 1.9586206896551728`}}], 
          
          LineBox[{{97., -1.1673972602739717`}, {98., 0.655923076923077}, {
           99., 1.732261904761905}}], 
          
          LineBox[{{105., 2.4633333333333347`}, {106., 2.700263157894737}, {
           107., 1.627196261682243}, {108., 0.7606289308176101}, {109., 
           3.2877551020408164`}}], 
          
          LineBox[{{111., -2.1961290322580647`}, {112., 0.9221568627450981}, {
           113., 2.1854285714285724`}, {114., 2.8220689655172406`}, {115., 
           3.161249999999999}}], 
          
          LineBox[{{120., 2.4872641509433966`}, {121., 2.6756129032258067`}, {
           122., 1.6935754189944132`}, {123., 2.944416961130742}, {124., 
           1.6753061224489794`}, {125., 1.6632}, {126., 3.433135593220338}, {
           127., 2.9301162790697677`}, {128., 2.989770642201835}, {129., 
           3.6591935483870968`}, {130., 4.1177777777777775`}, {131., 
           4.905135135135135}, {132., 2.6281958762886597`}, {133., 
           2.831902173913043}, {134., 3.6361797752808975`}, {135., 
           2.8020071684587813`}, {136., 2.1824770642201834`}, {137., 
           4.020607142857143}}], 
          
          LineBox[{{139., 1.1272486772486774`}, {140., 2.103933054393305}, {
           141., 2.3461087866108787`}, {142., 2.7641921397379914`}, {143., 
           2.0762777777777774`}}]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.007333333333333334], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{{15., -0.11228813559322019`}, {16., 0.6792553191489362}, {
           17., 0.5297183098591552}, {18., 0.9150000000000007}, {19., 
           0.1990909090909092}, {20., -0.12812500000000004`}, {21., 
           0.38344827586206887`}}], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQHmDkn7VLo/ht+zh/AtHDR+d0wwP/gUyrd0aJUq
ereZeweUb+XA2ZtpdGDO1f0QvrXD4yNffH3u34HK2zgcmC+lf1flEZRv6zCZ
PdDs1yYY384hkyG/keXocyjf3uHKSuX1F3Jh9jk4mNnsDZqm+A7Cb3BwmDMT
BNgcIPKODqUep39cCP4IlXd0+Pns6pHNSTB5J4d8f9H+8glQfoOTw6pbW1Te
J/2Bmu/ssOvFom69XVxQeWeHki8PVqiLwORdHO69mPef6yATVN7FIdK66cMV
6W9QeVeHRWe239+7jxkq7+qQZLnlRJndb6i8m0PB898rP176BXWfmwP3nwP8
fxyg9jG4Oyi1vg7cIcfpAADFB3Um
           "]], 
          
          LineBox[{{57., -2.0493103448275862`}, {58., -0.2321999999999996}, {
           59., 4.1}, {60., 1.1803703703703705`}, {61., 4.446363636363637}}], 
          
          
          LineBox[{{65., 0.5326470588235291}, {66., 3.2510169491525436`}, {
           67., -3.0724285714285733`}, {68., 0.6503781512605042}, {69., 
           2.302424242424244}, {70., 1.3050000000000008`}, {71., 
           2.3499999999999996`}, {72., -1.3700000000000008`}, {73., 
           2.3256521739130434`}, {74., -3.426315789473683}, {75., 
           1.7289473684210537`}}], 
          
          LineBox[{{77., -3.25}, {78., 0.380491803278689}, {79., 
           1.5194318181818192`}}], 
          
          LineBox[{{81., -3.7270212765957464`}, {82., -0.5414000000000003}, {
           83., 3.1999999999999993`}}], 
          LineBox[{{122., 5.448913043478258}, {123., 5.299473684210527}}], 
          
          LineBox[{{125., 3.1357142857142857`}, {126., 5.024761904761907}, {
           127., 2.4305882352941164`}, {128., 5.670000000000003}, {
           128.38878971795788`, 6.}}], 
          
          LineBox[{{129.0769853404083, 6.}, {130., -0.21999999999999886`}, {
           131., 0.44000000000000106`}, {131.69413233458178`, 6.}}], 
          
          LineBox[{{132.9855849815622, 6.}, {133., 5.964166666666668}, {
           133.03240391861343`, 6.}}], 
          
          LineBox[{{134.15395683453238`, 6.}, {135., 0.120000000000001}, {
           136., 1.2594736842105263`}}], 
          
          LineBox[{{139., 5.7620000000000005`}, {140., 5.75}, {
           140.22805443397638`, 6.}}], 
          
          LineBox[{{141.8151366098187, 6.}, {142., 5.808085106382982}, {143., 
           3.1018181818181834`}}]}}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {15., -4.}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 400, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotRange -> {{15., 143.}, {-6, 6}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, Ticks -> {{{15, 
           FormBox[
            RotationBox["\"Wed 22 Nov\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {19, 
           FormBox[
            RotationBox["\"Sun 26 Nov\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {23, 
           FormBox[
            RotationBox["\"Thu 30 Nov\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {27, 
           FormBox[
            RotationBox["\"Mon 4 Dec\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {31, 
           FormBox[
            RotationBox["\"Fri 8 Dec\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {35, 
           FormBox[
            RotationBox["\"Tue 12 Dec\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {39, 
           FormBox[
            RotationBox["\"Sat 16 Dec\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {43, 
           FormBox[
            RotationBox["\"Wed 20 Dec\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {47, 
           FormBox[
            RotationBox["\"Sun 24 Dec\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {51, 
           FormBox[
            RotationBox["\"Thu 28 Dec\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {55, 
           FormBox[
            RotationBox["\"Mon 1 Jan\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {59, 
           FormBox[
            RotationBox["\"Fri 5 Jan\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {63, 
           FormBox[
            RotationBox["\"Tue 9 Jan\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {67, 
           FormBox[
            RotationBox["\"Sat 13 Jan\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {71, 
           FormBox[
            RotationBox["\"Wed 17 Jan\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {75, 
           FormBox[
            RotationBox["\"Sun 21 Jan\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {79, 
           FormBox[
            RotationBox["\"Thu 25 Jan\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {83, 
           FormBox[
            RotationBox["\"Mon 29 Jan\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {87, 
           FormBox[
            RotationBox["\"Fri 2 Feb\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {91, 
           FormBox[
            RotationBox["\"Tue 6 Feb\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {95, 
           FormBox[
            RotationBox["\"Sat 10 Feb\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {99, 
           FormBox[
            RotationBox["\"Wed 14 Feb\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {103, 
           FormBox[
            RotationBox["\"Sun 18 Feb\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {107, 
           FormBox[
            RotationBox["\"Thu 22 Feb\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {111, 
           FormBox[
            RotationBox["\"Mon 26 Feb\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {115, 
           FormBox[
            RotationBox["\"Fri 1 Mar\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {119, 
           FormBox[
            RotationBox["\"Tue 5 Mar\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {123, 
           FormBox[
            RotationBox["\"Sat 9 Mar\"", BoxRotation -> 1.5707963267948966`], 
            TraditionalForm]}, {127, 
           FormBox[
            RotationBox["\"Wed 13 Mar\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {131, 
           FormBox[
            RotationBox["\"Sun 17 Mar\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {135, 
           FormBox[
            RotationBox["\"Thu 21 Mar\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {139, 
           FormBox[
            RotationBox["\"Mon 25 Mar\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}, {143, 
           FormBox[
            RotationBox["\"Fri 29 Mar\"", BoxRotation -> 1.5707963267948966`],
             TraditionalForm]}}, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"ovi\"", "\"PK\"", "\"Oktopusz\""}, "PointLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.927809179578375*^9, 3.92780924062805*^9, {3.92780932989985*^9, 
   3.927809420454683*^9}, {3.927809497236658*^9, 3.9278095277992706`*^9}, 
   3.927809757810316*^9, {3.9278100166356354`*^9, 3.92781009810758*^9}, 
   3.9278106073418264`*^9, 3.927811278404583*^9, 3.927812440511176*^9, 
   3.9278696538064356`*^9, 3.9278698279484863`*^9, 3.9278699040474663`*^9, 
   3.9278699792150373`*^9, 3.9278701145953627`*^9, 3.9278702900295258`*^9, 
   3.92787038406244*^9, 3.927870466859394*^9, 3.9278705413310537`*^9, 
   3.927870641091592*^9, {3.927870681062809*^9, 3.9278706880422773`*^9}, 
   3.9278709049734135`*^9, 3.9278711699721127`*^9, 3.9278712426090913`*^9, 
   3.927951257869196*^9, 3.927951792578067*^9, 3.9279518647863655`*^9, 
   3.927952684204238*^9, 3.9279531183961463`*^9, 3.9282969337180157`*^9, 
   3.928306659097538*^9, 3.9283072120050106`*^9, 3.92830801378728*^9, 
   3.9283131375061045`*^9, 3.928314399670181*^9, 3.92832308844878*^9, 
   3.9283231392058125`*^9, 3.928325249939514*^9, 3.928327612151847*^9, 
   3.928329060285971*^9},
 CellLabel->"Out[2087]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["heat vs temp (cost vs performance)",
 FontWeight->"Plain"]], "Subsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799836982658*^9}, {
   3.928308657961184*^9, 3.9283086642810345`*^9}, {3.9283087232127094`*^9, 
   3.928308723786074*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simulatedVsTrueHeatStockDailyForCycleByRoom", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"simulatedSeasonForCycle", "[", 
               RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"roomN", ",", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                   RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                  RowBox[{"[", "heatLossOrGain", "]"}], "]"}], "]"}]}], "}"}],
               "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"roomN", ",", "1", ",", 
                RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{"heatLossOrGain", ",", "1", ",", "2"}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"simulatedDay", ",", "1", ",", 
          RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
       "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"dayN", ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "roomsOnCycle", "]"}], "]"}], ",", 
             RowBox[{"100", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"heatStockDaily", "[", 
                  RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], 
              RowBox[{"roomHeatTakeupRatios", "[", 
               RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}]}], "}"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
      "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"simulatedDailyTempDivergenceVsTrueDivergenceForCycle", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"simulatedSeasonForCycle", "[", 
           RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "]"}], "&"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Select", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
                   
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "+", 
                   
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}]}], 
                 "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", 
                  RowBox[{
                   RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "}"}]}],
                "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Between", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", "]"}], "==", "False"}], "&"}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"roomTempsDaily", "[", 
                RowBox[{"[", 
                 RowBox[{"roomsOnCycle", "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"simulatedSeasonForCycle", "[", 
                   RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
             "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                "]"}], "&"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Select", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]",
                   "}"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Between", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}], "==", "False"}], "&"}]}], 
               "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"simulatedDay", ",", "1", ",", 
        RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"heatVsTempSimulatedVsTrue", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Map", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", "#", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", "&"}], 
           ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"simulatedVsTrueHeatStockDailyForCycleByRoom", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"simulatedVsTrueHeatStockDailyForCycleByRoom", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}],
             "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "simulatedDailyTempDivergenceVsTrueDivergenceForCycle", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "roomN", "]"}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Mean", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "simulatedDailyTempDivergenceVsTrueDivergenceForCycle", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "roomN", "]"}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"roomN", ",", "1", ",", 
             RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}],
         "\[IndentingNewLine]", "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"dayN", ",", "1", ",", 
        RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
     "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"{", "}"}], "]"}], "->", "Missing"}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "x"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "6000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Black", ",", "Red"}], "}"}], "[", 
             RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Point", "[", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"[", "heatOrTemp", "]"}], "]"}], "[", 
                    RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], "&"}], ",", 
                    "heatVsTempSimulatedVsTrue"}], "]"}], ",", "NumberQ"}], 
                 "]"}], "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"heatOrTemp", ",", "1", ",", "2"}], "}"}]}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"EdgeForm", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", "Black"}], "}"}], ",", "Red"}], "}"}],
               "[", 
              RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Ellipsoid", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Mean", "[", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"[", "heatOrTemp", "]"}], "]"}], "[", 
                    RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], "&"}], ",", 
                    "heatVsTempSimulatedVsTrue"}], "]"}], ",", "NumberQ"}], 
                  "]"}], "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"heatOrTemp", ",", "1", ",", "2"}], "}"}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"10", 
                 RowBox[{
                  RowBox[{"GetMeanAndSEM", "[", 
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"[", "heatOrTemp", "]"}], "]"}], "[", 
                    RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], "&"}], ",", 
                    "heatVsTempSimulatedVsTrue"}], "]"}], ",", "NumberQ"}], 
                    "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"heatOrTemp", ",", "1", ",", "2"}], "}"}]}], "]"}]}],
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"simulatedOrTrue", ",", "1", ",", "2"}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"roomNames", "[", 
        RowBox[{"[", 
         RowBox[{"roomsOnCycle", "[", 
          RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], "//", 
  "Row"}]}], "Input",
 CellChangeTimes->{{3.9283087460547543`*^9, 3.9283087804830065`*^9}, {
   3.9283093294799194`*^9, 3.928309362497695*^9}, {3.9283095689901752`*^9, 
   3.928309572791573*^9}, 3.928309642612342*^9, {3.928312263655326*^9, 
   3.928312268275815*^9}, 3.928312433520756*^9, {3.9283238886692915`*^9, 
   3.928323890006464*^9}},
 CellLabel->"In[2064]:="],

Cell[CellGroupData[{

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.9283290825532103`*^9}],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{2660.3048838431564`, 1.2185957894881803`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{2660.3048838431564`, 1.2185957894881803`}, {
           870.6995062432945, 1.3930719472463644`}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{2740.890550988089, 1.232101078987126}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{2740.890550988089, 1.232101078987126}, {
           1683.0888549684123`, 1.5929182637272574`}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ovi\"", TraditionalForm], PlotRange -> {{0, 6000}, {-2, 6}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{1918.1712979441616`, 1.4891416703073583`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{1918.1712979441616`, 1.4891416703073583`}, {
           623.7281481574239, 1.3831836696203192`}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{1972.1158419811413`, 1.4377104777581629`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{1972.1158419811413`, 1.4377104777581629`}, {
           1211.0101197395566`, 1.758983898265864}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"PK\"", TraditionalForm], PlotRange -> {{0, 6000}, {-2, 6}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{3331.9562240191367`, 1.936192991111681}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{3331.9562240191367`, 1.936192991111681}, {
           1224.732821326626, 2.1266414931985254`}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{3401.8397344926034`, 1.9722876023396088`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{3401.8397344926034`, 1.9722876023396088`}, {
           2088.9555555033485`, 2.948286444579044}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Oktopusz\"", TraditionalForm], 
     PlotRange -> {{0, 6000}, {-2, 6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.9283276624517355`*^9, 3.928327768249475*^9, {3.9283278007901254`*^9, 
   3.92832782336831*^9}, 3.928327854127754*^9, {3.928327899462937*^9, 
   3.9283279522533293`*^9}, 3.9283279841735277`*^9, 3.9283280163113766`*^9, 
   3.9283280472551107`*^9, {3.928328077285199*^9, 3.928328107254692*^9}, {
   3.928328140977291*^9, 3.928328168487226*^9}, 3.928328228081709*^9, 
   3.9283282672889867`*^9, {3.92832829825496*^9, 3.928328396492963*^9}, 
   3.9283284428650227`*^9, {3.9283284834375377`*^9, 3.928328563943789*^9}, 
   3.92832859880015*^9, 3.928328631418149*^9, 3.928328684180318*^9, 
   3.9283287178515024`*^9, {3.9283287507575617`*^9, 3.9283288075710955`*^9}, 
   3.928328840413974*^9, 3.9283289108035135`*^9},
 CellLabel->"Out[2067]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.9283290810242662`*^9}],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{1438.8683475296546`, 1.7157851072632297`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{1438.8683475296546`, 1.7157851072632297`}, {
           420.0648925174875, 0.9955657311998384}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{1442.0265588773384`, 1.8079345947404295`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{1442.0265588773384`, 1.8079345947404295`}, {
           916.1699951345782, 1.466979472197886}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"SZGK\"", TraditionalForm], PlotRange -> {{0, 6000}, {-2, 6}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{1821.3849414237204`, 1.7068315783029218`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{1821.3849414237204`, 1.7068315783029218`}, {
           572.1684788703261, 1.4729783816473865`}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{1902.4160738699989`, 1.6894756326433817`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{1902.4160738699989`, 1.6894756326433817`}, {
           1208.671584036808, 1.3950282877132287`}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"G\[OAcute]lyairoda\"", TraditionalForm], 
     PlotRange -> {{0, 6000}, {-2, 6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{2527.0349678638772`, 1.4140599990583946`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{2527.0349678638772`, 1.4140599990583946`}, {
           729.6854693599552, 1.0926333570966487`}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{2555.0501987385437`, 1.4556938620653486`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{2555.0501987385437`, 1.4556938620653486`}, {
           1623.3129090003208`, 1.3373915099233167`}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"M\[EAcute]rce\"", TraditionalForm], 
     PlotRange -> {{0, 6000}, {-2, 6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{3343.0712734220165`, 1.67357594518185}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{3343.0712734220165`, 1.67357594518185}, {
           1108.3763032305546`, 1.2939292637854858`}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{3373.223003410262, 1.6319736112748924`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{3373.223003410262, 1.6319736112748924`}, {
           2143.126756991379, 1.4619581596414712`}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Lahmacun\"", TraditionalForm], 
     PlotRange -> {{0, 6000}, {-2, 6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.928323311670517*^9, 3.9283233562560754`*^9, 3.9283233956121707`*^9, 
   3.9283235350874205`*^9, 3.928323575684134*^9, 3.928323800937166*^9, 
   3.928323862505802*^9, 3.928323913744191*^9, 3.9283239703610015`*^9, 
   3.928324013306779*^9, 3.9283240651991796`*^9, 3.9283240959668922`*^9, 
   3.9283241302756777`*^9, {3.9283241684176188`*^9, 3.9283241922954288`*^9}, 
   3.9283242244236183`*^9, 3.9283242611697063`*^9, 3.928324307298134*^9, 
   3.928324338531355*^9, 3.928324371315915*^9, 3.928324401970558*^9, 
   3.928324433282477*^9, 3.9283244657577453`*^9, 3.9283245228758435`*^9, 
   3.9283245640211887`*^9, 3.928324598570695*^9, 3.9283246356630087`*^9, 
   3.92832466781485*^9, 3.9283247084897146`*^9, 3.9283247597655845`*^9, {
   3.928324792218052*^9, 3.928324833824299*^9}, {3.9283248660275993`*^9, 
   3.928324923367901*^9}, 3.928325191019741*^9, 3.9283273055786557`*^9, 
   3.9283273498298416`*^9, 3.9283273904694104`*^9, 3.9283274392789392`*^9, 
   3.9283274806691475`*^9},
 CellLabel->"Out[1656]="]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["id\[ODoubleAcute]program", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894059004097`*^9, 3.927789408165224*^9}, 3.927796369298359*^9, {
   3.927872160549984*^9, 3.927872162894493*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["set room schedules",
 FontWeight->"Plain"]], "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799797701474*^9}, {
   3.928329996675189*^9, 3.9283300010857544`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"offdaySchedule", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "]"}], ",", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "288"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.928330309322345*^9, 3.9283303336880198`*^9}},
 CellLabel->"In[2094]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"ondayScheduleForOktopusz", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"15", " ", "60"}], "-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"15", " ", "60"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"24", " ", "60"}], "-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"24", " ", "60"}], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9283326362299824`*^9, 3.928332661541787*^9}},
 CellLabel->"In[2173]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"ondaySchedule", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"6", " ", "60"}], "-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"6", " ", "60"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"18", " ", "60"}], "-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"18", " ", "60"}], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9283303356010838`*^9, 3.9283303500299807`*^9}, {
  3.9283304004074717`*^9, 3.928330418188526*^9}, {3.9283305633603106`*^9, 
  3.9283306854255877`*^9}},
 CellLabel->"In[2123]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsWorkDays", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"(*", "ovi", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"(*", "PK", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"(*", "SZGK", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"(*", "G\[OAcute]lyairoda", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"(*", "M\[EAcute]rce", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"(*", "vend\[EAcute]gt\[EAcute]r", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"(*", "kisterem", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"(*", "traf\[OAcute]h\[AAcute]z", "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"(*", "Oktopusz", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}], 
      "}"}]}], 
    RowBox[{"(*", "Lahmacun", "*)"}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.928330502710106*^9, 3.9283305242272053`*^9}, {
  3.928330696155571*^9, 3.9283307889837203`*^9}, {3.9283326258649797`*^9, 
  3.928332628781051*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsWeeklySchedules", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"roomsWorkDays", "[", 
            RowBox[{"[", "room", "]"}], "]"}], "[", 
           RowBox[{"[", "dayOfWeek", "]"}], "]"}], "==", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"room", "==", "9"}], ",", "ondaySchedule", ",", 
           "ondaySchedule"}], "]"}], ",", "\[IndentingNewLine]", 
         "offdaySchedule"}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"dayOfWeek", ",", "1", ",", "7"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.928330019628483*^9, 3.9283300363883305`*^9}, 
   3.928330270187659*^9, {3.9283305204125395`*^9, 3.9283305208549347`*^9}, {
   3.928330829967696*^9, 3.9283309016069*^9}, {3.9283326692590456`*^9, 
   3.9283326770250063`*^9}, {3.928335305800599*^9, 3.928335307495436*^9}, 
   3.9283359880305967`*^9},
 CellLabel->"In[2406]:="],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"roomsWeeklySchedules", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{"offdaySchedule", "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"dayOfWeek", ",", "1", ",", "7"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.92833409402809*^9, 3.9283341036454444`*^9}, 
   3.9283353053773565`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"room", ",", "day"}], "}"}], ",", " ", 
    RowBox[{"1", "-", 
     RowBox[{"es", " ", 
      RowBox[{"k\[ODoubleDot]r", ":", " ", 
       RowBox[{
        RowBox[{"dec", " ", "24"}], " ", "-", "  ", 
        RowBox[{"jan", " ", "3"}]}]}]}]}], ",", " ", 
    RowBox[{"2", "-", 
     RowBox[{"es", " ", 
      RowBox[{"k\[ODoubleDot]r", ":", " ", 
       RowBox[{
        RowBox[{"dec", " ", "24"}], " ", "-", " ", 
        RowBox[{"jan", " ", "1"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"offdays", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"room", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"Range", "[", 
                   RowBox[{"47", ",", "58"}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"47", ",", "58"}], "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"room", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"roomToCycle", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
           "]"}], ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{"room", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"Range", "[", 
                   RowBox[{"47", ",", "56"}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"Range", "[", 
                RowBox[{"47", ",", "56"}], "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"room", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"roomToCycle", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
           "]"}], ",", "1"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
      "1"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.9279504666079535`*^9, 3.9279504714885807`*^9}, {
  3.927950836157989*^9, 3.9279508477183747`*^9}, {3.9283063590693946`*^9, 
  3.928306430398897*^9}, {3.928306592526997*^9, 3.9283065967536187`*^9}, {
  3.928334566466639*^9, 3.9283345814099865`*^9}},
 CellLabel->"In[2280]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomsOffdaySchedules", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"offdaySchedule", ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{
  3.9283302712568665`*^9, {3.9283309029685183`*^9, 3.928330914052264*^9}},
 CellLabel->"In[2381]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["simulation",
 FontWeight->"Plain"]], "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799797701474*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cycle", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSimulatedCycle", "[", "cycle", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetSimulationParameters", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9277946603794794`*^9, 3.927794664114851*^9}, {
   3.927794708304123*^9, 3.9277947137216053`*^9}, {3.9277954962592983`*^9, 
   3.927795496527539*^9}, 3.927951075181748*^9, {3.928307122737069*^9, 
   3.928307123415867*^9}, {3.928307946524138*^9, 3.9283079465853596`*^9}, {
   3.9283119187066216`*^9, 3.928311918740692*^9}, {3.9283231623944917`*^9, 
   3.928323163216504*^9}, {3.928323252777521*^9, 3.9283232535540667`*^9}, 
   3.9283232882268286`*^9, 3.928327064745101*^9, 3.9283276378066263`*^9},
 CellLabel->"In[2382]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simulationDayNToDayN", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"startDayN", ",", "endDayN"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulationStarted", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dayN", "=", "startDayN"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"simulatedSeasonForCycle", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"simulationStarted", "==", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"roomsTempStartIn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"20", ",", "20", ",", "20"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"21", ",", "18", ",", "18", ",", "18"}], "}"}]}], 
             "}"}], "[", 
            RowBox[{"[", "cycle", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"heatingStateStartIn", "=", "0"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"simulationStarted", "=", "True"}], ";"}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dayN", "=", 
       RowBox[{"simulationDayNToDayN", "[", 
        RowBox[{"[", "simulationDayN", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dayOfWeek", "=", 
       RowBox[{
        RowBox[{"DateValue", "[", 
         RowBox[{
          RowBox[{"seasonDays", "[", 
           RowBox[{"[", "dayN", "]"}], "]"}], ",", "\"\<DayNameShort\>\""}], 
         "]"}], "/.", "dayNameToDayOfWeek"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"roomsSchedulesIn", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Module", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"room", ",", "offdayForRoom"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"room", "=", 
             RowBox[{"roomsOnCycle", "[", 
              RowBox[{"[", "roomN", "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"offdayForRoom", "=", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"offdays", ",", 
               RowBox[{"{", 
                RowBox[{"room", ",", "dayN"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{"offdayForRoom", ",", "\[IndentingNewLine]", 
              RowBox[{"roomsOffdaySchedules", "[", 
               RowBox[{"[", "room", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              
              RowBox[{
               RowBox[{"roomsWeeklySchedules", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "dayOfWeek", "]"}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"roomN", ",", "1", ",", 
           RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"SetSimulatedDayWithTimedHeating", "[", 
       RowBox[{"dayN", ",", "roomsSchedulesIn", ",", "roomsTempStartIn"}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "simulation", ",", "simulatedHeatDynamics", ",", 
         "heatingSimulatedState", ",", "roomsSimulatedTemp"}], "}"}], "=", 
       RowBox[{"SimulateDayForCycleWithTimedHeating", "[", 
        RowBox[{"warmingCorrection", ",", "coolingCorrection"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"roomsTempStartIn", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"24", " ", "60"}], "]"}], "&"}], ",", 
         "roomsSimulatedTemp"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"heatingStateStartIn", "=", 
       RowBox[{"heatingSimulatedState", "[", 
        RowBox[{"24", " ", "60"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"dayN", ",", 
          RowBox[{"seasonDays", "[", 
           RowBox[{"[", "dayN", "]"}], "]"}]}], "}"}], ",", 
        "simulatedHeatDynamics", ",", "heatingSimulatedState", ",", 
        "roomsSimulatedTemp", ",", "roomsSetTemp", ",", "roomsLowerBuffer", 
        ",", "roomsUpperBuffer"}], "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"simulationDayN", ",", "1", ",", 
       RowBox[{"Length", "[", "simulationDayNToDayN", "]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9277991235916166`*^9, 3.927799143961009*^9}, {
  3.9277999723047333`*^9, 3.927799986387164*^9}, {3.92780030583689*^9, 
  3.927800309926969*^9}, {3.927805503540064*^9, 3.927805533520029*^9}, {
  3.9278106329639*^9, 3.9278106457857666`*^9}, {3.9283238388083086`*^9, 
  3.9283238404966516`*^9}, {3.928326722112266*^9, 3.928326736755944*^9}, {
  3.9283268983496876`*^9, 3.9283269353427*^9}, {3.928327059047203*^9, 
  3.9283270594741335`*^9}, {3.9283271532980843`*^9, 3.9283271873169317`*^9}, {
  3.9283272272259593`*^9, 3.928327227585387*^9}, {3.928327273824485*^9, 
  3.9283272790234175`*^9}, {3.928330112663385*^9, 3.9283302264808235`*^9}, {
  3.9283304466517253`*^9, 3.9283304483061647`*^9}, {3.9283355028323507`*^9, 
  3.928335517966419*^9}},
 CellLabel->"In[2409]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["evaluation",
 FontWeight->"Plain"]], "Subsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799810262416*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["plot",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799810262416*^9}, {
   3.928312666830741*^9, 3.9283126670966854`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotDay", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"simulatedDay", "-", "1"}], ")"}], " ", "24", " ", 
                  "60"}], "+", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], 
                  "]"}]}], ",", "\[IndentingNewLine]", "#"}], 
               "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
             "&"}], ",", 
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", 
                   RowBox[{
                    RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], 
                  "}"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"If", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", 
                   RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=",
                   "0"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                 "Nothing"}], "\[IndentingNewLine]", "]"}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}],
            "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"simulatedDay", ",", "plotDay", ",", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"plotDay", "+", "20"}], ",", 
              RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], 
             "]"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Red"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.1"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"roomNames", "[", 
        RowBox[{"[", 
         RowBox[{"roomsOnCycle", "[", 
          RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"simulatedDay", "-", "1"}], ")"}], " ", "24", " ", 
               "60"}], "+", 
              RowBox[{"12", " ", "60"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"StringRiffle", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringSplit", "[", 
                   RowBox[{
                    RowBox[{"DateString", "[", 
                    RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", 
                    RowBox[{"startDayN", "+", "simulatedDay", "-", "1"}], 
                    "]"}], "]"}], "]"}], "]"}], ",", "\"\< \>\""}], "]"}], 
                  "[", 
                  RowBox[{"[", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2", ",", "1"}], "}"}], "]"}], "]"}], 
                 ",", "\"\<\\n\>\""}], "]"}], ",", 
               RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
            "}"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"simulatedDay", ",", "plotDay", ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"plotDay", "+", "20"}], ",", 
               RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], 
              "]"}], ",", "2"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         "Automatic"}], "\[IndentingNewLine]", "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Prolog", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "Black", ",", "Thin", ",", "Dotted", ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"simulatedDay", "-", "1"}], ")"}], " ", "24", " ", 
                 "60"}], ",", 
                RowBox[{"-", "50"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"simulatedDay", "-", "1"}], ")"}], " ", "24", " ", 
                 "60"}], ",", "50"}], "}"}]}], "}"}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"simulatedDay", ",", "plotDay", ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"plotDay", "+", "20"}], ",", 
               RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], 
              "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{{3.9278117335669136`*^9, 3.9278117442866516`*^9}, {
   3.9278120207074547`*^9, 3.927812079605423*^9}, {3.927812144105153*^9, 
   3.927812221595007*^9}, {3.9278122545872574`*^9, 3.9278122630304117`*^9}, {
   3.9278123079630656`*^9, 3.927812309448092*^9}, {3.9278125085508785`*^9, 
   3.9278125099661694`*^9}, {3.9278125405596523`*^9, 
   3.9278125592336416`*^9}, {3.927812613003568*^9, 3.9278126150790834`*^9}, {
   3.9278696816088963`*^9, 3.9278696947484083`*^9}, {3.9278707461663227`*^9, 
   3.92787075759291*^9}, {3.9278708318050575`*^9, 3.927870831972857*^9}, {
   3.927872056679514*^9, 3.927872104413643*^9}, {3.9279511835053053`*^9, 
   3.927951190105648*^9}, {3.9279513956324043`*^9, 3.9279514122663627`*^9}, {
   3.92795161209741*^9, 3.9279516264128013`*^9}, {3.927952419432434*^9, 
   3.927952419509437*^9}, {3.9279527193459845`*^9, 3.9279527383251266`*^9}, {
   3.927952986582769*^9, 3.9279530012529325`*^9}, {3.9282970075425262`*^9, 
   3.928297007592422*^9}, {3.928306787833362*^9, 3.92830678786613*^9}, {
   3.928307235898406*^9, 3.9283072915290265`*^9}, {3.9283073247732496`*^9, 
   3.928307384899544*^9}, {3.928307762365018*^9, 3.9283077624150934`*^9}, {
   3.9283123363392477`*^9, 3.928312336382923*^9}, {3.928314346515202*^9, 
   3.928314346670246*^9}, {3.928328968548273*^9, 3.9283289700361896`*^9}, 
   3.928332195384617*^9, {3.9283324408438797`*^9, 3.9283324409786816`*^9}, {
   3.928333358982155*^9, 3.9283334084748025`*^9}, 3.9283334983369713`*^9, {
   3.9283338056205225`*^9, 3.92833381567645*^9}, {3.9283338864143457`*^9, 
   3.9283338865105085`*^9}, {3.9283343301856484`*^9, 
   3.9283343849668283`*^9}, {3.9283344517820215`*^9, 3.9283345263547144`*^9}, 
   3.9283347166114607`*^9, {3.928335429884751*^9, 3.928335469323474*^9}, 
   3.928335580089505*^9, {3.9283356745720096`*^9, 3.928335674785822*^9}, {
   3.928335709334212*^9, 3.928335709445425*^9}, {3.9283361266649714`*^9, 
   3.928336152322321*^9}},
 CellLabel->"In[2427]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd0CsMwjAUBdCGBIPGYEhxZEg0yXNgmcEgFhIUgY3P+IxfEdNoUEvwaOSC
QaOwQxcLmre15vUmTXPUzbuVnmv3c4wxji/90yRDCb9q93j3a5BajKi5Sx2j
P+1bORwoOx41G1NH6NfFaxQ6yjChTgyLqYTWOyhem7p/Rh2j61l0v0/N5tQR
+nzClHT/gjoxLJbUfCUhlHhQXvcbdgJqttZ7fS3Vbxg21Ak6O++tLLbUfEcd
o22cVz6VnT01E9SRYTjoPR8W/AE6Fa7F
          "]], LineBox[CompressedData["
1:eJxd1LtPFUEYxuGJiY2NDY0NGWID/gU2JF9sbGigppiYaKu2mJBprCm8cfEy
Ct4V73JQ0REURUHFG4iocxqbsbDRwsrZs19C3neSk5Nnm9/OtzvbsWd/395N
xpjB8qv+q+WOZOkfmv3T2b9DWheOZulrtB/OvbUDWY6hE9kfz7K0WFZPbXsC
HcluGG1GssyVuxnapX2yjKJTcSu/U/tjaHsSHcnuFNqcRgeynEGn4q7WALUf
0PYsOhZPHOjesrJd++fQZhwdikdHytqm/Ql0IvvzWVqPc6v2L6Aj2V3MUnbT
aN+s/UvoQJbLWQ61Te5u/uuq+2R/BW2vZvnbWQ2gdiS7a2hzPcuv3mrCtQNZ
JtGpuDlQBbV/A21voiPZ3UKb2+hAljvoRPZ39Tyta/8eOpLdfbSZQgeyNNCJ
7Kep/0DP57L2ye4h2jxCB7LMoNMM9R9T/wntv3hftX5qP6LN0ywHy+s//lv7
ZJlFJ7KfQ9tn+D5GsnuONvP0/pPlBToVl1o5sXr+XqLtAjqS3Ss8j+Y1OpBl
EZ3Ifon6b6hPdm9z3TXaf4cOZFlGJ7J/j7YfaP5k95Hm/wm/B4Esn9GJ7FfQ
dpW+P6vU/0L9NXRYo/1/pf2T/TrN/xvNn+y+0/P/Qc+fLClLdXsDbdon++aG
/wMsT8lH
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
Rfz+Ae0Sq/n6/wGHX2PM
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw11nlcTfkfx/FbVJNBqZRMuNFGwshYRuVjGWMZmST0UwnNjwaRKWMqubIr
WygtuAppmyQJSRct9iVKZGkRwveULZHR7zO/+7790+P1uKf7POfbdzmW85ZO
+01bJpPJtWSyf3///2eToP3b+reP2d2V/k0ld9prqyRvNG0WdHJSD7JGV3MH
Gxwua9ylbsUWQT3Nfwo6g5ZHCqpcH6+/Ca3iXh44INMD7RslKKv8i08ftGyr
oLkGye3eR8Pnllam5RahaZugqIxjnnvR1dwfRo/qsBit2M73b/g+fQxavkPQ
MjHL0xyt4jaJ/N2oaSf8nYI6tZXkX0bLogWRV8vSZLSS2/5DorECTbsEJZqP
Ou+FruZ+NWuVtxNasVvQ36NqtS3Q8j2C9IYvym7dAZ+7sHPelMdo3xhB17b+
+laFlsUKijxXsfYIWskdlHLXIgpNewWtvnKkMgBdzX05syDRDa2IE+QVF7zu
e7Q8XtBf912Cu2h8bu+w4C3SdvgJPJ67N6deRcsSBcU2V4jDaCX3gtDrTgo0
7ROkfe5S9kx0NXdDa8yU/mjFfkE/xad8kKHlBwStUnkUl22Dz62IN0w6hPZV
Ctpi6pjyB1p2UFCgbf8zY9BK7oURM5o7oylJ0OQa+eiqrfC5f1PV5x5CK5IF
HdLO7RmIlh8SdK7T6RBCq7jvWYY+NUD7Hub7P7eXaqPgHxHkV+S0LQ+t5G6a
En1tO5pSBP0np+jz7+hq7vWb2swmohVHBc3YF9CnH1qeKig/IXHYt2gVd5cl
diMaI+GnCSr2dLGtQMvSeX186GpzD63kDlIem6i5njIEzbpjvcxS43N/dLaI
XqLxMwVdHJ1w8ZbG/1tQRfQq8wma5+cOqYhqLdU8f5ag9kNlv7hrxv+YoOfr
W3s/14w/9w1r0/C1mv9/tqCN6zePstfMP+6ZhaGrqzTz77ig7is3jNytmf85
gvr61XvM0qw/7mM1qmdWmvV/gr+/8sSrT5r1nysolNrGP9DsP9w1p64YXtwD
/ySvD32Tedkx8Ln1nqVOT4qFnycoYMXSa3v3wj8l6P2K8tLdcfC5s4+n++6K
h39aUMvCipDYBPhnBN29sfBTciJ87m6TDp/L3wc/X9CmF2dqq/bD555euHvI
nQPwzwpaVzP5zyIl/AJBpxMO3i45CJ9bp59Txo0k+Od4vU56Lb+fDL9QUOqA
WOOGQ/C5fROzIr4ehq/i9bVAb5NpCnzuCxXr9IYchX9ekL+t81PPVPgXBGmV
BMki0+BzZ5Z4BRWlw7/I+19xnLNuJvwiQVb+y13c/4bPnaPVffvRLPjF/Lx+
wxx0s+Fz+y03bg04Dr+E95ecOsPqHPilgt4McVvsmQufu9kgpfHRSfiXBBVo
98j5/RT8y4IOfC19b3wGPnfPwQkZ9/PhXxH0uUtUWX4BfG6LdLueRwrhXxV0
1qI4MOE8/GuC2uyS6vdehM9dnPhJP60Y/nWez9rx76+Wwr8hKDlkwXqtK/C5
5Tb7jLyuwb/J5+FU/xWPb8DnthvcoFp/G/4tQX8cvzpi4l34twXNjup+3+4e
fO6o/JoYqwfwywQ1hgxc5PQI/h1ej+NMXJdVw+ceeyNpmKoO/l1Bf3Zu6tX/
OXzuXkON23Jewi/n8+C49fWZEvwKQUPdbQfJ38Ln/rhvvrZhM/x7guK0uk63
+gy/kq+/sLG2y1f43N0f/LqvSstU7d8XVHWsNu61jrqruQtOHfEx76BuxQM+
H6Mu1s3trG55laBv2+ZalhipW8Xd9O7SXGczdfs+FHTwm5YzRd+pW/ZIUNi8
9p3myNWt5H79LljW1Rr+Y0E2ruFbn/WFz/1lqFvGnQHwn/D+EUEpdxzhVwvq
kD9jd91w+NxtjTnuui7wa3j/v6tbPXIs/FpBuk4+U9dMgM89NfTxmvtT4NcJ
Mmyf+2S4O3zuwKywyUmz4D/l/an+7CMjH/j1gpx1mm1i5sPn7mTm7NzXH/4z
Ph8Pn5XdDID/nL2HDos3BsHnbtNO2zM1BP4LQbdq5nj3U8DntjIY4OC9AX4D
nw86m2uvR8F/KWjnsNW6brvgc8d/9tCqioP/iq9vr8oNUMJ/Lag+2stJPwU+
d94vLrvSMuELQTuKzfd5nIDPXdttx3K9fPiSoHFjBq0+cR5+o6DjrtOLvC7B
5/Zr8Bgruwm/ic+b2dv+2V8O/40gt/65BkMfwue+HbHH91It/LeCIiZufOPR
AJ97mn7txceN8N8Jsnz5pXJeM/z3vJ4aXy18+AU+964E3egJ7czU/gfe/w/k
OaXpq1vWzO+Lk6PshYG6ldwjIhwXdDFVN33k/f+EZ4uphbqruSsu3fTp2Fvd
ihZ+n+tge+CNrbrln/h9ObSxoMRB3Srup2V5hZGO8D/z+1R4p1QaAb+Vz+eD
YeH1LvC5fxjof33ROPhfeL21LN9/ZyJ87oo5wz5bTIX/j6CBM90afp4O/6sg
o/meQdM94XObxNcnj/GB3yZoiPs7lc18+DKJzqefbvhnAXzu4uYI3auL4WtJ
NM5DuTEiED63f7sbM21XwNfmzxXHY0+GwG8n0d0Jaw7YrobPPVu36M+QtfDb
SxTbotU3ayN8HYkGZfy3wDQKPrcUu9Mmewd8XYnmmeg8H74HPndp+cvsk3Hw
9SRyuRZ42HY//G8ketPrYeq2JPjc7peXD6w+Al9fol8eN8h7pcPvIFHL6Sf7
J2TB5176aH6WVw78byXyDrZ29smDz63zoWDhpHz4HSXq8HHYcMtC+J0kanfR
Oab+AnzuiBfzk3eXwO8s0XL9ew+drsA3kOjVFJu+Ndfhcze7XjsUfhu+IX/f
x1y3ruXwufvpBZoerYTfRaL72SsMhjyEbyRRzs7I0rQn8Ll30rS+BnXwjSVa
ljTTw+cZfBOJBhReFQUN8LkbzTPKBgn4XSWqW1NnfqIJPvePb2+d+/k9fFO+
P3fHyhcf4ZtJ1H7JYGdFK3zupi0O5YZt8LtJdMBhaUGsdje1by5RmKvHIzNd
dSu5L+9JLozQVzd1l2hseqtrVUd1V3MbrGlI72mobsV3Eg0+2xgwy1jdcguJ
ui7sc3K9qbpV3KtvZvinmqvbt4dE103yP+VZwO8pUY/VL3490Qs+d8ek09sT
esPvxeNdkur6lzV87jWJJemT7ODLJYo0+367kT18S4m6R8a03nKAzx1sq22w
dhD83hLpzYnOtneE30eihPDF7oU/wOde/1n+hIbDt5LIK6ZfcOaP8Lm9ByZG
GzvDt5Zo+KBXPVaMgm8jUXnoSsey0fC5i6eYlduOg28r0drCkQ1/jYdvJ5Hl
/J+iiifA5w6b+HKJ8WT4fSVq6L5p6/wp8LnjMsNe5k6F30+i7To26zpMg28v
0aqTa138psPnHhW+xlE1A35/Hh/r8Hk9PeE7SFSjrLwSPhs+9zOTpkU13vAH
SGTWuSaUfOFzd9yS2ZowD/5AibZV5eq98YM/SCIrw4ANYxbA535gcG/lDn/4
30tkG/LmyYNF8AdLZDrOorJnAHzuOz2u/DxnGXxHiewtXW0ilsPnrgpdfDYh
CP4Q/vvBfexSV8D/QaLXW9e6Za6Ez+04yn7k0RD4Q3n+V3RtFxsGf5hEf9hP
2xkWDp/b/uCcmLkK+MMlqvzkZzQ+Aj733tebdPqtgz+C2/rt0k4b4P/I4zu+
1K1pI3zuoKcD0ss2wx/J9xs1NexEZDf6H/qGMR4=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd0zlIA0EUBuAhYCOCjWCnKzYRT7CxCTwE0cLGINikWAVFsFALm9hsY+UR
Nd5HXK/EMx5RsBEWLWy0sLKxWBsbHbCJtW/2vQVnBpblmyzzz3szqRkYjQ9G
hBAd+Ki3Gta0hETqoRh9rwdlD/0bVTNke0ZCXfBBQ2Axy98nyC56siLf+ZEk
w5yEVjUKZB/98qwG2UlJWkc0Bm9rXsJd1dRXTxvZQ3/34MwI2V6QgL/iBFks
SqhWExmyi46Vvu2P3ZMhLSGuFnwl+2le74vsLEkItl/eRPnLur1l3n8r2V7h
/XeTxapuF/2RxAb0k2Et7AfZRwdcIjvruq0N7u8R56Mfi+oAOH9TAlaHJXL+
lm4XPa4a8MP529yvkmbKN+xkuH9VZGuH+xcje4Ztl/P6yGKX78cE2d0N6yHD
ngTFijznG3b2JXQpPnH+gW4PPaTGJ+cfcj8iLZSf1e1m+TzKyJDT7ed4/5Vk
50i3dSzhQLWzluwZtk90i1Oup4nzDcOZbv8svN+cf67bynM97Zxv2L7QLS7D
+8f5huGKz6OX8w0717qtQvh/5nzD9o1uccv3dZjz//kPBlyHNQ==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
lRZNs2b/X1qP33v+s8xGA/4H9m9cCQ==
          "]]}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw11nk4lekbwPGXppRSI1olx5ZIknYa3Up7IkIIJ1GWsVS2UA6ihUlkJhRO
KZFUXG3GzHSaokbLlNEm6US0cZ5qRNr87vk9N/+4Ppfl+573WXV9Qh39lAVB
ECkJwn/f///1VgHt1WN1g9ZowX+UoscrAi/4unHDOwU4jKyy83LnlqP3rNyZ
5+rBLXmvgM+JLUUOa7lF/ypgSm5LwFJPbhlaM+Jgm40Xt7hTAT2K8dqW3tzC
BwVkPklQsxBTH93z/cMLxuuo36WAMqcZ43R9qI9OvLlSR2s99bvx/3/eIBvl
S/2PCsi30Bmr6Ud99PpeU3WNDdTvUYDjon+Oam6k/icF1Og614/2pz469tmH
fJ0A6n9WQIxqTz/jQOqj1VyPKM8Iov4XBVxZnXUOfqT+VwU8+StZyT6Y+uj2
+l9bvUOo/00Bl/vPyA4OpX6vAqJ8H4+JDqM+uvlCVlD8JuoLDAqTF+9N2kx9
9Mozs/MTtlBficHHRllCXDj1lRl0Z1bPCY+gPvqv0abX/COp34/BhPBHJu5R
1P+OgcFA9YSF0dRHN2TvumGylfr9GVQPWW2kEkN9tG9dbuwTsmQAAzVBvbYs
lvoqDJrNAzWj46iPHqB/MWrONuoPZGClLXrcSRYGMTg3dDWc2E59dFRi09Tl
8dRXZaCvMTG3gSxHPzuXlOMsof5gBnV6VtevkUVDGGTuMrE1S6A+2tjP5kMq
WazGYGzzRc3HZGEog4SLp4q0EqmPro6ad9qODMMYdCSnWGwiy9H/6uRPTyFL
vmcw2r2gMo0sUmewbq33l+1kGfr9jdkvvMni4Qw2ngzLNSULGgyKQ5r2mPT1
0V6e3dUufX1NBi5W3ms8+/ropwUqVh59/REMtoVcSe17XtFIBpcboy1m9fXR
21VHFAzp649iwFa+rbrT9/lHMwgR25VIyFJ0xatR6oPJMIbBI/GSMcH0fuXo
OnhZXkLjIRnLICjCyaaOxk+kxeCX5PryVzS+MvRyD6l+B80H8TgGSw08DzXS
fBG0GRx74DCgiuaTFH3lTmlCct/8G8/glupt5X+yqY922ukeP+gi9XUYCMPz
goweUF+E45nl7qDfRX10TlpB0WfNcbyvyyBlsb9GxTRuQQ/n7+DJRg6O3FK0
zlGNxAdh3KCP68V8cfaidG452tnMJjyvjFtigH8vz7z18ga3yJDB8at+P5u/
5pahPzvu2LNhoDbvT2AQ5/pl/O4J3IIRg6+bb7/NseWWoq8OOaaS48MNE3F9
nk26t0PCLUdb3RV/9Mrnlhgz+KAjUTP+jVtkwsD06+by54+4Zeg/D99dva+b
+pMYLJi249ukEeN535RBPz+N5ZUW3FK0Vu3Q0pkO3DCZwcA2Z8Ojwdxy9I1b
/i79UrklZrjet94+5VjMLZrCoO2+54zMam4Z+viGvSlXmrnF5gyMMpuGt/ZS
fyqu/z2N+v21dXgf/TJ+l4GeJTdYYD/hYekPrtxy9P3g0F9dw7kl09AuK6pC
MrhF0xlUmvou3HGKW4Y2LF/jln2DWzyDwZf7Rj4lL7mFmQxaL/rENiqLeB+9
SONV6np1bpjF4JOf4ehXOtxytGJIxptgM27JbAbKt2IHvJ/LLZrDwHzH+vzw
5dwytI3S5e1dbtxiS/x5XMvxKH9uwYqB3aIl9t2R1Ed3Hd4IkcnUn4vja7kv
tnM/9dHF961nbjpC/R8YnJ30xqrjDPWtGQS6t6T5X6I++tWhQq/mW9Sfx+De
+MI4j0bqA4MzATahNa+pj96tc2iufg/1bRhkvMs6mKGiy/vovCXTTiqN5JbM
Z7Czpyp4iwG3aAHuj8bhT9ssuGXoS8qmUjcbbrEtg04Dr9Zae25hIYO/9SUx
Vl7cUvS+ZU6ysh+5YRE+z4Nx53VjqY8ucdPzOLCb+otxfqzq0BuUTf0lDBK3
fnoUVUR9dNyV2vPNZ6m/FNdDx8q2FVeov4zBGEHIP3eX+uhJH1aVaMupvxzf
n0X6wGQF9dGnLc3fvf5C/RV4/kqKzRwG6/G+He6/rTaXz47hlqFP+oY3jZrI
LV6J+2t7xaqYmdyCPYOiml720JZbiv46tj55uhM3ODCYv6Rsado6bjlacjVr
xNtQbskqBgHGbs+9t1PfEd//8LzYxjTqo016OzzXHKS+E4MVC67L6kqov5qB
+oTC0BUXqY82WpQ8788a6jvj/Ba1f5l+j/ro5b5uTYUt1Hdh0BQf1Tr0PfVd
8ffbLzdFCvq8j1Z3vSg8HsotXsMgwrSfnZU2t+CG+8dzrX3Zk7il6K9mEuH9
HG5wZ7DFLz3cdgm3HP3pSKxBugu3xIOB/fWwpjpfbtFaPN8/hB4btoX66KzZ
x8ttE6jvyaAqwPru5nTqezGYKbVQyc2jPvrz87LUylLqe+N8Uq03raukPvq4
YX5HyzXqixmssrYYoLhH/XUMjhidsX3XQn30k49DTna8o74Pg+/+CAxv7qX+
enw/Dq1Bd9QMeB8tt63tPafFDb4MLGra/DONueXoZxKlyA2zuCV+DL4NDu01
W8gt2sDAOrSnvt2RW4ZWiQk2LxBzizfifcZzwPylIdyCPz6fccr817HUR5eG
FwtJu6kfwGDY/a/xGgeoj/Y9sKAn9yj1Axn0pJpbja2gfhCuL5Os31MvUR99
Z7dnCrtJ/R8ZpE3ZenBhA/WDcTymDijKf0F9tNvTN496OqkfwmBvdn2RtbIh
76MNg55Pjh7GLQllMOp0rfXxcdyiMAb70+do3DDmlqEz96ueaZnJLd6E+4ei
7fm7BdzCZryPnIh50+nALUU7meVcb/fkhi14HmW0Lm8IpD665Gr/079FUT8c
/37Uta79O6gfwcAjrea9OIP66Eylo416+dSPZDCjNvh54wnqRzGwNamcv/cC
9dEfhRE1s65SP5pB+1CVJM0/qY9u0g5b33KJ+lvxvvi7ZdDR36kfg+trdvIf
66qoj977ULV9TCX1Y/E+kbdv4+3z1I/D+d7Zrh5xlvroQXNUmFoF9bfheXe8
WjnnNPXRDfbTrxuUUX87rrevonnl9HlE8Xjf3uO20bqY+uhTT0vh5jHqS/B+
39la615I/QQG4bfu9X8tpT763Lal77bS+4JEBn4Thv2keoj66OquzocHc6if
hD3Tv+onH6D+Djw/1d0lsizqo3OUIh87ZVI/Gc8TnzetL9Kpn4Lr5cSugrif
qI+eunbcwOGp1N+J5+WgCJ3iXdRHZzmua7VOof4uBjdbTrvdT6L+bga10VPi
QhKoj77WcGqFSjz19zBokX+plcZRP5WBXtjLLssY6qP9Y+HOPZpfkIb7X796
l00R1Ec/Hrl5j9oW6v/EQLXuVeCJMOrvxfuht+rHxSHUR0d0HZnaFkT9dDyv
nySOSg6g/j4G/f23lhhspD56Qbfzi6u+1M/A/e3Tizt+PtRHf+z45qcipn4m
g/NrA4tKaL2I9jP4taknY4UH9dHyMdsmvl1D/SwGZZevBGS5UP9nPE8O5DnP
WU19dHJAw5umVdT/hUGN5jLTZHvqo79P+m2kqR31D+B9rlSp9J9l1M/G58l6
9TJ2CfXRXfa2dwwWUT+HgdK3Z+Lbfes/l8Hhm5m50TbUR+t3T9imP4/6B3E/
qAkZ+Pdc6qOj91nOjbWk/iF8P5XuoyfOpn4ePl9FwaF7M6iPdu15dD1pGvXz
GUzXajhkMZX6BQzGlYeNbjajPvr1uhCrTFPqSxk8fFbYf4EJ9dHb3z+L7DSi
/mGcfz49e4sMqX8E1++wKjs3feqjb8i7K4boUr8Qx++25A/ZeEP4H7y1DEQ=

          "]]}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwt1XlcTfkfx/FbXURFRLa63eRWsk4TQo0vpsggawwiuymj0DIMSlQqU7Ik
e5lUSopQaFUqKkqiRYukZPseWqgJv4/fefdPj+fjnntf930656S/1nnhBmWJ
RCJXkkh+/P7/TyRnfeTGyjf1FOwHw8kZ1YYubjqi2UXOnE8raswGi64jHy2x
n9g2QLRXFGdqav/8fbOfaHk0ZzbLpY2efURnkv+c7+66QF20QwxnuorQ4SN7
ipZc4sx20+aNvbujT145+3VOhzL6sZx9GVBg+f77cLFPPp2c+/B1l2ivODq+
7zSVtx2i5Zc5S/PNPfuuXXQmuXVmqSZvEe0Qz5nCo6JZEERLrnAWHCYd8em9
6HDykLJi1vpGNEvgLHxmYnpbE/pkdZnegC8N6CdyNumv4JKOF+hfpX3lo1o7
a9AnL1u/g3dVoX+Ns93jy+Z/K0c/iTPz3D2DvpehT349vjlFUor+dc6eH/fP
UCpGn+zRq+qcShH6NzjTjLVtkD5A/yZnYwO3xSnnoU/OjHnn/V82+smcaaW4
1wiZ6Kdw1tKa3/Y8DX2y6azHllm30b/FmVeVu/WZZPTJx741znW7jv5tzjTW
SPPmXkX/DmdFflFTh19Bn2xiuSrlSyz6qZz5lapHFkajn8bZxe3+h89Fok9+
4rd+79YI9NM5C1D1rLM8hz75ekbCr2qn0c/g7E2ab9zTE+hnctbtTINfxDH0
yc755zc5hqCfxdnsmLA00yD079L1Z9Tu3xmAPnmiYW1hlh/62XQ/7Nrle/AA
+uSbv5z7de4+9HM4S/U22dV3L/r3OJPVWBmV7UKfPK1ae06YB/q5nEUr5bxe
7op+Hmd28jGJptvQJ7PQniayrejn0/n/4LFW4oQ+OUl25kPDJvTvc/bUaM+K
B+vRf8DZZItRQ6+tQZ88z1Zp9JlV6BdwplqqIvNbgX4hZ4cdrRxcl6FP7r1L
1rJuCfpF9HxoCF23eCH6ZLPUTIOZtug/5Ozb01ZTiznoP+LsZ78pMlMb9MlB
86OXmlijX8yZv0dIzfAZ6JdwlpOuzOQMfXLS4N4fdC3Rf8yZe2Cqm85k9MnC
TH0b3Ynol3J26ohVm8wM/SecxY55t1P/J/TJYRHGNoZj0C/jzN5LKowcif5T
zg4dPlr3szH6ZKPo2mgLBfrPOLs76LKV9TD0yWpd6qMW6qFfzlkPD/XXq3TQ
r6DrZ+zWnVsGo0+WHbJeuFsb/UrOvKXh3w9poV/F2b6pwS3nNdEn/9Eiu5Ok
gf5zziqXaNnl90KfbLtq34TaHuhXc7ZCy7W5XYp+DWeFnQlb+yijTx6/cra5
yXcDsV9L92PQvFKrLtGSOs5+H/j46roO0eHkNf/UOXi3i2Yv6PkpnVoX0SK6
jrx6scqFbEG0Vz1n9x0m/dz4XrT8Je2PCHuj8VZ0Jjl9xVdzi9foN3DWaDk5
1vkV+q84SyyssoipR5/cIzpjTVMt+o10/ONbkSOr0SevGb1M6laJfhNn2vE7
P+Y8Q/81nZ+Els+Dy9AnD02WRm5/jH4zPb9sF3sXPUL/DWfD5h+TjipCn2y5
JW1E0AP033L2QPDY+ykPfXKOu7vr8nvov+OsoMnKuugu+u85+9f0wF6bTPTJ
txSVh4rT0P/AWfPktsiVd9DnnCWn3ZrIU9AnP12lXOJ7E32BnueR65wNrqNP
XjAye3/uVfQ/0vXf3nVyawL6nzibWh2VODQefXJqUbT5o1j0WzjrGlKd5heD
fis9H+Z5GsyKQp+84MbiTZqR6LfR/X2mZlJ7BPrkw/e0/WvPo99Onzcr8cWD
s+h/pn7A5hu3TqNPNrg3Q+XySfS/cHa+oG1p+An0Ozjbk2KhCDuOPlnfU9fx
6FH0O+nvHzMn6XAI+uT8Hv7bQ4LR/4+zEdblUcf/Qb/rx/niz08Hok92ig3y
veiP/lfO4lWdxl31Q/8b/b/v3lqR7oM+ObXfSe+H+9H/zplr3v0RdfvQJ78K
tZ7W5onXJQK7PCR3ifpe0YfJu/enbFTsxvHkSyZBO9gu0eOUBKZzJPlv+7/w
/cl7eN8Zbu6ii8nfXv1h6e+KPcoCuxa3r+PEdtEu5FwTxdsLLthH9qwbEBGz
VbSmCr0/LPSv21uwl9x4b0nmI0fRieREaa9uTZuxXyqwmsmuKUqbRM8n31Wc
qdDbgPNBrho4qW3qOtEC2StOfc+6NdjfTWCnVFzqA1djP9m4eVHobXvsJxf5
nh/+YQX2dxdYdXlLoOFy7Cc/5NMtNyzDfvJqS7ecGDvs7yGwlAuBUz4sxn7y
jm6dEeMXYT/5ftbLA3sWYL+qwGbYu9vl2WI/OUDbUFtrHvaTsxdtynaYg/09
Bbb/whX7xNnYT85NdmlQssF+8rv0koZFM7GfvEVdUhJthf29BBYe7xLzdQb2
kw2fhTkumY795A553NxLDPvVBBbyfGvd51+wn9y7943Q6ZbYT9ZeNcHu0BTs
VxdY3gFzvbJJ2E8OMFT6pGOO/eR+PobTNkzAfg2BRRaanbpshv3kGQe2ff1k
iv3kuXrDnMx/wv7eAvP+Gvhy91jsJ3cNtarIGo395N1rKyq6jcJ+8lGtoFez
TLC/D33+qpiuAGPsJw/oKph83xD7ySn708coK7BfU2AqU23nTDTAfvIjnfE7
nfSxn1xbKDUO18P+vgL70jyrsVQX+8majlbXu+tgP7m2Lkg6eQj29xOYUVHC
+i2DsJ/8UvXdk7Pa2E8uVyvPe9Qf+7XoejT/9kCihf1ktXkXasb1xX7yb9HL
3Nb0wX5yRGCcTogG9vcX2PKzNU8y1LCffFrHV5P3xH7yFbNR9rqq2D9AYHLd
DaPndMd+8qlLavv+lmI/2Sqlc2mcMvZr0/X9k8a1Kgn2k2f2lAWrfx8m7if/
bqHKLb+K1hwoMI3SqBLn/0Q7kBtqn0y40CE6kVzo+aes7LNoySCB6Vf+dlC1
XfR8cpT8N1eLVtHhZJ9g63qXT6IF8pw/Bz++KIhmgwWWrxtyqvaD6MNk/7oQ
leHvRdeRTX5pbN78VvS4IfT887yTkdAs2ovcq9Ws3+cm0cXkT9pei1ijaPlQ
gUkcMzUDGkS7kKPCDFLL6rGfvMOuqF7/BfbrCGys19t251rsJyd1RvikV2M/
WfJEptTnOfbr0vcZ5tu+uhL7yaY7bmy4Wo79ZJlmVab0GfaTE2yGHl9Whv0y
gWWcjFx8pRT7yWrepw9JH2M/2TZ+TMLKYuzXo8976G1z4yH2kzsycov6FGE/
eeRGvfuOBdgvF1hd4Z34vPvYT5aoZqkq8rGfvOBfjUrvXOzXp/vrVfHR+hzs
JwtDxmVPz8Z+8o07yysjs7B/mMCCrNw39sjEfrLT6msVTunYTy5MNssqTsV+
cpVidPDEO9hvILBpB7OKz93CfrLt+BKf7inYTz5geUjuchP7hwusJGXQmMrr
2E9OaoqSWydhP7lnP3ufa1exXyGwcTFOD+WJ2E9+rt9xMPgK9v94XW+CkSQe
+w0FFjbTZsK2OOwn1zuuM264hP3kgQ5xAUtjsN+Int9uSvYFUdhPLkkK7Tvt
IvaTjUyOjE/+F/vJzquf5I++gP3GAlvx0rIgMhz7yZ7zEix0zmM/ed70nrrH
zmL/CIEN+mPUFvUz2E/u4d4xwucU9pN1FQvsvoVhvwldj1P6f/Q4gf1k7mPQ
+fE49pOLq1Zv23IM+0fS+3Vi7ZqOYD/5zZiXl9aGYD+5f7d3jjXBw9j/AK+Y
KL4=
          "]]}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwt13k8lXkbx/FDJhWViiYyk3ia0oaORJGfVmRvt1P27KUFoX2VrRRlqJTG
FMWQFqOGyd7JaJN5rNFo4nfSwozquXru7/nnvN5/nOVzXte5fvc91TPYwUtW
JBJpyIhEX5///5jN2QqduK1/n9BkX2lHXnw6+4xjvOBMsoFMdWnlMcGcbBu+
fe2Co4LZHM6amo67XDosOIFsWbPq7fhDglvJt8QFB3YfEKw7lzPfh7dzuvcJ
jiXzkxM32uwVLCG3fSofVRgnWEOHM2XL0lXfxgoOIZ+SdBvv2S24jNwSo9L8
Lkqwki5nj51OpWyKFOxOrjZ+/PzhTsH55EOOe3822iFYpMeZZKRM+o8R6Ce/
71i1ZtQ29JMbP2+0iAxHPzlE8u1waSj653E23uTIRd8Q9JOdI59dbw1CP3lO
jzjTMRD9Ys629v021BiAfrK16i0je3/0k5uGTDrrfNGvz5nL+rggKx/0k8e+
yfWq8UI/edFPfYusNqN/PmeK4gpe74l+8sfMNeMcPNBP9p8vGfvUDf0GnGUb
uu90dkU/+YnagrIOZ/STuUN0aIAT+sm/x3h9ebcR/Qs4a18x6ePuDegnZ22r
rB61Hv1kxdYM+dS16Dek94urnzJtDfrJJS6xmQUO6CcfOdf971J79BtxNils
zq+Ntugn1+/R7/GyQT95ra5u34AV+hdy9rzNwunYKvSTNX/4JXOqJfrJAUnp
VsXm6F/EWUyH7iOblegnJzRn3O5ajn6yc3GlQswy9JNvereLVZei35izhg6V
ewVm6Cdb2KZOs2PoJ8tLEnr/Xox+E5r/YV2Tj5ign1xmWjNF2xj95PNt/gcr
F6J/Mc3jlsFyPyP0kyUBWV4Khugnp5xIfXHNAP2mnJWfGF7oMB/95CmrtDwG
xOgnh6z3a/9xHvoZZx9Kh1Ws1EM/WblgeqRUB/1kTXV7uXNz0U+ukh9ys5yD
fjPO/sm5eHxwFvrJHesfHPtpJvq/OrHV2UUb/Us4O2auflRpBvrJa1PyD1f8
gH6y1zK1DVHT0L+UM5WFnRm6/0E/2SCowrVdE/3k7uytpxOnon8ZZ+lag6Wm
Gugn+76zdX/9PfrJpu460SnfoX85Z4mR1hMXqaOf7DLdfXaLGvrJbNx3ZbGq
6CfvLTBqmDIJ/Ss4G+XrcqtsIvrJFUaGpwNV0E++Y6Vvrq6M/pWcjeurq6od
j37y5JQ49Zhx6Ce7NNaYipXQb85Z8Pe7snvGoJ9sJGfXdGE0+smKudV/uiqi
34IzsYtP3mQF9JO7D1+waRqJfvKyiqFbaSPQb0n7vpL3O8ujn5wW8mlAYzj6
yS1lmVVdcugnL0u88jRvGPpXcdbT3Jy3Sxb95Pd6JfYrZdBP/n7p3TsqIvRb
cXax24e//DxV6Ccvqj3kWvJJsIS8pOxlcvyQYA1rzp49sZH1+VdwCPn8h6ac
Jf8ILiNrp9opawwKVrLh7GB4bJFoQLA7WbOmQdT1QXA+WSdm5eZH7wWLbDlb
Xt+45d47wXbkgPKZqkX9gjPJB6Itm/LfCubk/WGzjPOlgpkdZ9sN59bc4IIT
yE891ZWL+wS3kiUPqg6V9grWtedMRsl+RtUb9JNbw6NiHv+NfrJnkIbo5Wv0
O9B+NfJ26O9BP/n+u/5XMnAZedcFL/uxf6F/NWe37T0+q79CP3m1dE+0djf6
ybaRIWYGXehfw1lzfcVTs5foJwc1zCiw7kQ/+ZzDfI8NHegnrwtj7R7t6F9L
8/mmLyegDf3kXq+WJVtb0U/W21+oGd2C/nWc1TWNerLvv+gn3/h08OGxP9FP
Vgx4cDa5Gf3rOfO7HJSf9gL95NTvVE9nNqGf/Dh+8prs5+jfQN/nYnVnzjP0
kx/07bLMfYp+sm36o49Xn6B/I72+2G9X3mP0k/N/Tm3Ia0Q/2a0qT5T3B/rJ
8cuHf3O1Af2ONN9mfS1XHqGfrLltrNxlCfrJ0+Nkvpx/iH4n2m9Oqo/O1aOf
vFnPccSpOvSTa/1is4/Wot+Z9ouB+ZXdNegnuycFKgdXo5/8KcVpm1MV+l3o
/zj65CtWiX6yYZ1bu8YD9JMzJnyUDlag35X2laytam05+skfE4YWp/2GfnJp
o0TqeR/95PiUS9nT76HfjbPrTzKcXv2KfvLjjMPnL5Sin/xnJut1vIt+dzov
FLMiRtxBP9m46G7+1VvoJ2+5lDHbogT9HuR4uTdNxegn/zNC5LO5CP3kOa9O
zewsRL8nZxNiLxyzL0A/WZw0XCP3OvrJpv5XnN/moX8TZ2opGe91rqGf/JH3
uXn9jH6yRfrZWYk/oZ/MlvnL5eWgfzNnb6oteksvoZ+8QTrzTdlF9JOvB/c6
lZxHvxdnSzNP513JRD9Ze5LWjoQM9JOr5Ww8/M6i35uzoftywfpp6Pf+el7o
ZUtT0U/ekHFXPusk+n04U3iTkLYkGf1kUWiSx5ME9JNzJ6QVu8ej35eziZsu
jOs4in7ymZk/fnE6jH6yuMNgX80B9JPtPmxSFu9Dvx+dBwoqLDEO/eRL26Uj
u3ajn6y8h3fNi0K/P2fX8j57R+xEP9nllGdoQQT6yaPU2a7X4egPoPM/stZT
ORT9ZI24hAFxEPrJvvox+asC0L+F5q0pVs3RF/3k9XN3ynp5oZ+82kDlo78n
+gM58y5U2BLohn7yrMKNnluc0U+uNM/19d6I/sCv12tFb53XoT+I7lfyI2Ts
VqOfXHU7VWuxHfrJNxfW186wRn8wZ+HDvEPGWaKfPLhaOmZgBfrJsgnXDV4s
RX8IfX6/1PEOQz/5L61lUekm6Ce3pBul71iI/lCa/0/jVzgsQD/50j01rq2P
fvLa2rYzX3TRH8aZVYam6e9z0E9eUFQdGjUT/eQcD0mO1nT0k5dbB7+6rYX+
cPp/Dm88aqGBfvLIW8ytQR395Hc7xm1ep4r+rZwVM3vtRhX0k/2uKWtZj0c/
OdVUvuL+GPRv42z0mOpzYgX0f7VUfmqWPPrJ80pl7yvKoT+CM1Wf5P7tIvST
1X85tLRtSEPoJ8eU+N8wHxQs2k7njdL4grz3gu3IrrOt/1B+KziTPFV1dVZE
r2BOjnP8LfePHsFsB2cn5630ntMtOIEcFnh0xO4Owa3kmwfD5B+0CNbdyZnP
ksa3w5sFx5JNJpjVmTwTLCFv8zmjENgoWGMX7SvpDZNkieAQcv8LV52iWsFl
5LrsBcGNlYKVIul+5VhbSF+5YHeyd13q5RH30E9OKp99YOpd9EfR73PZN82w
BP3kke9qO61/QT+5tGjWM8/r6CdbN1rJRlxFfzTtt2p36f4r6CebJYv0E7PR
T/62u97kTBb6d9P+ri8cm3EO/eQud0vDjDPoJz8P05uVfhL9MZwVvjjvdCoR
/eTuhCDjxOPoJ//g6eh05DD6Y+n63+/lzbj96CdH2bQ82BGHfrJj0uiJQdHo
j6PeZ1rlATvRT27wLX8Yug39ZPcJ1w5tD0U/WWww0BsViP49NH/at2T3+KGf
nGuiUH7AC/3kdaWy4qMe6N9L7iu2PeGCfrLxmCVqyRvRT5Z3uJl0ai3693E2
47VeyRl79JPjhv1+/Kw1+smxzj2zzlqgfz/9XlkGmqnL0U+uW2zVGW+GfrKv
7DfVB0002P8AFSgRqw==
          "]]}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw113tczHkXwPHRRa3ajB7Clm4ohCK1tT3VVyRtpNu6dpltlUvaYpbCaqes
EDGkXCLF5pJoWt1Q2yiR0AU10XVjE1FfbSmkfY495+mfXu/Xq1fNp9/3nO+M
UWCYV5CSQCAwHCYQfP7+71csZ48jZ+gn2huyz/QAf71b61G0LToVfCKxe/eP
VmgOfqef8IPvLDTbzZlpY3qQ2wy0FJwV12b99VR0K1g4tyVIfzLaYg9nfnV2
wUpGaAnY80pyWJMeuhrc2KJ4JxuHNtzLWV/5H/u2j0aHgzUnWC/6RoiWg0Xb
Eu3eaKCFcZwd2TZ3uFQNLQJ38NO55spoGVhRGC1L/GTwrwX7OOvR/Lm0rBft
AbYIkMb1dKJTwS4x7p36z9AcPHxo1rCFT9FsP2eyv6c8CK1BS8HmZ0vmJJSj
W8EXVbd55xajLeI5qx7ZrKXIQ0vAiTUj1gxcRleD33vp+Y5PRxse4GzMkZld
tifR4WAzs0KbZQloOXhShrfRT3Fo4UHO5v8hvCCNRovAnzRHPsiMRMvAPZbr
peVh1C/lzFj145TmYOoHj5/efPWVH/WDO5/MG/fWh/rBrRfMjPrdqP8QZ+6b
sioHnagfbK/+0lDpG+oHr7fqGas2i/oPc+a/al6V+hTqB7cr1k4fYUD94HuT
fjbX0KH+BM7O5iTVa3xJ/eBHPTWmmirUD96R3jFs5Ed97D/CWe9L4+DRPWgR
OES83sbgJVoGDp2ceHh6K1qQyJlub6f4vwq0B9hdraDBvRKdChbrPb8cXIbm
YGUjF5XoQjRL4qxU26z51FW0FPzc+Ok3RRnoVvCfY9nQn2loi6Oc9b+Y4/TF
cbQEHHhcebilFF0Njg7qXxiwG214jLPsrz51SaPQ4eDbeW9GlW1Gy8GLXMZk
f9xA/cc5+01Tfm/OauoHP29ocBavon7wkmtOtjle1H8C5qVgbnq/K/WDuw1M
9trPpX6wWkVz+R4b6gcHyxdE1ZlTfzJnBbqZF0xMqR/82sTPZas+9YO1b7o6
1Iyh/pPw/PoXnzf7kvrBv78oiN6jQv1gs5Yn9198nID9pzgb1fDP2Ggd6gcv
UJh0aM2ifvDzZfOcDrlRfwpnO4tczNSDqR88puqO/WYJ9YN3awR01J2g/tOc
Dbv+3nxGLvWDC4bFjI+son7wHfFOx2t0fji4yveQsFuZzn8qZ0MDEzoM9On8
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
v/0P1n5ySA==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlT1oFEEUxxfBJo1bCHbnic3ZyMVgGRhstLC4BMsUQVEEC9dCkBPlEA7B
JicIEhG5EBFBkAVRz5jE9S6XaLyPvc+9r8ClEyIyILGwcibvP8W8gRB+kOy+
33vz/nvi8s3Zq4ccx7mvfvRvfbwPUpyaWyjuX58SmgPFihJzR4jdj1L8Teg/
OHPA84p300ffnt8l9hU/W1SnT+wUpJgtxLJ7DeKU4mpFH+K84gv6AVvEUnF2
b6YQKxOLT1KU9vULiXOKD54bEI8ZJ1ekuKvLWSHOKL41PREt+8Sh4l/q8dk3
xPHPUlzT5xWxxzhg7K6iP6/hz9hftZ/vrNmcUqyqU8LwX7Prk4qn9HkH/3Wb
c4zH65jHe/h/sTnDOGQcD2z2GAeM3a9S6HHOFODP2GfsFO3/TzHOF20fWbT7
IUo250p2/8aMkxt2vzOMww17XvGyzV6ZzZ+xuynFS08XBP9N3P8l+DN2tqQ4
rtvxAv6M84r16xPP4c9YfMM+LcJfcbSsCngKf8bJ7zZnGIeM49s2e4wDxu4P
KfR6pZ/An7HP2Klg/x/Dn3G+gnxZgL/iCf3CR/CvIg+y8K8iDx7AX7GehncP
/jXsfxr+NdzHO/Cv4T558K/jftyAf93kH/zrmPcV+IeYzxz8Q/hegn+IfLsI
/wbqPQf/Buqdhn8D+3AW/g3c59Pwb+L9J+HfxP2Jwb+J+RyDf8vkNfxb6N9h
+LeQlw782+jXv0nyb2Mf/xAHbdTzm9jtoD8/iec7Jv+J/Q76MyJ2uqgvIk51
0a82cb6LeuvEsov5bxOLyHwPiHOR+R4QjyOT/8TJnsl/4kzP5A1x2DN5Qxzv
m3yBf9/kBfz7Jh/gPzB5AP+B2Xf4D8x+w39o9hf+Q7Mf8B+afYD/0OwD/Edm
H+A/wvfyIfxHZh/gv2P2Af478L89Kf4DnAbmWQ==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
BxTANMs=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdmF1oFFcUgNeojcbETDSaqmmcGI2J0WSSGBUhMBSKRQquUiiClLVSKQh2
SxGKpbAIIhTBLQhiKWXFUvokC32RPi2WUiiWriCIUMpaYxpN1BnzZ6LG3tnz
3Ydz9yV87Gbv+c4599w72/7Rp4c+rkmlUusXpVLJ3+SVrkThYPXVHyZcMNx9
5MKN6S7hyOHwXhR+e9m81gnnDTdf23fvdLNwxfC7hq7VCgf/RqGsJJwz/GXy
D/NBlcuGPxuuu3M1EvbvR2Hy7/vuCWcdLhm+czVr/kPYG4nCJLojfwlnRlj/
d+HiCOuXhFMPovB629nxg9eF04ar4V8TLhg+nrx+FI4esP4V4XAU/8vC+VH8
LwpXRonngnDwH/GcE84Z/jV5+wz+hhP97Ff4jxHfF/iPkZ8s/oYnDppPnMD/
YRT+kKTjGP6GNyZ6H+L/kHgP4/+IeN/H/xHxHsDfcLLa8H78DSdf1/YO/uPk
M8R/nHruxX+c+PfgP2H7C/8J8t2L/4TtL/wf49OB/2N82vA3XP14K/5PbP/h
b/hQEkAT/k/wqcP/KT5L8X9KPWrwNzzTlazQJ/5PbX8Kh5HtR+F8ZPtRuBKx
/i3hINaci/XnyzH1HBf2n+n1s890vKVn2sebpH6N+E/y/S34T9LPnfhP8f1D
+E/p+hWmdL2jKd0v4TT+R6n/tO7PyrTu72AmCv+8aV7nqf+M3k/lGb3//Fm9
X7OzNn/4z9IvY/g/p78m8X9u8yXzpvhcz6fUnO0v4fScM//m2I/DzL85uz+Y
f/N2fzH/5on/JPNvnvyeYv69sPub+ffCzgfh8gvqdUnYf8n3fy+cfUm8V4VL
L22+hL1XxP+zcOYV9fwF/1fU4wb+C3Y+4r9AfW7iv0C+buO/wPy4i/9r9t/f
+L8mvvv4v7b1wT8VS7xP8Dcs/Y2/YTkP8F8US5ypAfE3LOeJcMmw9LuwVxNT
X+GMYTmfhIuGq/3WLpxaHMt+6xFOG672byBcMCz9IBwtJr69wuGSWPL5tnB+
CfHtE64YrubzPeFgaSz9e1A4Z7ha7w+Ey4ar+Twi7L9BvEfxN1zdv8fxN1zN
7yf415Lfk/jX4pPFv5Z8n8J/GT6n8Tcs/Yn/MvzO4L8Mv3P4L49l/nyN/3J8
z+PvvB/U6e/L1en1ynXk+3P8V2jfrGHZb/ivoL6H8a/X+c3U6/wX63V9Ug26
fukG4hnGv4F8DeHfoPshXEn+u/A3LPME/5XUsxX/Rt2PuUbibcK/Ufev7+Hb
hr+n+7fk6fW8Jt3PmSbdz0XDch7jv4r9FeJvWOY9/quo3378V+n8hqt1v+Yd
rqzW9QuadT/mmnW9y826H/w1ul+ya4jvLP5rdH95a5kHF/BfSz4v4r+W/XYJ
/xbN6Rbqcxn/Fny+w9/h8E3NeYcrDgfrNOfW6fXKDvvrdXzZ9dqn5LC3QXNm
A/X6Bn+HU62a0606fwWHI4fDtzTnHa44HLTp+ZBr0++XHfY3as46XHLY8536
O1z0Hf92x9/hQrvOZ+RwuElz3uHKJv19QYfmXIfj36Hz42/W8za7We+HksPe
Fj3PM1v0/ipu0edDqpN5cQL/TubJMfw79byNOvV5FW7V8yC/FZ8D+G/V8zbo
0vM216XnbblLz1u/m3h78e9mnnTi363no7fNOf+3MR/q8N/G+jX49+j7RrqH
+RRx/+lhvVHuPz2xuu+E2/G/xf1nO+v9wf1nO/O1xP1nR6zuY7kdnB8/cf/Z
wXy/wv2n184D7n+9sbovlnrt/OP+18d6Oe5/fbG6fxb7bL25/wWa04G9b+Af
2HrjH8T6/ttvzwf8+2198e+35w3+A7a++A/Y8wr/gVj9vuAP2vMO/0F7nuI/
GKv7vLeT/VOP/85Y3/932vrjPxSr3x/SQ7F6figMxer3iGgoVs8b4S72y32e
f3bRj//w/LOL+t3l+Wc38d7m+Wd3rH6vKO+2/cPzzx7i/y0I/wfesPUb
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
zRIy
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdl1toHGUYhseCCEVwhYAUpG4RJN7o1N5INWaapDkfJofm0G6SyfmcTJqk
po22k7Q5NsluvKuIrCgiCGFBhCAIS0UEqbiCUASRLYIIiuwiipfO5Hvfi+/f
m/Cw2dn/+Y7/nhmcaxs5YVnWqccsK/obvdLni07y/j+liaTtRFwIufbRjZLD
TWHnteLxXysQToV8dHr9j9Zl4XzI56LXgrD9etE5rAkfMCschPxiIvyGceFc
yNHjawaE42VF59174atH2A+5JHpAh3A25O8ehK9G4dgbOF+NsBfyV9HxK4Qz
IZedfPihXyZsleO8rwq75TjvOeF0Oc77EvxDHo1eL8Df0ZwKOdIpfRb+BtsX
cP4S+F9AfJ+Cf8jHxzsJ/4qiE57u6PTj8K+Azwn4h/xvafQNL4t/pWavEuf7
TThTifg+EraqcL6fhd0qxPOBcLoK8fxGuFCFeB0JOxcRr8+EUxeRz0+E8yF/
5EcRF7arkc97wkE160s4Vw3/HeF4DfzXhf2QV44DKJytge8S/GuLzp/Rv0/B
vxb+o/CvZX3Bv67oHIe7C/51rCf417Ge4G+wU8/6gn896wv+9awv+DdoDhpY
b/Bv0J+PN+rn+436fNlG5C8B/ybNXpPh36TjZTXr+LvNOl/pZnz/ffg363px
WnS9pVpwvidR/y2I7zOofxfPfx717+p+y7m6X+OtRaftOGCof4OzrfRD/7fp
+eK1sV7Q/22sL/R/O553gP5vh9976P92PP9j9H87nn+I/u+A/+fo/w7k70v4
dzB+8L/EfoL/JcT/e/gbHO/EvPgR/p2I50P4dzIf8O8qOs9FDfML/LsQ71/h
38V5AP9u+PwF/27k42/4dzO/8O/GvLfOin8PfJ4QTvUw/8L5Hs47Yfsy56Fw
YHDuMuZHqXD8CuevsH8F+TwvnL3CfhSOJVgfwl4C8egTziRYH8JWL+tD2O3l
fhNO97I+hAu9rA/49xWd+SjhGfj3cT7Cvw/z62v493O+wr8f8/An+PczP/D3
8PwC/D3G/xXx97gvhGMD3CfC3gDO/7RwZgDfd0rYGmR/CruD+v/TBhcG9fc5
Q8y/cMrg/BD3l7A9rM8fDCNe/8F/mPUH/xHWJ/xHUB+/I/8jrH/kf1SzN8r+
Qf4NtsbYb8j/mM5Peoz9ivyP4fxZ5H+c/Y78j6OevkD+DbYn9OeDCV0fuQnE
91v4T+rz+JPIxw/wn9T1E5ti/8N/StdTZkrH05rW8Xendb7S0+xf5H8a+/MM
8j+D+rSR/xnuN+R/Br4O8j8Lv3rkf5b3OeHcLObVkHB8jv0q7M9xf6H+53jf
RP37vC+g/n32M+rfZz+j/ud5H0H9G5yeRzzfh/88/D+A/1XuS/hf5b6Av8H2
Au9H8F/AfeVT+BscX+S+gf8i5w38F3n/gv+SZm+J+wn+S5xP8L+m2b3GeoW/
wQWDnTdZ//A3OG+wvaw/Hyzr93MGx69r9q/rz2eN92M3NHsGZwy2VjS7BqcN
Lqywf+H/luaUwXmD7bc1BwbnDI7f1Ozf5H0C/gbHbnGewN/gzC3OM/gHnDfw
Dzhv4B9wPsI/4PyB/yrvI/Bf5TyC/yrnMfzXOJ/gv8bfI/Bf430F/rc5v+B/
m/Mf/sb7sTv6eZ7BmTv6+611fV53Xfuk17kv4G+872zo91MbOn75DZ0fe1PX
U7Cp+zm3qedFfEvPH38Lz9+F/5aed7Ft/t6G/zZ/X8N/m7934L+j57G7w98f
8N/h/Qv+O7yvwf+uvm+k7vK+iP1nsL2r93ewy3hi/+0a+29P709/j/MQ+2+P
8xT7b5/zG/tvH/Ffw/7b1/c9K8l4Yf8lGS/s/6S+PxaS8G3B/k9xv2H/p7j/
4J/ifoT/AX//wP+A9zH4H/C+Bf93uI/POv8D81Tuxw==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
fwFTKYaV
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdl1toHGUUx8eCCEFwhKIIErcvEhF0axFECAyCVERwWwQRgqyKRRB0RARR
hEEIgi8ZoVqbNsmkud82k/ulrY6ba9tcJpc2za3d2jTmIjKLVHwRnMn5n4dz
5iX8yO7M9zvf/5xv9sj7n5788JBhGI89YBjJ3+SKThet4dLK/RPDaSth68ei
dSy5+ojdmE8lVzNxIeY7Xx3OHa8nTv9UtKrPJhexE/PJ5IY/EIcxl6w02OXf
E6fOFK2x+2UVVd8S2zGXJx/4hjg4g+d/Tmz+XLRyx+MnfkKcjfmZiqr8/Y+I
/ZifSpb/LrFxFut5hzgTc/L4kreJvZjjb5dVvEkcxfzagRD8q4tWcrvSV+Ff
jfWVw78a9XoJ/ueK1mfJB9Lwj/nP+OuVz8L/HOr3NPzPo35H4H8e6y+Ff8yH
D4ThX4P1PgL/GtSzBP41WP9D8K8t0l8D/jH/U5YU7Hnyr8V6tomjmJP/lm0Q
W3WS3Trs5wJxoQ7PmyJOe6jPZWLH4zwRhx72q5U4VV+0Gu3kG8R2PfxriYN6
zhOxeQH+VcTZC9ifSmI/5q8PCkZsNMD3C+JMA/bjY/g3oP7vwb+B8wH/Rvie
gH/MszPx9Qb8G5HfV+DfxPmAfxPnCf5N8n6pZvl8uxn75cC/WfqaLcjDafi3
yHr5Ldyv8G+Fzwr8W+G/D/9WmY+oFX4PI/9t+P7jyH+bzG+hDfV+Gflvl/3j
tMv+C9tlP6c68PnvkP8O9kP+O9DvOeS/E/s9gfx34v6ryH8n7v838t+F/Tl0
lPy7uH+IvS7c/zniqIt9iK0c9z+xm+N8EBdyqMcp4nQ3+t8mdrp5P4nDbp5/
xCmf5yex7fN8JQ583k9is4f7iTjbw/1G7PdwfYiNXu5P+Pdy/8K/l/MB/17u
d/j3oT/vwr8P/bsD/z7U7y/493P94d+P9f4L/36s9z/4D3D+XiD/Aaz/QeJg
gOcZsTnI+STODsLnUWJ/kPNKbAzB50nizBDPW2JvCD5lxNEQ54HYGsb8eJHY
HeZ8EBeGsX6LOD3C+Sd2RnheEIcj3P/EqVHuD/iP8jyA/yifb/C/yPML/hd5
fsJfsXFJckaxd4n3E/6KrcuSXcUFxelfJDuKQ8WpXzG/bsFfcaDYDCRnFfuK
jd8kZxR7iiPFVl6ym8c8ycM/z/0N/zG5v84YnwfwH+P3BfiPS7bH5eeDcT5f
4D+B+fE6/Cdk/vwJ+XljUuYxMynz6E3K9UaTPN/gPyXz6U7x+xX8p3j+wX9a
5tWZlnkNp3k+wv8Kn8/wVxxc4fMc/lf5fRH+V2X9fcXGNckZxZ7i6Bq/f8J/
Rj7fncF+fQn/Gbne9Cyfb/Cflb7hLL+/wn9O1seek/UL5mR9zXnJ2Xn08wfw
n5fzwwjlfmVCzMMK+Idyv6MQ5+9b8F+Q7C7IvBQW+P0Z/osyX86izGu4KPOY
WuLzFf5LMr/Bksy3uSw5uyz7xV+W89m4Lvsro9i7Lud7pNi6oeb/DezvMfgr
Tq/w+z/8V+T/Q8Wpm5Ltm/J5gWJzVa4/q9hfVf5rsj6ZNVk/b03WO1Jsrcv9
cdfl/hXW5f6mN9T+b8i8hIpTmzJf9qbMY7Ap82rekpxV7Cs2bqv8K/YUR7dl
/1gFya7iguL0HcmO4lBx6nfJtuJAsXlXclaxr9jYkpzZkvPDUxxtyflj3ZPs
Ki7cU/N/W84jR3G4rfz/kPW3FQeKzR3J2R21/zsyT8auOv92Vf53Zf9Fu/x7
Hf578v3Q3cN5+AT89/j3BPz35fuss8+/t49a/wP+yhNB
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw11nlYzWkfx/FDIUWdKErRkaWdOkqhdBOFZtoM0lhqioZMiywzCVlCGTpK
IkpqMqjGyRItCEVJlG1Go5xLPWV3zk+d7J6P5/4+/dP1uuqq6/079/f+/ob/
FBWwpKdIJJL0EIm+ff/f12sVu+Zj5NCy0oJ9ox/8a4e63GAFdw5snXDf03sJ
txI+tyW9YssibvZGxUynFppenMctg/PNsvTUftwKmD27NsJ6Fre9UsV0XFNv
/ujBnQCH+0dMSXTlboA3jOpU/+nELVGpmKFOVfyVMdzRcF11UetHC+5KuONF
t/kPw7nFgoqVTNXW+nMIdzA88Xn43s6B3HLYOD2t1rU/t+itip3doXd8Y2/q
h8MmVfiWfR3N++EBfd2kr99xK+HHedYKY4GbdapYZkyb5oQX3DL4gXlXnncb
twL+Et5e6d/Mbd+lYgE1qzfOecCdANe1ff5lzm3uBvjK2NavATXcEjX+XnyD
k89l7mg48qJZ9vQy7ko44bxj4cTT3OJuPP+bazIsCrmD4UOSLff653PLYVPp
S+FFFrfonYrZen3uvLyP2w9ukvv77kmhfviUUdyewB3UD7csmf1+2Cbqf69i
Pboj3v/nN+qHkwbPMCtcSf1wS9SoiJgI6v+gYiqvVF/nMOqHt98bEPRpAfXD
6VJ/39I51P8R5+1Ue16UD/XD+76EdAz1on5Y+0vWvDp36v+kYp1ii/DfXKgf
Tt26MW+0A/XDJzRa+921ov7PKjb0YbNhgjn1w3ZugretCfXDZw103B4MpH54
3911a+P7Uf8XFTO6fCRS0ov64WqXmPSrn0fxfli3ZvWicDW3/VcV+/TMfp72
G+4EeMHa5o2FHdwNsP+z3t6+Cm6JSGCZR8d4qv7hjoafdtvdkTdyV8KaSp1t
UTe4xT0E1udwr5/srnIHwzUagUufl3PL4X8qZL2OneEW9RTYzTnj6sOKuP3g
pefiL0iOcufAVss/zGjO5lbCR1rHft6fwc00BLZbPb9ptoxbBq8x7D1bL4n6
YeXhc521m6hfU2B1AQWXtsRRP5yfHDl6ciz1w/Z7tpZ0R1B/L4GNUA1K+Hc1
9cPWIYYTyzZSP3zz+2aTNPp/4t4Ci6owX7gkjfrhT6OUTvZZ1A+vb5q5qpP6
RH0E1qV70PKynPphrXZX331l1A8/Mkxui62ifnh5R0vb/FvUryWwQ1Xp6e70
+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
15L9FxSGB2E=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdln9oVWUYx48rnc3pznRuTud2p27OzO3sl27Tux03xRChOwlEkLgVSRDY
jRDE/rkE0T+BNwjEkLhgRCDIhRAkCC5G9I/RDQL/ibgSRFDYvWebrc1p7z3P
56G97/1nfO7ZPe/5PM/3fd7T/drbp9+o8zyvdY3n1f7WPpWH1fBR37krdy8O
hjUO/66Gt048uNxyQThnuOuDP2fvvCJcNnz/RibZcEY4qFTDH+6ZzynhrOHa
v3ceFy4ZvtNpvhkTTlSr4TvJhvs3AuGM4X1m+YU+4aJhs/qtE93CflQNW+IH
Ek5HrNcoXDD87YIRqBP25qrhe7UfLAUxp+bwWxDOG/5rtvZEwpU51nsgHM7j
d184N89694TL86x3VzhYYL2vhbMLrHdbuLTAejeFE4+q4fna5wvhjOFY/7pw
8RHrXxX2/6mGtcvnrginDb9Ye+APhQuGY++ssLdIvS/hv6j9xH+Rer+J/6L2
F/9/q+Gn18znLP6GT8c3xN9wQ+0BT+K/pP3G33Ay/gf8l7T/+C9r//Ffph69
+C9r//F/zPN14v+Y+rTh/1jzgf8K9WrCf4XnbcB/hfrV47+i+cH/CfX08H+i
eRoQ/yeaJ+HgqeZJOPtU8yRccjjhRdLvX4QzhiVvwkWH/TWR1P8n4bRhyaNw
wWGvzuaUw/k6+34V53r4jH0953DZ4eBZm7MOlxxOrLU543DRYX+d4+9wYZ1d
L6/erm+q3r6eN7y6HxXDq/sXro8kz2vp/3rWayb/67l/B/l/jt/vJ/+Gh+MP
+Tcc52eC/DdE1n7JNFD/U+Tf8Or96G+IrP2a3sD9LpN/w6vngdfI835M/g2v
njf5xsiaV5VGfv89+d/I+r/ibzjerxX8N0bWfA028ft65v8mrRfzfxPr9zL/
myJ7/jdpfZj/TdzvBPPf536zzH+f+p9j/vvc/zzzv5n6vyucMhx/nxXON2u9
hCvN1P8jzr/NkcyTTzj/NrPedc4/w5/X4nSD828L/fkSf8PxOLqF/xZ8C/i3
8Hxf4W841ruDv+F4fn6D/1aev4j/VvLzHf5btX/4t+p+xt9wXK4f8W/F72f8
W3V/4N+m+wd/h8tt+P+G/zbq/zv+26jHH/hvox4P8W/XPOHfTj3m8G+nHov4
b9e84b+d+qzgv536eEPyd0fEPBdO7dB8CucNy3kgXNlBvRqFww7Nr3Cug3q1
CJc7qFebcLAzkvOyXTi7U+eDcGkn+6lTONHJ/OkWzjhc7KS+u4X9LpvTXbqf
hAtd1LsP/4TNqYTOJ/wT9KMff4fDbptz3bpf8Xc42KXzDn/D8fk4iv8u+jmG
/27d7/jvpp9J/B3299DfEH+HC3vo9zT+PTpf8e/ReYJ/D/0/iX+Pzl/8e23O
9bJ/XsK/V+cR/nvJx8v4O1zaS17O4N9nc6aP/JzF32F/n847/B0u7NPzAv/n
bU45nHe44nC43+acw2WHgxdszjpccjhxwOaMw8UD7IdX8e+3Od3Pfngd/349
H/EfIL8X8B8gjxfxH9DzE3+Hw4A8vY9/oOcF/gF5uIL/oM3ZQfp7Ff9BPS/w
H9LzGP8h9udN/Id43tv4D+u8x39Y5zv+w/o+g/+Izlv8R/R9Zlj8R3ReCVdG
dP8Kh6O6v4Rzo5pn4fKo1l84OKj1E84e1HoIlw7qeSicOGRz5pCeX8LFQ3o+
Cftjer4Ip8d03o+I/xjrNQl74zpvhVPjOq+E8+PqJ1wZ1/kgHE7o/hbOTeh+
FS5PqL9wcJj7Z4Szh/X9Q7h0WPMnnDhic+aI1k+4eIR5eUnYT9rX00n7eiFp
r+9Nkqe38J+0nzc/qfMD/0ntL/5TOv/wn7LrU57SeYt/qPMe/1DPH/xDux+J
o3q+4n9U84n/UT3v6f+0vp/T/2l9PxUuTOv7jbA3Y+cpNaPvV+R/Rt/HyP+M
7kfyf4z7f0b+j7FfrpH/Y3a+g+M6H8j/8f/3w38H+cqk
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
om6980nUD94RZPbFO86Y/Q9FTDkN
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdl1toXFUUho99EYrgCIEiSJ2+SMQHjxZBhMJBkNTaJjNJ2qTNJDm5TdJc
T5JOc2uSk/s9c9Lcrz1SkYIQBkQogjDUB18qjiAEQeQEwZeKDJGK+OQ+Wf9C
1p6X8jXJ7P2ttfbaa1+o7yptOmMYxrkXDCP8N/z4l0+snW31+fldK+S84svH
gwWH3xFbH59Yj89PPYs/JvYU/xFX//MFcaD46KFz6ewmsXkFfz9D7CoeKjgs
Oh4kzil+M5F+8ryFOPoJ1r9J7Cj+/qn6XCXOKv72eWEi/SFx5Cr28z6xrTgZ
ft4gzigOv77wNWLj2olVGv7BK8QxxWRO7Cv+uzD8i3fI/xr8nhFbxfi+X4i9
YuzvKXFQjP09ITZL4Ps1sVvC8SLOKf5MhevoIXE0xvEjdhSHyyXSxNkYvn+c
OBLneBLbcew/RZyJY702YqP0xArTUVRHHCvFehXEfiniE4e/4jDb5z+CfxnW
+wD+ZVjvPfiXYb234F/O+YB/Oda/AP9yrH8O/tc5P/BXfPb0F+B/nfMF/xvI
/z8m+Su+GH7+Is7c4PwRGxWI92/EsQrOJ7Gv+DScPxHnKxD/H4itSj4PxF4l
9pMlDio538TmTcTnK2JXcfj1BYfEOY2jtxCvz4kdxa+HCTggzt7CfveII1XY
7xr8q1CPi/CvQvzm4Z/g+oG/4rD6nGH4JxDPfvgnEM9e+FefWN2nfwD/auy/
E/7VfJ7hX4N4N8C/Bj418K/h8w7/Wq5H+NfCrxz+tdwP4G/D7wr8be4P8LeR
Hwv+dVy/8K/j+oV/HfxM+NdxPcO/nusZ/vVcz/Cv534D/wb4vQr/BvgUwL+B
6x3+jfB7Cf6NqLcX4d8IvzPwb+LzAP8m+P37Nvk3wSdPbCT5PBDHktj/MbGf
5PNAnE8iH0fEVjP2+yOx18z9jjhoRj19Q2y28H1B7Gqca+H6J47eluzc5v5I
nNU40or4bhPbrXwe4N/K/RP+behnU/BvQ/xc+LdxP4V/G/dT+LdzP4V/O+oh
Cf927q/w70A8E/Dv4PqGfwf3W/h3cn3DX+Nsp/z9SJdku0v+fkb7ueHI/cUc
uX/fkX55h887/LtlPLxuGa+gW8bT7JHxdnu4H8G/R+Yr2sv9Dv696CeP4N+L
fvQl/O/IerHvyJ9nNDZSsv5iKflzPyW/L5+S61t35f48jYO7sh7NPunn9sl6
zPXJeET7ZfwcjbP9Mt6RAZkPe0DmKzMg82kMavnX2B+U9ZoflPVqDUn2hmR9
BRqb9yS7Gufuye+LDsv9OBpnh2W9Rkaknz0i45EZkfEyRmU8Y6OyPv1RmY/8
qMyf5cr8eq6Wf1f2J3NM1o87JusrNybrLzou69MZl/00Oy77bWSC5xH4T/A8
Cv8J2a+NScmxSdnf/Umt/2tsTSH+v8N/St4vwZS8f8xpeV+50/I+y03jPLyM
+29G3p/OjLxfszPy/o3MyvvZnpX3d2YW8buE+38O6xfh/p/jesT9P8f1j/t/
jusN9/+8nIe8eTk/BfNy3jIXeJ6H/wJ8PoX/Ar8H4L8o50VnkfMP/0XOP/yX
5HxqL8n5NbOE+vwV/sva/LuMevwT/styfs4vy/naSnN+4Z+W83iQ5vxi/vck
ux7nG/O/x/MQ5v8Vzj/mf42zK/I9Ebkv3xu2xpn78n1irPJ7Ee+fVfme8Vd5
XsT7Z5XrBe+fNey/BO+fNa4X+GtsrvM8DP91+R7LrXO/hv+GfL85G1xf8N/Q
3n+b3L/gv8nzP/w3uX/Bf0u+L2NbqP8V+Guc35LvT2ub3/Pw35brB9vcX+G/
I/fv7vD5gf+OjE90l98H8N/l+R/+uzzfwH+P53347/F5h/8e1rsI/32sVwh/
jf19+R7N78t6tQ64n8H/QJ6X4ID7I87/A/m+dB/8f17/AwnC6Ik=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
Nz3uZ7x/F/WDPxkrzX7cos3+B8yxn7g=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdl2toHFUUx8eCCEFwhIIoErcIUhF0igh+CcwXUfzitAgiFFkViyDoighS
KQxCEUToCoJURFab1mpMMk2aV5vH5P1uNs9N2jwm77RJ47hpXn7y7t7//fA/
82X5MY97/+f8zzl3j33w2amPjliW9dRDllX4LV6/592946cvdHzpuAX0FG+d
bCw9/4nmjOLFs0erXn9fc6xYPb17/LRm91LePaUe3zypOa34jeILmiPFxXVc
zU553n25eGn2y7HeC5qz5VjvmObEZaz3tObUZaz3uOZQsVq8sfRhzfYVrGdp
Tir+vKwkdyl+qcjBFXx/UbP1R94dHipcmj3FnbuFgGjOKFYPqzc0x4Ldq3m3
8LWzP2pOK1arpcq+0xwp/rr4gGbnT2ZfcFZw4i/sP6U5JTgUbFeYfGpOViAe
PvRX8Petv5k9xcX0XoB+xc8XEnAV+hUXl2uB/krkuxf6KzneUSXnx6lCvB9F
/hUXwlXyBPJfJfJfjXi/iPxXQ98ryH81+8sOsP+3kH/BgeKfL6rrXc3WNfaz
p/iZwobfg//F/fgav+/WcH2ka/j9qIbfd2qh9x3or4V/3ob+Wt5v4jr89Cb0
X2e9oeJi+b0K/XVcT8k6jmdQx/Vk1WO9x6C/HuuVQH8911Os+EzhWkP+G/C9
WeS/gf0QNWB/jfB/I/vJb0S8foX/G9l/iSb45zz838R+DpvY7/YN4f8bXB+B
uG/d5PveTb6fEfdjwW4z7y/dzPuPmrlfOC1cP34L959sC9dPohX1+R/0tyK+
jyD/rVw/dpvIfxvXS9CG/b6G/Ifcv72Q/ZlRXK4w9yHyHxr98H87+vkX8H87
8v0V/N9u4gP/d6C/fgP/d5h8wv8diM85+L/T9Cf4v5PnVSju2138frKL7wdd
vD+rm/V43fD3GejvFvXfzfFye3jepXu4PqMerk+nl/Ph94r514t4Pwv9fWL+
9XG+wz6eh3Y/12+yH/E+Av397CdrgOvZG+B6zgywP+MBno/uINdzepDrORrk
enCGuF78ITH/hri+EsNi/g2b8wnqf9jkC/V/izkpOLjF37NGxPwTnBnhfhCP
cP9xs6wvneXzQJQV9T/K8fNHRf2PIr856B/j80pqjPtDOMb5tMd53ibH2Q/B
OPvFmmB/eRM8LzITiN9z8P8Ez2N3kv2cnmS/R5N83nOmsH8H/p8S/p/i9RI5
rodUjvcX5uC3Uvh/mvUkpzGvn4T+aa4fa4bZm0H+jkL/DMcrnuHzi3ub52da
cHSbn3fuiPPPHc5PVnBilveXmuX4hLMcf3sO/a8M+ue4PwVz3L+seXH+mUc9
fwz989wv43ns/3voX8D7v0D/AvJZAf0LZv5Df4T4jEB/hPzNQ38Ef21D/yLe
P4D+RePvE1r/oomnZnvJ5E9zcsn4Q3OwZOKn2Vo2ftTsLZt4as4sm3hqjpfN
/NTsrpjzmub0ipmfmqMVcx7U7KyafqTZX4XeTzVnV02/0ZxYM/1Ic2rN9B/o
XzPzFPrXzf8P6F83+YL+ddOvoH8DfvgB+jew/5+gX3C8gXq6CP13Tf6h/67p
/9Av2LnHz/v3+H5WcGKTOSU43OTv2VvMScHBFu/fus/s3Rf6BceC3W3T76Ff
cLTN8XX+YfYFZwUnYuaU4DDm9ex/mZOCA8FWntnLC/2C47zI/w5zeofjHe2I
/D9g9h+gn/8G/YITu8wpweEuf8/eY07u8f6CPdZj7XM9ePvol99C/745r0D/
Ptebe8D1mD7geo0OuL6dQ1H/h+b/H/Qfmv97J9z/ATENXCE=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
/cae/Q1euNwv
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdl2toHFUUx6cxacwmbSbv92bz3jSvSdI0aXV1mtfmndkoiBBkVZSCoCMi
SKSwCKEgQtZPpX6QkYoIgiz4JQjCUhFBFLcgFEFkgyCFiAwZIiKm9U7O/4Dn
zpfwC7Mz93de907XC69tvVRiGEbzGcMI/55e/x7Zg9t7d47vW3aIjuKDnfrP
kwfEnuKt/eju4V1iX/FSeMO3xPbJkf12ePuXxNkTPO9T4uIJnvcRsfXgyL53
201EbhJnHuB5N4gLihMRdcd14tjDI/v1038Quw/x/GvEecWdu4ep/eeITSOg
5z9DnFYc/jqxQpxT/PVxfHtvltg4E9D6r8Bf8eTpBX/Ff6RUAIbgr/jl8OqH
f0lAfl3wV/zBLXW1wF/xafxq4P8I1hOBv+Jw+dEy+CumxMC/FOv7Z4z8S7Ge
Q+J8KdbzO7FZFthheOK/EKfLEI97xLkyrOcusXE2sH/4PryIHcWUX2LvLOJ1
h9hXfJqOr4jt8sAOH5faJ86WI35fEBcVq9WrBxJbjwaoD+KM4o/D5d0mLmgc
q5DsVsjf5yvk+8yIXF86ovlHkK8D+FfKeDqVMt5epcyPXynzZ1cFdhju7Wrk
vwrxb0f+q2R9WOcQj1HkX/FfYXinkP9zeN8C8n8+sMPl7DyN+j+PeLyI+lf8
//4wq5Gvd1D/1cj3+6j/6kD0o2EGol8dMxD97Jnw/Q7+JscT/jWBmBfZGvj9
Cf8ajif8a7G+knHyr+V4Ehdq4VtPHKvjfiJ26ziexPk6rD9ObNYjHhZxup77
mzhXz/1PbDSg3pPETgPilSL2GvD+Z4l9xTRviO1GrOd54mwj1nONuNiIeLxK
bDWhXt+AfxPWtwP/JvR/Bv7NqIdd+DdjvTfg34z+fQ/+LZxv+LcgXzfh3wKf
W/Bv5XqAfyv3G/xbuT7g34p++Qz+bYh3Dv5t3I/wb+P5AP92+OXh3w6/b+Df
zvMH/h08n+DfwfML/h2ol5/gH4Xfz/CPIl+/wj/K8xL+nZKdTq5f+HfCJ4B/
J3z+hn8M8+YE/jGu7wnyj/H8ILa64FdOnOmCXxVxoYvnCXGsm/uB2O3mfiDO
d/O8ITZ7uD+I0xrneuT9Rq98ntMr3+f18v5F7Gts90nO9nE/w79PxsPql/HK
9Mt4FvplvGMDMh/uAOrxPvI/wPMH+Y/z/of8x2U95OKyfoxBnm/I/6CsR29Q
1qs/KOvZvsDzEvm/wPsP6l9ja0jenxmSzy8M8X4L/2HZD+4w6uNH+A/zPIb/
iIxHekTWd25ExtMYRf/68B+V+fFGZf78UZlfe0zWS3YM/RZF/sd4PiP/Fp+n
UP8W74eof4vnN+p/nM9jqH+N8xqbE5LTE7y/ov41NiYlOxp7GvuTyP8M/C9K
zmpcvMj7D/ynJGem5P2FKfm+2CXJ7iXNX2NzWsYzPS3jnZuW+TBm+DwLf409
jf0Z7A898L8s50tW4+JlWQ/WFckZjQsaxx6T7Gqc19h8XHJa45zGRkKyk5Dz
0dPY1+63n9D8NS5qbD0pOaNxQeOYLdnVOG/LfJhXtfmvce6qvN+YlezMyvu9
Wenra2zPyfhk5+Q8KM7J/cGal/tdZl7Ok8K8nDexBTmP3AU+T2L+LaA/jjH/
FuU8Sy/K/SK3CN/fMP+S8nzgJOU89ZLy/OEn5Ty2l+T8zi7J/aG4JM9H1jJ/
D2H+L6O/PsH8X8Z6PsT8X5HnN3dFnu/yK9gP9uC/ini+C/9VeX7MrcrzpbGG
+F6H/xrW/xb81xDfN+G/xt8b8F/HfHkF/uva+Xddno+tDXl+zmzI83Vhg793
4L8pz+PuJnw34b/J3/fwd+R5Pu3w9xT8Hfgm4J/i+Qv/FM9b+Kfk94Sf4vkK
/y35/ZHd4nkJ/y35vWI9xf0zbv8HWXqeCA==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
nBE9tg==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQILwj47cF1fXGB7ysABxP8A5IMlDkD4DuGfHXbI
tb4O3AHhTwDy17k/rBJZB+E/APLfBAJVrIbwDSI+OywpsAUaCeE3APmzZoIA
hH8ByBcBGTAFwleIhNrfBeEXAPmHv2rE9DdB+AeA/GqwBghfIOqzwzeg9KFS
CD8hCmp/NoS/IQpqfzKEzxD92QGoGmgihB8QDbU/BMJfAOSfPQMEPlD/R0Pd
4wX1fwzUPU5Q/8dA7Tc1cAAAGuxuhQ==
          "]], LineBox[CompressedData["
1:eJxdll1IFFEUxwehF+lhAyGCsJUgiiCmJIhAuPRSRNAoQQQSW1EvQU1EEJo5
rq6um+uOun7suq7j1/qxKgu9+LgY0YvR9iRBDxtBL/YwMNhDEHRnzv883BkQ
+aFz5/7OOfec2/LwecfjBk3TFuWP/9t/at2eeNHWuL+k68Ln6BtPdGZ2D892
EpuSd5oTB+2viauSl83ghYAjPZ74IP87s0sc68H734kr/PeGiwFrbz1xSi63
00xsSP7jv36Z2JH8eU8+t4hd/v/7xKLXE9vXf3Q1PSO2e7F+nLjei+8XiHXL
E63+857YsrD+HnFNslxNLkkc7cN+DonNPt7/JfKX3OEH5BhxJO6JfE4+J4hj
kn9Lu8R54kqc/Yi1fk/cCD5IbEj2v951h9jpZ19iV/KT4CEWA8iXSWxLDsKZ
IK4PYH9jxHoC6xWJrQT2VyauJZDfHeLoIPb3idgcxHpf4T/I+YX/ENY7gL/k
YHv/4C/Zx7bGVvJPcryIjSTHi9hJcryI3STif41YDGM/7cT2MPL3gLg+jPWe
EusprPeK2EpxvRDXUvAdIo6+Q32MEJuSg+OQIa6GODICnxxxLMSVEa5H+KeR
7yz805wv+KcRrxT805xf+I8ivj3wH0V9v4T/aMg/w/UE/wzXG/wzfN7gb3u0
TwF/yd3+C1fhb+N7rfAfw3m8AP8QVySfCwIA/3H0j9PwH1frwQmxG2IxgXie
hP8EfJrgLzkot+Pwz6rvW1nuP/DPqvuJTuK8nYH/pFqf1cmQ/5Rar7Ep5KcN
/lNq/WrTfP7hP63G35lGfd2Gf4jFjJo/ewZ+9+A/o+Zbz6nnw8rB9xH8c9xf
4J9X/27meR7AP4/43oX/rLq/2Czq9yb8Z9V60gpqPRkFNX5OQa0ft6DWj5iD
Twv859R81+cQz6PwL3L/hn8R3/+L/ldEPj30v3n4/0T/m8f6++h/8/D9gv7n
wK+K/udg/9vofw73A/T/BZWNBT7P6P8hdhc4H+j/i9z/0P9DXF9EP7+C/r+k
srXE5wf+IY4uo98cgf+yOh+rIY6sqBxb4XlCXAmxVlLZKHH/xfwvIT9dmP8l
rk/M/1Wuf8z/VT5PmP+r7Iv5v8b1hPm/pt4/amvcPzD/17l+MP/X1ftLdZ3v
B7j/bGB/v3D/2eB44P6zgXx/I9bKXD/ERhnx/kjslLmeiN0yx4tYbPJ9htje
5HlOXN9U72f6Fs9/YmuL64+4tsXzB/e/bZ5/uvgPrQKQhQ==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdl2toHFUUgKe1aaEIrhBQQWr6RyqCroogQmAQpCKC2yKIUGRVLIKgW0SQ
iLAIRRChKwhSKRKpFEEoq23a9BEzTZPGvLdt2qS2ppN30rwmmU0fSZN4d893
JPfun/CxbOZ+557XbH//090fbvQ879ENnlf6W/7kY3+wpvLozveSfglThvcc
aFrcsUe41rD5drDmLeHIcPnrN4X9P2J/a9/hTPXrwjnD583XB14RDg3Xb9s/
tesl4eSfsb+v2vwiKZx1uGB4b+nzpHDVMc63XThzjPM9LhwYLj1+6yPCieOc
7yHh9HHOt1U4b9icpn5bhbBXF/tflgSXnhV/w9O7SicWrq3j+YPCUR3P6xP2
T8R+V2fpI5wzXNLJNAiHJ/CvF06ejP1SOCuPCmcN/1r6d4eFCyeJ9w/CVfX4
HBDO1HP+/cJBPeevEU6cIp4Z4fQpvV/h/CnO/7awd9rmlOHd5QPj73wfndb8
wP+Mzbkz9vPCM9znXvzP2px1uHCW+H+Mf4PNmQbbN2iw45H4y45X2vBTpQP+
hr/DXmPsv1Y6cCv+jfjcwL/RzofIcPl3Hvkf8Pst5H9A/B4m/w0/UT4g+X+O
//c0+W/4hfKH/D9H/lST/012PWWa7HoLmux6TJy36zXtcP683if53xz7Px00
n3eo/2an/h2OmvF5F/8W8vcD/B0OW/R+8b9A/D/C3+HCBerjE/xbbc60an7j
30r8PsP/b5vThm+b8DV9jr/DXhv1+QX+bcT/K/zbNL/wb6Pev8O/XesV/3bi
eRD/durhF/w7NP/w78Anj3+H9gv8O7n/Jvw7uf92/DvJt4v4dxH/Yfy7iN8s
/l34L+Lfrf0P/27N5+fEv1v7r3DUzf97Rtjv0XwVzvXw+53CYY/mm3CyoPct
nC3ofQkXChpv4aqLNmccDi5q/IUTl2xOX9L4C+cvkY9HhL3LGn/hlMO1lzX+
+Dvs99qcczjs5Ty9+F/R/oK/w4UrxGcC/6t6f/g7HFzV+8S/j/tYwd/hvMNe
P/n84PPi3895K4Vr+3W+Ckf95Pdjwv41ncfCOYfDa9r/hJP/2Jx1uOBw1XWb
M9c1H4WD67ovCCdu2Jy+QTx3COcd9v61OeVwrcORw/6AzbkB7e/4D+h+g/9N
7ff4O1y4qfsS/qHNmZB6fRn/UOsP/0Hmk4//oM4P/Ae1PvEfsjk1RD68gf+Q
zhf8h7Se8R/W+YH/sM4H/Id1HuA/ovMA/xHt7/iPaH/Hf1T7Nf6jOv/xH8U3
i/+Y9gf8x/D7Bv8x7d/4j9M/v8d/XPsH/uPaz/EfJ78P4T+h/QX/Ce0v+E9o
v8d/Uvc//Ce13+A/ST4cw/8W/nX4Oxzc0nmB/5TN6SnidRr/Kd1P8Z+2v09N
27+vnbafFznsz5Dvv+M/4/jP2PFKztrxzc7a91GYZb59i/+cfb+ZOTsfgjmd
J/hHun/iH9n5mY/sfPbm7fpIzfP/X8R/3qn/ebv/+At2f8wt2P00XND3Dfxj
nbf0/5h436X/x9x/TP8v6v5J/y/a8yEo6vsJ/X+R+hug/y/if43+v6jvL/T/
2/Z8St3WfYL553DksH/H5twd4tvD/HM4edfm7F19f8Lf4ap7up/jf494tuDv
cGLJnr9ph/NL5FOA/7LWA/7Lmv/4L2s94r+s9Yv/fXufyN0n/j/jf594/4j/
ivYb/Fc03/Ff4bxf47+q/Q7/Vc1//Fe1f+K/pv0V/zXtx/iv6fsA/l6R9wn8
DZfj+Sr+htfvd5FhmVf4bygyb/E3vH5fDA3LPoH/xiLv5/gbLvtuxN/w+n20
6gGeF7P/Gpb8Z/81vH7fTWwqsk+x/27i+b3sv4Ylv9h/K/BtYf+twLeB/d/w
+n08Miz3z/6/Gf8j7P+bi9a+H27mPIfY/7cU/39f+A/7LGDO
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwt13lYzWkfx/FKyNqqCDlRTXVEKIripnhaSSJaFJVtomPJljhEIUuWoZA5
RU2WSWqaRxQlMQzjqCFl6dSQGiHcKlSej+f+9k/X6+rqqvdv+fx+x3RhlG+E
hpqamkRdTe379/9/9eRs9ptK6WXvH9h3+sBjVJtvLHETVsC6FebBRi7CzbB6
z9xJ95yFWS/O9M+Utu50EE6ClUmNp/zGCKvgKf+kTbIdIWzbm7OVWpE3B1oJ
y2Gr44+e6pkJK+GvhV59DIYIS/pwFhvrektiLCyD65bGdHfsJ1wMW3iEzA3U
Edbpy9meiiVWu3oJh8Lfzr/Ovd1NOAc+69U/WFdDWE2bsz9tXpuHdliIfjjw
6zWLvDZhBbypzqBJiws3w95LVr1a+E6Y6XB25vMvRiX/CifBcVl2PYbWC6vg
Xc/TbBJqhW11OdOsvje86amwHI41Le0287GwEt7usOdKfoWwRI+zTJ/tRQPv
C8vgi0faU7beES6Gn6V/83lVJqyjz1l4z+Q6rxLhUHhbiHJ6bqFwDry8rovW
gEvCagacJf8Vd3xLHvXD1XcCetRnUz/cM+bQTK+z1A831FbNzc+g/n6cJQUv
NjFNo37YeXt02v4T1A+PN5tYq5ZM/YaclXHPGWsPUT889Z8h69/uo354QRwP
WLqb+o0426HQbK3fQf3wI+dEz8VbqR/u3Rbu9GYT9ffn7E6u1/iN66kfPnT9
o7L3GuqH7weVdZ6Oov4BnE2ojrVz/ZH64Z6ayo6GRdQPt5RX1h9YSP3wzpnG
m5znU78x7h+Vxcg386gfLi6r6FTMpn7Y93XmOv+Z1D+Qs7Ak21563tQP78vZ
9LjajfrhoxHxTy66Uv8g3H9V/gUHGfXDK5Ir22OcqB92bW/pF+VA/YNx/3Q7
uX+ZHfXD6hd2F0TYUj98T2rWbeFw6jfhLPf8LY35ltQP97ideGGeGfXDV69X
bp4joX74SIVWp+8g6h/C2dxUe5sZ/akfDoos2+xlQP2wcns/ubsO9Us4qz3o
NGpab+qHPd6kabpqUT+cUpeeMFmT+k05C8iOdyvTpn7YvMhE13Ug9cPtK672
L7Kg/qH4/QP3q5xHUz/sltnuc9OZ+mHn6iE5s92pfxhnJ55pX2vyo354VGDM
xsRQ6oeDI/VqRkVSP7w+Ob6xZh31m3Hmc93lx4Nx1A83pLpETt1P/fDH9HAp
P0b95pwp1pyrSc2kfnhKp+Ecl1zqhztfxyS9KKJ+C87GBT4tk9+mfnhPrl1p
/4fUD8cZ++8+r6L+Hzj7ZOPiO6GJ+uG+5R9elbVSP9ySbe/t1YX2z5IzJ5VW
wb2+tP/ww7thbR60twr45s/6fW6Y0/7D+9r0RjiMov23wvkonWOZ5UT7Dw+O
jvnDgJ4fKlh11nRq7Czaf2vs/ZoXy+rm0/7DJ+/aTXBdRvsPW3tdbEqLpv2X
ctbY+cGzXU77Dzumjzf320P7D1fekbmePUr7PxzX/9ZtNR3ptP+w470drdOz
af/hE50L5p4soH4bHN9nGg6vb1A/vGvJubt2SuqHq3I/eW18Qv3wAde1Owrr
qX8Efn746Lqv76kfbip4P29sB/XDXScbfV6uZSn6R3LWlimbk64vLIfjtQ5n
lZsIK2HPL7qF36yEJbac+anPPGhlLyyD17q8XDCDCRfDjiHBrSs9hXVG4Xhl
vTM5OEc4FM722Xg6Z4FwDpz1rabobqSw2mjOclauPtq4TtgHvv1Oe1G3OGEF
/PFzIh+2T7gZ3vWrt9GkFGE2hrMPHqOPzT0tnAR/ShyYF3VBWAX/JDUI236Z
+u04Gz62LfpoGfXDX0ZlmWYpqR/+lmmz+Pcn1G/P2YCoML3SeuqH9z63nHfv
PfXDLz3jnR62U/9YXO+hs3c+6W4l+uHnE9esqtETzoFb+v77VTVYWG0cnnfu
+5tVlsI+cOwLFv98jLACHlSpebVqonAzHLw8N6zCXZg54Hm0wvzXO37CSXBj
5sLj10KEVfA/duxL7jJhW0c8j39L/nYqWlgOB6ifrD0gF1bCw3WrHsUkCkvG
czbZ/965hUeEZXCH098LpqUJF8Njy9eMtDgvrDOBM+MM21qN/1I/XNoWsvxU
CfXD7arWNnaX+p04kxq77njyiPrhhAf79VfXUj/sn2Ge0b2J+uGRGTMmpLRQ
vzNnGYZW6Zbq1qIffmoRnfF7L2EVfCTh68YphsK2E/H3Xka0/SERlsPPrmpI
PKTCSljvpyG8zF5YMgnP00atdU5MWAaHbnJQnfcQLoa7Dh3aYTRbWIdxZjJR
WxkbIhwKy8a5BT5fKpwDx603SHNcI6w2mTNt2eVT+zcL+8DLDmyJUO0UVsAf
/LIapIeEm+FNDutHrkoVZlM4m/Y1ZGXuL9QP91h7J+bNReqHr+i3+QwrpH4X
HN9plh9n3aR+2HFnSvgWJfXDlx681D1dTf2ueH/osBhT8oL64Yf5siOVb6kf
rs+L7dHQRv1TOYt4cWHeRw2p6Ifvd11+ta23cA4cbusyvs1QWG0aZ4kWB459
kAj7wBmxBYavrIUVcNWMEVce2Ak3w/Oa1PzzJgqz/+B9rmDqsEQ34SR4q3LL
jCBfYRVcGl2gbxEkbOuG/StrcW6MEJbDp210H2RECSvh9gHaXQM3CEvcOTN6
0PxLjzhhGbztaFFWwR7hYvj+pfPGYUeEdTxwf+qU2HdVUD+sOyXnROoZ6ocj
XDeZ2ORRvydnNVJrnltI/XBcXr3pyJvUDyfszV6bfp/64ZV7tkp7V1G/F2dR
zn9FRdVRPxwctjvmz9fUD0vTMgaZfqJ+b7wPqVKtl3dSP7y/atGanO7DRT/8
dFHr6H91hCXT8f4qvV1Q2EtYBg9+V/FmdzfhYninQdqUOerCOjNw/cxWKzBp
p364SS6rqWuhfniXdKPV6ffU74P9/eDUM7yJ+uGAY1F82Cvqhy1uXo2uq6V+
ODIyad/PT6l/Jt5njY5fDKqkfjhvdGJk/3Lqhx9PN8h+d5f6fXF/BsiPX79F
/fDkxVpjD1yn8w/La+3fBxXR+Z+F66UqIdDsEp1/uNoyoaEhl84/7NehkXL2
Vzr/frhejm/4ujiL+mHTPqvjhp6ifjgrv2hUdSr1z+YstVfl4b3J1A9v8J4m
mXiI+mH91RsL3u6lfniLe3G5Yif1z+HMLDXgsy9dn0lw3ZmpNl03Uz+sCP5L
dWk99fvj+ZUxLi1yNfXD7s9jV0hWUD8sM3x7+eES6p+L6zPwT/3EMOqHq6V6
G9h86oeT87WDW+dS/zy8T/zQ3Tt7FvXDK4d8couYTv1w3zcWpYPdqT8Ax7+m
xu2RC/XDXl3uLt5L97cCNluadtDVkfrhWRq9/b+Mof5Aziz1VuZnj6B+2FMW
Lwmzon6456NWc0Mz6g/C/zfd+uYtE+qHPTdUrN4wgPrhlMqThVYG1B+M9wen
94rHfakffqotP5TQg/rh8mMtpvaa1D8f19utJdU1nbT/cJHmLM/4z7T/sHnC
hAYrTvsfgvMtPTnpNu2pD2z18oJveCPt//ef7zj8yZj2txk2GfvH8srntP+h
+PxY8kl6vIr2Hw5adPVK+N+0//CelOFnRt+n/V+Az3cv8+Rd7tD+w9Nsy/Me
36D9hyUeXpNzr9H+L+Ts+rkj+fsu0/7DcZa226Lyaf9hj0HOJTNzaP/DOFvy
zG+V/Tnqh0tq+v5knEn93/2bhpV6mjX7HzGc/eA=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdl2toHFUUx8eCCLGaSbp5bJ6T9zuZvN/JTdq8X5NNYtpkm24FRRB0RASp
CIMQBBEygiAVkZVIEYSyIEK+CEtF/FJxBSFfREYEESKy4FbET87u+R/k3P1S
fmR75/zu+d9zZxuefTn23CXDMCofM4z8v4VPUU5F7i/9cmfXVnl0Qj558Kg9
vkWcDLno/NSdXiXOhlz4f4pYPZlTb+QXmCD2Qx4sfIiDkPPLR3qJ7cs51RHP
P4HYC/lTd7rovIk4E/KHd8NPlNh6KqdiZ3XHFyXEbsjfPQw/l4nTIR9fbJ/V
PU5sPo36DOJEyK+Ey59m+wqcCjmsJiyJ2CjOqUI5PxE7xVj/IXEy5K/D7Th5
QJwtht8XxMqE331iP+T6fEEfEwcm9vd9YrsE9R4TeyXYvzvEmRLU6xJbpTn1
R/7rLxK7paj/NnG6FPXHic0rqH+dOHEF+7cN/5Dz7Szah39ErudE5POSIT9f
+MA/IutTZdhvD/5lyM8J/Ms0/3K5P145+n8K/3K5v1ZFThUe9xX8K+DzA/wr
ZP/Mypz6O9+uR/CvRP8uUR5SlchzEbERRX0R5D+K+uqQ/yj2owv5j8LfRv6r
cqqwvWPIfxWeN4/8V6HfC8h/tTxPXjX3B/mv5v4g/zWo5wj5r+F+IP813C/k
v5b7g/zXYj9eg38t5w3+dZKdOuz3m/DXOKuxqpfsaxzUy/VtC/v1Ovwt9PtV
+FuyfqtB+rkNmn8D5xf+jXwe4N8o51uqUc43o0n2y9E42STnW7ZJzjfVLPPh
N6O+Vvg3y/lmt8h8eS2otwb+Leh/BfxbtfnXivqL4d8q82y25dRyfkOegH+b
lv82OR+Ndvj9i/PfLs9Psh1+Fzj/7fD7Dee/Q7LfIb8faGx3yvW9Tvn8TKes
z+qSPm6XPK/pLnlfmN3IQwP8u2U/Ut3yPjJ65Pl1euT9luzheYr+98h8qV6Z
P78X67+E/vfKvNt96Mdb6H8f1n8X/e/D+h/B38Z9+Rn8bZyPFPxtno/w78e8
+Qb+/Twv4d/P8xL+A8jnr/Af4H7Bf4DvT/gPcP/gPwi/f+A/yP2E/yDnr5/8
h/i+JvaG+D4nzgxx3omtYe43sTvM54U4Pcznidgc4f4TJ0a4/8SpET6vxMao
ZGeUzzdxcpTzQZwd5XlArMZ4vhP7YzzfiYMxnu/wH0deb8B/nPMD/3Geb/Cf
4DzBf4LnOfwneN7Cf5LzBf9J1PMO/Cf5fob/FObNB/Cf4vsZ/lOcP/hP8fsO
/KdRz5fwn+Y8wn+a8wj/GX6/gv8M+vsj/Gc4n/Cf5fc1+M+int/hP4t6/oS/
4jzCX3H+Bshf8TwhNuZ4nhI7c5w34uQczxfi7BznjVjNc96I/XnOG3Ewz++7
xPZVzhuxp3HmKr9fEFvXJLvXOJ/Eae3v5oLkxIL8fkpjY1E+31mU9ScX+f6C
/6LmvyT3x1/i+wv+S3ye4b/M5x3+yzwP4L/M8x/+KzxP0P8V1P8X+r/C8wr9
X+X7CP1f5fmG/K+i/p+R/zXUe478r/G8RP7XkI/vkf81mV+1jjx9i/yvy7wH
6/z7AfnfgF8a+d+Q5yWzgfyeIf+b8ny5m/x+DP9NeR7NLezH5/Dfwn7cg/8W
8voJ/B153h2H7x/4O+jvXfg7/D4P/23J/racL8E232/wj0n2Yti/t+Ef499H
8N+R88zd4d8b8N/R5t8uv2/CX+PULt/H8N+T89TZ4/dR+Guc3eP3U/g/I+ez
r3Ggsb0v2dvn91v472NevAD/65Ld6/L7aY3NG3L9hMYpjY0D6eMcaP4Hcn+y
B3K/1aHsh38o+xUcyn7acdlvLy7vp0xc5sO6KfPk3sT5fA/+GptHMo+JI3m/
pbS/G7fk+s4tWU9S46zGKiHZT0jfICH3w779//79B52go0k=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdmF1oHFUUx8eCCEVwhEARJE4RRF90pAgiBC6+VERw2xcRgowfrTWJyTSb
pmvSJJM0m83HNjvb2sYmGidNra3azTQf7SZ5GSoiSMV5EIIgMkUQISIDbkUE
wTt7//fhnHkpv+7O7Pndc+45d7L/rZ7DR/YYhrHvPsPI/s2u9J2G2Luz7Lbt
fVZkLI40RFv2H//ZTfYZJ5JrB+8OtPyp2D7aEJfl3Tu/KvYkt1du33vyZ8Wx
5Jbshh8VW+82RPZx+w+KXcnF3UP11m8UR5IHsxu2FJvHGuJAdq0pdiQfzwIK
FYeSj2bXFcXGew3xWPbARcU5yfMXs0txIPlwvbW4W1WcSn5J6tRKikVHQz3H
g38H4hmAfwfiycO/E+vRDf9OrMfb8O9EPG/AvwvxvA7/LsRzCP5dyMfL8H8f
8R2Ev+Sv5fJVXoS/5Obtz8O/G/EdgH834nsa/t1Yryfg3434WuHfg/gegX8P
8tcCf8nf35HXg/B3df3A30V8e+DvYj0N+B9H/tJnlL/kpt5dxZHk5uN2FJu9
+L07ip1ePP+24rBX14diIw/fmuJcHvlYVhzkdT0oTvOox4pi0QefacV+n64H
xUmfrgfF9gn4uIo9yX/I1Sx2Ko5PwO9NxVY/9kc7/Pvh+xr8++H7CvxP6vzD
/6TOP/wZGwXs1zb4F3R9wL+g6wP+BV0f8P+gIZ5qBgh/xglje4De7zGOGVuD
lN1BGk/E2DxF43cYh6eorzFE1ys3pPcX/IfoeqdDND9imObPH6b5TYZZ/kdo
fXgjtH7iEVpvlqf7E/w9Wq+RR+vbHGX1P6r7K/xHEe8u/MfofsuNob/ej/0/
hvV4GPt/jO53cZr2A/+0zjf2P2N7vCH+zsJ9Dvt/HOvzAvb/OO1XVlHXN/pf
EfvvVfS/Iu2P5gTtp84Efv8Y+t+Ezhf6X0nnC/4l1EsB/iXa39MS1qcI/0nE
V4b/JJ0XySTqZw7+U3S+eFOopyX4TyHeq/Cf1vmG/zSdb9E04q3Df4bOQ2cG
8Ufwn0G9fwv/MurvO/iX6bwNyrq/wr9M57U4Q+e5zzg5o+sN/rP0PODNwucv
+M/S84NV0fNBnTfciq5PxVFFzxfFpo/4H1LsMA59Xc+KjaqeV4pzVV3fioMq
fB9VnFZ1veP8c5Z+7jNOztLv2+eQ7/2KvXP085ix9SFll3HE2DxP2WEcnqfx
GRco5y4wf8Yp+76Yo5/7c6iXffBnbH9Ev+8xjhlbFym7jCPG5jxlh3E4z/wX
mP8CXa+AcbpA8yc+Rr0/Dn/GCWP7E8oe45ixtUjZZRwt0njMTyk7jEPGRkCf
l2McME4ZiyXmzzhZor9nX2L1zzi+xOp/mdU/44ixeZnVP+OQsfEZ5RzjgHHK
WFyh8fuME8b258yfcczYukrZZRwxNq/R9XcYh9dY/r+gnGMcME4Ziy/peviM
E8b2V3S/eYxjxtZ1yu51tv8ZmzW2/2u0/4Q12u+NFdb/V+h8CBinK3TeiJCy
H9L34yTEvH0A/jfo/PIYxzfovLNW6Tx0VzHf/8X8X8X8/wfzf42ys4bz1j3M
/zU6b411/X6F+b9O53OwTud3uo7zye+Y/xt4P/wN859xskHPA/ZN9v5/U7/P
Yf4ztm6hfn6BP+PoFj2PmHXk/yf41+n5JazTvy8Ym5Rzm+z8s6nP0/BnLLbo
+cnfouerZIv+vcLepucxb5ue3+Jt5GvDFv8DXhz/uw==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
1A++ZCG9YKNC/WDtWVE7esfosf8BPkBtyQ==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdl09oHVUUxqe1aWtazTR5om7qK24qYn3QjQiBi5uKCL4WQYQgo2IRBH0i
gkSEQSiCm7yFm7qQgbpwVR646UadJk2a/5nE5n/SzkvSVJuYTJJ5UfPX+975
Duac2YQfmTdzv/N959w7Z9775NIHhx3HeeqQ41T/1q5fU9NcP36t8FXOVDFv
+Xz1+ow4sLx88cbpKx8RJ5bLrZnrF94lNr+lxv66uf4t4qLlS/b2pYvEseXq
45tfI86FqemonG1pe4XYt/ylfVz5ZeLI8qfVBeWIszdT81xLW3vlLHHhJt5/
hji0/P1Vez1N7Lanpnp3SwOx14731xOXLJNwYqcD70teJP0d0DNOHFh+tfrC
28SJ5Zq8G8TmFtb3E3HxFt7fRhxbrt59+gpxrjM1m/a/7Z8T+51cX+Kok+tL
nO3i+hIXuri+xGEX15PYvY31vUTsWbbVbc2cIy5Z/rEq71lipzs1mdoN0N/N
9YL+bq4X9Hdj/ZVzpL8nNZer1yJxsQfrLxPHPVxP4lxvagb6qxex34v1txNH
vVxf4mwf1n+duNCH9V8jDvvg/1Vit5/rT+z1c/2JS/3IWyuxMwD/C8T5Aei5
TBwMsB/EyQD7Af2D0PM69A+yH9A/yH5A/xD7Af1D7Af0D3GeoT/iPEN/BD11
0B9Bz9YLpH+Y80zsDbM/xKVh9ofYGUlNrb1miPMj7BdxMIK8DRMnI9wPxOZ3
9o+4qDhWnLsjf+/fke+LFGdH5XoLo1JPOIr+WYL+McneGOcV+sdkPZ1xWf/8
uPQnGMc8PA//x6W/ZgL1a4H/E9zP8H8C/ePD/8nUPFM18Af4PynzHU1iHv8C
/6fYH/g/xf7C/ynZr+405wf9P636fxrPb0b/z3B+0f8zct4EM3I+JTOsB/Nv
Fu//FvNvFvPkO8y/WdaL+XdXzkv/LuvH/FOcvYf6/4z5pzhU7MZcP+iPOX/Q
r9gpy/vzZTnfg7J8flKW6zNzav7P8XyC/jmeT9A/L9mfl/WK5mU9swty/ygs
yPqHCzzPoP++ZO8+zzfoV+wsSn/zizz/oH9R7kfJIucd+h/IvBQfyP0pVpz7
Q+bNVxwpzv6JeXEB+hWHit2Hkr2Hcn8sKXaWJOcVB4qTJfl8syy5qDhelnpy
fyn9iiPF2RXJhRW1/6/I+rur0j9vVfm/KvPjJJLzicxfkMh8JonsZ7Mm+6G4
Js9L8RrPb+hf5/kN/eu8f0H/On5/DOe/Deg9hfPfBvQ+ifPfBs9vnP9SeV70
UuT7eZz/Up6HOP9VeL7j/Fvh/RrnX8VJhecnzr+bkoub8nwbK879zfnA+Vdx
pDj7j+SC4lCx+69kT3FJsbMlOb8lz+vBFucP+hWbbeynb0D/tjr/byM/b0L/
jvxe8HcwD9+G/h2eL9C/i7y9A/278vsj3IX/70P/Hucf+veQhw+hf09+zzj7
yMPH0K842Of+gf59+X1knArO89BvuSb/C+i3TPMY+g9J9i0f/P6KLNfW5UP/
4Qrl52voVxxapv0B+h+R7CkuWa75/Q30H5GcPyLvDxQnik2d5KLiuE6uN3dU
6vOPKv2Ks8dkvQqKQ8XucVl/77j0p2T5oH/OoxXpv+WD+QgsH8xTYvlg3kx9
ReSxqDhWnDsh2T8hnxcpzp6UXDgpfx+q/7uPyfV6ikuKnccl5xUHihPFpqEi
+quoOG6Q9cy5kn1X1j9SnD0luaA4tHywP91G6a/XqPxvlPlwmiTnm2SegiaZ
x0SxyUguZmS+44zK/xP/98d/ht8jmA==
          "]]}}, {{}, {}}},
      AspectRatio->0.1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{55530.10416666667, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->1000,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"ovi\"", TraditionalForm],
      PlotRange->{{55530.10416666667, 86395.}, {0, 20.48}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Prolog->{
        GrayLevel[0], 
        Thickness[Tiny], 
        Dashing[{0, Small}], {
         LineBox[{{56160, -50}, {56160, 50}}], 
         LineBox[{{57600, -50}, {57600, 50}}], 
         LineBox[{{59040, -50}, {59040, 50}}], 
         LineBox[{{60480, -50}, {60480, 50}}], 
         LineBox[{{61920, -50}, {61920, 50}}], 
         LineBox[{{63360, -50}, {63360, 50}}], 
         LineBox[{{64800, -50}, {64800, 50}}], 
         LineBox[{{66240, -50}, {66240, 50}}], 
         LineBox[{{67680, -50}, {67680, 50}}], 
         LineBox[{{69120, -50}, {69120, 50}}], 
         LineBox[{{70560, -50}, {70560, 50}}], 
         LineBox[{{72000, -50}, {72000, 50}}], 
         LineBox[{{73440, -50}, {73440, 50}}], 
         LineBox[{{74880, -50}, {74880, 50}}], 
         LineBox[{{76320, -50}, {76320, 50}}], 
         LineBox[{{77760, -50}, {77760, 50}}], 
         LineBox[{{79200, -50}, {79200, 50}}], 
         LineBox[{{80640, -50}, {80640, 50}}], 
         LineBox[{{82080, -50}, {82080, 50}}], 
         LineBox[{{83520, -50}, {83520, 50}}], 
         LineBox[{{84960, -50}, {84960, 50}}]}},
      Ticks->{{{56880, 
          FormBox[
           RotationBox[
           "\"Dec\\n31\\nSun\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {59760, 
          FormBox[
           RotationBox[
           "\"Jan\\n2\\nTue\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {62640, 
          FormBox[
           RotationBox[
           "\"Jan\\n4\\nThu\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {65520, 
          FormBox[
           RotationBox[
           "\"Jan\\n6\\nSat\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {68400, 
          FormBox[
           RotationBox[
           "\"Jan\\n8\\nMon\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {71280, 
          FormBox[
           RotationBox[
           "\"Jan\\n10\\nWed\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {74160, 
          FormBox[
           RotationBox[
           "\"Jan\\n12\\nFri\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {77040, 
          FormBox[
           RotationBox[
           "\"Jan\\n14\\nSun\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {79920, 
          FormBox[
           RotationBox[
           "\"Jan\\n16\\nTue\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {82800, 
          FormBox[
           RotationBox[
           "\"Jan\\n18\\nThu\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {85680, 
          FormBox[
           RotationBox[
           "\"Jan\\n20\\nSat\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw12Hlcjlkfx/GKVJKK0kbdiYyxZCn78iNMynhkDUOpSeZRUpK9RaFGDIqQ
UtYWS1F2uhUqFSZJkUQqnCsSkrXnN8/1Hf/0+vzTO9d17t8557Z0953uqaai
oqJQVVH55+f//3kLKozW7pT8WZ/+yUTuwQENafRRbvIRFDfz7sSKRrmruZu9
PfZ5SHKHLBP0W/unaTX1cit8BT3cXRuyoEZuJff0gZGmD6rkdlsuKC+p3dpJ
j+RW8RPUx7MoKeMBfO7Drq+jTf+G7y9ovEmc84Yi+NzN9x2fVOTBXyHoyjCN
4ba58AMELdytuTjiGnxut6YLi8suwl/J/z+l1ejuWfADBX0wCH7tlQ6fu0Nb
jRXRafBXCRoyL7o6+Rh87l+DrEYdSYK/WtDyhmXbdx+Av0bQHzuvPV4dC5/7
oF3/3tN3wV8ryNz/6FrLbfDX8fNr9Sp9vgU+t9+aqJH7N8JfL8i0bmnW0A3w
uQPc8p2yV8HfIMj22FaNfv7wgwSpRSxvCveGzz30wVeDvMXwgwVVujuv+uQG
P0TQbMerik7z4XOTymUTo1nwQwW5ap3zuzQVPreq+3uHUQ7wNwr6ffjs1Mxx
8MMELRi/Y5/VSPjcQz1Pm26yhR8uKKl306CKfvA3CdLW3l1v0Qs+d+CaktFz
FfA3C9o4eNOISBP43HvDM56ldYK/RdCk+VHDrmvDjxAUH+8woaAtfO6vvY3a
3/iuJ/uRgkwGFmzPapZb5U9+vwFzy/a9lTuR23f++9rlL+WmrYLMHJU5I57J
Xc2952C936cKuUOiBE3RH9iSWiK3Ypug5y+3zXUulFvJ/ZepIu51Lvztglbs
08gJvAL/L35+Lu73P2bC5z7rOKXU6yT8Hfz8roUW3DsKn3vlvpfn+ibA38nr
1y82ad0e+Lv4+VQf2n51O3xur43dwpo2w48WFD39Uph5MPwY/vyp9Ng1axV8
7m2OdslpvvB3C7Kf8OqSwRL43Fa7BudGucHfI2hLr6eXjObCjxV0wGbL/ixn
+NwnLxTMW+wIf6+gscfdPnazh79PULt3CV6VI+Fzfxw95HS8Lfz9gvxTT972
7Aef2z1j3nlba/hxgmzKo/3bW8A/wJ+nU+mf64zgc1sWazne1oMfL0i5Yfai
dC34CTw/1lmNiVeDz337auxly0+6sn9Q0OXtc9Z1eSV3Nfdr701ZisdyhyTy
PPimtsihWG5FkiBNDWf/bdlyK7nbdE+vqs+Q2+2QoJoNBfFzjsitcliQiJp8
vHKP3IncmarVTYGR8I8IelU8drX1evjcbS0tbMQy+EcFhWc26V5dBP+YII/4
PYYHZsLnDmx6OSLiF/jH+fNXWLA2dAT8ZEEx713v/tUPPvfNRX0Gpingpwi6
/nvnuPud4XNvc1DV1NKAnyqoala1v9OXjrKfJuizkea95w1yK7nnv5/y484z
ud1OcNOOSt0yuVVOCorq3+S07bbcidyum7bYjc2Wm07xfDMzCu+XKXc1987K
lu7DUuQOOS2o1NyjnVcC/HTef7LqFWei4XN/++Hu7hwJP0PQ5tyWlAnB8M8I
2pFUUbZ1JXxubQ37fGtv+GcFZfcNXmDoAZ97sn7tyjnz4Gfy+goob5Sc4Wfx
/LlXcPLBZPjcX1yGROmPh39OUFlFhU/ECPjn+f2u/X3UoMHwufsPGVbTpS/8
CzxPy5snLe4Jn3uJ8dDRP1nAvyioVfFp30wT+Jf4/cVX2t3vDJ/bsbSg8XBH
+JcFxcacTL2lBf8Kz0/bMPuR6vC5D0ZOj1NVhX9VUFadzS6T7zqyzx1hMEoz
7LPcIdcE9Zx65MnoZrkV2YKKRh5qmvxebiV3krpjz+xGud2UgnpHljodfSO3
ynVBs8qfjfggyZ3Iveyn/bcKhdyUI2jrSrdLVuhqbkOPWTVt0CG5gtaMGaI7
Ba24IWjGr6kGbfH7lNzbq7LzrRrg3xR0Y05f9eh//Vs8T6Y+S3XG35fI/dvq
yv2uTfDzBOlEamZ8+ACf+8m5eRc1W+DnC/I5tin08Ff4BYJ+TL1YUtkKn1v3
vo5vZls8/9uC1oeeNf65PZ5/Ia9P1eqYbnp4/tymL/qe3dwFz79IUOTFtxN8
uuH9c4/Mr/+qZ433X8zns9aoUSk2eP93+HnVnrjoMxzvn3v05ruugfbw7/J6
cZpjkPsr/HuC7GZ4X3Vygc/9p3g13hjrnf4WdK1N3lbjZfC5l5fph81cA7+E
10ueul5lOPz7gkIMLAxP74DPfTakNqD4APxSQd2Xaxu1JsN/wOvHZdp7pyz4
3JaFxa1p1+GX8Tx5q7QzugOfe4JD5M5Nj+A/5HlbOUC/tQ5+Oe+HOgvTw97D
59YZF7BUWwXzr0LQuAWhlNAB8++RIOOoRf16mGD+cRtoWQyN74n591hQnVGO
u9YgzD/uQerOWUvGYP5VCrobsNX2rCPm7xNBxfUP6xtnY/5ym+2yK7X0gF/F
+2dm0o+JvvCfCtoVZ+S9YB18bt2xGlYuW+BXC3oz0N2mfzR8bv811xLqE+A/
4/3dw2F9eCr85zwvo71LOpyDz+0c9Dpl9XX4Nbw/O/XSuVcE/wWvx44palbl
8LlD1v0c5VcDv1bQ3P2eaZffwOfuequzu+oX+HX8eSprdknC/qmoF3QoZdad
sZrYf7kNNdQ6Vepg/33J+8mEhz0CO2P/fSXomHu6RkcT7L/cY7SXXD5sjv3/
Nf++6HIa2gP7P3fy18d783tj/xeCNN443ZhjA18StEqpeuMFzg9K7pIVZXt9
R8Bv4PWeeci+ZSz8N7weK8bcDJoInzupdqN5Gyf4b3k/ipg0bdM0+NwlZovm
q8+G3yjI5VgKhc2H/477UbNKK85HSm6PLhbxqxfDb+J559li2LgU/ns+zwe5
eHv6weeOuWmQVB4I/wP/vU5qWZPXw+c+UvQx+UIo/I+8vjJzN/TcAr+ZzxfG
ZLsjCj53QPaY4pad8D/x+c8kerJrLPwWPk9O0kvNPQCf+2mnyLc9D8H/LGji
57umm4/D5xaW5/u+OAH/C59HPPSs6Qz8r7wf00mN/efhcxc3LCx5h/Ou27d/
zrfNm3/Jgf9d0IU6e+u4PPjcCa1GGVIR/B+8n4eO/2kUztfV3Ic1o6MiH8Jv
FTSwqryqtBK+ikTZX59bmD+Hz31RK2SaZz18VYnKXYP8UiX4ahKNVz8R1vAO
PndqetmW/p/gt5HIN78wyOcbfO4r7i5/pKri/tFWoqMTJzvUtsP9Q10ix/r/
djXvgPsHd5NPZN1Mfdx/2knUP3358cguuP9oSNRsK7leMcP9hzt/cJ5ew7/3
H03umKJLZta4/3A/bby10KEPfC2JKnaGfPcfAL+9ROH+ubFxdvC5742Z2z9n
BHxtiRpmaOfUjYXfQaL/Kg/N0JoIn3v6hJc1vR3h60g01fnICof/wOdWtj/Y
xnMm/I4S1U5MjAmeC19XoneRvr32LoTPbaNXeuWUB3w9icxvxMzKXQJfX6Id
9qubHvjA5y6omhBTh/ssdZLowF7lyI+471Zzb7XOeKWK+3BIZ4lqGh8ndMB9
WWEg0ZNO7X4zxH1ayX1h3gfLrlHwDSWqnLz0nWIn/C4S3/9tCq32wOfWOdIm
vUccfCOJzu06kWiVCJ/bbEBDvOIofGOJegRHJJulwjeRKHrIuOsGp+Fzd79e
8VI7E76pRImjDRSq+D5CxUwi3eAzXh+uwufO6RCorM2B31WiNd0VfR7g+45q
7pB0v+QcfB8S0k2iovl9hp/C9yUKc4mMg3SqYsvgc7e1Lo8NfgzfQqIBRk5e
ntX69D8HFCbY
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQDQY5rx3SwEDXAcRdgMZ3yEXlPwDyH1aJrHNPhPAb
8lD5Cvmo/ANo/IQCVD5DISp/ARrfoQiV/wCN31D82iGm/9BXjRio/SWo/ANo
/ITS1w5nzwCBD9T+MlT+AjS+Q/lrh8NA3f1OUPvR+A0VqHyFytcOxmAAtR+N
n1CFymeofu2wpMCW67oy1H40vkMNKv8BkA/2Dj/U/lpUvkIdKv8AkA+JaKj9
9ah8hgYEHwDVKKY8
          "]], LineBox[CompressedData["
1:eJxd1DtMVEEUxvEJJTUNDY6hwYTY2NiQnA5baGi2mJhgK42JsZqGmgJFd0W9
wvpEV+Whi4oO6wMf+IYFV02u9dRaO/fuKfy+STab3yZ3//fumZ2Dx0+OT/YY
Y06nV/FeLDcb5djvM32NrWEpPziLzpJHevcWpza6lnPonOznojRGiy/o2p5H
h+T6VHFF1+4C2lSj1KrF0j5Zaug8eab1Z6gyo/2LaDuPDsllx2v/EtpcRmfJ
f9PVrVPav4LOyT6LcqJc2r+KDmS3EKVS3qD2F9EZWepRxpsD03FM+2R/DW2v
6zxHtU92N9Dmps5zRPtkuYXOk4+US/u30XYJHZZ0PxzW/h20uYvOyNJA58mH
yh9I+/fQ9j46kN0D3X+D2l9GZ2RZQecruh/7tb+KtmvoQHYP0eZRlL7yAbVP
liY6Tz6Qpt0c0P462j5GB7J7gjZP0RlZNtA52T/D+djn6EB2gea/SfMnS4vm
T/YvqP8ySvl3OKp9snuFNq9p/5Nli/Y/2b9B27foQHbv0OY99cmyTX2y/0D9
j9Qnu0/U/0x9snyhPtl/pf436pPdDvV3qU+WNvXbeH75PbTdp/OP7L7T+ddB
Zx08T+UHnb9k/zNKcXe9E9r/hQ7/+R/9TIXX
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
/PcFPdP/cC0qqjf9D73qKjU=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd1jlMFUEcx/ENiTGhprHBNSZGC69Yk/xjg52RmmJiorETCxOjzTQUXiCK
Bwi4CJ4oniiKx/hQ8QAVURFFXETxgEGQQ0Aw7r75b8z/t8nLy+flvf0yszO7
LFi/OW9Dhud5TdErfo+PcKelLTmZnTXDSym23iXt77bkvrks/W4il5dFxzxn
tcfSqvTh7O21lNeYXTiwzjmIvDF9OFORdFjE59fOupjPX+bs77OUPl0j98Gq
hHvt3N+f/P3cjxypICdzuesfsFQbqXOhcwjWpZaaxxfnF6929g9ayi9ORZ84
G7A6ZGki+npqq7N32FJWfW7v9lLnIHLMrHruH5EOI6+J2cL9Mmm/3FLM3F7u
g9VRSztiTnO/QjqoSMa/wvUrpcPK5Ho66ypp/xhfr0XOBqyC5Po7e9XSQTVf
X+L+cekwcno613K/Jplf7tdKm8hL4g82cf+EtHeS18c27oPplKV49WQXch+s
T0v7Z3h9lXAfrM5amh//oIr7ddJB5MH4dHXcPycdgvV5Xk8N3K+XNmB1gddr
ivsXpYPIba3xwf1L0iFYX+br38X9K9IGrK7y/unjfoN0AKZrPN4B7oP1dR7f
OPcbpQ1Y3bAUb/eCWe7flA7A1MT7a+5K1wfrW9L+7WS/OBuwuiPt3ZUOwGSg
D9b3oJ+SNmDVLO3dlw7A9IDXRwb3wfqhtN8ibcDqkbT3WDoA0xPeX3O4D9ZP
pf1WGD9YtcH4n8H4wfQc5h+sX8D8t0MfrF5CvwP6HXI89ArGD9avk+ct999I
G7Dq5PvbJK//t9IBmLr4/jzK+w+s30n77+X+NGDVLe194OdDP/fB1CMd9iTP
M+5/lPZDaQNWvdLeJ+kATH3SIVh/hv4X6INVP9/ve7j/VToA0zfpEKy/S/s/
pA1YDUB/EPpgstC3/Hzt5v6QtP9T2oDVsLQ3Ih2MwPz/gvkH61GY/zGY/zG5
ftS4tDcB6w9Mv/n/ryHug/WktD8lbabkflLTsP/+wP4D04x0OCP3s56F/f/3
v/8B1gYrTA==
          "]], LineBox[CompressedData["
1:eJxd0ztIA0EQgOElYCM26vnWZOMzZzQmPkGITCfYJZ2QYhEUO7WT2FyTOlhq
IQuCpVimXGKrte1aR7ZLIwjuelM4M3AcX3M/e8PmTy7qpxkhxIF/wjtMMuyg
OvjxePlThmA5Qm2Y1aiDm+j58PM7tYioNTOMUVvmZJxaTjh47Rca7Uwl7TOr
SQetXq2THUgtpqg1M0w7eH/zM5TaMiczDkK+GaWWs9SGWc05yP0FsJ+l1t5f
Xq0i9nPUljmReP597OepDbOadxDWUT3C/gK19r6/83OM/UVqy5wsOYgb7W7/
HPvL1IZZrVCLggN/ml7tGvvMEFPbGPfTwv4qtSxSG2a15qAePniL/XVqzQwl
alvCfT1gf4NalqmN91mYJ+xXqMUmtfa+ChfmBftb1JY52cb/08H+DrVhVrt4
H7rY36PW//wLeRJHIg==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd0jtMwlAUxvEbExc3E2ZTNl0M7qLHFygiCuIDRS0oii/AzejShdnFRaca
RhNmF5NG46abCWudMXdj9xY+Es+5CWl+DP33tCdcrGZKA0qprPkF1+6Z1BRq
xn9uvicooCtMUW7fuNWoRYdaPTtT3NY0tydsE7ea0fT1GRz0hWlWU72dfhn5
QF/YmdNkbtaovaI/z+0ZB48faqK/oClQ/An9GLcbw7z36Me5/Tj6dfQXua0l
TQbt9DX6xmP5u7dOGf0Et1rW9PhgTg79ZcyfRD/J7ScxXxT9FW4rhXnH0U9h
vjD6q9xqTVMmeOBh9IUpjfkG0Rd2MujpSK+/zu0J21lutdHfh55dYdrk9o3f
O6PmDfbsbHFb29yesJ3T9Bt8rmf0d7hdYdrl9oWdvCbzNU0A/T1uT9je51YH
3K4w2ZpuuwuIvrBT4LaKeL8V9IXtQ251hH0ooC9MJex/Fn1h55jbOuH2hO2y
pu66JtA/5XaF6ay/3+gLO+fc1gW3Z3wV/BFB/5JbVbhdYapy+//8Bw4gyBg=

          "]], LineBox[CompressedData["
1:eJxd1TtMFEEcx/GJjQmxpDQ4xMRobLCwJJnGYGewsaFYTbQVW4zJNgTFB75P
UHHwEBUV8Q34GkFBFARFPFHEOfGBYjY2Gktn737E/P6TXC6fYvebndn8t3zL
9o1bFyml2sIv/S+shsSsz9eVdjVUmJRW2Oxm++Cm/t8ra5qKjvewdSPbBeey
tZUlmaKjvWy1j22Dl9XPV/e0or+f7YXjA4nZlq4O9JvYTjg6mJgdlSW5bDf6
h9hW2Bxme+H4CFsfTczO0q6qfB/6wtExtjqemIF0u/rRFzYZts/gPIbQP8HW
zWzXjPMYQ7+FrU6ybXBLc1hT6J9i++D09lV59E+zdSvbBf+s7imrn0f/DFtZ
tg1OVf0X/Ta2F47PJsX7qDXFfpbtstiPxUVH7Wx1jm2DR0fCWlK06WB74fh8
YtKnrStF/wLbBdekG7wU/Yts1cm2nXi/y9C/xPbC8WW2vsJ2wlEXW11lW2HT
LfrC8TXRv47zL0dfOLrBVjfZVtjcYnvh+DZb3xH94PYwXnLL0e9hq1627cW8
WIF+H9sLx3cTs6pwgOjfYzvh6D7e99XoP2BbYfMQ86UCfeHYsfWjxPxJx8Va
9IWjfrYaSEx6eW0l+sLmMdsHF457HfpP2HqQ7QYxXzagP8RWTzH/N6EvbIbZ
fhjnuxn9Z2z9HPtRi75wNMJWo3i+XegLmxdsH1zYjkb0x9h6nO3GF75v6L9k
q1d4/7LoC5sJtp9Y+N6g/5qtJ9lucuF7g/4btsqxbQ7zbQT9t2wvHE+x9Tu2
E47eY95Noz/NtsLmA55/Fn3heIatPyamMH4T9IUjz1Z57Ncv9IXNJ7YXjmfZ
+jPbCUdfRP8r2wqbb5gfc+gLx3Ns/R3zeAZ94egHW83/9z+rrqRp
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw113lYzWkbwPFTodCiUNY6aY+UESJ0p7JkyVRUpuWUyS5bJWrqMNpDvTUt
hCO02CrtqDlCySQx5iKMTpYa4jxFKPL23vM+t/7p+lzXOed7nd/vuZ/fc/QD
trkGKgoEAqGCQPDv////dcnhBxuD2IUXJ8C/lKDdLh9VG1fIDd1yCJ47Ku0d
WYYeXvehXlrELX4vh1cZawpSi7mFH+Rg077BZt0lbik699H8EJsSblGPHBwS
+v2GlXILPsrhyNDa3idkCbrYs9DuQhn1P8lBfetL68hy6qMH4gweuVZQ/7Mc
4H6/yeRK6vfKoeu0r4FSFfXRn1ep3n5GFvXh6ydmjKu5TP0v+PprySNPXqE+
2uJIYknsVep/lUN7wri+HdXUR2cr33vuV0P9fjl0VEq2Lf+d+t/k0Dp/5Yn5
UuqjV48P3j79GvX/K4eEc97PDWqpPyCHs19qPmlcpz56zkaXws9kEDDwunBN
7ckN6qOle4xHld+kvgKD0xBwM6mO+ooMtugaG/jVUx/tGzPJ0uIW9ZUYvFyg
3PmJLBjEIG5Cm2dlA/XRGQ7y8B23qT+Ygdy5wUP3D+qjx3a2dtWSxUMYOL7b
7OzXSH1lBkaPzqz/QJaibTImLQu/Q30VBq3znPu/kAVDGbi8Xxm+s4n6aMun
85rukGEYg6kHSwZG3KU+urMtfKwNWTycwZzIMUZuZKEqg/MG2Sa+ZCk62/it
sQ9ZpMbgQW6w6WKyQJ1BkMYgaz2yBG32e+CPz7/3NRgcHRoQl0KWoUU2NbIp
ZPEIBs5JcwNK6fsINRmoJXmMFpKl6E3TDg4Kpush0mLgfXf/7PN0/QQjGcTE
OpabkiXotYExolffr/8oBqvvPTALIsvQGcsaJnXS/RKPZvA12HelJ1mozeDg
Af/KKrq/UvT5h22iAVoPIh0GHZke7hZkwRgGS1cEZNvR+pGg1VoUFurS+oKx
DIpfXwm8SetRhra48nzEbFq/4nEM+nW8vVJovQvHY+9N+JL7NB9S9K7Y6jef
aZ5EExj4Xb+9SJHmTTCRQUNO56aPNL8StGfmYZ87NO+gyyDpmerGiFfURw9L
L09THDWR9/Xwft7V6vFZwC0UMmiPPBm1fzu3FH3zeZRb0HFukT4D2wvzMg0a
uQWT8HoULk252MctQYfFefpqmujyvgGDMynhWs7u3DL0vecn6j33cYsNGbhd
rb2x/CK30Aj76mzG9CfcUvSKh13dn5T1eN+YQU/GS+UMa26BCYMPC/1TR/tz
S9AzRWoFOw9ygykD/cBnHueruGXoewGOV2684hab4ftPFX96piLkfXMGUY/i
le7ockvRR9KXJ5yz5hZNZpByLDFtrzO3YAoD87fHp9qKuCVorcFZvm9DuMEC
19/WzxaHErll6HE9SgX6J7nFU3H9far560w59S1xPcvSqsc1Uh/dvq1my742
6lsxsPtm/vrRJ+pPY6BslrXKXFWf99EDHu8vBetzww8MmJ2/StVMbhnaKijb
6/NSbvF0fP2gmLyp/txCawZjIuz7/EK5pWg7k0jXxERu0Qycjw/apYUSbsFM
BsNNTY2ayqiPnvHWq6D9NvVn4XwPFtv3tlIf3Zpe2KP0kfo2DAIK4uuGDpvE
+7MZBHY8rlDR45aip/kW31Ww5hbNYeA0KE/z42JugS2DY6H7Itt8uCVox6pF
E2/t5Ia5eL+rk7rzY7ll6LNCjf792dzieQzSXjc5eBRTfz6DKVqejUZ11Eeb
OQSkv3tMfTsG/6S15xcy6gPO718hD9cMMuB9dMNTEys2hhvs8X5ObJv2mwW3
DD0+xCPLZgG3eAFebx2jDS2ruYUOuP7mvDixezO3FC0tLZk9QswtcsT9sGj2
zJw0boET7v8PvLKnFlAfnWH5dXdlNfUXMpDBxdt296mP/iFZMf1GO/UXMdhT
W19v95X6i3G+h1ZtuKRhyPtovVXO4eMNuUVLGMSvyR0RZcMtcGbwQtfb7Oky
bgnawWpu43R/bliK13/yqf7oEG4Zum/v2Cv34rnFy/D9IzeqjznOLVzOoGWg
o8/zEvXRIWPGRKbWUX8FXq9bV0/eekx9FwaNKn9798ipjw57PLpSR8mI91cy
uKxeXTZNh1uG/nWzQtrqydziHxkMjrZaFmPHLXRl8MQq6PE1N24p2iE3Qrl3
PbfIjcG1gpY/TSK4Be4MDFIdF7omc0vQomXS1btOU38Vg+b6V2pJldRHD/wx
JOhoI/VXM6jZ/iLipIz6Hnh/A4c5nOihPrpj+vXaVBVj3vfE9Vt9XSFqArfA
Cz9vX7JKgBW3BP1Ntq7F1pEb1jBQ1zwbpOLJLUNXpF+4U7eZW/wTg6rDSoph
UdxCbwZLbOtHTkjllqLVquaqXMqlvg/O6x/tb+Zcpr4vPl/87l0vv0N9dNGy
aZmGbdT3Y6CpvXdXdA/10fN35fu0KJvwvoiBksbzn/TGcwv9GZxakrjHcyq3
FP1NmlJzwJ5bFIDrVUPV6pQ7t2Atft4hl5bS9dwS9KGs9KsVe7nhZ3y+JJjI
zh7klqGnV8esPCyhfiADSWrYcP8S6q/Dz3vrpqdfR310e5dhWtMj6q9nsH7i
OfHWTupvwPNU05DO/m/UR1/+Jb31lxGmvL+Rwe9O9uu7JnHL0PfPaMe5zeAW
b2KwfMHPK/IXcQs34/4nti/s8OKWolNKH1dobuEWbWEwRMc9xDiSW7CVgW7y
ECvbZG4JuqBE/9WKHOoHMbgQ8mDeglLqow2t40MM6qi/Dc9Lm2yPfHhI/e04
/zrZJcWvqY/WnFvf6POV+jvw/GJ0+kOvqhnv78Tvd/Gu5X5dbgm6+/qPSX2W
3LALz59537RF9twytHCW98NSV25xMIPKrf6PPq/lFoYw2JnfaGIewi1FO73T
uuMcwy0Kxf252/uZTwb1dzNwzbP2D8inPvro3gB/ryrqh+Hrt/29tqWU+ugr
0Yrmi4qov4eBakHX5Zxz1N/LYLd1xIQvudRHZ3qErlyaQ/1wBj5/jvXKPEb9
CAbas1xm/5lJfXRJnkXv11Tq/8Lgp+iGbK3D1Ec3moumTE6gfiSDrNZpuU7R
1I/C5+fMqKEBYuqjm4fHrxKHU1+Mz+O45HhJKPX3MXg68eHp2h3UR2+MP57b
voX6+/F8c8/0kOoG6qMrFleusabrLf4V5y/+8HBfX+ofwN8nYd0n4r2ojx7l
pK9T4U79aAa3NgRsb3ehfgyD/DO9Z3WWUv9fK5vWOS+kfiyev15aX4v6fv/R
pS1rj5bPpX4crqfmPjc2i/rxOF+9tm/MplMfbdm4zWfdVOon4PNY/cn502bU
T8T9puH6w5eG1EfXuG7/21hI/SS83k4m1ZvGUx9dGWsZWqRN/YM4L07Nyr2a
1D/EoKtn5Q57Neqj5a59xUkq1D/MoPdnzYYWJeon47yEtZWZDtD8oY/pX9q9
5wvNXwqD3HmNao0faf7Qfl1hu4XdNH//wd9fZxRKQ9/S/KXi+Va9qLapg+YP
vcekKcf0Bc1fGoPblrluB57R/P+G56nC/Q/aWqiPPhh60dD+L+qn4/MkK9gh
p5n66KJgodXgRupn4H5w7tvrjfXUz8Tns5Hn9uZa6qNLRkXU2tRQPwufB+/K
WnOqqH8EzxebXOvVy6iPVkw+HhZRRP2jeN483fG+8xz10d3W4TN88qifjc/r
0Xl2zbRfCY/h/u1bNcLpOPXRO4IE+VeyqH8c7+8/twdZ/0b9Ewzcy9cbX/y+
/6FnDTZWNU+ivgTnefGqsrxY6qO1bZz0TX6l/kncv5udXPJpPxXm4O9597z5
k/dSH6235LK8MIT6p3B97rnrO3OHKfwPjGEdbw==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd1DtMVEEUxvEBH+j6AAXF5zqLoqsIQmdINjkxMVDQaCwtRhNNrNTOYDMh
sTOxtLEYYk9NOcFWa9uhJmEEXFQQdfbuScz3TbLZ/DZ388+ZO/c2Hj+//6TX
GPOsfDrf1fq2Lg/frbSbH6akw0CWDXQqrv7nu/abaLuFjsVPq9W1+442bXQo
nl2dH1qa0f42OpH9D7T9iY7FSzPlhwnt/0KbnXWpLm9onyy76FTcqn39+GJv
stv/jbZ76Eh2f9DmLzqQxWRwIvsetO3N8qndLLdM+2S3D232owNZDqAT2R9E
2z7qk92h3N3PRe0fRgey1LKU6Vq199on+yNoexQdye5Yli+fy3qr/ePoQJZ+
dOrXeRa0P4C2J9CR7E5mWa6/Wbv3SvuD6ECWIXQi+1NZXlYHQPun0ZHshnV/
H2n/DDqQ5Sw6kf05tD2PjmR3gfoXs5Rplut3tU+WOjqR/SW0tehIdg20GaH+
iO7vbe1fRieyv4K2o+hIdlezvC7jr05r/xo6kKWpz3dL+2R/HW1v6Hm7o32y
G0Obm1nfl9onyzg6jevzMKf9CbS9hY7FnXHmH2h/Em2m/vsfu0YxDw==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
9xWZT1cLYvgfyKsk/w==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd119sVEUUBvChitX6p1tdKSi2UyulSGJWiYkxIZmYGIwvrsQXk4ZMNBLf
XGNMjL7cmPBmwj74og/mGoz/0LqKaEHRa1FQoLJVtKK13lqt1SJzBQtYRZ17
59uE890X8mvIfvfMOTOz23ffQxsfaFNKLVuiVP5v/iQvOTN2KH9uMrnty9Lq
FWfWd0xsq+0Jjr2HN0w/Xh4ONq8607tl/u6R54JTcrTdma2jC4NDW4P1a87s
zflkcEK2rzuzLn8eQf6wMy/U/Bvcj3yyecOZcv5C9yDfO4/vuR35DWn9pjMj
Pf4vtyCfbN9yZs1Q/sbI3yEdez/7jH9WIP9t6dQ7X671HcjfifU7e2PIf0c6
Idt3sb7Hg9WIdDyC9Z0KNruk011Y78PB0W5p/R7WexT5ZPs+1n8H8vdIx2Tz
AfqxDfnk6EP052nkJ9IJ2X6Efm1B/qh0TDZ70b/HkE+OPpbWn6CfDyKfbPc5
U7R7CPn7pWOy+dSZjUUA8snRZ9L6QGsekU+2B6XVodZ8Ip9sxqTTMczLDcj/
XFoflk68N+fPAPKb0mpcOh5H/SuR/4V0So6+RH/LyD8inZDtV5jXTuR/LR2T
zQTWaynyydE30vqoC5+rkE+230qr77C+Zyohn2wmpdPJ1n4Njr6X1lPSyRT2
y0yw/UFapdJxivPmKPKnpdPp1n5H/o/SekY6mcF5dQD5P0mrn1v3AfLJZhbz
PY78WfTzCPJ/kdZz0smcfH/7K+ZtFvm/4bw5iXzvJ/IPWET+vHQ6T/0/hvfr
Qv9/x3nZg/6T7XFnjuXHy1r03+Hzb8X8OazPnZi/DO9/L+aPHP2BejYj/4Qz
p/Lj9lHkn5DnmT0pz0P1p3Tsnd++G55H/oIzD+fHbQP5C5jfBPmnpPXpVv+Q
fxr7dRL5Z6TVX1iPeeSTzWJr/pFPjv525o78hdtx//7jTHE9duP+Jduz0urf
1vmD+5ds/sN63oz7l2xUFu6324Lr5JRcWZKF/XEX7m9y07uYl02op026Rk68
w/0SXDpP2pIb3mE+UP/50lVy7F38vyg4I5ul0nXvov9PoX5y5QLpyDvMH+on
63bpWnsmvv8l5NKF0ta76OeLqJ+sLpKuehfztx31kzOy6ZCuk1PvsH9Q/8XS
EblJ1pegHztRPzkhly6Vtt7F+bIb9ZPVZdJVckzOvM/9vm46pevktBPzP4r6
S9IRueld7Of9qL9LukZOujLxe6J0ubQlN7zDfYL6r5CukmPv4ryYQP1kU5au
lzF/U6ifXLlSOiI3yXoZ9u8c6icn5FK3tO3GPGWon6yWS1fJ8XL0fxH1k80K
6To5JVeuwnmh1oX6yU2yvlq6Rk7IpZXSltwgq2swf23BVXJMzrzD/R9seqTr
5NQ7/F4LrvRKR+RmL+6DTtSvpWvkRGNeu1B/n7QlN/owr92o/1rpKjn2Dr8/
UT/Z9EvX+zG/PaifXLlOOvIuvn/2o36yXiVdW4XzegD1k0sD0nYA+2EQ9ZPV
aunqapzfa1E/OSObQek6OfUOv4dQ/xrpiNwk6+ula+f4f9pU45Q=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd109oHkUcxvGxFyEX91Dora4X8dDWTWNibY1O0z9JYzXzxlaNxnSbtLXW
Nt20WtvEtFulFy/Zm+hpoeJFKAsiBE9LRQRRXEHIRWR78VKRAWkpguDsO8+A
v2cv4fNC3vf9vvNndx6bPz99cpNSastDSnV/u8tus/rW+J3lzX/t1J31dqsf
vXG3t/67d0FunafXt964+4t3skM6d/723hOza7e9G+f7Hb/2jp+UzpxPddcX
3rXzZ592l3eUSKfOAxs3s9GPvSvnlc1dgbcalDaD6Fv0Lsl2EH1z6N+J959E
P7klJ0PS+RD6htE/hL7H0f+UdObc/fvAFvSTo2G8/wD6ydUwev8Z9P0j0mYk
jK93SbYjYXy99dPShfPabTegP3u35GRXGG/vnNw4D3XXV97xM9IZuXb+3NVt
3PSOdkunu/H7fOJdkdUeabMnzBf0ky1ZP2t192nZKvrJLTkZtXqp/wL6yQ05
fg49C+gn1+Toecz/GfSTK7LSGJ8p9JNLsnWecNPh1jj690oX5HYv+kfRPyad
k5uxsB7Qv086I9f7MD93oH+/dEqu9of1hP4D0oZcHsD83op+sj4oXRwM6xH9
5GRcOh/H7/sI+snxhHQ2gd/3YfSTo0PS6SGsr03oJ6tJaTMZ9oPE95MtWb+A
9fi3d0Fuyclhq//sdTcA75zckOMXMR5/eGfkmhy9FPYj75RckdUUxmPD25BL
sp0K9y/0G+mC3Dr/9GN3ob8nnZObHvaXH9A/LZ2R62mM9/fof1k6JVdkdUTa
kMsj8vMsWR+VLo6G/R795OQV6dy5f/v9Ff3k+FXpzHm2e4Pf0E+OXpNOnfvb
0R30k9WMtJmR868kW7J+neY/uSUnb8j1k5MbcjyL/fFf9JNrcvSmdEquyGpO
2pBLsp2j9X9MuiC35CTF/n0P/eSGHB+Xzsj1cdwvLfrnpVNyNS/HQy1IG3K5
ID/PkvUJ6cK5mx29B+gnJyelc3JDjk9JZ+SaHL0lv09KrsjqtLQhl2R7mub/
29IFuSUnZ2j/Jzdn5P4cvyOdkWtydJb2f3J1Vu4n6py0IZfn5P5syXpRuliU
+2dLTs5L5879x4fv0E+OM+nMuf+9a/SToyXpdAnr7xv0k9UFaUMuL2B+raOf
rC9KF+T2Yji/of9d6ZzckOP3wvM++sk1OboknV7C/PoS/WT1vrQhl2RL1pel
C3J7OZxH0H9FOic3V8L5Ff3L0hm5Xsb9dA39K9IpuVrB/MjR/4G0IZdkS9ar
0sVqOL+gn5xclc6vhvML+snxNensWji/oJ8c5dJpjvV5GP1kdV3aXMfz8Bj6
yZasP8R834V+cktOPgrnEfSTm//5P55d9R0=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwt13lczVkfB/Bb42FQasZkELqNLUndLINSTkhECg01okjcFuRJEUULTba6
0WQZciWkaEGbUkmmUnHLkihdWzG2Yy2aqeczz/fcf3q9/7n9Pud8z+f8ruGK
dQu8NCUSiVRDIvn37/8/UZxFObnPq18mZf/SCa4y9+4yciUrYd2+AZmbF5I5
/Kze/dANBzL7jbMPxfPzh80iK+CEB206G6eR1fCo0I7Eq1PIsmjOnh9YJ9ea
SA6D1RHRa2ebk1Vw4byM7JDRZOlOzuZpPbJJHk72h6916vQvNCCXwDszllmX
DSDr7uLsXmFwQU5fsge8ppd5wkltcia8In+IKqYHWbKbM2XcTN8NGiI//MKu
vDbzswHlh5tltfuC/yJzuHJmwYCpD8lsD2f7pBWrNerICthf1hhado2shjdo
9HDbnk+W7eUs5pTJN7bnyGHw++TO/3Y/TlbBm5SmaRXxZGkMZ3FL1qbtjib7
w1+X1gTMCSGXwI65Zv/R8ifrxuL/v5jpXuNJ9oCfxJeFxy4mZ8JVm371WzCH
LFFwtrAk0KDPVLITPDjENrForMgPB2lVv1o9QuSH84oGaX8/UOSPw/qeftZZ
qC3yw/odt6/INUR+2KLPoV/0Pg2h/Ps4e9xhdanoOTkMXiFP5vJGsgpO8t3c
3ldFlu7HfFqtrS2+SvaHn0ww3eKXSy6Bs4b3/jQ4jawbz1ny66FWtxPJHnBc
pMX8/fvImfAOMyvTxVFkye+c9T7uUGewmewEB0yLsXy9hqyEa+LKVl9dTuaw
ZNnjhYm/kFkCZzqNWp2hs8kKeOVX75UrrMhq+Hp+6XZHc5H/AGcRPlpuNsNF
fnjPlXXPJw4Q+eF3o/sZjdMW+Q/iPIys7j9RQ+SH+4bvyp36aTDlh7etDtV0
eEHWPcTZhCu1bcuayB7wd9sX/x5cS86EM9/3unfwGllyGPuZpV9UmE92gqX6
l2yfnSMrYdMD+X79ksgcjmsYIJubQGZ/cHbqs3ZM1C6yAi7Pqdx+bStZDdu+
Hfq9dgBZdgT5iw3Gua4mh8GWpz48O7OErIJrb9816nIkS4/ieUtDOjODyf6w
hzrcaPYJkR/+YnIxp7xa5E/E+XpVn2fyWeSHn7+bM2Ozgdh/eMiIh8vTZ4n9
P8aZ/fafDSvXi/2HWzw/xF0/LPYf3lbqUHlRzB+HJ1e9vrnjldh/JWdbHrVU
2eqJ+YfHRHfVtVuJ+Yc39bVtPLhKnP/jnKX10/4yMlacfzgqd4hpcq44//CZ
lcHhvdXi/CdxltLL+J8x3UT/wdujx96d01/0H+y1zXKBu4novxOcNchub1jN
RP/B+jFVdl7Oov/gpOLNtS5y0X/J6IsnK/VsQkT/wVk35g42UIj+h61/3/b2
/QnR//Bbuw2xBbmi/09yZpbzqPvmKtH/sDpxqM+4ZtH/cC+36PyW96L/T3Em
az/WEd/dkPLDBmOsjSwGklWwzv1qu/oxZOlpznxurnXztSH7w/a3/gn66kwu
gZNN8w5Eysm6KZxVPx18rUcI2QO2Pv/+c0QsORO+FKGY8DmJLDnDWTerXpEe
OWQn+P7UR0+vVJKV8LAUL0/9JjKH7+5XSvw4maVy1j10YvH5b36i/PCpBt+k
N/3Iatiqq+iC1JgsS+PMOXXKl1lW5DD4bOHAoFVOZBVc0Hlj3GZPsvQsZ20V
oy13BJH94UC5R3z0TnIJHD31F5vII2Tdc5ylT1tuF5hB9oBTrVPT3UvJmbCr
vk6wzR2yJB33tUtT2sDnZCd4kbO546uvZCUctFe9Mlt7KOWH/5CavQ+UklkG
Zw59ZF2m48gKuCg0Y2+zLVkNv/w0/egOF7Isk7P1hZ7jDX3JYfC6QeGu50PJ
KrhN3qvvZAVZmoX7wXCKT04S2R/ePb73ilHZ5BJYuvW+ZF85Wfc8Z9NffuvA
G8gecHvIu7kzXpEzYflSkw9RnWTJBfSZmdw+T3cY5YdThxl4NPxEVsKdLNzy
xXgyh2/fH9XaOpPMLnJ265xfeKMLWQFvvyPtV+lDVsPpkStPnw0hy7I50wxN
sIqOIYfBQRbGd1yUZBXcony6Ych5sjSHs5k+UUMbrpL94QlG1a3Rd8gl8BKT
v/37tJJ1czmLNOVfA9vJHvDxkl2qWz2HU374n3kfPo7QJ0vysJ99i9euMyE7
wXVu8+3SrchK+IDqWvjjeWQOF/beNFLbg8zycf/3CLEcs56sgHcnLCybFkFW
w9Zn51XN20+WXcLzHwtc6JRMDoPVFbqrZmWTVfCzv6Tdf/6TLC3A+pz9wWJA
Pdkfvqs26v2hlVwCH7y+IKS0naxbiPv6UnlCdM8RlB8OCgpcOmMgORPOuLOz
4bMxWXKZs0GjXmofsyQ7weNzX0us5pKV8GXNiwW1bmQOS/oMsHFbQ2ZFnL35
MvFwUyhZAUf7Pq10jiGr4dATL2qKEsmyYvSzS1zawAxyGPzmkeda72KyCraT
/Djs3E2ytISz4hT7uy3NZH94o+biaD1OLoEdnmrYTJaMpPxXsP/6zT0X6pI9
4MEZFi3LpeRMeMHSG41eMrKkFH382LDNnZGd4DaLwEmOTmQlHDE06PQ4DzKH
n7spHfr4k9lV3Nd8pOnDbWQF3Jie7ngilqyGrQKSC5YdI8vKcB/4mAfqZJDD
4JeBX0uqisgqODXrsk/kDbL0Gmd+TQ6LRj8k+8OmNckHy1+TS+DFcaWWrv+I
/H9y5m3uPr1Zy4jyw4dHKXNcB5Ez4aSsTccqR5Ml5ZhPSbyGqSXZCb6cH1yz
1Z6shMO7JukUupI5PDWqoe6ZnMwqMM+SOpOujWQFnOirY9zzN7IazuPjazUT
yLJKvL+3HprIk8lhMJe3LVddIKvgjZG2S5JLydLrnNlsjZeZ5ZP94diPWnnZ
GeQSeP1C0w+TT5F1q7A/ix8+Ljgi8sNHJ5lHT94v8sOLepx8enGnyF+N+zKg
4cvwMJEf9jQ8URUTJPLDh177LH3tJ/LDflvML9h4ivw1WE9Pb1WcWB8FfIT/
mvPIUeSHLXfbe5nNFPlv4PdWRUtTyBSRH/ZrniG9Plbkh51rU0z0Ron8N7G+
AUO6uRmI/LDjJv0UpZ7IDx9t3TLgSW+RX8WZwtbe1VBT5IdDPn2VL20X8w+3
pctnH3gj5r8W74unj3RUPxXzD0/42DNc8kDMPzxj9JL742rF/MOl5//bw7tc
zH8dZ3OyK3okXhbzDzefXfug7oKYf9h+sl1Ez1Qx/7fwflF0vWOqUsw/HFU2
edaGBDH/cMXJI/LkPWL+b3NWf9RrWV2EmH/4hLe1sSRYzD9skPBttdk6Mf93
ODMOtJzu7iXOP+ya0hobs0Tkhz3b3mQVzxf573J2501FCrcT+eH7PlEbDK1F
fvjMmp56zuNFfnhiUeXOKGORvx73WcC9ujzRLwo4pOJH/qqfyA+XFHeppdoi
/z3OXM4cP+n8jcgPp3c0W+36IvoPvvxu7Jnit6L/GvA8emdbPz4T/Qf/1N/0
y+hG0X+wyRrzphV1ZN37+P7dWvuPV4j+h9VXsn58XiT6H7aI+0H+c7bo/wd4
f0wdFb4nTfQ/nPK2xf2v46L/4fKXNzXsD4r+h31tPVedEf3OGnFeB+3a22uH
6H/4zwVXg3y3iP6HE6a3G95YL/q/Ce+bWikxMrnofzh4WmFh/DKRH/Y+uCjt
b2eR/yHWr6PLRT5H5IcfvbIpq7cR+WGfrade2k8S+Zs5+9s5r+aKqcgPdzut
6T1luMgPb5vyXeEl/RHsf1wieO8=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd10toHVUcx/GxGyEIjhB0IzpFkIigo9WNUDgIUnHjtBsRigyK3Qg6LgTR
zSCUan3kVmtjkja9beKradNp82xsdExb06ZJM2nTpg+VcSNCRQ6ILgTBMzm/
P/j/zSZ8srh3vnMec+76F1/b8vK6IAjuvCUImr/NZXZY83fX1u7Zvx42jVvk
mhy/q52TK+dtzfWrd/SedkYunX/fPHXP9pve4U7tdKf+/IIcvK+dOPuyeO1v
m2zJ5gNrnv7lrc6RW71b5Jocf2iN+7Kurbd75+SKHH1kzepgtrHjLu+MXJLD
bmuar9u03jslF+Sghef1oHdCbpOt84a1C/27tFvkehee7+Po/1g7J1fOGzua
IvR/op2RS+ftN90NPoX+3drpbjzPZ9FPDj61pq/XXc+j33nIPc7Vl9BPtmSz
x5qRTe6Jvop+57c7m/+gfw/Gfwf6e/B9vegnVz34vBH0f4bPm0a/81r+PPrJ
YS/mwyr6e2W9oL9X5jv6+6w55R5H97pHfL/zlmb53OHddr537YF62z7c30Pe
ph/394R3qx/384x33Y/7ec473qud78X9bfOuyNE+3O8b3tk+3O873iU5HMD4
dnun5GIAPQPewX7tZD/m+zD6yZZs2tY0j2vzFPrJNTk+gPl5Bv3k6gCe/zL6
D2pn5PIg7v9n9A9qp+TC+YFm+H9D/5B2Qm4PyXxBP9l8Lvvho76fXJPjLzA/
OrxzckWOvpT9zTsjl+TwK5mv3im5IAdfY77d752Q22Tr/HqzAcXe5pB2i1wf
kvWB/mHtfFj2K/STo8Pa2WHZv9BPDo9op0fQ+wL6ycEI5vMr6Ce3RzB/30Q/
2RyV/Q395PooxqcH/YV2XmA/HUQ/OTqG98ko+snlMaz/WfQfR/8S+snFcVkP
6B/VTkaxv/2B/lGM1z/oJ5sxma8bfP+YzEfvekzmj3c8rp2Py/vSuxpHz5Pe
0YR2NiHj611OyHh6h5Pa6aSMp3cxKfuldzClnZDbZDsl4+dtTsh4oZ9cn8B6
KNA/rZ1P430+g35y9A3m0xz6ySU5PGnN2ut3Bf3k4qSMN/pntJMZOT+in2zJ
5luM35/oJ9fk+DuZP+gnV+So1M7IZSnv78d8//faKbkgB7NyPvVOyG2yJZtT
1iwuuOs27xa5JsentXNydVrOH97RGe2MXJ6R9Yb+H7RTcuHcvL267kb/nHZC
bs/JeRn9ZHNWu3VW1jf6yfE57ZxckaN57Wxef19JDs9rp+d1T0EOFqh/Aeul
E/1ku6DHyyzS+JPrRT3f4gvaObm6oNdLtKSdLcl5FvOfHFZy/sX6JxeVnJex
/pe1k2U5b2P9k+2ynM+x/i9qty7KeRLrnxxfkvMo1j+5uqT322hFO1uR8zD6
yeFlOT+jn1xclt876L+inVyR8zv6yZZsVuX3GPrJNTm+Kucj9JOrq3h/3If+
a9oZubym37fhde2UXFyX+Yn+G9rJDdzvv3j/ky3Z/CjzE+cfck2Of5L5ivMP
ufqf/wNs2R0U
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
+v6DZy02OT2Vo+8/2GrWyie3Gi3Zf1v3LdY=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd13FoFnUcx/FzpeZSd9qjU1vz5nRtzs3bns36J/gRhP0RdEr/BCOeiiLo
jy5CCCM4gtE/wZ4gCCPiwuifYBxEMALhMEIIgwuC4T9xyzRtOn/nfKabmf2e
+30O/H6ef8ZLxp57/+57v/vZ99o7x9/ocByne53jtH+2P3Gu1Vzv9OKx98dV
25qsFrR6s/xYN8m5cW326MLJl6z9P3X501HWETkzbv96bdTauygdGu81Xz/X
a50aH29f0DZr9y/phvFPrcGpmQ7rhOxc0qre/iyPlQ4u4fovW8dkbTx/Onym
c95aXZZuGj9vLnf2nHVu/EF7AX609v+WjoyvmZrp76wzsndFq6mZs63BL61D
cmrc5tSMtXtVunEV6xtZJ2TnH+nA+F1TczpEP1kbf9POfR39i9LNxep+o5/s
X8P6HEU/OSN71zFvT6OfnF7Heg2jf0m6QU6WsH496L8hHdzA+nWhn6zJSmtV
juN69JNzsl9IRwXW30E/2bspfz8kpzexXhvRvyzdMO4sBxT9y5jXbvTfkg5u
4X72o5+syaqF56eO/lb1PKPf+Nfz5vMC+le0+uKU+byM/pVqv0C/8YqZ3rMn
0H8bvdPoJ6e38bx/iv47WpXj8zX672D/mEW/cTnOZ9C/ivX5Bf2ruL4L6Cfr
VbkfqDVcbwv9a9X9wf5H9u/K/SkiZ3dx/X3Y//7F35/E/kdOye496ca9av2x
/5Gd//B9r1oH5Jisyeq+dPN+tV+gn+w7hZ2X99BPzowffL9466RD4/LPfYh+
sttR2P39I/STE+Py+fgY/Q8Vdj0+QT85NrbzhX6yeriw83EK/cbl++kr9JP9
9YWdn2/Rb2z3e/STvQ1Yn+/RT043oP8M+jei7xz6yYlxuR//jv5HCvs8X0Q/
OTYu759GP1ltKuzfceq2n5xvwnputvY7pSNju/9aZ2Tv0UINlf9gHZJTYzvv
1u5m6YZx+fw9Z52QnS24n8esA3K8BffvFWtNVlulm1txfW+hn+x3SUdduN4T
6Cd7LtYzQj85dat5Rf826YZxub9/jn6ys72aR/ST4+243wn6yeqxav7QT86N
7f6K/hq+fx795KxWzR/6d0iHOzD/y+gnuzur+Zuw/TurebNOyE43noeadUCO
yZqsdkk3d2E/2G2dk/3d0hE5I3t7pENyukd+v/u4dIOcGNvzC/p7pANyTNY9
2E870P+EdJOck/3ewp5/13D/yRnZ21vtN7j/5JTseni+rmD+yQnZ6cPz+wfm
nxyTdR/W/wLmf590k5zvq/ZbzH+/dETO+rH//Ib+/dIhOd2PeT6P/gPSDXJy
APvfz+gfkA7I8YB8njVZPYn96gf0k3OyP1i939BPzgar9yX6h6TDIazXZ+gn
uwer9zv6yclBzNdJ9A9LB8O4nrfRT9bDtP8fwvPxIvrJ+SHM/7PoH5GORrB/
1dE/gv13AP2j0uEo9stu9JPdw9hvO9F/uHqe8P4nm/+Q2PPxEt7/5Ni4PN8t
4P1PVmPVPOL8Q87HqnnC+WdcOhrH+W4O5x+yV5cO6/J8lJLdCXneapCTCXl+
cyalg0lc3zT6yZqsjsjzaZOcH6nmB/1PSUcP+H+ML+Pz
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd101oHVUYBuBREKEIjpCNIHGKG8XN2LgQNfXYNk3UmszNT2Nsmk5TG9Om
P1NjY3tj2rHtbZrfOwE3dSFXFBGEMMtSEIa6EMTScVUEF1MEESoyF6m4ETyT
857F987m8gRy73nP+c53zmyfPD149GHHcZ58yHGqz63n5bZq3nrw7PjjO1TF
gNzS7t5298vovxe2XJLVK2212Xuv3vGXcUIutMerL/zV2H9VOtauvq77R+Nc
e75Df8NNY69bOtL+s3ajs/GtcUZ2d7bV0437tRufG4fkdCfyNY2d19rmMzYO
yC3truqZRX6yUm31VaRn5Ajykwvtavj1YeR/XTrW7tPTtdmL/GRvV1vpdPdr
LyE/OSO7uzEfzyM/Od2N+X8K+fdIB3vs+iM/uSSrHsyXg/zkogfz9bdv8u+V
jsn5Xszfb8Zer3SkXZXLtrvGGdntkw77bH0Zp2TnDelA+/uqPG4Zt8glWb0p
nZALsv+WdEzOtW//VD3Iv0860v7sun5+QX7tqer5HfnftvsP+cmp9j/Vzz1A
/v62qrZH5yNYf+3BqqCewPr3Y/90Yv37ZT2pAVl/yYCs32IA6zGK+g8w3inU
f4D8l1D/AX5/A/Vfa6utr/sC9V9Dnk3Ufw396DvU/6CdL9T/oOw3qfZz1R/+
QP0PYfz/Iv8Qxv8o+t8Q9muHcTmEenzGWA1LJ8Oo5y7jYhj5dhn7I9LxCPbT
gHE+gvmeMPb2S0fkbD/WY8bYHZUOR9E/68Yp2XkH87WK/k9ukUuyGpNOyMUY
5vsb5H9XOibnZO+AdETODqDfZMg/Lh2SU7JzUDogtw5ife4gP1lNSCcTdn8i
P9k/JB0fsv0N+cleKB2Ftn6Rn+welg4P2/2P/GRnUjqYtP0Y+cklWR2x/QT5
yQXZf8/uN+Qn52TvqHREzsjulHRITsnO+/Y+g/zkFrkkq2npZNr2jy6Tn+wf
k47J+THbf42949IROTtuz29jd0Y6JKcztn8bOyekgxO2nxu3yCVZncT50WOc
kIuTGG8N+U9Jx6dsP0N+snfa9jPkJ2dkN5IOI6zPAvKTnTPSAblFLsnqA9vv
kJ9ckP1Z6XgW/eA68pO9D3Fefo385IzsnpUOtc9UA06Rn+zMSQdz9jxFfnI5
h3r9Afk/kk7IBdk/h/X/GfnJOdk7Lx2dt+c58pPdunRITuu4T9xD/nnpgNwi
l/P2voX8H0sn5ILsL0jHC7b/Ij/ZuyAdXbD9FPnJ7kXp8KLtT8hPdmLpILb3
wRdNfnJJVp+gnh8zTsgF2b9k3x+MY3JO9i5LR5dt/zPOyO4V6fCK/P+U7DSk
gwblJ5cNe35g/a9KJ1exn0qsP9lflI4XZT3ki/Z+gPW/Zt9PsP7X5H7MyO6S
dLhk789Y/yXcZz/F+i8jXwPrv4w851D/y7hPTKP+l7GfxpF/Beu7D/lX8Pvd
yL+CvD7yr2I825F/1d6vkX/Vzjfyr9H5v0b3nzV5n3LXpcN1+z6A83/dzg/O
/6btfzj/m3a+cP437fsIzn+ySuz84fxPsP/O4v6T2Pcd3H82pOMNjHdsh/of
m0EY7w==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd1T9oE2EYBvCjYxHMEBBBasSl4HLaxaVwuNTNtAguQYKio5641cEguAm5
wX+p/XNt2qZNa3qN1qZxOSoiiOIJQtcEwUWHO6Rugu+X7/nA7zkI5QdJ0+d9
n+/rqWu3p24MOY5zX17q5+B5nHkzNXmOn/MUi+RQ/O5wtFQd0k7FY+r5fXZg
74ntQHxTPT+0e2T3aeYd1P3x4QPtCjkRX+xP51sftAvPbPvie/nWRL+rHZNz
zzPv12Rn5OGGdpkciUvV/cPRWW2nZrsoVixVtUNyKh58roL8M7YD8R1JU/eR
n+y+yLxlFfc68pMTsYozfRn5Z2375HgW85lA/jnbZbGk/zl5HvnJzjzmcwb5
ySE5nce8TiD/gu1gAfM6ivxkN8S8HOQnJ+TCoumXq/OT40XM77t2bsl2mRwt
mb5pO3XbRXJYN/3TTsneMv7eWDsg98juCs7TvnaFnKzY7y+s2vbJMTnXyDzV
tvGPyN9AX74hf8Oeh7Nmu0gO19DfFPnFgzr/Rf51fN8w9k/urWOex7D/Jn7/
aey/iX2OYf9NzOMC9r+B/lxC/8Unpb6dq+i/WMXL30L/N/H5B+g/OdrE/VZD
/1/iflpF/8V/1Dp20H+x+rqR9+i/eEodoK/ofyvzBsetj/wtMy/kb5l5If9W
5n3+JM8RfZ9WyMmWOU/ahcicP22fHEfmPGvnts351y6To23s44q207ZdbJv7
CPd/G/u5i/uf7L0y9592QO6R3dfI+wj5yQm5sGP2hfzkmJx7Y/aJ/OSI7Oxi
XxHyk0Nyumv+3yB/x3ZA7nVMf5B/z3aFnOyh71+Qv2vbJ8ddc76R/63t8n/+
B8hKtrg=
          "]], LineBox[CompressedData["
1:eJxd1TFo1UAYB/DDURwyuLhoukjdgm8u3KaDQ9pNKBIVi5sn4lIRgiKCCMZR
BwnUWTI6hlbbals9tdpaW83TqvW9JRkqjn55+Zb//+ARfg+Su/99Xy5jF65M
XTpgjLktv/bajmihsc+P3hlO/jtpW6dkTw5fNLa7sze6OnIpXluVcahz8BKd
iB8/knGkc0E2i42dacfxzrG4142Rc3K9qPPbznYJnS3p/Gc6V+RoWec/2zkl
+2Vdz0zn8BXaif+OTz+Yv675xQv78sctzf8anYhP92cPP7ur+clmBR2Tc3K9
onnua/5VdEauxAc35tzEPc2/hk7Jnhy+aax0g7SE5ieX5OAtOhFPtA+8qfnJ
xqNjr/W+pvnJNdm+Q2fkSnxCyrV/WfO/R6dkL37qZEUXNf8HtCOX4mNt4HOa
fx2dkIt17DfzER2Tc3JNtp/QmbiNMz6t+cnRBjoVt+116rzmJ4ebaLeJ+1WS
g8+4/wm5IJstqj85J9db+D7YL+iMXImn2gPtoebfRqdkv631eqL5d9BuR+s/
p/nJwVd0Qi7I5hs6JufkmmwrdFbheity1EenZE8Ov+P+OHJJDn6gE3JBNrt4
3sTknFzv4vlqf6IzckWOfjX2hrRzf1bzkz05/I124qujhtT85GAPnezheVGQ
zR/dj0nNT87JNdkO0NkAv4fVQNcTaf4hOiX7ob7vYz37H1o19KQ=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
auvo/oPnN0z2nLeC7j94eptIN36JNfs/JKn4dw==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd1l9o3WQcxvGs/u/qlm5tbV23puvades23+1sulXPfO0cE2/MhiCCF1Fx
CF4YGd5MhCDsxhuzK1FEIhMRBiUgwhCEoMhgKEQQepsi7GaiOZln07lO3+R9
gvyec1M+hdJ83z+/nOlX3jz12oDjOOPrHKf+2Xx+7+mffqw/B3RN37g7uHIh
/NY6MX6r/kVqXRqvnh1ZPvGZtf5DOjY+dWnbuWvnrQvjc9dOmt9Yq7Knb8y/
9MF3b1tH5Nx4l2H/dWuvJx0af/yR+bxonRnXj9t91tqtpIMKPV3rlOxc7+nl
E6ZgH/rJifFUE4D+6+gbRv+f0rHx930TNIB+supLR3309/fbfrJ3o6dP15+r
1iE5M65rBles3ZvSwU2sxxXrlOz81dPvmO1b/cbaJyfGv9Xbd9G6JOu/sT6f
Wsfkgqxu9bSJM4XWETm/hfV5D/3/SIfkzLhTf86g/7Z0QE5vY/1Oo39N2icn
a+15Qz9Z35GO76DnOfST1b/SkfEzzQVCP9lzKuHQuHlujX6yu046MG72cxH9
ZGdA2icn5JKs76p0ffxPHkY/uSCruyu7Hx30k3Nje//Qf490SM7I7r3SATkl
O/dJ++SEXJL1/ZW9r4fQb2znC/rJ6oHKnt8l9JNzYzu/0D9Y2fv8AvqNm+Pw
MvrJ7vrK3s830L8e+3UW/WRnCP/vffQP4f99iH5yadxcjy/Q/yD6v0a/cTMu
f0A/WW2o7Lz8Gf0b8Pyr6Ddu3jcl+jdKhxuxnmvoN27eX0OY/26l6+k5P4n5
T06Nm/fJPOb/cHs+Mf/JyXB7/zD/jZvlex7zf1OlP6/H7auY/5twns9g/pPV
ZtzPCPPf2M4/vP8243k/wftvBPt5Ee8/cjaC572E/lE872X0j+J5f0H/KJ73
V/SPteuLfnIy1q43+sdwXgY7tv+hdn2tY3JBVuPS0Xh7n6zz8Xa+WHsT0uEE
ztNx62yivS/W7sPSATklO1ukfXKypd1/65KsJ6XjyfY+o5+stkpHW2VfTva2
YT8U+skZ2Z3C+VhAPzmdwv7PoN+T9smJsf3+g36ynsY8mEM/uZiW+6u2S0fb
5fPnZG+mfT+gn5zNyPVyd0gHO2j/yc4s7f9sO2/RTy5n2/uO/jnpeA7PH6Kf
rHZKRztxv95FP9mbb+cz+skZ2d2F+Xoe/eSU7Oxu5w36yclu9F1AP1kvSMcL
7XxCP1ntkY724Dwso5/s7ZUO92L/v0I/2d0nHZBTsvOItE9OyCVZK+mYXJDV
fumInJO9A9RPzshuRzroyPVOyc5BaZ+cHGzf9+gn60PSMbkgq0fleYnIOdl7
TP59SM7I7mG8379EPzklO0eon5yQyyNyffWidEwuFnHfU/Q/Lh2Rc7L3hHRI
zshuVzogp932+wL6j0r75IRcHsX3lwz9T0rH5IKstHREzsneU5hvV9BPzsju
knSwhPm9gn6yc0zaJyfHcL6uop+sn5aOyQVZHf/f/wEIFpZg
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd109oHUUcB/BV8NKLK1REkLhepOJlaxBECMxFWqtJX9JqrU3TTdqkqdV2
2jRtTBq7jaZp0z9vY9rmT5N0RRFBCHsRiqel3npxBaE3WS9eKrI8qYgnZ998
5/D77iV8Hry833dmfjOzLw2d7Bt+0vO8Z5/wvPpv/ai3W2rr5o7fJ/d2qtqJ
8eyj3nsdb1mXxv9s62/ef9063CUdG4/Uz8vWhfHqinmetw7eaaktD7/WXVus
tfFU/YP/vdZ2blz//Na/rP13W+rFuoDfrCPjvnsds49+sc6Mf3pcF2DtdaOe
H6wb3ajnW+uUXHWjvhVr1YP65q2THtQ3aV32oL4T1uFu1DdgHZOL3ai31zpo
4P+9aa3JOdnvdeOJ/OTMuD2czyF/nxtf5CenfW68t9v8ZLWnpf7srQu2Tsjl
Hjcf1uHelmreNxPws3VMLozbdeXWwXvSmpwbn+oyFWfW/vst9Y2uP7COyBnZ
24fxWLJukFPjnWb6NueQn6w+cPON/OSSHO7H+BxHfnJBDj506wP5yTnZP+DW
D/KTswOuP5G/X7pBTo3bX38D+cnqoHRyEPW/ivzkcEA6HkD9HchPDg5J60PI
8wzyk/0I9T+F/OSM7A2i/n9Dm5+cDrr1bF2R1ZB0MuTWu3VJDg9jv/zVOiYX
5OAI+vGBtSbnR1w/WPvD0hE5G3b7nbU3It0YQZ7vkZ9ckdXRlqrbYcdXyE8u
j7r9EvlHpWNyMYr9oIn8x6Q1OT/m+hH5P5KOyJlx3f16GvmPSzfIqXFn/Ywh
P1l97PoV+cklOfwE4zOI/OSCHJyQ1uSc7J+UjsgZ2dPYDw8jPzklVxrnyQjy
n5JOjF8xy+nxKPKTw9NyPGJycdqdl8g/Jq3J+ZicD/+MdHQG/TyB/GRv3O3P
yE9OydU4+mUc+c9KJ+TyLM3/OcpPLs7J8QwmpDU5n6D5/5Tmn5wZ97cbCPkn
pRvkdBLn4T7kJ6sp6WTK3QeRnxyel47Py+8X5GBaWk9jv9iP/GT/M3ceIj85
I3sXaP2TU3J1Qa5nFUsnMfU/ObxI808uLsr1G8xIa3I+I9en/7l0RM7I3he0
/5FTckVWszhPZ5GfXJLDS3L/jsnFJXf/Qv45aU3O5zCfG8h/WTq6jP1iE/nJ
3hWMx4/IT06vyPO2Iqt51PMQ+cnlPPr1D+S/ivn7G/nJxVWc1x7uP9ek9TWM
19O4/5D969LRdfTzC7j/kL0bWL/bcP8jp+TqBurtxP2vKZ00Ua/C/Y8cJtJx
gvHchfsfOViQ1guu35Gf7H8pHZEzsrco3ViU9++UXC268wP5b0on5PIm3jdn
kP+WdEwubuE+u4D8t6U1Ob+N+VxD/iXpaMm9vyI/2VuWbiy7/kB+crXs7n/I
vyKdkEtyuCodr2J9fYf85OCOfF/T5PwO5V+j/Gtuf0H+NTne3rp0g5yuy/ms
1t1+j/wb0smGXE/lhly/4V3p+C72067t6n9BZdHR
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd119o3lQYBvDoZa9yUfCuZggy8SYiggiFgyAVEUx3I8KQKCiCF0ZEkIoQ
hCKI0E8YiCIS7Tbnn32L62o759as3dyc3Zp1nd2fbqarzm3tNKbrOu88X/ME
eZ7cjN/oljznPe97Tje9+NqWl+52HOeeuxyn82fnCb6ozPaot2t+yTcdJ9bd
7b7FgbnapdgMV2ZqbfPWocnaLXFh/br974bT2v52dmx97+By//hntXOxt6My
W8Z7Bpc/rB2Jsx1437u13Z3s0Pp253PerJ2KnS8r8/LGUzsQJ9affGyf55Bf
bHZVxqaJep9CfnFh3bvxF8j/FTu2fnjjQX6x9zXWy0d+cSZ2v2GH4lTsfFuZ
tzsFfQz5rTvL3/ME8otLsdldmaFJu+DPIL91J13Xs8i/G/V8HvnblXnALv/a
K8jfRt43kF/s7anq74yR3/rJxYHu9nvIv4f3g5vy/glT7Odh5Bc73+F7diG/
dWd7d7eRX1yKzV587wjy7+X9XYj9Edn/4nyEv8fbx46sO2/v+xz596EftyH/
KDsc5fVKxc73leksX/9byG+9Yss7+Cryi0vrrRsFR/4xdmuM90MxhvoZ5B9n
x+Oy/8Xefrz/QeTfj/rdh/xi9wfUvwf5xanYOcAOxIm4PID134T8P/L7W+JC
7B/k/osPYv0fRX6xdwjz7HHkP8Trm4ndCZ5P4QT3WzrB9XYynpeBOMkwz95H
frE5jH7/CPkPc/8VYn+S928szie5P70pdjQl+1/sHsH83on84vQI/7xzlB0c
5TyJuBSbn7ifWuJC7B9jx8f4PMrF3nF2dJzrmYndn7kfQ3FqfXLaPk8j/wl2
IE5O8PlQis0v7Ja4EPvTqMf9yC/Op7nfvJPsSJyJ3VPS/6e4/1KxM8MOxIm4
nOH+NTnq8wjyi4tczv/TqH8f8ovz0zjP+pF/lh3N8nmazfJ8ds+wwzPc76nY
mcN5Poj8c6j/B8gvLuf4vDVn2a2z2G+fIr/Y/5XnQSzOxd48OxJn89L/59jh
OX5/KnbOY34OIb84EZfnZf5dYLcu8HoVYv8iO77I/z4Xewtcn0icLfDPu5fY
oTi9xPVyLrMDcXKZ16sUm9/4ftISF2K/QH+MIr84F3uL/PtEJM4WUZ8Z5L/C
DsXpFXz/AvIvsQNxsoT5dBX5xeZ33FdWkV9ciP0/cP9xHqrzi3OxdxX166od
iTOx+yfuf921Q3Eqdq4187J2IE7E5TXUc3Ntc53dut7Mv9qF2L/Bjm8090Hk
F3vL7Gi5mZfIL3ZX2OFKMz+RX+zcZAc3m/sT8otLsfkL8+YF5BcXYv/v5rxG
fnEu9kqcNxHyizOx+09zX0B+cSp2KpzPA8gvTsRl1dwPkX+V3RIXq819B/lv
sWNxfquZj8i/xo7E2Voz35D/NjsUp2JnnR2s8/ck4nJd8t+R/OLiDs7/d5D/
3//9H6DXS2E=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
Y6QfQvvBG3xnRLkup/3gaBPriNVLTcl/pAnlyA==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd111o3lQcx/Gsbk67rc20s3uzS9fp2nXt0ta92K3zuK1rV+uapxuIUCQq
ilcaLwSpCEEoggh7BEH0QiITbwYlN8IQhDCRgWyQi8FuvEgRRJhIWJgX4tST
nN9B/r/clE/XPMk3z3nJ+l95a/G1Dsdxdq1znPpnc/x9Vy1dunZvcPeYqhmQ
E+2aS93GpbY50Vjdl25rvz3Vefty6TcutL+O9C9+Mfb/uat6VmfWlm8Zx+Rc
e3ZtuWf1urH3r3Sk/V59wnfGmfbvrat9K1eMXadSe1butK5+aRySU+1F/ed3
PjF21kkH5ES7Pr1vxbjUrv+59a6x6pBuazf9EfrJ/gPSsfbrzYF+srdeOlqP
npfQT3Y3SIfaX3yujxfRT3YelA60m+/jIvrJJVltrNTNG/qYRz+5IPsPVaqu
n5pDPzknew9LR+SM7HbK64XktFPev7NJPq+AnGySz78kq82Vqj+u5030azfj
cxn9m3H9j9G/RTom51vkePW6pKMuXG8V/V2VmA9ut3TYjefzE/q1a3beRr+L
nl/Rrz1RHxX6yaX2D3o5uNSB+b+1EutDm1xsxf33GfuPSMfazfwdNs7J3qPo
mTSOyJl2sz7MGLs90mEPel8wTsnONulAu1mvXsX6Ry632fmL/sek2+RCu+H7
6O+Vjsl5rx0P6N8uHW3H/X6GfrK7QzrUbh7HV+gnOzulg514/lfQTy7Jalel
/tTD4dq36CcXZH93Za6boZ+ck73H7fhFPzkju32Y37fQT07Jzp7K7Hc/o5+c
kEvtofoXv6Hfk26TC8/OH/T3S8fkvB/j4T7690pH5Gwv9qcN46Z/QDokpwN2
fho7+6SDfdgPdhgn5JKsnsD8GDBukwuy/yTWr1HjmJyTvf12vhtH5Gw/+qbR
PygdktNB7O8t9A9JB0OYDy+jn1wO2fmN/gPSbXJxwL4/oH9YOh7GePwU/WTv
INbnb9BPzg7a+YX+EelwBNf7Ef0jdv1H/6h0MGr3A/SP4vPuoZ+sDtnxNWH6
ycUhfH6vse/b8WAck3Mfz8839sawHijjiJyN2f3f2B2XDsft+m6ckp0Ju74b
BxP2+zNOyCVZPWX3e/STC7J/2H7/6Cfnh+16j/4j0hE5O2LfV9F/VDokp0fl
+c4x6YCcHMN++iH6yeppvA98gH5yQfYn7X6HfnI+ifH1DvqPS0fH5fPPyO4J
6fCEfV9DP9mZsvMb/eSEXE5hP1hC/0np9kn7fol+sv8M1tsF9JNzsqfk+RE5
I7vPyvsJySnZOUX95IRcnpLPT52WbpOL09gP30D/GemYnJ+R53vT0hE5m5bz
1z0rHZLTs/b/O+ifkQ5m7H6AfnJJVrP2fRP95GLW7lfoPycdk/Nzdv9D/5x0
NIfvox/9ZPc5ud6G5JTszON+N6KfnMzj/v7C+k9Wz+P+/sD+Ry7I/nnc7xr2
P3J+3r6fYf9bkI7I2QLu9zr2v0A6JKcB1pvvsf+1pIMW1o8U+x+5JKtFjK/L
6CcXi/Z9HP0XpGNyfgH710fov/i//wMKsMMc
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
3X/g8HbfQ6bu7P6r+LxfTjZecppL/gXbrUv+
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[{{79210., 18.21}, {79215., 18.15}, {79220., 18.09}, {79225., 
          18.09}, {79230., 18.04}, {79235., 17.98}, {79240., 17.98}, {79245., 
          17.92}, {79250., 17.87}, {79255., 17.81}, {79260., 17.81}, {79265., 
          17.76}, {79270., 17.7}, {79275., 17.7}, {79280., 17.64}, {79285., 
          17.64}, {79290., 17.58}, {79295., 17.58}}], LineBox[CompressedData["

1:eJxd1jto1lAYBuBQEKEI/kLBRTTiUrdocSycrQ4OaReXDr+KIjgYB0Hqpana
i7X1/6u92KupvV8sARcRhKCDIIoZhC4OKY6KBILiInhOvzfgeQ+U8ISWnvc7
ly9Hz1/tuNjgOE6kf8zTDPdWoZq22na6Rj1lHGgvBq2N2wviRLvFjJfiyu1i
9+kk4qp27e2v5s7P4pjs3ClUp3nxVexr/2h/dbj3uzjSNmr/I861T+90NW3t
PbFr1V2o7QU9oYPiOjnrxnyPib0Q820Rh+Q0xPyV2O0p1KePepwRB+SkB/Pv
FFfuFuq4eXFZXCXH2r+b9YvrYueebV9bp9WRxRE51+4wBRlB/vuFOmJ+YQ75
yZm2Wb6mLeTvtR1q3zQL/Br5e1Hf98jfZzvoQ323kb8P9f2G/P22q/2ob4H8
/aivc1KeA7b9AeyP/eKInA+g3ofE6gHq2yyuP0A9T4kzsjdYrq84JKeD5fqK
3YfIe1YckBNyZahQplxt58RVcjyE/X0F+Ydt+8PY7zeQn5yT1SPbdXJG9mrl
fkJ+ckp266jHEPKTE3JlpFBTk2YgPzkmO48LdcmMZeQnR+Rc+5q5fmLkf2K7
Ts60DYM3yD9qOySn2oatH5B/zHZATsbK84D847ar41j/HeQnOxO2/Qmcz5/I
T87J6ml5PyI/OSN7k4V6p49TraFF8pNTsjuFvI3igJyQK9PleRVXyfE07q8D
YmfGtk+OZuy/z8lq1nZ9Fvtxnzgje3PY33uQn5yS3WfYH3+x/uSEXIns9amS
Y7Izb9ufR7/9gvUn52T1vLy/sf7kjOwt2OcpJKdkd9F2sGjfDwm5soT7/wLy
k+Ml+351lm375IicL+N8e8i/YveDOjlbKfcn8q/aDsnpqt2v3LXy+wT9j5ys
lfcB+t+67So5Xi+/j9D/N2z7G+X3FPo/Od/AfTGP/r9pu76J81BD/yd7L/D/
QvR/cvqf/wELenkx
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
pn6w/PbU5wHzqR88+XPkqPuzLNj/AKZSkNw=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd111o3lQcx/Gz+jLojREK4pCZ3YjiTVQEEQoHb+qFF+nwskgUFEHQiHij
CEEYAxGWC0EUkcC8EIQSnZ11vjRrN+e029I513arW9pubrN1S/c87VxdN09y
fgf8/3IzPh3keb4nOS/Pthde2/5ij1Jqyyalmn/bK+/o0a07lgafeEQ3DMmZ
8fKg+cvD1jVZf9nRQ7vGVx+8zzolV8YNh+6yDr7qaPvB1gm5NH6suTpBa3+P
dGz8WdzfO71oXZC9r/F5x6wjck5WI9LhCPpHrTNyPYL+L6z1Xul0L/o/sa7I
wTf4vF3WCbkk+6MYnwT95ML4dZO/O0b/t9KR8UPNF3gZ/WS1TzokZ+Ta+KX2
Qv930im5Igffy/sl5JLs/9DRwwPzb/W9in7jt/uav6Cf7P3Y0RPN8L2LfnJu
fGTSXO+jf0w6HJPPKyPXY/h+n6O/kE7JlfGa+fjxEfTvx/cZRz+53C/fR39c
Ojb++CNzzaKf7E1IRxNyfuRkdUA6PIDxvox+ck3WB9G3in5yRQ5+wvNaRz+5
JPuHMD49dn2IyQXZ+7mjnzZfb3izdUTOyeqwdEjODsv1qybrX6RTcmXcvp59
WP9+lU7IJdmflI7JhbGZ7P2996D/iHREzsnqqHRIzo7K9bwm62O0/pMr42Y4
B7ahv5ROyCXZn5KOp7CePIB+sndcOjqO9TBAP1n9Jh2SM3JN1iekU3JFDn7H
+/0k+skl2T8pHZ/E+zmAfrI3LR2Rc7KakQ5n8H49i35yPYPn8Tz6Z6XTWbd+
o58cnJJOTmF/fwP9ZP+0W9/RTy5Ou/0Q/XPSETmfQ+9O9P8hHZIzck3WZ6RT
42b37X8P/eTgrHRy1u0/6Cf7lXRMLsjevHQ0784T6CerBelwAfP/Q/ST6wW3
H6J/UTolV4vYX3aj/5x0cg77yTD6yf556fi820/RT/b+xPMu0E/OyepCRzen
u60H0U/OLmA8J9FP1hcxP06gn1yRg0tuf0Y/uST7f2H8p9FPLsjeknREzo23
NwfaKfQvS4fkjFwvyx79N/WTK3JwGe/HHPrJJdm/gvXiIvqvuPME+sle7X5P
PGr7yTlZrWA+9lqHKxj/e60zcr3ifv9Y66sd3R63+61TcnUV78sz1kEHfUPW
Cbns4P6vWPtd3O8d67jr5rd10XXzzdpblY5W3XkU/WS15uYP+tfc+49+cr3m
zqPovyadXnPzA/30/8E/0gm5JPvX5f3i61hvD6Gf7K278zT617Ff7EM/Wf2L
/TlHPzkzvr8ZgE/RT9Y3pNMbbn1HPznYcPsX+jfc7xv0b+B+z6H/pnR8E/Nx
EP1k7xb6n0L/LTzfx9FPVqqL8xL6jdv73Y1+ck3Wm7o4r2P+kyvj9n1ewvzv
kU6M274zmP9k/7Yu3gfMf3Jh3GZgPfdul46M2/PEHqx/ZHVHV+xHITkj18bt
4/sA69+d0qlxO192oJ8cbO7a8X8T/eTyf/4PsNRqjQ==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
642kfrC3TX5ttpYt+z9n5/Il
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd1k9oHVUUBvCr4CZWO9XYNDYmE2vjq7bpbWq0f/LS29Q0/Z95aWpt+9pO
BUVw4Yi7iDAIQXDTEQTRhQwIIghlNkI2wlARQRSnIBRBZLoRISKzeBURBO+8
+w14vtk8fuG9yXz3nHvujL/0+tLL9yqlhu9Rqv7sXwM9c2Phzsrg5B5TMyCn
1t3rN++2Rpwrsrm/Z3743l4bnBNyaf3WoL3jP7pvvUE6tt5R3/B354LsP9Az
H39kr5+dI3JuPXD706j9nbP3oHRo3a7/8JVzRlYbpYONyH/DOSVX1mOr6521
T5yNJ51YL62Nrq6/71yS9Sbp2Lr++egq8pP9h6Qjck72Hkaet5GfnJHVoHRA
TsmV9dd3W93r7yD/I9KJ9bF6ud5FfrLe3DN1+Vc+QH5ysVmupz8kHQ2hPz5H
frK3pWfq5e2sIT8524L1+gb5h6WDYTzPT8hvXT/+wh3kJ5tH0R9/Ij+5JOut
1P/kYiv6d8DtH39EOhpB/2xyzsneY9Khdf/nQ84ZWY1iPw1j/5NTckU2Y9LJ
mLx/Sda+dOzLeVGQ/XHpaBz1ug/5yd7jqPffqD85I6ttPfNHvX3WUX9ySq62
Yf79gvo/IZ1Y1+z+iPqT9XbpeLvsv4LsT0hHE7Kfc7L3JPW/9Rv1Bs6Qn6xa
0gE5bSH/F8hPNjukE3Jp/Up9fYb8T0nH5ILsPy33d0TOyd5O6XAn5SerXZR/
l1y/lFyRzaR0Qi4n5fmid0vH5GI35uW3yK+lIy37Jyd7e6RDckZWU9iPt5Gf
nJKrKczjX5F/r3RCLsn6GdT3N+QnF2R/WjqalvM0J3vPSofWf7XqhkB+snpO
OiCn1v3vKcw/stlH7z/kcp+cj3q/dLwf+SYw/8j+ATzPNOYfOT+A83cO8+8g
6ruI+U/ODmJedTH/Z6SDGezf1zD/ydUMzqsV5G/jfHoP+cllG/3zIfLPSsez
zX5H/lnk+xL5D0lHh5D3JvKTPYPz7xbym+a8Rn6yOoz9XyE/OT2M/fkv8pPN
XFPvKZefXM4178vO+oh0fATzquVckP3ne2Zv/3KOyDnZm0d/GueQnM3j+U45
q6PSwVHU57xzSq7IZgHreQ35ySVZH2v6CfnJBdk/jnxvIj85J3snmv5EfnJG
ViexPjHyk1NydbJ530X+U9IJuSTr09IxuTgt/59/Rjoi52dkHm+R8pOzRfR3
hPyBdEBOA/Tjq8hPNh3ppEP1J+sl6XgJ8/AC8pP9s9LRWbyfLyM/2VuWDpdl
f2dkdY76/xzO2wXkJ1dk80Izf5GfXJL1ecyPNvKTC7L/onREzsneBemQnJHV
RTkfAnJKri7ifXQe+S9JJ+TyEs6DE8jflY7JRRfzu4P8l6Ujcn6Z6n+F6k/O
rjTnIfJflQ6uyn5IyRXZhPL5E3JJ1tdkP8T/83+BwMjj
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw113k81dkfx/ErS2HKbTdTckumKSmjhRSdFiNRSWmTSYVIIhUV1RWmpGyV
JdRtEUnGMrQgMjJKIRqRRBnRoqFOP2Pq1+P3njmfn388ng8eeH3P93zOMXaT
t71rP4lEIlOSSP75/O+HC2dPQoZF7lOfwv6hHfy55/x9WyVhBTxmw/caun2G
/7obTnO54yftEWau+P6Tzmq6r4SjYJsvLzPsnwu3wlZ1musvNwobuXE2Qu+9
qn6tsByeXZuUWHlPuAY+Zmf9VfKvwrItnC1MmG2VUCjsAxc+smMRecIlcGTq
1L/3ZwpL3TkbPKS/961UYWe4cp7T4V6FcBbcPnzIDxNPC0s8OJuyVCVzxQlh
O/hY+OBSv2PCCtjLbkRoTCj1wzOV3vVdOkD9WzmLUHUan+5P/fCMGj3NJB/q
h78YSfICPajfk7P8Jtl39puoHy7tveY+xpH6YVlp+L6WFdS/jbPwdVWbg2yp
H3a5HGCkZkn9sM552VtPc+r34oxbe17ImEH98CWlGpcKQ+qH/xtSZFGsT/3b
OVPrSpobrUP9sGXOw90Ww6kffpl548/yr6gfXr3W9aapCvV7cyad2PIs+tNk
0Q8Xrox3e/ReuBXOrmpYq/Za2MiHM98vXxdPeC4sh5eX1SaZNgjXwNv2+feZ
VgvLdnCW+nFv03flwj7wlZ+srQcUCZfAZfLyRc25wlJfznzuPmq+nC7sDK/Y
91Zz2znhLFhPd1O9QbywZCdnOc4rLDoihO1g82IrS0WosAK2cuh8uzRQuBte
Zjh01kdfYbaLswVHzAyjPagffunu/mCcM/XDjVv9dDJWUf9ufH1jrcxgCfXD
b+LKn6QuoH643d/NVmZG/X6czVk01T/WiPphmUJlvcYE6odZ9F+f9upQvz9n
c9UPr+kYSv3wQKsYX3sN6ocVKgY2NyTUv4czj4bKNp1eA9EPp6c7mMu7hBXw
9JbHa561CXfDv+dXmpg9EWZ7OevVyX0SVyMcBSclNLPecuFWOPPDaY81RcJG
+zjrNJu9siBXWA6PiDWXjEkXroGXpIR7HVIIywI4Cz10855KprAPfD+iqW5/
gXAJ/GzQ1YiuCmFpIGfyfZafltcLO8O74yp00unvz4KLDiZIeruFJfs529u/
LtXkC/XDx9dX63hp0vrDjhG+HnHatP7wMtt7EXn6tP4HOMtI1YuvMKb1hz32
BodVz6X1h8uUpnhV2tL6H8Q88O6xLlxL6w/nl8Z9e96N1h8+dO+l+v6dtP5y
zs5qVPXayGn94fx9gX9rHaf1h8MHXdG+m0DrH4TeXXNW+V2i9Yd1HtsXadP+
yIJfpVmsyymm9T+E/WTtYbzgPr3/8MIyU5tK2o8KOLtGK31xO/XDM38JWF7S
Q/3BWO9+ixcbfqF+2FG/LiFag+Yf7DF7m2XXCJp/IZgvo7bYMz2af/C1MP28
kKk0/+CUgUF7C2bT/AvlLEpJI6XNiuYfvDlB1VZpJc0/uNNnlO9QZ5p/P3GW
UGY8dtQ2mn/wjL7CDdp7aP7Bo9c5fK8RQvPvMOblk/qzPZE0/+BZZy9lVyXS
/INjrq/YqqDzpBve1ZlRtyWX5t8RPL8Jmnx8Mc1/+KpLT1U9nWetsInluO0H
6qk/jDP7GdPadF9QP2xW++f3BV3UD/+1aeyPdnTeyo5y9rAxwrNFRZzHPvD1
3z87uUuFS+DGIMeZr0cJS8MxL1Y9/eQ6QdgZXn5mTk6TsXAW/O0aEycbC2HJ
Mfz8GaGSPGs6/+GmM0/PajvQ+Q8rm7/W9XQW7ob7hmxPzfcUZsc5W/kxxPyz
n3AU3O6n2mZ2SLgVnuM6I8n3uLBRBN6PQZN8LsYLy+FxwTkbqi8I18APhg70
/pApLIvk7PIpq5TBN6kf3pMyUXniHeqHe/ReH5tVQ/1RnG0PiLRe2ET9sP2L
xlmLXlI/LH/810bLHuqP5kzT/U3FnM/UD8fv2Opt2H+q6IfrxpxZO3KIcDf8
teGBiE+jhVkMnv+UwkGNE4Sj4AED9j772Vi4Ff5tWopKkLmw0Qmc92pvgmwW
CcvhMwYu67RWCNfAis6+kw+chGUncT5vWmYc6i7sA/uP8J85c6dwCXx+/Iq0
5/uFpafw/h8/eOSnI8LO8Kzs/k3jTwhnwZUnyi8VJQtLYjlbJ1v+dlmasB3c
0tta2Z5D/fBtb4sFB4uoH35lNs1udAX1x2E/Kw/rvFFL/bCm7o3+q5upH96e
b5HDO6g/Hs/vttrTiPfUD6sGaB799r/UD/uNDHJqVjYS/QmcSdYeua6vLuwD
uz6Kbdg2SLgEdndRNc8ZKiw9zdlzr7C3vdrCznB6Srir+RjhLLjoSuzEYD1h
SSJn3eoNxr99J2wHO2+/q6wxRVgBp0lLR9lME+6Gb3o/DDhqKsySsL92eV+q
MBeOgouje75RXSDcCiux24/MFwkbJXPWYTWp3neJsBx2HuA/9qK9cA3s4N99
/eFq6j/DWeLg3Tqf1lM/vKVAuU62ifrhW8rPm+Zvof6zmHfD7Mw2bqN++EF2
THfADuqHWybLD8b4Ub8C83We1DMlgPphm8Ujp/8ip3540hdZ861Q6of7Tshe
3zlK/ecwH9vamyoiqR8+Uf3a8M5J6oczd2S4FiRQ/3ncv2KCVa+coX44MF1v
ZOwF6oeTMnpGBaZR/wU8v7O+8U5XqR/e2OoTaZZD/XCWmu2hIdeo/yJnd4uD
P7YXUD/cp/+DV14J9cNz3nt7Bd2h/hS8b8du+lnfo3645m5s+MBq6odztZqn
VtVRPzxy9/w/jjZQ/yXch6KTJi9spn5YqVRN8+/n1A8nDU8MynhJ/an4+5f7
xji+oX74wjOzW2rd1A9nXvn1SCan/jScJ/xz2JJ31A8b1/9nwLsO6odTLEar
RtHvk17m7OKqhv3TmqgffiOP9W14RP2wxbrSFweqqD8dv39Z1oMJFdQPX+w6
aFx7m/rhxJRk6QF6nt1w0Di/LQZ51H+Fs/pFfjOfZFI/3Hz/Q2A4rV8r/DRI
y8ziPPVncLZV18TrfSL1w+axDcPTTlE/7NsWNc2J3ifZVc4eZ14tl4ZRP7w5
Jbv610PUDzfm1i71C6T+TNyXRv24cAK9387wVr36rMfe1A+bdK45ecSD+n/m
zC1E8c5sM/XD+hrGxV203xRw9aIW1XOrqB/Wvr6p1MGO+rOwf3+bxzUWUz88
8MLSxJL/73+4UHfhNX+aD0bZ2G/qaVZTTagfjnxla9thRP3ww+6uMsUk6s/B
+2g1OHvdeOqHd5ufkw6jeVYCf9J921Y5kvpzOTs8f7dB8GDqh++a7OyYpUn9
cO3Ladp/qlD/L/h+/12BVjR/7eDOsj25P3fT/IdD8rXqh/1B8x8OW23Rvucx
zf88vA8b5j1vvkfzHw6XH79reYvmPzx9vWFyZjbN/3zOpg6646idQvMfzul3
TyU0nuY//PUpq7j34XT+XeMs+fSLIRsP0vkH55gO9q/1pfMPTg9uKV3oRuff
dc481T98vLaWzj+4KrVUa8oSOv/g+QaOWimMzr8b+P9JXsK1p1M/POBDX0k4
necK2D3K2u/VN9QPu5y/8c3iQdR/k7PxTeOvXlWifnjNBrfJwz7S/QfWLF8b
t7+T7j8F2C9v1Ls66H4ih/utfDvZoZruP/Cp5GaHO6V0/ynkzKnxpptpPt1/
4LKwjT9mXqb7D7zBeuAcvWS6/xThftPfUXIqiu4/8MSi5RmqIXT/gU3da+cG
+E9h/wNSAlgI
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd112IFlUcx/GTEMESNMJCeGMj3dhNTHm9cO6MrkYJJFhiqDTL3J1V1+zx
bdxc0231mfVtXV1t8i11dZvK1dUIBiO8MZquJIiYpRvBiIEeJYSgM8/5Hej/
m5vls7DLfOc55z/nWfb24Oq1i5RSS55SqvnZXOG7Hf3aQqt39plXdeOMXBtv
751dufDkla71WunU+M9V80tHH1pX5GBdR/e37zxa/pt1Qi6NG/b/bO2/Jx0b
N/9t1bx1QfbWS0fk3Ph83Ndz/5y1el86NG5yWketM3Jt3Py3paPo/0A6NX68
3BQNo9/4pSZwPfo3SCfGJ6fM9Sb6yf6HHW1uLu57Hf3kwriv+wv0b+zo5nZ7
X0Y/OTd+oXvD6B+QDgfwvJ9DP7k2/sGwvQj9gx29orn+Dmw/uRrE8/3DOoil
E+Pm7nvuW5dkfwjr7651POQ+T+uC7G3Cepuxjsj5Jqy3aWu1WTrcjN62dUau
yXoLnscI+snVFrce0D8snQzj/jagn+xvlY634vm9g36y9xF6+tFPzslqm1tv
6Cdn5Hob9sMb6P9YOiVX5KAlnZDLFj7/NejfLh2TC7K3Qzoi5zuof6d0uBP7
4S30k2uy3tXR67oX+snVLuy/AfTvlk7I5W65PvxEOiYXiVxv3h7paI9crzlZ
jeDznUI/ORvBvLqEfrL+BPczh35yRQ724v7uoJ9c7nXzHv2j0vGoe1+gn+zt
k4724X4foJ+sPpXzKiRn5Nq4+3cK82+/dEqujH+6Z65nMf8PSCcHsD6fx/wn
+2PS8Rj2+4uY/2TvM+nIeKh5QQSY/2Q1Lh2Oy/dJRq7H5ftHH5ROydVBt//Q
f0g6IZeH3DxDf1s6Jhdtt3/Qn0pHKc4nLfST1YR0OOH2D/rJNVkfRu8Y+skV
OTjS0aubF9YE+skl2T+K5zOJfnJB9o5hPp1BPzk/Ruef43T+IWfH3fsT/WQ9
KZ1OYj3l6CcHJ6STE3j+t9FP9qdwvvoR/eRiCs/rF/SflI7IuXFznFi5gP5T
0uEprJ+/0E+uyXqazr/kalqen4PT0slpd76yLsn+GemYXJC9z/E+7bWOyDlZ
ZZj3S6xDckauyfoL6ZRckYOz0slZN9/QT/bPScfkguydp35yTlYXpENydgHr
ZzH6yfqidEquLsrPJ/hSOiGXZP8S5kcP+skF2bssHZHzy3L9qSvSITm7gv32
NPrJekY6nXHfD9BPDq5KJ1fd+xL9ZP+adHwN76N/sf/J3qx0NCv3Y05WX0mH
5Ixck3WO7x//YP+TK3LwNc5DjzD/yCXZ/wbzssb8Ixdk71s5nyJyTlbX3XkI
/eSMXF9339/QPyedkqs5vH9+R/8N6YRc3sB8+BX9N6VjcnGT5v88zX9yPu++
T6L/lnR4C+vne/STa7K+7c636CdX5OA7d35GP7n8n/8DErktHw==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd101oHkUYB/BptH7EardtQASpW7wogl3xUoTAXKQeBNdevARZFIsg6IoI
UinspTche/BiEVnQmxD22JNOU9tUm7Sbtjbp96axsR+pnbb7Vm1t6+zOfyHP
fy4vv5Bk5z/zPLPzbnrvk20fDCml1q9Sqv1sR/FTo8cnBy+MvfWKbm3J+uem
+1TaOyfXzhNbF3aMvOwdGenM+bldV9/es9G7Iod78by13ule/H/lbcjBZKM/
HR2e+95GnRPnH1L3g0Xvkqz2NXqkndBx75hcOL/hpjsx5W2d92xsJ+itf5HO
nZfd7Hf96F2To/2NHmsDfeudkSvnmWk3vvIODyBf5p2SzQHkTb2DKemEXE4h
//vIf1A6dna/PDr8DvKT7UGsx1bk/1U6d/6yXcDXkJ8c/Yb1eAn5yRU5PNTX
A/KTzaG+PpB/Wjpx3uc4PoT8ZDUjHTtvb8fSZp+fbGewP9Pe+rB0fhj1PeFd
k6MjqK+vvTNydQTrtcM7rKRTsqlQP2Pewax0Mtvvj3dJVkelY+dXu4H8ZHsU
9fI88h+Tzsn1sb7fkf+4dEauyOHv8vkp2Th35T2K/CekkxPYnzeRn6zmsL/b
kZ9czMn1tnOor3Hkn5fO52n/5/vzA/lPSmcnZX1V5PBUf76h/k/J+jbk4DT2
/1nUP7k8LftLncH5tQX1Ty6cu3Z7Hf1P1mcbva37A/Q/uT7b1yP6/5x0dq5f
b/Q/OTwvnZ6X55khBzXm/wXyk0uyWuj3F/nJxYI8by1ZX5DOL6D+diI/OVqU
zhbl8ypy+Id06nzbVdvk58hPDi5KJxfRL58hP1ktScdLcj0LsiXrP1HvHyM/
uSZHlxr9YlsAHyI/uSKHl+X7KSUbcnAF74d3kZ9cktVVWY8xuSBbsl6Wzpfl
fGpydE06I1fX0J8fIf9f0inZkIPrcj8Tcnld1quy0rHtzzPkJ1uL9fsO+W9I
5+T6Bt1/bsr7UkaubuJ82Y/8t3CezCI/2ZCDBvtxBvkb1NMl5CerAdbnFvKT
iwH69R7yk/VtzHc17r/kmhz9jffPGtx/yRU5/Ifuv2RDDv7FeqzzTsglWd3B
/WPEOyYXZEvWd6Vzcn0X98enkf8/6YxckcN70inZOO/+xo1nkP++dEIu7/fv
Q+R/IB2Tiwfy+4glazUQzp2769Qm5CdHq6QzZ39fQn5yOCSdkg05eEg6IZdk
9bCcT0wuyJasVw/EeuXkmhw9Ip05i/0nh49Kp2RDDh4biH5IyCVZPT7Q3XVx
GPnJBdk6r+xnPSydk2vn7jn4fho9IZ2RK+eV50u4RjolG3LwpHRCLp27+8Qd
nH9PScfkgmzJeq10Tq7JUSCdkStyuE46JRtysF46IZdktYHyb5D7UZDtCv8P
aMvaxw==
          "]]}}, {{}, {}}},
      AspectRatio->0.1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{55530.10416666667, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->1000,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"PK\"", TraditionalForm],
      PlotRange->{{55530.10416666667, 86395.}, {0, 20.15}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Prolog->{
        GrayLevel[0], 
        Thickness[Tiny], 
        Dashing[{0, Small}], {
         LineBox[{{56160, -50}, {56160, 50}}], 
         LineBox[{{57600, -50}, {57600, 50}}], 
         LineBox[{{59040, -50}, {59040, 50}}], 
         LineBox[{{60480, -50}, {60480, 50}}], 
         LineBox[{{61920, -50}, {61920, 50}}], 
         LineBox[{{63360, -50}, {63360, 50}}], 
         LineBox[{{64800, -50}, {64800, 50}}], 
         LineBox[{{66240, -50}, {66240, 50}}], 
         LineBox[{{67680, -50}, {67680, 50}}], 
         LineBox[{{69120, -50}, {69120, 50}}], 
         LineBox[{{70560, -50}, {70560, 50}}], 
         LineBox[{{72000, -50}, {72000, 50}}], 
         LineBox[{{73440, -50}, {73440, 50}}], 
         LineBox[{{74880, -50}, {74880, 50}}], 
         LineBox[{{76320, -50}, {76320, 50}}], 
         LineBox[{{77760, -50}, {77760, 50}}], 
         LineBox[{{79200, -50}, {79200, 50}}], 
         LineBox[{{80640, -50}, {80640, 50}}], 
         LineBox[{{82080, -50}, {82080, 50}}], 
         LineBox[{{83520, -50}, {83520, 50}}], 
         LineBox[{{84960, -50}, {84960, 50}}]}},
      Ticks->{{{56880, 
          FormBox[
           RotationBox[
           "\"Dec\\n31\\nSun\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {59760, 
          FormBox[
           RotationBox[
           "\"Jan\\n2\\nTue\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {62640, 
          FormBox[
           RotationBox[
           "\"Jan\\n4\\nThu\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {65520, 
          FormBox[
           RotationBox[
           "\"Jan\\n6\\nSat\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {68400, 
          FormBox[
           RotationBox[
           "\"Jan\\n8\\nMon\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {71280, 
          FormBox[
           RotationBox[
           "\"Jan\\n10\\nWed\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {74160, 
          FormBox[
           RotationBox[
           "\"Jan\\n12\\nFri\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {77040, 
          FormBox[
           RotationBox[
           "\"Jan\\n14\\nSun\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {79920, 
          FormBox[
           RotationBox[
           "\"Jan\\n16\\nTue\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {82800, 
          FormBox[
           RotationBox[
           "\"Jan\\n18\\nThu\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {85680, 
          FormBox[
           RotationBox[
           "\"Jan\\n20\\nSat\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
7meBSj36H2wCNro=
          "]]}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
fwFAKQ/y
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
h5HoPG4n21evndFeUbx+Zf26d+P+Hy5kDSg=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
4LsM28Khrh0MyffA5zdvGXnI2Bz+A/gvNdE=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[{{60530., 11.27}, {60535., 11.27}, {60540., 11.27}, {60545., 
          11.27}, {60550., 11.27}, {60555., 11.62}, {60560., 11.62}, {60565., 
          11.62}, {60570., 11.62}, {60575., 11.62}}], LineBox[CompressedData["

1:eJxTTMoPSmViYGAQBmIQDQINqu8cDn/ViOk/pOUA4iuoofIPoPET1FH5DBqo
/AVA/jcQt1QbzHfQROU/QOM3aKHyFbRR+QeA/CUFtlzXlXUg9uug8hl0UfkL
0PgOeqj8B0A+0PSvGncg/AZ9VL6CASr/ABIfAN8pZ+0=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
GXqkNH4/Af4Rvl7uz7y0TeBzF/od1DU0g3+Uv2+aXu+JlvC5dbJGaBhawz8m
6NgdO/eRs+GX8Lz5ve/lvg7wuWekqwR2OsMv5f27WOJyYQH8MkFrLOb5pS2C
zz1g056Liz3hHxfkNWe/j5YXfO7Li47Z3vWFf0LQTYPVa+MD4Z8UZPnXrmma
IfC5n7T2yd8eDr9cUL3pe9nL9fBPCTJQ1xizORo+d5naqeue8fArBP2num6p
SjJ87kU7T7hnbIN/WlDbr2Ovj0qFX8nvI9vCS/emw+feV9+i2isDfhXPQ/3X
rzxy4FcL6nlQ2fXwQfjcNjr2Vs8Ow6/h+WDuVq9+FD53l03Ys1/K4MsEmQ71
uT+xHH4t3++VShnDK+Fz91dysX9eA/8MP98HpB0oOgv/LM8b6bfdKy/A5z75
7pvpsCvwzwla3mWw7WIDfO6pRrVJfo3wz/O8mDKaet+CX8f72+zO4j134XPP
y7Wt13kA/wLvj475hYWt8C/yvO61y2FMB3xu5wiLor1P4V/i6zFRtUnlOXzu
Id3Z3W0C/mWeH6vWOKm9gX+Fj88318LwA3zu6rfdx2w+wb8qKM50g8zxG/x6
QZva3ng49Rwi97nLT3jkWPeSNzXw8RvbZeh8J+9W7o6Sj7Zf+sk76pog7ei4
w+cGyFvrOq/P/aE3wwfJW8at1Kws+1lT3tIbgoYPmB1QM1TekkbeT2pqu2eN
gM/9ddp+lwuj4P/Bz2tfX8eb6MDnrv1inJc6Dn4T31//2ZH753j4NwWtjNNI
0p8An7sqz9h/sTH8W7xfDOg/PX4S/NuCEitnSPJM4XMHp75Jq7aAf4fv92Wh
Ixos4XP33zcvvckK/l1B+6t2dt2cCf8ezwONLPsGW/jcEY5Ohafs4d8XFH+m
n+4OB/jNvB6KX1QsdoLPXeT1ePlIF/gP+H3vg7Nl43z43EZ2cyyDf4PfIij2
4YJDn9zhP+Tj9x8Q7C2Fz22X+2tVxRL4rYKKE2LmflsKv433v9PPpxqtgM9t
2BAf4+YNv13QVl+z0cE+8Ll9v84y2uAH/xG//7QdzotYBb+D15NSY617IHzu
PXstorSD4D/m99GOE92Na+A/4f1FrXZGdgh87jk9u5x2hMJ/yu/brqUnLcLh
c28o3JbbvA7+n4IeirOGKyPhP+P3H+UJTs/Xw+fe/jm7nzQK/l/890zL0HMb
4T/n81HbGTskGj63mqP/VK9N8F/w+45q+/GcGPjcoli7rTEW/ktBOZofzr+L
gy/4ffRLYKhKAnzuxb39Ovttht8p6M1U3x7qiUPof+QqMhQ=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQaO7xy+acT0HyrVdgBxF6DxHZxQ+Q/Q+A3O7xwO
fwUJaIH5Ci6o/ANo/ARXVD6DGyp/AZDPdX1xgS0XhO/gjsp/gMZv8EDlK3ii
8g+g8RO8UPkM3qj8BWh8B593DkDHAV2oCbEfjd/gi8pX8EPlH0DjJ/ij8hkC
UPkLkPgAEDaJsg==
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQIJx985HP6qEdN/SMsBLHAClb8Aje9wEpX/AMj/
BuKWaoP5DadQ+QqnUfkH0PgJZ945LCmw5bqurAOx/ywqfwEa3+EcKv8BGr/h
/DsHoOlfNe5A+AoXUPkH0PgJF1H5DJfeOXBdX1xg26ULsR+N73AZlf8Ajd9w
5Z2DLVhAD2L/VVT+ASQ+AFsbjbI=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
/wO3bRjR
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[{{63360., 14.6}, {63365., 14.6}, {63370., 14.6}, {63375., 
          14.6}, {63380., 14.6}, {63385., 14.6}, {63390., 14.6}, {63395., 
          14.6}, {63400., 14.6}, {63405., 14.6}, {63410., 14.6}, {63415., 
          14.6}, {63420., 14.6}, {63425., 14.6}, {63430., 14.6}}]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwt1Xdcznsfx/GiKKtLZiUaUiESGVlfJx1lNURGKiPJzIjcQkgkEo0jnLtF
QztKoq6EkjoNo0SqI6OUvr8Qkur+uH9v/3g8H9X1ut5Xv+83zfU7bZx7yMjI
aMjKyPz+////rnI2qdUyeUriaPab4eS+WV7WX2JFs2ucvTuW+iX1qug68rRv
cjN2h4v2iuYsuaxKY8oV0RoxnMnKDfSWvSg6l7wrYq7Dy0DRTrGcrdv+63rO
OdEycZwNlhg4pPihT/7sYf+fxJPoX+fMs3hMR/px9MmXa/WrC4+gH89ZsHym
xoeD6CfQ6x1Pa+rpgT7Z0SrYWGsv+omcDWg8Is/c0E/iLM0kYs3abeiTJ9m4
G3puRj+Zsxypmt+ljeiTazMkG7Oc0E/hbGXLnrwqe/RTOSv23xv9YyX65FF1
/goqy9FP48w18Q2fbo3+DdozOcx+5RL0yTUlbMEBC/Rvcubr8CEj1Ax9sq6z
0tU789BP52xDw4shr2ejn8HZ618v1H7OQJ+s9t5dKpmK/i3O8q/v6tAyQj+T
swwnC0FvAvrkNWd7Xh49Fv3bnI3/j3nvwWPQJ39TtRokq4V+FmfHoq0zP6mj
f4ezen/drkoV9MmT3e68kw5B/y5nkhzTzTED0c/m7LrupbNn+qNPPuETs2Kn
Ivo5nH31i7hrLY8+WU9nXcEkWfSlnLW4luxX6tQW+7mcGSwcWdD8Q3Quua1V
L7vgq2ine5xFNWotixREy+RxtlB3kq9ns+hw8oMLHo4rGkSz+5zdlh9ZMfGt
6DrybNX2r73qRHs94Oxj/uz016/Qf8jZAjfJsJuV6JNfbQtWPf0U/XzOjORb
pY6l6Bdw9nLlP4E2ReiTK5ojLzgVoP+Int+2tkXr76NP7pPa4OMiRb+Qs7vn
n1nsuIP+Y84+/Nh5xuMW+uRs8/VLfG6gX8RZ5NRegcHJ6BfTeXcZtDw2Hn1y
ymGjCzkx6P/DWddeqVVFFPrk9ol7TrWGoV/C2dbg79MkV9AvpfPwOs7Z8CL6
5FqD+Yq2QeiX0fcn7NI8GIB+OWc6ZQE3o86gT67stM8qPYX+E3o+XYxndHqj
T7Y0qNCbcBT9p5xZzww753QI/WecDTeR2R50AH1ys0lGZpE7+s/pfKlpHZDb
jX4FZ6kxstFsB/rkaPcMs8Nb0K/krPeLVLvsTeiTXXzTnnavR/8F3U8StVxT
R/Sr6OeT1o7wXYM+2bi/SV25HfovOZsbMUh5hC36rzg7V3Q9ztUKfbJb5obE
zMXoV9PPL00boWiBPvnwSztub4b+azpP+26PS5uHfg1n9l8WlSvMQZ/8yK+8
cr0J+rV0Xk1TzHKmol9H97NivLL6ZPTJsn/pmR2aiP6/dD4dwqprxqFPnjrj
aZmpHvpv6P4qHKd3fTT69XSfdvcuGqaJPnnfifdJ/urov+UsLuljZT9V9N9x
Ju9ibnphKPrkibVH32sMQv899YTshxlK6JMfKU6pWdYP/Q+cadW66vxUQL+B
s8DHvmEx8uiTLU4ftV7dA/1Gzka3yc6TdGuJ/Y+c7VZWcS7qEB1Olh+Xf8fv
h2jWRL8ftbsLLdtE15E3C30Uh38W7dVM98kn4xLeIlrjE2dyxbpXnjWJziXv
bdDf9KhBtFMLZ63+pmb336HP6b5epTCx4A36ZOsTKbpPatEXOLN97T3+bTX6
5NItIyZ3V6HfytnAyrS5mpXof6b3vzrIcuEz9Mm6LmtWepaj/4We54ELHNJL
0P9K52n1PMv2IvTJX14N1TUvRL+N7otUtR3SfPTJ5dJlYTMfoP+NM+Hu2dys
e+h/p78f3m2P5kjRJ3vqxmYU3EX/B33+bN+5ZVnot3O2+szZhW9voU/e193v
/YF09H9y5jW4wEX5BvrkDtem/OQU9Dvo8356SdYmCf1fnCXFxal/j0f/1+/P
y0I5Ig79TrrPgy3fLYlBv4uz+EsRwZ1X0SdfWqGjlRKJfjdnioPu+TqHo082
uxV7f9R/8XUZgemOv/m8+rLoAPLJhUU5V0Lx/WQFu4pDjn+JNpQVWLNszkCd
YLx/cuvOxrD6C6LLyNxrlfbfAdjTgxyWes3SX7QbOaRe0Oz0wz7y1pbMiChf
0ZKeAouYsLJo9UnsJTdOCskfekJ0CjlLe1Ho82PYLyewSqsEk1Av0VbkrdPr
YtcdxudB3lKT2zjeU7RAdnA58fXXAeyXF9jH1VHSp/uxn2zeUsJuuGM/uabJ
yTN0D/b3EphnRN5On13YT156Nl7iuRP7yVvv7d/gsR37ewvMdGf73v1bsZ/s
N11r/gFX7CeHtoVUHnTBfgWBWVqv0j3qjP3kFS/XGPluwH6y7Mnz3wPXYb+i
wPTTP7lHOGI/WWbsxoTUtdhPPll3OSJvDfaTPa5dXFKxCvv7COyYnmVysx32
kyd43XwovwL7yRobfZNUbLG/r8DmRB/eM8YG+8lvcsKVJlhhP9l2no/7lKXY
309g+aejr81YjP1kz8ce4bMXYj95/uR7Dn+YY39/ge13/PDB7E/sJ1+du36W
+XzsJ4eExNpb/IH9AwS2ud3QwoJhP/mnjPSnxRzsJ/PE2x4Ws7Cf7Gj31/0F
JtivRM/PmJJX86djP/lq+ozyWVOx//fXU3wSDaZgv4R+f9uzt6oYYT953Vq3
rp6G2E9+0+LowA2wf6DAAtr5hapx2E8OTQi8kqeP/eQ5s/ruTdDFfmWBPTXL
0gjWwX7ytpxBUZ7a2E9eEF75ZaMm9g8SWPFSV9XFo7CfPP3EzGFG6thP7iM3
oH64GvaTu7+anugajv2DBXavyrLrzVDsJ1vPaP3z0WDsJ8vL+W1KUMb+IQK7
cqN6+XkJ9pOD7EMG7x+A/eSxRpsj1/bD/qH0ej49uuf3wX5yVOGQsQYK2E+2
87PRHtoL+4cJbMoB14/dPbGf7OPY98hHWewnK+s31j3v1hT3DxdY39obSnmd
oq3I8nEj+iZ3iA4nfyx+9uRKu2iBzJPObvL7LpqpCCzTuS7Jq010ALlm7vbT
3l9E15ENFnnq+7aKNlQVmJ6XkncAF+1FDvYtDr/4SXQZ2f1t+v6oJtEaagKr
ku5SSm4U7UZ+NaKnU/YH0bnk3UkSt+J3oiUj6L5q/3taTb1oJ/LMKTbZwr+i
U8hdmya1y9dhvzo9D4vqW9VqsJ+cZjIqxqga+8lTqxsli19iP7nXqSbjTS+w
fyR9vi76A45XYD9ZZ/ni8PBn2E+2+bXqbe4T7B9F5/t2R92/ZdhPnnd7mr98
KfaTn1Xd+qz/D/ZrCGxT4bFe1kXYT857/0eZRyH2k+9MTLOMKMB+TbqfWio9
ix9iP9lO3dHhx33sJzf4WDaPycN+LYFJr9karMjFfrLbg30qp3Kwn7zh9bpb
WXexn1ySNbKbZ2G/Np3nilXfdW5jPznOvDTM/hb2k6V7TwnB6dg/ms7bdiOh
9Ab2kw2HVob0S8N+sne3dpNFCvbrCOz8ae13vknYT9YrOO73OAH7yapBlhX9
47F/jMAGHDEuto7DfvLBt8z5Ygz2k4+UasTWXsN+XXp+GgKDdK9iP9lYK1pr
dyT2k4eM7L0qOxz7yetU901TDMN+PYFZ7UjLXv439pN/+R5siryM/WTbbwG5
Qij269PrLU+bNfci9pPvOYU5+odgPzmoeZh+TRD2j/39/l9dnBCI/eQ+S+KT
jpzHfvIe0z+3lJ/D/nECO9y5rUjbH/vJhwpry/edwX6y6QDHQ49Pa7L/AYac
NII=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[{{65375., 13.98}, {65380., 13.98}, {65385., 13.98}, {65390., 
          13.98}, {65395., 13.98}, {65400., 13.98}, {65405., 14.32}, {65410., 
          14.32}, {65415., 14.32}, {65420., 14.32}, {65425., 14.32}, {65430., 
          14.32}}], 
         LineBox[{{65865., 16.07}, {65870., 16.07}, {65875., 16.07}, {65880., 
          16.07}, {65885., 16.07}, {65890., 16.07}, {65895., 16.07}, {65900., 
          16.07}, {65905., 16.43}, {65910., 16.43}, {65915., 16.43}, {65920., 
          16.43}, {65925., 16.43}, {65930., 16.43}, {65935., 16.43}}]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQY6HxwOf9WI6T+k5wDiBqDxF6DxP6DxHXQ/OHBd
X1xgywXhT0DjP0DjG+ih8hvQ+BfQ+Ar6qPwCNP4BNL6AwQcHoOOALtQF8xPQ
+BvQ+AyGqPwANP4CNP4HNL6DESp/AhIfANjdciI=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw113k4lXkbwPGTyRIzOVSUsZxEyzBFm5jSTxtTkUSb0mEqITkmlaJQaceh
pFOKUF5EpyyhxUGlRTkmhUzNmUmTSuNXaRlL3rv3vl//uD4X18X3uZ/f/Txn
uF+Ixxo1gUAg6icQfP3+v689nK3am9Mdc8mEfaU7+FSVyYat+eh08JPeRJUk
E83B/wY5j1svQ7O9nK2vr1walICWgmUrSvb7xaJV4KaqEw2uEWibfZzdE6eP
tQ1FR4NDf1vX1LMWrQQ3FZ67W7QCLdrPmfpcfzMvD7QE3HpiW/dDZ7QCPMtA
bb3dNLTwAGffec3OCx6PFoPnmrpPTx2FloMXBUQ4VBijBQc5m6ZqTHysR/3g
ljV8yjsN6gcX590Zrt1jjP1gG7VCb9O3aHaIs55Jg9vG/o2Wgr+8elc6vQWt
Aq9affzJfCXaJo6zmusDXZbfQEeDRbaTPvuXo5XgnKZ3bzadR4viOXvbaT1m
dxZaAtb2H1sWL0MrwHkdXQmyeLQwgTO+cEt+1i60GBzqvU9PHo6Wgx1b9a9c
DkYLpJyxATV3K/zQ7mCLsE8epUvQ6eBruwrm5MynfnDzRJ2Dx52oPxHmE/2P
2aHJ1A+uCrBX32FF/eAItXsOEhH1J3FW+g2v8xlC/WBHrYwSV23qB9cXVP8z
te977D/MmUvGpHDrTrQEvF/W5GH8Eq0Au5WPChE+RQuPcHarOuqu1gO0GOy0
tWnxgFtoObg8INRk4FW0IBnup9ocE8OLaHdw7bY/vSyy0engALdBxfapaA6e
/CbGeVEimh2F+yErQSd0D1oKjlqV1pcUgVaBNb47r39VgrZJgfvjl/4LX69B
R4PfVfYvM/FGK8HB5gY/e7pT/zHOYmPsedJs6gdvzbxU/tCB+sHyt5/PGttQ
v4wzv1/XFvpbUj94jFX/unIj6gentplo6Aup/zhcv+/NlgSrUz94a91GRW2X
EfaDpbojbCdyNAc/zosoTnuOZifg/jJsn6fbgpaC36x69m6nEq0Cf0oIkn25
gbZJheu9+dG8HZfR0eCS2GQttQtoJfjmTaP7+8+iRSc56xAaLt57FS0BLyvW
UoY3oBXghGanGT6v0cJTnGV76BXaqVE/OPZD0R+aw6gf3O5iYFA7jvrTONPs
2rZi9xzqBw9ab1lms5LmD87Ucn75YCPNH3zu7RWHoAM0/3TObOX7E/qdpvmD
Q1cYLE69RPMH+4bb+U+4T/M/zZmJZX3E7VaaP/jo9k1PvLtp/mDxZfPGF3p0
/jM4q94yozhwNJ1/sMuBuAkvHOn8g5uOenut9KLzn8mZ1Xih/50gOv9gv/E+
FrY76fyDR0xLkSYeo/OfxZlW+9DPbQV0/sGTTaQGDrSf0sHbYlw6dtM+4+CL
Ctn9m//ff2c4W3fnB4maFu1/8LH2noDZprT/wUHvZvaLm0j7/yxn5vl7XrXM
pf0P1p1jOWeUL+1/sFytozZ0C+3/bOj90fdWaRztf7BXlchAM4v2P5jnre5e
Vk77/z+cnWkqsS5S0v4HS+K23dF+Qfsf3DhmZ5y4l/Z/Dme7hW4VFweZYj/4
mNFV334/oNPBOWFpPy5gaA6WLdi4XrYYzXI581YfEfBkPVoKVl/eXzJ0F1oF
9lp+ZaqrDG2TB/f3y/jfIs6jo8GCF3e3n76BVoIDIvW7FC1o0Tn4/Z6kfk/e
oiXg5Exd18+aZtgP7rj02VJoihbmc/awzzjeYiJaDLY+OdVxyly0HBx37UaU
ixgtKODssH6sp9dmtDu4IWvKJt9D6HRwUfx8q8AMNAefDzwYHlKKZuc587S9
MCTsPloKHvJq1PxNrWgVOCbmwfngLrSNHJ6X1rkZY7VE2A8OnJilZT4IrQQ3
nrD8Vs8ULbrAmaFRp3bvaLQEXCe3ymudgFaAd/5t0FHjiBZe5GzkwL6msz+j
xeA7ztZBMZ5oOdh9Q/Iot1VoQSFnwtSIId8Fot3Bf85KTqkIQ6eD50jbl66O
QnNw/ZFL4u79aFbEWVdh+OT4I2gpOHut12GzNLQKnGxx3LggB21TzNnGHT+N
+6mI+sHPNiSVVV2jfnBIcuy1Wbepv4Szqd92scoH1A9uXPdg5pSn1A/O7XYu
iWqj/kvwPmD/sSv7HfVf+vo+U+Bc20P94M263858rTEc+0vh/UazuaO/Htod
fEe5+JzR9+h0cP1HYzMrSzQHO4UGnrUbh2Zl8D43o6HN0R4tBScVmrxkM9Eq
sKEiRn26K9qmHPbLr4mtdkvQ0eD4GbGt1r5oJdiv9HWecRBadBnu/8yYaZqb
0BLwiUMRn97sQCvA4Tqro+v2oYVXODOyCp6cn4QWg520zBSxqWg5WDQhJ2L5
Weq/Ctd3QaLuD3LqBye6HtzRWUb9YGlL1cjL1dQP1rhSVhB5j/qvwfNltCzM
oZH6wbNDVabvVdQP3lJZfzLjFfVXwHwrq447d1I/+OLg85uf9VI/WCLxeBOu
aY79Cri/IqJXDtBDS8CvTvhtOGyEVoA3WbuPMLRACys5O8INW5J/RIvBRkFP
pw60Q8vBasM+zotmaEEVXE/VaP83P6PdwbLAo5M8F6HTwWtWHCovWoHm4Nk1
dZ7CtWhWDe8rMRF5a0LQUrCruKmyKBytApdln/34JQZtc52zD349fMZBdDS4
88se6akjaCXYW89Nr+ck9d/grO2IaPf8bOoHa0deXpksp37whtbDvY1l1H8T
np+eYTqDqqkfPO+D58E5tdQP1vnmzO8bH1J/DWfjLcdky55SP3hFiPag/BfU
D67LfzWmgFM/+K+0tR9S/6X+W3D9JTGJ29VGYD94hI+F70IdtAosZYd0DQej
bW7D+5FYQ7/BGB0NDpWd0dtriVaCE/4yD7Edixbd4czB6lOg+ii0BKyR2+fc
YIZWgDWfxwjSh6KFd+F54l+YvE4PLQZP1I8UWmuj5eDcK2ZB7fT/CmrhfT/y
5I3T3dQP3qKxw9itk/rBbert2zraqR+8Tkv0PPY59d+D6yWd4mJI108K7rWr
OJr9iOYP1rSrb5pYR/O/z9l7jTbNyhqaP3hdWLDFfAXN/+vP326f3FBK86/j
zKf+05wlF2j+4FbvIe6NOTR/cMUzwSLPDJq/Ev6+QcrS2uM0f/DVE0Jvp8M0
f7Bi+FHvQrr/BPVw/ovVfhHtpn7wUO+4oAOR1A9uXZS74X0Y9YNr1uqsWRlM
/b9xtu+2+uKba6gfbK/7xWmsD/WDTz08MzxlMfU/gOfxGI+eL27UD543w+jx
L87UD85yaKyunk79DfB51fJaoWgK9YMfL3TKjLShfvCgFOHB5tHU/5CzST9F
/TppOPWDd/7VsUw6jPrB+VP1HdppnwgefX2e2Bs5a1M/2L61pitdjfrBh+yC
G7q7aP+BNb0jC7ze0/5rBJ9Zsr/gNe0/8NYtBSu1Wmn/gR9lPhjv+zvtvyb4
fLVszICyBtp/4NwGn2Y92qdK8JKKm7kBN2j/N3PWZ169XXGV9j94++Bv5g0t
of0P9hzaPCykgPb/Y7h/HrXcraX9LgYL/lntY5tG+x88QlB3PzWF9n8LZxlF
m4x0pbT/wb0lxY776HmSDl5mru6uFkP94CsJl70itlL/7/D3LONcPoRSPzh6
a/24DYHUDz53bmr/Nj/qfwLna8HIe2Jv6gfnRs3Y9XgR9YOTrHaZLplP/U85
87C6e/LRLOoHX7/e27d0GvWDXfO+zHw6ifr/gM9TfRfWrR1L/WCBe8/6tyOp
H+yQUrUgymw4+y/NQFww
          "]]}, {}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
+1+bs/8BCy0YQw==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQIPPnxwWFJgy3VdWdMBxDf4iMpvQONfQOMrfELl
F6DxDwD5Mf2HvmrcgfAFPqPyE9D4G9D4DF8+OHBdX1xg26UF5geg8Reg8T+g
8R2+ovInoPEfAPm2YAFtiP+/ofIbkPgA7FFvhw==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJw11nlYzWkfx/FTxliyhCbrqZRqJoxGjaXIXSJl4oiUdktpdx4tCulMylok
mTKh7EwyJctEm2JKzbQrU0ORUZbSjSxp9Hw89/fxz1yvyzXX5X1+9+/+/Cau
2WDnqSyRSLSUJJLP//3fHxPOir0GThnWMZF9pgzWqD172+uxcBocPs/KvaBJ
uAs+lmBlO75WmJly5njPY9/mMuF4OPDLdbMabgq3wOoq/VZMyxE2nMPZ4PuL
m6IzhRWwWtycyoazwlVwfXLMLL1UYa25nPXfaTRi40/Ccrg08u7jpDjhQlgh
dw3IiBZWNePs7vXwoKItwh7wCufhfXUbhTPhp6fdB7X5CEvmcWbjcCThvQf1
w6fbzp8Y4Ej9cGfxtxYjl1I/PNhrqt+4hdTPOCtI+kddey71w4fz6uZONqZ+
+EX++DajydRvzlnIm2cj52hTP5x/tyBnwVjqh0e43ni0RJX6LTgb/3boPocB
1A/bTv7+8upPWqIfrh5k5+LXLaw6n7Opqod2BL8Q9oBPN22ZHNkqnPn572P1
7XY3CkssORuWXdqTUC0sg60k96XHSoXT4KgzMUXnCoS74KvWr9svXRVmCzjb
feHk7vwM4XjYUu239DunhFvg4V+qOdSkCBsu5Gx2r0tifYKwAnbdluh6b7dw
Ffxy+oXsBoWwlhVn/aYvSq3ZJCyHo497jysPpH5Y572NRrEn9S/C81eXpl93
oX44JqWg9Nfl1A8bRGyQn7KhfmvOpkudTiSbUz+cVH7BLXYW9cMRh6wyIqZR
P2z70GtnoB7123CmqZjZ4SalfniGf9a/C9WoH3awyC2epEL9iznTrfjZtEeJ
+uG+mZ+q9nFN0Q/PTz78i1qzsNYPnN1Klo2P+kNYDh+r1K3qzBEuhGVPP+a4
nRVWtcXzPd775M9EYQ847ZjcYU6UcCbcUWnSm7FBWLKEs5HTY1o1XIVl8LCL
yUP32winwceCHP2UZwl3wVo3OweH6AqzpZz9VXjqxZORwvFwdqurkotEuAXW
Pm/pUNWhIfplnBk1z2m2ahJWwDq3VZKLSoWrYOtRmxTsqrDWMs7G3ppic/J3
YTkcNHTLsPf1woVwsd3FveZtwqp2+D19Mksi3wl7wI7DvUsvDaB+uPHJbwcb
R1P/cs4eL/QfdEef+uGslOhPipnUD4c3HdqvbEX9cH3WdO3FK6l/BWf/usz2
3udJ/fD15m0Zd4KpH+5/Rz+jb7uwoT1nr2++8zE8KKyA90qynjifoOcP932Y
uCEyi57/Ss7GZXvnHy2k5w8bL7FouFpJzx8OmxbWv/QBPX8H3He2Ol/UddDz
h73zP95t7KV+eIr632ad/en8O3KmVByn4zeUzj/8Sv9I6D90ftPgxPV2Xe4T
6PzDjuu+etGkQ+d/FWd5e44PdZxM5x/OHty6om46nX+4dsE8qZ0JnX8nzn7U
DxpcRe+bApa5+U1YYk3vPzyrLO7inzJ6/505y61LWmfrSO8/bPNLqNmf7vT+
wyHn4pOWrKf334WzMVdPjqqi+8EDLh8bpeUQSu8/vDipxP1RBPW7cna8J8cg
KIb64bzlf8cPjaN+uGeKblxWIvXD1ZfjxrkfoX43/P65I4zV6b6Lh7dd/bWu
Pp364cAr3u/SsqnfnbOUN3XR8hvUDxt/d0rDspj6YVM9Qw1pOfV74L4oHX6w
r4b64bVbbMOe0/1dCEvN3pa2PKL+1fi9z4xVND+jfli59U5y2yvqh0uvjB/2
oYf61+D/H/PTqsfKtH+wX7np/vODaf/guqghvgdH0v7BBkWdx6LG0f6txf3X
93NlCO1ZPHzqXJB9oAHtH1zw4sJU/+m0f+s422HdryfAhPYPNjK+PyrEgvYP
vr3iwZ4YG9o/T87ic6VOqXa0f/D74Ve2FjnR/sNjYgo7OtfQ/ntx5vPI7dwk
P9p/2Dci6+zaINp/eHOxvO4sfR9I1uO8J/hXvdxO/fCkaxrdc2KpH9YZ0Vm9
O5H64aTw8KKGI9Tvjd/H+Jqv7mnqh53vZM0Ky6B+eKV0bkXFFer3wXlUaog2
yKd+eNP7ilV7f6d+uP5Wb+fLCur3xV6OenR0VQP1w7W3L6e0NVM/3KHpd/dw
O/X74fmq3Z5hw6kfPhJuNKHnA/XDRhO3GZxT1hb9/vj3z/kq315FWAa/1p7d
oKwmnAbvnXayOnOCcBfsPGHdMjddYRbAmbtJ7kqVb4XjYc2WdXNzZgi3wO03
A897zRM2DMR9euXiruGLhBVwxPJhUZdkwlUwD9Z4I1slrLUB+1F7O+bpamE5
bOSTcCjCV7gQHq3mXaYSJKwqx/fmm+qoQ1uEPeCSIVmeY6OFM+GfzsRVJ8dS
/384u9G5IGDkIeqHCxzdk3YepX442OzK27enqR8OMy97uvoi9W/E3j4PHV1y
lfph02GmD/QLqB+O8XrxOKqE+oM4y+gZsOevSuqHB+d6BBvco35Yr12uvKmF
+oPxvXVuYFNeO/XDY0JSXSSc+uHCtaqbTD5Qfwi+T8xsan2VdEQ/HNP3sDph
kHAmvLYouyZ7hLAklLMhOq3GlWOFZXCf7Glq60ThNFhhHTCafyPcBdcvjOt5
/50w28RZ6Ni8rg+zheNhPVPdE6/MhVtgC/mJaw+thQ3DcL9eu3agdJmwAn7t
Im16sEq4Cv7DPKBed42wVjjui94qzc2+wnJ45qTc97c3ChfCs+NSPAdtEVbd
jPOW85ev5XbqhxubHgzZtJf64cqMpDepB6l/C2dbu6X6BSnUD099rdS//iT1
w443vp7Zmk798MVkqUZ7NvVvxfs4w17WfIP6Yd0dYYZlxdQP3/ou2udsOfVH
4D4Oi5FvraV+uMJ6aadVE/XDNQ1O81VaqX8bZydPP0iva6R+uHO1vsvhGuqH
wyYsX+JcRv2R2Ecj0xMji6gf7pdtseJmDvXD09IDN3hmUb+Cs0hpzbtP56gf
zksvf7o/jfrhFb3OMvVk6ocvTY4oT99P/T9i38ZMDV60k/rh4tpTife2UT/M
HSeYO4ZSfxRn903aI0sCqB9+csTJQc+T+uG0uOakKBfq387Z0edf2zQup364
56il97TF1A/LWj6O2GxB/dGcfXHy+PxcOo8e8M/NBgPfGFI/HGVbafnN19Qf
w9keZVNlJ03qhy01Q012qVM/vL8lrDN7KPXDa1516DV9Qf078PsO+ft+30dt
0Q/HK5moab8WboHL1LNq5j0TNtzJ2Q8pC0c5PxRWwKN6X9YH/f/9h63V7fV2
0f2gtQvnszb84+HfheVwrH/q0vQ84UI48bLl+PzLwqq7OWuTxHpWpQt7wNdG
n/320QnhTDj0vtqG7sPCkj3Yi9/eTR14QFgGT97Td0B1l3AanBcYkqQaKdwF
R8dbWn8ZKsz24vvpK6907k/9sHmFxvW6tdQPTzxsr8hwov5YzlaNMW7dvoz6
4ZJljs/taQ+q4DDn3ARd2gutOHyvBtg0vvqe+mEto9SyG1OoH57vm+0apUP9
+3D/TDHNNhtH/fDCpcElr1SpH3a7YXb6yADq3489cO3r3vcv7T+cK7OXlL2i
/YfDn3lu7W6j/Yfbsq1NNO/T/sfjvOi5Wyyoof2H/Vs99vmU0P7DziUfNGJz
af8PcPbUZGfvL1m0//CHyiKt0jO0//Bru5WxrSm0/wm4v6XHrD7G0/7DVZfs
fhixg/YfXqzSniOl7xnVg5wN6HaO1ZbT/sPd65dUSD1p/+HGit22Unw//RcX
WCoi
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd0T0OgkAQBeCNJRVHwNiIWnABkq38/wFsLQiJtesNtraRI5DgATgC8QTb
0VhwBCjs3XVNzLxJJpPvdS8zzC7JecAY8/Waa0bOe/4QodOMfG6swN6CWoBr
sLukTsEVmK2oI3AB7sB83fPT/fkev6xzcAsONtQSrMDellqAa7C7o07BlbbT
lCK8TWz/PXUELsCddvgNprb/gToHt+Ag6vnVBJ21BCuwF1MLcB3//lHObP+E
OgVXYHb8+wPRINkz
          "]], LineBox[CompressedData["
1:eJxd0T0Kg0AQBeAlpZVHMJ0kMXgBYY+wpLaQQOrsEYT8m0Q3NxDMATyC5AR2
th5Bi6TOrgbCvIFh+KrHzEzX29VmwhjzdJtpSu56bjWFDKwlN67A9p46Apdg
dqAW4Fw7zF5vN/QGd2B+pFbgFuyfqGNwrf3U6U2xGOycqSW4AtsX6ghcan9c
kzgf90+oBTgHd2B+7XkwHGy0Ardg/0Ydg2uwc6eW4Apsp9RR+vtnMhv3B7OM
WoBzcAfmilqBW7D/+PsLG030sA==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
ZtQPL76eXF04mPphxbzLNVoDjNn/AUeaiOc=
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[{{72340., 13.27}, {72345., 13.27}, {72350., 13.27}, {72355., 
          13.27}, {72360., 13.62}, {72365., 13.62}, {72370., 13.62}, {72375., 
          13.62}, {72380., 13.62}}], 
         LineBox[{{73090., 14.7}, {73095., 14.7}, {73100., 14.7}, {73105., 
          14.7}, {73110., 15.08}, {73115., 15.08}, {73120., 15.08}, {73125., 
          15.08}, {73130., 15.08}, {73135., 15.46}, {73140., 15.46}, {73145., 
          15.46}, {73150., 15.46}, {73155., 15.82}, {73160., 15.82}, {73165., 
          15.82}, {73170., 15.82}, {73175., 15.82}}], 
         LineBox[{{73365., 15.12}, {73370., 15.12}, {73375., 15.12}, {73380., 
          15.12}, {73385., 14.77}, {73390., 14.77}, {73395., 14.77}}]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
Jfs/KfXy9w==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQbvPjosKbDluq6s4wDiBqDxF6DxP6DxHd5/dPim
EdN/qFQbzJ+Axn+Axjf4gMpvQONfQOMrfETlF6DxD6DxBT6h8hPQ+BuA/MNf
QQJaYD7DZ1R+ABp/ARr/Axrf4QsqfwIa/wEa3+ArKr8BjX8Bja/wDcEHAP3r
qxA=
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQIb2D45xPQf+qoRo+kAFmBH5Qeg8Reg8T+g8R04
PjmAufxaYP4ENP4DNL4BJyq/AY1/Acg/DOT2H4LwFbhQ+QVo/ANofAFuVH4C
kP8NxC3VBvM3oPEZeFD5AWj8BUh8AIYTa8Y=
          "]], 
         LineBox[{{74800., 15.12}, {74805., 15.12}, {74810., 15.12}, {74815., 
          15.12}, {74820., 15.12}, {74825., 15.12}, {74830., 14.77}, {74835., 
          14.77}, {74840., 14.77}, {74845., 14.77}, {74850., 14.77}, {74855., 
          14.77}}]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQIBHp8clhTYcl1X1nEA8Reg8T+g8R08UfkTgPxv
GjH9h0q1wfwHaHwDL1R+Axr/AhpfwRuVX4DGP4DGF/BB5ScA+Ye/ggS0wPwN
aHwGX1R+ABp/ARr/AxrfwQ+VPwGN/wCJDwDCYn1K
          "]], 
         LineBox[CompressedData["
1:eJxd0T0KwkAQBeDFMlWOELGJP0UuIOwRgnWKIFi7jX0qf6NZPYGgB9gjLPEC
6dJY5AghoLW7roXzBobhax48pj9fzhY9xlho1l472brjSVG+wmTIrStwsKEW
YA32tx336puYeqOvU7ACsx11DL4aP0x6UTq3YL6nluAGHB2oM3AFDvKOvy1X
Y9cfrMH+kToFKzA7UcfGd9O+Hkxcf3AL5gW1BDfgSFJn4Er+/vl0Ds7UAqzB
/oU6Bas/fwBGSeU6
          "]], 
         LineBox[{{76215., 13.73}, {76220., 13.73}, {76225., 13.73}, {76230., 
          13.73}, {76235., 13.38}, {76240., 13.38}, {76245., 13.38}, {76250., 
          13.38}}]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
B6/UpH6w4Qhd2ejh1A/+TlsS9qhvJPs/0j5xBg==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd1r1T1EAYx/EdS6sUNDYYx0J8Y/IPMLOdlpHGhuLGGWvT2FBdY2NDChut
MoM1ru8oiBFE8Q1XRVFEDb4iKKyngKXJbW7G55uZm5vPzW2SJ79nd7Pr2In+
49uUUmvlp/qujuZIS2+fH076tu/TlS0cXpBO4BwOjHQDNrC6KB2XHhia3OgZ
2Nt2BjtYX5JO4QKOLks3YQuHV6ST0ufLu50f7vH1w8FV6QZsYHVNOoYz2MH6
ektv9lR3uMfXDxdwNCrdhC0c3pBO4BwObko3YAOrMekYzsZQP6zHpVO4GEf+
t5A/bOFwAvlPoP/h4Db6HzawytH/cAY7WN+RTuECjialm5OoHw6nUD+cw8Fd
6QZsYDUtHU+j/2EH63vIHy7g6L50E7ZwOCOdzKD/4eAB+h82sHqI/ocz2MH6
EeY/XMDRY8x/2MLhE8x/OIeDWdQ/i/UPVk+x/sEZ7GBtkT9cwNEz5A9bOHyO
/OEcDl5g/YcNrOZQ/xzyhx2sXyJ/uICjV8gftnA4j/zhHA5eI3/YwOoN+h/O
YAfrBdQPFwvI/y3yhy0cLiJ/OIeDd8gfNrB6j/UPzmAH6w94/4ELOCqw/8EW
Dpfw/gfncPAR+x9sYPUJ+x+cwQ7Wn1t6aqMKvN7/4AKOvtT9cXK/rx+2cPhV
OoFzOPhW57v7gK8fNrBalo6X6+e/6J3BDtbfpVO4gKMV6SZsV+rne/qgr39V
OoFzOPjR0jtPrR4Z7e719cMGVj+l49L9o93lL94Z7Er3tS/ordek0zX5/wKO
1qWb63K8hUMnnbjO+lLXDwe/pBulu0YOLQ2e8TawanX62TuGs9Lt6ThU5w/r
39Jp6cNLg+Ul6vzh6E/n/HX+sC197mx11P2/IZ3Aeen28KN1/29KN0pX5Xb1
epvNevwOb7UlHW918vHOYLfVWZ+89V/p9D//A2ani6g=
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
Zvs/eGqdv8MfNWz/B0dufWIsUJiT/wHN99pR
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQZ/Pjl804jpP1Sq6QDiBqDxF6DxP6DxHf6i8ieg
8R+g8Q3+ofIb0PgX0PgK/z85HP4KEtAA8wvQ+AfQ+AIMn1H4CWj8DWh8BkZU
fgAafwEa/wMa34EJwQcA/iyBig==
          "]], 
         LineBox[{{78035., 13.07}, {78040., 13.07}, {78045., 13.07}, {78050., 
          13.07}, {78055., 13.07}, {78060., 13.07}, {78065., 13.43}, {78070., 
          13.43}, {78075., 13.43}, {78080., 13.43}, {78085., 13.43}, {78090., 
          13.43}}]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
kufQ/Qe26t7iWpghZP8C2ccwuQ==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQIJsz87fNOI6T9Uqu0A4m9A4zPMQeUHoPEXoPE/
oPEd5qLyJ6DxH6DxDeah8huA/MNfQQJaYP4FNL7CfFR+ARr/ABpfYAEqPwGN
vwGNz7AQlR+AxAcANl97SA==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
0v4D+552e+59kfYf+H59tFgE+/h/Qop6UA==
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQILvn124Lq+uMCWS8sBxP+Axnf4jsqfgMZ/gMY3
+IHKb0DjX0DjK/xE5Reg8Q+g8QV+ofITgPyY/kNfNWI0wfwNaHyG36j8ADT+
AjT+BzS+wx9U/gQ0/gM0vsFfVH4DGv8CEh8AqbmMpw==
          "]]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[{{83175., 13.38}, {83180., 13.38}, {83185., 13.38}, {83190., 
          13.73}, {83195., 13.73}, {83200., 13.73}, {83205., 13.73}, {83210., 
          14.07}, {83215., 14.07}, {83220., 14.07}, {83225., 14.43}, {83230., 
          14.43}, {83235., 14.43}, {83240., 14.43}}], 
         LineBox[{{83395., 15.12}, {83400., 15.12}, {83405., 15.12}, {83410., 
          15.12}, {83415., 15.12}, {83420., 14.77}, {83425., 14.77}, {83430., 
          14.77}, {83435., 14.77}, {83440., 14.43}, {83445., 14.43}, {83450., 
          14.43}, {83455., 14.43}, {83460., 14.43}, {83465., 14.07}, {83470., 
          14.07}, {83475., 14.07}}]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQYpXxwOf9WI6T+k5QDiBqDxF6DxP6DxHVJR+ROA
fK7riwtsuSD8B2h8gzRUfgMa/wIaXyEdlV+Axj+AxhfIQOUnoPE3oPEZMr84
AB0P9IEmxP9o/AVo/A9ofIcsVP4ENP4DNL5BNiq/AY1/AY2vkIPKL0DiAwDb
E5eR
          "]], 
         LineBox[{{83965., 12.48}, {83970., 12.48}, {83975., 12.48}, {83980., 
          12.48}, {83985., 12.48}, {83990., 12.48}, {83995., 12.48}, {84000., 
          12.48}, {84005., 12.48}, {84010., 12.82}, {84015., 12.82}, {84020., 
          12.82}, {84025., 12.82}, {84030., 12.82}, {84035., 12.82}, {84040., 
          12.82}, {84045., 12.82}, {84050., 12.82}}]}, 
        {GrayLevel[0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[1, 0, 0], PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdz70NwjAQBeAj/KfKCKFBET9SFkDyCBZ1igiJmoyQDZIRLMEAHiFignS0
GcEFpgRsU6B7J51O36vurU6X4zkiorVbf/3o91O8sqK5240IwYdbghXYgAVZ
5hY8ON+qQ/y4boPzEXcN7sFpxF2BO3Ay5i6d/TdZsQvWYJpwS7ACG7CYcrfg
AZzPuGtwD07nVrgyrtH+1x/cgZMFdwnWYFpyS7ACG7CI//4CQsTGSw==
          
          "]]}}, {{}, {}}},
      AspectRatio->0.1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{55530.10416666667, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->1000,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Oktopusz\"", TraditionalForm],
      PlotRange->{{55530.10416666667, 86395.}, {0, 16.43}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Prolog->{
        GrayLevel[0], 
        Thickness[Tiny], 
        Dashing[{0, Small}], {
         LineBox[{{56160, -50}, {56160, 50}}], 
         LineBox[{{57600, -50}, {57600, 50}}], 
         LineBox[{{59040, -50}, {59040, 50}}], 
         LineBox[{{60480, -50}, {60480, 50}}], 
         LineBox[{{61920, -50}, {61920, 50}}], 
         LineBox[{{63360, -50}, {63360, 50}}], 
         LineBox[{{64800, -50}, {64800, 50}}], 
         LineBox[{{66240, -50}, {66240, 50}}], 
         LineBox[{{67680, -50}, {67680, 50}}], 
         LineBox[{{69120, -50}, {69120, 50}}], 
         LineBox[{{70560, -50}, {70560, 50}}], 
         LineBox[{{72000, -50}, {72000, 50}}], 
         LineBox[{{73440, -50}, {73440, 50}}], 
         LineBox[{{74880, -50}, {74880, 50}}], 
         LineBox[{{76320, -50}, {76320, 50}}], 
         LineBox[{{77760, -50}, {77760, 50}}], 
         LineBox[{{79200, -50}, {79200, 50}}], 
         LineBox[{{80640, -50}, {80640, 50}}], 
         LineBox[{{82080, -50}, {82080, 50}}], 
         LineBox[{{83520, -50}, {83520, 50}}], 
         LineBox[{{84960, -50}, {84960, 50}}]}},
      Ticks->{{{56880, 
          FormBox[
           RotationBox[
           "\"Dec\\n31\\nSun\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {59760, 
          FormBox[
           RotationBox[
           "\"Jan\\n2\\nTue\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {62640, 
          FormBox[
           RotationBox[
           "\"Jan\\n4\\nThu\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {65520, 
          FormBox[
           RotationBox[
           "\"Jan\\n6\\nSat\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {68400, 
          FormBox[
           RotationBox[
           "\"Jan\\n8\\nMon\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {71280, 
          FormBox[
           RotationBox[
           "\"Jan\\n10\\nWed\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {74160, 
          FormBox[
           RotationBox[
           "\"Jan\\n12\\nFri\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {77040, 
          FormBox[
           RotationBox[
           "\"Jan\\n14\\nSun\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {79920, 
          FormBox[
           RotationBox[
           "\"Jan\\n16\\nTue\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {82800, 
          FormBox[
           RotationBox[
           "\"Jan\\n18\\nThu\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {85680, 
          FormBox[
           RotationBox[
           "\"Jan\\n20\\nSat\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.9278117450368814`*^9, 3.9278120223597536`*^9, 3.9278120802659674`*^9, {
   3.927812144971407*^9, 3.927812226180132*^9}, 3.9278122678878317`*^9, 
   3.927812314044662*^9, 3.9278123999725466`*^9, 3.927812512179178*^9, {
   3.9278125531997004`*^9, 3.9278125635985374`*^9}, 3.9278126176420383`*^9, 
   3.9278127214656105`*^9, 3.9278696111014686`*^9, {3.9278696872993355`*^9, 
   3.92786969982311*^9}, 3.9278698042616887`*^9, 3.9278698722919626`*^9, 
   3.927870199711276*^9, 3.9278703686254005`*^9, 3.927870444255515*^9, 
   3.9278705159247117`*^9, 3.9278707623639545`*^9, {3.9278708152078304`*^9, 
   3.9278708373465085`*^9}, 3.9278708730836587`*^9, 3.927870971179044*^9, 
   3.927871052663348*^9, 3.9278711340565677`*^9, 3.927871217718139*^9, {
   3.9278720624954395`*^9, 3.9278721098684826`*^9}, {3.927951181915385*^9, 
   3.92795119846772*^9}, {3.927951388882357*^9, 3.927951421095573*^9}, {
   3.9279516213199*^9, 3.9279516350154724`*^9}, 3.9279517138810487`*^9, 
   3.9279521171664534`*^9, 3.927952235960907*^9, 3.927952335900752*^9, 
   3.9279524472449512`*^9, 3.927952516812724*^9, 3.9279526397818356`*^9, {
   3.927952727486886*^9, 3.927952747756247*^9}, 3.927953010951296*^9, 
   3.9282969142877274`*^9, 3.928297011191372*^9, 3.928306496393679*^9, 
   3.9283066230193434`*^9, 3.9283067249270487`*^9, 3.9283067917805557`*^9, 
   3.9283071552272587`*^9, {3.9283072397505765`*^9, 3.928307266925561*^9}, {
   3.928307307259325*^9, 3.928307388808693*^9}, 3.9283074550999975`*^9, 
   3.928307767780447*^9, 3.928307978169808*^9, 3.928312054570065*^9, 
   3.9283121346537523`*^9, 3.928312294977623*^9, 3.9283123401746883`*^9, 
   3.928312400757284*^9, 3.928313079409688*^9, 3.928314350689189*^9, 
   3.928322834470186*^9, 3.928322977026864*^9, 3.9283230177640038`*^9, 
   3.928323067176509*^9, 3.928325211598228*^9, 3.9283275570271664`*^9, {
   3.9283289531609864`*^9, 3.928328973944527*^9}, 3.9283309994577045`*^9, 
   3.9283322096177845`*^9, 3.9283324450280857`*^9, {3.9283333629416003`*^9, 
   3.9283333712925653`*^9}, 3.928333411378108*^9, 3.9283335016390033`*^9, 
   3.928333819008318*^9, {3.9283338805372114`*^9, 3.928333889102358*^9}, 
   3.928334128036787*^9, {3.9283343447436934`*^9, 3.9283343878402224`*^9}, {
   3.928334483418111*^9, 3.9283345290953903`*^9}, 3.9283346061364045`*^9, {
   3.9283347068269105`*^9, 3.928334719951332*^9}, {3.9283354211742873`*^9, 
   3.928335473044518*^9}, 3.9283355422054095`*^9, 3.9283355831055155`*^9, 
   3.9283356205260077`*^9, 3.928335677440716*^9, 3.928335712626392*^9, {
   3.9283360043371706`*^9, 3.9283360247572255`*^9}, {3.9283361294330983`*^9, 
   3.928336154980834*^9}},
 CellLabel->"Out[2428]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["heat (cost)",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799836982658*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"simulatedHeatDynamics", ":", " ", "loss"}], ",", " ", "gain"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9277993218705435`*^9, 3.9277993312776775`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatedHeatStockDailyForCycle", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"simulatedSeasonForCycle", "[", 
            RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Total", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"simulatedSeasonForCycle", "[", 
                 RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "roomN", "]"}], "]"}], "[", 
              RowBox[{"[", "heatLossOrGain", "]"}], "]"}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"roomN", ",", "1", ",", 
              RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
          "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"heatLossOrGain", ",", "1", ",", "2"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"simulatedDay", ",", "1", ",", 
       RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9277991260040007`*^9, 3.9277991379848795`*^9}, {
   3.9277991863535385`*^9, 3.927799429924572*^9}, 3.9278003135360045`*^9, {
   3.9278076889973025`*^9, 3.927807705753889*^9}},
 CellLabel->"In[2415]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}], "[", 
     
     RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "/", "100"}]], "Input",
 CellChangeTimes->{{3.92779963551254*^9, 3.927799650018516*^9}, {
  3.9278080411766963`*^9, 3.927808042345873*^9}},
 CellLabel->"In[2416]:="],

Cell[BoxData["6685.686147502479`"], "Output",
 CellChangeTimes->{{3.927799637482269*^9, 3.9277996502702093`*^9}, 
   3.9277998261037073`*^9, 3.927800024192445*^9, 3.927800105593503*^9, 
   3.927800334997204*^9, 3.9278055639635267`*^9, 3.927805831512455*^9, 
   3.9278070074775887`*^9, 3.9278080121299543`*^9, 3.9278080427939262`*^9, 
   3.9278109451651917`*^9, 3.927811606057662*^9, 3.9278124191874385`*^9, 
   3.927812734039815*^9, 3.9278696321980386`*^9, 3.927869818703597*^9, 
   3.927869880798194*^9, 3.9278699528679914`*^9, 3.9278702366083293`*^9, 
   3.927870375255192*^9, 3.927870452185952*^9, 3.927870529736902*^9, 
   3.9278708828684688`*^9, 3.9278711512453737`*^9, 3.9278712305388436`*^9, 
   3.9279512312092934`*^9, 3.9279517408573494`*^9, 3.927952148582868*^9, 
   3.927952255323371*^9, 3.9279523572520013`*^9, 3.9279525625564346`*^9, 
   3.927952664620469*^9, 3.927953092216311*^9, 3.928296925653042*^9, 
   3.928306517697525*^9, 3.928306638288416*^9, 3.928306739141635*^9, 
   3.928307194337802*^9, 3.9283074005805235`*^9, 3.928307536694105*^9, 
   3.9283079923513155`*^9, 3.9283131028182364`*^9, 3.9283134655293865`*^9, 
   3.928314369708568*^9, 3.9283252331988797`*^9, 3.928327584637278*^9, 
   3.9283289994374046`*^9, 3.9283310609598475`*^9, 3.9283325382094703`*^9, 
   3.9283347343012376`*^9, 3.9283356444901896`*^9, 3.9283360408052464`*^9},
 CellLabel->"Out[2416]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"heatStockDaily", "[", 
        RowBox[{"[", "cycle", "]"}], "]"}], "[", 
       RowBox[{"[", "dayN", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.92779966666682*^9, 3.927799672404826*^9}, {
  3.927799741253587*^9, 3.927799763944642*^9}},
 CellLabel->"In[2417]:="],

Cell[BoxData["10468.151504425765`"], "Output",
 CellChangeTimes->{
  3.9277996593507023`*^9, {3.927799749089362*^9, 3.9277997643108683`*^9}, 
   3.927799826702244*^9, 3.92780002485843*^9, 3.927800106380831*^9, 
   3.927800334535843*^9, 3.927805565361512*^9, 3.9278058315955105`*^9, 
   3.9278080451431265`*^9, 3.927812420968831*^9, 3.9278127356683393`*^9, 
   3.927869633133277*^9, 3.927869820071268*^9, 3.9278698824759283`*^9, 
   3.9278699529686737`*^9, 3.9278702374120493`*^9, 3.927870376141138*^9, 
   3.9278704532892303`*^9, 3.927870530662131*^9, 3.9278708837548995`*^9, 
   3.927871152269988*^9, 3.9278712317859*^9, 3.927951232694529*^9, 
   3.927951742005315*^9, 3.927952150048205*^9, 3.927952256175206*^9, 
   3.927952358158506*^9, 3.9279525635800037`*^9, 3.9279526655430384`*^9, 
   3.9279530928993044`*^9, 3.9282969267190905`*^9, 3.9283065194183064`*^9, 
   3.928306639929881*^9, 3.9283067411062155`*^9, 3.9283071960133452`*^9, 
   3.9283079937681365`*^9, 3.9283131046812267`*^9, 3.9283143722360983`*^9, 
   3.9283252340652533`*^9, 3.9283275858512487`*^9, 3.9283290000761986`*^9, 
   3.9283310627916393`*^9, 3.9283325388754916`*^9, 3.9283347353896637`*^9, 
   3.928335645423419*^9, 3.9283360417064157`*^9},
 CellLabel->"Out[2417]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "simulatedHeatStockDailyForCycle", "]"}],
            "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", "100"}], ")"}], "/", 
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"heatStockDaily", "[", 
             RowBox[{"[", "cycle", "]"}], "]"}], "[", 
            RowBox[{"[", "dayN", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
       "]"}]}], ")"}], "-", "1"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.927808053641984*^9, 3.9278080789553003`*^9}},
 CellLabel->"In[2418]:="],

Cell[BoxData[
 RowBox[{"-", "36.13307808283174`"}]], "Output",
 CellChangeTimes->{{3.927808058507922*^9, 3.927808079488817*^9}, 
   3.9278109481988964`*^9, 3.927811612932908*^9, 3.927812422529174*^9, 
   3.927812737642296*^9, 3.927869634128824*^9, 3.927869820568119*^9, 
   3.927869883657115*^9, 3.9278699530482855`*^9, 3.9278703766615133`*^9, 
   3.9278704537134132`*^9, 3.927870531872486*^9, 3.9278708843842025`*^9, 
   3.9278711532551537`*^9, 3.9278712328150797`*^9, 3.927951233683798*^9, 
   3.927951743103812*^9, 3.9279521518073344`*^9, 3.927952257886528*^9, 
   3.927952564156352*^9, 3.9279526659621363`*^9, 3.927953093949993*^9, 
   3.928296927102922*^9, 3.9283065218784695`*^9, 3.9283066417403574`*^9, 
   3.92830674237374*^9, 3.928307197344496*^9, 3.9283075383439584`*^9, 
   3.928307995800839*^9, 3.9283131062072697`*^9, 3.928314374522812*^9, 
   3.9283252358288794`*^9, 3.9283275874574385`*^9, 3.928329001044468*^9, 
   3.928331065612215*^9, 3.9283325392758827`*^9, 3.928334736232606*^9, 
   3.9283356461313334`*^9, 3.9283360423416443`*^9},
 CellLabel->"Out[2418]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["temperature (performance)",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799846228552*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatedDailyTempVsTrueTempForCycle", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"simulatedSeasonForCycle", "[", 
           RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"roomTempsD_aily", "[", 
                RowBox[{"[", 
                 RowBox[{"roomsOnCycle", "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"simulatedSeasonForCycle", "[", 
                   RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
             "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Select", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], 
                    "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"NumberQ", "[", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Flatten", "[", "#", "]"}], "]"}], "]"}], 
                 "\[IndentingNewLine]", "&"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"simulatedDay", ",", "1", ",", 
        RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.927809458408825*^9, 3.9278094645603094`*^9}, {
   3.927809580608006*^9, 3.927809690953267*^9}, {3.9278097396217785`*^9, 
   3.9278097397228084`*^9}, 3.9278105694220724`*^9, 3.9278116145151386`*^9, {
   3.927870278759116*^9, 3.9278702805424323`*^9}},
 CellLabel->"In[2419]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"simulatedDailyTempVsTrueTempForCycle", "[", 
             RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Mean", "[", "#", "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", "&"}], ",", 
        RowBox[{
         RowBox[{"simulatedDailyTempVsTrueTempForCycle", "[", 
          RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"simulatedDay", ",", "1", ",", 
        RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
     "]"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.25"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"All", ",", "All"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"#", ",", "\[IndentingNewLine]", 
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"DateString", "[", 
                   RowBox[{"NormalizeDate", "[", 
                    RowBox[{"seasonDays", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], ",", 
                  "\"\< \>\""}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "\"\< \>\""}], 
              "]"}], ",", 
             RowBox[{"Pi", "/", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
          "}"}], "\[IndentingNewLine]", "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{"startDayN", ",", "endDayN", ",", "4"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "Automatic"}], "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"roomNames", "[", 
     RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.9278097765324807`*^9, 3.9278100099866314`*^9}, {
  3.9278101152067595`*^9, 3.92781011558966*^9}, {3.927812757566035*^9, 
  3.9278127611509037`*^9}, {3.92787007955303*^9, 3.9278700969770947`*^9}, {
  3.927870599311369*^9, 3.9278706069793177`*^9}, {3.9283347498002944`*^9, 
  3.928334750251928*^9}},
 CellLabel->"In[2420]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{15., -0.9923306750867747}, {16., -1.6204129672823495`}, {
         17., -1.7663360183554528`}, {18., -5.322357087956047}, {
         19., -9.87399565174194}, {20., -8.931095293090854}, {
         21., -7.627012591443611}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQHmDlrzvYzMNEQOQPgWDgHTOvjvrIPxLR0MChW5
uNZKQPlWDm+abhRMmaEM5Vs7SOzc9P6VpDqUb+NQfvdAfeRzJSjf1iHRoS3i
d7o8lG/nIPEyUzc9QQrKt3coNOG3vXdeHMp3cKiZt7jSwUQSwm9wcNi3fnbG
pu9qUHlHhylNJnsPa2pA5R0d/hSsmPXGVBEq7+Sw7cCcrEdToOY1ODks0Fu1
N99EGCrv7FAbYn2CpVwQKu/s0F+yzKDgO8x+FwcNvae1vrNlofIuDnPWTbDj
vqwAlXd1cNXuXFIdJAeVd3X4wD61YIO7DFTezaFHQW/P3OUw/W4OkzdGXeE1
hNnv7qC7KDj6thPMfncH4TM9M/P4xaDyHg4fH1hc3HcHqr7Bw2Gtxtd5eldg
+j0dSruTF/Jtg8l7OujH7P+9SQzmfi8Hkx2nBQ3zpaHyXg4aR448ZK6Ghb+3
w9sNj0J/LFY4AACKi5Mr
         "]], 
        LineBox[CompressedData["
1:eJw10AtIU2EYBuCjzWRo5bxlumWmRlcTQiZr5ZtNEJHc/T7Q0lFGF000hTnz
klGwhEwqJKikMKlERUK8HCHUzC5UIq1lVmRiipWIubB1Od8OHA4v/M95v/+L
OXhCmefLMEzy3/ffl3uy0DmVOlXjv4H9HyuyUNSSP9ckEHKZkaNIvPN840AE
lyFHYcGNZNH2dXRejoSTziapbC2XWTlkD3c13qul84wCx9yuQUvsRvIKRLWk
83xuxZJXYMEgUJvS15NXYLp/uTO3zeuVkFUlOV2PBeSViN4XUq1x+JNXQpjW
sXqkLIi8ElfEQ+6c2ijyKuzfdpPfy4shr0JDxJ33qbne+6pw21heUt8QSV6F
t9mREWJ+KHk1vp3S2lz9fPJqWFxDCm22t1+NYWXmEbskjLwa7aFpjuA9IvIa
POVdczLjtB9o8NIWLLWHhZPXICX89NWRSyHkNfDYe8e6Hqwkr8XhxqXh+Axf
8lpcaZj36ygKIK9FXYKqLSmQ9sNqkSix5vuoaT5Gh02H7sZ5niz3cV6HaKnj
fqTtB5crdPhV90y2N7E9hfM6KF4fD5DwRrnM6BGUs3h2sLKby9Cje6btY2r5
CurXo7WheUIg8XD/Y/UwZ8x98q2hPsaA6Sixu+uym/oNMIZuGegvnad+A0o3
5y/EW73egFF7dc/PhFU0vxFlcY5Cid8aur8R8cyLSVFYIPUbUbCcVX2mmfbD
GqHqFAp2e7z9Jlx/wy4m+n+nfhMcH6z8Zs8s9Ztw4aLIUHKA5mFNsB0tbhkQ
0n4ZM4qdE5l5Vd79m5H0eVpqOrdA3oz6GevYu1cjtD8zpuJ2tM5/6aF+C8Yn
t1bOPv9K/Rakax+x6t9LfX8AIBcWuw==
         "]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQFxDp5/LAW9PH/sB3Md4hy4Fn7/d1XqG4TfEOew
YWbLdJEFPyH8A3EO+453nJA7wXQAoj/eodKv67VVMzeE7xDvUMFTUtDIwwvh
N8Q73A6Ic440YoXwD8Q7MIip/nSfyQzVn+DgzrGs4H81A4SvkOCQ7uBU5G34
FeqeBIfQuWyezIyMEPmEBIesRaF6X1uloOYnOPjv6qr7MEMMwl+Q4BAlyNTH
+FkAal+Cg/yX/kMbNvNA+A8SHL6abPb6lyYItT/R4X0Gk/7MTqj5CokOxSyf
BAx+/IHan+gQqN42r62eC2p/osNmz+PiX/dC9TckOjTPq7pn+A5q/oJEBzM/
67uCb6DhcyDRITL7WQSr8EuIeQ8SHTI5bE8ZyJzYDwDivnUv
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQF6DpNu/vS7b/RrP4Rv4NA0Zd2zbjHGAxC+ocPK
B4v8ooqZoXwjB72pL54kbJaE8o0duq4+OG1wUw3KN3G4VbrxprWlMpRv6qBe
2XEjQEIByjdzaLGr7GLdA9Nv7iDXpHXkcJY4lG/hsEb1ebbWAhjf0uHthoCN
awRloHwrh0PePAay11ShfGsHr9kLBTfJakL5Ng4/gu+fUnKG2W/rcEilYtuk
qfJQvp3Dctu7lwtZpaF8e4fJFlEiCxQloHwHh0e5zNMCbktB+A0ODpr9zoIi
jTDzHR3mlZlELTwN5Tc4OqxddojpSr4iVN7JQeDT/1fSn8Sg8k4OV1b+zP5z
TQAq7+yg3hi8oyaVDyrv7KDwafrTdWtg9rs4XHx12FwmHWpeg4tDsewvPcs6
mH9cHXLVj2j+EYP6p8HVYfP5X2c3WkLdy+Dm8HtluOtrPZj73RyOTxGItf/L
A5V3d7htF+MlxyMIlXd3cKqfv7OQARYeHg4r903TENoCdU+Dh8PSnfz+8lNh
7vN0uLRpbji/P0ze06FsmmRqQxosfrwcdNKYMrtOQuO7wcuhe9emNZOmKUHl
vR2mM81dItSpcgAAlfu2fg==
         "]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQYNPg6ri4L+M8eqHYAI+DocuB/xd+MDFQi/wdfB
7Nln5tBGJai8nwPDGYWS40yyUHk/hw4fGeONnvJQeX+HQwp7JJaaKkLl/R02
pJ9muLlYGiof4JDOu+5/srQEhO8Q4LBxvd5Rvm5xqPoAh0uXrz9RcBaF8A8E
OCziPGf35ANUPUOgQ9H+jB1b9itD9Qc6rGR9Z9XAogrVH+gwrZXlz34/qPoD
gQ4ha1kENeYLQ/UHOZwo/3jJPpALqj/IQV7n1YkjIQxQ/UEOcwXOXjT5JgDV
H+TAvyI/rGOGAlR/sMP7tWs+25XA7A92YLPXjhUNgvq/Idhho4G3T4SZGFR/
sMObsgvZGeqcUP0hDms7WSa++8UI1R/iMOm4oIPkMxao/hAHr8Siv75qogcA
lY57gw==
         "]], 
        LineBox[{{84., -5.3026934400485235`}, {85., -4.31310773497353}, {
         86., -3.523833843737873}, {87., -2.040778242673329}, {
         88., -2.147882453459981}, {89., -3.870928714970754}, {
         90., -3.949279164669514}, {91., -1.7572354214572286`}, {
         92., -0.9483029386434302}, {93., -0.30732417598732525`}, {94., 
         0.07790939824744283}, {95., -0.4209067657999711}, {
         96., -0.6861960696566143}, {97., -2.583631022206021}, {
         98., -0.8625843883253059}, {99., -1.0775599474522923`}}], 
        LineBox[{{105., -3.957827076492748}, {106., -2.7530807866610396`}, {
         107., -1.5548931030315496`}, {108., -0.2625925097592352}, {
         109., -1.7035508591313813`}, {110., -2.2287057207514533`}, {
         111., -2.13741537124544}, {112., -1.5595583604718417`}, {
         113., -1.0076643430001437`}, {114., 1.1149304485542395`}, {115., 
         0.6157927159243997}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQFxDq/+yL9cOO3bfjDXIc5BRCc88enqLxB+Q5xD
ZMwDRZezvyD8A3EOgTxr/uVWcxyA6I930GeIesAdJQThO8Q7GOpx8oo9hPIb
4h3+nup58HYhC4R/IN6hs2VfiKXnT4h5DAkO96QEpkRLf4fwFRIc1IITdRQY
X0Ldk+Cw5esO58ayvxB+QoKDgfGVsjf/ZaDmJzjI6a5duK9bHMJfkOAQErn0
pkS7ANS+BActh8nzUwSh7n2Q4CDDWP5HkZMX6v5EB6ULDYE38n9D7U906D/g
fuhe1X+o/YkOm/g/buY/yQdRn5DooFcvKfIvVARqf6LDw+wjfvd7oeYtSHT4
OcssdMslBqj9iQ5rH8jGnpB8BDHvQaLDG/O1XfHVx+0BDMh72w==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{15., 1.9688505506547915`}, {16., 0.40089273105009837`}, {
         17., -0.37253823364082467`}, {18., -4.507670242042855}, {
         19., -8.592412926557037}, {20., -6.949572141256829}, {
         21., -6.307857649979331}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQHmDro779k4OkocgPAtHHL3sxzinCgG5Vs6BD0/
VlL1XwrKt3LYc3Dl3jZhBSjf2qGUMVOeMUQFyrdxkEw++S45QgnKt3XwsFx3
5JayPJRv57B5iXhZ7CIZKN/eoZCzMu7vbJj9Dg57tlhKJ7hB5RscHKpufJhp
fkkNKu/okLTjbsAVfWWovKODzKOYh188FaHyTg6Jx2Kuh38Xgco7OQRMnbUi
8agoVN7ZYdeqyvcvlYWh8s4Or969EL36Shoq7+LAsmRNvNdKOai8i4NQz9ov
3n9lofKuDj87kmtOWEPd2+DqYNbhxzPnMix83BxyjvRxrLgqCZV3c5iR9N2m
e6ogVN7dYXvK9wsTX3IfAABeoHKx
         "]], 
        LineBox[{{57., -7.163269465697897}, {58., -6.978958933935044}, {
         59., -7.458114661852318}, {60., -6.107631897143257}, {
         61., -6.211133512952387}}], 
        LineBox[{{63., -5.398177710902888}, {64., -5.030397032751962}, {
         65., -6.102373889909864}, {66., -5.389778425407575}, {
         67., -6.544677437496377}, {68., -8.653170710731986}, {
         69., -9.394943117756545}, {70., -4.520913268869657}, {
         71., -3.4254771597077505`}, {72., -3.2424087329898317`}, {
         73., -2.307419416824378}, {74., -6.343768579391066}, {
         75., -6.424414412979388}}], 
        LineBox[{{77., -5.921129147371409}, {78., -5.701391338848464}, {
         79., -4.006760249922987}}], 
        LineBox[{{81., -2.406744040391631}, {82., -3.9910164427603667`}, {
         83., -5.724667099790017}, {84., -4.046666634199283}}], 
        LineBox[{{92., 0.3276730419662174}, {93., 0.9241819546459908}}], 
        LineBox[{{122., -0.779303397758853}, {123., -2.7267109574574517`}}], 
        LineBox[{{125., -2.3552673466492786`}, {126., -1.0649595660082372`}, {
         127., -1.1998870967026403`}, {128., -0.9655984682615987}, {
         129., -1.0866563754240175`}, {130., -2.040172748302766}, {
         131., -6.06862252707942}, {132., -4.978965269797792}, {
         133., -2.3074115283675973`}, {134., -3.0114180976696034`}, {
         135., -4.652442560459369}, {136., -1.684130884097699}}], 
        LineBox[{{138., -1.4082372656991633`}, {139., -4.263654511804333}, {
         140., -3.435395045613265}, {141., -1.8154160379185242`}, {
         142., -0.24900496174979175`}, {
         143., -0.2583839530253313}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.25, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {12.333333333333334`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{12.333333333333334`, 143.}, {-12.897715395836084`, 
      1.9688505506547915`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{{15, 
         FormBox[
          RotationBox["\"Wed 22 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {19, 
         FormBox[
          RotationBox["\"Sun 26 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {23, 
         FormBox[
          RotationBox["\"Thu 30 Nov\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {27, 
         FormBox[
          RotationBox["\"Mon 4 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {31, 
         FormBox[
          RotationBox["\"Fri 8 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {35, 
         FormBox[
          RotationBox["\"Tue 12 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {39, 
         FormBox[
          RotationBox["\"Sat 16 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {43, 
         FormBox[
          RotationBox["\"Wed 20 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {47, 
         FormBox[
          RotationBox["\"Sun 24 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {51, 
         FormBox[
          RotationBox["\"Thu 28 Dec\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {55, 
         FormBox[
          RotationBox["\"Mon 1 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {59, 
         FormBox[
          RotationBox["\"Fri 5 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {63, 
         FormBox[
          RotationBox["\"Tue 9 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {67, 
         FormBox[
          RotationBox["\"Sat 13 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {71, 
         FormBox[
          RotationBox["\"Wed 17 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {75, 
         FormBox[
          RotationBox["\"Sun 21 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {79, 
         FormBox[
          RotationBox["\"Thu 25 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {83, 
         FormBox[
          RotationBox["\"Mon 29 Jan\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {87, 
         FormBox[
          RotationBox["\"Fri 2 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {91, 
         FormBox[
          RotationBox["\"Tue 6 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {95, 
         FormBox[
          RotationBox["\"Sat 10 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {99, 
         FormBox[
          RotationBox["\"Wed 14 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {103, 
         FormBox[
          RotationBox["\"Sun 18 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {107, 
         FormBox[
          RotationBox["\"Thu 22 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {111, 
         FormBox[
          RotationBox["\"Mon 26 Feb\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {115, 
         FormBox[
          RotationBox["\"Fri 1 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {119, 
         FormBox[
          RotationBox["\"Tue 5 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {123, 
         FormBox[
          RotationBox["\"Sat 9 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {127, 
         FormBox[
          RotationBox["\"Wed 13 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {131, 
         FormBox[
          RotationBox["\"Sun 17 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {135, 
         FormBox[
          RotationBox["\"Thu 21 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {139, 
         FormBox[
          RotationBox["\"Mon 25 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {143, 
         FormBox[
          RotationBox["\"Fri 29 Mar\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"ovi\"", "\"PK\"", "\"Oktopusz\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9278097774751415`*^9, {3.92780985192288*^9, 3.9278100103450017`*^9}, 
   3.9278101159892635`*^9, 3.927810588711115*^9, 3.927811271811715*^9, 
   3.927811616238203*^9, 3.9278124305753593`*^9, {3.9278127409753437`*^9, 
   3.9278127629201746`*^9}, 3.927869641507431*^9, 3.9278698234838996`*^9, 
   3.927869896259491*^9, 3.9278699617509623`*^9, {3.9278700801925*^9, 
   3.9278700972792287`*^9}, {3.927870253913789*^9, 3.927870282362115*^9}, 
   3.9278703797007046`*^9, 3.9278704558923173`*^9, 3.9278705354244776`*^9, 
   3.9278706073230314`*^9, 3.9278708876614003`*^9, 3.9278711557760887`*^9, 
   3.927871234971797*^9, 3.9279512428456917`*^9, 3.9279517509873734`*^9, 
   3.927952156227178*^9, 3.9279522615580626`*^9, 3.927952363491702*^9, 
   3.9279525688310175`*^9, 3.9279526711486025`*^9, 3.9279530992324934`*^9, 
   3.928296929868888*^9, {3.9283066473158937`*^9, 3.9283066514606056`*^9}, 
   3.9283067463001623`*^9, 3.928307204688322*^9, 3.9283079001965995`*^9, 
   3.9283080015335746`*^9, 3.928313129255192*^9, 3.9283143888277073`*^9, 
   3.9283229337516856`*^9, 3.9283229878510895`*^9, 3.928323071530594*^9, 
   3.92832313385536*^9, 3.9283252432230597`*^9, 3.9283275961530905`*^9, 
   3.928329052589297*^9, 3.9283310178849335`*^9, {3.9283347410591664`*^9, 
   3.9283347506627326`*^9}, 3.928335648828946*^9, 3.928336044884863*^9},
 CellLabel->"Out[2420]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["heat vs temp (cost vs performance)",
 FontWeight->"Plain"]], "Subsubsubsubsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894638955564`*^9, 3.9277894722932825`*^9}, {3.9277920725278845`*^9, 
   3.927792075686753*^9}, {3.927799788041006*^9, 3.927799836982658*^9}, {
   3.928308657961184*^9, 3.9283086642810345`*^9}, {3.9283087232127094`*^9, 
   3.928308723786074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"simulatedVsTrueHeatStockDailyForCycleByRoom", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"simulatedSeasonForCycle", "[", 
               RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"roomN", ",", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                   RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                  RowBox[{"[", "heatLossOrGain", "]"}], "]"}], "]"}]}], "}"}],
               "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"roomN", ",", "1", ",", 
                RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], 
             "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{"heatLossOrGain", ",", "1", ",", "2"}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"simulatedDay", ",", "1", ",", 
          RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
       "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"dayN", ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "roomsOnCycle", "]"}], "]"}], ",", 
             RowBox[{"100", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"heatStockDaily", "[", 
                  RowBox[{"[", "cycle", "]"}], "]"}], "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], 
              RowBox[{"roomHeatTakeupRatios", "[", 
               RowBox[{"[", "roomsOnCycle", "]"}], "]"}]}]}], "}"}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dayN", ",", "startDayN", ",", "endDayN"}], "}"}]}], "]"}], 
      "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"simulatedDailyTempDivergenceVsTrueDivergenceForCycle", "=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"simulatedSeasonForCycle", "[", 
           RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
              "]"}], "&"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Select", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "-", 
                   
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}], "+", 
                   
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", "t", "]"}]}]}], 
                 "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", 
                  RowBox[{
                   RowBox[{"24", " ", "60"}], "-", "5"}], ",", "5"}], "}"}]}],
                "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Between", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", "]"}], "==", "False"}], "&"}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
               RowBox[{"roomTempsDaily", "[", 
                RowBox[{"[", 
                 RowBox[{"roomsOnCycle", "[", 
                  RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"simulatedSeasonForCycle", "[", 
                   RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "!=", 
             "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                "]"}], "&"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Select", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"roomTempsDaily", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomsOnCycle", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"simulatedSeasonForCycle", "[", 
                    RowBox[{"[", "simulatedDay", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]",
                   "}"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Between", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ";;", "3"}], "]"}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}], "==", "False"}], "&"}]}], 
               "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"roomN", ",", "1", ",", 
            RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"simulatedDay", ",", "1", ",", 
        RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"heatVsTempSimulatedVsTrue", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Map", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Transpose", "[", "#", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", "&"}], 
           ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"simulatedVsTrueHeatStockDailyForCycleByRoom", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"simulatedVsTrueHeatStockDailyForCycleByRoom", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "[", 
                RowBox[{"[", "dayN", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}],
             "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "simulatedDailyTempDivergenceVsTrueDivergenceForCycle", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "roomN", "]"}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Mean", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "simulatedDailyTempDivergenceVsTrueDivergenceForCycle", "[", 
                 RowBox[{"[", "dayN", "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "roomN", "]"}], "]"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"roomN", ",", "1", ",", 
             RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}]}],
         "\[IndentingNewLine]", "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"dayN", ",", "1", ",", 
        RowBox[{"Length", "[", "simulatedSeasonForCycle", "]"}]}], "}"}]}], 
     "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{"{", "}"}], "]"}], "->", "Missing"}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Plot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"0", "x"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "6000"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "6"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Black", ",", "Red"}], "}"}], "[", 
             RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Point", "[", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Mean", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"[", "heatOrTemp", "]"}], "]"}], "[", 
                    RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], "&"}], ",", 
                    "heatVsTempSimulatedVsTrue"}], "]"}], ",", "NumberQ"}], 
                 "]"}], "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"heatOrTemp", ",", "1", ",", "2"}], "}"}]}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"EdgeForm", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Dashed", ",", "Black"}], "}"}], ",", "Red"}], "}"}],
               "[", 
              RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Ellipsoid", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Mean", "[", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"[", "heatOrTemp", "]"}], "]"}], "[", 
                    RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], "&"}], ",", 
                    "heatVsTempSimulatedVsTrue"}], "]"}], ",", "NumberQ"}], 
                  "]"}], "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"heatOrTemp", ",", "1", ",", "2"}], "}"}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"10", 
                 RowBox[{
                  RowBox[{"GetMeanAndSEM", "[", 
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "roomN", "]"}], "]"}], "[", 
                    RowBox[{"[", "heatOrTemp", "]"}], "]"}], "[", 
                    RowBox[{"[", "simulatedOrTrue", "]"}], "]"}], "&"}], ",", 
                    "heatVsTempSimulatedVsTrue"}], "]"}], ",", "NumberQ"}], 
                    "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"heatOrTemp", ",", "1", ",", "2"}], "}"}]}], "]"}]}],
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"simulatedOrTrue", ",", "1", ",", "2"}], "}"}]}], "]"}], 
        "\[IndentingNewLine]", "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "200"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"roomNames", "[", 
        RowBox[{"[", 
         RowBox[{"roomsOnCycle", "[", 
          RowBox[{"[", "roomN", "]"}], "]"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"roomN", ",", "1", ",", 
      RowBox[{"Length", "[", "roomsOnCycle", "]"}]}], "}"}]}], "]"}], "//", 
  "Row"}]}], "Input",
 CellChangeTimes->{{3.9283087460547543`*^9, 3.9283087804830065`*^9}, {
   3.9283093294799194`*^9, 3.928309362497695*^9}, {3.9283095689901752`*^9, 
   3.928309572791573*^9}, 3.928309642612342*^9, {3.928312263655326*^9, 
   3.928312268275815*^9}, 3.928312433520756*^9, {3.9283238886692915`*^9, 
   3.928323890006464*^9}},
 CellLabel->"In[2421]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{1753.58626782616, -2.2792410447014766`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{1753.58626782616, -2.2792410447014766`}, {
           678.8589377499936, 3.02901846159394}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{2740.890550988089, 1.232101078987126}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{2740.890550988089, 1.232101078987126}, {
           1683.0888549684123`, 1.5929182637272574`}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ovi\"", TraditionalForm], PlotRange -> {{0, 6000}, {-2, 6}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{1270.780290785243, -4.6862387309684435`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{1270.780290785243, -4.6862387309684435`}, {
           498.38511501751657`, 3.521561453880248}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{1972.1158419811413`, 1.4377104777581629`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{1972.1158419811413`, 1.4377104777581629`}, {
           1211.0101197395566`, 1.758983898265864}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"PK\"", TraditionalForm], PlotRange -> {{0, 6000}, {-2, 6}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxN0AssFHAcwPE7NMo60cOOjp2ovGKSkkrFIo+aw2R5TUjXC9lKq+naneQR
azcp70dKN47cWeXEuGmZ9xHq3HEuHXdem2O0XLXV7+e//fffZ9///vvvR42+
SYvVIhAI/n/239MnVtHfOh18gvBvMfQa9j0ms93/+0JoGXdhsRKsr2GEeZlx
wVYBc4r2TB74do+re/7Se7Axz1BCJLaAG2UeXb3H2sBt9CLTUJUQrN573KDm
+iew1ipnm6lVJ9hFE9UYWNsF7mI693TY9ILNc5Wr1XN9YOWKVDLkOACunGnq
JD0RgUmUV/Ny+SA46wo/rtTyC3j5JEcenzoMTnYS8na1j4CltcLMfupX8E/6
YIH13W9g21O663FNYrBXOfVyvbEE50WJtJgIk4LtVMH6w/7j4O0GC3rCNbRO
SwF3T+EE+Kpz0+hmXxmYcza69OMyWq002TaVNwnmB3ppsz3l4FRvVglvCk0d
8xmpYH0HHz3MZJOdpsBhZr2rRBFa3ZktS2D8AOfrRCTTLBX4fwm/XEuI3nSf
EeSaOA0mVEdwZUYz4KQX3GyjNnSzbbqe4Q0l2NAnye4hSQUW2/eJUgToumJ3
S3nELDic62JIWUc/YJUxxG/mwDUKSgHJbx78zFxfrdGgS3eeT8sgM8EWzB3e
ulXYxxweeWSTk8HxLs8Xt6RgF/fnFGuL0CExK81PyTHgjJyLHVnR2DU2tFss
AfrDne7PjGm0b/fw2yJyEHi3QFDnH4I9N6Qh/Ez9hvsvD/BOS9D7/a5JW5fQ
B0vyCxvInuAY2qxVbQD20dnJgSoOmu0WaV0xgk6UFQZR59HjfDd61Bpax8Mk
QUp2BqcXsaIk57CvH7m3dfg1+l3ayiXREDrP/lBOgGrDe8TBytwVtIBe4eD4
C/0bN58+Hw==
      "], {}], {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 1, 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {{{
         GrayLevel[0], 
         PointBox[{2158.3358813129994`, 0.06816496667704786}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[{
           Dashing[{Small, Small}], 
           GrayLevel[0]}], 
         TagBox[
          
          DiskBox[{2158.3358813129994`, 0.06816496667704786}, {
           990.1880524602793, 3.1447567419077807`}], "Ellipsoid"]}, {
         RGBColor[1, 0, 0], 
         PointBox[{3401.8397344926034`, 1.9722876023396088`}], 
         RGBColor[0, 0, 0, 0], 
         EdgeForm[
          RGBColor[1, 0, 0]], 
         TagBox[
          
          DiskBox[{3401.8397344926034`, 1.9722876023396088`}, {
           2088.9555555033485`, 2.948286444579044}], "Ellipsoid"]}}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Oktopusz\"", TraditionalForm], 
     PlotRange -> {{0, 6000}, {-2, 6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.9283311085634623`*^9, 3.9283347591535244`*^9, 
  3.9283356604618006`*^9, 3.9283360488802986`*^9},
 CellLabel->"Out[2424]="]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell["fejleszt\[EAcute]s", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894059004097`*^9, 3.927789408165224*^9}, 3.927796369298359*^9, {
   3.927872160549984*^9, 3.927872162894493*^9}, {3.9278722161961384`*^9, 
   3.927872218743376*^9}, {3.9283062129003286`*^9, 3.92830622359263*^9}}],

Cell["sp\[OAcute]rol\[AAcute]s", "Subsection",
 CellChangeTimes->{{3.926613683393323*^9, 3.926613694945243*^9}, {
   3.926614314851247*^9, 3.9266143149949617`*^9}, 3.9266162338715115`*^9, {
   3.926617860019246*^9, 3.926617860116063*^9}, {3.9266208669001484`*^9, 
   3.9266208677640996`*^9}, {3.926621972710145*^9, 3.926621974949294*^9}, {
   3.9266534960794673`*^9, 3.926653497230711*^9}, {3.92665443598334*^9, 
   3.9266544370872717`*^9}, {3.9268594867257285`*^9, 3.926859487269987*^9}, {
   3.9268596910938654`*^9, 3.926859696924652*^9}, {3.92712443745432*^9, 
   3.927124439918083*^9}, {3.9271244735867352`*^9, 3.927124476138006*^9}, {
   3.9273071950781*^9, 3.927307208933946*^9}, {3.9273072904541864`*^9, 
   3.927307312677514*^9}, {3.9277876678281803`*^9, 3.9277876881838317`*^9}, {
   3.9277894059004097`*^9, 3.927789408165224*^9}, 3.927796369298359*^9, {
   3.927872160549984*^9, 3.927872162894493*^9}, {3.9278722161961384`*^9, 
   3.927872218743376*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 615.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
WindowStatusArea->"futes.nb last backed up to futes.nb~ on Wed 26 Jun 2024 at \
5:40:13 PM",
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 147, 2, 70, "Chapter",ExpressionUUID->"c1644f7e-bc7d-4226-935b-5d60fe05dcdf"],
Cell[730, 26, 564, 15, 70, "Input",ExpressionUUID->"8d98609d-bb11-4ea9-983f-944e56f3c19a",
 InitializationCell->True],
Cell[1297, 43, 1863, 46, 70, "Input",ExpressionUUID->"e7454670-54a9-4fde-9264-4ce95c79ed96",
 InitializationCell->True],
Cell[3163, 91, 1003, 26, 70, "Input",ExpressionUUID->"934d5029-fd9f-4ebe-9c8a-6edf2b4716fc",
 InitializationCell->True],
Cell[4169, 119, 304, 8, 70, "Input",ExpressionUUID->"365e87e7-ac27-4bc9-9b85-dac74a551408",
 InitializationCell->True],
Cell[4476, 129, 1395, 37, 70, "Input",ExpressionUUID->"14877f99-239e-4edf-b9c1-2325e88e837b",
 InitializationCell->True],
Cell[5874, 168, 642, 18, 70, "Input",ExpressionUUID->"22e6dbd5-e632-47e5-82ad-181e906d9160",
 InitializationCell->True],
Cell[6519, 188, 5734, 148, 70, "Input",ExpressionUUID->"b4bf70db-f2e3-4a1c-865e-e33ca1975872",
 InitializationCell->True],
Cell[12256, 338, 2512, 60, 70, "Input",ExpressionUUID->"6f54741c-df71-4467-b4a3-7245e191e5fa",
 InitializationCell->True],
Cell[14771, 400, 649, 15, 70, "Input",ExpressionUUID->"e2d6d72a-bc61-4081-88a5-8b9dcf74bb1e",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[15457, 420, 91, 1, 70, "Chapter",ExpressionUUID->"237deabd-50d6-4cc8-98b8-4faccfd72df9"],
Cell[CellGroupData[{
Cell[15573, 425, 102, 1, 70, "Section",ExpressionUUID->"b759ff27-289d-4b70-9494-98ec3a407c2a"],
Cell[15678, 428, 1838, 45, 70, "Input",ExpressionUUID->"f45996fd-7e66-411d-8f79-22e572b5d9fa"],
Cell[17519, 475, 566, 13, 70, "Input",ExpressionUUID->"942e7810-26e6-4518-9ec3-6e2b0de3f54d"],
Cell[18088, 490, 279, 7, 70, "Input",ExpressionUUID->"1092995b-1b79-4243-8cbd-151b9dd9fb04"],
Cell[18370, 499, 1369, 36, 70, "Input",ExpressionUUID->"933069f7-8e68-4f91-8561-4c61f391fa0c"],
Cell[19742, 537, 275, 7, 70, "Input",ExpressionUUID->"6c8dcd40-87a2-4f53-8b72-f5e8e6045115"],
Cell[20020, 546, 288, 7, 70, "Input",ExpressionUUID->"81a290c5-5492-427d-bef2-24d09f0b3b62"],
Cell[CellGroupData[{
Cell[20333, 557, 15192, 360, 70, "Input",ExpressionUUID->"8863155a-3932-4a15-a98a-3a7994130823"],
Cell[35528, 919, 11548, 208, 70, "Output",ExpressionUUID->"09417619-9bad-43a8-9694-617f9b25b072"],
Cell[47079, 1129, 302, 7, 70, "Message",ExpressionUUID->"b6f863d4-7605-4945-a139-b7a4b100ae81"],
Cell[47384, 1138, 432, 9, 70, "Message",ExpressionUUID->"0cb76a9a-fdd8-486d-87c3-32b573bb032f"],
Cell[47819, 1149, 482, 10, 70, "Message",ExpressionUUID->"f717e623-ef2b-44b2-a9b0-0de14c3a2957"],
Cell[48304, 1161, 484, 10, 70, "Message",ExpressionUUID->"2893995b-85c4-41a4-a288-aa816a236fac"],
Cell[48791, 1173, 367, 8, 70, "Message",ExpressionUUID->"9a9915f0-611c-4375-8a9b-1752e244569f"],
Cell[49161, 1183, 322, 8, 70, "Message",ExpressionUUID->"78ef9250-87d9-4f32-b4b3-7af60e765f7e"],
Cell[49486, 1193, 322, 8, 70, "Message",ExpressionUUID->"e28cde1e-3ca5-49d7-8f5d-e68d7cb97291"],
Cell[49811, 1203, 324, 8, 70, "Message",ExpressionUUID->"878c6aaa-9bf8-4786-af17-0637dcb84ef8"],
Cell[50138, 1213, 363, 8, 70, "Message",ExpressionUUID->"e66400b9-0744-4883-923a-8576a1dad424"],
Cell[50504, 1223, 332, 8, 70, "Message",ExpressionUUID->"9c700f23-e4b0-47d2-bdd0-8aee8da203e1"],
Cell[50839, 1233, 471, 10, 70, "Message",ExpressionUUID->"3e20f582-448e-4f53-a1a8-f82d30f543b8"],
Cell[51313, 1245, 332, 8, 70, "Message",ExpressionUUID->"cfa3cd81-bc30-4b0c-9d91-73c3a209aa92"],
Cell[51648, 1255, 361, 8, 70, "Message",ExpressionUUID->"6cc486cb-a4e8-4f2c-a08c-9a1b2b05a78e"],
Cell[52012, 1265, 469, 10, 70, "Message",ExpressionUUID->"ae7420e3-ffba-41ed-82bf-f46bf23b4fd3"],
Cell[52484, 1277, 471, 10, 70, "Message",ExpressionUUID->"fd80786e-ed36-4df8-9913-197e137a82e8"],
Cell[52958, 1289, 362, 8, 70, "Message",ExpressionUUID->"43c097f4-965e-4d57-94e0-3791f8757c42"],
Cell[53323, 1299, 303, 7, 70, "Message",ExpressionUUID->"dd56357b-e8f7-444f-a196-6ebef96ba151"],
Cell[53629, 1308, 432, 9, 70, "Message",ExpressionUUID->"a1d6945d-0209-494e-b83c-e5f7f0e75ef8"],
Cell[54064, 1319, 487, 10, 70, "Message",ExpressionUUID->"406a3967-2230-4740-8309-9cdd056c9ad8"],
Cell[54554, 1331, 485, 10, 70, "Message",ExpressionUUID->"e7f147ff-e9b3-4952-b033-53c640ee2eae"],
Cell[55042, 1343, 370, 8, 70, "Message",ExpressionUUID->"76313f86-b73b-4d4b-b79e-ac415a6d8a9a"],
Cell[55415, 1353, 327, 8, 70, "Message",ExpressionUUID->"ef59c374-b35c-492b-b62b-29a73079041e"],
Cell[55745, 1363, 327, 8, 70, "Message",ExpressionUUID->"276f5138-0ef4-4a5f-8f38-9c208e435254"],
Cell[56075, 1373, 325, 8, 70, "Message",ExpressionUUID->"46a8f9c8-a8c1-4d19-99a8-7ef823a36d4a"],
Cell[56403, 1383, 366, 8, 70, "Message",ExpressionUUID->"b5d80148-2f18-41d6-9154-da7f87b69bb1"],
Cell[56772, 1393, 334, 8, 70, "Message",ExpressionUUID->"05bfc449-64d1-4dae-8e89-1450bb7064aa"],
Cell[57109, 1403, 473, 10, 70, "Message",ExpressionUUID->"9a271ca5-1bd5-48f9-8948-506aced3cba8"],
Cell[57585, 1415, 336, 8, 70, "Message",ExpressionUUID->"90fc6c77-bd0f-4576-af15-fbc340b26393"],
Cell[57924, 1425, 365, 8, 70, "Message",ExpressionUUID->"3ce45e2d-340e-49aa-bfa1-f6d507cd986a"],
Cell[58292, 1435, 473, 10, 70, "Message",ExpressionUUID->"51345da1-52d7-4efc-a1ad-f5c205af9936"],
Cell[58768, 1447, 471, 10, 70, "Message",ExpressionUUID->"8d33e8c0-8b3e-44fe-8417-e5715ef8bdea"],
Cell[59242, 1459, 364, 8, 70, "Message",ExpressionUUID->"c32af34f-bbd6-4b52-976c-84b0a55a6e9f"],
Cell[59609, 1469, 300, 7, 70, "Message",ExpressionUUID->"becdf67f-d897-415c-9c84-48f407e98317"],
Cell[59912, 1478, 432, 9, 70, "Message",ExpressionUUID->"c4b747dc-c8a3-40c8-90a8-eb02ffca100c"],
Cell[60347, 1489, 484, 10, 70, "Message",ExpressionUUID->"0140c272-6682-4eab-ab51-c0fb1f543770"],
Cell[60834, 1501, 482, 10, 70, "Message",ExpressionUUID->"6cb09940-b69b-4be5-bf51-33e9566da339"],
Cell[61319, 1513, 367, 8, 70, "Message",ExpressionUUID->"4995fd20-048a-4a39-91ff-c7e36053be5f"],
Cell[61689, 1523, 324, 8, 70, "Message",ExpressionUUID->"0b9f7560-54a5-47aa-92fc-8ac050b51d01"],
Cell[62016, 1533, 324, 8, 70, "Message",ExpressionUUID->"b7100e68-a4b7-4892-b90e-0badbb17a54f"],
Cell[62343, 1543, 321, 8, 70, "Message",ExpressionUUID->"40328699-09a5-49d2-b605-144b6e9d33e4"],
Cell[62667, 1553, 364, 8, 70, "Message",ExpressionUUID->"d76bb7d6-3bc5-4384-8640-7217f4dfdfdb"],
Cell[63034, 1563, 332, 8, 70, "Message",ExpressionUUID->"60d827fd-2959-4687-9aed-3469434233e0"],
Cell[63369, 1573, 469, 10, 70, "Message",ExpressionUUID->"63377ae2-2966-4be3-a3da-3e213e85e418"],
Cell[63841, 1585, 334, 8, 70, "Message",ExpressionUUID->"84925538-8090-4187-b50f-69fa9313b9e2"],
Cell[64178, 1595, 363, 8, 70, "Message",ExpressionUUID->"329ce8ef-b6a4-4e01-b877-0ac35e9c5bd8"],
Cell[64544, 1605, 471, 10, 70, "Message",ExpressionUUID->"fc69ba88-5376-4922-bab7-04617e0c2bb1"],
Cell[65018, 1617, 469, 10, 70, "Message",ExpressionUUID->"da89375d-65de-406f-a496-561648e776dc"],
Cell[65490, 1629, 362, 8, 70, "Message",ExpressionUUID->"0d45fe6d-0ae4-4d9f-ba06-df7904d1364c"],
Cell[65855, 1639, 300, 7, 70, "Message",ExpressionUUID->"a6423950-b6f6-4ce1-b650-03afa4ded533"],
Cell[66158, 1648, 432, 9, 70, "Message",ExpressionUUID->"81b87c52-223d-4ce7-8f0f-17b71d1905a4"],
Cell[66593, 1659, 484, 10, 70, "Message",ExpressionUUID->"ae2feefe-619d-471f-8a97-a12b3035565e"],
Cell[67080, 1671, 484, 10, 70, "Message",ExpressionUUID->"c9b3ac6c-96cd-4eef-a12b-4c87e5d5e110"],
Cell[67567, 1683, 367, 8, 70, "Message",ExpressionUUID->"d774d985-f9c2-4c98-b859-ccda8bcad278"],
Cell[67937, 1693, 322, 8, 70, "Message",ExpressionUUID->"9a59f34e-3083-4dee-9545-3398e350b0a3"],
Cell[68262, 1703, 324, 8, 70, "Message",ExpressionUUID->"5056e417-e9c9-47ed-849e-a5aada33d27e"],
Cell[68589, 1713, 324, 8, 70, "Message",ExpressionUUID->"cc7bc0b7-d7e2-4e09-a62c-d166501fe77c"],
Cell[68916, 1723, 364, 8, 70, "Message",ExpressionUUID->"269fc74f-5b58-40b0-a8d6-51c74d8e09e2"],
Cell[69283, 1733, 332, 8, 70, "Message",ExpressionUUID->"28e2b4a5-5c9e-4b95-a1f2-e3e1517381b5"],
Cell[69618, 1743, 469, 10, 70, "Message",ExpressionUUID->"f7a31d70-4933-4179-ad4a-848bbb03f874"],
Cell[70090, 1755, 332, 8, 70, "Message",ExpressionUUID->"373992a8-f20e-4ac3-9996-608dd2247d05"],
Cell[70425, 1765, 361, 8, 70, "Message",ExpressionUUID->"9c99846c-127e-4dbf-b6f9-0a876231c8bc"],
Cell[70789, 1775, 469, 10, 70, "Message",ExpressionUUID->"5f6a1b60-7ce3-414b-b63e-0f8b28132a08"],
Cell[71261, 1787, 469, 10, 70, "Message",ExpressionUUID->"26392350-3e2c-4060-820d-8f9aaef013a6"],
Cell[71733, 1799, 362, 8, 70, "Message",ExpressionUUID->"7910c499-ec39-416e-b803-bb45de02a38b"],
Cell[72098, 1809, 300, 7, 70, "Message",ExpressionUUID->"1514d337-4fd8-4e5a-873e-748c410a7ae7"],
Cell[72401, 1818, 430, 9, 70, "Message",ExpressionUUID->"f54a3b5d-150d-4e00-a455-1258068bab89"],
Cell[72834, 1829, 484, 10, 70, "Message",ExpressionUUID->"bedcce59-5d52-40bc-9092-1b62e0284c0f"],
Cell[73321, 1841, 482, 10, 70, "Message",ExpressionUUID->"d74d7f0f-67ce-422c-a218-3fe74d12ee49"],
Cell[73806, 1853, 367, 8, 70, "Message",ExpressionUUID->"1695291b-427b-404a-8028-ba5ab81bd8ad"],
Cell[74176, 1863, 324, 8, 70, "Message",ExpressionUUID->"3772a5dd-4185-477b-a38c-5ea9d3eb4a7a"],
Cell[74503, 1873, 322, 8, 70, "Message",ExpressionUUID->"e8294bfc-a6ad-4a13-a8d9-0004d54a48a0"],
Cell[74828, 1883, 322, 8, 70, "Message",ExpressionUUID->"236b2408-1f6c-43de-a2fe-7e6dada1b507"],
Cell[75153, 1893, 364, 8, 70, "Message",ExpressionUUID->"4537488b-f54f-4cb9-86d8-b8bbe0007e02"],
Cell[75520, 1903, 334, 8, 70, "Message",ExpressionUUID->"62323589-e30a-48b6-adfe-2cf64109317f"],
Cell[75857, 1913, 469, 10, 70, "Message",ExpressionUUID->"14158296-e19d-44a1-9df5-dccc4264e863"],
Cell[76329, 1925, 334, 8, 70, "Message",ExpressionUUID->"025f270f-b655-4f5a-8d0e-95762d2b9c2e"],
Cell[76666, 1935, 361, 8, 70, "Message",ExpressionUUID->"8f11ce25-6c62-413b-87ba-01b9306a24b7"],
Cell[77030, 1945, 469, 10, 70, "Message",ExpressionUUID->"719f513f-b0e2-404b-a0f8-2756ce7efd2e"],
Cell[77502, 1957, 469, 10, 70, "Message",ExpressionUUID->"34b09b44-de14-49bd-97d4-acb23a449f3b"],
Cell[77974, 1969, 360, 8, 70, "Message",ExpressionUUID->"62e13ebe-410f-44a4-ae21-d0eefb929096"],
Cell[78337, 1979, 302, 7, 70, "Message",ExpressionUUID->"082c5894-e55e-4cf5-90e1-202dacdfee7f"],
Cell[78642, 1988, 430, 9, 70, "Message",ExpressionUUID->"2113a89b-7f5f-4130-af43-3e71028faba2"],
Cell[79075, 1999, 484, 10, 70, "Message",ExpressionUUID->"58296452-8c9f-4c96-a329-f0f005099064"],
Cell[79562, 2011, 482, 10, 70, "Message",ExpressionUUID->"b1ed780a-81cd-4b82-9da8-0c1bfb3c8149"],
Cell[80047, 2023, 367, 8, 70, "Message",ExpressionUUID->"821d2c1e-d401-4129-be22-f4fb3925bfeb"],
Cell[80417, 2033, 322, 8, 70, "Message",ExpressionUUID->"cdfd668f-1bcb-4739-8304-1a6f0556e320"],
Cell[80742, 2043, 322, 8, 70, "Message",ExpressionUUID->"58ff14cd-360a-4d29-9ead-671fbd5aa7df"],
Cell[81067, 2053, 324, 8, 70, "Message",ExpressionUUID->"e06d1e21-6056-4d80-933d-df8eb08d2346"],
Cell[81394, 2063, 364, 8, 70, "Message",ExpressionUUID->"79e1664a-c6ba-44d4-8ef1-4bedec737d23"],
Cell[81761, 2073, 334, 8, 70, "Message",ExpressionUUID->"d53a7b3b-66a5-4a9b-8c65-825f2d76844e"],
Cell[82098, 2083, 471, 10, 70, "Message",ExpressionUUID->"d1b3b0d6-707f-42e0-a4e3-e06f29e8f0a5"],
Cell[82572, 2095, 334, 8, 70, "Message",ExpressionUUID->"c8c4d60c-9405-4e06-a499-76b55829522c"],
Cell[82909, 2105, 361, 8, 70, "Message",ExpressionUUID->"52ea718f-b237-4656-a306-193458a72baa"],
Cell[83273, 2115, 469, 10, 70, "Message",ExpressionUUID->"654a0508-41e6-4c3e-87b5-afc3e5795513"],
Cell[83745, 2127, 469, 10, 70, "Message",ExpressionUUID->"a12ff9dd-f2a7-4915-a75b-f715f717e309"],
Cell[84217, 2139, 360, 8, 70, "Message",ExpressionUUID->"a420bbed-50a9-482b-ab62-18b8d05d3d43"],
Cell[84580, 2149, 303, 7, 70, "Message",ExpressionUUID->"417e3441-4584-4d51-8f13-76430e85b273"],
Cell[84886, 2158, 431, 9, 70, "Message",ExpressionUUID->"2949977d-fa29-4e2c-a7d3-09506f4625c5"],
Cell[85320, 2169, 483, 10, 70, "Message",ExpressionUUID->"755896a9-0e92-4ef8-8161-769196b69e3d"],
Cell[85806, 2181, 483, 10, 70, "Message",ExpressionUUID->"239957c7-b3f1-42c1-80f0-4e14f7abc5b8"],
Cell[86292, 2193, 368, 8, 70, "Message",ExpressionUUID->"400f57ac-5471-412a-8232-d1f35b72dcc4"],
Cell[86663, 2203, 323, 8, 70, "Message",ExpressionUUID->"1d1eba4c-5cb5-4665-8976-8bfdce2ea67f"],
Cell[86989, 2213, 325, 8, 70, "Message",ExpressionUUID->"d3a17cf6-deca-4ec1-ae86-a9e2ada6b92f"],
Cell[87317, 2223, 325, 8, 70, "Message",ExpressionUUID->"ba9ef578-4fba-4948-92a4-cdcba1fc17ad"],
Cell[87645, 2233, 365, 8, 70, "Message",ExpressionUUID->"8d299aa9-5450-4bfe-be16-8b2819ded276"],
Cell[88013, 2243, 335, 8, 70, "Message",ExpressionUUID->"9242009a-994d-4d3d-bb0d-17571112de29"],
Cell[88351, 2253, 470, 10, 70, "Message",ExpressionUUID->"1d14c3bb-fcbb-4fe2-a030-e50b0838d4b1"],
Cell[88824, 2265, 332, 8, 70, "Message",ExpressionUUID->"45dc0eb2-0067-410a-afe5-9abf447118e8"],
Cell[89159, 2275, 362, 8, 70, "Message",ExpressionUUID->"41f13296-c15e-4ee9-9cd7-09aa7dd1db03"],
Cell[89524, 2285, 472, 10, 70, "Message",ExpressionUUID->"e513e035-d35b-4216-a1f8-a13eb2e5687a"],
Cell[89999, 2297, 470, 10, 70, "Message",ExpressionUUID->"3cee2023-b634-4b96-99ea-1eaff514bd34"],
Cell[90472, 2309, 361, 8, 70, "Message",ExpressionUUID->"4dd4c270-76f8-4fb1-9f36-1aec3727b20a"],
Cell[90836, 2319, 300, 7, 70, "Message",ExpressionUUID->"78e03b8f-c689-4a32-80c2-157a10c398a4"],
Cell[91139, 2328, 432, 9, 70, "Message",ExpressionUUID->"b31fe4ae-445b-4d32-8cbc-5088bdab5d72"],
Cell[91574, 2339, 482, 10, 70, "Message",ExpressionUUID->"4baea7c7-6937-4888-9a7a-8c159446acd5"],
Cell[92059, 2351, 484, 10, 70, "Message",ExpressionUUID->"4e08beb5-79c8-4bd9-852a-db3ed51278f3"],
Cell[92546, 2363, 369, 8, 70, "Message",ExpressionUUID->"81d1c909-7bd9-42f4-8b7d-9495d99f2c05"],
Cell[92918, 2373, 322, 8, 70, "Message",ExpressionUUID->"fccbaa35-7359-421c-9cc6-ea1c9928639b"],
Cell[93243, 2383, 324, 8, 70, "Message",ExpressionUUID->"71231ce0-6806-4cd6-a378-1e22eb5ca681"],
Cell[93570, 2393, 324, 8, 70, "Message",ExpressionUUID->"b958f5ef-fff9-46f3-9407-5a3c970efe28"],
Cell[93897, 2403, 364, 8, 70, "Message",ExpressionUUID->"da41c322-c6f1-46e0-9845-1e2502134062"],
Cell[94264, 2413, 334, 8, 70, "Message",ExpressionUUID->"2a5585d4-fa3a-479a-bc2f-6ea08bde5388"],
Cell[94601, 2423, 471, 10, 70, "Message",ExpressionUUID->"201d2734-73ce-4494-9c27-8fcf7cea15c2"],
Cell[95075, 2435, 331, 8, 70, "Message",ExpressionUUID->"b98b3e15-6fa6-4905-9ff6-3ef4905d996d"],
Cell[95409, 2445, 361, 8, 70, "Message",ExpressionUUID->"71f60e46-72d6-428e-a6b6-fc3c88484b1f"],
Cell[95773, 2455, 469, 10, 70, "Message",ExpressionUUID->"82547771-8b66-425f-91f8-d9b0798b4ee8"],
Cell[96245, 2467, 469, 10, 70, "Message",ExpressionUUID->"a085177e-057e-4e1b-b8d9-eabedafba5b2"],
Cell[96717, 2479, 362, 8, 70, "Message",ExpressionUUID->"d7f10b17-70e9-4a70-8935-a0e301cc52e0"],
Cell[97082, 2489, 301, 7, 70, "Message",ExpressionUUID->"017ab15a-8a08-4417-95d5-a3fcd302e86d"],
Cell[97386, 2498, 431, 9, 70, "Message",ExpressionUUID->"4d1824ab-299f-4865-9da0-f7e68af216cc"],
Cell[97820, 2509, 481, 10, 70, "Message",ExpressionUUID->"ecbeccf0-9c58-4e9c-8a16-b64df13fcaee"],
Cell[98304, 2521, 483, 10, 70, "Message",ExpressionUUID->"8b2c235c-bf84-45b7-938b-0d909d046820"],
Cell[98790, 2533, 368, 8, 70, "Message",ExpressionUUID->"ded5c7cf-90c1-4c48-8f45-246cec205996"],
Cell[99161, 2543, 323, 8, 70, "Message",ExpressionUUID->"339345a5-6ec9-48a4-b201-c5c031d2e03e"],
Cell[99487, 2553, 323, 8, 70, "Message",ExpressionUUID->"62adde86-83ae-4d99-8414-abb01f3dd96a"],
Cell[99813, 2563, 323, 8, 70, "Message",ExpressionUUID->"114df822-2282-46b0-8e6d-4898f930903f"],
Cell[100139, 2573, 362, 8, 70, "Message",ExpressionUUID->"a099989b-cbef-4e2e-9a15-bcff280ba80d"],
Cell[100504, 2583, 333, 8, 70, "Message",ExpressionUUID->"b3d39fc4-bbfc-4650-8461-517435c84a8d"],
Cell[100840, 2593, 467, 10, 70, "Message",ExpressionUUID->"e5e699bd-035d-4177-8bcf-54fce510f6fb"],
Cell[101310, 2605, 333, 8, 70, "Message",ExpressionUUID->"2d4dbdfc-2241-4807-8316-abba250710dd"],
Cell[101646, 2615, 362, 8, 70, "Message",ExpressionUUID->"5e2e4328-96a3-4d9e-ba85-7a400007138e"],
Cell[102011, 2625, 470, 10, 70, "Message",ExpressionUUID->"812b9890-4b8e-4d03-8178-e18ed7a1123a"],
Cell[102484, 2637, 470, 10, 70, "Message",ExpressionUUID->"b18d21e0-ecc7-49f9-8a38-4f001ab6edd6"],
Cell[102957, 2649, 361, 8, 70, "Message",ExpressionUUID->"c4fc1cf6-45a2-414b-aeee-6c3daa8fe733"],
Cell[103321, 2659, 303, 7, 70, "Message",ExpressionUUID->"19344768-2344-45e2-95b1-c910c566cb11"],
Cell[103627, 2668, 435, 9, 70, "Message",ExpressionUUID->"aebccf51-5367-4173-b5f9-8f82e7daac0b"],
Cell[104065, 2679, 485, 10, 70, "Message",ExpressionUUID->"1dcfd94d-483c-4aa9-a99a-caeb6dfc2f7a"],
Cell[104553, 2691, 485, 10, 70, "Message",ExpressionUUID->"1045f1fd-b578-4e69-9c93-07adb48726ab"],
Cell[105041, 2703, 370, 8, 70, "Message",ExpressionUUID->"48a02573-c268-44ee-87a9-b0703a8fe98d"],
Cell[105414, 2713, 325, 8, 70, "Message",ExpressionUUID->"e2cb26e5-c8f5-4c09-a16e-c96fc4fab9b7"],
Cell[105742, 2723, 327, 8, 70, "Message",ExpressionUUID->"cbc1c2db-8950-4e34-9bfd-d0023a8d24ad"],
Cell[106072, 2733, 324, 8, 70, "Message",ExpressionUUID->"037c6b70-193b-467f-83dd-1521991dab4e"],
Cell[106399, 2743, 366, 8, 70, "Message",ExpressionUUID->"9fddf666-1adb-4aab-ab8a-60646aeed271"],
Cell[106768, 2753, 336, 8, 70, "Message",ExpressionUUID->"6aa869f7-d3f1-4fe9-ba1c-1d5df0df45bd"],
Cell[107107, 2763, 471, 10, 70, "Message",ExpressionUUID->"9d1c9b02-83b5-4c41-898a-310847d4cb59"],
Cell[107581, 2775, 336, 8, 70, "Message",ExpressionUUID->"2c735df7-b2ab-426b-8f9e-1577fc04d401"],
Cell[107920, 2785, 363, 8, 70, "Message",ExpressionUUID->"61d2be7b-4084-4c0c-ac5d-0d7b26f0ee90"],
Cell[108286, 2795, 471, 10, 70, "Message",ExpressionUUID->"0c81925c-ebdd-401f-a6bb-8fd6ce7251f3"],
Cell[108760, 2807, 473, 10, 70, "Message",ExpressionUUID->"b7ca747d-3a13-4eea-9172-e8d74b7eceae"],
Cell[109236, 2819, 361, 8, 70, "Message",ExpressionUUID->"382ba239-b132-4870-b078-d3755d2a0d0c"],
Cell[109600, 2829, 305, 7, 70, "Message",ExpressionUUID->"fd1c35b5-60bf-420c-9ae2-b2882a1dec90"],
Cell[109908, 2838, 435, 9, 70, "Message",ExpressionUUID->"0af20f86-6688-43b7-b542-a662b3a2c747"],
Cell[110346, 2849, 487, 10, 70, "Message",ExpressionUUID->"afa61488-7fcc-48d0-8741-212e5b43a846"],
Cell[110836, 2861, 487, 10, 70, "Message",ExpressionUUID->"cd3dcbdc-4b05-45e7-9475-37f6ab8a1156"],
Cell[111326, 2873, 372, 8, 70, "Message",ExpressionUUID->"d53bd05a-cfb5-4389-b5a7-9bd92a4fecfe"],
Cell[111701, 2883, 325, 8, 70, "Message",ExpressionUUID->"674c820d-dafc-49c1-8462-201baa52b123"],
Cell[112029, 2893, 327, 8, 70, "Message",ExpressionUUID->"40e494c6-cb40-4beb-b62e-ac17a25add38"],
Cell[112359, 2903, 324, 8, 70, "Message",ExpressionUUID->"570b570b-3b62-490d-b9f7-5f4b5f865996"],
Cell[112686, 2913, 363, 8, 70, "Message",ExpressionUUID->"b2475008-1c64-45a6-88de-f1c94328650f"],
Cell[113052, 2923, 333, 8, 70, "Message",ExpressionUUID->"c3c88161-8801-4998-b013-4c58376d957d"],
Cell[113388, 2933, 473, 10, 70, "Message",ExpressionUUID->"db53a0cb-1bb2-4f73-94ba-81b9e2d16885"],
Cell[113864, 2945, 336, 8, 70, "Message",ExpressionUUID->"4f5f3865-46f3-449d-bafb-ee685f8bd2b1"],
Cell[114203, 2955, 365, 8, 70, "Message",ExpressionUUID->"69e8d87d-49cf-4186-939e-cf161027ca95"],
Cell[114571, 2965, 471, 10, 70, "Message",ExpressionUUID->"06512c21-c070-4875-b5fb-1ec948fefb20"],
Cell[115045, 2977, 473, 10, 70, "Message",ExpressionUUID->"d85e1f53-2e8c-4f7e-9aeb-83680f8d710b"],
Cell[115521, 2989, 364, 8, 70, "Message",ExpressionUUID->"03aaaf47-aac9-4e1d-8945-e78b67a6b3d4"],
Cell[115888, 2999, 300, 7, 70, "Message",ExpressionUUID->"9cbe9fc8-bd3e-4425-9ede-7ac04edc1c7e"],
Cell[116191, 3008, 432, 9, 70, "Message",ExpressionUUID->"fae1f26c-6408-4d5a-a663-5beab2085315"],
Cell[116626, 3019, 484, 10, 70, "Message",ExpressionUUID->"07d80902-39af-4c96-8bfc-523b0a3dd285"],
Cell[117113, 3031, 484, 10, 70, "Message",ExpressionUUID->"55f05d4d-9030-422f-874b-cd27da4104ee"],
Cell[117600, 3043, 367, 8, 70, "Message",ExpressionUUID->"8cd9ebd7-f939-4e09-b5d2-7684a0513cf4"],
Cell[117970, 3053, 324, 8, 70, "Message",ExpressionUUID->"05287065-a5c0-4c4d-8777-98702d1fe005"],
Cell[118297, 3063, 324, 8, 70, "Message",ExpressionUUID->"00979eb9-a5af-4b1f-bab3-ad7d21e4c006"],
Cell[118624, 3073, 324, 8, 70, "Message",ExpressionUUID->"74809771-f291-48c1-9fb8-90f1dcb113a7"],
Cell[118951, 3083, 364, 8, 70, "Message",ExpressionUUID->"aa9a80f8-0da9-4175-9c1d-0dfffa59766a"],
Cell[119318, 3093, 332, 8, 70, "Message",ExpressionUUID->"c7571b7f-cafd-484b-bcc1-68d151ed60a3"],
Cell[119653, 3103, 471, 10, 70, "Message",ExpressionUUID->"a3dfd27d-3eff-4c26-ad15-8faee8c66b1a"],
Cell[120127, 3115, 334, 8, 70, "Message",ExpressionUUID->"18988629-6462-4a10-b33f-1e25d8c15cdc"],
Cell[120464, 3125, 363, 8, 70, "Message",ExpressionUUID->"30f419e2-c71d-4421-b61c-7789a464da5f"],
Cell[120830, 3135, 471, 10, 70, "Message",ExpressionUUID->"2ac84b57-e0a9-4f1e-a392-d1a124f194f2"],
Cell[121304, 3147, 469, 10, 70, "Message",ExpressionUUID->"9255f498-cafc-4be8-8605-de85a180a55d"],
Cell[121776, 3159, 360, 8, 70, "Message",ExpressionUUID->"f0f3ddc3-029d-4d52-85e7-1308c1250c83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122173, 3172, 23206, 398, 70, "Input",ExpressionUUID->"aa3509ae-c796-4aed-ba84-7c8abf72c0b3"],
Cell[145382, 3572, 182322, 3323, 70, "Output",ExpressionUUID->"c4c75152-bce1-40ff-b483-c21cf7255af9"]
}, Open  ]],
Cell[327719, 6898, 678, 15, 70, "Input",ExpressionUUID->"f49615ce-94a8-4085-ac34-769dfdf96ad2"],
Cell[328400, 6915, 624, 14, 70, "Input",ExpressionUUID->"3bca8d3d-0a5d-4508-9bc4-954d0d3f16c5"],
Cell[329027, 6931, 1951, 45, 70, "Input",ExpressionUUID->"51a1db95-d679-4862-96d4-946abe6c2e65"],
Cell[CellGroupData[{
Cell[331003, 6980, 2144, 56, 70, "Input",ExpressionUUID->"6bf4c8dc-cc51-4ad3-8e21-992af18d4139"],
Cell[333150, 7038, 74414, 1265, 70, "Output",ExpressionUUID->"e578d698-cd72-4df2-8622-e9e4271670a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407601, 8308, 2785, 68, 70, "Input",ExpressionUUID->"70271db6-cf13-4e92-9095-411e4d2bdffa"],
Cell[410389, 8378, 45693, 1028, 70, "Output",ExpressionUUID->"6ee5f695-134c-4afe-859c-e7ac189ac1d4"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[456143, 9413, 244, 3, 70, "Chapter",ExpressionUUID->"12498ed8-5394-4a51-8d25-c4514f2dc89e"],
Cell[456390, 9418, 275, 7, 70, "Input",ExpressionUUID->"2eb37165-a877-4b0f-aa19-60ebb39210b0"],
Cell[456668, 9427, 290, 7, 70, "Input",ExpressionUUID->"c3d66079-cd44-44df-b424-844aba29ed38"],
Cell[456961, 9436, 526, 15, 70, "Input",ExpressionUUID->"aa07b29c-fef6-4a7e-9c2d-27ff1c4ef8f7",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[457512, 9455, 227, 3, 70, "Section",ExpressionUUID->"6cedeaaa-324a-4ea0-a3ab-8720b7f7bdf8"],
Cell[457742, 9460, 500, 15, 70, "Input",ExpressionUUID->"2e287964-b4fc-490b-ad11-44b3aa203c87",
 InitializationCell->True],
Cell[458245, 9477, 1157, 29, 70, "Input",ExpressionUUID->"88bda8d6-888d-4379-90b3-55449a6c6f2e"],
Cell[459405, 9508, 3206, 74, 70, "Input",ExpressionUUID->"421ea769-3ed8-4810-9863-ce7e2824020f"],
Cell[CellGroupData[{
Cell[462636, 9586, 1803, 48, 70, "Input",ExpressionUUID->"aadf92a2-caef-4c36-8861-0298d48c724b"],
Cell[464442, 9636, 3342, 87, 70, "Output",ExpressionUUID->"b1f6d50a-147e-4249-978c-0fe0810c4426"]
}, Open  ]],
Cell[467799, 9726, 1206, 30, 70, "Input",ExpressionUUID->"019e0672-ee3e-4880-baae-2a270c20fbe7"],
Cell[469008, 9758, 1258, 31, 70, "Input",ExpressionUUID->"eadd1eaa-f67e-4c0e-8bff-1c70802ae589"],
Cell[470269, 9791, 361, 10, 70, "Input",ExpressionUUID->"753fd275-419f-47a1-8656-4fc43869fbfa"],
Cell[470633, 9803, 1157, 30, 70, "Input",ExpressionUUID->"9b4f3362-ad89-43e4-b2f6-8ce822a467e6"],
Cell[CellGroupData[{
Cell[471815, 9837, 245, 4, 70, "Input",ExpressionUUID->"31c75b13-36a4-41d7-87f3-069676571b24"],
Cell[472063, 9843, 720270, 11857, 70, "Output",ExpressionUUID->"c463b92d-44a2-4c14-ac3d-7cb63eb0c557"]
}, Open  ]],
Cell[1192348, 21703, 419, 11, 70, "Input",ExpressionUUID->"52801681-bc0e-4bf1-8b52-8d5d5d50ef18"],
Cell[1192770, 21716, 465, 11, 70, "Input",ExpressionUUID->"cdaf6f85-4749-4b0b-bd79-bb7246fbb50c",
 InitializationCell->True],
Cell[1193238, 21729, 2604, 54, 70, "Input",ExpressionUUID->"1d7d36f0-3a24-4c8b-9174-36f4b17f4a6b"],
Cell[1195845, 21785, 389, 11, 70, "Input",ExpressionUUID->"79bd3a51-b1bd-42d4-ba8b-4008d5b95991"],
Cell[1196237, 21798, 335, 9, 70, "Input",ExpressionUUID->"db790903-c5db-47ab-8fa7-3586b23dc299",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1196609, 21812, 196, 3, 70, "Section",ExpressionUUID->"fd8a6e0d-7467-4888-a1fe-4ff82d1ae007"],
Cell[1196808, 21817, 900, 24, 70, "Input",ExpressionUUID->"5ed15f7b-ae8b-44f2-afde-ef5e3d1b50b5",
 InitializationCell->True],
Cell[1197711, 21843, 1256, 30, 70, "Input",ExpressionUUID->"6f5f3ac1-7abe-406e-a6d6-54c31367a1c9"],
Cell[1198970, 21875, 2555, 59, 70, "Input",ExpressionUUID->"2bd67bb1-9cde-4183-a5b4-40b6289f05c9"],
Cell[1201528, 21936, 458, 11, 70, "Input",ExpressionUUID->"5eaefb03-39c6-4ce2-b070-219c7892e1b8"],
Cell[1201989, 21949, 383, 10, 70, "Input",ExpressionUUID->"1919f881-84de-4116-b020-eb31023b7581",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1202409, 21964, 244, 3, 70, "Section",ExpressionUUID->"d0e25c7a-29e5-40ca-bc9d-ece1af3b263d"],
Cell[1202656, 21969, 605, 16, 70, "Input",ExpressionUUID->"de6d7ef4-5ccb-4634-9477-84b9fd704e88",
 InitializationCell->True],
Cell[1203264, 21987, 1544, 37, 70, "Input",ExpressionUUID->"d4d0257d-c3b3-4e2c-934c-8a20ffbaf055"],
Cell[1204811, 22026, 3539, 80, 70, "Input",ExpressionUUID->"4b8b94f3-043a-4aaf-bcd9-f791c6a93902"],
Cell[1208353, 22108, 365, 10, 70, "Input",ExpressionUUID->"c27c0671-fcc2-46e2-b99a-4247a7556c0b"],
Cell[1208721, 22120, 436, 11, 70, "Input",ExpressionUUID->"8af99335-152d-4e3d-a05c-f3fd0bf956c5",
 InitializationCell->True],
Cell[1209160, 22133, 1951, 45, 70, "Input",ExpressionUUID->"992da08f-7ad7-4be8-ad95-5c7de647d5ce"]
}, Closed]],
Cell[CellGroupData[{
Cell[1211148, 22183, 233, 3, 70, "Section",ExpressionUUID->"1cd5e7a4-b335-48fe-872e-b568981eed55"],
Cell[1211384, 22188, 585, 16, 70, "Input",ExpressionUUID->"be0f1c69-861a-4af1-b510-d283a51f55a9",
 InitializationCell->True],
Cell[1211972, 22206, 1305, 31, 70, "Input",ExpressionUUID->"ca620062-eb59-40cf-a378-a327344af405"],
Cell[1213280, 22239, 3568, 77, 70, "Input",ExpressionUUID->"864a4b10-158c-442d-957e-e620261ddd9c"],
Cell[CellGroupData[{
Cell[1216873, 22320, 129, 3, 70, "Input",ExpressionUUID->"db8938bf-4ce2-4f9c-9090-1978f6dd659f"],
Cell[1217005, 22325, 1559, 44, 70, "Output",ExpressionUUID->"062dcc6c-fdec-4606-80be-2e7870b0500d"]
}, Open  ]],
Cell[1218579, 22372, 511, 12, 70, "Input",ExpressionUUID->"b2684259-774f-4eeb-aa93-094c717d30f1"],
Cell[1219093, 22386, 517, 15, 70, "Input",ExpressionUUID->"9270b1c8-e790-4629-9b18-bf3dc902576f"],
Cell[CellGroupData[{
Cell[1219635, 22405, 2555, 59, 70, "Input",ExpressionUUID->"26e884f4-3def-4f22-b582-3668bb2d2197"],
Cell[1222193, 22466, 640, 12, 70, "Output",ExpressionUUID->"10955233-4edf-491e-8a6a-0ce56bb001cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1222870, 22483, 196, 4, 70, "Input",ExpressionUUID->"53422d61-425a-4940-a919-0ecd5b5857c3"],
Cell[1223069, 22489, 529, 15, 70, "Output",ExpressionUUID->"39e0c675-c7de-48ee-a3e2-02efe2665af6"]
}, Open  ]],
Cell[1223613, 22507, 421, 11, 70, "Input",ExpressionUUID->"74fb04f6-c7a9-4258-8cc5-e910baa98b84"],
Cell[1224037, 22520, 490, 11, 70, "Input",ExpressionUUID->"492baafe-7188-4f6c-81f1-ca39544bbc0f",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1224564, 22536, 200, 3, 70, "Section",ExpressionUUID->"258effcc-3317-4e9f-9e43-50201cc5c6c1"],
Cell[CellGroupData[{
Cell[1224789, 22543, 391, 5, 70, "Subsection",ExpressionUUID->"1b01d19a-283e-45c3-a532-73dcdd7f62fb"],
Cell[1225183, 22550, 930, 21, 70, "Input",ExpressionUUID->"21eea2d2-e31f-4bdf-a69c-a3a89ec8c8b5",
 InitializationCell->True],
Cell[1226116, 22573, 1325, 31, 70, "Input",ExpressionUUID->"abf34427-2138-41d3-be6d-9d508d1b6474"],
Cell[1227444, 22606, 2654, 60, 70, "Input",ExpressionUUID->"7ce8bb49-307b-43fd-a530-36f31a081fdc"],
Cell[1230101, 22668, 519, 12, 70, "Input",ExpressionUUID->"1837fefe-c738-4f18-9933-a940af8fcbf7"],
Cell[1230623, 22682, 442, 11, 70, "Input",ExpressionUUID->"c4f981b3-0406-4ba3-9178-bae22afae7a7",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1231102, 22698, 315, 4, 70, "Subsection",ExpressionUUID->"12a278a5-1268-4e5d-a4ed-565e548faeff"],
Cell[1231420, 22704, 563, 13, 70, "Input",ExpressionUUID->"2419f72f-607d-4eae-b85c-228a403abba4",
 InitializationCell->True],
Cell[1231986, 22719, 321, 9, 70, "Input",ExpressionUUID->"4b3285cf-dfa9-4348-891d-5689af88d1c2",
 InitializationCell->True],
Cell[1232310, 22730, 405, 11, 70, "Input",ExpressionUUID->"eed992cf-569f-4667-aba6-29c8a40ddae6",
 InitializationCell->True],
Cell[1232718, 22743, 648, 14, 70, "Input",ExpressionUUID->"641014b6-ac6b-4436-a583-f7277cd686b4",
 InitializationCell->True],
Cell[1233369, 22759, 333, 9, 70, "Input",ExpressionUUID->"ca52cdf2-66b8-49ba-b3bf-126c774cb6b4",
 InitializationCell->True],
Cell[1233705, 22770, 387, 10, 70, "Input",ExpressionUUID->"ce75546e-9169-42c6-9d3e-a57588ff0031",
 InitializationCell->True],
Cell[1234095, 22782, 537, 12, 70, "Input",ExpressionUUID->"de9fac32-a674-409d-9e87-8c319fc212c1",
 InitializationCell->True],
Cell[1234635, 22796, 990, 18, 70, "Input",ExpressionUUID->"fe578fa1-fbbb-4a89-bbc1-faf4644d1268",
 InitializationCell->True],
Cell[1235628, 22816, 246, 6, 70, "Input",ExpressionUUID->"62004bb4-e84a-44ca-b2ad-f486c208791e",
 InitializationCell->True],
Cell[1235877, 22824, 710, 18, 70, "Input",ExpressionUUID->"045aa3f8-d306-4e05-85df-b9ae00b0e7d4",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1236648, 22849, 277, 4, 70, "Chapter",ExpressionUUID->"a82784ff-f50e-4ceb-a038-d586bb741bf9"],
Cell[CellGroupData[{
Cell[1236950, 22857, 374, 5, 70, "Section",ExpressionUUID->"f06d60cb-c62b-477a-a173-c1deda31275c"],
Cell[1237327, 22864, 1078, 20, 70, "Text",ExpressionUUID->"19af5a68-cc97-40b3-8935-090ab3280d20"],
Cell[1238408, 22886, 876, 16, 70, "Text",ExpressionUUID->"a4221477-f3c4-433f-aec9-7c4d7da00d61"],
Cell[1239287, 22904, 963, 16, 70, "Text",ExpressionUUID->"a85bdb76-9126-4bf1-891d-3ddf269b6b83"]
}, Closed]],
Cell[CellGroupData[{
Cell[1240287, 22925, 402, 5, 70, "Section",ExpressionUUID->"5cc7daef-f1f1-4516-bff0-a0bbbf9b365b"],
Cell[CellGroupData[{
Cell[1240714, 22934, 503, 7, 70, "Subsection",ExpressionUUID->"4feba171-c4d2-4d49-870c-d2c768b3d297"],
Cell[1241220, 22943, 4082, 91, 70, "Input",ExpressionUUID->"30319d43-3a25-4309-be84-fe5d11bd6cc9"],
Cell[1245305, 23036, 1355, 31, 70, "Input",ExpressionUUID->"23f3edc4-4a4f-469e-b731-d74f8096d6b1"],
Cell[1246663, 23069, 961, 25, 70, "Input",ExpressionUUID->"1fe77d73-d127-427d-9a31-4eff2827c259"],
Cell[1247627, 23096, 458, 12, 70, "Input",ExpressionUUID->"aa3db695-d0b5-43eb-bb2e-280d49c6c8bb",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1248110, 23112, 661, 16, 70, "Input",ExpressionUUID->"ab41881a-18d7-4f46-95f8-b874d0133e99"],
Cell[1248774, 23130, 39411, 1162, 70, "Output",ExpressionUUID->"6f190ff2-872c-4331-9cbd-5e775ba6fb12"]
}, Open  ]],
Cell[1288200, 24295, 1637, 37, 70, "Input",ExpressionUUID->"22765bf9-59b4-435d-907c-54c61dbdb460"],
Cell[CellGroupData[{
Cell[1289862, 24336, 1449, 30, 70, "Input",ExpressionUUID->"8acf3cd4-dbdc-4854-8163-f5e2caadadf6"],
Cell[1291314, 24368, 92861, 1848, 70, "Output",ExpressionUUID->"220bedd2-65be-4121-98cd-ca46b1b4277c"]
}, Open  ]],
Cell[1384190, 26219, 1348, 26, 70, "Input",ExpressionUUID->"060cf229-020f-4e06-b2b6-05cf600e4191"],
Cell[CellGroupData[{
Cell[1385563, 26249, 1163, 25, 70, "Input",ExpressionUUID->"24dd4398-70f9-47e7-a1b3-37dee98537d5"],
Cell[1386729, 26276, 15433, 311, 70, "Output",ExpressionUUID->"a24599ff-1759-4e78-ad84-feae9d6b182f"]
}, Open  ]],
Cell[1402177, 26590, 1989, 46, 70, "Input",ExpressionUUID->"76d568be-01c5-48bc-9099-65efa52f9afc"],
Cell[CellGroupData[{
Cell[1404191, 26640, 1136, 24, 70, "Input",ExpressionUUID->"ba1aebc0-6ac2-4948-b1b3-ce86039b9f7d"],
Cell[1405330, 26666, 12899, 268, 70, "Output",ExpressionUUID->"e7fb1f26-1e5f-42b1-9b45-44925f8f7f49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1418266, 26939, 1063, 27, 70, "Input",ExpressionUUID->"8465c640-5701-464f-8757-289aee5f86ad"],
Cell[1419332, 26968, 1736, 45, 70, "Output",ExpressionUUID->"10601760-f86e-41f5-aad6-fcd2f1a6190d"]
}, Open  ]],
Cell[1421083, 27016, 1029, 25, 70, "Input",ExpressionUUID->"b5595914-8880-4af2-afc6-dc409c9983f5"],
Cell[CellGroupData[{
Cell[1422137, 27045, 449, 11, 70, "Input",ExpressionUUID->"eef548b8-e14c-4107-b7be-87cf36f38501"],
Cell[1422589, 27058, 5405, 108, 70, "Output",ExpressionUUID->"9ac214bd-36aa-4c3a-ba0a-e785d2722694"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1428031, 27171, 533, 14, 70, "Input",ExpressionUUID->"e610ae9b-ee45-4350-a3ce-af3697f1a733"],
Cell[1428567, 27187, 162, 3, 70, "Output",ExpressionUUID->"c5ff94de-bcf0-4862-94e0-7b312f7bf617"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1428766, 27195, 1085, 28, 70, "Input",ExpressionUUID->"10dee8a9-a7cb-411b-8b37-81235620a98c"],
Cell[1429854, 27225, 2906, 64, 70, "Output",ExpressionUUID->"982f0071-0d40-46ef-a28a-623517cead9f"]
}, Open  ]],
Cell[1432775, 27292, 1363, 36, 70, "Input",ExpressionUUID->"288bde08-18c7-4247-9308-346aaf6e446e"],
Cell[CellGroupData[{
Cell[1434163, 27332, 251, 6, 70, "Input",ExpressionUUID->"6fea05df-0e81-4b54-b22c-bb9e2e078538"],
Cell[1434417, 27340, 219, 4, 70, "Output",ExpressionUUID->"558116b0-221c-4b7b-8365-92ac80d85e7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1434673, 27349, 172, 3, 70, "Input",ExpressionUUID->"f325b489-5667-4b29-b622-3ece456a0ba7"],
Cell[1434848, 27354, 2570, 59, 70, "Output",ExpressionUUID->"814e91e7-15b6-46bc-93c3-0f5adc0634fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1437455, 27418, 403, 12, 70, "Input",ExpressionUUID->"526554e3-cd92-4655-886e-e5f448b7bfda"],
Cell[1437861, 27432, 5695, 170, 70, "Output",ExpressionUUID->"2b29d973-c5fe-4958-8c72-c741aeb8666f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1443593, 27607, 399, 12, 70, "Input",ExpressionUUID->"453649ce-9b68-4faf-806d-e1776b816fb0"],
Cell[1443995, 27621, 2880, 64, 70, "Output",ExpressionUUID->"f9b98d82-c988-4ac0-a33d-cb94226eda22"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1446924, 27691, 490, 7, 70, "Subsection",ExpressionUUID->"7ebf2e21-ddc6-4780-98a7-5d14f5f9da65"],
Cell[1447417, 27700, 2611, 63, 70, "Input",ExpressionUUID->"a18ea71e-7120-4a4c-9653-7dc81d4c8eb6"],
Cell[CellGroupData[{
Cell[1450053, 27767, 84, 1, 70, "Input",ExpressionUUID->"48b612c6-9032-4405-945f-9af8d1063637"],
Cell[1450140, 27770, 115, 2, 70, "Output",ExpressionUUID->"a0dd9af2-c122-413c-8914-ba9c94fa7df8"]
}, Open  ]],
Cell[1450270, 27775, 4876, 111, 70, "Input",ExpressionUUID->"3694b056-b62b-45a3-b67e-0f0dc00a2011"],
Cell[1455149, 27888, 1178, 33, 70, "Input",ExpressionUUID->"7f632120-f2d7-48aa-bbb0-439cbaf9a17b"],
Cell[CellGroupData[{
Cell[1456352, 27925, 270, 6, 70, "Input",ExpressionUUID->"3d441c11-abca-41f1-be86-dc1d625c49a2"],
Cell[1456625, 27933, 7829, 234, 70, "Output",ExpressionUUID->"e06f414c-3631-4dd2-995c-89930f1443ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1464491, 28172, 525, 13, 70, "Input",ExpressionUUID->"cf193355-5170-47d0-a7f0-a93acfbbe789",
 InitializationCell->True],
Cell[1465019, 28187, 1021, 18, 70, "Message",ExpressionUUID->"a71b4436-3f1b-4115-8dc7-140e45e0d82c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1466077, 28210, 297, 6, 70, "Input",ExpressionUUID->"662eb625-4406-4527-b895-68d36e3ac929"],
Cell[1466377, 28218, 5342, 124, 70, "Output",ExpressionUUID->"e1ba46f4-d1c5-4594-9330-47db6af96f25"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1471780, 28349, 511, 6, 70, "Section",ExpressionUUID->"9444a3bc-c140-460d-a8ed-449eeb27037f"],
Cell[1472294, 28357, 1354, 35, 70, "Input",ExpressionUUID->"2ff4e439-4910-4c5f-952a-2ff4e39e8ea8",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1473673, 28396, 780, 10, 70, "Subsection",ExpressionUUID->"f2cf5a66-b06b-45ea-82a6-40e64f6a2c79"],
Cell[CellGroupData[{
Cell[1474478, 28410, 761, 11, 70, "Subsubsection",ExpressionUUID->"096ceeca-5900-41cb-b8b5-0eb7b52a5518"],
Cell[1475242, 28423, 12990, 283, 70, "Input",ExpressionUUID->"e8a53b59-d7d8-439b-b32c-a3b8e7eb37d3"],
Cell[CellGroupData[{
Cell[1488257, 28710, 339, 8, 70, "Input",ExpressionUUID->"e7c31744-d94b-4e7d-be02-52c41e72193d"],
Cell[1488599, 28720, 240, 4, 70, "Output",ExpressionUUID->"551cf8f7-29d1-4af4-bf2c-272af79bbdfa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1488876, 28729, 2218, 57, 70, "Input",ExpressionUUID->"e1e3aa9b-e9dc-42f5-9efd-ec018dc92ba4"],
Cell[1491097, 28788, 3633, 84, 70, "Output",ExpressionUUID->"c565f919-f822-49d4-ab28-044b483513c9"]
}, Open  ]],
Cell[1494745, 28875, 1064, 21, 70, "Input",ExpressionUUID->"68f4bfe4-f554-4265-8889-a7f0f69089f4"],
Cell[1495812, 28898, 615, 13, 70, "Input",ExpressionUUID->"e3f5bb8c-034c-42b1-9af7-8ac606181fab",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1496464, 28916, 789, 10, 70, "Subsubsection",ExpressionUUID->"ae3ff638-7019-4cb2-a484-0009b81cb0fd"],
Cell[1497256, 28928, 16116, 336, 70, "Input",ExpressionUUID->"a3d03b84-c286-4f22-bfb2-af3aaf01dfa8"],
Cell[CellGroupData[{
Cell[1513397, 29268, 240, 6, 70, "Input",ExpressionUUID->"ff14bc8b-7e2f-44cc-93d0-21430f611cfd"],
Cell[1513640, 29276, 276, 6, 70, "Output",ExpressionUUID->"c3c6d824-37e7-498d-b546-35f1399bde69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1513953, 29287, 374, 9, 70, "Input",ExpressionUUID->"a47897f9-7847-461e-844d-58b1f0682f1d"],
Cell[1514330, 29298, 258, 4, 70, "Output",ExpressionUUID->"de3015bd-ffe0-4ae1-9c0d-d8c985b9d1fa"]
}, Open  ]],
Cell[1514603, 29305, 662, 14, 70, "Input",ExpressionUUID->"3529aaad-b1ed-414e-8a64-c7f6b37e730b",
 InitializationCell->True],
Cell[1515268, 29321, 640, 14, 70, "Input",ExpressionUUID->"a3e9c9e0-f8f6-4d7f-8569-fc2ec76df195",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1515945, 29340, 652, 9, 70, "Subsubsection",ExpressionUUID->"7226c504-9655-4577-9595-940f5dc80e70"],
Cell[CellGroupData[{
Cell[1516622, 29353, 2453, 63, 70, "Input",ExpressionUUID->"b421e5dc-99e7-40cb-8e47-82cdbfcb5898"],
Cell[1519078, 29418, 3957, 89, 70, "Output",ExpressionUUID->"015bcd23-64b2-4571-be5d-a280320575a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1523072, 29512, 2013, 56, 70, "Input",ExpressionUUID->"031c7522-97a8-45bb-9641-5e13fa72eeb8"],
Cell[1525088, 29570, 3104, 80, 70, "Output",ExpressionUUID->"b288199d-1150-407c-b7e3-fd1213540be2"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1528253, 29657, 591, 8, 70, "Subsection",ExpressionUUID->"636e4629-ac08-40a8-a0db-fc1c0421587f"],
Cell[1528847, 29667, 8156, 161, 70, "Input",ExpressionUUID->"dca80e45-e1bd-403b-9aa5-ea82b559293b"],
Cell[1537006, 29830, 8019, 172, 70, "Input",ExpressionUUID->"253db2a2-e71e-48aa-9ae3-468f9fd336bd"],
Cell[1545028, 30004, 1647, 39, 70, "Input",ExpressionUUID->"09c5f4cf-a06b-4492-9560-4ec0437215f2"],
Cell[1546678, 30045, 164, 4, 70, "Input",ExpressionUUID->"794f3b7a-cbcd-4738-9e1b-44c5339b84a0"],
Cell[1546845, 30051, 92, 1, 70, "Input",ExpressionUUID->"0b6d96e4-ec66-4b40-b1f7-ece5b891fe8d"],
Cell[1546940, 30054, 175, 4, 70, "Input",ExpressionUUID->"9a5193f1-93f3-4119-9cbe-850a275e7efe"],
Cell[CellGroupData[{
Cell[1547140, 30062, 1607, 44, 70, "Input",ExpressionUUID->"df4d28e8-487f-4930-b417-ce3a325e8cba"],
Cell[1548750, 30108, 11521, 292, 70, "Output",ExpressionUUID->"8d6df821-3967-4a4e-9c8d-292d2df31d75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1560308, 30405, 5229, 120, 70, "Input",ExpressionUUID->"bf52ed77-b1ac-4bde-8540-e3f09126f2a7"],
Cell[1565540, 30527, 23192, 506, 70, "Output",ExpressionUUID->"eda11509-a066-4157-bc93-33594705d80d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1588769, 31038, 1324, 34, 70, "Input",ExpressionUUID->"25737c4d-255b-403e-96b4-8b50d1729737"],
Cell[1590096, 31074, 12391, 255, 70, "Output",ExpressionUUID->"5db31604-c21e-4c22-8621-1209f6add352"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1602524, 31334, 366, 10, 70, "Input",ExpressionUUID->"b507794a-b38b-4772-a4ee-e9206681f3f6"],
Cell[1602893, 31346, 264, 5, 70, "Output",ExpressionUUID->"67084f80-983c-48e4-b549-bfded104a129"]
}, Open  ]],
Cell[1603172, 31354, 2275, 52, 70, "Input",ExpressionUUID->"734450c9-0eb0-4185-a0e3-cbc52914c77d"],
Cell[1605450, 31408, 534, 12, 70, "Input",ExpressionUUID->"6a1627fb-bae4-42b5-99ee-c2a5ba935f8b",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1606009, 31424, 639, 14, 70, "Input",ExpressionUUID->"7ab5265e-6b38-4e41-ba08-afe1dd4f3d34"],
Cell[1606651, 31440, 1784, 44, 70, "Output",ExpressionUUID->"3eaebdda-ad03-453f-9e76-fc1d71246874"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1608496, 31491, 550, 7, 70, "Section",ExpressionUUID->"e53ba116-ca81-4913-a2be-40ee5cc16308"],
Cell[CellGroupData[{
Cell[1609071, 31502, 551, 7, 70, "Subsection",ExpressionUUID->"6d44af4b-ccb0-4d61-8a58-fd5b4dd391a6"],
Cell[1609625, 31511, 3081, 71, 70, "Input",ExpressionUUID->"f74cce24-58ad-4f64-ba98-4e41bffada27",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1612731, 31586, 2365, 60, 70, "Input",ExpressionUUID->"b1525b0d-531d-4350-99de-dca844b38f15"],
Cell[1615099, 31648, 3003, 78, 70, "Output",ExpressionUUID->"5a5e5a47-b676-4df6-a68c-a824cfec2fd5"]
}, Open  ]],
Cell[1618117, 31729, 2194, 51, 70, "Input",ExpressionUUID->"ee5177fb-58c3-4127-a287-f8e5857d67b9"],
Cell[CellGroupData[{
Cell[1620336, 31784, 3950, 97, 70, "Input",ExpressionUUID->"76a218f0-3be4-4871-aed8-1cda9404e1b5"],
Cell[1624289, 31883, 3097, 74, 70, "Output",ExpressionUUID->"2fcda02f-50cf-44b4-84a4-6b3f253caefa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1627423, 31962, 3454, 90, 70, "Input",ExpressionUUID->"514dc301-1d47-4ffb-9b69-6d5b50b6860c"],
Cell[1630880, 32054, 2731, 69, 70, "Output",ExpressionUUID->"a969f12b-6373-491c-87a7-d8d7e29b0d4d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1633660, 32129, 558, 7, 70, "Subsection",ExpressionUUID->"7b553fe1-d380-4c4e-8bab-e6b98d4d504f"],
Cell[1634221, 32138, 4011, 87, 70, "Input",ExpressionUUID->"f915fc26-3453-41ef-b9a8-50f12c265a2f",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1638269, 32230, 704, 9, 70, "Subsection",ExpressionUUID->"7cb53fe1-2608-4d51-b5d1-df65e2f2475c"],
Cell[1638976, 32241, 5126, 115, 70, "Input",ExpressionUUID->"01aee779-08d3-426f-8c0c-a3debd1fabd2"],
Cell[1644105, 32358, 5543, 124, 70, "Input",ExpressionUUID->"bd880308-87aa-4810-8262-a583ba92be10"],
Cell[CellGroupData[{
Cell[1649673, 32486, 10827, 227, 70, "Input",ExpressionUUID->"e71c621c-e59b-452f-85de-35c8ab0af999"],
Cell[1660503, 32715, 182230, 3674, 70, "Output",ExpressionUUID->"b9b8ce39-c80d-477a-bf72-87d14ebf09d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1842770, 36394, 4029, 97, 70, "Input",ExpressionUUID->"04fd397f-2ea3-433a-84a7-041cd899ff8a"],
Cell[1846802, 36493, 18673, 431, 70, "Output",ExpressionUUID->"f1c3725b-923e-44b8-870a-feb6e05228a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1865512, 36929, 2084, 51, 70, "Input",ExpressionUUID->"e36abbaa-82ed-4633-823f-0d84e2639017"],
Cell[1867599, 36982, 29112, 617, 70, "Output",ExpressionUUID->"d2c35a1b-ff24-40f6-a7a7-8c2d70449f9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1896748, 37604, 1393, 34, 70, "Input",ExpressionUUID->"c6ee43d9-5ecd-4767-a137-701cc7addb70"],
Cell[1898144, 37640, 17092, 297, 70, "Output",ExpressionUUID->"d1030559-7328-4796-bbfd-1ea8c317f3bc"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1915309, 37945, 337, 4, 70, "Chapter",ExpressionUUID->"4df75662-b979-4f66-b1a8-b247a96d46c9"],
Cell[1915649, 37951, 236, 4, 70, "Text",ExpressionUUID->"0d71badb-df3c-4da1-b977-6bf140a2bf2d"],
Cell[CellGroupData[{
Cell[1915910, 37959, 781, 10, 70, "Section",ExpressionUUID->"2ae2a22c-14d5-446b-ad92-9cda70cf4d63"],
Cell[CellGroupData[{
Cell[1916716, 37973, 11637, 276, 70, "Input",ExpressionUUID->"2f02f837-bd8c-4545-af1d-a80fb48a129e"],
Cell[1928356, 38251, 42961, 737, 70, "Output",ExpressionUUID->"626f0358-a1ed-4295-8e1b-e91c8a22451f"]
}, Open  ]],
Cell[1971332, 38991, 179, 4, 70, "Input",ExpressionUUID->"27aa7fac-687b-4ea7-a9a1-a4f6bca6329d"],
Cell[1971514, 38997, 9361, 192, 70, "Input",ExpressionUUID->"892231d3-ebc2-45a8-9a92-e8b40168c716"],
Cell[CellGroupData[{
Cell[1980900, 39193, 2078, 49, 70, "Input",ExpressionUUID->"244b4339-5d6a-4ecf-94d6-19525182218c"],
Cell[1982981, 39244, 49343, 846, 70, "Output",ExpressionUUID->"10d2fbb8-9c1e-4a5f-9885-1c91cc345160"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2032373, 40096, 766, 10, 70, "Section",ExpressionUUID->"33dcefcc-dcea-4b21-bdf9-957bbef7206b"],
Cell[CellGroupData[{
Cell[2033164, 40110, 824, 11, 70, "Subsection",ExpressionUUID->"99ec8fef-3dab-4752-8b49-5dcc8a5a08d6"],
Cell[2033991, 40123, 927, 21, 70, "Input",ExpressionUUID->"c8fac431-1f98-48a4-8807-32c24a2c09ef",
 InitializationCell->True],
Cell[2034921, 40146, 2441, 52, 70, "Input",ExpressionUUID->"a6b24ae5-08ce-4d29-8106-d6204b368964",
 InitializationCell->True],
Cell[2037365, 40200, 13377, 304, 70, "Input",ExpressionUUID->"c30f17d7-76bd-4127-906d-06abfb5ab4a4",
 InitializationCell->True],
Cell[2050745, 40506, 3359, 70, 70, "Input",ExpressionUUID->"d5f295a4-5a06-4953-bc80-4a098f071b2d",
 InitializationCell->True],
Cell[2054107, 40578, 15459, 320, 70, "Input",ExpressionUUID->"1119dc30-39cc-4eb9-8739-09cf9a5df302",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2069591, 40902, 150, 2, 70, "Input",ExpressionUUID->"2d130879-78ac-4c20-92c6-d6b8f41bda2b"],
Cell[CellGroupData[{
Cell[2069766, 40908, 355, 9, 70, "PrintTemporary",ExpressionUUID->"1f4ae4e8-434f-43bb-ba32-75a1a7e7053b"],
Cell[2070124, 40919, 406, 9, 70, "PrintTemporary",ExpressionUUID->"bbb15eb9-361b-4f12-8705-23f77f4dcd6c"]
}, Open  ]]
}, Open  ]],
Cell[2070557, 40932, 3225, 67, 70, "Input",ExpressionUUID->"e7261f69-9f98-4cac-baf6-5091b1734450",
 InitializationCell->True],
Cell[2073785, 41001, 13914, 289, 70, "Input",ExpressionUUID->"f370f3f5-83eb-488f-9161-4e43092bb024",
 InitializationCell->True],
Cell[2087702, 41292, 6411, 142, 70, "Input",ExpressionUUID->"f617f7f3-ef4c-4e9e-b206-7a92efe694fa",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[2094150, 41439, 827, 11, 70, "Subsection",ExpressionUUID->"d2d650df-e9bb-4515-9bbf-3735e31a88bb"],
Cell[CellGroupData[{
Cell[2095002, 41454, 830, 11, 70, "Subsubsection",ExpressionUUID->"81a809ae-60c3-4e6f-beef-85b43b376f26"],
Cell[2095835, 41467, 2148, 54, 70, "Input",ExpressionUUID->"4e9f6017-37bd-4577-9ec8-1ad1ce034c54",
 InitializationCell->True],
Cell[2097986, 41523, 6196, 146, 70, "Input",ExpressionUUID->"8d81b828-5d49-42a3-9e75-0aaccc704010",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[2104219, 41674, 902, 12, 70, "Subsubsection",ExpressionUUID->"4ed938de-fcc8-4889-ad26-542c909ad8a6"],
Cell[2105124, 41688, 338, 8, 70, "Input",ExpressionUUID->"4c8e377c-9fb2-407f-9305-ccda6d60327b"],
Cell[CellGroupData[{
Cell[2105487, 41700, 972, 13, 70, "Subsubsubsection",ExpressionUUID->"b228be38-7c14-4faf-9c4c-eb54a08cf5d8"],
Cell[CellGroupData[{
Cell[2106484, 41717, 1018, 14, 70, "Subsubsubsubsection",ExpressionUUID->"9ab45e50-a0a9-4502-93ce-785aad4ed97a"],
Cell[2107505, 41733, 377, 9, 70, "Input",ExpressionUUID->"d880c805-badd-4a67-84ad-fe68b5d3b5f6"],
Cell[2107885, 41744, 568, 13, 70, "Input",ExpressionUUID->"f990a7e9-e07e-4f6c-b521-a16273d1f44a"],
Cell[2108456, 41759, 368, 9, 70, "Input",ExpressionUUID->"20fc7204-9a24-47f9-abcd-dee210515103"],
Cell[2108827, 41770, 1661, 44, 70, "Input",ExpressionUUID->"b85d277d-f040-459d-8f42-fc1801fda584"],
Cell[2110491, 41816, 530, 11, 70, "Input",ExpressionUUID->"4aba3f10-22fa-4d78-b19b-8b520759299c"],
Cell[CellGroupData[{
Cell[2111046, 41831, 7203, 156, 70, "Input",ExpressionUUID->"91bc0081-8c53-4f01-933f-67febd2a9262"],
Cell[2118252, 41989, 183, 4, 70, "Output",ExpressionUUID->"e76b49c0-b443-4d0d-a230-79493b39723b"]
}, Closed]],
Cell[2118450, 41996, 295, 8, 70, "Input",ExpressionUUID->"097fe413-b73d-44ad-b33b-125d83988a42"],
Cell[CellGroupData[{
Cell[2118770, 42008, 164, 3, 70, "Input",ExpressionUUID->"1811a117-2730-4333-884f-41db6fd98c3a"],
Cell[2118937, 42013, 152, 4, 70, "Output",ExpressionUUID->"a2546a10-d021-42f7-bebc-010c38b0b4c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2119126, 42022, 2392, 57, 70, "Input",ExpressionUUID->"cbab72a5-6473-4e44-9a59-14c62445e40b"],
Cell[2121521, 42081, 45909, 852, 70, "Output",ExpressionUUID->"066cbcce-6880-4d52-870a-6acca55d6640"]
}, Open  ]],
Cell[2167445, 42936, 326, 9, 70, "Input",ExpressionUUID->"e60be6b1-56ce-4993-b793-8a24a1ffc36f"]
}, Closed]],
Cell[CellGroupData[{
Cell[2167808, 42950, 1045, 14, 70, "Subsubsubsubsection",ExpressionUUID->"c79a8d6c-b052-4905-80b0-77d7f7f87fda"],
Cell[2168856, 42966, 1734, 43, 70, "Input",ExpressionUUID->"87fd6250-ae4d-4d8a-aaee-b8ed47a14561"],
Cell[CellGroupData[{
Cell[2170615, 43013, 1046, 23, 70, "Input",ExpressionUUID->"32e08a65-681d-455b-ad74-54618f3576f3"],
Cell[2171664, 43038, 2144, 47, 70, "Output",ExpressionUUID->"76a78f32-9f91-4e91-a322-cb3aff60ada0"]
}, Open  ]],
Cell[2173823, 43088, 387, 10, 70, "Input",ExpressionUUID->"f6de822b-9fa2-4dfb-91f3-5b7fc384dfff"]
}, Closed]],
Cell[CellGroupData[{
Cell[2174247, 43103, 1044, 14, 70, "Subsubsubsubsection",ExpressionUUID->"e165f9d8-5b73-4baf-9723-48293ffb0904"],
Cell[2175294, 43119, 467, 9, 70, "Input",ExpressionUUID->"82dd10d5-c324-4c78-83e4-eccbcae80620"],
Cell[2175764, 43130, 1417, 37, 70, "Input",ExpressionUUID->"d2b957d7-3a30-4507-b8b2-ffc42f8a8191"],
Cell[CellGroupData[{
Cell[2177206, 43171, 231, 5, 70, "Input",ExpressionUUID->"7f6c7f8b-26cf-4f71-a752-db30533e8215"],
Cell[2177440, 43178, 1779, 44, 70, "Output",ExpressionUUID->"c0c8573e-501a-47fd-9b6d-0f9b939d2157"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2179256, 43227, 5268, 129, 70, "Input",ExpressionUUID->"f78c9423-3c18-4a3d-8e32-1024694b00b3"],
Cell[2184527, 43358, 49556, 1056, 70, "Output",ExpressionUUID->"d07cd7e1-fdd8-4dcc-acef-b8552bdc22c2"]
}, Open  ]],
Cell[2234098, 44417, 1576, 41, 70, "Input",ExpressionUUID->"824ff1a3-db78-45be-b899-4db139dcba19"],
Cell[CellGroupData[{
Cell[2235699, 44462, 432, 9, 70, "Input",ExpressionUUID->"2ee4d662-8ccf-4918-869a-e6aac388e330"],
Cell[2236134, 44473, 359, 8, 70, "Output",ExpressionUUID->"55612649-fc80-458f-b443-002a012e02c5"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2236554, 44488, 969, 13, 70, "Subsubsubsection",ExpressionUUID->"fe8c5621-58a9-4550-81f6-8655282cbcea"],
Cell[CellGroupData[{
Cell[2237548, 44505, 978, 13, 70, "Subsubsubsubsection",ExpressionUUID->"e7f9be17-6b55-4407-85ef-02d54af1671b"],
Cell[2238529, 44520, 503, 12, 70, "Input",ExpressionUUID->"6a98674f-17f2-4fee-aa87-3d4a356b6757"],
Cell[CellGroupData[{
Cell[2239057, 44536, 101, 2, 70, "Input",ExpressionUUID->"ca9c06dd-0995-4709-b278-3175de9d1e65"],
Cell[2239161, 44540, 410, 9, 70, "Output",ExpressionUUID->"310c9ae3-c117-47e6-bf08-33cb6bcb84c6"]
}, Open  ]],
Cell[2239586, 44552, 2109, 53, 70, "Input",ExpressionUUID->"4713fd55-e76d-4905-898c-f4ed06037bf1"],
Cell[2241698, 44607, 628, 16, 70, "Input",ExpressionUUID->"06f08bc2-cb08-42d7-ad1d-ecb628b4589e"],
Cell[2242329, 44625, 284, 7, 70, "Input",ExpressionUUID->"92ed4e99-b3b9-41ee-9528-e2d901ad1553"],
Cell[CellGroupData[{
Cell[2242638, 44636, 132, 2, 70, "Input",ExpressionUUID->"df51270e-b020-4909-9b94-f2240ec79420"],
Cell[2242773, 44640, 186, 4, 70, "Output",ExpressionUUID->"055ed6e1-7654-4616-928a-02ecd20e80f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2242996, 44649, 191, 4, 70, "Input",ExpressionUUID->"cbca82a6-ba09-434b-b4b0-4e7bfa61a66e"],
Cell[2243190, 44655, 127, 2, 70, "Output",ExpressionUUID->"2ba5e485-19a0-4426-b772-c2ed5c4f3a07"]
}, Open  ]],
Cell[2243332, 44660, 8547, 198, 70, "Input",ExpressionUUID->"94bf8d27-6bc3-4e9e-855c-58be3156218c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2251882, 44860, 200265, 4357, 70, "Output",ExpressionUUID->"47ad4bb4-6049-4b1f-802b-385bca570150"],
Cell[2452150, 49219, 275, 7, 70, "Output",ExpressionUUID->"70a18352-2f54-4482-bac7-f291439b7260"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2452462, 49231, 975, 13, 70, "Subsubsubsubsection",ExpressionUUID->"f29b73cd-b9d1-426d-9792-e94ebadd77ef"],
Cell[2453440, 49246, 509, 14, 70, "Input",ExpressionUUID->"c5bf3c91-739d-42bd-b57c-6ed2e187454a"],
Cell[2453952, 49262, 4210, 86, 70, "Input",ExpressionUUID->"4269a1ee-4be7-40e3-a6d2-c0f51ad863fc"],
Cell[2458165, 49350, 1183, 19, 70, "Input",ExpressionUUID->"3b8067f3-9d42-4a0b-8cd9-bb0d3248e6cc"],
Cell[2459351, 49371, 680, 18, 70, "Input",ExpressionUUID->"d3d10cf9-5403-4076-a462-2558a11d2a9d"],
Cell[CellGroupData[{
Cell[2460056, 49393, 221, 4, 70, "Input",ExpressionUUID->"d091edea-a0ba-49d9-85b5-cdbe832bd66a"],
Cell[2460280, 49399, 175, 3, 70, "Output",ExpressionUUID->"3f1fdfa1-211a-4706-a855-aecf353b01f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2460492, 49407, 1435, 36, 70, "Input",ExpressionUUID->"47331c48-b5ef-4d92-8a6f-94a9a1b93cf9"],
Cell[2461930, 49445, 24550, 496, 70, "Output",ExpressionUUID->"d966fb08-4621-4b5b-abdb-2af92f431ea7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2486517, 49946, 1066, 26, 70, "Input",ExpressionUUID->"d8d1e1f4-46d2-4f30-9fa4-0fc2eefb0571"],
Cell[2487586, 49974, 2554, 59, 70, "Output",ExpressionUUID->"c459921f-1928-463d-bf90-d183a526deab"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2490213, 50041, 899, 12, 70, "Subsubsection",ExpressionUUID->"b5432f49-6340-4b20-97db-8577bf22a954"],
Cell[2491115, 50055, 265, 8, 70, "Input",ExpressionUUID->"12eba9d6-b76d-44d8-9879-fb72caf667e9"],
Cell[CellGroupData[{
Cell[2491405, 50067, 972, 13, 70, "Subsubsubsection",ExpressionUUID->"e12f45f4-8449-4f00-a98e-ae75d1a8e0a1"],
Cell[CellGroupData[{
Cell[2492402, 50084, 1018, 14, 70, "Subsubsubsubsection",ExpressionUUID->"d5280487-d684-4be0-8bea-1a4f780b9aaf"],
Cell[2493423, 50100, 403, 9, 70, "Input",ExpressionUUID->"b1bd00e4-b6f3-4d74-8ace-ecc1d5b56606"],
Cell[2493829, 50111, 568, 13, 70, "Input",ExpressionUUID->"15c6a68b-23c3-4a02-bd8b-6b121bc4addb"],
Cell[2494400, 50126, 481, 11, 70, "Input",ExpressionUUID->"1cf155b9-2390-41cb-b9f5-b61e92274ebd"],
Cell[2494884, 50139, 4244, 89, 70, "Input",ExpressionUUID->"5cd351e5-9246-4c48-8cb2-28cfba32f638"],
Cell[2499131, 50230, 170, 2, 70, "Input",ExpressionUUID->"5b4c32ca-1afa-4aab-82d8-94c76796b4e7"],
Cell[2499304, 50234, 7149, 151, 70, "Input",ExpressionUUID->"d0363852-ce68-43d4-988e-c8fa118af1e0"],
Cell[2506456, 50387, 323, 8, 70, "Input",ExpressionUUID->"27e15472-3391-462f-b1de-aad5600f9a73"],
Cell[CellGroupData[{
Cell[2506804, 50399, 164, 3, 70, "Input",ExpressionUUID->"3270f883-530f-40c8-a735-0e3644d8ac55"],
Cell[2506971, 50404, 152, 4, 70, "Output",ExpressionUUID->"f1e6d391-952b-49fd-9432-927a93f1559a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2507160, 50413, 2392, 57, 70, "Input",ExpressionUUID->"379f9ed2-ac72-4b93-aeca-9756fbb8b9a4"],
Cell[2509555, 50472, 30192, 554, 70, "Output",ExpressionUUID->"2104d0e5-dc72-444e-8bc0-6cf479f0bbd3"]
}, Open  ]],
Cell[2539762, 51029, 326, 9, 70, "Input",ExpressionUUID->"80c6a6ae-97cd-4213-9d35-c8a1f99cf5d1"]
}, Closed]],
Cell[CellGroupData[{
Cell[2540125, 51043, 1045, 14, 70, "Subsubsubsubsection",ExpressionUUID->"64733704-76b3-42b8-b3d1-59271d9e5107"],
Cell[2541173, 51059, 1734, 43, 70, "Input",ExpressionUUID->"fde216ec-edd8-4191-93d4-f6ff6a452d08"],
Cell[CellGroupData[{
Cell[2542932, 51106, 1046, 23, 70, "Input",ExpressionUUID->"c6baf400-c513-41c2-ae96-5fa3fa172c12"],
Cell[2543981, 51131, 2144, 47, 70, "Output",ExpressionUUID->"803673f3-5725-46f2-a105-5de358b81944"]
}, Open  ]],
Cell[2546140, 51181, 387, 10, 70, "Input",ExpressionUUID->"54893680-fabd-4cad-b539-48834a87e8d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[2546564, 51196, 1044, 14, 70, "Subsubsubsubsection",ExpressionUUID->"09262e5d-00c0-4a5f-94c5-4a3f79e2e189"],
Cell[2547611, 51212, 467, 9, 70, "Input",ExpressionUUID->"5d54c138-64c6-4582-9764-3e5b198728ca"],
Cell[2548081, 51223, 1417, 37, 70, "Input",ExpressionUUID->"2781c175-48a8-46f2-a6a1-cf5ce0bc012c"],
Cell[CellGroupData[{
Cell[2549523, 51264, 231, 5, 70, "Input",ExpressionUUID->"632ef646-9570-456e-b858-86bcaa8ea013"],
Cell[2549757, 51271, 1613, 42, 70, "Output",ExpressionUUID->"6e8353b1-c4f5-424f-a82e-d4dc9be474c1"]
}, Open  ]],
Cell[2551385, 51316, 243, 6, 70, "Input",ExpressionUUID->"f3ebd128-4c62-4591-8997-67108ffa0729"],
Cell[CellGroupData[{
Cell[2551653, 51326, 5402, 132, 70, "Input",ExpressionUUID->"9c8d49bd-72b9-4597-84cf-6d7e2b92d1c4"],
Cell[2557058, 51460, 39538, 854, 70, "Output",ExpressionUUID->"41d4267f-a80d-41a0-b934-fa9fd1bcd0f8"]
}, Open  ]],
Cell[2596611, 52317, 1576, 41, 70, "Input",ExpressionUUID->"86056e9a-0d84-4727-bbe5-c35dc16dc628"],
Cell[CellGroupData[{
Cell[2598212, 52362, 375, 8, 70, "Input",ExpressionUUID->"394866a7-4fae-4dac-b503-9607aa962666"],
Cell[2598590, 52372, 301, 7, 70, "Output",ExpressionUUID->"8b71a61c-3c2e-47fb-aa32-8114d75c8549"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2598952, 52386, 969, 13, 70, "Subsubsubsection",ExpressionUUID->"f52feeda-a1f7-430d-85a6-2c3246d521be"],
Cell[CellGroupData[{
Cell[2599946, 52403, 978, 13, 70, "Subsubsubsubsection",ExpressionUUID->"c96737dc-c7da-49a5-b53d-a328faa41bd7"],
Cell[2600927, 52418, 503, 12, 70, "Input",ExpressionUUID->"38b783bd-f538-48d9-8255-0eeb2085a935"],
Cell[CellGroupData[{
Cell[2601455, 52434, 101, 2, 70, "Input",ExpressionUUID->"85d8ef59-b5b4-4be1-91bc-a71992c558ba"],
Cell[2601559, 52438, 410, 9, 70, "Output",ExpressionUUID->"7e3e6a20-2428-411f-a51d-b185c3aa99a5"]
}, Open  ]],
Cell[2601984, 52450, 2109, 53, 70, "Input",ExpressionUUID->"599cd8d9-4558-4833-82d2-5498808718d4"],
Cell[2604096, 52505, 628, 16, 70, "Input",ExpressionUUID->"27e85c73-3985-4d73-bb12-644475090294"],
Cell[2604727, 52523, 284, 7, 70, "Input",ExpressionUUID->"14f2e171-f5f3-41fe-b817-0c0181fdae3b"],
Cell[CellGroupData[{
Cell[2605036, 52534, 132, 2, 70, "Input",ExpressionUUID->"a64b1471-7453-4e77-a0ff-00a21fb2a50d"],
Cell[2605171, 52538, 186, 4, 70, "Output",ExpressionUUID->"f9ee424f-7cb6-4c19-8731-100c6145b379"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2605394, 52547, 191, 4, 70, "Input",ExpressionUUID->"ec333c35-f856-4ebb-8c15-00f28e0bbb7f"],
Cell[2605588, 52553, 127, 2, 70, "Output",ExpressionUUID->"dc6d3d82-8637-4989-9b27-79b17f0fa0a8"]
}, Open  ]],
Cell[2605730, 52558, 8547, 198, 70, "Input",ExpressionUUID->"3c75f51e-e427-42a8-88f5-0094472308ea",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2614280, 52758, 200265, 4357, 70, "Output",ExpressionUUID->"5fb54153-a8dc-4f17-a43c-29b5f630a7a6"],
Cell[2814548, 57117, 275, 7, 70, "Output",ExpressionUUID->"c2df427a-8b45-47be-9e96-174133a16eb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2814860, 57129, 975, 13, 70, "Subsubsubsubsection",ExpressionUUID->"34e1f9f9-07f1-47fa-824a-12e675c69eca"],
Cell[2815838, 57144, 509, 14, 70, "Input",ExpressionUUID->"a9e58ac8-6078-42d3-aa93-caab80c936bd"],
Cell[2816350, 57160, 4210, 86, 70, "Input",ExpressionUUID->"2b0179ba-7363-49c4-8448-8ccbe276c7f5"],
Cell[2820563, 57248, 1183, 19, 70, "Input",ExpressionUUID->"14e25ef5-282b-40bf-bd72-3a3397fcb616"],
Cell[2821749, 57269, 680, 18, 70, "Input",ExpressionUUID->"c880310c-071c-48b7-8287-519c4243733a"],
Cell[CellGroupData[{
Cell[2822454, 57291, 221, 4, 70, "Input",ExpressionUUID->"eea02232-4c36-4ef1-bee2-0afce49dca6a"],
Cell[2822678, 57297, 175, 3, 70, "Output",ExpressionUUID->"65bf280d-3143-478b-b6c1-951c0774fd5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2822890, 57305, 1435, 36, 70, "Input",ExpressionUUID->"c469017b-b382-4025-a1e8-15ab4a508ea0"],
Cell[2824328, 57343, 24550, 496, 70, "Output",ExpressionUUID->"cb692ecb-6a65-4f5e-aba6-bde02a62d113"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2848915, 57844, 1066, 26, 70, "Input",ExpressionUUID->"22300020-d668-4d18-ba7f-34f0ad089d9b"],
Cell[2849984, 57872, 2554, 59, 70, "Output",ExpressionUUID->"4468e408-54bc-4e7f-a494-0fa5cd06b25e"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2852611, 57939, 880, 12, 70, "Subsubsection",ExpressionUUID->"eb531833-208a-48ba-94ef-de2c352f86c5"],
Cell[2853494, 57953, 692, 16, 70, "Input",ExpressionUUID->"44099cf4-f592-45b5-954e-9a479f8959a3"],
Cell[2854189, 57971, 874, 20, 70, "Input",ExpressionUUID->"249f3444-8ece-4c4c-ad40-4c82c4e651fc"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2855124, 57998, 827, 11, 70, "Section",ExpressionUUID->"3e1a40c7-fb30-46e2-8621-9ab039af8c6d"],
Cell[2855954, 58011, 4306, 71, 70, "Input",ExpressionUUID->"1f92da06-8ed5-495a-9113-ab8c758c6711"],
Cell[2860263, 58084, 4223, 68, 70, "Input",ExpressionUUID->"1d00f408-19a3-4f59-9ba6-fe9cae677a32"],
Cell[CellGroupData[{
Cell[2864511, 58156, 790, 10, 70, "Subsection",ExpressionUUID->"87ce57b4-729c-41b6-8ec1-fb6e84f90a2e"],
Cell[2865304, 58168, 714, 22, 70, "Input",ExpressionUUID->"d1723b91-0b7b-4bc9-a552-217032ffd5ac"],
Cell[CellGroupData[{
Cell[2866043, 58194, 964, 13, 70, "Subsubsection",ExpressionUUID->"c51f4421-4a1e-46f1-9dfd-47e1fa90a88b"],
Cell[CellGroupData[{
Cell[2867032, 58211, 129, 2, 70, "Input",ExpressionUUID->"f91e2bb8-3ca3-4d8b-a2d0-a8c5b1156ab1"],
Cell[2867164, 58215, 531, 10, 70, "Output",ExpressionUUID->"90ad3db9-b320-4cdf-9eca-06dc3fd696bb"]
}, Open  ]],
Cell[2867710, 58228, 5660, 143, 70, "Input",ExpressionUUID->"6fab3172-d565-4829-bd0b-e36e70f596d3"],
Cell[2873373, 58373, 4363, 110, 70, "Input",ExpressionUUID->"840370e5-d193-4e6c-8825-b03a8bb7ad49"],
Cell[2877739, 58485, 2666, 68, 70, "Input",ExpressionUUID->"94193048-6be6-421b-abee-54c5c8cb6553"]
}, Closed]],
Cell[CellGroupData[{
Cell[2880442, 58558, 971, 13, 70, "Subsubsection",ExpressionUUID->"83642e1e-75df-4b33-93ce-a342e6dd2546"],
Cell[2881416, 58573, 827, 16, 70, "Input",ExpressionUUID->"839c10e1-26e7-4def-99f2-4681fe9f2256"],
Cell[2882246, 58591, 8557, 194, 70, "Input",ExpressionUUID->"3b1d5999-6e4d-4324-b45b-fad456442d17"],
Cell[CellGroupData[{
Cell[2890828, 58789, 332, 9, 70, "Input",ExpressionUUID->"5557fe03-ffec-4f64-875f-cadbeb0112cf"],
Cell[2891163, 58800, 126, 2, 70, "Output",ExpressionUUID->"ea7e8b4f-e5c9-4523-8fe3-2acd6d6c0623"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2891338, 58808, 971, 13, 70, "Subsubsection",ExpressionUUID->"cb8dda16-e4ab-4f7d-bd1f-92df09b0e8d2"],
Cell[CellGroupData[{
Cell[2892334, 58825, 1020, 14, 70, "Subsubsubsection",ExpressionUUID->"f0542cd5-02a0-4d94-8e58-1b97539cafde"],
Cell[CellGroupData[{
Cell[2893379, 58843, 5885, 124, 70, "Input",ExpressionUUID->"70ad0259-5ff6-4aa8-a152-251f3a16c2be"],
Cell[2899267, 58969, 3625, 53, 70, "Message",ExpressionUUID->"3e05e2e4-4e7d-4936-a018-7aaa23a944a1"],
Cell[2902895, 59024, 3609, 52, 70, "Message",ExpressionUUID->"e23ad593-71ce-4b16-8bdf-4b69c83d1851"],
Cell[2906507, 59078, 3632, 53, 70, "Message",ExpressionUUID->"0ca5e1d2-64a8-4ecc-8ced-208c0522fd51"],
Cell[2910142, 59133, 395, 8, 70, "Message",ExpressionUUID->"ab1b5d96-d717-46c2-94c0-275fc3a29a19"],
Cell[2910540, 59143, 104, 2, 70, "Output",ExpressionUUID->"b6e1aa4f-9e95-4eb2-b1b7-21c3a875d5d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2910681, 59150, 173, 3, 70, "Input",ExpressionUUID->"b052c6f8-4cfd-46ba-86d4-3a7153c9fc4c"],
Cell[2910857, 59155, 216, 5, 70, "Output",ExpressionUUID->"113ebae1-5d05-46e3-a8ef-d27b246e2f76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2911110, 59165, 9775, 219, 70, "Input",ExpressionUUID->"8513374c-22c9-418b-9e9c-62ac18f684e8"],
Cell[2920888, 59386, 1998, 28, 70, "Output",ExpressionUUID->"d2805935-7f9a-4b3b-a913-039c31b790e4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2922935, 59420, 975, 13, 70, "Subsubsubsection",ExpressionUUID->"57627ac0-0807-4375-ae51-1b1b1fea7a8a"],
Cell[2923913, 59435, 207, 5, 70, "Input",ExpressionUUID->"bbb6df64-eaa6-41e4-88fa-c6c042a2ffa7"],
Cell[CellGroupData[{
Cell[2924145, 59444, 1838, 42, 70, "Input",ExpressionUUID->"71165eeb-cc22-4487-83dd-9dfe50259acb"],
Cell[2925986, 59488, 101, 2, 70, "Output",ExpressionUUID->"197b1ed9-6fce-4cb1-b91a-dadeb56da471"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2926124, 59495, 3020, 72, 70, "Input",ExpressionUUID->"42b08bb0-ff4c-4e0d-a795-b54d7b7f2167"],
Cell[2929147, 59569, 25313, 523, 70, "Output",ExpressionUUID->"0a6d571c-8133-4b8f-bfdf-53228f73f07a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2954497, 60097, 5939, 145, 70, "Input",ExpressionUUID->"6514e8f1-b2fe-4ce4-bc96-ab07c66635d4"],
Cell[2960439, 60244, 25503, 528, 70, "Output",ExpressionUUID->"33f9c26c-cb99-4fa0-827a-3c64e3205759"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2985979, 60777, 2054, 54, 70, "Input",ExpressionUUID->"d80d9abb-24a1-47b2-a5bf-6d0b8ecd2856"],
Cell[2988036, 60833, 2910, 64, 70, "Output",ExpressionUUID->"50d4f647-ed3d-4fe1-85a7-2939ece00e65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2990983, 60902, 2142, 56, 70, "Input",ExpressionUUID->"6aba4b77-05b5-4c42-afcc-78d332f43ff9"],
Cell[2993128, 60960, 15640, 470, 70, "Output",ExpressionUUID->"e8fb8c05-7354-43b6-810d-f63c655e5c2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3008805, 61435, 1790, 45, 70, "Input",ExpressionUUID->"4df2f5d4-23ea-4216-8a35-71d581b7e9b1"],
Cell[3010598, 61482, 3161, 60, 70, "Output",ExpressionUUID->"36e71949-cbbd-43ab-ba09-714974196464"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3013796, 61547, 1617, 42, 70, "Input",ExpressionUUID->"514bc6be-010d-4320-b7dd-76a4c1151c00"],
Cell[3015416, 61591, 3413, 71, 70, "Output",ExpressionUUID->"5b7940e7-d8eb-485f-bf18-810f6925b1b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3018866, 61667, 409, 11, 70, "Input",ExpressionUUID->"7da58b60-caba-42e9-815e-3526d37ecf29"],
Cell[3019278, 61680, 1262, 18, 70, "Output",ExpressionUUID->"9ffc0661-f640-41ee-a75d-eb6fc6655928"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3020577, 61703, 614, 18, 70, "Input",ExpressionUUID->"2e405d3f-1604-49ff-acc7-c5503f6f5834"],
Cell[3021194, 61723, 1116, 16, 70, "Output",ExpressionUUID->"d61e7835-4273-47a5-829c-492e3b89caf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3022347, 61744, 1075, 31, 70, "Input",ExpressionUUID->"c4ede996-1311-422f-8bdd-8fde0d402880"],
Cell[3023425, 61777, 954, 14, 70, "Output",ExpressionUUID->"1882e848-7857-4868-8c0d-256176dba2b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3024416, 61796, 293, 9, 70, "Input",ExpressionUUID->"eaf1d5d4-6d39-4ef1-b9ab-d0259fc3a955"],
Cell[3024712, 61807, 308, 5, 70, "Output",ExpressionUUID->"106ab02f-bb23-45f2-b992-0d92bb9ee0a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3025057, 61817, 1075, 31, 70, "Input",ExpressionUUID->"ea0feec1-1022-48bb-8403-de8b8a05eec7"],
Cell[3026135, 61850, 306, 5, 70, "Output",ExpressionUUID->"fa390021-4747-4693-aa53-65644a3060a8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3026490, 61861, 989, 13, 70, "Subsubsubsection",ExpressionUUID->"3dd06bd9-20b2-49dc-9938-dd6db6275c18"],
Cell[3027482, 61876, 4541, 101, 70, "Input",ExpressionUUID->"acfb7281-4348-4eec-a676-2b30b5531ff1"],
Cell[CellGroupData[{
Cell[3032048, 61981, 3070, 73, 70, "Input",ExpressionUUID->"3a377cbe-6fe8-4c9a-9074-f44db36776a1"],
Cell[3035121, 62056, 28218, 566, 70, "Output",ExpressionUUID->"4586e81c-93ae-48e5-a7bc-e70f7ba51374"]
}, Open  ]],
Cell[3063354, 62625, 12873, 276, 70, "Input",ExpressionUUID->"c888b5e2-c518-412a-a6dd-28323f1e202f"],
Cell[CellGroupData[{
Cell[3076252, 62905, 3803, 89, 70, "Input",ExpressionUUID->"54a0690e-6e01-42af-af2d-4df694bbd0b0"],
Cell[3080058, 62996, 42896, 868, 70, "Output",ExpressionUUID->"4b3669a2-a03c-4382-86ff-353951e21f2c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3123003, 63870, 1102, 15, 70, "Subsubsubsection",ExpressionUUID->"a6de1e4f-45fa-4f63-bbbd-342ba1ca0947"],
Cell[3124108, 63887, 23160, 526, 70, "Input",ExpressionUUID->"9a61743a-9cdb-4406-8fbe-2389cb460a5e"],
Cell[CellGroupData[{
Cell[3147293, 64417, 71, 1, 70, "Input",ExpressionUUID->"caa13108-d58a-4b66-995d-acb1062dba5b"],
Cell[3147367, 64420, 11394, 236, 70, "Output",ExpressionUUID->"1f6846fe-db8c-45d6-bc7e-5f9705c81b88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3158798, 64661, 71, 1, 70, "Input",ExpressionUUID->"51f064a0-fc71-49df-8c22-a07e328e40d3"],
Cell[3158872, 64664, 15222, 314, 70, "Output",ExpressionUUID->"60b0563f-df38-4b4e-ab50-e7eb055478d9"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3174167, 64986, 912, 12, 70, "Subsection",ExpressionUUID->"bebf6c89-d3d8-4eaa-8b75-096be950f9c7"],
Cell[CellGroupData[{
Cell[3175104, 65002, 1031, 14, 70, "Subsubsection",ExpressionUUID->"c83f987f-97e1-48c9-b2c0-3f5a61fa6ba7"],
Cell[3176138, 65018, 607, 17, 70, "Input",ExpressionUUID->"4b8a33e8-8723-4674-9918-6ab685e4c07f"],
Cell[3176748, 65037, 860, 26, 70, "Input",ExpressionUUID->"aa11caf2-221e-4263-a7c2-8490ad2200a8"],
Cell[3177611, 65065, 953, 28, 70, "Input",ExpressionUUID->"cfc6238c-6d3d-4691-b99e-5cd8e5d7a9bb"],
Cell[3178567, 65095, 2242, 59, 70, "Input",ExpressionUUID->"47644e9a-72cd-45a7-8b5f-49a3b19dc095"],
Cell[3180812, 65156, 1289, 31, 70, "Input",ExpressionUUID->"de2983ab-7050-4135-9ec0-1143c8752723"],
Cell[3182104, 65189, 539, 14, 70, "Input",ExpressionUUID->"62bbcec9-3489-47ff-a51e-ca24a9bcff39"],
Cell[3182646, 65205, 2719, 69, 70, "Input",ExpressionUUID->"8b8f7f9d-e800-4a98-b2ac-0e150874ac7d"],
Cell[3185368, 65276, 347, 10, 70, "Input",ExpressionUUID->"9f5c3677-87cc-406b-8eeb-1ddfa790e2b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3185752, 65291, 971, 13, 70, "Subsubsection",ExpressionUUID->"711a1ec6-9e2f-428d-be7f-b53e64b9be34"],
Cell[3186726, 65306, 803, 15, 70, "Input",ExpressionUUID->"3809c37b-01ec-4107-a939-3508ab9c3f93"],
Cell[3187532, 65323, 5631, 127, 70, "Input",ExpressionUUID->"0c317da6-f866-4242-bf4f-e245112879cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3193200, 65455, 971, 13, 70, "Subsubsection",ExpressionUUID->"4185ea39-aa8d-476b-834d-ed34f1f0d7b0"],
Cell[CellGroupData[{
Cell[3194196, 65472, 1023, 14, 70, "Subsubsubsubsection",ExpressionUUID->"c56aab01-2fdd-4242-8d8b-6ff8df970258"],
Cell[CellGroupData[{
Cell[3195244, 65490, 9968, 211, 70, "Input",ExpressionUUID->"4e4f67ee-7811-43f9-99dc-8a683109110a"],
Cell[3205215, 65703, 334633, 5870, 70, "Output",ExpressionUUID->"c3a22eed-8fd5-4187-a831-36824dc85629"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3539897, 71579, 978, 13, 70, "Subsubsubsubsection",ExpressionUUID->"9e74b3d0-6635-489e-b2de-c4b7b72d1214"],
Cell[3540878, 71594, 207, 5, 70, "Input",ExpressionUUID->"de746b21-d48b-4e11-88cb-b3e5a7e1ce76"],
Cell[3541088, 71601, 1839, 42, 70, "Input",ExpressionUUID->"b0b7479c-7762-419d-b589-c10cd946065e"],
Cell[CellGroupData[{
Cell[3542952, 71647, 409, 11, 70, "Input",ExpressionUUID->"71f1ba1a-fd21-405b-a0c7-9eba324b3872"],
Cell[3543364, 71660, 1385, 19, 70, "Output",ExpressionUUID->"871c0b89-b6bd-481a-96ac-5cb9a8eb57d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3544786, 71684, 614, 18, 70, "Input",ExpressionUUID->"f2107d24-09ec-4635-8f48-fb010280781f"],
Cell[3545403, 71704, 1242, 18, 70, "Output",ExpressionUUID->"1508981b-3d0f-456b-903e-d6de25175e1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3546682, 71727, 1075, 31, 70, "Input",ExpressionUUID->"5bb2fb99-b6f3-4406-aee5-3d2e74d707cb"],
Cell[3547760, 71760, 1077, 16, 70, "Output",ExpressionUUID->"1a780097-9960-412a-91ab-db680d7144f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3548886, 71782, 992, 13, 70, "Subsubsubsubsection",ExpressionUUID->"1c49d81e-42e2-45be-aaf1-98c88098e1b7"],
Cell[3549881, 71797, 4541, 101, 70, "Input",ExpressionUUID->"387f1696-4350-4fe8-a1fe-80d3f3fdbd90"],
Cell[CellGroupData[{
Cell[3554447, 71902, 3040, 70, 70, "Input",ExpressionUUID->"8bbe3b7d-304e-4ee1-8fb5-b717608ec05c"],
Cell[3557490, 71974, 28309, 569, 70, "Output",ExpressionUUID->"36e303e8-6e1f-4d6f-9ab8-93610c620e2b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3585848, 72549, 1105, 15, 70, "Subsubsubsubsection",ExpressionUUID->"aa5aa035-954b-47e4-984c-a9c7490563ce"],
Cell[CellGroupData[{
Cell[3586978, 72568, 23160, 526, 70, "Input",ExpressionUUID->"7bde72d2-1f69-4c28-b824-7377129d5610"],
Cell[3610141, 73096, 10774, 227, 70, "Output",ExpressionUUID->"f35bc615-a657-4ac7-a180-5b13ef94ab01"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[3620966, 73329, 1005, 13, 70, "Subsection",ExpressionUUID->"a1fef5fa-05ab-4bb6-8f9a-b5a6ecf10c6e"],
Cell[3621974, 73344, 964, 13, 70, "Subsection",ExpressionUUID->"d002c53b-7bfe-4605-86be-443a9d4dd1e5"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
