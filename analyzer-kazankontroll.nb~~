(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1058729,      22005]
NotebookOptionsPosition[   1048108,      21824]
NotebookOutlinePosition[   1048662,      21843]
CellTagsIndexPosition[   1048619,      21840]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["data & functions", "Chapter",
 CellChangeTimes->{{3.9089365436621428`*^9, 3.9089365612067785`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LastPosition", "[", 
   RowBox[{"list_", ",", "item_", ",", 
    RowBox[{"default_", ":", 
     RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}]}], ",", 
    RowBox[{"heuristics_", ":", "Infinity"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "revPos", "}"}], ",", 
    RowBox[{
     RowBox[{"revPos", "=", 
      RowBox[{"FirstPosition", "[", 
       RowBox[{
        RowBox[{"Reverse", "[", "list", "]"}], ",", "item", ",", "default", 
        ",", "heuristics"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"revPos", "===", "default"}], ",", "default", ",", 
       RowBox[{
        RowBox[{"Length", "[", "list", "]"}], "+", "1", "-", "revPos"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.908949173713482*^9, 3.9089491737160115`*^9}},
 CellLabel->"In[46]:="],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicBox[ToBoxes[
   StringJoin["Making second backup, ", 
    FileNameTake[NotebookBackup`Private`bakfile2$194476], "..."], 
   StandardForm],
  Evaluator->"Local",
  ImageSizeCache->{310.3998046875, {3., 8.}}]], "PrintTemporary",
 CellChangeTimes->{3.909816802096335*^9},
 CellLabel->"During evaluation of In[46]:="],

Cell[BoxData[
 DynamicBox[ToBoxes[
   StringJoin["Backing up ", 
    FileNameTake[NotebookBackup`Private`nbfile$194476], " to ", 
    FileNameTake[NotebookBackup`Private`bakfile$194476], "..."], StandardForm],
  Evaluator->"Local",
  ImageSizeCache->{411.34394531249995`, {3., 8.}}]], "PrintTemporary",
 CellChangeTimes->{3.909816802169351*^9},
 CellLabel->"During evaluation of In[46]:="]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SparseTimeMovingAverage", "[", 
   RowBox[{"data_List", ",", 
    RowBox[{"windowSize_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "times", ",", "values", ",", "averageValues", ",", "result", ",", 
      "halfWindow", ",", "timeWindowIndices"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{"Extract", " ", "times", " ", "and", " ", "values"}], "*)"}], 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"times", ",", "values"}], "}"}], "=", 
      RowBox[{"Transpose", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Half", " ", "of", " ", "the", " ", "window", " ", "size"}], 
      "*)"}], 
     RowBox[{"halfWindow", "=", 
      RowBox[{"windowSize", "/", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Moving", " ", "average", " ", "calculation"}], "*)"}], 
     RowBox[{"averageValues", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"(*", 
        RowBox[{
        "Find", " ", "indices", " ", "of", " ", "times", " ", "within", " ", 
         "the", " ", "window", " ", "around", " ", "the", " ", "current", " ",
          "time", " ", "point"}], "*)"}], 
       RowBox[{
        RowBox[{
         RowBox[{"timeWindowIndices", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"times", ",", 
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"#", "-", 
                   RowBox[{"times", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "<=", 
                 "halfWindow"}], "&"}], ")"}]}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "timeWindowIndices", "]"}], ">", "0"}], 
           ",", 
           RowBox[{"Mean", "[", 
            RowBox[{"values", "[", 
             RowBox[{"[", "timeWindowIndices", "]"}], "]"}], "]"}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "Calculate", " ", "mean", " ", "if", " ", "indices", " ", "are", 
             " ", "found"}], "*)"}], 
           RowBox[{"values", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", 
          RowBox[{"(*", 
           RowBox[{
           "Use", " ", "current", " ", "value", " ", "if", " ", "no", " ", 
            "other", " ", "values", " ", "are", " ", "in", " ", "the", " ", 
            "window"}], "*)"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "times", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Combine", " ", "times", " ", "with", " ", "calculated", " ", 
       "averages"}], "*)"}], 
     RowBox[{"result", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"times", ",", "averageValues"}], "}"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9089490532207503`*^9, 3.9089490532207503`*^9}, {
  3.9089491038198137`*^9, 3.90894910484904*^9}, {3.908949458831786*^9, 
  3.90894946343741*^9}},
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"NearestPosition", "[", 
   RowBox[{"list_", ",", "element_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"list", ",", 
      RowBox[{
       RowBox[{"Nearest", "[", 
        RowBox[{"list", ",", "element"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9089403907120113`*^9, 3.9089404164752455`*^9}, {
  3.9089404632899427`*^9, 3.9089404796153593`*^9}, {3.9089421934091983`*^9, 
  3.9089421951388817`*^9}},
 CellLabel->"In[3]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"NearestPositions", "[", 
   RowBox[{"list_", ",", "element_"}], "]"}], ":=", 
  RowBox[{"Sort", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"list", ",", "#"}], "]"}], "&"}], ",", 
      RowBox[{"Nearest", "[", 
       RowBox[{"list", ",", "element", ",", "2"}], "]"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9089403907120113`*^9, 3.9089404164752455`*^9}, {
  3.9089404632899427`*^9, 3.9089404796153593`*^9}, {3.908942144049083*^9, 
  3.9089422166488085`*^9}},
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"BoundingPositions", "[", 
   RowBox[{"list_", ",", "element_"}], "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"list", ",", 
        RowBox[{
         RowBox[{"#", "<", "element"}], "&"}]}], "]"}], "]"}], "==", "0"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"list", ",", 
         RowBox[{"Last", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"list", ",", 
            RowBox[{
             RowBox[{"#", "<", "element"}], "&"}]}], "]"}], "]"}]}], "]"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "//", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"#", "+", "1"}]}], "}"}], "&"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.908944034381223*^9, 3.9089440354772205`*^9}, {
  3.9089450999198017`*^9, 3.908945156806656*^9}, {3.908945315375152*^9, 
  3.908945319665885*^9}},
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"DateDifferenceInUnits", "[", 
   RowBox[{"date1_DateObject", ",", "date2_DateObject", ",", "unit_"}], "]"}],
   ":=", 
  RowBox[{"QuantityMagnitude", "[", 
   RowBox[{"DateDifference", "[", 
    RowBox[{"date1", ",", "date2", ",", "unit"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9084526517756166`*^9, 3.908452651776616*^9}},
 CellLabel->"In[6]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrecedingVal", "[", 
   RowBox[{"list_", ",", "val_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nearestVal", ",", "nearestPos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nearestVal", "=", 
      RowBox[{
       RowBox[{"Nearest", "[", 
        RowBox[{"list", ",", "val"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nearestPos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"list", ",", "nearestVal"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nearestVal", "<", "val"}], ",", "\[IndentingNewLine]", 
       "nearestVal", ",", "\[IndentingNewLine]", 
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{"nearestPos", "-", "1"}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.909595160403163*^9, 3.909595172046154*^9}, {
  3.9095953444993*^9, 3.90959536152275*^9}},
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrecedingPos", "[", 
   RowBox[{"list_", ",", "val_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nearestVal", ",", "nearestPos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nearestVal", "=", 
      RowBox[{
       RowBox[{"Nearest", "[", 
        RowBox[{"list", ",", "val"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nearestPos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"list", ",", "nearestVal"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nearestVal", "<", "val"}], ",", "\[IndentingNewLine]", 
       "nearestPos", ",", "\[IndentingNewLine]", 
       RowBox[{"nearestPos", "-", "1"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.909595552164418*^9, 3.9095955630293283`*^9}},
 CellLabel->"In[8]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<ovi\>\"", ",", "\"\<PK\>\"", ",", "\"\<SZGK\>\"", ",", 
     "\"\<G\[OAcute]lyairoda\>\"", ",", "\"\<M\[EAcute]rce\>\"", ",", 
     "\"\<vend\[EAcute]gt\[EAcute]r\>\"", ",", "\"\<kisterem\>\"", ",", 
     "\"\<traf\[OAcute]h\[AAcute]z\>\"", ",", "\"\<Oktopusz 1\>\""}], "}"}]}],
   ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9084483898778114`*^9, 3.9084484006870604`*^9}, {
  3.9084509225861444`*^9, 3.908450933317398*^9}, {3.908871214289195*^9, 
  3.9088712263215513`*^9}},
 CellLabel->"In[9]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"startDate", "=", 
   RowBox[{"DateObject", "[", 
    RowBox[{"{", 
     RowBox[{"2023", ",", "11", ",", "9", ",", "0", ",", "0"}], "}"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.908452751039141*^9, 3.9084527665861864`*^9}, {
  3.908457346468955*^9, 3.908457366020687*^9}, {3.9084574466646376`*^9, 
  3.9084574473971825`*^9}, {3.908519054866841*^9, 3.9085190559351225`*^9}, {
  3.9087719971583242`*^9, 3.908772002597599*^9}, {3.909029429390353*^9, 
  3.909029429469653*^9}},
 CellLabel->"In[10]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"log", " ", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"StringDelete", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<{\>\"", ",", "\"\<}\>\"", ",", "\"\<'\>\"", ",", 
                 "\"\<,\>\"", ",", "\"\<\\t\>\""}], "}"}]}], "]"}], ",", 
             "\"\<: \>\""}], "]"}], "&"}], ",", "\[IndentingNewLine]", "#"}], 
         "]"}], "&"}], ",", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<log_1.log\>\""}],
         "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Map", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{
             RowBox[{"StringDelete", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<{\>\"", ",", "\"\<}\>\"", ",", "\"\<'\>\"", ",", 
                 "\"\<,\>\"", ",", "\"\<\\t\>\""}], "}"}]}], "]"}], ",", 
             "\"\<: \>\""}], "]"}], "&"}], ",", "\[IndentingNewLine]", "#"}], 
         "]"}], "&"}], ",", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<log.log\>\""}], 
        "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.908446649235643*^9, 3.908446669798135*^9}, {
   3.908446738044016*^9, 3.9084467400163145`*^9}, {3.908446899131307*^9, 
   3.908446907541911*^9}, {3.908447198833874*^9, 3.9084472167806764`*^9}, {
   3.9084473846901264`*^9, 3.9084474074560523`*^9}, {3.9084474404521246`*^9, 
   3.9084474593595457`*^9}, {3.908447498276503*^9, 3.908447499056218*^9}, 
   3.9084476861989946`*^9, {3.9084564229978685`*^9, 3.9084564239403753`*^9}, {
   3.908935499533626*^9, 3.9089355001268625`*^9}, {3.9095539288388605`*^9, 
   3.909553934373023*^9}, {3.909553972950186*^9, 3.9095539826808577`*^9}},
 CellLabel->"In[11]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"tempControlledRooms", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
     "9"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9089408292940345`*^9, 3.908940853321516*^9}},
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomToPump", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4",
      ",", "1"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.9089407992439795`*^9, 3.9089408204937506`*^9}, 
   3.908940858259383*^9},
 CellLabel->"In[13]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell["basic vis", "Chapter",
 CellChangeTimes->{{3.9089365436621428`*^9, 3.9089365454373636`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTemps", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "&"}], ",", "#"}], 
       "]"}], "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{"GatherBy", "[", 
      RowBox[{
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DateObject", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], 
          "\[IndentingNewLine]", "&"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", "#", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "5"}], "}"}], "]"}], "]"}], "&"}], 
           ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"Select", "[", 
               RowBox[{"log", ",", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", "#", "]"}], ",", 
                   "\"\<temp measurement\>\""}], "]"}], "&"}]}], "]"}], "]"}],
              "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"4", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], "]"}]}],
         "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.908462830281168*^9, {3.90876985650635*^9, 3.9087698581276445`*^9}},
 CellLabel->"In[486]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"roomTemps", "[", 
         RowBox[{"[", "room", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"startDate", "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"room", ",", "1", ",", "7"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "roomNames"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"700", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
   RowBox[{"Joined", "->", "True"}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.908448001048175*^9, 3.908448010079211*^9}, {
   3.9084480580100527`*^9, 3.908448088524588*^9}, {3.9084481766230097`*^9, 
   3.9084481771155424`*^9}, {3.9084482853811393`*^9, 
   3.9084483098703427`*^9}, {3.9084483501200438`*^9, 3.908448363754242*^9}, {
   3.9084484317823234`*^9, 3.908448436355921*^9}, {3.9084485738840914`*^9, 
   3.9084486127809763`*^9}, {3.9084487243852124`*^9, 
   3.9084487534516573`*^9}, {3.9084488655828476`*^9, 
   3.9084488675005016`*^9}, {3.9084489938160954`*^9, 3.908448996050556*^9}, {
   3.9084506648008814`*^9, 3.908450687727796*^9}, {3.9084507408275995`*^9, 
   3.908450755095522*^9}, {3.908450841170539*^9, 3.9084508416130257`*^9}, 
   3.9084509277644525`*^9, 3.908457314864416*^9, 3.9084574368288574`*^9, {
   3.9084628420702505`*^9, 3.908462843842002*^9}, {3.908462923507742*^9, 
   3.908462944389038*^9}},
 CellLabel->"In[487]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1mtIFFEUB/BbFFFa9iBDzd1RKgp6UKaBGN4oyEoExaAPoYPPoA9C+Aqy
blBkD83yUT6yUYSkpEgL1FLv9qHIdDWNLCIZsValBFM/BGa0c3GX/mdA9Mf/
nHP3zlxmDUnJSkhfzBh74/6xfjNmRD+0TR5Qf7Jwzpi404TubEYvbwEbS1rB
zBfNN6ClDa3ta3e7t8d9xe616uPRWhpaFL4Ayz5in5e4XkQnfv5IyxnW5VLr
3UWzRgfYSH0F1oe6sd+FljFOt8PUperPOnF/A31g9hEtvqK1uH7cXzxaP0Xy
LOLzaN6ANh+htRnSv/Q99kei2XG0SCX1mWjtNKk/Q+pz0bKA1F8k618leQmZ
V0bmVZP6+8SP0XozyTvIfAdx8me3qyqtK8y6vwnDYFltgnn9CPQbn0Y951Wo
/c1/AxszLk99j3p+J8bAvGDcc/5alNvGvespV02AWfwP7P+A1vf/xDz7F1he
Q+t1aK1hGiyqZtExczjvJlqUkvzCH9x/MdqoQ2utaNFF6p1oPkA8gmbfST5F
5s0Rr5jH+lVoFk1cweye8xBh1XcussPnf4vWD/thHroWLKPQ/BDJS9eDWQda
DKKljz/mNjQfDLAvnK8ANW8IrfsFYr4OLf3RIhDNbaQ/lPRvJv3bSP8OUn+Q
1GeT+nziK6T/HsmfkXldpL6b5E606ROE84LRYjeahaNlEdqsIfMayLwnpL6d
zH9N5o+ReX/JvMSNmGeijTy0KEGbbaTfgWajxNNofZ7YNxjrV6N5EFpsQcsk
kgvicyH2he//jDDVvx09tMvueR/vsdYvigDLqGiwmOHo3hj0lyNgnnMU51Ue
A5uNaDZF8pOxmP9OwPlrEnF9B/F0Mro+DT2MZjwdnYQ2Z7Nx/fIc3F8Nmk/m
gY1l+bh+3HXv81DzL9/wPj/1ffy0yPv+sszeFaMn0HyW5JtKvO9rdd5ib4HF
JbSsJe6+jf0ry8BMQ/NctCwg9Q9I3kb6+0keV+G9P8pbaz33R/1/YPBGT+5S
+93ZAhYpaK0Qzcqf/+d/kPMfsw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1VtIVEEYB/DpRlSWXUhRc3eTNIIulLkPYThhlNUSKBIRYYvXoAchvL1Y
EwRZ4aVcKTerY0hJRoEW6JY6GxG4ecsuPkhyQlMsJVOJQI32DO6h/zewLD/+
33wzZ3fOOZvTc1OyFjPGfP6P8c2YSHhsmTiQbYwRO/f71hN0WyN6RRNYW9oM
ZkFoHoqWFrT2qcXvWDXijPpkD9iWieYNHnO+YVHyEix70Cz0ld9dnf7hUOvb
28D8NprVe8FaxmuwPvzGb3e1MdR++n3oEbT42WnuZ6+R9/WA2We0+ELy471g
mYzmZ0meS3yB1NeRvAHNpkm+7D3O34cWqcQZpD4Hzc6R+vOkvgAti0n9JdLv
KskrSD8X6XeH1N8nfop2NpK8lfT3Ei8ZMM+rYT1lEMxPDZL96Nj/9xCcHzY/
DJYnR/G8ucfQH3+g94+jHeN4/vN+4f1xDc1r0ba6KbBwz6CTZrFfOVpUkvzi
HN5fZWhRi2bNJG8n7kbzPuKvpN83kk+itVnilfNYvwbNEtDOtkVWmN+Bdh4O
Bouo9WAZj+YHSV65Ecxa0eIDWq4KwdyCZv1huL/gcMw3oGUIWoSjuYXMjyLz
o8n8bWT+DlKfSJxH6ouIr6D1uyR/TtZvJ/19JO8m1xMUgf0i0WI3msWhZSla
ryH96tDaM1LvQdvekv6jpN9fsr/UTZjnoLVCtKhA6y1kvhdtG0KzKbRznjgo
EuvXonkEWsSg9TSSC7Q2arUuPI+bVP2JaL+ZGmq9jq1mvXp/x2wHM9cua+B5
qt4/pXawjE8Ai2mOeVaiub56v5Qcsi48/7PVel1J6IEjYJ5/FCyrj4H1ejSb
JPlpB+YixdxfrOE/aL4uFSy8xFNn0A8y0YNoxrPQaWh9Jg/Xr8oHyxo0nygE
a8uLME+8bv7ehm3fSwPXP6LWf1cW+P/FHsNjaD6DlmHl5nlQ7io3z4/q56mA
9ZyOG2BxGS3voTm7af4/6rz40M7VLjCzoYXdFbj+MHVeCtCyGM0ekbyFzO8l
9e3uwPV3qvq5GvP3UffXloeQs51NYJGOtpWgWdWL//wPGzNFGQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1n1o1VUYwPFTGVEu7VWZ5r23SYajhmu6wsx7xKKlI9pY5R9iP3wt+mMU
U/ePdYIgi67OdORdVj9j6MgycAVqbJ7tD6ttzpckBdFuaBtigzlHCLbonlP3
tO/zg8u9H57nPOfld87hPriyvnbNzUqpS/mP+1bKpL9MDC3yP9XjOu+Pv6I7
D9C3t8PxhIOwKqL1VNomRLzmMJxaTZvN37P9cdp0d+R9rC//VFe6eGUnrHfS
qq0Ljld1s33pD3m3ZPNPsbMp/99+flXOa/3j65/pCePxHqDtxF7U06eOw+oX
2pwX8edPwLaG1q+KeL3wWyK/VcT30alrIn7rSbafT8d1tFkl8tfR6nWR/6bI
30DbTSL/HVHvfRFvEvV2iHqfiPzPhffT0QER7xD1u0T9gZOF/dTnx7fkNNdr
4dmwf+a5/OvnEc/VXhDjzfH9dF9k/bFLsF02COuWy/TpK7D59Uphvxp/Hp/6
g264CtsPaL2bTrWOwLEeZX8tdDT4J9e36gbnv5U220X87b+4fltos5tWB0X8
iHA/rU8J/ybq/S7iw3R8Q/iOMeZPolVaxFuDs26/RJ03Jcc7/ok2o7ck/9tf
A3Pd+pwtYvzrScnx91307GTYlNwDq1Lnf+8z//4X0Ppp4cx9eVe4p93nb78f
Vh20+Zm2E6cwnqBtb3Ho7wlX7wwdTZ7G+L20nUKbabROiPYlov1Dov1s0f5R
OrdYuEHkN9LReyL/U5H/rej/iBhfDx33i/kUTWe9GbQpp9U82mbo3C46aqXj
b0T+YTp1VNQfFOP7W4yv7gH2t46ON9Kmic4dEu276NRFWo2I/DHhohnMv4vW
02kzi86tEHEj6jUmwnn0+39hsnAeKrxHkoV8f9+q2SU8j9HMJP8PPcz7YNYj
sHqyDPeHylTC5tz8UM/fLwvSsHo5Hc5rhYsPp8N4nM01Dat4UWj/mMvfV1Vw
n7M5RsfnnoP1+iWwzS6Fc220Ghbx5dWsV/NCWF8/vuu1sL67DjZdtPrxRczP
zn0prIefz8gr9Ber6Qu00mvoFbRtey307+cz2gCbxevD/ih342+m7S4RH9oI
x7c1wrk5jay//MOwP1w8mpnB+zdlmcL+Kvbr80yG7fdkwno5p3q3wOoyrUdp
u21rGJ/Pr2/i/indFuKu/6iaNu/S9jPhno/Y/s4dsErRegNtN4n8vSJ+iI5O
0GZqc1g/d770/p1hfr6/N7Ih35+/oWxYX3+e+1vC+/H/N5N7eV7L2mGzkk5t
plXzd+P8D1iAhzk=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
7/+fV7vQ/BQ9pu2PJr70MT0/H1H/yh8z9YnsVT9m6hf51/IYxmPcMc9+vhGD
j+l8L0T5MhR5JY0+Pd9EvjkG+SYmH8N8m3YM1je1zdinehL8cwzqh8qSAvVI
PpaC9axYime/PwctUjz7fV+2QZ61T9HxkEz6nxme6r/4Gnk5LsWD992EFM/e
/1EzHHvfp3iwH7Q1xbPfp9WhFA/eN3IdBz5a6Djw7Fnk/YrIqyoOX/M4rE9B
7eO4fjU87tn7H6zJcc9+n1HNkZet0Z769Diuv7uPw/olLxz3YP801eHvOny6
8T+2v5opgPXBzxt49v5FUCDwYP+oQgD2VeUA16/XA4gv9kYA6xV7B3nRGfVl
3wDWRzEggPWbDcH2xbAA+qfiA8/er5FjAlif1TSnPwuwv/4+w8f2ly4HMF/+
VdOf5TQ+N4z/R6m9O6Z/h8jfh05gPCw7AfPrLz+B+muQV5tQX247AfGiDpyA
/BApJ8B/df2EB/tnt5EX95GPtvgb46XN3zCe7Gvk1Qjk5ai/Yb7EuL8x3iY5
+lNRX8xGns37G+Y7+r3j31Lk2e9/Q71iJ/6G/FGnUF5cRF4WPAn1zH/1JMyn
/+ZJPf83yJ9PT+r5eYL2O6IndT19mfZT5hr9QrS/8SvyasNJD/bL/jzp2ftF
rPApD/aj+CkP9rNqnfLs8wi1/BTYkytPefb+EktCnqUhVrlPQ/viidPQXrTI
ac/ev1ddT3v2/mL0u9OevZ+vfjmN9bXNGeCDN89A/ZbvnvFg/7HjGR3v1yjf
ujj8OIef6PCzsT127Az4HzmHvLiFvMx0FvonMp9Fe9nPonxe5EVBh/fPevZ+
mV/yrGfvr8oKZz3YP6tyFvoTVEV51Q6x6HXWs8+jomPPevZ5VDDByMf295KQ
F1vOevb5UXQf8uzoWQ/OmyqfAz5a/Rzoi2bIszGGp/1GOf+cZ+8vikXIqxSj
/wLJ/30O4pHdOYfj2+gfHP9P/oH4Cr5Eno1GXiQ48rNRXi39x7P3M1Wh8zBf
8pnzMF/+8+dxft49D/MjvzoP+SsWnvfs88Fg3XnPPo9j586b+kTtX0BepiMv
Ml1APucFzz4/FEMuwHyyTx1++AXPPh/0R17w4LxyH+LgiNPe8Qs6fzaQ/Enk
1XnkIw9d1P1PJvk8F1G/OmLZ4CK0z5pd9OzzzqDlRbM+Ej/0oplfal9eNOst
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
YjF2Oc7nxOVW/vwfokNvuQ==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1ntoTmEcwPHHsoQxdxnbe6xME0qzJdEeIbeltib+0JzGUP5YyS7/4FHK
ZW3utzHOtBBzySimbWdEzG1GVmSOMAlhltwm73vyvu37O7XWp9/lec7znF+9
o3Pzs/KilFLNwb/Qf6Wc9NMJn2bcvxd8MtK0UuZANV1/ke5dAzs9r8AqhtbD
aTdBxDNrYWsFbbZeY/1D4V11Yd9LDTmtHtYHaXWqEXaWX4ftnzeC9o/G+P2i
bga90n9CtqbcRtxubYJ1u3DLQ1g9pc0L2lrYzPUzaXu1iOcLb6B1Fe2doa1v
oj76Eeun0moRbZaL/FW0tUbkrxX5hbS7XuRvEutvE/Gdot9e0e+wyD8mfI62
L4p4nejfKPZz9lnk+5kcsm7jeWe1if147Df2TdAp/uPPTxftLXkH6/L39JMP
sD39I+P9Poe/33bf677C7nbarqStqg7YlHcyP+U797v2F89v7m++/w7a7BHx
jX94fmW0U0lbV2jTIPIf0LpF+BWt3or4F9Hvt3CfLub3p1U6bep7BFB/h9a1
0YHu35N51h9xe04s6xMHwe40Ws8S8ZdDAuH7871nKKzqaPOYdvsOYzyBVmXD
A/+/hxr/flpHwHZsHKwG0+4w2sTROkHUJ4r6MaI+WdRPoL2Zol+ByC+m7S2i
vkLkXxLrN4j9NdHOA7F+zEj2i6edSbRKpb1SEa+g7SrR77yor6WtWyL+TvT7
K/plj2J8Fe0UCe+kVa2ob6St18IdIr9LOCae/QfQeiRtkmgvh3YMbTclYr5U
STLnN2k8rErT6HHpkflJ8eeXNt80fX8u7DyfB+uC+ex3aAHsnaKtLyK+NANW
P7LYf2A212+kjbM4fD4pvjuWwVZ1bvi8lB8/voJuo5XOo3Nor3MdrPcVwO4R
Wn8qgp1exexfuC1yv37+xpLw+63072t2aSQesnW3jH5P253CGbtgs5l2jwo3
7WZ9v71cz6LtQtpdL/JP0t5VUd8snLc/cn8h66RDkfPy+88v5/sMPByJ+/MT
V8F5rT4a6P572k6tZP33E+ivWy5E5su/n4k1sMmlra0ivuEy9q/2dfc/ii7t
Gg==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdnHn8D8X/wEclkftM5T1bElGI6EthkBLKkRI51n3myvV1NYockdxnWbfc
Po6vI4wclVwhhFh0uW9C9Gv389vPZ5/z+efzeD2er2teMzszO7v7fqJZpzot
7xNCPJNBiOC/EM7D8xPnK94o1HDkN9dLKSF09kDOufi1E71zlv5X9ipQFrsC
eXVi0NnafwX66mdy5xeLP7iAPO8CcP/dQO5SLsPBmZfC+A0D+d9kCjXMEugr
l9xpEcihuwuhfvtA3rnj37+MoX5/6qsR5GZsID8TNPfP0N9O+vPSLGQ+NQK5
TpDwj4Es6i6EvtN8YZTv7pB3Xcj2dbf8/TeQ/5U6l9seyhMCuVXw93soz6F/
dz71zTLqe1vI3esL0T4tFoE7Dy0CVyqQ5b/prj4W+n8tkMOhYUL76oE8q/O/
DTgVtu+tQJ486d+/n0P79xchX9FlEeqlJlPfm70oqs/qkH+1KBof+8P4G6lv
fmE+ZsNi1mPakn/lzdeDARz6278kyndm2N5DS6DvZVwatX9emG/OpfT3dCCf
q/1vhgvCehYlFyVor8oFctV/m7/42zBeRXLzFu11PXK3neW/I+PrMfTvzbDi
nyQ3p2lvti+Lxt/S0N+5ZdF4HRnaX1oWXf8rQ/2b5PoOufpnGfyL+5No/2BS
1J5hYb4ZkliPXOQ6bxLrnS8J8U1J2usXk6LxoENeiVxVS4rqMTjMrxH9G5dc
t0jCeBEdyFVP5mv605/+iPpmBPXVOKv9U6nveVb+s6z855H7C6z6bbDk9Msh
u8cDuU94gYX+LwRygDNMCMdr0RXgRq0gb2fx91dE7W8fxuuyAvn6n1p85Iro
ep4Uxh9Df6rbymj8dA/lcysj/fph+y9ZPO8qcHPyf4hnLv8van+10P4uuffA
asgiI2UvRyAHs1OiShgvj6X/2OpoPakRxktQVq9Y+lVXIx/vmqXfdE3UvlKh
fss10fxZO/TfM5AbhhdEWM8+a+DP+XhNFK9IqP/JGvgXSy2+nPbqwbXgIsNa
2hciN0XWRvNJ8TCfYmuRryq5Fu3R5deiv1Ql2qvajOe/y3i6Iblyae+0oOy3
pr3Xfi3aq3tb7RlE/95Q+hOjyM1Yi3tW/jPJTZl14LrcOrZvyDr251xysd6y
30Judlv+xn8dzZ9ZQvsvv6b+dHJ/49fR+Ho8tN/8dTS/irAes9ZH9mdfCPwt
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
AfhTlclVHXJTn9yMe4Dtm2TZ104r49e/83Ygpz5PMO8Gcur1pty0Mv5+p2iR
Fu0xg+hPjUgr4++veDUeBPfHPAh7PSGQU59/6DmBHHs+8p3F9wVy7PnQGXJ1
nfbiViCH698TYb5/Pyjjz0PMw+mgr7Okgz/vUjoZXx+cdA9JvA+UPZBj83Xe
h6j/AvV1T0t/1EOolx73kIyvn2oSufFo7xdLL7F+l0yP+OqN9DK+nxC1yYWb
HvXxm1Nft6Z/0zW9xPrWO73E/m1AeuTvDiUXI9Ijf2+slf9U+tczma87l/mp
VenRn3pTeonz/x3pZfz5iTlCro8zP3WK+ThpM7C9WTPAn5IZ4M88nQH+dOEM
7M+iFi+TAfVQ5ehPVKS9eYX2bg1y/y1y04xcdyf3Nbk3w4o/32r/ygwcD19b
fAu5mv2wxH5uXSDH9ku7yNUJci9DRnA3c0YZP19Q+QI59j5tT3I9ilz8avH0
mWhfJJPEfrtYJow3UyKTxP65LLkoH8gi/AvbWzGTxPO1aeTuTHL/gcwS91MP
ZQYX0uJPZ2a9C2dGfuK9zBwPjTPL+P2IapVZxvf7oh39mfep776WBbJ5Mwvs
zbYsrO/2LDJ+fuXusvifWSTOO66Si8xZJc/bsmJ8iHxZJZ6H3aO+rphN4nyi
Sjbo+zWySZwP1iJXdbNJ3I+/l03G7/d0E+qbCdkkzsum0F5Ny8b2LM6G/hRJ
zFcftPSP0L84zvz9y8xHX88m4+cl4m4gp57PiozZJc73s2RHf3k5yFWe7Gzf
k5RF4ezIX5TJzv59mfrqlezIz6maXeK8vbrF65H747NLPM+YzHzdReT+5uwS
zx+ukZt8OciL5wAX/yFXdchNfYt3ziHj5/f6Ss5oPasX8hs5Ye8VzBW1r37I
S+Si/zK5ovbVDdtXMVdUn95h++rR3m2SK5qfa4bx2+WK5vf2of6YQI49n5iT
K7q+a4Tx55P7ywI5ef8V6q/MJePPG8R6ynqfxY9Y9ieZj/qd+ZqHczP/hCVX
D+Rw+Swa1q9BbuTvdCE33WivJueO+qdk6G9v7qh/8oT8Wu6ovmVD+zv0p7Ln
SVn/wvblzgN/Jm8e+PPy5Yn6s1Ro/0SeqL/yhvkWIPc/CuTk++Uwv0/oTw1j
PP34I7AXTz0C/6YguVvsEfjTZR9h/lUeicZbzjD/htT3O5Or3rT3xj7Cem19
hPX6/hHWd0cgh98jJ0L9/eTiEOM5f7A95gzbqy/Q3rlB7tTKC3tdLy/r+x65
3ywv8vda5UV7VTtyp2NetN/X5GoI/YvhjG9G5kW+agL1nYOU3SyP0l8OyiY3
Zf0oZZWw7J+07AtY9s9Y9s9R9itTdrpb+r0ou4Mt+y8svsKKv9HKbztlb5fV
noyPMX4+yt7zj2F+FaUo+yMs/gVldxZlb4llv5ays83if1j+7qXkl7w+1H0c
stuastfTkj+nLNY+jvXJ3UTZOfU41k/niqV/15Iz5oMsslJ2H8vH9fnpfPDv
Nw7k1OexnqasHk3I+PMJkUjI+PNKv0KC/isnuP6+Y9k3SEg8L/k4IbH/GpxA
fmZYiv9wv+SMT0g8T50dyLH937xATt3v6XXkamNCYn+0mfHNtkCOPZ/8NSHx
PsGfVvvLS/jXlSTqJ6pJ5OO+bfH6Usb3e6ahRH389pLxO9Gf31uiPWpnIMef
70qJ53VHJernXGT+5oqVb3oHXGQKZBH8Je8nszrwp3M66C9dglyVdpCPrvkE
/OniT0o8P/rfk+gPte5Jxr/4pIzfr5h7T8K/yJBfxp+/6Gz50R7/cXKxJL+M
3x+qnE/J+PmM88hTEvfbTZ6S8fM10ZxctyM3xwI5dn53nlxffkrGzwvdxgVk
/LzRb1kAXPUN5Nj3ZJ8WgH9/usW/Ihc/0J/ZZcW7k6Kf/D77PwWi/gjfJ3fv
fzqqV/h7EO6vT0ucf1cpmDKek8/DCoKL2oGc+vsYpm5BifftG1q8Of2JTvRn
uhZkvj0s/QUFZfw82ixmPJ1UMGX8hvFXBXLq+bZYSy4OMT/VrpCMf88lOhYC
190LRfkmfy9ynVyJZ2Bv6jzDfGZb3C0MrlsUjubP8PsxMSyFh9+HmRGFZfz7
KbW8cNT/yd9/bSws49+f6LOFo3olf69Uqwi4aVIEXHctEl1f4fc0ztAi0XyS
/P3K5+RiYhG2Z0ogp34fZtYUQXvUpiLR9X075NfJvVvk6m6RlOs5jJfmWRn/
vR39NGWz+lnomyeeQz7O4Oei+Sz593GGPcd82heV+D7og6Kor+hp8Y+KpswX
YX2HFkV9lVcU9TVziyK+XlAU8fX3RVFPtbMo2qPSF4uu3/D7JydTMfbX68XY
HzWKYbyI1sWQv2lHfd2xGMab7keuBlj+Bln6w4uhfWpaseh6Tv4+ag65WUl7
tZ7xxKZi7J8txdDfakcx1FfsKcbxf5BcHSFXZyx+i/mJu4yvHyiO9jtlinM8
vFKc+VctjvHtdC8u47/fZHoVR3/qvsVT1rdQf2Bxju/BFh9TPMo/+fuxbs+n
rK9h/LdLQN+bWAJcTS2Rsj6H9jNLYH7Tc0tI/L7OghKIJ5aU4Py8gdzbSq6+
L4HxoA7Rv3PU8n+W3Fyw+G0r/7tsny5XElzVKon5WtQtifXD/b1kNB6Tn4+e
IffPp9gnP3++HMix553XqS9uWf6+fEHGn6+7X70g48/T1bBSEs/rx5WCvvii
lMTzRq8U7eeViuIl/x7OwlIy/vzRLCE3G2ivvyklsR/aTnv9YykZf57m/El7
c7aUjO9P1FX6M7fJTfrSjJerNO3Lk5sq5PpdcrchuelaWuL7tP4WH1BaxvdP
ehD9qaGl0V4xgrL5vDT6R48tLfF8c2Jp1mca7dVcxhcLrPYutuqxivreJvrT
exjfHCnN/jtu5XeKXPxh8SsWv2HVJ82LyMc89CLy8cq8CHtV7kX6b/sfifdn
dpbheP+pDMf7oTIc70XK4vozJcqCu2UtXotc1yX3m5TleGheVsb3325rcr8j
uR5A7g4iF0MDOfa95XDL/nPL/5SymG/EXCu/xbRXSWU5vteQO1sZX++w8ttv
5XeQ8fURxlfHy0q8b5HxJY7Pt14ir0cu3nuJ7W9G7k+mvf7yJeSnZpCLLeTm
W3LzmxVfvMz46V4mz/Iy6ikS5Loy7U2jl5lfy0COfW/b9mUZv//SnWmvur3M
9vRiPLWUXK+z+EarPT9b+fzyMq/nzOXQvyZbObbHKcf2PkUuni3H+bgk/akX
yyG+eIn+THmLV7Piv0H/on459mdD+hNtGN9vb/nvWQ79oT4iV6PIzalAjr3f
8ofFr5A79yyepjzHY7nyEu/bVCkPezWAXA8nNxPKy/h5hl5THvOn2ERuXq4A
WcyowPiHK8j4+wHOsQpRPZPft0inuH4+rMD9+krG3y/RjQI59j5mh0COvb/Z
zeLDyN3PlMT7LqPJ/XFKxp+v60mW/+m0N7MCOfU8x12oJN7PWMr2iI1sj/mG
+artjKevWnK2ihLfi+eqiPqKQhXZP0UqIr5uWBH5K7ci/JvW5Lp9ReSrOlVE
+1R/2vuDKqJ+aoTlbyLzcaeSC4/czAzk2PvqCyrK+Ps9YgnzMUkV0R96lZXP
9xUl3hfZw3q5N1hPU7US4usalZCfU7cS8vfaWXxAJeY3sBLzG0J7M4b2egLj
u1PI/WW01yvJ1Rpysb4S+svbQv/qOyv+Ptqr38nFGat95y37y1b8W2y//zft
tajM/B+oTJ6lMvJXOSrDv1OK9rp6ZYwXVZP+xFuWfgP6E13ITTdyr5eVT1/6
Nx9XxnhzP62M6110fkXifaM3qrC+/auwf2dWQf3M+ioYrzrjq+zPrK9yfqj1
qsT7TvVeRXzxwGvgfu7XYK9WvAb/4lty8zO5yVWV+RWqCv+iQlXE1zspi/te
x/Xpp32d89HrgZx6v+kdCeTU/Yd793Ws1yJNNXDVnbL4bzWJ/XzfahL7eV1N
xu+31UBL/1P60yPJ1cPVJfY3WarL+P28yV4d+Zri1SXeN3+hejSeeifvDwM5
9v54g+oS592N6E83JRdtqzP/PsxHf1id7f2YXAy24k2i7M+j7FyqLrG/ylZD
4n3tRjVkfH+j+9dgvT4J5NjvQ0+tAX9iFrm7pAbzyfqGjJ8XeTnfQHz1CLnZ
ksKTf9/puzdk/LxI7HlDxs+L1ENvgpvEm+CiDLlW5OoVcjGG3Iwn9ya/KePn
ad5Xb8r4+ZNeTe7+9aaMn1eJv9+UOM+6vya483BNcD8fufhPTbanArmqXBP9
YcbVRH31pJocP8upr9bRv7ORXG+rifaaH2ty/P5Ern8ld/+sKfH85PtayE/s
rMX67yH39teSOL9uUhv1dtYHcuw83NSGvt5Crr4jd3aQ67Z1UtaH8PfO+tYB
d3QdGX9eIEbWSVk/Qv9f0V4sIteb6yB/9W0dGT+fFj/UQX7eXiv+YXLxVx1c
P2bJWzL+vEese4t8w1syfn7ubnuL1892cpWtLtuTqy7r2b4u8+lUV8af1+ge
dWX8PN7bRNl/+m3UQ895G+NJzH9bxs/fzaK3Jc7fP3xHRs/bw3xmv0O+zuKZ
68n481L9Yj0ZP6/yawdy7Pust8nFpHoS53NT62H9cmfVw3rp3qsnsf9P+66M
n6+JbO+C667k+q36yMdfXR/cHKgvcX5wjFycJHfPkzubG4D72xrQ/9z30B5T
tKHE/qB5Q9ajHbmeT67XNER71ZGG9H/S8v9WI+iLZY1kfP/nr2gEffM9ubO7
kcR+7xi5OUFuLjWSeL/gr0Yyvt9y/m4ksd9N15jxHm5Mf5kbS+xnnyBXBWgv
nmmMeObZQE7d33kVyFVl+nNeYzxTrbGM35/5nzRG+/QwxlefNUb7xGgrv+nk
+o0mrE+LJshX9yb3JjZh/aY2gX99hbLbz5X4vnegK7GfHeLK+H7XOeOyfg83
lXg/KEtT9leeplH9kr8HeJLcPGPx55uink4pcl2VXFdvmjI/hu1/tpmMvz+v
ijdDPO+lZvT3eHOJ96PqNmd73eYS799May5xPlO4Ba+3oi3YnyVasF6lWvB6
6Ziin/y84L8W79dCxs+XvBmWfCyQY+fVj7aUOL9LtJQ4n/sPuVCW3Jiy26sl
5nP/w5YS78cMTvH/Ucg/IzfbycUBcnWipcT+uXgrif3Yi63A1UutuH5VaCXj
+y/ttcL6pGa1kviedUkrifdb/mfF29BKYv/9Dbn5nvnoneTOT7Q3h8i9o61k
fP/lXqS+uGq15zbbq+5Z9cjUGv5EttboL5OztcR+9vHW6A+T3+JFyEWx1tF4
CH9fVZe2eHnG9yu2Rv7ijdaot6nVWmJ/W7c12ue2bs16d23N9vaw+PWUeMn7
m1v0J8q1QTyj2iAft2ob1EvUaMP+a9wG9dHNyMW+NjJ+/6bOt8F6rwu05fX9
TFuJ508VyHVlizdqK3EeOiyQU89jnPFtuZ5Pb4v50V3aFuuRWGHxjRbf3Bbr
m9rVFvOR/rkt18dfUvJPXt/OUd/c1w7+/Wzt4F/nIhfPtkN+plg7zK/ui9TX
lcjVq/QvqrVj/rWt+C6504ZcVWnP9tRoD+7PaS/j72Oale0lvj9a3z5l/IX5
bGov8X7nlvYS7+teaC/j7wd7z3egfZkOUX3C7338l8lN2w4S76PqDljfxMAO
yM+M74B4enIHGX+/VcygP/1VB7RXLaI/scyKZzqgfWYzub+3g8T7zAc6SLzP
fJjcnCA3md+XeH829/uor7r5PvJ1MnSU8f2Ol60j/Omh5M7RjhLneWc7yvj+
QOXvBK7WdJLx5xtifSdcH8Z0wng1xzphvOuTnXA9izOdcL2b8/QnbnWS8f2e
+bsTrw/RmeP14c4YzypHZ9o/avHnO0s832oWyLHndS07c37qRq4+pb3ea9mf
S7FP/n3mS4Ec+32Pa50l3h95qYvE+0JNu2C+NS26YP50O3SR8fM3/wPq657k
bh9ydxi5+Iz+1TZy9WsXtM9P3xXt05m6yvj7GiJXV4n7s4Jd0X6vSFe0XxXr
KnE/WLqrxHltWXL92Afwpwd+gP4Swz9AvmI+ub+I9uazbtDXo7uhf81CcrW5
m4w/T/WvUdYZukuc7w/rjvXFjOiO8anGUTZTKWuvO8f/hu4Yz+LX7rgezB/k
3tnuXM8uWvGL9GB+JXogf9OxB9rnfU7uTOzB+s/tgfnDzO+BenqLe3D9WdMD
84te3wPzhd7RA/OF2kNuDpKbr3oiP72oJ9v3W08Zv5/yTpOr85S9dL0g6zq9
MN/rpr0wf+qx5GK8Zf9FL/bH9F7Ix/+V+uKS5e/H/0b24fcmZv9/mU/O3uDq
kd7R/Jz8vbnsLePfr+j5KTz5+52VvbG+iE29uf7u6M31b19vrE/6YG+sX+IC
7Z27vdFeI/pwvXulD9YvUbUP9av34Xo/uA/XwzH0pyf34fr5ZR/kL0wf1M9s
7oP1WRwL5NTvoZzzfST2J5eYj/qL8cTfzM/80yca/8m/H5muL/rLy96XPHdf
xDf5yL0n+rL/nu2LeLp4ihx+76xe6Mv6NOrL/L/oG+Uf/p6mmdUX9dC/0l7d
7BvVL/w+ytxjfk6GfhhvKlc/6GunH8dLIXK3JLku30/i90Ar9WN/vkqu3+iH
/N3aFm9I/6Y146tOVn4fkJse5Ko//YuP+vF6HGH5X9CP9U5ivnoVube1H8f/
HnJx1uJ3+2G8qvz9cT2awv3BdQ1yNbw/xo+7pj/i6QYfsp5tP4zm+/D7d9Hl
Q/Z3rw+jeoW/3ytGWvbjaa+ukYu/LP8/axn/fV9134BovUz+Xj3bAHDnKXJT
ekDUP+H39KaKZf8G7U1dcv2uZd98QDT+w+/pTVdy1ZtcDR2A9rgTyfVMy34u
ubuK9mrrABn/vQDx/YDo+gh/T8DsIHf3k6tT5GrLR1H/vRbWb/LHKet5yGd/
DH3/5sfR+H065JkHwt7kGhjFeyJsX96BzPeJgfBvapOrNgPhX2T9BPrOe59E
9ckY2jcmV93JxRBy8ym5d/iTaP4Kv1d3TgZy6vfm4rnBEb9aMrAvPjgaH+H3
6qZCICfvzwKuK5N7dcjVO4OZX4PB0fi7EPrvw3jq48HMZ/DgaD0Iv/c3wwI5
+Xw30BebyfV2i2ceQvtsQ8jzkfvOkGh+uB3m8/YQ5lOfXDw+VEbft4TtkUNZ
n/xDo/nraOiv4FDUSxQZyv4tOjTqvz9D+xJDo/GSNuzv0pZ9Wcu+3NBoPP0e
2lekP7fK0Gj8pgvtX6e9X2Mo+sd/j1w3GRqN9xNh+1sPjeZPEeb3OfPVUxhf
TaM/MZP+zBzam5Vsj7NpKMfLDqsee6hv9rE/1BFycZz1MCcZ3z1j1fO61Z5b
lr+qw+iv+jD2Z+Nh7M9mw2jfity0pb3qQv+iu6XfaxjGo2MsvtmKt9viexnP
X/4p+sfJMBz+RYtATt7fhvqtyVX/4fAnRg2P+n9HWI+JFveGR+37Nuy/mcPZ
n0mBnLx/Du1Xkau1jO+UHhGNTxPalxnB/iw3Av5EFXJVawTyceqO4PxYb0Q0
PxwM+bQR0fywNrze5tOfWcZ4zvoR7N/vRqA+7kFycYT25tgIXK/OGUv/oc+Y
/w+fMf7pzzg/XCMXf32G/P075N4/tHfSjUT+JsNI5Cdyj2T9841Efu4T5KbQ
SPb3syNZr+JWvFcZT71J7tWnvWlBrjqQi87Mz3xg2Y8i1+NGYnyIL+hfz7Lq
sZDtM0us9v3PqtdFqx7HP4/Ws9Vh/dKMisbjhNB/2lHgusaoaL3bH/Ja5F49
izchN81S/CeP936jMN71QMrukFGcL4aPwnxhvrTkr0dhvlFZRmN+EjlGc3zk
JvceHc36JUZzvnyS3BQYjf5ynxvN9eR5i788WmI/UZlcv2bZTx4t8XtCm1P0
w/2X+JbcbKesd42O6hn+fpG7l/HFgUBO/X0gkX2MxO/j5B0Df+IJcvMUuS5E
rp4dw3iNxiAf3x0j479vpDONhew4lHXpsWi/qTiW8V4fi/a4PSibfmORjzN3
rMT+ZY1lv4f6Jsc45K/zjGP9nxwHfVWYXBQdh/x1KeqLcuNYXzVOxn/PSr/C
+Kqq5b8G/Zma5HpkSvzk/c8Yy37COBm/nzCTx2H8u6+N5/xWfTzq5zQYz/mm
6Xjk47akvmhLfbWR/s22FP3k+fnqeMyX6g7tTbYJ4F6uCZzvnprA/J+dwPm1
JLnzksUrWfbVyD03kGP7xRbMR31k+ZvK/Pyt5O7OCZjv/f1We/6YwPqdZTxx
0eK3LZ5pIriXfyL8q4IT2R9FJyI/UZb64vWJXJ+S6F+vmcjxtJ7cbJmI+U9/
R652TOR8vmci1gd/H/PVB2nvXKC9uWzxu7RXeSahP83mSWif+mESx/NuS3/v
JLTHXJqE9vvVJmO90m9OZvvemQx9U5/ceX8y8nU7T2b9+lBfD5vM/p40GfmK
jZPRPvON5W/bZLTX/Eh77ydycY7c3CPX903h9fLUFMR3Ck1h/YpY/MUp8Kcq
TWH/vj4F9fO2koudUzi+90zheDvE+N4VcnHb8p9mKsdP2qngIv1U5pdxKq+P
AuSiIP2J0vSny5G7Faey/lWmol66HeOJAVNx/eghgRw7bxhu5fM54+kJ5LrX
F8hPffVFpJ98nrT0Cxk/7/JWBLII/0L91V9g/fE2f8H19LdATj1/cU5TX2z/
EuurGDEtsg9/D898Po3rb9I0ifPLqp6M7zeUmB7VM/n8Mt10tMfPPV3Gz+P0
x9ORjx49XcbP+8QicnXCss8wA+u9yjwD670YFsjJz2tDvnwG6in+N4P+NsxA
fHVxBut11dK/Hcix34u8R/9+zpnIT7gzqT9oJvI1wwM5tv+YFsix32OcSe4m
kYtV9C+20r/3/UyMD2f/TPb/IYufsvgVxjfX6V/fstqbZha4yjiL9l/N4vha
RK4M7cWWWRzfu2eh/Wof7fVhK/4x2nunGV+dJxeXyc01i6+YzfzXzeb1sHE2
14Pt1Hd3kfs/0V7/TG7Kz5G4/6k0h/V6dQ6ud12bXNSfg/lNtJkD/84nc7j+
DJ2D8eSOmsP+HTdHxs9nzUTG01OZj/LIzVzLfhX967VW/t/Qn7/Vav9Otkf9
TP/iotW+NHO5XqWdy/GVfi7X+0xzmX/WufCva5GruuSq1DyuJ2XmYf53m83j
+tRlHte/XuRmMLk7klyMmcf8Z8zDemdmU18tIldfW/a7Lfu9tNcHmI84xvbq
3yz9bV9hPPo/BnJsv/7TV6zXOXJzkVw3nC9x/+DOp/1H82HvDyJXI+Yzv4nz
Jc6rppKrBfSnV1nxNlDf2Ul9dYjcHLf8naI/fcWyv0HupVmAeqq0C5C/zrqA
9clJffPYAsaTlr/8C1j/wtT3ilr+S5A7pcnFAPr3B5Kblgtl/LxK/boo8jcn
5GcXgeuL5OKpxdF6PD28nooFsgj+wvNp4S6O5rdJob/m5Lo17VXvxYgn+i+O
5uPlof3MxdH1sjSU1y+O2rc4lG8FcvLz8rBed8n9PEvA9WNL4N/JT26eXoJ4
/ivkXlWLN1sSzXcjQ7nLEsQXA8j1QNp7E8jNl7T3ZjC+mL9E4nz0INtjDtPe
P221/zy5+ctq39/07zywFP71w0vBVRZyP/dS+NePLkX7xJPUNwWWRvPboDD+
M0tRH/Xc0mj8Dg7zeZ7cvLA0un6GhfH+Q31T2cr/taXReNSh/+pLMR5FTXJT
h/H0O8zXNF2K60O3tPy3tfQ7W/rdqO/2svLpuzSaz+aF9f2Q7ROf0t7/jPZ6
NO3VeMt+MuunZlv5LiQ3263+3cX+da6Rm5sWv38Z/KvMy3i9ZF+G/PSLy9A+
3WIZ54825GrWMrTXLKA/9Q252LYM7XN95uP8SnuTPwn2umAS61UxkMP7o35h
vJlJnD/nJtHfmiTUx1ufFI3XD0L7TUm4Pp2tgZz8/klo/10S8hdplkf5tQn5
A8t5vWZczvkmB/XVY8vpryhl8/xyxFdlAjn5felQv9xyzjevWP6rWvFrWvHe
o71pHMjJ7yeF/poxvtuK/kU7cvM+44n/Lkd9nSGU9cjlWL/UmOXoTzFhOcfb
jOXs/6+WR+OzaehvEesvVlr5rV7O8Wks/i252Ef/5oBVv5NWPteYr7l/BeuZ
bgX0de4V7K9HV7D/n7DsC6xgvZ5ZwXqNX8HxsnQF15cVKzB+nEv0Z67Sn+60
Eu1XH6wk77+S88tH1BefUN8MJdcjVqJeYhxl5a2M8q8X8lkrY/n/Hxqx2Ak=

         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdXXecT8fXnhBdrLI6dy4irBa9l1ms3leNdtXoVl1WJKPEYglLdOJKdNm1
eksYRA2JsmzIkivaBtFF5/3d+b737jzjn3xOntPmzJkz9X63SO/h7fqlIYT8
kIUQ97+E2Mc2GP+Gxje+FhUcX5kR4pxz6cxJP0TUOenS/CLi4hri7B+X7u/+
W+vSdr2NQLMGLv313ba7ja9dmjTeiPqaufTpU//7N0vKt0J+q5dLu9yNV0n5
fi4tXecubY526dURdf7nktQX6dITgl0Lkn+Khk9z6SauwmiJ30N93Nzk8feR
/tffhPYaafgJDT/t0kuX/O9fF6kv0aXryIBJ/j9Q3sz3o+dPY4kX+xFwUgJx
s+qPXnzCJB2G/KLJj54/TNpvgfxWG5eW4Wkv8UVImytd+r+S3eYcqiLtx7t0
yP/IZwOk/i0u/T+qZLfW0t89Ll1J/pP994tLu63N3EnqO/Wj1x81JX+uOC8+
+aX+vHHgL2Nx4K9oHAfxI+FxXj4Ukf5Ha/gc1G8vjPPyrZzUfzEO/GU347z2
B0v+h3Ho71PEyQuUd14jzt+jPyxtPOAiczziOeO9eOWVeP54jGfheC/eQZK/
SLyXDxmkP8XjvfGTVcqXRP28jCZfPh7iYVZG3P58M8SPRW324vGqkkvP2Az+
mrNd+n+D9W7bFy4u5iLOFm/22vPExclylx7hOvhQ8q/cDP6bezd7/t13cX4G
cZa42asvt6T8n5shHuZ/m718TZH4S8RJcIKXX+kkf7EE4LdLIS6quDR1/8dV
2f46mnwoyovwBPDX7pQA/pKemv7eiPP+iFuDUL85EXGHI06WoT77+wRov7U2
wcvHRMm/MQH6w3zm+39KtueF1r7iWzx9x6T+kC3+fCDjU9alXfaSybI9V7ZA
fljXtnj5kSTpMlvBHmu2FfRZA7Zi/IZo+DTEeSzibIEmv2Qr+M/3a3SmbUCb
Xbd7+bvNpZ1WO7zxsFfq77jDi1+C1D/Qpdu5DY6V8Rqyw2v/bqk/Yoc3vpZI
+cw7vfE6Ueo3d/rzneT/eKcnP07q+xT5Rd2doM+uj7jVCPWJljv9+VXa74D8
pAvqY313ev21SNKRO735YYykJyNuOugv+WgX+pt9F+rPtwv4zZq7QJ9TZxfY
4212YXy7Im5/jjibhPrEol1ef46S9NpdXv2bI+U/3A00yYo0y4u0MDQ6ejfE
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
41t7COC89RBPX02p/7Mhfr5K/h5DvHg0lvp7D/HnZ6m/P+L2ULRnxQ3x6ml1
qf/wEG/8Bkv7xxAnV106cJ4q8ZtDvPYVkv6UGer5+6q8y199KPCTxkP9euLi
vNVQtNd9qBffZxIfMtSLfw7pXyTi7CsNn6bhl3z7l1zaKT3Mz3+p/9Nhfv64
tGg6zIvPISlvIU5GDQN9ZDLifAbKm8nDvPpxV+LXh3n1KbOMx91hXn99Ivvv
v2FePNrLeHww3GtfWxnfrMOx/wv6uMxPUcrH42U+Vx0O+S1qDPfG53qpv85w
qC9Ok+F+PZb+tBnu13Ppb/vhfv/KfBo03O9/OZ4nDqfqeY8515eX5z3WRl9/
YL+W5MvL+c7JEuHJB74vLxpB1fd+jEXAfCT6RVD1vS6P9uXlez8rJoLC+93t
EVR9Tyde+/KB3yt+H+GPN3nel3aEZ1/+HpbVfQRV38uTXiOo+p7c6TuCwvu3
AchvDRlB1fNFZxTKkxW+vcD3DptRnh1F3Lmr+fN8BFW/D3BejaDwHv7dCKp+
H2CXHknV7ydE1ZF+fZTnm8NHUvV+XYwc6ddHqe+vkX69lXSNUX69lf7WGQU4
Gz8K/CMTEbenIs7Oj/LyU34fQJJG+fkt/bk8iqrvC3m50RBPc+howMkXo6F/
nK9GU/V7Bb4KcWuNJr8B9Tv7RmP+HBgN/SFO+vKB95G/IT+5ifpEiu9P4O9X
3EOcPXTp1PNo56lGpx8D+Wq2GgP5zLqMAfvCGgPjgQ1AfudL5OeTNX0LkBbL
NXz1GBh/7OwYCu/xH4yh6ntwM81Yqq7fzBxjqbq+cyqOpep6jlf1+QPnZT19
/sD5y8qx/vwn60WSLy/Pt83rY6l6vu3c8uXleo7dHwv1jDwe689XUp5G+vON
rI/jI73+OCXr7ReRnr77Ep8eCfXYiYn065us1zsiqbo+E7sjKazHfoqk6vrE
EqiP/xpJ1fWNdRVx8jfi7F+kCRlH1fWMnWEc4E5OxEnzcVRd71hTxlF1vUMW
jqPqesQ+OQ7nsxvjvPHPpPw95BdPxlF1vcKfj4P5j71GfvJ+nJ+vkj/9eLAn
6o73+1/6U3+8P34k3nK83/9S/+Txfn5I/dNQns8eD/M5ix1P1fWMWDzei18l
Kb/NxwPz+17E2f7x4L91ejyF9V/ieIgvvz2equtFdnc8xFM8Rn7xQRToIx9F
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
gfGdgfqtWK09C5AWi3fAeODLVfz/AL8Y9VQ=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> 0.5, Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.908390461*^9, 16.294444444444444`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {700, Automatic}, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.908390461*^9, 3.90893904*^9}, {16.294444444444444`, 
      24.}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"ovi\"", "\"PK\"", "\"SZGK\"", "\"G\[OAcute]lyairoda\"", 
       "\"M\[EAcute]rce\"", "\"vend\[EAcute]gt\[EAcute]r\"", "\"kisterem\"", 
       "\"traf\[OAcute]h\[AAcute]z\"", "\"Oktopusz 1\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.908615651151675*^9, 3.9086208058924227`*^9, 
  3.9086214590054703`*^9, 3.9086242638398857`*^9, 3.908627021497362*^9, 
  3.9086288969715633`*^9, 3.9086812037480965`*^9, 3.90869260812121*^9, 
  3.9086978535324016`*^9, 3.9087005127378073`*^9, 3.90870637295623*^9, 
  3.90871469516794*^9, 3.9087189788634386`*^9, 3.908736262094771*^9, 
  3.908769870112368*^9, 3.9087703588306704`*^9, 3.908771613198988*^9, 
  3.9087793021206503`*^9, 3.9088038839226437`*^9, 3.9088490655135427`*^9, 
  3.9088712518628054`*^9, 3.9089363909667616`*^9},
 CellLabel->"Out[487]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTempsN", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "&"}], ",", "#"}], 
       "]"}], "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{"GatherBy", "[", 
      RowBox[{
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DateDifferenceInUnits", "[", 
             RowBox[{"startDate", ",", 
              RowBox[{"DateObject", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
              "\"\<Minutes\>\""}], "]"}], ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], 
          "\[IndentingNewLine]", "&"}], ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", "#", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"2", ",", "4", ",", "5"}], "}"}], "]"}], "]"}], "&"}], 
           ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"Select", "[", 
               RowBox[{"log", ",", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"Flatten", "[", "#", "]"}], ",", 
                   "\"\<temp measurement\>\""}], "]"}], "&"}]}], "]"}], "]"}],
              "[", 
             RowBox[{"[", 
              RowBox[{"{", 
               RowBox[{"4", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], "]"}]}],
         "\[IndentingNewLine]", "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.908447507136998*^9, 3.9084475562248764`*^9}, {
   3.9084476576487637`*^9, 3.908447835827341*^9}, {3.9084479679808693`*^9, 
   3.9084479739278097`*^9}, {3.9084480436860723`*^9, 
   3.9084480673499737`*^9}, {3.9084480996033945`*^9, 3.908448163090989*^9}, {
   3.908457276905672*^9, 3.9084573112751083`*^9}, {3.9084574234366875`*^9, 
   3.9084574279502935`*^9}, 3.9087716935792074`*^9, {3.908771953974809*^9, 
   3.908771954616605*^9}, {3.9087856328058863`*^9, 3.9087856334825525`*^9}},
 CellLabel->"In[472]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Quiet", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"roomTempsN", "[", 
         RowBox[{"[", "room", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"0", "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"room", ",", "1", ",", "7"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "roomNames"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"700", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", 
   RowBox[{"Joined", "->", "True"}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.908771719127513*^9, 3.9087717335581217`*^9}},
 CellLabel->"In[473]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1ktIVFEcx/FbCEULwyTIKCxJMzQrXwVZ3GIWgSIh08OFBJbSRjJaCGFx
TQ11YZqPNFLHJK20CVPDGBitoE0aJRVtRpHCosBFltljkffewxz+3wPD8Jnf
/3/OvXMOd2Zr4bm8opWGYYwvv+x3jz0i9piGMzLcd/Ok9O4L0q+1nf7SyzK3
4Db4rnacPRoqzMmJ5ZGT7n4+oO3k48iXrkh7KqWrKuV6b6ulP1SbxfaYU/VZ
V6Wt2rCd9Y/UhR1lj95GWe9vlPXlTWaaM1R9a5O8vtxm6aOwV9vpb0B+HXkn
8tvwfTiI/mfwF9R/hyNbwnb2f1OLzLfBCS1y/kTkyXAKnAqnw/vgLPggfBj2
wDm43lzkXvg4XNxu3my3R5rbv+ZW2O76HdKvOuR6/zrVOVTztXWFXVtTU7M6
z+fWTyiXaDt1AZ97/oaUX/rUesqruqXLu2V/V7ecP4A8tkc6vkfWJ8GlqF+E
g3ek38BTcFSvnH89vBHe0iv745AnIN8OJ8HJ8C7Mlwpnon4v7IET+9R5yHRd
1ifzi31y/uh+mb+HQ/AM/HRAegKegmfhOfjjA/d8xSh/0naudwH5D/gnvAj/
gpfg3/Af+C+8wi8dCa+Fo+EYOBaOg+PhBO3pUChUkIl8v7bzO2NqH7PHIdTn
++X3XYD8FFyI+iLkZ+HzcBlcDzfh/m4g78T695D3w8PwKPoD8Bjqx+Hn8Av4
HTwNzz9096VYPc9PD0rPDqrncaqa/5GwNT8k8x3D0hkj0vnSVgncrG3/PFe1
ot+H3I+84bGcb0TamISzR6W/wQuw8UQ6Qts+H5s3BOT6O+EU+FJA3E9EhcyN
6KDaD3W/WUG1f+7+WGeC6vml9qsOrpe2riEfDYr/Q1Uz2k7+Wdr6Cq8bk/0H
xmS/KW1lwzmoz0PuhU9o/weo5ju6
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1ltIFFEcx/EphCLEMAkyCkvSDM3KW0EWUy0RKBJiFx8kMFx6SDJ6EKRi
vBQqYWZbmZiXou2ibpprGMKuZfikUVLRyypBaBT0kKZWLzkzhx3+3z8sy4ff
Oed/Zjgzu5uLz+WXLNc0bWTpY37btUt3mzWdpVvUT0rvvCD9zrHLrLLLMjfg
Zvix43izkir1dKsy7bzbsZUPI4+sUvOVF2FXtXRjtT4+tlS5qv+HK9LZV6WN
urCt/kfqpeeu6S13zVLre29I++A3TWo/GbbzPNJH4QK4EW6C2+D78FM4AL+G
v8G/4Khb0hvgLXAinASnwKlwGpwB74Gz4f3wQdgF5zqONisPeQF8HD7cos6r
mr+qNWz7/rViP/ekI9vl+WmGSzukV3RKt8NDcLBTnve4B9IJcLLjutra2pVl
yOfhwEPp9/AEHO2V66/1ynw9vAmOhxPhrXAynALvwH7S4CyM3w27ML78kXQF
HNMl53+CQ/AU/KpbegyegL/A0/DXHrm/2R6Zz8G/4Xl4AV6E/8B/4X/wMl/Y
1vMV5ZP5ajjGJ68nFnkcHA8nwImOrec2C/le5LrjY2YdwPhC7K8I+SnkxXAJ
fAbzz8PlcAN80/FkKBQquoO8Df2eIO9C7kc+iHwIDmL8MDwCj2L+R+STyKue
2e/jfvv/S01Frz1OU+Pf9qrx6n15uk/6c596n6r39ehzYeNnv8y3+WV+0a/6
Z9j9Z/z2OXGr9TMHpAuljVLY49ha7zbmdyD3ITdeqP2l226UNgaQj8M5g9I/
4FlYeykd4dg8bxvXDcn+2+FU+JJj8/oiKpFHB9T9VvnZgPq9Vf3rA+o+pNnf
DdLGddgTUOdBuVvlmlpvTParmXJs5TPSxnd4Qe3Prc7LmmDY1nr7giLXdPhQ
0L7+WHU+cuBcaS0feQF8wvF/d7BVcg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1ltIFFEYB/AppKKHDZMgo9CWtEIz23VdIYsp9iFQpExNH8RSDAkkoweh
KMZSUR+85CXt4j2z1da1VTEWds3AXlYoqYhklSAsDEK0zAoiZ863O3z/A3L4
+f/OmTMzZ2Z2b/7l9MKNkiTNrv+pvWhHZNFbRS9nc8df5X6t26a2kps8V8Ct
4H7wYFnQRrVNlPF87Ra37TZ3doU87VtvqYnCb8HJldxKddDa8U7VBK315+vk
e23rLZzqiwIOnF+dfFFrlPc10HrIDvBkA58vrYn7NDgDXA++A24Hd4PtYA94
Uneo2r5Cvgw2NPP63c083weOBh8Ax4LjwCZwAjgJnAw+Dj4JtoFT4fzSIM8A
Z4EvNYt95CM7W/h8vlbaPxaRf7zP860PYL0Peb7Uzudv7eAu7uTe3MXdAe7u
Er1C+9sNjujhjgLH6K6uqqraUgKe6+HHW9Wt5Y29sD8fcb8Bz4BD+4LW5tvR
x/Nd4EiwERwN3g+OAceCD8N6TOBEqLeCbeA8cptFjC99zH1Nt1Zv6Bf7ayGB
9oOd54v24PtOGx82wN+P78EfBkQfeN/6wfPg64OyWW0u8guwDzwD/gRewPwp
HS9J9J91a+ezAvkP8E/wKvgXeA38G/wH/BfWs8ERtHofwg0OXr/NwevDwOFQ
HwE2gqNgfLRu8dmC+qOQy7oz1XYC6nNg/lxwHjgfXAgugvmvgEvBtTC+Ufec
3+/PvQv17VD/BDwAHoHx45C7wV6onwC/BE/B+HeQz4Ejh+h5pP2fOSSeBzO5
Ykj0gfexwUnjhRWrkz3Pyisnfx8UDHPbh/n7Y+oZd46L5hNWvnNLyy56Xs0i
3zRC6xGWDoLlERpvEvXxo/R9EJYsutWfmyE5PFeKwU28vrwF5uuE3AHjLWN0
fWl99dzKKOTT4KUxdn7KP8pddPyUce5v4BWw9Jw7hFtpIZtN2v7fs9MdtHZf
jW4xThG/85VD4DjwDd3a9S7jLq/U59f+b/XQ/qD8jIfdf+msh75n5CwPH1/g
ofOk+1ujW+tquZU6cC9ZofpJD7/fs4HcLNY3r1vrv3Ari+DtXj7+mJePl7mV
FHAq1KdDngHzn4P6C166fgnyf3RLjvo=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdXXl8lEW2/XSiKKCigivPhaeImnHCpoiALSIyyENBVHQQcYVxFKOiIm5f
IJCwJUBWsi+dTtJZupusndZORgFRQZFxHHWAAUEfb0aRAUV01HlN1f2q5pz8
07/DuffWrapbt9ZuLn3oqemPnug4Tm0vxzn+qf+G+Po337p30YzhvgnH/5KG
Gqz5Yb6nx/b+S3WqYHeYb3rnRUv/Mc3DY3zH2bGTPTxOf/o8/Rt9b303ZFb2
eI+/0bd3UaKEBwX7fCjvu8k3K/vNhIYnfzPyl9yh9S/15O8w9s88/nfCNN+2
rYm/KZ78NN/x6vS/xsPTfY8d/xvs6c9EnPIs4u0Wq/ZJfRV5l3Ah4TrCW1zt
39ZhGu93tX8HBTtpun3PFPn+aej/eWm+SccboJfggWk+f2qig/5b8IQ0LG9S
mu+raQmDVwuekYb9tUrkHxPcKPwKwWEpf/5w36Djfz0WK35jmo6XXOEPpOl4
CQv/bZpPdecHwict1v78w6vfYl1e7xGav2Sx70oVACN0O40SfvII8X+x+Ct4
FvFzFvuOJsLhzecEZy7W7blW7O9crONlsfB7pLw6wV8t1uWuEnzMYqX/02Kp
n/DOEqm/4L5LsLyBS3R7NQt/2RK0P4HwliW+ixOjq7NM8NYlEmde+cLPFj45
XeLfa590/ekTPDNdxovgR9IlXsReYbrEk+Ct6dg/pyw1/adwv6XUf0t9x925
aJMXb0u1/WpvPCwV/wV/tBTzSb9lmG/GEF6zDOM/dxnGb53llf+ty3T/j/TG
c4a211/wiAzUH5WB+rMycLzMydDtc6vgBaSfnoHjpy5D+t8bTxmmvsp+OEP6
W/jODJMPFf96hsSn4GMZEg8iPyTT99LxCnV59cnE8kZl+lRxbwhOzfQNP/7X
IvZKSN9P+o2ZOH7DmWZ8K3yA+K8ycfw7y3V7ZQjuvxzjYeByXd/K4bodxiw3
9VW8j+QnWHsK37FcxquXfwmnL8f29S/X/dngxd9y3X/vin+TViBesELbOyDy
L6/A+HaJ7xT+JBlfPcSvWon8jFWGV+UtXIXjKXm1Hm9nePlstcSnN35Xm3yp
8BOrTb5U+JPVEq+Cd66WdhW8fzXmgwPEf7Vaz78DBR9ajfnl2GodX2O9/JeF
9pKykD8lC+1nZsn8LngVyfdkYX7bmIXl78/S8fHwCF9DMPF3KAvr+63ltb9W
X8dnNvqTlG3kFd8vG+2dZ+X1/JSN/qdky3pI+NRsmR+FX2B5hRuJbyX97cR/
lC35w+vfbB0ftwueugb7/5E1Wj5F8GNrMF4WrMH4fH4Nxtsi0T8k66l1a7R/
H4p8YC3m12bCrWsx37av1flnuNh7fa20p+D4WlzPfbYW1zMHRN7x8s1aiU/B
J64zvLI3fp3W3zdM40nrtP29sr6avk7H28/CzyD+mXUyXr18sk7X7zuRX7YO
yy9cp/PpaMFn5eD80D/HzC9K/xrih+Xg/DY/B+ef1BzpH9F/xvIKv5xj6qPk
3RzyPwfruywH23cNya+zvJLPJ/uFpF9k9ZV8RY7pTxXPdcTvzMH23pOD/ft5
juk/hQfm6vH4tuBBuchfRfw1uXo+/lLqO4H4iaQ/OVfyu+Apuejf1Fz92SP4
DsIzcnU87BR8X67Mv1L+Q8TPs7zCj5M/qeTvGsLrCJcRriIcJBy3WPn3JuED
5M9hwk4exsvphPvlYXz0z9OfPomHgXmYLy4jPDjPrP+UP0PycL+ZTPgawsPy
cH05gvCoPFzvjBb/vPXpGMLjCI8nPIHwFIuV/1OJn0H4bsIz83B9dl8erv9m
E5+a51Pp/S9ePrC8wq7llfzmPIlvbz9K9t4l+feJ/4r8uSxf9lte/+Xjeu6a
fJlfvf6xvPJvRL5Pdd9Cr73zzXpS8b58s9/U4zkf96cT8836Wef7fGzPyda+
4mfm4/7ivnw8b5idr+u7yFv/5/uK1if+7hX8ENV3Pvmfmo/x+Az5/zLxVfk4
HzTnm/MLJd+Zb/K9ymvH8s3+X/E/5uN5wekFON+cVWB4hecU6Pn4iIz3xwow
Xz5RgOcL8wtwfC8swPz4coH+9PK3W4D54n2S316A+XZHgax/BX9SgPnqM8vr
+aNA9qPCX1Ao+2vBFxUiP65Q9j+i77O8whOJLyyU+BP9Isvr/iK+rhDz+cnr
JR4E914v7SJ48XqJB8Eb18t6TvC76yVfefUlfrfVV/xh4h8vkvWu8KuKZD0r
OKtI4s2bz4vkvEj4EuLLiiSehG8s0vnhHuGbLa/9L0J/3i+S+PX6o9j4o7Cv
GPmJxM8q1uvVeVL+vGJtP1v4J4p1/zwr/PxiyU/CP18s+ctr/2KMxzXFuL7J
L9bj/XwZL4XEFxWb9Y3iy4px/RYoxvFWV4zz25vFJp8ofkcx5o/PizEf7S+W
+BF8uNjsn5V+7xLc7/ctMbzC/Up0PLwpeFAJ5v/BxCeX4H43pQTPf4aR/OgS
3L9OLjH7aYWnl+B+Y77llf8LiF9IvEv8YuIzS3C+W1GC81dWiTn/0P1dgvuZ
dcTnluB8FyzB+e7jEpzf9pfg+c+XxH9F/MESnL8OleD8cKzEnF/o/F5i1i8K
n1KK9nuXYrycU4rz1XmlOF9dQvxg0k8uxfnxmlKcv1Oo/GtLsX6jS/G8Zkwp
nvePL8X6TCrF+s4pxfOl+aWmvxSfKvVp8/ZD4v9OkV8g9fvUi6dSjIePSzFe
PiH9naXY/5+T/v5SjJe/l+L4OEj+/1iK52c/Ef9LKa53ksuwPa8pw/acRPxk
4qeUYX9NLcN4u4P0p5P+3cTPLMP12iziZ5dhPMwr059evlpYhuNnEcm/Snxu
mclnOn+Wmf7U66Ey2Y8L3lqm++dcOb/YXabz6agRmt8j+ucL/3fLK3y4DM97
jpbhedMl5XgeNahcf3rnRyPK8T7imXK0t6Acz6MWEl9IuKocyw/Y8vT8W27O
79W/7yg354uK/7bcnOcr/sdyzJ9DKgy/PDMz85QrKzB/X1WB50HJFbJeHK7l
f038KOKvJ35MBfozpcL4r+RvJ/7OCqzf3RV4fnoPyc8k+fuI/x3xsyvMeZkq
f04Fnq8+VIHnZw/b+ij5R0n+ScLPVpj7qOPnk1e9XGHuo5T+KxV4vre8Au+r
VlaY+yMln0X8mgq8b6ol+0Grr/gQ6fdU4Hnk5go8X3yb+D+L/kjBH1eYeFSf
O6l9D1P7/9vGl/LvhErkkyox/npVovypJH9aJZ5nXlmJ/XVVJfZXSiX2zw2V
eF84sRLH7+2V5n5Q6d9VifdxcyolPwl+kPjHiJ9L/OOVeH+YUYn9mUn8ykpz
P6j8WVWJ95XlFiu+ksqrqpT1nOBq4mssr/QbpP5vevFD+jHCcfKnp9Lcdyp7
f5T++MC7z/T6V/C2SplvBb9fKftHwR+Q/e1k72Nqr0+kPT+S8j+V9tsq/Gck
/1cqbyfVbzeVv4f4L6w9Vd7hSrzPPVKJ978/U/m/UP/3q5L9gODhVTh+R1Sh
/M1VaG9yFfp7ZxX6O6NK7te8/FqF/X0P8fcT/0CVHi8B776hyvSHzo/kz4Iq
bP8XqrC9Fkr92oR/scr0n8KviPwhwa9SeW6ViSeF06j8xVWyfhOcXiXzleCl
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
ewGW514QwfgaiOUl/Rfac5Op/ikRGJ/ucOJHRMx7I2VvLPLOuAh+X3k88TeT
/ZsjEB9JE4ifSOVNJX+morwzg/gZZO8u4u8hfibx90bMeyRV/v1UnwesvuIf
ov55mOLnYeTduRS/86j832N7uk9EcLw/Se09n/SfiuB7qVTq/wURfJ/wHMq7
z1H8vUD2FuL4chdaf5R/L5E/LxGfTvoZEcw/meRvph3fav25gvpjZQTXEyvJ
/1U0XlZRvlhN9rIisJ5Lz6J8ko3+ujkRk69V/XKJL4hgviym+hcTX0rtUU7y
5RFcf1RQPFVhPkuvoniso3isj+B8GYzgfNtK/dFK8dBO+a49gu/5tkTgfYn7
bgTf131E8fdRBN7XuJ9G4L2Ku5PK34XyzqEIvI9zD0Xw/vCfEbhfdI8Q/y3y
Tq8N4K976gb9747UtzfyTh/Lq4++G8x7HiV/GuonXb0B/U1geG+TsgHey7gp
xA/F8txhxA9H+84otOdstlj5M64F34/c2CLjQXhfi3lPouozmeRvs/LKn7tb
8P3KPS3wvsWd2wLvX9ylLXD/7Wa0aD3v9xIyic8lvrAF7tPdBPben+j4bIH3
MG6sxfxegNJ/HeuX9Aby7huk3038Wy3m9x6U/kZbX70+bsHfg9iM7eFsIf5d
aq+t5O924rejvnuQ8Imt5n2M0k9qNb8vofBJxF/YCu8f3AuJH9hqfv9BtW8C
w/uSKxG7o1vh/Yg7nvjbkHfub8X3GA+2wnsN90HiH7b2lD+PtOL7mEdbze9h
KP0E/s/3Le5j5P9c1HfnEv9Eq/6U9znuk2Rvfiu+X3mK6ptK9hdYeypenrP2
FH6e2mchlu+8RPV9mfhXqbxXbXso+y62p5tG5S2l+i2l+meS/HLsL2cF9ddK
y6vys6h9ssheNpWfTfwa4nPIXi61Zz7x+cinF5P9ErJfRvEcasX3W2EcP04E
x4+bwHr+En4DybdQf7RQ/7ZivCdtEX628O9QvG9rlflc8PsUb5+S/F6y9zPy
zi/ED2zD938jCY9ug/d/7vg2855KlX8v4vQ5bfDez32S8LNtWP4C5J3n20z7
KXsJDO3/Qhu274tWX8m/bOWVf6+0YTy8RvZeQ3tOGvLOYquv7GW2we/nuAn8
n+/X3OVt8N7MXYG8k0X+ZlF9cqn++YiTKsien8rzW17pN5N/Meq/N9ownuJt
MB7c7jb8PZ+eNoh/t4f4N9tw/nmL/NtI/n9F9fu6DeeLBIbxe9D6qz6/acP8
+K82uV8YqvFPIu+I/Z9t/RT+pU3WW6LvtGM+OKEd3y+e027sKfnzRH6fLs+5
ol2+ryl4SLu8fxJ/bmmX+1zBk8X+2yJ/m9irFv42Ka9H8BTknenEz2+X/Yjw
awjnt8v3z0S+sF3yy1A5r0V5N4F1vAsuaZf1jMhXEV9FfK3lVTw2WF7500z6
zci7oXbZ7wgOt8v4FP0IybeR/U6UdzvRv/SN7bI+FPlN5P87pJ/Aev0l8tsI
75D+/YPo75L+nyz6uyyv8G6Jl3miv4fk95D9veLv7cLvJf9O6ID2dE7tkPEq
fAJ7/a1wnw6Zj0S+L+mf1oHlndEh41X4fh2y/5T6ntkh70kEn0XlJbCej0T/
og7Zjwq+pEPuJ6V/kjvk9z5Efzjx1xJ/neWVvVHIO2ORd8dh+zg3on/uLcRP
JP5W4id3YP9NpvJv60S8v1O+fyv4QKfkM8H/IHyoU/Jbirb/T+F3a+wc7pR8
JuUfJv4I4V869WdPim7PX4h3ooZX9hJY7z+FPyEq+U34X6G8kxQFe24C6/fN
wp9E/Emkf3JU3r8J7oX6bi/iT43K/abwpyLv9o7KfarI90F5py/y7hlk72z0
1+lP+gNIfwDx5xCfwPp+UfCFUdl/C744Ku9rBV+CvDOI9BNY33cLvjyq1y/H
pH+voPYYQv15ZVS+/y3xcyX1z1VRiFf3aun/3jLer4tivhkXxfHoi2L830T8
eMsrfydEzXhS+BbSnxjFfDCJ+N9GMT9OjprxpL+PHMX557Yo5rvbpT2mCL4r
CuPbeYDsPxI1+Vq1x6NRk98Vfhr13aejOH89T/68EMX5byHyzouo76RJPDwn
5WVFcb7Jw/o4+WjfKaD6F6C+U0Z8WRTWE055FNYT6fVRmN/cIPV3QxTnt0Zr
X+k3Yvs6IZR3Q1GTj1V9w1Gcb8JYnhuJ4nyzgfgN1H8tVN+OKM7vnRQPm6i+
m6i9P6P6/NW2v6rvX8nePrK3j9rvC6yP+0UU59cDpH+A7B+keDpC8XkE7bnf
kf5R8ud78ucH8udH6p8fqT9+1YXySV24PurVhe15CvG9ie/TheMngb31isJn
I+/078L4SmAYXwOovHOovHO7cLydj/LuwC6In/RLuzDeB1H5l3dhvAzuwvE9
BHl3SBfG79WWVzjZ8srv35D9lC7TH0r+pi7MRzd1QbwmTeoy41/nX5R3ftuF
+4/JXXK+K/b+B8tLn9ol9z2C78D2dKZ1wXrdnYbtmTSd+usuao85XXLfIvpz
qD8fsuUr/Aj15+PEP9kF+T09FevnvEb2Xaq/S3wa2V9G9V9L7bOW9HNt+yg+
l9qnAO27RV04/oqxv9wA8bXEN3TBeHYayX4j+d9EfBPad5up/UI0fkLEh8mf
MNmLkPwGaq9O6o8u6s9YF+6Pu7twP/sejt+k7RJvKWJvO46/9A+75DxJ+B3E
/wl5Z7fkq4Eiv9vyqry9yDuHusx6T8kfIv5IF+4fTonherBPDPm+MVzvnoby
zukxXM+ebnnlXz9rT9WvH+mfGQN/nQFkL4H1+9AU9b74v86zWNk7P2bWuwoP
JP4isnc1lZ8c05/e/iYZ6+v+mup/DbUXYSeF9FPQvjOM5IfHcD8znOyPiOH+
YSTZv5bsXxeT8yjhR1P9bqD+GWN5hcdZ+6r9xln/dH4n/3+L/jtzqT/mxsz+
RNn/Qwz3J09TfZ+heHkhhvH/Ygzj/6UYzn+vIHZei+H62o1BfkxKi+F8siRm
zudU+Zkx+T6G8Ctj8n1g0a8jvi2G+bs9Jt8/Eb4dy3NeJ//ejeH8uTVm5nvF
b6X6bYvh+iaBYT3yQQzXEx/EcH23PYb7kw+J7xvH7wefHtef3n14vzj8Poib
wHA/3j+O99UD4ua+W7XvJXF8D3BpHO7D3UuRdy9D+87lxF8Rx/cHQ8jelVZe
r4fi+B7g1+R/AnvvIZR8ShzeH7g3xPG9zFjyJ4HhvYSP6ntTHN5fuBPj+J7v
1ji+b5ocx9+Tmh7H9yAJDO9B7ozj+8274vS+Ko7fv56J5bsz4/ie5t44vn+b
Fcf3TvfH8X3gw3HzfWAl/7AtT8nPjcP3r9256I87z/JK//dxfL+9wuu/EbLf
9fpP4/RsLx7kvf0ayytcFIffV3YTGH4PrTRufg9N2WtA3m2K4+9RN8fh/19z
w8i7LWS/lfTb4vD/qbltVL8Ost+B8k6n5ZW/nVRe1ItH4aPWvuK7LK9wzIs/
Kf+PXnxI+Zu8/hC8OW5+j1jJbyF+Wxy/P/0+8s4HXn+L/F/i8Pun7s64+f1S
ZX9X3Pw+qarP37z+9L5/YfX1esnLV8L/L+EDXnx4v29J/N/j8HuJLmHn6zh+
P+VIHL/P/XPcfN9b+XNSt/m9QeV/Anv1U/Ind8t4kPqfTHwv4ntZewqfgvLu
qVZeld+H+D5k7yzCA7rx92nPQd4Z1I2/j53cjb+fPrTbxJP+vZJu/e/e7xle
3w3j1b3e8srf0d0wHtLHIk7ydWM8jxd9R/DNyLsJ/J/5wJ2A5TsTib+N/Jti
sd5/En9nN4yf9Bnd5vfLFb6nG36/wJ3Xbb4fpOw91Y2/j7Cg2/x+gl4fdZvv
/yj5F7vh9xbcF7sxvy0i/tVu+P863XRpL+/95dJuM3/8P/OQmyI=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxd1k9IVFEUx/FXCIULwyzIKCzTqdC0/FeQxUtmISgSYpYLCRSjjWW0EIpi
LC01Mi2tCPNfpaY2VP7JkEYzcKVQYu1GCcKiwiDLrDb57rze5XwPyPDxd86d
O/Pu483mgpPZRcsNwxhd+rNe3VYF7TInxpcqM8U0rDKPSO88Lf1aW82XnJe5
B74Nd8I9ZY4jrRopk/niBWn3RemoioDHkwOeglMvSXuqHKv3S692/G1uqRav
2H12/5qr5jFVyWaoVWatkyu318l+L5xVL30QztFW69Uiv468CXkb3AX7MD8K
f0L/dzikwbG63hsaZB4Fu7TV+tuQx8JxcAKcBO+BU+H9cBrshjOx3yzkOXAu
vO6OfX6SAjYa5XrBjbI/7a60q9lMVPX/ftGuqqysXFncIvMVrdLNrbJ/CPnZ
tsD5nbUdcU86WlvNx8Al6F9AXnhfvn/FA/n5fPAbeBIObXes1lsLr4c3tcv5
SOQu5FvhGDgWjsd6CXAK+nfDbm11Hko75PyZDtl/uVOep4Uu2R/WLf2uW877
4Rm4rse+frZfwuPwJPwenoXTHwXOQ6+9vw/wvLbq/wH/hBfgX/Ai/Bv+A//F
fpZ5HavnQYhX9q/yyv4wOBz9EXAkHI15l7b6HlPQv1fbej6dMLUPWXUA6+Vp
q/OWj/woXAAXwcfhU3ApXAPf0J72+/35t5A3Yb8PkXfDffAgPAQP4/scgV/B
Y5h/C09rW4/D8i2P5f0V/ETev4Xw2FPpr732/ZOo7JmTNrb3SSf3O1Y/3/L6
5XwxXC/7y29ivgW5V84btQNyvf4BOT8hcyP+mf08sJ0x6Fj1dw4G/m/Y+Rd4
HjaeSwdpW+dp47ohkXt2wHHwOW21nzKZG1Mv7Otr94f77N9/9vXK9dl5UmC+
Gq6RLr8Gz2ir9T5Kez7Dq4fl/D7pIBN5xrCcz0R/Nvpz4MPa/wB8zDQ5
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
IPFGiYg3TjTlR4f6B+GPJ+J+xZ5Eyz+pb38i1i+HE83+8YbCjxN+KtHsH2GK
vqb5JX2d+F9LsvjN/pFk1cOSnp+E/NuSrPpJ7v84NG7OX0lYT/sJLye8kvTv
Ifv7kzCewyQ/YCvWo0O3WvWjOT9vNfP9rKJHbMX1+96t5m9ovbqf8MNbcf1y
ZCvWo6e34vro7Fasv3/YivXmT4TbknE/4M5kC5f+1km21vtm/ZWM8dZLRvuN
klH/Q4Q3J7wV4a2TMb72yRh/R8KfJvwlwocl43r/tWTaz6D4MzVujvfJuN/h
JX17CT9M8keSsX2/Ssb9hguEX0zG/YpLZO8yyf9E7WOkoHz9FNTfMAXlw4ge
RvzDU3B/pTxFzR+KvzIF87cnRc1Pyp/9KZifY4Sf0vKS/krjkv9sCu6/nEtR
9ayix2wzf6uV/LhtGP+EbWq+UvQ0wsMJn0W4IHwZ4asIr70d/RHbEU8gepvm
l793p5rPx0FFP5Rq1geFXeR5Uu1HUs3+XqLwNqlqPaDox1PVekHRTxDenvCn
CO+s9Ut7/VPV+kLhg8n+TOJfnor9Y1WqWv8oenUqtm+sxqX8Bo1L2qXjl/wl
JH8mFfP5baqqJ5T8RcIvpZr9MVPRl8nfn4n/GvH/Qe3zJ8X3r9Yn7d+WZo7n
yQq/Iw1xWxrK35mG/tRKU/WYouukWfFJ+v40y1+p77+aX9IPkL7GpK8Z+dea
8A5pmI+Oml/qf4rwp0lflzRz/vMruluaWt8q+tk0c/6NVnRPykcv0teH4g8j
+33J/1fSsL8OT8P2HJFml+XbYhXPyDTsP2NV/lYo+nWSH69xSb9F/r2dpuo/
JT85zXyeNil8hsYlHU74XMIXpKn6UtGLSf8Sko8k+Y9UPuYqejvRRcRfTPZc
hJdSe3p0PiXtJzxA9CfEf4jwzwg/Qvgxwk8RfobwWjtUParohjuw/z20Q+2P
Kbol4Y/uUPVx6HkgfZ12YD5n7DDHr1mqfd7fYY4faxQ+T8tLfL62Z9YfO7B/
XSX5eun4fNRPx+e9QTo+Dw0Jvz8d54MH0tFe43Qcfx9Mx/7fjOgWJP8o4Y8R
/QTxt0/H56cj4Z20vMxXj3Rs32cpH4PTzd/Q/DqE8jE0HcePFwkfno7t/yr5
N0LpF6HxIx3Hm1Hp+DyOScfxcCz5+3o69t9xml/qn5CO7T+R4puUjuPzmxqX
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
Ar4vIIK0ub+r7Cchbmwl3EHyDsIzNS7bO0ib9Zfyp4D8KUTc2F+h3m9R/Psp
P59UqP1phX+C+TQOUPseUO13Wcl/qvrLfxT+KckfJPmDqj9dUvKHtD4Z3yHV
f2uFnifsH1GHdftI+gi131HV388r/ccqzF9D2T+J/hpfYjziS9L3FeoTX1G8
p3U8sn+dpf7yDeXjHMYvzlF/PE/5uYD5EBe0fRn/t8T/HcXzHeFXSd9Vas9f
Kb5fSf43wn8je79T+10j/mu6P8p8GZWIB2mwdzvhQRr6S/NKq33M+qcS+rvR
vVLVt4q/O+KiZyXG/1ylOt9R9POE2ytV/ark7eivCKtU9bPi70t430qMf0Sl
yVet8BEU/0jSN4r0jdb+SH1jKrH/BWk5PpxU+JuVql5V+XiL9L2t7Un+KRi/
mKrzI+XfofxMR39FkL71ebWFE38E+b+K7K+j9l5P+YithOcvKpbkN6C8LQ7b
V8RVwnhvbKL8b0b/ojZTvraQP/GUr3iyl4T2xFbMpy2F5LeR/HbKXyr1x1SS
dyBuZGD/MDKpv2dRPrKpPbNJfw7lq5jycbRSnaep/J1Q/TFe4V9oXN4v+aZS
rZ8Vfg7lbecJv6Bx6c8F6u+XdH+X/N9T//+exovLeryQ+n4g+kolzgd/4vhk
3KD+caMSxmvbTcrfzUocL/8i/C/dXtLfvytxPvmH8H8rsZ4wqrC9b6tC+bpV
+L2kBlX4vaCGhBNt3Fdlfb9I2g/SUO80qsLvAzWpwu/bPEL6miIumhLejPBm
ZK81+ROkb/2+UUxvTcv2sFfh95/6YvyiH9nrr+OR+odgfGJoFdRrtuFVWL+M
IPnR6L+YpP2X/rxB+X+T+N+i/LxN7TeZ8jOF4gnS8D2rqWhfTCX908j+NMJn
Y38TswmfU4XrlSAd6v//D7jKGGY=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/gVfnWr7/4PYT02111uNhD/TxTX/llRpj2I/n/BioqOkfxvRe1NlPSn8+1z/
NH4w1W6/Hwh91KU1/xkqz0+kr8laY0+v19qtRf86Ed15LfrXhfA7iO5KdA+i
exLdh+h+RA8g+gGiBxL9CPk7lPCRRD9O/OPXmvrW+MS1Mv8IfwLJL12L7WPZ
WmxvO9di/ziz1pwfaPrcWuxP59fiePT7Wqw/Kw37V8M0PI+IS8N8f8s07N+t
09Bee5df+zM6Dc8HniR949NwPJuaZv92xrtEF9fzVTLhy0h+JeH1aeb8wO4f
aeY8Q9M700x+XfPvIvxgGp4/HErD85fDabhe/zoN8/tWOq7vG6SjvYbpeB4R
l47r70bpdv28IHTjdLOf0Pzd003+WdM90vG8oWc6nk/0IXvx6bg+H0z2R6Zj
vj8z3azftXxWuv33eKG3pGO+Opf8ySd/S0lfeTrOxz6y7yd/g8RflY77rzD5
cyQd939fpuN+5GI67hetDCNvr3cycH3QMgP1t8/A9WEHku+UgeuPzhnofxfC
byO8awb62z0D/e2RgfHsnYHl7UPyfUm+H+EDMsx62W4vGWa9bs/PGbgeHZeB
6/nxGWb9pvmfzZC4Ov07A9d3MzJwPfsK4cczcL3XcJ3ZH9nj7TrMF0xcR/mA
dZjPmUL4tHWYT5m5DvMxswifTfJvkP19ZO/gOpM/1f4edvk1fXydyVdp+sQ6
zJecIvkzpP+XdZifPb/O5G81v7Xe/nu9s75fj/ye9eh/w/XoT/P16E/L9ZhP
a70e49Nmvcw/Qrddj/50cPnt/kH6OpN8l/WY/7ttPeYHuxPek/DehMevt9tv
obO/dHHtT816zEdelPg5+UvPBpP/tMfvDTJfCN1oA/K32SDzhRMPwtttkHyN
0O03yHzijCcb0J+OxN+F9N3h2tP+dHX903iPDSafrfGeG2R+cuK1Ac8fBmzA
/PUDG2S+cOK3QeYr0Tdig8xXzv5sA54/jCd/JhL+LOFTyZ8Z5O8rFI855O8b
pE+RvSTCkzfY+9dxUp59FN/9rn27P1N5j7rx0PRxF7f7N8XrDMn/QvLnKN7n
3fZht7eN2F6abET+5oS3JXz1Rrt/DnfKt9Hun92F/oj4z2xEfy+K/i7ij2eT
5AuFbrgJ8bhNqK/xJrTXZJPM5057c2kt/9AmtD+E5LeR/PlNdvvp44yHmXI+
79jLNLime7i45u+XKfcZhB6QKflL4R9K+EjCEzMlX+u0V7I/i+yvyMTyFmba
9dNMcG8mli+YKfO30DWZJt6ajhK+jfAdhL+XKfOx2N+daY8nNwu9N9PeDzRw
5jsX1/SXUt4LPWz+rzPt9ny74N9myn7H6S+Z2D6Ou/5o+lQm1u8Zsv9TpuSr
nf5C9i669uz634x4x80Yz96bMd59NqP9AYQ/sNnUr9Y/cDO2n2GbTfvQ/CM2
Y/3P2Iz+Z2w28bx0XhwXl2XqQ+ONsrD8jbNMeTR/kyxsf82yUH/XLMnH9bDp
boT3cvVrfb1J36Qs0781nZCF5Xkxy7RnLf9qlqyHBX8tC9v7P0h+HuHJhC8l
vCIL41tF/lZnYXsPZ8l+SOhIFo4nNVnYHmoJj5K+uiwcz7ZlYXvZnmXGVx2P
Ha59TX+Uhe3xAOn7QzbSLbLRn57Z6O89hPch/N5s9K8v6b+P8P7Z2L4GZOP8
e382+v9ANo4HA0n/oGyM3+BsnH8eJH9fzcbx6bVs05+1P7NI32zy//VsHG/m
u/xafiHhm0l/Nunfko39ryAb21s54T7CKwkPEh7ONuOnth8hvIbw2mzTfzX9
tsuv6e3Z2L/3kf0PSf9+V7+mPyL5A9k4Hh0k/BDhnxL+Gen/PBv793eEHyW8
9RYcv67dgniXLTg+D94i+13hf5Dwhwl/dAu2t6GED9si+TuhH9+C7efFLdhe
phE+fQv2lxmEv0l48hasryWu/7p+l2/B9r6C9KWQPxlUvnVkbyPZ27QF+qPa
4trT9j9D3GqRg+NPyxycL1rloD+tif/aHNR3I9G3uLS2fzvhd7n6NN6T7PVy
/dFSw3Nw/zCC/H06B+eziTlmv6DpZ3JwfTclx8xHGk/MMfsJu/6J/5Uc3H/M
JHwO4W8QnkT4EsLfIvtbc3C8rcgx+6GS4uLi2wI55n6X9j9I9RPKwf1JXQ6O
7/Vk7+0c+7ezf9qWg/vh/Tk4n3yUg/u9g1S+Q4R/TvJHcnB/9wvRVi7uD6/O
RX+bEN6U8Ga5Zj+u49MiF/dXrXMx33At4deRfNtcEw9NtyP+G3Jx/39jLsav
Qy7GtxPhtxA+IRfzLZty8X7X5lzMj2S55dH+bc3F+4HluSYfpfEKV7+mK3Mx
X+Un+QDhR3Ix3/dlrslPaX3fkL1jxP9DLuarjufS/VHiP034GYmXc//pF1ef
tvc7yVt56H+DPLTvyTP8Wv6qPLTXKA/zidcQ3ozwNoRfl2fypVr/DXnmfpbd
PvIwn9qR/LslD8vTg/C788x5vtb/KOkfmofn/UtJ3wbStzEP72NsysN45+XB
/ei4IuIvJvul5N9Wsuel+JSRfDn5X0V4dR7muyN5mF+vycP70lGi68n/bYTv
zIP75nHvEL6L5D8gfB/RH5J/J6l8Z8neeeKPy4f793GN8hFv5tIab0X8bfPx
fOH6fDzP6JCP90E65sN7k7jOLq3xPxH/7UTfkY/nMXcS3pX0dXNxba8H0b3z
bT7nvOKefHwv05f030f2B7q01vdQPp5PDcnH9ywPE/4o4UMJH5aP52vD8/H8
ZnQ+3g8cQ/qeJn3jSX4C1dezZG9SPp73TCb90yjeieTPdIrnQsLfyof3NXGr
yd+N+Xi/cpOrT/NvzsfzzyxX/tL6pjg/H88TC4nfm4/nj2Vkr4L897m4tu8n
+UC+Of+111OkL0Tlqyb/wvnm/FbL78q3+29nwd/Nx/Pbk/l4Hn0qH8+jT+fj
e7XXCgz/pXq7bnaB0aftvVGA+uYV0Pu6Arx/mlyA91WXEr6sAMu/ogDLk1KA
/q4qMPGw2wPpW0P8qQUYj7UFGM+0Aqzv9AKM/2byL4vkswuw/rcUYHvPKcD+
Ukz6gwXYX6oIry7A8aSG9NUT/nYBvrfbRvgO0v9eAfb33cS/p8D0Rx3vvQXY
v/5TgOe1HxXgeHCA9B8swP78MeGfuPIaP1mA4/G5AryP+WsBjr/nC3B99FuB
OU+312sFuB5pUYjrp5aFKH8t4W0Kcf3WthDWF+qOQjxPvZPkexbie4S+hVKP
zvxB+GOFZv+h7SUUmv2OppMLcb+zpBD3N8uJfwXhKYW4f1pF+lYX4v4ntRD3
X+kkv47w/xRifvaAq1/7c6gQ9++fFOL+8otCzGd8WYj71W8K6TzBldf71x8L
Mb97qhD3/6cJP1OI+9efCjG/8V/Cz5F/F8i/i4WYj+hXhPmm/kUoP7II8zGj
itDfcUWYT3i6CPNdqgjzgfOLMN/2ZhHmcxYRvrTI5Ou0/FuELyuS+y2S71pe
hPnCVUWY308vMvk5rS/D9VfT+UXSP0VfAclHSL6mCPPJUSrPNvJnO+H/JPl3
ijB/uKsI88HvFmH+7N9UH3upvj4gfF8R5j/3E/4f0n9NMeYTmxZjfJoVY3ya
F5t8pPa3ZTG2r9bFmK9sT3hHwrsWY3m6Fct+R/AeLm6vj0m+L8n3J3wQyT9M
+NBirI+/UXlHEv5ssexnhH6uGPPFS1zcbs/F2D/SirE9e4tl/Be6jPz72MXt
8Yvw74vt+v6n0MeKZX8l/CcpnmeLZb8m9E9U/w1L5P6R0H8oMbidbypB/ptL
UP+dxN+L9PUm+ftIvp/Lr+X7l2B57y/BeMWXYHv9c4ncJxb6ryVY3iElJj6a
XlQi87vQFSXY/30lWJ8flWD9f0r050SfKMH+crIE6/OaUrlvJPzNS9HflqVY
nlalcn9W5K8rxXhdT/p6l8p9JMHvF/1Lnfi5+uz4uLh+LzzCldf4OJJ/mvRP
KLX/rgR/hvBnCZ9SKvdphU4kf6ZL+ZaJ/Ewp3zTBX5P4rBJ8Vqkd70TB/+Hi
mp5N8nNKZX0i8ovF/gtCryf5Da68nV8k/rddWvNvK5X5XujtxP9uqawfBH+P
/Nst8R4i9PsSz+dFfk+p7EcE30v291E89pfK/kPoQ4R/4vqj9R8mfV8Q/RX5
/y3RrbaivdZbZT8h9HWEt91qt4exQrdzce1P+60Yj85b0V6XrbLeF/rWrVie
57bK/kLwyWTvRRfX/Gu3YnyzSD5H/Gsp/LlUvuBWmU+EDhEeofLXEF5L/tVt
tX/HC71jq5wPiP2vXVrvr8+Kv3Od8Z7on4n+hej/En2O6F9de5o+T/Rv5N8V
XiOvx+0mXtm/CP81Lm3PN0RfR/SNJN+R6FuIv7NL627U2yv7JcHvIfl7XVzT
fb12faU685dX8u894k+eOHFiWrxL6+8Z/Nmltf4xXjMf6Pp5yovzw9NeXK9M
dGnN/xzRCcQ/3Yv7m9eIXuHF88k1XjxPTPWa/ZqOT7oXv8+Q4TX7Tc2f6cX9
Z5YX93vZXvP+X/Nv8Zr9nfa/yGvOezRd4sXzn61ePP/xe02+WdNVXpMv1/IR
l9Z4nRfz6fWEbyd8J9H/8mJ+/z9Ef+bF/PYxL+YHTnrhey9xLcowf3NDGea3
25eZ98mav0sZ5kN7luF5wD1lmP8YQPgDZZgvGVyG/j5Yhv7+tcy8J7Dbaxnm
iyaVYT4ooQzzN5PL4PtHcVPLMD//Yhnms14uw/zLK1TeV8swfzST/PkH+bOo
zOTX7Pmc5JPLMH+3tMzkC+31ehm+v1lWhvnhFWWYf0wpw/zfesI3kr1NxL/Z
5df2swjPLsN8oK8M84cBaT/TnPwe8VeVYT4yIvF4WextK8P88A4X1/yHxF6q
0MekvYSFPlGG76FOE36G8J/K8L3fz2XmPZj+HJynHN47qYbl8J5LXVVu3nPp
z8s1Kbf11AveplzW80J3QNy6jfDe5dL+xf69hMdoez8v7+n6i/2bbVrFaLu/
OP3P1afp+HLpHyI/sFzao8gPdHFtfxDi1mPl+D5zQrnkb2z+pAkuruWfQ31J
z5O+SeiPSnBxLT+Z/J1P9pPK4f1lUoy2+6PgCwlfhP4lLRZ7ZwVfQfpTXFz7
l4LxV7nl+J4xj+on38V1eQpIvhDxpEi5jE+C15TD+1NVS3idi2v9/3TLq+3v
K4f3l+pDwvdL+2on+H5qLx8T/jG1r0Murv0/JO3b6mWPW4fLZX4R/DOKz+fU
fr8j/Kgrr+lzhP9aLuO3yP9K8bko5b1d+P9H9dugAus/Rl9eXuv/KqA/JsVo
aI9XVmD7uLIC+0/DCmiPKkZfHj91fQX0b+tGxK0OiKtuLq71967A9tEb7Vn3
kL9/JvsxGtrjAxUmnlr/XyownsNc/RofjvHzjKDyjqLyPE7xfQZpNanCtB/9
K4HwFwmfVSH3GUT/G4TPq4D3w2qei2t/15I/aRXQP1RaBfQHlU78GYhb66g9
rKuA/uFZT/4Vu/7p9rWjwrxv1vS7FfC+WL2HuGd3BXyPQH1QgfPVPpS3PkTc
+rgCzzMPkfwnFbB+UN9W4HrguwqYn1WMvny+V8crYL2jfnRx7f+JClyPnKyA
9YE66drT8ThVgd/LOU346QqzntP0hQpcj16sgPNodZHwK3wG1/Ix2ln/aX+v
9KH9OB+uV6/ymfWnlm/kw/esLXxmfa3xG33w/cGkDj44f1M3++D7hkndfHje
1t0H52uqhw/PB+9GfVZPl1+XZ6AP9ksqRmu+esEHk72HffB9QM8jLr/+/ajP
7K80PsoH9/XUKJ95z6jxx314P/AJn3mvqPHRPriPp0aT/BiUV2NI/kmUt/7u
g/2c+rvrn+Yf6/qv8Rh9+fmfesqH55PjfHD+pyZSPJ9xcV1/zyFuPe+D+38q
Rl++X1WTELcSfXBfUSVSfKZTPF6m+L9C8Zjpw/uRr0l9OvcjZ/vgPFLNxnhY
r/vgvFO9Tv7P8eH92MU+OG9Ui137Oj7LfXjfc4UPzhvVStK3ivQVIr+11Qfn
o2or8Xt9cB6lynzmvrNuD+WEl/vwPnQF4paf8JAPzttUlQ/PO3e6tLa3xwfn
U2oP8e/zmfNIzf+ND8731DeuPR3PY4hbP/jwPPO4i2v+4z48Pzzhw/OkUz44
b1WnyP5p4j9D+s668tr/84T/5jPnHRr/neJ3wYfnif9XieeHDSvh/E1dXYn1
18Tl1/pvrTTnP5q+DfWp2yrxfOh20h+jnXyZlr+jEs8X76yk80XEVVfUr7qR
/R6VUF7VqxLPi3pXYv0OInwwljfpESxv0qMUv8dcexofRvIjyN+/kfzISjg/
UyOpPGMpnk9RPJ7C+FrjSN84svc86ZtE9TuZ8CmVeH46rRLOV9U0wl8hPEbD
eelc5FdvVsL5n1qE8tZiks+rxPZeWInndSWkv9TFdX14UT6pjOR9ldgfKxFX
lWQ/IP4ecM4LyN8atzyav9bFNV1H8dpVie9l3qP6/ZfbP7X/+yph/E36kPrv
CaLPVcJ4q36txPHtt0rz/kPrs/yAq4Z+fB8S54fxSDUi/j/6cX5o7Mf7FDf5
cb6M0ZeXz3OzH8fzP/lxforRcH/mVqLv9OP3hrv5cX3Qww/ru6Refrzvda/f
/u3c5+3rN/fBNf99iKsBfswPD/Rj/nGQH+77qRgN9+8G+2G9rAaLfuf7/I/6
zf7DHo/8eF9yqB/2BypGw/7jMT/8fwb1mB+/LzTMj/uTGO3kJ+39qx/zkSOI
/ym/yRdq/nHiv/N9pYmuPe3/RPJnkh/ytyqB8Bl+/F7dy37zvTpt71WyPxPt
q5mEKz9+n26+H/eT8/3wvSu10I/fu1rkx+9lLSY82cW1vmQ/fk9rlR/3v6v8
kF9Va5z2JfvfVD/sfz1pLq71p/lhf6/SST4D5ZPWIa5y/bhfz/Nj/iPPj/mR
fD/kh1SpH/NHW/2Yf/L6IT+lKp3+Ifv9kFP/godcXMtXI26Fnf4jdMRpX06+
j/B60r+N9G93+pPEc7v4/4DgOyR+z4j8Dpdf4+9L/S8V/H2JT4qU798yniUK
vo/wA05/EvyAi2v9XzjtUfz7zmmvIv+9i2v+Yy6u9R0j+ZPk78/O+CL6fhH+
FwQ/R+W1AjLeCH1FAOPTIADxUy0DkL+0WgUwH9nK1af9a4u4dX1A7g8If4y2
x3vB2wVMfdv5gQC255sCUN+qawDzb90C2L57BDBf1YvoPgHTX/X99/sD9n4u
IP1zUADGKzUogOcrgwN4vjIkAN/fVDEaxqeHA/D/eTxjAjB+q7EBPE96KoD5
nhit/+7MJ88HYP5RzwfwPvokxK2EAJwXqgSSn0zyUwJwvqemIK5edGnt34wA
5odeJnwm4a8FMH/0egDuh6u5AXxPNI/weQE4v1WK8AWuvNa/MID5oUWoXy0l
/K0A5LPUWwFYX6jUAOar0pD2ZAXg/WKyN4DnvxVSn876xBeA82JVFcD8XjWW
zwoH8Dw3QuWPEL7dxbW+9wKYH/x3ANcbewLwPkPtCZj1gy7f3gCeh+4PmO/l
av37A2Z9ofkPBjBfGqPhe4efBvD7kV8HMB98NADnj57vJX7O+eP32B/VsQDO
5z8EcD3wg4trfacDcH7mORvA+fhswJwP6PL9TOPfORzPlBU084HW5wni/HZl
EOYLq2EQxmvrqqAZL7W9q1HeahLE88gYDePpNYTHaLv+BG+K/KppEM9Hm5O+
FkFYH6gWhLck/a2CML+odkGcD24JYjxvQf1W5yCuT7qgf9atQTxPvSuI5y89
CI/RcF50N/KruwnvSfg9gu8X/fcFsT0NCOL4fn8QzyvuD+J5xJ8Rtx4g+b+Q
/F9QXj0YhPMMNTRI+4Ugni88RvwjiP9vQTj/iB8dtP/urL9jNMxvTwbN/kX7
O5b8G+vq0/U7AfVZk4K0fyB7U4Lw//GSpgVhva5mB833uLX9OYS/Sf4koz+e
5UE8j1mJtFoVxPEzI4jzXwbJr8N4qnVBGB/VeimfzN9qQxD3mxvRntpI9ZcZ
xP1oVhDv32QH4f6OykZc5QRh/rdyg3helUf6ioK4Py12/df1UYztxfJi+03y
Iq4qqD4CQfg+sAoF4XvDqjoI47eKBPH71Ntw/PC8T+PJARpvDgbxfPcg4R8H
cb9zKIjn9UcJPx7E/dBxiY+zXztB+AmUVydJ/6kg7Cet0zgeqdNBvM9wJoj3
HX4h/CLGz2oQwv7RMGT+f6TGrwrhfNwohPmKGA3jV+MQjifNQqY/6PpoHoL1
rGpO+luETHvSeMsQtr9WIcwntArBeaWndQjXEzEa7ptdH8L23i5k1nNa/oaQ
+d6rptuHcD0Zoy9/X69uDMH3RVWHEJ4/3RTC85qOIcyPdQyZ8xp7vguZfJi2
3yWE+cLbQ5hPv9PxR+huIXwfcJfjj/N+J4T32e8J4X3te0N4X/s+wa8Rur/U
79G7bP8HheT82Mm3Ez5Y6v9Kybc+5JTPeQ9C+oeE8D738BDct1bDCR8RkveF
gsfoy+9vq0Qsr5pO5Z1B8Xg1ZO6z6/p41ak/wRe4uKbfDJn7/7q+1pO+TJRX
RYRXEF5B9eUjvDKE7x/8VL4AyQfJXgTlVYTk/4nyaifJv+uMD877CPLvPeJ/
n/TtC5n72jpeH0r9zRL+j6T/y3sU9VEI36McCMF9d/Up4Z8R/iXhX7n29f7r
K8TV1yG8b/6NGy/dHr4JwX1z9W3IvFfR/EcJP4q4+p78O4bltX4gfcfJv+MY
L/Wj66+O5wmyd4LkT7r1ocvzO9XXhZB5f6LxC64+TV+keP6P7F1RBe1DNagC
fR5PFfJ7qvC9y5VV6G+MhnjFobx1VRXG+6oq8NfTqArj1Qj5rT9WmfJr/sZV
UN+eq9E/dbXrj53PQn+t66n8MdrpH5r/Bipfe4pHR/LvZsI7VWF93Ur2bsXy
JHWtwvGgG8qrewnvW4X9eZCrX8djcJUZ7zQ+GPmth0nfI2TvEfTXepTwoVT+
x6h+RlF5RxH+BOFPkH+jyb8xFK+xVTi+PkXxfwnr0zOd7E2vwvlgBtXXbLL/
epWsh0U+Ruu/O+Pf3Cp8v/MGtj/PPMTVPPJfUX9ZQPFeQP68if5Yya4/9v6I
8BUor1ZQPFeR/tXYfqxUbF9JqYRvpPJtpPJnUXzyaLwocnHN70Xc8lWZ9YW2
X0n9O1AF6w8riOOJFaqS/IvwV1F7Cbu45o9QfdRQ+6ytgvWJqqX+WE/+vE3j
2zbE1XYX1/69T/L7qLz7Kd6fULwPY7w8n1F7/Zzax5dVsj8Q/q8J/xbbV9K3
Lq7p71x5zXeU5L8n+e+pfMew/J4fiP6R4vUj1e8Zws9QfziL5besaqQ91cCf
9IdqbK9xxN+4GseDxijvuQZxqxnpv0HwHMHbo37VqRrnq87V2F9uRXl1ezXu
J+6opv1ENbwPVjEa+vMgF9f0X6vx/fTQanwvPrzavMfW/AnVuN+ZjLhnKuEv
oX6VWI33k6aT/Ver4X22erUa38fPJHxmNe63ZlH551bjfDCvGsfbpGrcfyys
xv69kPDkatyPvSX1deEuOz4x2tl/6fKlSH19K/uvVdXyPQKb37Oa8NUurvWn
SXupF/3p0l4zBc9wcf17s7Snw8JfWC3nYUIXIb8qdvn130vIXmk17h+9Ur53
hC5zcV0eH5Y/KViN+82QtOebBd9ejfvVdyge7yCudlVLvl/s7abyvI/lUf+W
9lwp5dsj9blH5PdKeywX/KC0x1VS/k+rZX4Q/LNqWd+L/s8kvrMF/0rsjxX8
K/F3guAnquW8VvSfIPy06Osr8mec9nqXbseNz0o8HhT8rMTreZH/ycV1+X4m
exeqZX8u8lZY8lcif0UYcMsTlnyq0FeG5bxX9DUJy3lhdxtvSvzNwzKeCN6C
7LUK2/H9WfBrw3L/Tvxrg7i6jvC2hN8i9j/ubvvXXfwLi/67wtJ+hL9nWPKZ
Qt+DuNXX1afpfoT3d+V1vB8KS35P8L+GJf8n5R0SlvM68f9hicdIwR+V8g2X
+A4Nm/rX9LCwaZ9afoTgXqnvkWHTvjUeo+375aJ/VBjGn6THwzIeC/8T4s9+
4R/t1K/o/7tT/9IfnwqbfI/Gx4dNvkfrfyaM+7XJYTPfaTwxbN6Pa/rlMNz3
U6+F8f7inDB+X2l+GO77JcVouL+7OAz36dTKMH4Pa1XYfL/JXh+HzfewNL0p
jN/Tygyb++Qazwzj/bfNYbxfvzls8ouazgrj++/8MN7PL0R7qsTFtXw5+eML
w/uGJF8Y78NXhvF9RHUY30+Ew+b7uBrfFsb3HtvC+P+jPgjbv533FZ+G4X2H
+hRx9U0Y3i9Y37q4tvcd4up0GL+nfMZp34KfCZv7hfp7kRewPjwNI3j/MC5i
6kfHJ0Zf/l7Buprwq0m+SQTru2kE20+zCNZX8wjej2xB/K0j+B6hdYS+r054
jHby0Z99+umnN7SJYH66bQTaq6dTBP7fhroF7avOEewPf4pg+7+N/L2d9N1J
dFeiu0XwvmqvCN7Hvzdi7oNrf/tFzPpN0wMiZn2n/Xkggt+7+UsE82UPRXA/
PzwC35NRoyMmv631Pxkx+W0t/2QE1nPq7xHIX1tjI+b7JVp+otTPzzI+TpP6
2C3j5zTRd0LwxAisN5ISpb4OyHg6M2LWZ1o+RsN67LWIWZ9o+dciML5b/4iY
9Y3GXyd8TgTWP2ou0paKmPWM9mc+6VsQgfWOtTRi1jv2eBmB9Y6VGjHrEa1v
QwTns8yIzRcv9OYIrF9UVsSsVzRfdsTMfxrPRn5ri9Nehc5x7Wn+Yqf+xZ8S
p/8IXurUv9CVTvsQfX5XXtOBCMznKhCB9YwKSvzuFv5wBOf3COIq4vqv41Eb
wfVflOL7dgTWi+ptN56a3ob8agfqs3ZifNVOiucuwmO0fX4o9Ltk7z2S/1cE
16f/Iny3xG+IlPffhO9xcS2/h/C9KO/5gPz7AOWtA9ReD1D5Pib+QxFY76tD
1L4+ccZ7wT/B+lVfYvuzvpL+m+jsB1x/tf+/UX+5gPVrXRR/Fwht1cj9K9H3
fzXYPjwurvX9oQbjF4fy1sQa2R874wHhmTUy3kr8cmqMP5ourhE54S8VfzYK
vdXFtT/lNbB/VTH68vrxVJC8rwb2VypGw3jkr8H6CCCugqhPVRF/NeE1JF9H
9uuJ/23ErW0kv4Ps7ayB8TbpHZLfRfj7hO9x7Wt8D8Zf/Yj2rHOk75xb35r+
tQbb53mK729U3t9If9NaGJ+tZrWmvWj+ZoS3JDxGX95/rVaIW61roX2qGA3t
89pa0/51eWI09JfrCL8OcXUD6buxFvtLB7LfAcujbkLc6kj4rVS+29Geup3s
3UH+3In+e7rWmvrW5elea8YLTfdAe6oXxbN3LdbfvbU4fvRFfZ7RVH/ja3F8
m1gL7cd6thbme08CxSMRy6vmkL9v1OL4Po9wVYvzy3yK7wKyt4DwJPRXJZG9
hS6u6UW1ON8ur8X1yQrSn0L2U0j/ylrYz3tWYX2oVVTe1dQ+1tTifJVK8U6r
xfEqRsP8takW57dNtbAesjJRv8ok+1lU/mxqD1tIfguVJ4fs5RKeS/WbR/bz
MZ5J+chvFVI8Smtxft5K9r3UHrzU3suQX5VRey+n+it3+bV9H5XPR/VXifWj
ArU4HwYJD5L/NRTvGopXLdmrJ3/rSd/bZO+ftZhPfJfi8S7FdzeWP2kPtg+1
n+L7H7J/gPw7QO3rG7L3jcuv/fsWxzN1TMZLWa9aP9B88Bvi6gL154vUHhtF
MZ5/jGL9xmiIz9VRLG+TKMazKck3jWL8mkWxfTePYnttHsXxpUUU8r2eVlEc
b6+NYjzaRHH8b0v4DYS3j+L+JEbD/uVGxK0OJH8T4TeTfzEaxtvOZO9PUWyf
vTDeVm+KZ2+qr3uofu6Jwnif1Cdq2peO332E94vC+snTn/D+hA9A3HN/FPO3
92N9WvESf2c9/Zcorr8GRSVfKvjgKO7vB0fxvOdRwodG5X2LyD8exfOZx6Pm
/MWe/6U9NXDuZ0ThfMZ6MornQ0+iPuvvUTgfShor8Wks+ZSnopB/tp6OmnyL
1hejId8yHnHruSh8D1Y9R/LPR+F+opok5W8v8glR8/1a7V+MhvOpyVHIJ1lT
opBPSpoaNeeDujxLo3hfaQXSSSlRvA+SHsXzzE3EXxHF+1i+KN6v8kXx/kIl
6fcjrgIobwWjeF8nFMXz0lAU82vhKObfagivjeJ5c5TwuijeT6mL4v2dnVG4
76d2kn+7ongf5V2y9x7p20v2PyL7HyGuDiJuHXZxfT/xc/TPOhLF8+IvqX6+
Qtz6mux/S/XxXRTvO3wfhfsB6nuqz2NRvF93guJ3guJ3CtuTOkPt9Szp/4na
0y+E/xLF+6P/Rf/Vf6l8v1L5zlM8fyf9v5P8BeoPF8m//5E+qw7r94o67C+e
OoxvjIb7NVcibjWsw/g1rMP4X1WH93uuqoPzLk+jOluPc/+jEeF/RNy6muw3
qaPvQRPetA7jH6Mvr5+kZoQ3r8P4tsb4qBgN8e2A+jwdib9THbS3pFvrsD/d
RvVxRx2ON3fWYX/rj/o88aT/YdL3CPGPqMP7WyOw/qy/1eH98r+R/pFEP+Hy
a/mn67D/P0325taZ+2b/DyTKGHo=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 16.294444444444444`}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {700, Automatic}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 8069.5}, {16.294444444444444`, 24.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"ovi\"", "\"PK\"", "\"SZGK\"", "\"G\[OAcute]lyairoda\"", 
       "\"M\[EAcute]rce\"", "\"vend\[EAcute]gt\[EAcute]r\"", "\"kisterem\"", 
       "\"traf\[OAcute]h\[AAcute]z\"", "\"Oktopusz 1\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.908771727249935*^9, 3.908771734484007*^9}, 
   3.9087719673951063`*^9, 3.9087745871661696`*^9, 3.9087793353714952`*^9, 
   3.9087850381624875`*^9, 3.9088490961586747`*^9, 3.9088712707470293`*^9},
 CellLabel->"Out[473]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"roomTempsN", "[", 
          RowBox[{"[", "room", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"0", "<", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"room", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "7"}], "}"}]}], "}"}], "[", 
          RowBox[{"[", "cycle", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "\[IndentingNewLine]", "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"cycle", ",", "1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.908771762986143*^9, 3.9087718937865863`*^9}, 
   3.9087719778339977`*^9},
 CellLabel->"In[474]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxd1ktIVFEcx/FbCEULwyTIKCxJMzQrXwVZ3GIWgSIh08OFBJbSRjJaCGFx
TQ11YZqPNFLHJK20CVPDGBitoE0aJRVtRpHCosBFltljkffewxz+3wPD8Jnf
/3/OvXMOd2Zr4bm8opWGYYwvv+x3jz0i9piGMzLcd/Ok9O4L0q+1nf7SyzK3
4Db4rnacPRoqzMmJ5ZGT7n4+oO3k48iXrkh7KqWrKuV6b6ulP1SbxfaYU/VZ
V6Wt2rCd9Y/UhR1lj95GWe9vlPXlTWaaM1R9a5O8vtxm6aOwV9vpb0B+HXkn
8tvwfTiI/mfwF9R/hyNbwnb2f1OLzLfBCS1y/kTkyXAKnAqnw/vgLPggfBj2
wDm43lzkXvg4XNxu3my3R5rbv+ZW2O76HdKvOuR6/zrVOVTztXWFXVtTU7M6
z+fWTyiXaDt1AZ97/oaUX/rUesqruqXLu2V/V7ecP4A8tkc6vkfWJ8GlqF+E
g3ek38BTcFSvnH89vBHe0iv745AnIN8OJ8HJ8C7Mlwpnon4v7IET+9R5yHRd
1ifzi31y/uh+mb+HQ/AM/HRAegKegmfhOfjjA/d8xSh/0naudwH5D/gnvAj/
gpfg3/Af+C+8wi8dCa+Fo+EYOBaOg+PhBO3pUChUkIl8v7bzO2NqH7PHIdTn
++X3XYD8FFyI+iLkZ+HzcBlcDzfh/m4g78T695D3w8PwKPoD8Bjqx+Hn8Av4
HTwNzz9096VYPc9PD0rPDqrncaqa/5GwNT8k8x3D0hkj0vnSVgncrG3/PFe1
ot+H3I+84bGcb0TamISzR6W/wQuw8UQ6Qts+H5s3BOT6O+EU+FJA3E9EhcyN
6KDaD3W/WUG1f+7+WGeC6vml9qsOrpe2riEfDYr/Q1Uz2k7+Wdr6Cq8bk/0H
xmS/KW1lwzmoz0PuhU9o/weo5ju6
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxd1ltIFFEcx/EphCLEMAkyCkvSDM3KW0EWUy0RKBJiFx8kMFx6SDJ6EKRi
vBQqYWZbmZiXou2ibpprGMKuZfikUVLRyypBaBT0kKZWLzkzhx3+3z8sy4ff
Oed/Zjgzu5uLz+WXLNc0bWTpY37btUt3mzWdpVvUT0rvvCD9zrHLrLLLMjfg
Zvix43izkir1dKsy7bzbsZUPI4+sUvOVF2FXtXRjtT4+tlS5qv+HK9LZV6WN
urCt/kfqpeeu6S13zVLre29I++A3TWo/GbbzPNJH4QK4EW6C2+D78FM4AL+G
v8G/4Khb0hvgLXAinASnwKlwGpwB74Gz4f3wQdgF5zqONisPeQF8HD7cos6r
mr+qNWz7/rViP/ekI9vl+WmGSzukV3RKt8NDcLBTnve4B9IJcLLjutra2pVl
yOfhwEPp9/AEHO2V66/1ynw9vAmOhxPhrXAynALvwH7S4CyM3w27ML78kXQF
HNMl53+CQ/AU/KpbegyegL/A0/DXHrm/2R6Zz8G/4Xl4AV6E/8B/4X/wMl/Y
1vMV5ZP5ajjGJ68nFnkcHA8nwImOrec2C/le5LrjY2YdwPhC7K8I+SnkxXAJ
fAbzz8PlcAN80/FkKBQquoO8Df2eIO9C7kc+iHwIDmL8MDwCj2L+R+STyKue
2e/jfvv/S01Frz1OU+Pf9qrx6n15uk/6c596n6r39ehzYeNnv8y3+WV+0a/6
Z9j9Z/z2OXGr9TMHpAuljVLY49ha7zbmdyD3ITdeqP2l226UNgaQj8M5g9I/
4FlYeykd4dg8bxvXDcn+2+FU+JJj8/oiKpFHB9T9VvnZgPq9Vf3rA+o+pNnf
DdLGddgTUOdBuVvlmlpvTParmXJs5TPSxnd4Qe3Prc7LmmDY1nr7giLXdPhQ
0L7+WHU+cuBcaS0feQF8wvF/d7BVcg==
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 18.044444444444448`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->300,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 8023.5}, {18.044444444444448`, 22.9}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxd1ltIFFEYB/AppKKHDZMgo9CWtEIz23VdIYsp9iFQpExNH8RSDAkkoweh
KMZSUR+85CXt4j2z1da1VTEWds3AXlYoqYhklSAsDEK0zAoiZ863O3z/A3L4
+f/OmTMzZ2Z2b/7l9MKNkiTNrv+pvWhHZNFbRS9nc8df5X6t26a2kps8V8Ct
4H7wYFnQRrVNlPF87Ra37TZ3doU87VtvqYnCb8HJldxKddDa8U7VBK315+vk
e23rLZzqiwIOnF+dfFFrlPc10HrIDvBkA58vrYn7NDgDXA++A24Hd4PtYA94
Uneo2r5Cvgw2NPP63c083weOBh8Ax4LjwCZwAjgJnAw+Dj4JtoFT4fzSIM8A
Z4EvNYt95CM7W/h8vlbaPxaRf7zP860PYL0Peb7Uzudv7eAu7uTe3MXdAe7u
Er1C+9sNjujhjgLH6K6uqqraUgKe6+HHW9Wt5Y29sD8fcb8Bz4BD+4LW5tvR
x/Nd4EiwERwN3g+OAceCD8N6TOBEqLeCbeA8cptFjC99zH1Nt1Zv6Bf7ayGB
9oOd54v24PtOGx82wN+P78EfBkQfeN/6wfPg64OyWW0u8guwDzwD/gRewPwp
HS9J9J91a+ezAvkP8E/wKvgXeA38G/wH/BfWs8ERtHofwg0OXr/NwevDwOFQ
HwE2gqNgfLRu8dmC+qOQy7oz1XYC6nNg/lxwHjgfXAgugvmvgEvBtTC+Ufec
3+/PvQv17VD/BDwAHoHx45C7wV6onwC/BE/B+HeQz4Ejh+h5pP2fOSSeBzO5
Ykj0gfexwUnjhRWrkz3Pyisnfx8UDHPbh/n7Y+oZd46L5hNWvnNLyy56Xs0i
3zRC6xGWDoLlERpvEvXxo/R9EJYsutWfmyE5PFeKwU28vrwF5uuE3AHjLWN0
fWl99dzKKOTT4KUxdn7KP8pddPyUce5v4BWw9Jw7hFtpIZtN2v7fs9MdtHZf
jW4xThG/85VD4DjwDd3a9S7jLq/U59f+b/XQ/qD8jIfdf+msh75n5CwPH1/g
ofOk+1ujW+tquZU6cC9ZofpJD7/fs4HcLNY3r1vrv3Ari+DtXj7+mJePl7mV
FHAq1KdDngHzn4P6C166fgnyf3RLjvo=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxdXXl8lEW2/XSiKKCigivPhaeImnHCpoiALSIyyENBVHQQcYVxFKOiIm5f
IJCwJUBWsi+dTtJZupusndZORgFRQZFxHHWAAUEfb0aRAUV01HlN1f2q5pz8
07/DuffWrapbt9ZuLn3oqemPnug4Tm0vxzn+qf+G+Po337p30YzhvgnH/5KG
Gqz5Yb6nx/b+S3WqYHeYb3rnRUv/Mc3DY3zH2bGTPTxOf/o8/Rt9b303ZFb2
eI+/0bd3UaKEBwX7fCjvu8k3K/vNhIYnfzPyl9yh9S/15O8w9s88/nfCNN+2
rYm/KZ78NN/x6vS/xsPTfY8d/xvs6c9EnPIs4u0Wq/ZJfRV5l3Ah4TrCW1zt
39ZhGu93tX8HBTtpun3PFPn+aej/eWm+SccboJfggWk+f2qig/5b8IQ0LG9S
mu+raQmDVwuekYb9tUrkHxPcKPwKwWEpf/5w36Djfz0WK35jmo6XXOEPpOl4
CQv/bZpPdecHwict1v78w6vfYl1e7xGav2Sx70oVACN0O40SfvII8X+x+Ct4
FvFzFvuOJsLhzecEZy7W7blW7O9crONlsfB7pLw6wV8t1uWuEnzMYqX/02Kp
n/DOEqm/4L5LsLyBS3R7NQt/2RK0P4HwliW+ixOjq7NM8NYlEmde+cLPFj45
XeLfa590/ekTPDNdxovgR9IlXsReYbrEk+Ct6dg/pyw1/adwv6XUf0t9x925
aJMXb0u1/WpvPCwV/wV/tBTzSb9lmG/GEF6zDOM/dxnGb53llf+ty3T/j/TG
c4a211/wiAzUH5WB+rMycLzMydDtc6vgBaSfnoHjpy5D+t8bTxmmvsp+OEP6
W/jODJMPFf96hsSn4GMZEg8iPyTT99LxCnV59cnE8kZl+lRxbwhOzfQNP/7X
IvZKSN9P+o2ZOH7DmWZ8K3yA+K8ycfw7y3V7ZQjuvxzjYeByXd/K4bodxiw3
9VW8j+QnWHsK37FcxquXfwmnL8f29S/X/dngxd9y3X/vin+TViBesELbOyDy
L6/A+HaJ7xT+JBlfPcSvWon8jFWGV+UtXIXjKXm1Hm9nePlstcSnN35Xm3yp
8BOrTb5U+JPVEq+Cd66WdhW8fzXmgwPEf7Vaz78DBR9ajfnl2GodX2O9/JeF
9pKykD8lC+1nZsn8LngVyfdkYX7bmIXl78/S8fHwCF9DMPF3KAvr+63ltb9W
X8dnNvqTlG3kFd8vG+2dZ+X1/JSN/qdky3pI+NRsmR+FX2B5hRuJbyX97cR/
lC35w+vfbB0ftwueugb7/5E1Wj5F8GNrMF4WrMH4fH4Nxtsi0T8k66l1a7R/
H4p8YC3m12bCrWsx37av1flnuNh7fa20p+D4WlzPfbYW1zMHRN7x8s1aiU/B
J64zvLI3fp3W3zdM40nrtP29sr6avk7H28/CzyD+mXUyXr18sk7X7zuRX7YO
yy9cp/PpaMFn5eD80D/HzC9K/xrih+Xg/DY/B+ef1BzpH9F/xvIKv5xj6qPk
3RzyPwfruywH23cNya+zvJLPJ/uFpF9k9ZV8RY7pTxXPdcTvzMH23pOD/ft5
juk/hQfm6vH4tuBBuchfRfw1uXo+/lLqO4H4iaQ/OVfyu+Apuejf1Fz92SP4
DsIzcnU87BR8X67Mv1L+Q8TPs7zCj5M/qeTvGsLrCJcRriIcJBy3WPn3JuED
5M9hwk4exsvphPvlYXz0z9OfPomHgXmYLy4jPDjPrP+UP0PycL+ZTPgawsPy
cH05gvCoPFzvjBb/vPXpGMLjCI8nPIHwFIuV/1OJn0H4bsIz83B9dl8erv9m
E5+a51Pp/S9ePrC8wq7llfzmPIlvbz9K9t4l+feJ/4r8uSxf9lte/+Xjeu6a
fJlfvf6xvPJvRL5Pdd9Cr73zzXpS8b58s9/U4zkf96cT8836Wef7fGzPyda+
4mfm4/7ivnw8b5idr+u7yFv/5/uK1if+7hX8ENV3Pvmfmo/x+Az5/zLxVfk4
HzTnm/MLJd+Zb/K9ymvH8s3+X/E/5uN5wekFON+cVWB4hecU6Pn4iIz3xwow
Xz5RgOcL8wtwfC8swPz4coH+9PK3W4D54n2S316A+XZHgax/BX9SgPnqM8vr
+aNA9qPCX1Ao+2vBFxUiP65Q9j+i77O8whOJLyyU+BP9Isvr/iK+rhDz+cnr
JR4E914v7SJ48XqJB8Eb18t6TvC76yVfefUlfrfVV/xh4h8vkvWu8KuKZD0r
OKtI4s2bz4vkvEj4EuLLiiSehG8s0vnhHuGbLa/9L0J/3i+S+PX6o9j4o7Cv
GPmJxM8q1uvVeVL+vGJtP1v4J4p1/zwr/PxiyU/CP18s+ctr/2KMxzXFuL7J
L9bj/XwZL4XEFxWb9Y3iy4px/RYoxvFWV4zz25vFJp8ofkcx5o/PizEf7S+W
+BF8uNjsn5V+7xLc7/ctMbzC/Up0PLwpeFAJ5v/BxCeX4H43pQTPf4aR/OgS
3L9OLjH7aYWnl+B+Y77llf8LiF9IvEv8YuIzS3C+W1GC81dWiTn/0P1dgvuZ
dcTnluB8FyzB+e7jEpzf9pfg+c+XxH9F/MESnL8OleD8cKzEnF/o/F5i1i8K
n1KK9nuXYrycU4rz1XmlOF9dQvxg0k8uxfnxmlKcv1Oo/GtLsX6jS/G8Zkwp
nvePL8X6TCrF+s4pxfOl+aWmvxSfKvVp8/ZD4v9OkV8g9fvUi6dSjIePSzFe
PiH9naXY/5+T/v5SjJe/l+L4OEj+/1iK52c/Ef9LKa53ksuwPa8pw/acRPxk
4qeUYX9NLcN4u4P0p5P+3cTPLMP12iziZ5dhPMwr059evlpYhuNnEcm/Snxu
mclnOn+Wmf7U66Ey2Y8L3lqm++dcOb/YXabz6agRmt8j+ucL/3fLK3y4DM97
jpbhedMl5XgeNahcf3rnRyPK8T7imXK0t6Acz6MWEl9IuKocyw/Y8vT8W27O
79W/7yg354uK/7bcnOcr/sdyzJ9DKgy/PDMz85QrKzB/X1WB50HJFbJeHK7l
f038KOKvJ35MBfozpcL4r+RvJ/7OCqzf3RV4fnoPyc8k+fuI/x3xsyvMeZkq
f04Fnq8+VIHnZw/b+ij5R0n+ScLPVpj7qOPnk1e9XGHuo5T+KxV4vre8Au+r
VlaY+yMln0X8mgq8b6ol+0Grr/gQ6fdU4Hnk5go8X3yb+D+L/kjBH1eYeFSf
O6l9D1P7/9vGl/LvhErkkyox/npVovypJH9aJZ5nXlmJ/XVVJfZXSiX2zw2V
eF84sRLH7+2V5n5Q6d9VifdxcyolPwl+kPjHiJ9L/OOVeH+YUYn9mUn8ykpz
P6j8WVWJ95XlFiu+ksqrqpT1nOBq4mssr/QbpP5vevFD+jHCcfKnp9Lcdyp7
f5T++MC7z/T6V/C2SplvBb9fKftHwR+Q/e1k72Nqr0+kPT+S8j+V9tsq/Gck
/1cqbyfVbzeVv4f4L6w9Vd7hSrzPPVKJ978/U/m/UP/3q5L9gODhVTh+R1Sh
/M1VaG9yFfp7ZxX6O6NK7te8/FqF/X0P8fcT/0CVHi8B776hyvSHzo/kz4Iq
bP8XqrC9Fkr92oR/scr0n8KviPwhwa9SeW6ViSeF06j8xVWyfhOcXiXzleCl
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
ewGW514QwfgaiOUl/Rfac5Op/ikRGJ/ucOJHRMx7I2VvLPLOuAh+X3k88TeT
/ZsjEB9JE4ifSOVNJX+morwzg/gZZO8u4u8hfibx90bMeyRV/v1UnwesvuIf
ov55mOLnYeTduRS/86j832N7uk9EcLw/Se09n/SfiuB7qVTq/wURfJ/wHMq7
z1H8vUD2FuL4chdaf5R/L5E/LxGfTvoZEcw/meRvph3fav25gvpjZQTXEyvJ
/1U0XlZRvlhN9rIisJ5Lz6J8ko3+ujkRk69V/XKJL4hgviym+hcTX0rtUU7y
5RFcf1RQPFVhPkuvoniso3isj+B8GYzgfNtK/dFK8dBO+a49gu/5tkTgfYn7
bgTf131E8fdRBN7XuJ9G4L2Ku5PK34XyzqEIvI9zD0Xw/vCfEbhfdI8Q/y3y
Tq8N4K976gb9747UtzfyTh/Lq4++G8x7HiV/GuonXb0B/U1geG+TsgHey7gp
xA/F8txhxA9H+84otOdstlj5M64F34/c2CLjQXhfi3lPouozmeRvs/LKn7tb
8P3KPS3wvsWd2wLvX9ylLXD/7Wa0aD3v9xIyic8lvrAF7tPdBPben+j4bIH3
MG6sxfxegNJ/HeuX9Aby7huk3038Wy3m9x6U/kZbX70+bsHfg9iM7eFsIf5d
aq+t5O924rejvnuQ8Imt5n2M0k9qNb8vofBJxF/YCu8f3AuJH9hqfv9BtW8C
w/uSKxG7o1vh/Yg7nvjbkHfub8X3GA+2wnsN90HiH7b2lD+PtOL7mEdbze9h
KP0E/s/3Le5j5P9c1HfnEv9Eq/6U9znuk2Rvfiu+X3mK6ptK9hdYeypenrP2
FH6e2mchlu+8RPV9mfhXqbxXbXso+y62p5tG5S2l+i2l+meS/HLsL2cF9ddK
y6vys6h9ssheNpWfTfwa4nPIXi61Zz7x+cinF5P9ErJfRvEcasX3W2EcP04E
x4+bwHr+En4DybdQf7RQ/7ZivCdtEX628O9QvG9rlflc8PsUb5+S/F6y9zPy
zi/ED2zD938jCY9ug/d/7vg2855KlX8v4vQ5bfDez32S8LNtWP4C5J3n20z7
KXsJDO3/Qhu274tWX8m/bOWVf6+0YTy8RvZeQ3tOGvLOYquv7GW2we/nuAn8
n+/X3OVt8N7MXYG8k0X+ZlF9cqn++YiTKsien8rzW17pN5N/Meq/N9ownuJt
MB7c7jb8PZ+eNoh/t4f4N9tw/nmL/NtI/n9F9fu6DeeLBIbxe9D6qz6/acP8
+K82uV8YqvFPIu+I/Z9t/RT+pU3WW6LvtGM+OKEd3y+e027sKfnzRH6fLs+5
ol2+ryl4SLu8fxJ/bmmX+1zBk8X+2yJ/m9irFv42Ka9H8BTknenEz2+X/Yjw
awjnt8v3z0S+sF3yy1A5r0V5N4F1vAsuaZf1jMhXEV9FfK3lVTw2WF7500z6
zci7oXbZ7wgOt8v4FP0IybeR/U6UdzvRv/SN7bI+FPlN5P87pJ/Aev0l8tsI
75D+/YPo75L+nyz6uyyv8G6Jl3miv4fk95D9veLv7cLvJf9O6ID2dE7tkPEq
fAJ7/a1wnw6Zj0S+L+mf1oHlndEh41X4fh2y/5T6ntkh70kEn0XlJbCej0T/
og7Zjwq+pEPuJ6V/kjvk9z5Efzjx1xJ/neWVvVHIO2ORd8dh+zg3on/uLcRP
JP5W4id3YP9NpvJv60S8v1O+fyv4QKfkM8H/IHyoU/Jbirb/T+F3a+wc7pR8
JuUfJv4I4V869WdPim7PX4h3ooZX9hJY7z+FPyEq+U34X6G8kxQFe24C6/fN
wp9E/Emkf3JU3r8J7oX6bi/iT43K/abwpyLv9o7KfarI90F5py/y7hlk72z0
1+lP+gNIfwDx5xCfwPp+UfCFUdl/C744Ku9rBV+CvDOI9BNY33cLvjyq1y/H
pH+voPYYQv15ZVS+/y3xcyX1z1VRiFf3aun/3jLer4tivhkXxfHoi2L830T8
eMsrfydEzXhS+BbSnxjFfDCJ+N9GMT9OjprxpL+PHMX557Yo5rvbpT2mCL4r
CuPbeYDsPxI1+Vq1x6NRk98Vfhr13aejOH89T/68EMX5byHyzouo76RJPDwn
5WVFcb7Jw/o4+WjfKaD6F6C+U0Z8WRTWE055FNYT6fVRmN/cIPV3QxTnt0Zr
X+k3Yvs6IZR3Q1GTj1V9w1Gcb8JYnhuJ4nyzgfgN1H8tVN+OKM7vnRQPm6i+
m6i9P6P6/NW2v6rvX8nePrK3j9rvC6yP+0UU59cDpH+A7B+keDpC8XkE7bnf
kf5R8ud78ucH8udH6p8fqT9+1YXySV24PurVhe15CvG9ie/TheMngb31isJn
I+/078L4SmAYXwOovHOovHO7cLydj/LuwC6In/RLuzDeB1H5l3dhvAzuwvE9
BHl3SBfG79WWVzjZ8srv35D9lC7TH0r+pi7MRzd1QbwmTeoy41/nX5R3ftuF
+4/JXXK+K/b+B8tLn9ol9z2C78D2dKZ1wXrdnYbtmTSd+usuao85XXLfIvpz
qD8fsuUr/Aj15+PEP9kF+T09FevnvEb2Xaq/S3wa2V9G9V9L7bOW9HNt+yg+
l9qnAO27RV04/oqxv9wA8bXEN3TBeHYayX4j+d9EfBPad5up/UI0fkLEh8mf
MNmLkPwGaq9O6o8u6s9YF+6Pu7twP/sejt+k7RJvKWJvO46/9A+75DxJ+B3E
/wl5Z7fkq4Eiv9vyqry9yDuHusx6T8kfIv5IF+4fTonherBPDPm+MVzvnoby
zukxXM+ebnnlXz9rT9WvH+mfGQN/nQFkL4H1+9AU9b74v86zWNk7P2bWuwoP
JP4isnc1lZ8c05/e/iYZ6+v+mup/DbUXYSeF9FPQvjOM5IfHcD8znOyPiOH+
YSTZv5bsXxeT8yjhR1P9bqD+GWN5hcdZ+6r9xln/dH4n/3+L/jtzqT/mxsz+
RNn/Qwz3J09TfZ+heHkhhvH/Ygzj/6UYzn+vIHZei+H62o1BfkxKi+F8siRm
zudU+Zkx+T6G8Ctj8n1g0a8jvi2G+bs9Jt8/Eb4dy3NeJ//ejeH8uTVm5nvF
b6X6bYvh+iaBYT3yQQzXEx/EcH23PYb7kw+J7xvH7wefHtef3n14vzj8Poib
wHA/3j+O99UD4ua+W7XvJXF8D3BpHO7D3UuRdy9D+87lxF8Rx/cHQ8jelVZe
r4fi+B7g1+R/AnvvIZR8ShzeH7g3xPG9zFjyJ4HhvYSP6ntTHN5fuBPj+J7v
1ji+b5ocx9+Tmh7H9yAJDO9B7ozj+8274vS+Ko7fv56J5bsz4/ie5t44vn+b
Fcf3TvfH8X3gw3HzfWAl/7AtT8nPjcP3r9256I87z/JK//dxfL+9wuu/EbLf
9fpP4/RsLx7kvf0ayytcFIffV3YTGH4PrTRufg9N2WtA3m2K4+9RN8fh/19z
w8i7LWS/lfTb4vD/qbltVL8Ost+B8k6n5ZW/nVRe1ItH4aPWvuK7LK9wzIs/
Kf+PXnxI+Zu8/hC8OW5+j1jJbyF+Wxy/P/0+8s4HXn+L/F/i8Pun7s64+f1S
ZX9X3Pw+qarP37z+9L5/YfX1esnLV8L/L+EDXnx4v29J/N/j8HuJLmHn6zh+
P+VIHL/P/XPcfN9b+XNSt/m9QeV/Anv1U/Ind8t4kPqfTHwv4ntZewqfgvLu
qVZeld+H+D5k7yzCA7rx92nPQd4Z1I2/j53cjb+fPrTbxJP+vZJu/e/e7xle
3w3j1b3e8srf0d0wHtLHIk7ydWM8jxd9R/DNyLsJ/J/5wJ2A5TsTib+N/Jti
sd5/En9nN4yf9Bnd5vfLFb6nG36/wJ3Xbb4fpOw91Y2/j7Cg2/x+gl4fdZvv
/yj5F7vh9xbcF7sxvy0i/tVu+P863XRpL+/95dJuM3/8P/OQmyI=
        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.004583333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxd1k9IVFEUx/FXCIULwyzIKCzTqdC0/FeQxUtmISgSYpYLCRSjjWW0EIpi
LC01Mi2tCPNfpaY2VP7JkEYzcKVQYu1GCcKiwiDLrDb57rze5XwPyPDxd86d
O/Pu483mgpPZRcsNwxhd+rNe3VYF7TInxpcqM8U0rDKPSO88Lf1aW82XnJe5
B74Nd8I9ZY4jrRopk/niBWn3RemoioDHkwOeglMvSXuqHKv3S692/G1uqRav
2H12/5qr5jFVyWaoVWatkyu318l+L5xVL30QztFW69Uiv468CXkb3AX7MD8K
f0L/dzikwbG63hsaZB4Fu7TV+tuQx8JxcAKcBO+BU+H9cBrshjOx3yzkOXAu
vO6OfX6SAjYa5XrBjbI/7a60q9lMVPX/ftGuqqysXFncIvMVrdLNrbJ/CPnZ
tsD5nbUdcU86WlvNx8Al6F9AXnhfvn/FA/n5fPAbeBIObXes1lsLr4c3tcv5
SOQu5FvhGDgWjsd6CXAK+nfDbm11Hko75PyZDtl/uVOep4Uu2R/WLf2uW877
4Rm4rse+frZfwuPwJPwenoXTHwXOQ6+9vw/wvLbq/wH/hBfgX/Ai/Bv+A//F
fpZ5HavnQYhX9q/yyv4wOBz9EXAkHI15l7b6HlPQv1fbej6dMLUPWXUA6+Vp
q/OWj/woXAAXwcfhU3ApXAPf0J72+/35t5A3Yb8PkXfDffAgPAQP4/scgV/B
Y5h/C09rW4/D8i2P5f0V/ETev4Xw2FPpr732/ZOo7JmTNrb3SSf3O1Y/3/L6
5XwxXC/7y29ivgW5V84btQNyvf4BOT8hcyP+mf08sJ0x6Fj1dw4G/m/Y+Rd4
HjaeSwdpW+dp47ohkXt2wHHwOW21nzKZG1Mv7Otr94f77N9/9vXK9dl5UmC+
Gq6RLr8Gz2ir9T5Kez7Dq4fl/D7pIBN5xrCcz0R/Nvpz4MPa/wB8zDQ5
        
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 16.294444444444444`},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->300,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 8069.5}, {16.294444444444444`, 24.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.003666666666666667], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
IPFGiYg3TjTlR4f6B+GPJ+J+xZ5Eyz+pb38i1i+HE83+8YbCjxN+KtHsH2GK
vqb5JX2d+F9LsvjN/pFk1cOSnp+E/NuSrPpJ7v84NG7OX0lYT/sJLye8kvTv
Ifv7kzCewyQ/YCvWo0O3WvWjOT9vNfP9rKJHbMX1+96t5m9ovbqf8MNbcf1y
ZCvWo6e34vro7Fasv3/YivXmT4TbknE/4M5kC5f+1km21vtm/ZWM8dZLRvuN
klH/Q4Q3J7wV4a2TMb72yRh/R8KfJvwlwocl43r/tWTaz6D4MzVujvfJuN/h
JX17CT9M8keSsX2/Ssb9hguEX0zG/YpLZO8yyf9E7WOkoHz9FNTfMAXlw4ge
RvzDU3B/pTxFzR+KvzIF87cnRc1Pyp/9KZifY4Sf0vKS/krjkv9sCu6/nEtR
9ayix2wzf6uV/LhtGP+EbWq+UvQ0wsMJn0W4IHwZ4asIr70d/RHbEU8gepvm
l793p5rPx0FFP5Rq1geFXeR5Uu1HUs3+XqLwNqlqPaDox1PVekHRTxDenvCn
CO+s9Ut7/VPV+kLhg8n+TOJfnor9Y1WqWv8oenUqtm+sxqX8Bo1L2qXjl/wl
JH8mFfP5baqqJ5T8RcIvpZr9MVPRl8nfn4n/GvH/Qe3zJ8X3r9Yn7d+WZo7n
yQq/Iw1xWxrK35mG/tRKU/WYouukWfFJ+v40y1+p77+aX9IPkL7GpK8Z+dea
8A5pmI+Oml/qf4rwp0lflzRz/vMruluaWt8q+tk0c/6NVnRPykcv0teH4g8j
+33J/1fSsL8OT8P2HJFml+XbYhXPyDTsP2NV/lYo+nWSH69xSb9F/r2dpuo/
JT85zXyeNil8hsYlHU74XMIXpKn6UtGLSf8Sko8k+Y9UPuYqejvRRcRfTPZc
hJdSe3p0PiXtJzxA9CfEf4jwzwg/Qvgxwk8RfobwWjtUParohjuw/z20Q+2P
Kbol4Y/uUPVx6HkgfZ12YD5n7DDHr1mqfd7fYY4faxQ+T8tLfL62Z9YfO7B/
XSX5eun4fNRPx+e9QTo+Dw0Jvz8d54MH0tFe43Qcfx9Mx/7fjOgWJP8o4Y8R
/QTxt0/H56cj4Z20vMxXj3Rs32cpH4PTzd/Q/DqE8jE0HcePFwkfno7t/yr5
N0LpF6HxIx3Hm1Hp+DyOScfxcCz5+3o69t9xml/qn5CO7T+R4puUjuPzmxqX
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
Ar4vIIK0ub+r7Cchbmwl3EHyDsIzNS7bO0ib9Zfyp4D8KUTc2F+h3m9R/Psp
P59UqP1phX+C+TQOUPseUO13Wcl/qvrLfxT+KckfJPmDqj9dUvKHtD4Z3yHV
f2uFnifsH1GHdftI+gi131HV388r/ccqzF9D2T+J/hpfYjziS9L3FeoTX1G8
p3U8sn+dpf7yDeXjHMYvzlF/PE/5uYD5EBe0fRn/t8T/HcXzHeFXSd9Vas9f
Kb5fSf43wn8je79T+10j/mu6P8p8GZWIB2mwdzvhQRr6S/NKq33M+qcS+rvR
vVLVt4q/O+KiZyXG/1ylOt9R9POE2ytV/ark7eivCKtU9bPi70t430qMf0Sl
yVet8BEU/0jSN4r0jdb+SH1jKrH/BWk5PpxU+JuVql5V+XiL9L2t7Un+KRi/
mKrzI+XfofxMR39FkL71ebWFE38E+b+K7K+j9l5P+YithOcvKpbkN6C8LQ7b
V8RVwnhvbKL8b0b/ojZTvraQP/GUr3iyl4T2xFbMpy2F5LeR/HbKXyr1x1SS
dyBuZGD/MDKpv2dRPrKpPbNJfw7lq5jycbRSnaep/J1Q/TFe4V9oXN4v+aZS
rZ8Vfg7lbecJv6Bx6c8F6u+XdH+X/N9T//+exovLeryQ+n4g+kolzgd/4vhk
3KD+caMSxmvbTcrfzUocL/8i/C/dXtLfvytxPvmH8H8rsZ4wqrC9b6tC+bpV
+L2kBlX4vaCGhBNt3Fdlfb9I2g/SUO80qsLvAzWpwu/bPEL6miIumhLejPBm
ZK81+ROkb/2+UUxvTcv2sFfh95/6YvyiH9nrr+OR+odgfGJoFdRrtuFVWL+M
IPnR6L+YpP2X/rxB+X+T+N+i/LxN7TeZ8jOF4gnS8D2rqWhfTCX908j+NMJn
Y38TswmfU4XrlSAd6v//D7jKGGY=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.003666666666666667], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxdXXucjdX6f/PbOZMjuSdJkhzdkJCE5nRQRyUcio6ELoakoZIjsmgwhHEZ
M+M2Zsz9Ys/Mnn2Z2Xtmz4QjdXRITiSV7pJcqyPF+W3rfd71+n7nn/k8831u
61n3Z631zk0TXxrxXAPLsoY0sqxLv+2fI/c3OpCT2P+9nvED9c+p+70PfjG7
pbdnfEf944l3cJs/Lt7Bbbo54a3jn7/0ky/6PHcZWsPqrviFPwyvar/Q4e+B
+lSP+Pd3x36WOfJ3G35NJ/WKv8T9YLYj31vkHP4+8bmJ/WMuOfr6xL/e8pIF
h78v4X3jH7qkcLGDDzT67N8P2vzPCF3/V4Pr8DQYgvj44QZvduln/vD49eti
P2Mc+eHx/XXAhD4y3Mhr/itG2v486OgbifqVi9v8o+z4DHLsjUL+rFH273jH
PvF/MSpeh2ek4PGjDW3rGx3/S5exKdt6OfEZE39rjPw5QegOY+JjVJexjzn+
jom/W/+I/Ntj4i+VttETjr9P2vXR1+Efa8fnOqd8Y9HfI08Zf2174zB+apzd
Hm5y8PGIx483+pckx37Gj7fbW1fBEycYfzVdPsEuf0vhPzIB/T3l4nY8Jhp5
zd90IuIdJqI/3QkfRnjiRDte1wq9kvRnTbTjfY3j70S7PfzBqd+Jdv9pLPRe
0n+E5E9NNPHQ+q1nDK7pDglYP4kJdjzO3y32E4y/mr8+IT7WWX8Yfk7wvQlY
nlMJdnnOCm5Njp9+ycFTQjedbPzX+tRk278Tgh+ZjOU7NdkeX7515KeYeNjy
U+z2elTwlVMwXtYLdvu6UvjjXzD8dntxcVv+hfgbL/3hM6f8JF//AtprOhXL
02Eq+hs/FfUPI3z8VNSfOBX9qyd871S0H/+i0WeX50WMT+KLdnvcL/zqRVMf
tv5ptv+7nfqcRvF8ydb3jvBnvSTzgROfl+IvsXc5LPSw6aZ96PF69HS7fRwQ
+tx0tNdnhtGn8VkzMD6K8CrC985Afw4SfmSG8V/T3V9Geq9La/1ZM+32Wyl0
4Sy7P4SFv2qWHb9yR/+s+BGXCrxK6KOz7PJXCX1qlt2/1jnlnW3317miP2G2
zHeCJ8625WcJnezya7pwttGn5ctJXxXp2zVb5lcnPqTvyGz079xsu77Spb47
vG7PD686/r9ucG3PmoP+jp+D+hPmoP5ZLr+Wr5+D+nbNQXun5mB84+YafNSl
n5vmIj56rtFnx2+uXZ8vO/Gba49/KWIv8Q1D2+2N6AyiC4lOnofxPaow/seV
6BW633yMzyPzMT7jCX+W8ATCEwl/Zb6Jj16/zJqP/swh+VKX1vz1hH/tymv8
6HxTHk1nLUA8dwGWt3SBrA8FL1+A8dpN/OcWoL/Wm8jveVPWc0J3eNPo13Qn
wge6tLbfMgn99yxE/YULyf+FqL+c+PcTfnChPR4tdfrXQozv1wuxvvotovpf
hO3r2UVmvNHy/Rab8VzTDy0245UtvxjH+2cX43g1dbEZf+32QfjKxTg+byQ8
i/Cj5E/jZDPea7xNMsq3S0b+fslm/Nb0xmQcv7MI9yeb8VrTe5NtvnrhP5xs
t58vBD+SHL/9Uji3Oe03Gef348k4f3mW4HgftwTL03iJkdfjR4clON53WoLl
G7vEzLeafnYJ1k/CElwfqSW4Hkpeguu5HUvMelHrO7jErL80fXgJrnePLsH1
+3HCTxH+0xJ7/u8i9LkluF9puhT3Hy2X4vqz3VI7/hOc9THhXZbiev8Ol1/7
393FNd3TtWe396V2+3tE5HOXmv2BxgtJvnSpKY+mu7yF68tZb2F5lxGe+pZd
3+2F/v0t+7flxHOZWW9p/Z2W4/p59HJsb2MJL1yO7a+U+MuX43rbvxzbTxXh
9aRvh2vP7i+kfz/hh0n+COn/ifxvvALbe9MVhl/TfVbgfmDOCuxPy1zcnk8I
L12B8favMP1b03tXmPWx3R9W4PhxeIUpr8atFCxv0xTEW6ag/jYpuJ9ol4L6
O6XgenlgCq73H0rBeD9C+DBX3h4fSP8rKRiPWSlYH3NSsL6SCV/mymv9K1Mw
3rmkvzAF67fU1W/P31TeKirPbsIPEn6Y4vF1Ctbv8RQcv08R/znXP51vaLAS
8YYrEW+6EsfP5ivNeKvxtiTfbiWWv/NKU37N32Ul+nvHSmwvXVdie398Jcb3
SRfX+saSf+NIfibhc0g+f5Ws9wT3El2/StbHkp/5aRXm4+JWm/yYxhuvtv/u
5LeSVsv6RfgzV9vx2Ch4octv23dxTftJPrxa1juOf4TvWB1//NLyqkT0nxf/
3nHG39UmP6hxa43M74I3WIP5w55rMD/Zh/j7ET7AxbX+wYQPWWP8setvjfFX
4+PXoL/+Nfb89ZXQrVOl/fSy5dukGlzTnVxc/xpK9DCiR5K+hFS0N4XwlanS
/gVfnWr7/4PYT02111uNhD/TxTX/llRpj2I/n/BioqOkfxvRe1NlPSn8+1z/
NH4w1W6/Hwh91KU1/xkqz0+kr8laY0+v19qtRf86Ed15LfrXhfA7iO5KdA+i
exLdh+h+RA8g+gGiBxL9CPk7lPCRRD9O/OPXmvrW+MS1Mv8IfwLJL12L7WPZ
WmxvO9di/ziz1pwfaPrcWuxP59fiePT7Wqw/Kw37V8M0PI+IS8N8f8s07N+t
09Bee5df+zM6Dc8HniR949NwPJuaZv92xrtEF9fzVTLhy0h+JeH1aeb8wO4f
aeY8Q9M700x+XfPvIvxgGp4/HErD85fDabhe/zoN8/tWOq7vG6SjvYbpeB4R
l47r70bpdv28IHTjdLOf0Pzd003+WdM90vG8oWc6nk/0IXvx6bg+H0z2R6Zj
vj8z3azftXxWuv33eKG3pGO+Opf8ySd/S0lfeTrOxz6y7yd/g8RflY77rzD5
cyQd939fpuN+5GI67hetDCNvr3cycH3QMgP1t8/A9WEHku+UgeuPzhnofxfC
byO8awb62z0D/e2RgfHsnYHl7UPyfUm+H+EDMsx62W4vGWa9bs/PGbgeHZeB
6/nxGWb9pvmfzZC4Ov07A9d3MzJwPfsK4cczcL3XcJ3ZH9nj7TrMF0xcR/mA
dZjPmUL4tHWYT5m5DvMxswifTfJvkP19ZO/gOpM/1f4edvk1fXydyVdp+sQ6
zJecIvkzpP+XdZifPb/O5G81v7Xe/nu9s75fj/ye9eh/w/XoT/P16E/L9ZhP
a70e49Nmvcw/Qrddj/50cPnt/kH6OpN8l/WY/7ttPeYHuxPek/DehMevt9tv
obO/dHHtT816zEdelPg5+UvPBpP/tMfvDTJfCN1oA/K32SDzhRMPwtttkHyN
0O03yHzijCcb0J+OxN+F9N3h2tP+dHX903iPDSafrfGeG2R+cuK1Ac8fBmzA
/PUDG2S+cOK3QeYr0Tdig8xXzv5sA54/jCd/JhL+LOFTyZ8Z5O8rFI855O8b
pE+RvSTCkzfY+9dxUp59FN/9rn27P1N5j7rx0PRxF7f7N8XrDMn/QvLnKN7n
3fZht7eN2F6abET+5oS3JXz1Rrt/DnfKt9Hun92F/oj4z2xEfy+K/i7ij2eT
5AuFbrgJ8bhNqK/xJrTXZJPM5057c2kt/9AmtD+E5LeR/PlNdvvp44yHmXI+
79jLNLime7i45u+XKfcZhB6QKflL4R9K+EjCEzMlX+u0V7I/i+yvyMTyFmba
9dNMcG8mli+YKfO30DWZJt6ajhK+jfAdhL+XKfOx2N+daY8nNwu9N9PeDzRw
5jsX1/SXUt4LPWz+rzPt9ny74N9myn7H6S+Z2D6Ou/5o+lQm1u8Zsv9TpuSr
nf5C9i669uz634x4x80Yz96bMd59NqP9AYQ/sNnUr9Y/cDO2n2GbTfvQ/CM2
Y/3P2Iz+Z2w28bx0XhwXl2XqQ+ONsrD8jbNMeTR/kyxsf82yUH/XLMnH9bDp
boT3cvVrfb1J36Qs0781nZCF5Xkxy7RnLf9qlqyHBX8tC9v7P0h+HuHJhC8l
vCIL41tF/lZnYXsPZ8l+SOhIFo4nNVnYHmoJj5K+uiwcz7ZlYXvZnmXGVx2P
Ha59TX+Uhe3xAOn7QzbSLbLRn57Z6O89hPch/N5s9K8v6b+P8P7Z2L4GZOP8
e382+v9ANo4HA0n/oGyM3+BsnH8eJH9fzcbx6bVs05+1P7NI32zy//VsHG/m
u/xafiHhm0l/Nunfko39ryAb21s54T7CKwkPEh7ONuOnth8hvIbw2mzTfzX9
tsuv6e3Z2L/3kf0PSf9+V7+mPyL5A9k4Hh0k/BDhnxL+Gen/PBv793eEHyW8
9RYcv67dgniXLTg+D94i+13hf5Dwhwl/dAu2t6GED9si+TuhH9+C7efFLdhe
phE+fQv2lxmEv0l48hasryWu/7p+l2/B9r6C9KWQPxlUvnVkbyPZ27QF+qPa
4trT9j9D3GqRg+NPyxycL1rloD+tif/aHNR3I9G3uLS2fzvhd7n6NN6T7PVy
/dFSw3Nw/zCC/H06B+eziTlmv6DpZ3JwfTclx8xHGk/MMfsJu/6J/5Uc3H/M
JHwO4W8QnkT4EsLfIvtbc3C8rcgx+6GS4uLi2wI55n6X9j9I9RPKwf1JXQ6O
7/Vk7+0c+7ezf9qWg/vh/Tk4n3yUg/u9g1S+Q4R/TvJHcnB/9wvRVi7uD6/O
RX+bEN6U8Ga5Zj+u49MiF/dXrXMx33At4deRfNtcEw9NtyP+G3Jx/39jLsav
Qy7GtxPhtxA+IRfzLZty8X7X5lzMj2S55dH+bc3F+4HluSYfpfEKV7+mK3Mx
X+Un+QDhR3Ix3/dlrslPaX3fkL1jxP9DLuarjufS/VHiP034GYmXc//pF1ef
tvc7yVt56H+DPLTvyTP8Wv6qPLTXKA/zidcQ3ozwNoRfl2fypVr/DXnmfpbd
PvIwn9qR/LslD8vTg/C788x5vtb/KOkfmofn/UtJ3wbStzEP72NsysN45+XB
/ei4IuIvJvul5N9Wsuel+JSRfDn5X0V4dR7muyN5mF+vycP70lGi68n/bYTv
zIP75nHvEL6L5D8gfB/RH5J/J6l8Z8neeeKPy4f793GN8hFv5tIab0X8bfPx
fOH6fDzP6JCP90E65sN7k7jOLq3xPxH/7UTfkY/nMXcS3pX0dXNxba8H0b3z
bT7nvOKefHwv05f030f2B7q01vdQPp5PDcnH9ywPE/4o4UMJH5aP52vD8/H8
ZnQ+3g8cQ/qeJn3jSX4C1dezZG9SPp73TCb90yjeieTPdIrnQsLfyof3NXGr
yd+N+Xi/cpOrT/NvzsfzzyxX/tL6pjg/H88TC4nfm4/nj2Vkr4L897m4tu8n
+UC+Of+111OkL0Tlqyb/wvnm/FbL78q3+29nwd/Nx/Pbk/l4Hn0qH8+jT+fj
e7XXCgz/pXq7bnaB0aftvVGA+uYV0Pu6Arx/mlyA91WXEr6sAMu/ogDLk1KA
/q4qMPGw2wPpW0P8qQUYj7UFGM+0Aqzv9AKM/2byL4vkswuw/rcUYHvPKcD+
Ukz6gwXYX6oIry7A8aSG9NUT/nYBvrfbRvgO0v9eAfb33cS/p8D0Rx3vvQXY
v/5TgOe1HxXgeHCA9B8swP78MeGfuPIaP1mA4/G5AryP+WsBjr/nC3B99FuB
OU+312sFuB5pUYjrp5aFKH8t4W0Kcf3WthDWF+qOQjxPvZPkexbie4S+hVKP
zvxB+GOFZv+h7SUUmv2OppMLcb+zpBD3N8uJfwXhKYW4f1pF+lYX4v4ntRD3
X+kkv47w/xRifvaAq1/7c6gQ9++fFOL+8otCzGd8WYj71W8K6TzBldf71x8L
Mb97qhD3/6cJP1OI+9efCjG/8V/Cz5F/F8i/i4WYj+hXhPmm/kUoP7II8zGj
itDfcUWYT3i6CPNdqgjzgfOLMN/2ZhHmcxYRvrTI5Ou0/FuELyuS+y2S71pe
hPnCVUWY308vMvk5rS/D9VfT+UXSP0VfAclHSL6mCPPJUSrPNvJnO+H/JPl3
ijB/uKsI88HvFmH+7N9UH3upvj4gfF8R5j/3E/4f0n9NMeYTmxZjfJoVY3ya
F5t8pPa3ZTG2r9bFmK9sT3hHwrsWY3m6Fct+R/AeLm6vj0m+L8n3J3wQyT9M
+NBirI+/UXlHEv5ssexnhH6uGPPFS1zcbs/F2D/SirE9e4tl/Be6jPz72MXt
8Yvw74vt+v6n0MeKZX8l/CcpnmeLZb8m9E9U/w1L5P6R0H8oMbidbypB/ptL
UP+dxN+L9PUm+ftIvp/Lr+X7l2B57y/BeMWXYHv9c4ncJxb6ryVY3iElJj6a
XlQi87vQFSXY/30lWJ8flWD9f0r050SfKMH+crIE6/OaUrlvJPzNS9HflqVY
nlalcn9W5K8rxXhdT/p6l8p9JMHvF/1Lnfi5+uz4uLh+LzzCldf4OJJ/mvRP
KLX/rgR/hvBnCZ9SKvdphU4kf6ZL+ZaJ/Ewp3zTBX5P4rBJ8Vqkd70TB/+Hi
mp5N8nNKZX0i8ovF/gtCryf5Da68nV8k/rddWvNvK5X5XujtxP9uqawfBH+P
/Nst8R4i9PsSz+dFfk+p7EcE30v291E89pfK/kPoQ4R/4vqj9R8mfV8Q/RX5
/y3RrbaivdZbZT8h9HWEt91qt4exQrdzce1P+60Yj85b0V6XrbLeF/rWrVie
57bK/kLwyWTvRRfX/Gu3YnyzSD5H/Gsp/LlUvuBWmU+EDhEeofLXEF5L/tVt
tX/HC71jq5wPiP2vXVrvr8+Kv3Od8Z7on4n+hej/En2O6F9de5o+T/Rv5N8V
XiOvx+0mXtm/CP81Lm3PN0RfR/SNJN+R6FuIv7NL627U2yv7JcHvIfl7XVzT
fb12faU685dX8u894k+eOHFiWrxL6+8Z/Nmltf4xXjMf6Pp5yovzw9NeXK9M
dGnN/xzRCcQ/3Yv7m9eIXuHF88k1XjxPTPWa/ZqOT7oXv8+Q4TX7Tc2f6cX9
Z5YX93vZXvP+X/Nv8Zr9nfa/yGvOezRd4sXzn61ePP/xe02+WdNVXpMv1/IR
l9Z4nRfz6fWEbyd8J9H/8mJ+/z9Ef+bF/PYxL+YHTnrhey9xLcowf3NDGea3
25eZ98mav0sZ5kN7luF5wD1lmP8YQPgDZZgvGVyG/j5Yhv7+tcy8J7Dbaxnm
iyaVYT4ooQzzN5PL4PtHcVPLMD//Yhnms14uw/zLK1TeV8swfzST/PkH+bOo
zOTX7Pmc5JPLMH+3tMzkC+31ehm+v1lWhvnhFWWYf0wpw/zfesI3kr1NxL/Z
5df2swjPLsN8oK8M84cBaT/TnPwe8VeVYT4yIvF4WextK8P88A4X1/yHxF6q
0MekvYSFPlGG76FOE36G8J/K8L3fz2XmPZj+HJynHN47qYbl8J5LXVVu3nPp
z8s1Kbf11AveplzW80J3QNy6jfDe5dL+xf69hMdoez8v7+n6i/2bbVrFaLu/
OP3P1afp+HLpHyI/sFzao8gPdHFtfxDi1mPl+D5zQrnkb2z+pAkuruWfQ31J
z5O+SeiPSnBxLT+Z/J1P9pPK4f1lUoy2+6PgCwlfhP4lLRZ7ZwVfQfpTXFz7
l4LxV7nl+J4xj+on38V1eQpIvhDxpEi5jE+C15TD+1NVS3idi2v9/3TLq+3v
K4f3l+pDwvdL+2on+H5qLx8T/jG1r0Murv0/JO3b6mWPW4fLZX4R/DOKz+fU
fr8j/Kgrr+lzhP9aLuO3yP9K8bko5b1d+P9H9dugAus/Rl9eXuv/KqA/JsVo
aI9XVmD7uLIC+0/DCmiPKkZfHj91fQX0b+tGxK0OiKtuLq71967A9tEb7Vn3
kL9/JvsxGtrjAxUmnlr/XyownsNc/RofjvHzjKDyjqLyPE7xfQZpNanCtB/9
K4HwFwmfVSH3GUT/G4TPq4D3w2qei2t/15I/aRXQP1RaBfQHlU78GYhb66g9
rKuA/uFZT/4Vu/7p9rWjwrxv1vS7FfC+WL2HuGd3BXyPQH1QgfPVPpS3PkTc
+rgCzzMPkfwnFbB+UN9W4HrguwqYn1WMvny+V8crYL2jfnRx7f+JClyPnKyA
9YE66drT8ThVgd/LOU346QqzntP0hQpcj16sgPNodZHwK3wG1/Ix2ln/aX+v
9KH9OB+uV6/ymfWnlm/kw/esLXxmfa3xG33w/cGkDj44f1M3++D7hkndfHje
1t0H52uqhw/PB+9GfVZPl1+XZ6AP9ksqRmu+esEHk72HffB9QM8jLr/+/ajP
7K80PsoH9/XUKJ95z6jxx314P/AJn3mvqPHRPriPp0aT/BiUV2NI/kmUt/7u
g/2c+rvrn+Yf6/qv8Rh9+fmfesqH55PjfHD+pyZSPJ9xcV1/zyFuPe+D+38q
Rl++X1WTELcSfXBfUSVSfKZTPF6m+L9C8Zjpw/uRr0l9OvcjZ/vgPFLNxnhY
r/vgvFO9Tv7P8eH92MU+OG9Ui137Oj7LfXjfc4UPzhvVStK3ivQVIr+11Qfn
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
a/mn67D/P0325taZ+2b/DyTKGHo=
        "]]}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 16.43277777777778},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->300,
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 8061.5}, {16.43277777777778, 22.08}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.908771767020362*^9, 3.9087717991410604`*^9}, 
   3.9087718415995717`*^9, {3.9087718745754094`*^9, 3.9087718944372945`*^9}, 
   3.908771978688693*^9, 3.908772019330536*^9, 3.908774591835578*^9, 
   3.9087793415736065`*^9, 3.9087850420352945`*^9, 3.908849106102518*^9, 
   3.908871286994834*^9},
 CellLabel->"Out[474]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sparseData", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"roomTempsN", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"0", "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noisyData", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"roomTempsN", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"0", "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.908786578985098*^9, 3.9087865790948305`*^9}, {
  3.908849165795537*^9, 3.908849165902567*^9}},
 CellLabel->"In[461]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinMax", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "sparseData", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.908785402080742*^9, 3.9087854185730243`*^9}},
 CellLabel->"In[450]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17", ",", "7046.516666666666`"}], "}"}]], "Output",
 CellChangeTimes->{{3.908785410452533*^9, 3.9087854193154216`*^9}, 
   3.90878566206493*^9, 3.9088491130717497`*^9},
 CellLabel->"Out[450]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"startDay", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endDay", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smoothedSparseData", "=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Interpolation", "[", 
              RowBox[{"sparseData", ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[", 
             "x", "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{"x", "->", "#"}], "}"}]}]}], "}"}], "&"}], ",", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"startDay", "-", "0.1"}], ")"}], " ", "24", " ", "60"}], 
          " ", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"endDay", "+", "0.1"}], ")"}], " ", "24", " ", "60"}], 
          ",", "10"}], "]"}]}], "]"}], "]"}], ",", "20"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"smoothedNoisyData", "=", 
   RowBox[{"MovingAverage", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"noisyData", ",", 
       RowBox[{
        RowBox[{"Between", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"startDay", "-", "0.1"}], ")"}], " ", "24", " ", "60"}],
             " ", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"endDay", "+", "0.1"}], ")"}], " ", "24", " ", "60"}]}],
            "}"}]}], "]"}], "&"}]}], "]"}], ",", "20"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "sparseData", ",", "\[IndentingNewLine]", "smoothedSparseData", ",", 
     "\[IndentingNewLine]", "noisyData", ",", "\[IndentingNewLine]", 
     "smoothedNoisyData"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thin", ",", "Black"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thin", ",", "Black"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"startDay", " ", "24", " ", "60"}], " ", ",", 
        RowBox[{"endDay", " ", "24", " ", "60"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"16", ",", "24"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "0.25"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9087740648939824`*^9, 3.9087740967064805`*^9}, 
   3.9087741365419674`*^9, {3.908774328059225*^9, 3.908774464776329*^9}, {
   3.9087746830727177`*^9, 3.9087747392559195`*^9}, {3.908779460145989*^9, 
   3.9087794708050423`*^9}, {3.908785281035816*^9, 3.9087853298501186`*^9}, 
   3.908785646305833*^9, {3.908785709316126*^9, 3.9087858856130652`*^9}, {
   3.9087859441896973`*^9, 3.9087860799282713`*^9}, {3.908786110751291*^9, 
   3.9087861480136566`*^9}, {3.908786313157825*^9, 3.9087864288037786`*^9}, {
   3.9087865483214455`*^9, 3.908786557005444*^9}, {3.9087865889006567`*^9, 
   3.908786918308021*^9}, {3.9087872435981083`*^9, 3.9087872505305433`*^9}, {
   3.9087872886756153`*^9, 3.9087874391109643`*^9}, {3.9088491196464453`*^9, 
   3.908849119709447*^9}, {3.908871291329076*^9, 3.9088712914293413`*^9}},
 CellLabel->"In[480]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0], PointSize[0.003666666666666667], Thickness[Tiny], 
     LineBox[CompressedData["
1:eJxd1V9IU2EYx/FTDIouDBlBRmGNNEOzmrqCJE6xiyCREIu8kMBwdCMZXQhh
MVNjdhGzOdPIOZO00iamhjGYVtBNM0oqupkhhQSBF1lmfy7ynPOyw/N9YIzP
fs/7vGc7L2c7as5X1K7VNG1k9WW8e41y7Nc1s0qsd/209L6L0m9sm+vrr8jc
D3fB9227jAo26TPJ1Sortj4ftm3m08hXrkp7m6VbmuV+71qlP7bqPqMWVH/p
NWl/W9rm/seup51p1EC77I+1y/7GkF5klurvDMnrK++QPgFX2jbXB5HfRB5B
fhd+CCew/jn8Ff3f4Yxw2ub93xqW+U44Nyzn5yEvgAthN1wMH4RL4cPwUdgL
l+F6y5FXwqdgX7d+u9uoImv9hjtpW/v3SL/ukfv9i6hzqOZ19abdFggE1ldE
rf6kcp1tsy8etc7fmPKrqNpPeV2fdGOfXN/bJ+fHkWf3S+f0y/58uB79y3Di
nvRbeBbOHJDzN8Fb4O0Dcr0LeS7yXXA+XADvxTw37EH/AdgL5w2q8+Cx3DAo
80uDcr5zSOYf4BT8CX42LJ2EZ+F5eAH+/Mg6X1nKX2yb17uE/Af8E16Gf8Er
8G/4D/wXXhOTzoA3wk44C86GXXAOnGt7LpVKVXuQH7Jt/s/otk8adQT9VTH5
e1cjPwPXoL8W+Tn4AtwA34BD+H63kEew/wPkQ/A4PIn1cXgK/dPwC/gl/B6e
gxdHrPviU8/zs6PS86PqeexW8x8L+xfHZL57XLpkQrpK2l8Hd9g2/p5bOrE+
ijyGPPhEzpuQ1mbg45PS3+AlWHsq7bBtnI9tm+Ny/z1wIXw5Lr6Po0nmmjOh
7odb/w8VCMjQ
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.003666666666666667], Thickness[Large], 
     LineBox[CompressedData["
1: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
4/3wTBw5fSgO73+B+VYcDar+8jGL75efx5H394Jd33k/bYijW7GhzUuvMmvF
U4/SlYqPPGa9eLIPNfo0tJB5VDxFVv9ceZJ7Zjzd+LXhY7YHbwTvA0eCJeDz
4LvgGvAPsHaCqvuDjcFzwSvAW8AHwQJwJvgyuAL8BtwsUdU64EHgCeB5YEew
J/gIOB58EnwN/AhcB1ZPUnU38BDwZLA12BnsBQ5MokfaIq9ivp9MTiLNPrU2
3iW8/pPIvFGwuOo2r/8kyojL21dXwes/iQzaTa+QVfH6T6LzM8ZZ9+Lnm5bJ
5D4rusHkM6//ZJrUZU1BSzV2fjZKpgFSxYDazNOTf4+nx7womWYqhjs0gnl9
MqW3DHO/PJ15TzJpvOi+vq8Vc2gy2ZQ8a528hDk1mYSX31vMWsZ8BnwrmeL+
38/BDckU///WEqlaT0SBuzvHzljKPEpETq43L4by+WeKqFeo7vmRNsz2Isp/
3zSs3zzmjSKasnfbFMeZzPtEJJ65t+AzMUeK6JupXp+KkcwSEQ3ZvsC6zUDm
8yKa/qzH8oBuzHfZeC2Za0TUz2Z1o98XXv8iOndA/5glP69op5CTOF76gZ83
+qdQpwv32m3k+TdOgfoHrwBvAR8EC8CZ4MvgCvAbcLNjUP/gQeAJ4HlgR7An
+Ag4HnwSfA38CFwHVk+F+gcPAU8GW4OdwV7gQHAyOBd8A1wF/gRumabqv8FG
4OngReD14D3gUHAq+Az4Fvg5uAGsJVa1HniUmNxkyyrn/On/Ysp6UCDoyvcL
9mKKnNus1T98P7FRTL1atOsbcJn3fzGZqr+vHs/3J5Fi0pqdtGR4Pu//YtpS
brDDne9/zovJK23/jCZ8P3ZXTPqXss7d5c/LahTvp9+pF5/5/u+HmBYX+uU6
8P2kdjq9yBlu3C2c13865dslbu17lNd/OoU27ZQ1ZB+v/3RySfKtG7OT1386
TTX7NHSKO6//dOpR67huzlpe/+lU51+WupDvpwXpdG3EjJfLbXn9p5OwPLuf
Cz+vX06n22EhFvV8f16RTk7tYhWnRV7/6WQz+U6sPj9fN5NQquGYiyVGvP4l
tOhWwbih/Dw9SEKdHgzNfKPP619CBz51L83l54V5EsrofUgQxM/TjhLyt9vd
0aMLr38J9U/9MmJtB17/EnJvUf9zjRavfwlt3awITV7/EvL1UQQ/X1+T0Osa
Rfxg55lHEjqWoogvzHUSOnNaEe+Z1aVkMEgRNczdpPS2VhH8fD1EShqairjH
PFlKlWKP6R1KmK2ldNKiZm/PAmZnKR3+uOic/hlmLymtDL/+Yxg/zwVKabwy
+HkvWUrajxUD8vNgrpRMyt1aJfHz4w3FdY/KaeJA5iopHVE+7/Rj/iSlE8rw
Yf4rg/aY96jO8mJum0FfAg0uL/Vg7ppBXXb9NyvTnblPBj3uYOqZ7spsmEEW
lopYxzw6g5xHq92McWaelEGK0b4GrmaelUGhjQ7X/nFiXpBBxx62m7rVkXlp
xu/nd9xrwJvAO8H7wQHgKHASWArOAV8AF4HLwE/Ar8D14J9gTRkta3VyWSvu
DjIyb0g0b1jJ3FNGw5XhwKwvo9YnlXcwD5NR+R7D8j12zONkFKl8/GDLPE1G
FsrxrJjNZaRkojmzLft5M2YHGQ1RDjiZeZ2MTimnG8e8lb2f4czeMkpSDjeI
2U9GOz44V9n2Zg6R0fyw+7oruzDHymjQuNl269syH5NRk8q8yG3qzMdlVKZc
T6PRb5+WkbS/oNPhj8wFMvK9pjU/7BXzTRk5XB0a+r2K+b6MZnnJnnW+z/yf
jCZUB02oLmV+KyPlvwtci5i/yn4/zy9gbp5Jdut3+cedZ26TScrhZp1h7pxJ
qcrIZe6dSVW2N2ecPcU8OJP65dvU+WUxj8ykTRUkanOCeWImFaX96zTtOLNZ
5u/fJ/d8sB3YCewG3g72BR8FR4ATwOngU+Bz4OvgO+BKcDX4A7gR3OK4qtuD
u4P7gYeCx4KngOeAF4KXg9eCN4N3gf8FB4FjwCKwDCwHXwIXg++Bn4JrwZ/B
TU+ouhW4E1gXPBA8HGwCNgVbgheDV4E3gD3Ae8GHwWHgOHAaOAucD74KLgU/
BL8Avwd/A/+Vpeq24K7gPmBD8GjwJPAs8ALwUvAa8CbwTvB+cAA4CpwEloJz
wBfAReAy8BPwK3A9+CdY86SqO4B7gvXBw8DjwNPA5mBbsAN4HXgr2BvsBw4B
x4KPgY+DT4MLwDfB98H/gd+Cv4Kbn1J1G3BncG/wYPBI8ESwGXg+2A7sBHYD
bwf7go+CI8AJ4HTwKfA58HXwHXAluBr8AdwIbpEN/R/cHdwPPBQ8FjwFPAe8
ELwcvBa8GbwL/C84CBwDFoFlYDn4ErgYfA/8FFwL/gxumgP9H9wJrAseCB4O
NgGbgi3Bi8GrwBvAHuC94MPgMHAcOA2cBc4HXwWXgh+CX4Dfg7+B/8qF/g/u
Cu4DNgSPBk8CzwIvAC8FrwFvAu8E7wcHgKPASWApOAd8AVwELgM/Ab8C14N/
gjXl0P/BPcH6chqbY3xu8J/+L6evRwLsO/3p/3LadGJ0q3eZvP/LSTTQsEDO
bS6nkDdugdu4beU0obn6uv7cDnISOlVbX5Lx/i8nefceFgu4t8rJX1dgczeD
93859d60wXUGt5+cnHX8w9KkvP/LaZ1mkxs/Jbz/y2nw7PwO07iPySnhUdHq
7em8/8vpztnBRfFi3v/ldLaunORpvP/Lycn9zoWLqbz/y+nytN7W+cd4/5dT
pWPe59QU3v/ldLwsOWW/iPd/ORlr36tYksz7v2L82a3aGCXx/p9HZvtNJrZI
5P0/j4rPbXB7EM/7fx4t/B6XIIvj/T+PKkfdvrNPyPt/Hjm6qWssieX9P49q
08YYDxPw/p9Hm587u6jH8P6fR997xQjuRxnR/wDEuiKz
      "]]}, 
    {GrayLevel[0], PointSize[0.003666666666666667], Thickness[Tiny], 
     LineBox[CompressedData["
1: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
+HiBu39W+h0Kcb/fqdDlFe5cqONhg+AehZj/exIfX4j73YRCPP/pR/JDC3H/
OrbQ3U8rPLEQ9xuzDa/8n0P8POJt4pOJTyvE+W5pIc5f6YXu+Yfu70Lcz6wm
PqsQ57tgIc53nxbi/HaoEM9/viH+CPFHC3H+OlaI88PpQvf8Quf3Qnf9ovCF
RWi/QxHGy5VFOF9dXYTz1Q3E9yT9+CKcH/sU4fydQOUPKsL6DS3C85phRXje
P7II6zOmCOs7rQjPl2YXuf2l+ESpT6OzHxL/94j8HKnf5048FWE8fFqE8fIZ
6e8pwv7/ivQPFWG8/LsIx8dR8v9MEZ6f/UL82SJc78QXY3v2Kcb2HEP8WOLH
FWN/jS/GeHuA9CeS/sPETy7G9doU4qcWYzzMLNafTr6aV4zjZz7Jv0l8VrGb
z3T+LHb7U6+HimU/LnhHse6fq+T8Yl+xzqdDBmh+v+hfI/y/Da/w8WI87zlZ
jOdNN5TgeVSPEv3pnB8NKMH7iJdK0N6cEjyPmkd8HmFvCZYfMOXp+bfEPb9X
/99d4p4vKv7HEvc8X/FnSjB/9ip1+SVpaWkX3lKK+fvWUjwPii+V9WJ/Lf8n
4ocQfxvxw0rRn3Glrv9K/n7iHyzF+j1ciuenj5D8ZJJ/jPi/Ej+11D0vU+VP
K8Xz1emleH72lKmPkn+G5GcRfrnUvY86dz5564JS9z5K6b9Riud7S0rxvmpZ
qXt/pOTTiV9ZivdNFWQ/aPQVHyL91lI8j9xSiueLW4n/RPQHCv601I1H9bmH
2vc4tf9vJr6Uf+eVIR9XhvHXvgzlLyL5i8vwPPOWMuyvW8uwvxLKsH9uL8P7
wtFlOH7vL3PvB5X+Q2V4HzetTPKT4CeJf5b4GcQ/V4b3h6ll2J9pxC8rc+8H
lT/Ly/C+ssRgxZdRed4yWc8J9hFfbnilXy313+DED+nHCK8nf1rL3PtOZe8f
0h8fOveZTv8K3lkm863gD8pk/yj4Q7K/i+x9Su31mbTnx1L+59J+O4T/guS/
pPL2UP32Ufn7if/a2FPlHS/D+9wTZXj/+yuVf5b6v7NX9gOC+3tx/A7wovxd
XrQ31ov+PuhFfyd55X7Nya9e7O9HiH+c+Ce8erwEnPsGr9sfOj+SP3O82P5z
vdhe86R+jcK/5nX7T+E3RP6Y4DepPNvrxpPCSVR+slfWb4JTvDJfCV5E/GLx
5yfBa6T+7QZqnO/FeCmQ+nUSvtAr+0Xxp9yrx9s+J1+TvUpjT48/4mupvDrp
zwuED0l/Hxb9BvKn0fAKrzO8km/24njc7JX9q+jvlPbqL/gD0v9E9HsL/4X0
z6WC9xN/kPj/80p+Fvxv4r+l+n4n8ddT8PemvRU+Ju3dXfhT1J7/IXu/UX07
+jA+OvnQn84+bN9rib/eh+XdRLg32Y8nfY/PbQ8lN8GH/j3tc+NTtf8Mn9xH
CT/Th/H7N5+sj4V/zqfz7Rnh/07888TP8mH8zjb1UeUnUv1epvaZQ/qvir97
nHzgw/Eyz4fj8TWq73xqvzd8OB+8SfV/i+zZpJ9EvN+H4y3gc+cnVf5akc8V
3OTD+bTVh++LNhK/1Sd+CN7mw3z7vuGV/R3SXoXOfCnt9YYz//nwPvozsv8F
8d8I76zfTvrc9ZEq7xcn3gT/6sP1/Fkfrgfb+XF/dZlf+lPWb9f6cX8w0I/7
6UF+d3+v+MF+9/5Z4WHE3+d39/96/+DH/fhUv3u/o+cjP+63n/W75w2Kn+13
348oPJf4FD/ujxf5pX0Fr/Hjfjvfj/vtIj/ul0v8eB5S6sf7qDI/3lc1+vE9
Y7Mfzwujfjy/2Ub+vEf85+K/857yOz/e1x3143unU368j/7Zj+ed55fje8MO
5ajfsRzv97sQ35X0byzH96I3kX7PcvS/l+FVfw0Q3rmPGFju3tcr/l7ix5H9
8eXufYeSn1Duto/CE4l/mMqfXI73JY9ReX8tx/Z+nOSnkr0niJ9G/jxJ/qwo
d+9fFM4ox/uczHL3vkfhbOJzy/E+poD4wnK836kox/vtunKZPwRHDK/8WUd8
C+mvJ7yF5N8vx/udHeX4fvYjwrsJf1qO728/K5d8JP7tL3fvxxR/wPAKXxZA
+a6Erw2g/A0B9LcH4ZsCeH/VMyDrX8E3E+5NOJ7wnwknBCRfin/9CA8K4P3V
YMJDAtgftwX0p/P+4Y4A3qeMCGB8jCI8RvSd8TAhgO9pHgy4/a38mxRw72MU
/1DAjU89/gLu+xjFTw/g+6OnA/g+5xkqb0YA89nMAN7XPBfA/PQS6c8h+6+S
v/OMPeXv60Ze718CmJ8WBzA/pEt7Ofkug/jsgPu+SuE8kl9D8gUBzOeFRl+f
HwRwvPuofauovYIBvH/+guQPBjDf/G8A3wMdMbyefytkfyl4PuHUCrw/Xmp4
hVcQv6pC5ncn3xGfQ/yaCvf+UJWXX4HjoahC1n+CS4gvI95boeNhjWAf8eUV
eJ9cXYH3zTUVmB9qK/D+s5H4JuKPS30XCb6x0r1PVfiWSlnfaGzHV8p6xXlP
ZeRVe/StRHv9SH4A8bdTeQsr8X55fSXe/75reH1+VIn3yRsqJV6d+/NKua8S
+c2VeB+9jcrbXunedyv8fqXcB4h++ypXX+EuVajftUr2l4KvqtKfHsFXE39d
lYx3sded5P9YJePTyffE96qS/ZnTX2T/T8a+7i+S/zPxCVUyPp35oArrP6RK
8pfIjzO8wn+pkvEueHwV9sf9xD9Yhf0xifiHiX/E+KfwmirJR874qXLjRfkb
IP0KY1/xleRfFbVPDfHvVGE8rqf+31KF42FnFYwf6/MqzEd7qzDf7KuS+3nB
+6vwvcJXVe57BWX/xypcT/xM/C/EXxHEfNQ9iOuvvkGcXwcFUX9wEN873BbE
+X048XeS/t1BXD9NCuL88HgQ548niJ9G/Myg+15K+ftiEL9/NDeI+615Qdyv
vRbE/dbrQdxfvRXE/ZcdxO8PpATx+wVpxC8hfinxK4O4/1wdpPcGVH428WVB
vF/2Eu8jvpL4KuKria8N4nuIOuJDpL+W6tNI/DrSf5v49cS3Er81iN/XeC+I
70m+DOL5wIEgnk8cCrrnDQp/HcT7oMNBvA/6Poj3QT8QfzyI90snJd4fEXtX
VLtY8ddX43n9yGq8z5tajfcBT1Tjfd3z1Xh+Pasaz/tfqMb7ksRqPF96hfjF
1e75ll4/VeN5+4pqPG9Pp/IzqvE+ZQ3p55P+pmo8r99G+u8Tv7Maz+M+JHsf
VeP54e5qPO/9ZzWeJ35M/KeE9xL+H8IHTXnK30PEH63G89Fj5N9xkj9J/CnS
P03l/Uz6v5D+WdL/jXirxuX1fWsNtk+7GrR/SQ3qX16D9q8i/poaPK/tVeOe
t+vzvRo9390t57+DavB8egjxd9Tgef6IGhmPgkfW4P3B3cRPMfb0eUiNrKec
8/Ia/ekR/m/kz3Nk/wXST6TyXiT5+TVyPid4geH1fb/h9f0U2Usmeyk1Mt+J
/KIavH9JrZH1ruC0GtlfCl5m9BXOIz6f+BLjjz6fMf2hcJT66x+EN0k83CF4
i7TvFMFbTfurz23E7yC8m/ABwt8QjqvF+lxQK+9Bxf8utZI/he9bK/lRcL9a
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
NkL8263Eb2jE+Wcj+beJ/D9C9fuuEeeLNgzj96jxV31+34j58T+Ncr/QV+Nf
RN4S+7+a+il8tlHWW6JvNWE+OK8J3y9e2eTaU/JXi/xBXZ51c5N8X1NwryZ5
/yT+3N0k97mCx4r9rSJ/n9jzCX+flNcqeBzy1kTiZzfJfkT4lYRzmuT7ZyKf
1yT5pa+c16K83YZ1vAsubJL1jMh7ifcSX2F4FY/Vhlf+1JF+HfJ2qEn2O4LD
TTI+RT9C8o1kvxnl7Wb0L2VTk6wPRX4z+f8e6bdhvf4S+Z2Ed0v//l3090r/
jxX9vYZXeJ/Ey0zR30/y+8n+AfH3fuEPkH/nrYP2tC5aJ+NV+Dbs9LfCHdfJ
fCTynUj/4nVY3qXrZLwK33md7D+lvpetk/ckgi+n8tqwno9Ev/s62Y8KvmGd
3E9K/8Svk9/7EP3+xA8ifrDhlb0hyFt3IG8Px/axRqB/9t3Ejyb+HuLHrsP+
G0vl39eM+FCzfP9W8OFmyWeCvyV8rFnyW4K2/4Pw+zS2jjdLPpPyjxN/gvDZ
Zv3ZmqDb8yzxVtTllb02rPefwp8Xlfwm/Pkob8VFwZ7dhvX7ZuEvIP4C0v9d
VN6/CW6P+nZ74i+Kyv2m8Bchb3eIyn2qyHdEeasT8valZO8K9NfqQvpdSb8r
8VcS34b1/aLg66Ky/xZ8fVTe1wq+AXmrB+m3YX3fLfimqF6/nJb+vZnaoxf1
5y1R+f63xM8t1D+3RiFe7d7S/x1kvA+OYr4ZHsXx6Ili/N9J/EjDK39HRd3x
pPDdpD86ivlgDPH3RjE/jo2640l/HzmK8899Ucx390t7jBP8UBTGt/UE2X86
6uZr1R7PRN38rvCLqG+/GMX561XyZ24U5795yFuvob6VJPHwipSXHsX5Jhvr
Y+WgfSuX6p+L+lYx8cVRWE9YJVFYT6RURWF+s4PU39VRnN9qjH2lX4Pta4VQ
3g5F3Xys6huO4nwTxvLsSBTnm7XEr6X+q6f6rovi/N5M8bCZ6ruZ2vsLqs+X
pv1Vfb8kewfJ3kFqv6+xPvbXUZxfD5P+YbJ/lOLpBMXnCbRn/0T6J8mfU+TP
z+TPGeqfM9Qf57egfFwLro/at2B7Xkh8B+I7tuD4acPOekXhK5C3urRgfLVh
GF9dqbwrqbyrWnC8XYPydrcWiJ+UP7RgvPeg8m9qwXjp2YLjuxfydq8WjN/e
hlc43vDK7z+T/YQWtz+U/J0tmI/ubIF4jRvT4o5/nX9R3rq3BfcfY1vkfFfs
/QXLSxnfIvc9gh/A9rQmtMB63Z6A7Rk3kfrrIWqPaS1y3yL606g/p5vyFX6a
+vM54me1QH5PScT6WW+RfZvqbxOfRPYXU/1XUfusIv0s0z6Kz6L2yUX7dn4L
jr8C7C87QHwF8dUtMJ6tGrJfQ/7XEl+L9u06ar8QjZ8Q8WHyJ0z2IiS/ltqr
mfqjhfoz1oL743dbcD/7Po7fuF0SbwlibxeOv5SPWuQ8SfjdxP8TeWuf5Ktu
Ir/P8Kq8A8hbx1rc9Z6SP0b8iRbcP1wYw/VgxxjynWK43r0Y5a1LYrievcTw
yr/Oxp6qX2fSvywG/lpdyV4b1u9DE9T74t9fbbCyd03MXe8q3I347mSvN5Uf
H9Ofzv4mHutr/4nq34fai7CVQPoJaN/qR/L9Y7if6U/2B8Rw/zCQ7A8i+4Nj
ch4l/FCq3+3UP8MMr/BwY1+133Djn87v5P+96L81g/pjRszdnyj7f4/h/uRF
qu9LFC9zYxj/r8Uw/l+P4fz3BmLrrRiur+0Y5Me4pBjOJwtj7vmcKj8tJt/H
EH5ZTL4PLPqVxDfGMH83xeT7J8I3YXnW2+Tf9hjOnzti7nyv+B1Uv50xXN+0
YViPfBjD9cSHMVzf7Yrh/uQj4jutx+8HX7Jefzr34Z3Xw++D2G0Y7se7rMf7
6q7r3fvu/wc7sBVx
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[0.003666666666666667], Thickness[Large], 
     LineBox[CompressedData["
1:eJxdXXd8k9XXh4qgyBIQsAxZUhAKzWILp6AMsSBTaNl771mGtBRaVhld0Jmm
TdqkbZq0SdokChQRRCnIUgEHiEoFWbJ+guL73Ps9Jh/f/MPncO9znzvO+Z55
n7aZvmTUrIBq1ao1qlWtmvj300cdJ+55Po4Cu33fvmaohp4o5NH7E6nV1lsj
y/tpKDSv7srLC6dR2yt/bprfl+mpM2lag/G9HD01dIWU/8icQ9rJnqF11BpS
Winv7Hx6u/Y3OUuDNaL1MtVaTKFTf/mqbWcN9V6kP19Tv5SCVC8VtnhLQwrV
e1Hf5dRoy5Evst9k+tsVFDZdeUF7DdUSD6xeRfnHh/XY3oafb7iGdqUsbril
NdOpa0muo62GBNk7KJLUyvDhyvNfzXsho7tzPUUnDdy5MIjpgRvJ8fnqQ1nK
+y8or9Of2UT7bm/or+uqIaX1q3ntN5Mym3ddGg2VKxtxNn4z+vdm+tFm+mC3
MoGBGhLblPl6FNmWz913+31ufzuKPGIDx/P8pkfRfPGCWRp6Vfxio8i4VNmh
FRr64XvllxpFbtE/TkMFFuVXFEWb+usmew5q6B3xOxxFv49URi7Q0I+i/9ko
Cp/Z58cRn2joxP4pXdZVRdEJZXtCv9LQ1C5/ftbwnyjM/7qGEqZ0+fPdxtHY
30caCv7zs/0/doqmzLt5x4fV0lLx4GuRjftH0z2F7PG6loYopHVktFzHyI5a
+kkhB8+IJsEeUTotzTjZLXnDKqbf5fbYaMoV6xmtpdesyoCp0ZjPVC3mVxJN
Clc96rhQi/l9EU2Gd10P/l6pxfyuR9MB5TiPRGppimh/Hk1txYZu1GL9gVuo
tdjoTVrwh24L3eygMNAGLfhjxBa6IBhmnZbu3rlzZ/HCLfTJyoRmNVZrwYc7
t9BJ5fgClzBdsIXeF9ObpaW2ys9wYgtVPTPfPzdJS2OV38XrW+jqCOWAR2kp
Tvm9FBBDgt0/H8T928Xgfb20ON8hTHfSgv+WMP06tx+IobIHf19Y+7KW3lDW
0fNYDMWIA3qsAX0vhvRCAH9lfmq+lf43+rox7QLzT+hW8PdRlo+FW8ly/1zY
dBv3T+J2A9Mfb6XvFHH9OJH7X99KD5XX/7aN5aP2Nor8TdnADdyu2kbVLq79
rcMy5t9x26heQOfYJvM0VEPIw/ptmM9Mlp+MbdRSMOAU7n9oG+Q7gt9/dRvW
M47nXy2WGgu+GKPB+bSKpY/F+SjtH3u93j59Y2mj4PcJGuzvh7F0+pTym6jB
/i+Lpe4CX6YzvT2WZogDmash5TTfrp0TS6vEcIs1ON+PY6nppdNPRq/g8S7G
kkvs/zoNzrcqllqI+X/E7c9jwY8xPL/GccCnHUx3ipPnVB6vITH82/3jMH4C
v29MHOQmRYN1zo+jOmL/FPldL/5jUxy9s3PhjWcKLboNToijAWK/0lhe8+Oo
ZpQCUOka6iLk81Ac/WxMO9Zaz3hwMY6WiRcptDjn+rfi6LoYJ1tDnRSuWFVt
O/UQ+2NgfGm+nY5kKQeQqyFluCmFPbbTt2Kf8nj8kdupQXBJxt087j9/O9UR
67Lw+2K2UzXxszH+ZG2nHeKASzQk4Of7T7dT+rHWtuXlGhLdLXe305tiAV5e
T8sdNL6e8oLDGlojfqN20NzZyu+4ht4S892+gyYK/KqEvhlwZAcdE/x77l98
3UEbxL5dZn4K2Qm8VfBslNJhwYKdRAq7DP1dI3HxRdNO+lsR37A/uP2HnSS2
98qfPF6TXdRCAFZ1LeiwXfTRfIUDX2I6ehf4p54W/F6yi0zK9tsaamlE8ypH
9au7ID9NtOSMGt58bt3dlCi6t+T20N3Yn7ZML99NjaU+01L08OZVWuNu4Hdn
fv70bur7owIwXbn97m4S6vVjLeNPvXg6x/gi+fPNeGot8PBtxqPe8Xi+n5YE
7OYMjwcOh2pxzjPiabh4/B0tHRn/x07j8ngawfTuNw+PXx7tp6V+3h9PCvcE
dB6spfpCfxviScBLgyFaeS71XfE0SeD3+1qc38l4skt9p8X5/RhPe5XmiSO4
/6N4WqLA+RcjtdRQ8FedPZjPGKbb7SHJfuO00GeaPcBrhX5X8NvwPZQr5HEM
03P3UJ44j1FMR++hVlIB8njpe+gjgR9DtXRPyKtzDz0S5zWI9+vMHvpHITso
+yP11M09OI8+WsnvNxvspf1S/2slv5Z12UtC3Qe+oSXBDluG7KWewgCorwX+
zdxLfwl+C0D7C5v30gIBaA8hLzFpe+mwkL+fNTRfGBSuvSTgJPwC8NN1bi89
VY575adsb9zeC/xW5EuO9/I+2qXAhVmR7x4K2TJoH51S1PmD3ZDP+e/uA56s
g/3QcuY+4I2C17eEPGzaR2K7HePB/yMP7AO+DmX5KN1Hwhy60Qf48HvlPhLD
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
d4L1hu2yQf4isT9T422wh9dpaIXC34v2+vuLfFLkfj6v9aA9iTbYvwot4om1
Umywbzbg+zzagzbEj9cj/zk1zQb/fCPy8bszbPAX1uN7Gp4sm+9+hICtG9k2
xKuU+YhtapRrQ3x/Hfr3NjF/r0X8JjDfBjxYg3jGbbMN9u06xC+OF/jbZZi+
yOa7DyHozcXMf2sxv0V2G/T7Wjw/qNSGesm1fP/baQMu8PuKXDb4V6sxv8By
5t/VPL6bz28F+u/22GC/r+T98Npgvy3j/h/b2B7G+ld8YkO902KmD9ng7/H3
RzYftvH3bni8Izbg4QLMJ7WCz2MB+l89aoO/NR/xmsBjNsTfF3D85jMb7LV5
4Ifdx23I784HffsE7/9cjuec9PcX/nTslzbopznoH1bpb5f5jzM26Nc5/PxX
/na5/+dsyA/P4f28YEO9I7dXXrTh+yr/0t/YpB12itdfeckGf3YJ01dsqOdc
jPmd+N6GfM1Sjl/9aIN/s4zjk9dsvnoOgRfZ122ot1gOfAv/xYb8L9/fCr5h
g75U+g9U7KuHVTbW76hP8dz084NY/5jfbbA/17H83bbBTl+L+paVd2zwj9ZD
fmPv2lBPEInxUu8p8ijU0QbIc9F9Pu/1uJ9R/YEN/sVG1CeMeWjj+4mgHY9s
/7lve+Gx/3lBP3zil3/xvsA/FXlkeRYT7v3U31+0hz+zod58A553/OXHA3H+
dZ/bOH7O6/3HBv+Y229Xs/tosd9RAXbws0KLOoDAGnbEmyOhbxwv2vn7Sxqp
HyNq2VHfshbn8/QlO/KQq4C/2bXt8FeV/Zd2VB078HYl2qvXsyMesQr4ur6+
HfpiOfDX8aod+ablwOtaje3A2yXA+8VN7L77yDIe1Mzu+z6Q6J/X3E/L8VvZ
sb/z0T+yjR31PvMxn9D2duDLHJ5fkB3+0lzWJ53s8Hdm83q62BEvnIn1B3az
437KDNZnKjv00ww+X62dAoX+mA7+f9jDjnzDNOD709526PfpXM/Tzw77dCrw
PijU7rt/L/H+HbuvfknIz5zBdviTk/l8h9oRz5nE+vp9O/iR6RPD7fDPJkF/
tRlph301ib/nNtoO+Z2M+YWP5f3m94/5kPd3MuY3Z4IdfvAU8GdkhP99on/i
JDv042S2D6b4n5efFZtmhz08ifXNDDv8g4mMnzPtqK8Jh76KnW0Hvkbgec1c
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
      
      "]]}}, {{}, {}}},
  AspectRatio->0.25,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 16.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->1000,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7200}, {16, 24}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9087740842634616`*^9, 3.908774097085869*^9}, 
   3.908774136920537*^9, {3.9087743328397493`*^9, 3.9087743723497653`*^9}, {
   3.908774411021951*^9, 3.908774465466457*^9}, 3.908774601812428*^9, 
   3.908774714959228*^9, 3.908779449701268*^9, 3.9087850625507636`*^9, 
   3.9087853326388283`*^9, {3.9087857098049192`*^9, 3.908785760099589*^9}, {
   3.908785815992267*^9, 3.9087858862520547`*^9}, {3.908785945143448*^9, 
   3.908786080667395*^9}, {3.9087861119378557`*^9, 3.908786148556344*^9}, {
   3.908786314586275*^9, 3.9087864299572563`*^9}, {3.908786557461378*^9, 
   3.9087865811176376`*^9}, {3.90878661153012*^9, 3.9087866308108435`*^9}, {
   3.908786673538663*^9, 3.9087868518154306`*^9}, 3.9087869195565224`*^9, 
   3.908787254245858*^9, {3.9087872936408186`*^9, 3.908787380762597*^9}, 
   3.9087874401715837`*^9, {3.9088491168277206`*^9, 3.9088491204444838`*^9}, 
   3.90884916826864*^9, {3.9088712893441477`*^9, 3.9088712918283267`*^9}},
 CellLabel->"Out[484]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CPUtemps", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], 
      "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"log", ",", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", "#", "]"}], ",", "\"\<CPU temp\>\""}], 
            "]"}], "&"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"4", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.908451295537328*^9, 3.9084512976921787`*^9}},
 CellLabel->"In[336]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "CPUtemps", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9084513113159285`*^9, 3.9084513224242973`*^9}},
 CellLabel->"In[200]:="],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{65., 0}, {65.5, 90.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{18.458634251151487`, 
           36.47596385012466}, {-92.78431171967773, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 90]& ,
        TagBoxNote->"90"],
       StyleBox["90", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[90, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{65.5, 0}, {66., 85.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{36.02596385012466, 
           54.04329344909783}, {-82.8507214852512, 86.47031249999998}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 85]& ,
        TagBoxNote->"85"],
       StyleBox["85", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[85, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{66., 0}, {66.5, 63.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{53.593293449097835`, 
           71.610623048071}, {-39.1429244537744, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 63]& ,
        TagBoxNote->"63"],
       StyleBox["63", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[63, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{66.5, 0}, {67., 45.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{71.16062304807102, 
           89.17795264704466}, {-3.3819996098388714`, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 45]& ,
        TagBoxNote->"45"],
       StyleBox["45", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[45, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{67., 0}, {67.5, 47.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{88.72795264704465, 
           106.74528224601784`}, {-7.355435703609487, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 47]& ,
        TagBoxNote->"47"],
       StyleBox["47", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[47, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{67.5, 0}, {68., 47.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{106.29528224601782`, 
           124.31261184499101`}, {-7.355435703609487, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 47]& ,
        TagBoxNote->"47"],
       StyleBox["47", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[47, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{68., 0}, {68.5, 34.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{123.862611844991, 141.87994144396464`}, {
           18.471898905899522`, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 34]& ,
        TagBoxNote->"34"],
       StyleBox["34", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[34, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{68.5, 0}, {69., 39.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{141.42994144396462`, 159.44727104293779`}, {
           8.538308671472976, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 39]& ,
        TagBoxNote->"39"],
       StyleBox["39", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[39, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{69., 0}, {69.5, 20.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{158.9972710429378, 177.014600641911}, {
           46.28595156229383, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 20]& ,
        TagBoxNote->"20"],
       StyleBox["20", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[20, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{69.5, 0}, {70., 22.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{176.56460064191097`, 194.58193024088416`}, {
           42.312515468523216`, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{70., 0}, {70.5, 19.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{194.13193024088415`, 212.1492598398578}, {
           48.27266960917914, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 19]& ,
        TagBoxNote->"19"],
       StyleBox["19", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{70.5, 0}, {71., 14.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{211.69925983985777`, 229.71658943883097`}, {
           58.206259843605686`, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{71., 0}, {71.5, 12.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{229.26658943883095`, 247.28391903780414`}, {
           62.1796959373763, 86.4703125}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{71.5, 0}, {72., 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{246.8339190378041, 264.8512486367773}, {
           76.08672226557341, 86.47031250000002}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{72., 0}, {72.5, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{264.40124863677727`, 282.4185782357509}, {
           84.03359445311465, 86.47031250000002}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{72.5, 0}, {73., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{281.9685782357509, 299.98590783472406`}, {
           84.03359445311465, 86.47031250000002}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{73., 0}, {73.5, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{299.53590783472407`, 317.55323743369723`}, {
           84.03359445311465, 86.47031250000002}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{64.83, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{65., 73.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9084513187769403`*^9, 3.908451322894496*^9}, 
   3.908456736000801*^9, 3.9085122029299655`*^9, 3.9085312543289146`*^9, 
   3.908559424673295*^9, 3.908770374821403*^9},
 CellLabel->"Out[200]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "CPUtemps", "]"}]], "Input",
 CellChangeTimes->{{3.9084510372848454`*^9, 3.908451117845652*^9}, {
  3.908451166513562*^9, 3.9084512527823906`*^9}, {3.908451283425356*^9, 
  3.9084513033148336`*^9}},
 CellLabel->"In[337]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxdkbtKA0EYhX8s9C0kvkM6m7Gxssj6BItgEA3ESwwkITqixttiE8mF2SaJ
29l6SzUPEN9hq3S+gzsDDpwzsDt8zPnPf/6Zjb367v6KiGwWn9tF7PvV+u/W
z6JYSUWJ6I/AC8fqE1m+Au94/XfgmtfPUV9q9UFviXU78Juv7/Sx/5oB//zA
QF51aMBPjlBviXUN9fEx1Z8gW2J9iqzO0F8aBuaxDao/R71q4jzSpv5dPNcX
yPElzXtN/W6o3y3l7aFfTqzv6L7vKe8Dzeu56tbS1z8afM8n1EuCfjbB+viZ
8r/QfAN6jyH5j7C/HaGfHtP9Tch/SvdVTvF8kmK+afqffzVy+lngbcc5sX4N
XHWsssC9SBX/LPgnkfoDi4HDsg==
      "]], LineBox[CompressedData["
1:eJxdkr1KA0EUhQeLaIT4n1YSFSsRQYwm1U2TysL1CYLgVoK13VZWvoDigJUY
TSWmn1o3Go2NGNDKzndwZ4S7nDOwLN/eM+fOubPVg+P9wzFjTDN7/Pvi/OTm
cvG32U+zdRZJ9qnjOfar4Nl18vpexsktstwpH3k2XeXdwPeod8TyoNwN+h76
OeZH9E+esC4p+fVJ/0z6F837E/QD5ZbP/z1QfRr2vyLLG+0fKq+G+Q2x39U7
nsd90Hk+sS4j9HcjyvdFfgULfsm4xXlPWLjfStGif9Fi3knyK5HfFPqZaay7
nP/nP4Mss+jv5qjfPHJ7gfqVleMw7zLqTZXy5RzuN1lCv/Yynt+soJ+sUZ51
ZLNBeYjNJuXf0v7hf6nUKE+NzruNddmhedQpbx31SUP5NJI4vm7keSP5A3m3
zNE=
      "]], 
     LineBox[{{3.9083647625454545`*^9, 70.2}, {3.908364768*^9, 66.2}, {
      3.908364774*^9, 65.2}, {3.908364781*^9, 69.6}, {3.908364786*^9, 70.1}, {
      3.908364792*^9, 67.6}, {3.908364798*^9, 68.1}, {3.908364804*^9, 70.1}, {
      3.90836481*^9, 70.1}, {3.9083648112*^9, 70.2}}], 
     LineBox[{{3.9083648208*^9, 70.2}, {3.908364822*^9, 70.1}, {
      3.908364828*^9, 67.2}, {3.908364834*^9, 67.2}, {3.908364841*^9, 67.6}, {
      3.908364846*^9, 66.7}, {3.908364852*^9, 68.1}, {3.908364858*^9, 70.1}, {
      3.9083648592*^9, 70.2}}], 
     LineBox[{{3.9083648654*^9, 70.2}, {3.908364871*^9, 68.6}, {
      3.908364876*^9, 69.6}, {3.9083648784*^9, 70.2}}], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQvUOu1Wuu3FvHs2eAoCfQASjkDeKngYAaiH8AwX8W
AOQ3+MDVnwHxHXwR+sH8YFQ+w6/5MH4OiH8AzEcy7/d8FPsc/qDyGf6i6Ufw
fUD8Bf/mo7ingWsBqnu4F6Cax4PKP4Dgu4H4C3gXoNonjWreATk4fw3YPvkF
KP5xUECzTxHOTwPbh+C3gfgNSqjqHZTR7FNZgOLfAwZo9hui6TdClT9gg2pe
gy2aea4LUMPPDS383FH9x+CB5h8PZPs1Y/w9EfoDHQAssgcU
      "]], 
     LineBox[{{3.908371024*^9, 70.2}, {3.908371026*^9, 69.6}, {
      3.9083710296*^9, 70.2}}], 
     LineBox[{{3.90837103296*^9, 70.2}, {3.908371038*^9, 68.1}, {
      3.9083710417058825`*^9, 70.2}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQrepp5LtA7q3j2TNA0BPowMDgAOangUAbiM/gB+c/
CwDyD/jB1eeA+A7BcL4PiN8QispnCIfzz4D1h6OatyACVd4hElX/gSg083LQ
+EWo7nlQhGp+QzGczwb2Xwkqn6EU1bwFZWj8N4vg4QN239tFqPrfofIPIPhu
IH7Dezg/DcRP+LAIJXwbPixCCn8ADiuvog==
      "]], LineBox[CompressedData["
1:eJxdkbsNwjAYhH8IhDdsgKBBUGcB01ATagqERCokVnBFxRAItwyRAcIOVHQU
QCAQnrELh7MlK/rku993Tnu6GM2yRNRNtvw6jnPaNI/9XZCslcuIfMWeXAPJ
/KzZlswuWj8fJkyh5q1kP9T6g2R+Rf/kpnkpmSLtD5Q/Mvx3ZPZI86r7Y8Mf
a31H5X9iH/ZCPb0x//5t+D/G/V/NnspPAub7Kau+PIPMsgLmtyyB72cJ7J8T
kJflBfa38dy3cR4voJ4VUU8lw5+y+r/rsuGvYD6qGvkN5rX/vr1xo57Oc9kP
0fAZMA==
      "]], 
     LineBox[{{3.9083767036*^9, 70.2}, {3.908376708*^9, 69.1}, {
      3.908376714*^9, 68.6}, {3.90837672*^9, 67.6}, {3.908376726*^9, 68.6}, {
      3.908376732*^9, 68.1}, {3.908376738*^9, 70.1}, {3.908376744*^9, 68.6}, {
      3.908376753*^9, 68.6}, {3.908376756*^9, 69.1}, {3.908376762*^9, 66.2}, {
      3.908376768*^9, 68.6}, {3.9083767728*^9, 70.2}}], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQbWxcLLlY7q3j2TNA0BPowMCwAMxPA4E2EN9BCs5X
A/EZpOHq1wQA+QcQ/B4Qv0EGVd5BFk2/HJzvBuIfQPCfgfXLw/XngPgKinD+
GbB9iqj6G5TQ7FNGs08Fzk8D24fgs4H9q4pqvoMasnpj481qyOEDAHoqfRo=

      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQvUPuqMZiubeOZ88AQU+gAwODgyaInwYCaiC+ghac
7wbiH0DwnwUA+Q3aqHwHHbh5a0B8Bl043wfEP4Dg54DV66PKMxij6n+A4J8B
22eC6h4HU1T7GcxQ1R8wQ3OvOar5Dhao6hks0fQj+D1g9dZo/rNB9U+DLZr/
7FD5DPao5h2wR7VvgQPcvWkg/zE4IscPAJOlwQw=
      "]], 
     LineBox[{{3.9083770992*^9, 70.2}, {3.908377104*^9, 68.6}, {3.90837711*^9,
       70.1}, {3.9083771106*^9, 70.2}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQLRa/0Xmx3FvHs2eAoCfQgYHBwQXETwOBZwFAPoMr
Kv+AK1z9GRC/wQ0u3wbW7w7nq4H4DB5wvhuIfwDBZwPxGzxRzXPwQtPvDZf3
AduP4PeA7fdBVe/gi6bfD9X8Awj+GrB9AXB+Dti/gaj2NQSh2R+Kpj8M1XyG
cFT3HUDjN0SguTcSTX8UWnhFoYV3NGp8OMQg85WUmGKR4xMAn+3PAw==
      "]], 
     LineBox[{{3.9083773585*^9, 70.2}, {3.908377362*^9, 68.1}, {
      3.908377368*^9, 67.2}, {3.908377374*^9, 67.2}, {3.90837738*^9, 67.6}, {
      3.908377386*^9, 68.1}, {3.908377392*^9, 68.1}, {3.908377398*^9, 68.6}, {
      3.90837740184*^9, 70.2}}], LineBox[CompressedData["
1:eJxdk71KA0EUhS8WlirGYCex8TW82olBjU+wCIZsTNwkInZyK6u8gFaCbTpF
Y8A42SJsEWEeIZWd7+DOFDOcO7AsH+f+nt3ZvcjOL1eIaL983Pvp8aj1svN3
8LMoz7DBRInnpjsPjikNvOrYKJZ24D3HfBX496zkWifUXzg2kYeOpYvM14Hr
jikLPPL5kTs+v4fx3EedbpW+NkV9HdlE9vGyofRNZKlgPG+p+tUp7GeqqPM2
5pvZHPySfI5+vBY4T2Tvj7wV6Pc7xvO4wHqHFvsfW+xftzB/cmKxv2I5Vdyy
8D9QavF7plhf2sjLDPOlhzr3sR8N1D4D1J9vUOc71Jf3WJ9GGF/7QJaxmucT
96OJmmei6n+peb7RfzLKL6P6z4I//v4leeCmv6957Nfgf4Wl5Rc=
      "]], 
     LineBox[CompressedData["
1:eJxdlL9KA0EQxgcLn0Bb0cZHsFM3jVWK6BMERStREFFIoauFlaAQLQ15AB9i
wf+653mFgigx0XindxG8pLMyu4G9fHNwHD9mdr5vZvd2bH51bnGAiArd13w9
nT97GPnJebr77M8KImV5yT6G5bnjQcPiIssvGL50fGpYMZZXjpdt/jXLv8G4
vHWct/l3Tj80TNrxuPWr0V/Vw/riHv2Sj/WVj/rqEfPlE/P3jOvpBVm+sniN
6dWwH/mG8WId+6EGsmqw+b6zfj+YfpPNq8n0P5l+iP1S5PJn7HrG8ovpf7N5
x6inYhfXhqsJ+hMtx3tW7xf9VTtsvzqs35UA89cC9LOO8eJGgP1uIo+WkFUJ
14udCOvvRpjPeTLG8zIVw3yK0zHuv0BWIob5yRzG6zrB8+olsD/kJzivoRb6
s5zVk8Mt0KOtFP/fjHv/y3YK9cQBMh2y9Rn3/JSxnipjvjxK4X4Sx4575+ek
jfUq7T79sDKx8Nd33/0D3p1qbw==
      "]], 
     LineBox[{{3.9085601495384617`*^9, 70.2}, {3.908560152*^9, 68.6}, {
      3.908560158*^9, 66.7}, {3.908560164*^9, 65.7}, {3.908560171*^9, 65.7}, {
      3.908560176*^9, 65.2}, {3.908560182*^9, 65.2}, {3.908560434*^9, 66.2}, {
      3.908560441*^9, 67.6}, {3.908560446*^9, 69.6}, {3.908560452*^9, 69.6}, {
      3.908560458*^9, 70.1}, {3.9085604592*^9, 70.2}}], 
     LineBox[CompressedData["
1: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
oT8eer2Ae+v8ELDrq3r+/qg/8nu9/wHJjQmi
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.908308398*^9, 64.92222222222223},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.9082176*^9, 
        FormBox[
         StyleBox["\"Nov 06\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9083904*^9, 
        FormBox[
         StyleBox["\"Nov 08\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9085632*^9, 
        FormBox[
         StyleBox["\"Nov 10\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         StyleBox["\"Nov 12\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9082176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9082608*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908304*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9083472*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9083904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9083904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9084336*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9084768*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.90852*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085632*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085632*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.9082176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9083904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9085632*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9082176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9082608*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908304*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9083472*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9083904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9083904*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9084336*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9084768*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.90852*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085632*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085632*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{495.9999999999999, Automatic},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.908308398*^9, 3.908782788*^9}, {64.92222222222223, 70.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.908451228163253*^9, 3.908451253891199*^9}, {
   3.908451300488757*^9, 3.9084513040513864`*^9}, 3.908456738555205*^9, 
   3.908512208012247*^9, 3.908531256238343*^9, 3.908559426773656*^9, {
   3.9086812438091917`*^9, 3.908681248659878*^9}, 3.908736291286292*^9, 
   3.9087703769963408`*^9, 3.9087716764999557`*^9, 3.9087862903913965`*^9},
 CellLabel->"Out[337]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cycleOnOff", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], ",", "#"}], "]"}],
       "&"}], ",", 
     RowBox[{"GatherBy", "[", 
      RowBox[{
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"DateObject", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
            RowBox[{"Unitize", "[", 
             RowBox[{"ToExpression", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}]}], "}"}], 
          "\[IndentingNewLine]", "&"}], ",", 
         RowBox[{"Select", "[", 
          RowBox[{"log", ",", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", "#", "]"}], ",", "\"\<cycle\>\""}], 
             "]"}], "&"}]}], "]"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9084521612200356`*^9, 3.9084521740071297`*^9}, {
   3.9084522070652494`*^9, 3.90845228213369*^9}, {3.9084523129625473`*^9, 
   3.9084524663343544`*^9}, {3.9084527812059345`*^9, 
   3.9084527997593374`*^9}, {3.9084535972976074`*^9, 3.9084536081756697`*^9}, 
   3.9084536545822396`*^9},
 CellLabel->"In[338]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"cycleOnOff", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "80"}], ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cycleOnOff", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "80"}], ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.908453713967534*^9, 3.908453792187706*^9}, {
   3.9085240783056283`*^9, 3.9085240811511345`*^9}, 3.9085313287135315`*^9, {
   3.908531368396164*^9, 3.908531395480438*^9}, {3.9085329303833733`*^9, 
   3.9085329368621073`*^9}},
 CellLabel->"In[339]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdkLErRWEYh9+sbq5OHeWejnuuMhgUhSi6n5xyi9BVlOmkzCZl/Db/gDIo
LkWRxGAwqDMYDAwGZTCcwaqUfwALnt9Xp6+n3/t8v7dTW9torreZ2eL393Ob
ufZy9X3Kfk9SJucBudVFdhWy9fzxR92sqDH3feSsX/wBcjEo/rD0j4k/IX6d
+/hp6Z8Rf1b8eelvSv+y+KuSpwH6bSfkPrsh99kj2wE5PyL7E/HPxL8gF1fS
f83c3Yh/K34u/XfSfy/+g3BaYd+m8BbZb5NtX/JD8Y9l/pScn4t/KX4pwv/J
OiLkSUDOQ7LvJrtY5of4vo0wz0ox8qQz5vsRc6syz3uFR8nZuPiTMu+kLyW7
BtnmxF8gt5bY51bI/tORHxvc94lsz+TihexfxS/Ef/vPX+fmwAQ=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdk6FLA1Ecx39cEAYnGIVt7NRgMIiGwQT1BgoTNhxOmEHwMRGDoGAwCIIG
g2AwGASDBwvCgmFBMAhnEAwGw8BgcCAYBMW/QKZpfj8Hx/Hh3ec+7727G6ht
Lax5Zlb+Pf+uZu7Hz3zmrXt4vcJRf5e/p83ClI5boNweUt4fVnYj8Efhj4Oz
2ncTOh5P4f48+rPozykHJTyvjPUvKodLOp9gGf4K+qvor2P9G/A30d9Gf0f7
tgt/D/0D+IfoH8E/hn+C+Z9i/Wfwz+FfwK+jfwm/Af8KfhP9a/g38G/h36F/
j+/nAf4j/Cfsfwv+M/wX7P8r+m+Y/zve/wf6X/gf/aRwPKYceCnt9ShHCWXn
p9XvS+t6khjP6Hg8CM4qu5z6Non7Q/Rm4BeUrajcnleOKtoLq/+5A87YxYg=

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.908593651*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.9085848*^9, 
        FormBox[
         StyleBox["\"06:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         StyleBox["\"12:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.908628*^9, 
        FormBox[
         StyleBox["\"18:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         StyleBox["\"00:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086712*^9, 
        FormBox[
         StyleBox["\"06:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         StyleBox["\"12:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9085848*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085884*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085956*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086028*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.90861*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086136*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086172*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086208*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086244*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908628*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908628*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086316*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086352*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086388*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086424*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908646*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086532*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086604*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908664*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086676*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086712*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086712*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086748*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908682*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086856*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086892*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.9085848*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.908628*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086712*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9085848*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085884*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085956*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9085992*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086028*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.90861*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086136*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086172*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086208*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086244*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908628*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908628*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086316*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086352*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086388*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086424*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908646*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086532*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086604*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908664*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086676*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086712*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086712*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086748*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908682*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086856*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086892*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{914.6666666666669, Automatic},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.908593651*^9, 3.90867486*^9}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.9084536299716396`*^9, {3.908453708631028*^9, 3.908453792526494*^9}, 
   3.9084567532410355`*^9, 3.9085122163275633`*^9, {3.9085240720041428`*^9, 
   3.908524081299427*^9}, 3.9085312619906683`*^9, 3.908531329927627*^9, {
   3.9085313726505075`*^9, 3.908531395720069*^9}, {3.9085329218086023`*^9, 
   3.9085329373172865`*^9}, 3.9085594323100595`*^9, 3.908681253045566*^9, 
   3.908736295676962*^9, 3.9087703843628416`*^9, 3.9087862979754515`*^9},
 CellLabel->"Out[339]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"heatingOnoff", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DateObject", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], 
      "\[IndentingNewLine]", "&"}], ",", 
     RowBox[{"Select", "[", 
      RowBox[{"log", ",", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "#", "]"}], ",", "\"\<albatros\>\""}], 
         "]"}], "&"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9085329923890743`*^9, 3.9085330004582725`*^9}, 
   3.908533060382515*^9},
 CellLabel->"In[204]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"heatingOnoff", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "50"}], ";;", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.90853307213376*^9, 3.908533111584633*^9}},
 CellLabel->"In[205]:="],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQzcDw4LeM/FtHBjho4JGF8z/YMzAoCMiiyD8Qx89f
II2mXx5VvsESTd4WTX8wqrxDDKo8Ol8hHlX9giQ091Xj5zso6uDlH+gyw8t3
sLRH4Seg8Rd8dkBxX8NZD1T56554+QnFXnj5ChXeqOE1zRtVPRr/wUxU9QlL
0dSj8R+sQFXf8ApVfgEaP+EDqnqGSB8UeXT+gk9BePkN/CF4+Qf24ec3fIjH
y3eYm4KHDwC1wouP
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.908626399*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.9086064*^9, 
        FormBox[
         StyleBox["\"12:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         StyleBox["\"00:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         StyleBox["\"12:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         StyleBox["\"00:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9087792*^9, 
        FormBox[
         StyleBox["\"12:00\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086136*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086208*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908628*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086352*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086424*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908664*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086712*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086856*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087144*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087216*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087576*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908772*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087792*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9087792*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.9086064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086136*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086208*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908628*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086352*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086424*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086496*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908664*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086712*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086856*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9086928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087144*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087216*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087288*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908736*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087432*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087504*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087576*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087648*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.908772*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.9087792*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{985.9999999999998, Automatic},
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.908626399*^9, 3.908773098*^9}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.9085330749850845`*^9, 3.9085331117899714`*^9}, 
   3.908559439853567*^9, 3.908681263490255*^9, 3.9087703900006*^9},
 CellLabel->"Out[205]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["estimating k-values", "Chapter",
 CellChangeTimes->{{3.9089365436621428`*^9, 3.908936578861992*^9}}],

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"log", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"StringContainsQ", "[", 
      RowBox[{
       RowBox[{"StringRiffle", "[", 
        RowBox[{"Flatten", "[", "#", "]"}], "]"}], ",", 
       "\"\<reachability\>\""}], "]"}], "&&", 
     RowBox[{"StringContainsQ", "[", 
      RowBox[{
       RowBox[{"StringRiffle", "[", 
        RowBox[{"Flatten", "[", "#", "]"}], "]"}], ",", "\"\<False\>\""}], 
      "]"}]}], "&"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"raspiErrors", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"log", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"StringContainsQ", "[", 
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{"Flatten", "[", "#", "]"}], "]"}], ",", "\"\<error\>\""}], 
        "]"}], "&&", 
       RowBox[{"StringContainsQ", "[", 
        RowBox[{
         RowBox[{"StringRiffle", "[", 
          RowBox[{"Flatten", "[", "#", "]"}], "]"}], ",", "\"\<RasPi\>\""}], 
        "]"}]}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.909043332168306*^9, 3.9090433566270595`*^9}},
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeGranularity", " ", "=", "\"\<Hours\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.908953004631977*^9, 3.908953012356124*^9}, {
  3.9089573764199705`*^9, 3.9089573770286717`*^9}, {3.909042417914259*^9, 
  3.909042418491262*^9}, {3.9091214487723927`*^9, 3.9091214493519907`*^9}},
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomTemps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"list", ",", 
       RowBox[{
        RowBox[{"0", "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"list", ",", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "&"}], ",", 
            "#"}], "]"}], "\[IndentingNewLine]", "&"}], ",", 
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateDifferenceInUnits", "[", 
                 RowBox[{"startDate", ",", 
                  RowBox[{"DateObject", "[", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                  "timeGranularity"}], "]"}], ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], 
              "\[IndentingNewLine]", "&"}], ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", "#", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "4", ",", "5"}], "}"}], "]"}], "]"}], 
                "&"}], ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{"log", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", "#", "]"}], ",", 
                    "\"\<temp measurement\>\""}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", "#", "]"}], ",", 
                    "\"\<sensor\>\""}], "]"}], "==", "False"}]}], "&"}]}], 
                   "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], 
              "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.908447507136998*^9, 3.9084475562248764`*^9}, {
   3.9084476576487637`*^9, 3.908447835827341*^9}, {3.9084479679808693`*^9, 
   3.9084479739278097`*^9}, {3.9084480436860723`*^9, 
   3.9084480673499737`*^9}, {3.9084480996033945`*^9, 3.908448163090989*^9}, {
   3.908457276905672*^9, 3.9084573112751083`*^9}, {3.9084574234366875`*^9, 
   3.9084574279502935`*^9}, 3.9087716935792074`*^9, {3.908771953974809*^9, 
   3.908771954616605*^9}, {3.9087856328058863`*^9, 3.9087856334825525`*^9}, {
   3.908939503918517*^9, 3.908939522782424*^9}, {3.908939573577197*^9, 
   3.9089395842650824`*^9}, {3.9089396176361346`*^9, 
   3.9089396407721224`*^9}, {3.908940075640464*^9, 3.9089400938156157`*^9}, 
   3.9089407289219513`*^9, {3.908949553418361*^9, 3.9089495735090723`*^9}, {
   3.908949644407426*^9, 3.908949648557094*^9}, {3.9089528220195637`*^9, 
   3.9089528230601635`*^9}, 3.9089530238125925`*^9, {3.909253850933694*^9, 
   3.9092538583965063`*^9}},
 CellLabel->"In[25]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomSetTemps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"list", ",", 
       RowBox[{
        RowBox[{"0", "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"list", ",", 
       RowBox[{"Map", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "&"}], ",", 
            "#"}], "]"}], "\[IndentingNewLine]", "&"}], ",", 
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateDifferenceInUnits", "[", 
                 RowBox[{"startDate", ",", 
                  RowBox[{"DateObject", "[", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                  "timeGranularity"}], "]"}], ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "]"}]}], "}"}], 
              "\[IndentingNewLine]", "&"}], ",", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", "#", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "4", ",", "5"}], "}"}], "]"}], "]"}], 
                "&"}], ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", 
                  RowBox[{"Select", "[", 
                   RowBox[{"log", ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", "#", "]"}], ",", 
                    "\"\<set temp\>\""}], "]"}], "&"}]}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "3"}], "}"}], "]"}], "]"}], "]"}]}], 
              "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9095947207304583`*^9, 3.909594763510073*^9}},
 CellLabel->"In[26]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"albatrosState", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"DateDifferenceInUnits", "[", 
           RowBox[{"startDate", ",", 
            RowBox[{"DateObject", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "timeGranularity"}],
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
        "&"}], ",", 
       RowBox[{"Select", "[", 
        RowBox[{"log", ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<state\>\""}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<albatros\>\""}]}], 
          "&"}]}], "]"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"0", "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"albatrosState", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"Quiet", "[", 
     RowBox[{"Select", "[", "\[IndentingNewLine]", 
      RowBox[{"albatrosState", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"albatrosState", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"albatrosState", ",", "#"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "!=", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "\[IndentingNewLine]", 
      "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.90893692355762*^9, 3.908936955065261*^9}, {
   3.9089380281008043`*^9, 3.9089380399906063`*^9}, {3.9089385783117685`*^9, 
   3.908938617048503*^9}, {3.9089388311206646`*^9, 3.9089388673953104`*^9}, {
   3.9089391500727777`*^9, 3.9089391627347174`*^9}, {3.9089392617480392`*^9, 
   3.9089392639133863`*^9}, {3.9089392965744286`*^9, 3.908939298762953*^9}, {
   3.9089401497221966`*^9, 3.9089401573109426`*^9}, 3.908952826303741*^9, 
   3.9089530222937746`*^9},
 CellLabel->"In[27]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pumpStates", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "list", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"0", "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"list", ",", 
       RowBox[{"GatherBy", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"DateDifferenceInUnits", "[", 
               RowBox[{"startDate", ",", 
                RowBox[{"DateObject", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                "timeGranularity"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}],
             "&"}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{"log", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<state\>\""}], "&&", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<pump\>\""}]}], 
              "&"}]}], "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}], "}"}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"pumpStates", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"Quiet", "[", 
       RowBox[{"Select", "[", "\[IndentingNewLine]", 
        RowBox[{"list", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"list", ",", "#"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "!=", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "\[IndentingNewLine]", 
        "]"}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"list", ",", "pumpStates"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.9089405493455057`*^9, 3.908940580625632*^9}, {
   3.9089406320830708`*^9, 3.9089407231017933`*^9}, {3.9089410334537992`*^9, 
   3.9089410365136147`*^9}, {3.9089528295627513`*^9, 3.9089528300210447`*^9}, 
   3.908953022304782*^9, {3.9089558108052683`*^9, 3.908955812182828*^9}},
 CellLabel->"In[29]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"externalTemp", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"ToExpression", "[", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"DateDifferenceInUnits", "[", 
            RowBox[{"startDate", ",", 
             RowBox[{"DateObject", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
             "timeGranularity"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "\[IndentingNewLine]", "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"log", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<external temp\>\""}], 
           "&"}]}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"0", "<", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.908947286166643*^9, 3.9089473237558985`*^9}, {
   3.9089473613480396`*^9, 3.9089474334933825`*^9}, {3.90894749275191*^9, 
   3.9089475158740444`*^9}, {3.908952834462882*^9, 3.9089528355370326`*^9}, 
   3.9089530223139124`*^9},
 CellLabel->"In[31]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"smoothedRoomTemps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SparseTimeMovingAverage", "[", 
      RowBox[{
       RowBox[{"roomTemps", "[", 
        RowBox[{"[", "room", "]"}], "]"}], ",", "0.5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "9"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.9089496766361847`*^9, 3.9089497082794523`*^9}, 
   3.9089500167108135`*^9, {3.908950061638776*^9, 3.908950088255596*^9}, {
   3.90895286767358*^9, 3.90895286786595*^9}, {3.908953033445173*^9, 
   3.908953034429378*^9}, {3.9089574694827137`*^9, 3.9089574698152704`*^9}, {
   3.9090424830169373`*^9, 3.909042487722679*^9}, {3.9091217379467263`*^9, 
   3.9091217379936237`*^9}, {3.909121815947361*^9, 3.9091218168489394`*^9}, {
   3.9095537968062067`*^9, 3.909553797526191*^9}},
 CellLabel->"In[32]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"smoothedRoomTemps", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "8"}], "]"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"roomNames", "[", 
     RowBox[{"[", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
        "9"}], "}"}], "]"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "700"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"All", ",", "All"}], "}"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.90902929358436*^9, 3.9090293411500025`*^9}, {
   3.909042341354967*^9, 3.9090423727139883`*^9}, 3.909042404774208*^9, {
   3.909042524985647*^9, 3.9090425402782793`*^9}, {3.909121330093931*^9, 
   3.9091213301785684`*^9}, 3.909121791739733*^9, {3.909207320383293*^9, 
   3.9092073261046877`*^9}, 3.909553766295177*^9, {3.909554002614213*^9, 
   3.909554003278858*^9}, {3.909554343366313*^9, 3.9095543684039707`*^9}, {
   3.9095544173532305`*^9, 3.9095544656640863`*^9}},
 CellLabel->"In[20]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdm3mczXUXx+3Lk31JlkLDkH3MDMbW1xgi+9h3Y6vM3HF/P/tOPSlblgxC
QkiRZajkYSKVLdJQPMaWLTxUaLP2nN/ne+495977z7zeft/f+Z7te77bT8WB
wxOH5MiWLdv5nNmyeX93/cf75TNL3/F+0WZOrol3h60uFeSu3u+HckHe8BH9
qpU3R76lX9sY893MljkySj9rsnm/qTFmKH4RQe5RnFqsrmzbfxtjZlHzcSUj
g/ys9xtYxb63jt9fF85Vuf8Y/lst+P6vv9CvVvUgL+9OHa4Thr6H6gR5jPc7
KXx+19Kx3S4LF/vtyIYZY6KCDPvT6obpWy9U/kxh/J0tHO39itcPcrcY6qGs
cHZPgUjhoxtmvNQiun6ovvWFl40lCaZ+qD7x9UP1ebF+qD5t64fq01nYU2dD
T+Hd5I6YgcIJ3m+wsI2rsI13HPdTz8ajUMNQ/5UU7teucfUyP5kgF/V+W5sF
ecab9NvRLNSencLI1w3xof75TPjcWfrtDuMj8aH2H48P7f+n5javSrM/Lwr7
PYXvCOP9u8Lwz+/CsPcPYbjnT2Ho+5cw7P1bGH/vCcP++8LQN3tCkK2/hRGf
Igmh+pVICJVXJiFUXsWw9pUSQvWtkhCqb1XhW3VGff4oLkyfpsJXSrWZvDVB
uPeW3L23tAhr30942nBy+KCEUH8OCev/ZeH8f1/94avkMHmpYe3Hhj2fHGbf
YmHkxXLhwetv1hm1KkzeeuEFU0nh7Qmh8f40LB57wvz7lfDX21bPn7o/zJ7D
Yfp8GybvmLDN5zC+FPb+zfB8acnjNtraX6p1kG38X7RytnHdK9A2yIjH6+2D
jPGSo0OQIX9Fx9D2Xwvjb1bHUPm5OgX5SW8CyiOM/CwqvDlyRck5FcKfJ4Zy
XGKofonC8MP1zkGGvQu7hOqzXBjj5aMuofZtEqbsbzb9ardQex8Jw62Pu4XK
S+weZMy33bqH6lOiF8eD7TW9OH7Rtl1yL84L5reFbT4Lwx/vCNv86xWcv9H/
L8K2XgnDf/eF8bdS7yB/32pP/c2JwrC/qzD0ThKG/QOF7XgWtvb1DtUntXdo
/2t6s39Y3pd9guuD1qROZN1+9vnVaB5//YMM/+wXvjvsYs/vvxXG/PLEgCBj
PVFB+JVKF5Z1rygMfSOEsR5KHmD/PTrWrn+mDghdr5weEDofZQnj7xlhyDsv
DHsuhLVXbOczYcTvRkA/7v9PYbSflhRk+HN6GC8S/vhlcsC7SZyvPL+G86ok
879OO555PTmwfksKrT+KPffkKDIotH6+KGzXM4NC61sbYbseC3s+aFBofX8j
jP8njHgrhn9vCiN+ivH3ljDsVYx8Thkaql/q0FB7FNv5amhovfYLYziNGhra
n2LoO3ZoqH4zhoba+58webvD+tsjPG9V+r4Te4VRL06FtVeM/Dkb1r7HS6H+
UIz3FSNezYcFxwvyq92w4P4B8scNC453yF8vjHYbh4XWj238vmH/Z/DzAuyP
L4TR7gC3z8b2HxTOGBd7e2OOZDP3yz+q9unA4z2nMOQXSza+lcfzNKwZbW5v
JANKJvM6KdrEev/wpDDiXSbZrPE3+dfJiGhz9nGF5kPKCsPep4VtfiebPl6H
Z3j+rJ5iSmx64afxI+tae4hvTXw+tt94nn+iUsyet3+4882bPN/UTTH/Ovm+
v8kCbh+dYoq2/X1M+lKeH+ulmAmewHR+Py7FzPcEZtS1+Ua8ZOeZxxX28fzZ
JMUcLtR5cdZ5fq54vGdw0xTjqVfiKs+XihG/hBQz8dzhn3c/ZHktUkyNe18v
6P+Qn7dKMaeTbrgPcnK9bS2M/FBs64Uw+lPsvV68XYp5yWuXh+e/jimmjLfQ
yhVtXqDtaGznFI43zw+K0X5AinnOC8C1ujaOihGvJGHUk0HC0HeIMPylGPEZ
Kgx9hqcYiubO1gV4PhohDLVGCkMfxchrxaiv5Xwm/TItxDvx+KngM60pHJte
4HpRUdjOZ8LwB3F3Ly9a8Hip5DMnbl9PntWc54PKPnPD13PDoHiuT4qRX5E+
M92bEJqx/Co+0zxrZKH1zVheVWGbzz4zflCu4o+a8PMaPrO38MM9hRvz/p4Y
fmsYY+NbUxj6KEb/tXwm6cqxZ7PiAucFPpvvDZnjfcH6gf4H+YLnD9B3gi84
v0HeUWH485rPjsffud4phj+u+0yFLe7L828F5mOfea7ZimKXrwfW577g/Ip8
vyVs5xthO9/4Qufv2z5zcPfV+MwTXN8Vo787PpPngPcPbC/x7Mpf9LhzOMbm
211htP/TZx7HXuwfkRFYDwrD7r+EkZ/EPe/MqvzFjsD+leJ1aFWLT7dx/bzv
M+X2O+X2b+X2//hsPZjO+uZODa4XED/F0DePMPrPKwz/1Unl8cP1M0oY8uJS
TZvmRyeN3hvN9UwY9jYUhvxGwjivahT2fpOw95sKIz/7pAb3U/BHX2G07yeM
PFWMP8NSzU3Pvjb8XLF3PPVSPr/1Yxbnm2L4ixj1/jT7K7/wyy0isp8njozK
t7HcaY5vAb8h6f/rdIbXJ8QzH7fvdjiLz6sUw56CftPEE3iW85H4zjf5Iu9n
8Xgo5Df/XvBWh/7E0Jd4f/eJX3cn+eM8gcRF30vqPvUM529h4Y0zXmoRUcRv
+mK+Y3nEW73hc4bzp6jfXIldeLLjOe5fMfor5jcPmnz21Yfn2R/E/b0J5jyf
bxX3G5q95355lvOPeEWDzOTc59k+xZCv2O7P/Marjj+dY38RJzwqu2r2Oban
pDD8rxj2Pek3Ge+VqX32MstTDH1K+U3M2os39/3M8SpN+nv16x7XwzLCOL8j
Xnphb+NO/7C9xPs8Ax+zvLJ+U89bh2SLteeNxNj35Yi19iqG/HJ+k+9g0Xbv
54y19fBpvxnz/oTH1XPFmghPgGLEQzH8pRj2PUP2PPTN7ETykK/E73vrG2KM
X+KymI9jbX4Qb095XPo4MfQvL/KgD3HF5Kdu1c/N/RG7XoHJG2vHVwW/Of/U
3oQpxDhPJV6+9p+JkcTId8XQRzH8R7zZq0/5Yu15a0W/Odhn0rc/0HPE0+MH
tQam0XOcHytGvIhRf/Kx/c8KIz+JD95ZXGNKfrYvwm/Wev7Iy/Eg9tP0+Wpe
9q9i2KvYzsc0vvLGb72Yh+0nfgXrHe6feNH3WendqD3ylbiVN7/nZf8rhv2K
kc+V/bau5WH7ie/dXnT1Qm7OB+KiF299NCEv268Y/o0URv+KMR6r+I3TfHer
YXnZH1U4/wPxrEr1pU+OnvsC/iRevjri84cB/Z7zm9OHLjwfFYgP8ZBG5zvM
ycv6ER/KaPhh3YB/qvnteiQ3x0Mx9CXGuSXlG+ofcT7f8biVedg/iqF/db+Z
nFllUmZAf+KZEbu7/Zaf40mcrWLzIW/kZ/m1aDx6y7Ni7A/iRK8AF2X9a/tN
Zq4GySuK8nglTlqxfkpECZanGPlBPGl09q0fluD8UIz8qCMMexVDH8V2PhW2
86mw3V8IQz/FGJ9xlH/YQMQaLx12NfKbrHuTh+2KYf0UY3w1EYb9TcLaE2+f
2XrDkhi2pynl88OBB2vX43gSX62xbMo3MWyPYtRHxdCnmd9Ui9/Vd1Rtlq8Y
8uP99t9rsnzi2juvrZ5Vi+sTsfHW1zU4/s395peyP2YkUXvcHyX4zc55lME1
2J8JPL/W4PrTkufjaqyfYvj7Bb8Z1fa3ASuqsn8VQ59Wfrs/rMLnS8SveL/n
WD4xZe/lUtU5v4gXZ5UfvL4Gy2/tN+3LXts+rRb7WzHiqxj5RXy22AeTv6vJ
z9v4TeHYRx2P12Z/Ev92KMfmGnV4fLYlfyFArA9xgxnNBlypw/Eh/u542rnS
ddg/xB/U+uz5A3W4v3ZU37wFRh22tz3N/97+JYrztz3Pv3XZPmLnibVNT0Wx
POI+qVPmrarL8VIM+zsII1+J786O3NMzmsd7R7+ZWmXDlTlRbE+i9A/9E0U/
xI+YVs+zKpO9mN+7+M2Z8t7NAc8/iuGPblSPykYsuVab5SmG/sTdCtVMfzeQ
n5Ud89HtzHYDi8SYmSQ+e6Sw3V8JQ1/F6E+x3V855pNpFOEYXu8ohvwajukR
t/3A6KYxNr61HeOlQ/vevB5SjPyJckz7+2s63B/M8ohzT0trPiuF12uK8b5i
tI92TFT7SpcSXG6vGPMJcZG6XUYvGc/3pbGOGX+dVrCz+Tkx4rGS138NHPP2
U7m6FfqY73fjHDO3Q//e5TbG2PmAGNfeG3g92tAxNZ7Ylb5nA6/fGgnb/YAw
/NNYGP0pRjyJx3r6bWR5TRxzydvwrWF5ivG8mWPerXfslZx9eT0Z75in19GA
aBXYnwqjfXNh+EMx/KkY/laM/GjpmGeYob9iWz+c4H4Y8WjjGK88/as769PW
MfO886/+fB/dThj2KUa96CAMfRXD3o6OadKz5vDZA1h+OPdwbL17m+/n+1B8
saDn9xWjvWL039cxu0dSRizi+CtGvAY6JuXnBx/eTuf2gxyT0wvINvanYsR/
sDDGH/G82Nl/LksP3JcLQ75i5OsQx/zo+fMzXs8PFUb9UGzPhxxT792cw459
yv59SRj9v+yY5FqV2n24g/drxKiPO9kfihGvV4QxfylGvBVDfopjvOmkTUbg
vNox2XGvwvk4XBj543fsemYv268Y/h3j2P3jbpY/VhjvE2M+/JLjTYzvBg7y
fl8x5I0Thv8nOqbFFCrgt1ge8cHRtMP6lfUh/m+XMu4vd1n+ZIfPB3k+nOKY
rQ8WLzgWWI8rRj1UjPGl2J5bCyOeiqEPMe65n+D1AjH6LczrS8X4O82xcSvC
61nidcu+qrClGK+3iUviQIXnm1cdU63spJ75S7J84o5ewX6S5yviqV48iXF+
9rpjxuCAl/tTjPpJvPpE3kapFXm+VIz+iZt6AavI9k/n8RrB87di+J+4UNxf
/81diedv4szBU+MOR/L8R7yu4MjTpgrr84Yw6odi6DPXMZ0vrSWPcLwUo/95
jvHKzdxn2f+K4W/iF73zm4r8fIFjaLVFC2zWTzH0U4z3FWM8vC2M8UR8eET+
wQUjOF8UIz4LHRPXo2Pm7ee4v4WcvzV5fZzmmKPPD1paILAeWuLY9UEH1lcx
3idO85Zf3dg/yxxT+MbKQjcGsH8UQz/F0E8x4rWGx+NMjsdaYYy/tWHPPxBG
/4rRPzHOJxaw/PU0f3oH8mn8fINj3rrU4K1LO1gfYuzHM9hfGx1zfN6I9/ru
4XxWDH9sCtQjlq8Y7RUjf7c6ptdg2jAe4fxNF8Z43+aYE3ka+lYe5+fbhWHf
J46p4613v+P2iqG/YvjnMx7fxzmfibu82rjygeM8fnc4hnavi1Mz2R7F9vso
YXu/59jz7J3cH/HwETfr7d/E/e12rNz3OV6K8X44f+GYM+X+c2TrMraHuPbZ
SnmmpbF8xfZ+3bF5P5/9uZfGsxePqZyvXwrj/a8pvt4FlMv2fOOYn38d/Mku
h/OXOMrTewSvx4lbeucRI9ie/cKwR7G93xe293vC0Ecx8kEx4nHQMctLzsk1
cQSPD+LVXv0awfuBQ46p5dk/ivUnbpm8vWXySNaf+D5tX0eO4HpB/Lp3vjCK
x/MRh+/vWH/FyH/i1/YcWtViNPevGPPJUYr/ok8aRo7l/o/y+mwM90c8Fo7g
/el3VM+nunmrjuF8OiaM9xXDX5mOmbX575mbST7WO6cdc7F6xsXqk9l/irF+
VIz1NLFXfhZNZH9mCSOfiCm7sspNYPlnaH72NozjOB7nHHPv5JtT5oxlexTD
P+epv57ft9ozhuUphv4XHOMd7/4xlscTcbFH725cFLA/nK85xiv/2R32h2Lk
23WOn4/nQ8XQ74Yw/HPTsd/FDOV8UYz433LMKwc+/67WAI7/r45p3bDpJF8U
y7/t2PPgSpzPxFcKdfwlW2UeX8S9zj21N6E858Mdx2C7UY7tUQx7FCM/Fdv7
IGGM47vC6P8PXl/l5/UH8Zuf3yzfOQ/np2Lop9jeJznmlJefgfPkvxyTZT4o
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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mUE=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdmwmcTtUbxxnCZMkuSzFGEilmNZSOZaxjmcEYM2OMMcYyL957J2vW1BRj
qSwja0khkz1lSaMwGMYef5JdlBSyp/7n/s7zvs/jvR+fz3y+7rnnPNt5zvoG
pAyL6e9XqFAhVbRQIefv/I+dZ+8b+Fs1TLmTOr3WYH4RlYYnVPVwnuOVlef9
9KJjbw9eWsXL5n0NL4fezBlYp1BtdWC/84RRPYFeRvlKdZ98/0U9L/95Qz+v
NFCt8YSrbVv104zZlGde9aV+9jVShZxnYrga6TwnmFHsEnP5vw6smjKysZe/
mz8qNiQl6En55jCf3aYLXAr26lfbeVLCvIz2pzLju2nMwc5TIdzLsSFagurM
0Kdu+JPlg5mhTzgz5FbhT8rTMvxJeTqEPylPlE/93ZgdcVb1Yjb2YIb9Un3a
13aDeUqRnpvp/f9C1dQBkYGFn2lq+ONQ5Zh7QCXmcs4T3czofSXE1NdIed/D
/l8rkjtMOeFY7Twzvl/XwuhxlPTZwDzlff18ywx7bGHG931b0ncUX6uYYe9v
mH85o5/vfPgAs6mXGfH7SyujV6Emxj8XmNG/bjHju9vMsPffzLDHHWbY7S4z
5L3HDP3vM8OuD5hhj4fMsG/h1l4+8Zn79aefYcafsswfTRyW1Kki8/0rx3du
qMYM+wYwQ586zJD3Reafdm5Y+mE95qZDPjlarCkz7Nmc+XKVjuPXtWZOWPtU
wtpIn/JJzJO0uK/1Y/7sQ61Af5/2BzL7OwqlM2vr+N8fygz7jvJpb7yPftnM
1ZwKFzKnrrjeaPinPvWt8LHvRuaNS7XAm5gdd/nn+th3J/Murc7EPB998plN
XvPx7yFmE88+9rvo8/11n/LBkd48g/6UHunNY7DP4khTXucN/FVt6Ptwo/+8
Nt7+je/z23rzAexZpb2XUd/q9t78ge9KRXkZf9t0ovpCTP95tzO1R+WnMZt8
4eFg01/9unjZ6NGF6gsy7+d3JTsGkX7MenS80GsXMz4/zYy/RaO9XNkZUIsx
lzMJ0str6i6uNL0WM+RdG01yBVP5mCc5ghnyxjDDniNjKF+T/JnM+HutG+Wz
IBNfs7t7GXIsZEY++ZLZ+IcZfzv2oPaD1PDNj1tkXoml9hqrtztXv7rxZqyp
N6ex8dfjWIqXxsaf/zKjvZieJk62NjbzkVjm9Au9DrdLZEb5pvEUH42NvWPj
vf6FPeOY8V0CcS7ZY1A8jX9BKv5wu9zwWZ7yQdTfmWH/j33eryGeSPYpiPf6
09jb8z7Y6HOD2eR7ZvjzITPqqZPgZUe8NTHMsGcPZrTXlxn2SWGGPQYmKHS3
jyn+05kh31Bmkw8TaF5G5R8lkH7BRt/KiVQ/9bd6iRQPoYbbJZJ/aH7gn+Tt
v8YPfbwMe+YxO93t8H5m+K9kspcX9qxwcGot5kF1zi3oGcDc1m/76NBA5q8G
6gINk0neUKW/buPXOZnkpfyUkEzy0nxjbDLlJ5qPLU326gP9TzGbfMCMdn9m
dprbfpYZcpzzKS8Y9jrPDP2ukbwbqP27zNAnqq93fu8UrzCJGfGQyaytczNn
LjPss6ivmf9FhZr5kGDo/0lf9VLizB/u1AuluOhL/YHkEQy7le7nzceQryxz
nPMfjfp54wX8Wj+vvvjbgRnyCjb5hxnt9er3pL9SmFG+HzPy3zv8PeLvvX5P
+nc9y4f3vzMjXgRDres++ghGu38ww76+PCXV2z669+FU73sz7KZR/IaZeOid
5h2PEa8uZug/lBn+Fwz9BCP+3Mxof3iaCnIwkObHgiHHqDTKn1R+dNqT66Ip
xBtovbOE5C9E/W0Vv0f7G9MoHmm+vpUZ9X/HjPK5zB98uv7HYzuY4d+TPuUF
o3+d8an/cpoKRD8PM/oKhjy/MqN/tRhA+ZD8Hcdsxh9m/BWM9u8MIPtR/Lw2
0Dvfgb+aD/Kuz9A/dw3y9tcsnU5GvzrY+x75rhUz5B8y2Fse9lgxmOxN+TeH
Gev77czor3uYYd+9zBiP/NKp34WY/y/CDP0rpqujnVLKxkXQfK0SvY+g9ioz
O+LfrMZ85t9arfpXZ4a9nktXb1Vc3fZ8U6p/Wbqya+RZNfKCjT8+Z4a9BDvN
nRNs8hezyV/MkHclM+wpGPbM8amvvks1f1qvtBYRB7lUcWfhMzfY6BvmUrs/
6vPygznBaozzH5qfW7J9U5N51L5mrNOyabwNZzb7BczoP4JhjybMkD/Cpapc
XDO2/VySXzDka8qM+GnmUnE99ZNN8jV3qUXdq/64VL9H/tXct+Sm5JKaMf4q
l2q9dGrZYdk0XxEMf7Vghj6tXGrbm7OeLTqX9NHs2lHZtWMuyRvpUpVnxTYe
NIf8p/luPT3gaHbcezDKpTY//+7v0R+QvzsxI040R054cdXl6WTPzi7ljFaJ
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
4/h9KcWP5t9oPMN8UDDsqzkf9yqp/lG2ud99jeQfbZvzgPsUn2Ns1WNrwPs3
KtJ6SDPO42rQfFtzqjNBrU3z/bd0Pjm7d/DoVjRf1Zzn3G+LpPWK5rXOfn4H
mu+P1fEQn9rsbBeaH4/T9th8IrFdPM3HBUPe8czIB5pHt+te7sIQan8CM+rT
jPsDY6h9zdg/fJvm35Ns9WxHPQBl03ribVsVCnA2hOj7yba65/j3a9rv0Tzc
2Q7x7M+8w2z2I23zOyLP/W3B0Fcw7DOFGfEhGPVPZUb7WbYKwISY3k9jRvuC
If9Mmv+Wov2bbFs5x9/VXqX9GsFmv44Z9c+31U3HXkG0PyPY7K/p+c/YN0KT
mtJ+5mKK79dp/0Qw/POZrcY566/xtJ8qGPlKsPm9iW32p5bT+1W2OR9aTftJ
OcyIT8Ho74LN706Y0T9WU/7ZQvs1gs3+ka2y4l64tT3fs3/EjHwoGPYWDPut
Z0Z8CYZ8632+32Cb+/X7ab9IMOwtGP4SjPnSRma0JxjtCUa+EAz/brPV53q5
1+Uh2VNzf907p98je2y3VeC8q3+m3iF7fM+M8UfzobUN1I07pI9gs1/FDHlz
mdG+YMivGfsXf9N5l+bBQbkL+98m+QUjXgRDvh3MGH9+tNXEiPwrS26GqWLO
Dwp32SpsTubCR9cpfndTPv2N6ttjq5Hztvz87zmKD82FHb+eI3sIRjzsZUZ/
0+yfUyM+9TTZf79t4uIQyS/YrFNtc//gIN3nP2Cry3eLV62/lfytGedX35D9
CpjN741sVedi66DOy2h/8pCtnOlk1rvU/hGyZyrFv2DoJxjfa8Z+fx/y51Fm
zFcFI38Jhr+P2+b8rAe9Fwx//8QMe5y01Uvjjrw4rjzJd8o25w+3Pb+vYYY8
p5mRHwXDrj8zI3+c0f527kNcoPwrGP4+Z6uyQd1HzNtC5w3nmeFfwWa/yzZ2
W0XvLzJDHsHw1yVm+OOKrRxzV5xL+7OCEf9XiTNpPNFcwrmg8z7p87uef++e
krrwfc/vT5jRvmDY+zoz+pNmR32/LNofFGx+/8kM+9ygfDGN3gtGvPxN64dJ
nt8j2cq5jjp3LMn3wPbeD0B/fGSrlthwovL/2Oq48zvdXBrPHzPDX4JRn2DU
95+tJuCHCWTPQhlm/DlD8gtG/UUyVGs92uc3pP5XNEOVdf4/mvqTYMRTsQyV
Xr90xL1eFJ+C8b1g2KNEhvnOTfFdJkNhujOd8otgyPMMM8ZHwYh3wWa/htns
1zCj3bLMiL/yzIgvwdCncoY5z69E+aJahhnfH1J81MhQU/7tHJt/mvwvGPrW
IPseJ38+n6HKNFy/6M88mm/VZEa+rcWM8pqxPthO8R2QoX66tbtE3S3U3wWb
++XMsEfjDJMPB1D8C0Z7IczQRzDki8hQnzr3axSVb8qMfNCMGfZ9jRn9SzDs
K9jcV88w97lb0vy2h46vBR1aFTz2rD+ZzX0ZZuRbwahPMPwVx2x+b8T8f1Jj
mk8=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdnQd4VsXSx5UminTpIL239NCZhFRaQkgCpOAbEhISSgq9iDSlIyAIgkhR
kKIiRRApglRRECkqguhF6R0sSPM7O/PfzPnIc5/L8/M9Z8+W2dnZ2dndmn2y
Y/oWeOaZZyKKP/OM+bcW/33VPujD4kN+Jl+aOsX8HcrnNo0rP3//4pF8LuH8
/4fFf2ufbv7K+9K7Pcp+Ny1M+dZN83c+n50fC+wa+Xs++9/5qF+d3260/ym2
ct7Nez7k/Oj8p5v5LM/fyucd282fsuTvdj4f+db8KZfmvzv5HMJ/f7fvdXd6
3S9/8iHOR7qypKcs+VeW9P7J5193LBoR76ccx38P27d74cf3c3b60KJ3zJ+y
5P9xPk/LCK397K/Kt4+sm5oR+iSfN6+YMy773LOSz1U2P8q+/Fcgn6U8ylKe
wpT05ld/NRjjQ+vWmr+n+Xn6JPx/o14a5EPnfjF/xSjZ/J5ky/tiPo/P7t2l
zTplKY8yy0d68Xzm7G0qRb+aZNv60Pp675WbGVKafno/p+0L7X2ohfkPXUpT
MMuTDw3nv9JU4/Vr3T5v50P3ss73+n6KMmdnjjK/f6Q0jd3wR4VO7VD/p5RZ
HjqXoTecx19ui/Ill6EuK2teatca+W/9Ej1j/nKsfCjL8y/Roz5fN397jC3v
S9TDO7PcW2/7UML3EbsDb71E/5wuvG/VRh9575lyVL3d3k+e2Yb8Fy1HLJa7
Ud+NlCX9chRc7WRQtZNWXspRhNMcn1yy9adc36m+QjvK0YWzGRVKPUR+9ynv
DnQq5JQyV+c/5ejoq8Oe3fC8L/V3shPxTHl6dsMavz+qon8OKk+vNPl3/9z2
vmSSH7OpPI1+yZGIBF+8X57Cttx7fHKEL8pXQb47yRf1V4F+/fTv4v2X+pLz
9r2sFRXobOs6a4tu8IV8KUv9VaA1tfadidsK/VK0opTvoK+Uv5KyyLeytE9F
emHHxt2Nv/FF+1akjqbBv7HlqUjZhwc/n3YE72+qKP+e8IV8VKQGpgMcs+9X
IhZX533TnOvTK9GMul/2vPsNyj+8ktTf175U2Cne+XeUWV2uUJb2qUTppx/5
rnKY5X2fsnxfWfpbJfrB9AenfNxvLypLf1eW/FamYSZb+fVXhVolrt20cpSt
nyo007Piy7eG2ueVRT9UISOux3NsfSlLeasQf3aQLW8VGpRt/mz7VqEb+D3S
CNy5KnR/2vr707Jt/pWlPatS+vLII8/loL5qKUt+laU/VKWpQZ4Lx/JsfqoS
q9k8yN+4qpTHf3Z8Upb2qEotBy47UWSUbf+q1PndB223WnndXlXkeYptD2Xp
z1WpZoe+k9dM95X+FFeNPpn1/MvfvuUL/VON0t6NODD1A1s/ylI/1WjhoDIT
d6+18q8s369Gk16cX23VJ7Z9qtPYrB1D3vrcfk9Z2ktZyq8s5VeW8itL+Z9K
72J1Mtr2w4+tfClLf1c2o3mB3jXIDEdtxyL9Psqir2qQI50/vj8G7bdEWfKj
LOOSstSPMufnE2XOz1Zlqb8aRMV/XjV4nC+NMgbEPmWuj0PK0r+URX/VlHqZ
DPkrpMzt8WJN6nJpXOXNM61+q0n9HyxfVX0t7Jv0mlT18ubxXc/4EpsrU2pS
T64oP8qs89viHptq0ks8oPpJ/ZyuKfqlup/U5zll/u49J72DuVUPevshP7Xy
WfJTi4z6C2/pB3moJfqpk5/UX5ayyGctMs3zQg8/ke9ytWljwrmKe0KQn0rK
0h+VJf3a8t02flL+0cqi95XDjcE2R5mTO1+b2vZqmj2jhh85tVH2u0Z1ZPx8
hPYMVBb5q0Mxn7/8+rVnUX/3lEUelaX96uYzt38hZRkv6tI2B7sV9aOPHety
cWBdunauZrfQosh/SF3yjjr5ZekX/NB/6sr4UsGPphtzc35desfn277/VUR9
rFKW/lRX6qUK8re1LlV/2fyhvrbXlfqvju/tUxb5rEujE3+4urAG2ueUsshH
XWrEf/j+RWVu76vKUl/K0t71RP78/KR+m9UjYvvKj1KKbfEUi69HC0wDxPuJ
fd1LmdtxRj3RT4OQ3nxllvMV9WCXIz9rlUVe68O+RPqV6pMxv14fbPNTX/TL
QNTf8PqU45iVjROs/NYX+y7efl+Zf/++Pm3Z4T1hajtbf8oiT8qiXxtQkfHz
O0x/0cpvA7p3oGi9Bw99Zb4xQ1n0mbK0v7Kp7rLrlVkcdzegn1Ou5j0siPIE
NiRjfo71hjy0Vmb5imtIJ7r0KdWzpc1PQ6obObdOZIyVr4Z0nO0Qqz8a0rjZ
yzfunWfbW1n6byOx39+DvNRTlu83ovmn7h4ougr9h5SlfhrR9rNPanRYaeWz
Ed3+8ECnwDX4/VtlyU8jil1wpnraaiuvytK+jWm20W/rbf9rTFNDytU894nN
T2OKyzy07btPbH6U+fsRjalulzUtHn4KeevTmO7fHdl86VbUz+DGNL1Udo9f
ttv+2Zhihy384uwuW3+NaVuvfjH39tj+2Jga5BSon/OVn8w3dzemNT5vhDbd
Z+WlMR0Z+cXx1nutPlYW/dOYnNSf1NiL9B4qiz5qks+iX5uIfv/Sto8yjx/1
mlCdcL+ZJb5E/2mkLPWnLPpMWeqvidjxu60+a0In6r96vP5OfL+XsujnJjSr
dOc/h2+0/UlZ5LcJTX734fUCK6y+Upb5X1O6e9wR2IW2vptSQ9PBF9r+/xRf
bUq3IC9inzajJQHHMgt+bMvXjFaEOgbXZls+ZSlfMxoxLu+5BlutfChL+ZrR
dMe8XP856rdPM6p95l/HxLH6pBl1Th702myn/dm9MFpZ5KEZjTPz2G+svDej
542CPuon+uBbZdE3yjK+NaNnzcT/B6ufm1EVtgf8RD/cUpb+qizypCzy05yq
G/12zo7/ylJ/ylL+5tT8i8srpt/0g72sLPXRnGpO9fs786Ydz5vTrWculIi+
ifLNaE7Xfy3a98+/rTw0pzxjX91H+u8os7yuUhb7TFn6m7KMh83p1fMR68s9
svXZnN4z7f/Y1qey6BNl0SfNaULlzV0uPeMv8vSCFxUdeKLlsiL+GHe96OzG
+IOFSvpL+at50ZVbaZ/tKO1P/Yw7pYkX+UyY+qRreX/oYy+6ONMR+Ar+6C9e
VHve92c2lkf6Hb2knuzzPbyoDn6X+lbm7ycqc/N5vCjFmV6dKoP007zoix+T
IhY5LPWvzPU91IsmjVzxZGYp5P9VL7FvS+H5N5zyLCtxdVkJpL/MC/XgD3va
iw51n9CmblHkf60XhVZIHvJ9YTy/24u8h257HFQEvx/2Ej1eCOX70YsOO9ZX
n+eR3z+8KL5y3s1NxfD9i8rS/73p4sM1d44X96e/zcTZ35smf5bd82ER5D/Z
m8ZfKvrSwL/8xB+WpizlV2Z57qcs9qsy53OAssxPlTk7ucoyHiiXMQ604d7k
WzF4Ys0/0T9eVZb5k7KMv8pS/8q1TUefosz5nabM8jZDmfPzlrL0L2Wu/wXK
0t+UWb4WP5Wfi970yheRLxZYZ/WrNzUy+nY16ruQD1X7YVfKjcXIz4vKMv74
0Bkzv5+N+m/gQ0E/eP2cPQ316e1D/bjcVh/7UOlHu0s+Gof8tVSO93NquLXy
Ofj1LHN63Xzocf99X4aNQfnjfOgfIzdDrf5SlvbzoZtrR08OibP15UNnHWvi
upcf7TTz/hU+Yt9XQnk/ULZ+Tsuin57ioz5UDvMxTu+8DzVq7YwI//lKear4
0hJnuOtzAvPFasqLncfL1FA21bujka/YV0fBHX2l3nf40lHjvu2uLOXzxXjq
K9+foGz9aJbZ/zvfV/yB83xF/lYrc/n3+dLFY7WcEQ/26QFlcXf7kh++K/aM
L+05vDx0y2DYt//6Um6tSvXn5qK8j5VlPPLLZxafAsrcP5v40QB2+Fn/nB9t
XOKM+P3hT/H3E3uwH9hp1//nT+yhzPlx5g0fGAXYAfXxgR/tdcylN32s/a3M
z2/zowfGoeGL/Dt2zpQ139wo6YP8nFCW8dqPtrboGX3cG+n/oSzjsWMnrC/9
X2VvWz9PcSV/GnWlnnfRJvAHVFEWeVGW/qYs/cWfzlbdfmRDFTzfVpnbt58/
9L/1xymL/Cib5NaNVOb0RyuzfEzyp2DjkCyN9Kcoy/xOmb83S1n0l7L0R2XW
rwuURX8pc34WK3N+/8U4eseHRpoHHitz+xYJoLV3HAPzNvzjLyhz/kooc3tV
CCDjfo+/A395pQDxX9/C+oB3gPTPm/DHUwB1N+PZNXwvTFn6awCtis9aGX8V
6fUKoE3GH/KHD+ypANo84EmlE3/AHz84gHqO2d9jzAX4719VlvFFWcaLANE/
f2A9Yoay1G8A1Tbd67z1/yuzGlkbIP3jd7z/kTLnp2wglaz84vI9x3ygzwJp
/pH2qYu+9RE7tV4gmer45Bu7XhRIfz9XqVHrb1GfgYH0Y3TvDiOPoDxtlaX+
AqnVr1EzFxxFfQQri/0USEOnXz1z55hdb1Hmz3VXFn0QKPLqMMtHL2XWj30C
aWTH2R8WOo31jbRAarN/9NvHT9v1LWWxJwKp2UrfIaFn0f65ymJvBdLLTnc7
c9a2TyAlNM2e4Tlv18cCMa5ifWdxIFXau6J8nyd4fpmyjEeBVC0hrfWv/yF/
HwRSwDynxgr6Sn2vCiTjDpj4ovUPBNKGwomfFq4C/bMvkDoaR+/LVn8ri70W
SDW7v7HtenX012+VxX52vmcmNjWsfgsUP1gd699FfTZAeled9l5ULLJ7I+tv
c543+rcRxpu/AqmG8Xc3xnj3TAtqxRNkjGMvtpD1kgZW37UgM32p0gDlq6Es
40MLGtr5tue9BnZ8aCH+tfp2fFAW+6IFeWecfuRbz/pblbk+w1qI/6w+ytNR
WcaTFpTRaeiWWJteL2Wp/xZkzIFu9yGPJ5T5e2eUeb5zUZnXZ0u2Il4/3oT1
2XKtyEzn39zoQx856qO2dyvRN2ttf1KW/tSKsgILfb9krdU/rSh13cU2yWug
37oqi/3Uiv7jBkF6PVrRrRdbRMxabfuLssw/lKW/KEv/UBZ7W1nsbWXpP8qi
31pRvyO+i5750PafVmSmoy+vhD6YoCzjRyvaPjwitvQKq9+e4nKt5fnXbXqt
8+1A0ZfKnP5cZUlPWcYbZVl/eOr9Fcpcvg1Pfa9jG1nP6Ij6OtSGeFm+DX4/
rMzy8J2y9Edl8Ucq83j5o7KsRyhL/1UW+0RZ5lNtYf/4SP8c11bs26a2/pVl
/qIs+k1Zxvu2dKO6o1CaQJ7nK4u+U+b3V7elXKNPmth4AWUZj5S5/J8piz/A
Se+NGl90b4rxbVtbabfGdj29Lf19KnK+dxOUb3db6Ccf0T/ftqXJdysf7t/A
rme3pfrD+tQfVgvp/duWChkHU22k97CtrJfURH0/bkvRMxcMKlPb2hvt6MUt
nmJbaqB8RZXFf60s9kc7+U5NOz60k/GjlpWndvTqceNwQ3tvVZbyKnO5t7ej
oW9VLBTfDPnbqSzjgzLn73I7CvXpWuf3ENT/VWUpbzvieJwc2AsvtEe7I706
7cV+mo3yNWkv+no1ytdMWfR1e7Sr1WfKbL8ltxd52mb1C37fgf6R3R5618pT
e7H3D1t5aE/O1y5v/h/a+7f2ok+vIv9X28v6803k97oywnnyWcrfXtr7Dn5/
lmjzoWG7lj6APBYman/yzw5d/rP6h8jr7Ud9vi6J8fBlIpOd8e0wvtZUFnue
aPKisauvhGP8aUQ0ZMyDn897fGmucST6kZQvC7+3Ilq8rM+6i3a9srWyrJMp
8/fbKXP1dyAy3Sdnpl0fVxb/OEHP2vVjIuPObLwI43MXZRlfiLoV835tzGI7
H6P89WoZXwjzLDt+Ej3XauCyE6tQngRlfj6D6NSulBtVtiA//YjeDKn80G8r
3s8kCvzo1b0/b7XzGaIFZv37C4zHOUTt/Ht/EbkD9ZtHdPRem+/u7UB5hyiL
/abM+RxGVPPTvH5zdtr5I1HErH6Vq+1CfYwh2lN/1p8Je/D9scoy31YWfUl0
2hhse+16OtGkLVeqRu9FfmcTlfplzbAOx5DfuST2wTHkbyVR33vfLaxX0I+e
v3/x1L51RFHP351Xo6T1Ryhzep8qczzVJqKt7Q9Fn64J/84XytKvlEVfKEu4
HpFxDzWu70em2Sv/j6Q/pOD5G2jfdPhbygaJ/3kxnvcOEvlaifR8lMX+D0I5
4N8JUhZ5DaJVi/fV+HSjXY8IosHPNRg+biP8PZFBGBfg30oMoutm+N/uRyaa
8FSSMqeXGkSzWGCQXlqQ2Fl74B/qG0QcH7ffj0z2n88JIuN+vXvA+geVxR4I
otfMApz1j68IooqlFnfs4PD7c5wOvFKZ5ftDZc7/GmXO/7ogOuyol8q30D4f
BdF6nm/iex8rSz0FkVef+Yce3kT+NiizvH0eRNt+Xz7p05u2/YOoZP9fP/37
Bt7fFUTjkH8u7+4g6nTww/VN7fOHg+jO4QLrm9y263XK4v9Cfd5G/Z4Iorcn
tUvbeAv1e1JZ7Bdljj/8IYgKNp5c/rStj9PKYj9refn7Z5+qj1+UOT7wXBDd
Zv0N+fpNWfR9EHl7OX+3UV93nPx81qreiNvw9/0dJPbQXdTf/SC6VOZQ5bCH
fvTDvk0r5hQNFvmt5i/5Lx8scT3N4f+uoCz+Azzv74/xQFnGg2Ayy9/NAuEv
r6Msy9fB1G/OjTHt/eF/p2BZbnd+Z/kKDaYRPI76Q38H07G6s/1nBPgTh9N2
CZbxtCW+3zWYRoaV/e2jlvhebDB9auaPrbF+EKfM9RGvLPOBYCrzYPbXu1ph
vaBPMFUdW4v6O7+zvklV3u9U17gMlLct8tdPWeYLwWTcBZ0dZv3WX5nbd6Cy
6Ptgatfe/OH7ecESj0DI37hgOn7nSv/pHfD7hGBa8XhVmwWE+pwcTBPMABzk
L/ppuVPfJt6vE/L/vvO+cXd2xHrMumAyyx1vdMT3PwkmMuNLZ7TfBmX+3kZl
Wb8Kpu82nKm6vQu+v1VZ9O1TfCRY4jdj8f6JYDpjWjwBfA/1NxDt92dwvh+P
7YVCHejV9k4GpuL52h1gJ1n5UubmrttB/D3v4/cx4L0o76wOsBtR3jnKYico
87/zlGU9Qlnqs4Os8+zxh35TFv2mzPKwvQP9bMIZd+P5Hcqiv5S5Pfcoc33s
60AnZg9emrwb8nhQWeZjypdOOR38a2WZf3WgJ5XvrC/9Jdr3+FN8vgO1y/3g
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
fJEy18/6WOwH9cL8JpaWJdOARkeQHxeLfRxLzU6djlnisPg7nfIbB+cR5M9h
9g9/i/JuVubyupjHx8+UOb9blMXeVubybo+lAgdf+3XYN/j9y1g68mbBonMP
If+7Y+lgizkzyn6N/O6JJRPemXcI7eXwsI+oYuZB5P8rZc6/w2eKnRsw4TDS
OxRL5hiQHidQnm9jpR/96CX984iy6H9lzt93yiK/sXRr9upa+854iX4/GYs4
BtTHqVgKH/RH2KA/UB8/KPNzLhZ5Vubyno5F3L2XjKcXYunf8dXvj69ux6NY
WT9sBX12U1nsrVixz9tAv9xR5nLcU+b8/6ks8UbKrC/ux4q/uB30i4vFHlPm
+YSLub0fKnN9/heLuAxvqa/CcYifQ/5LxYk898bv5eLkPMXeGO/Kx9EjY673
wXhQOy5/fOD+42Iuf8M4amkOSExHfhspc/4aK8t8QVnGwzjR1874y+fNBcfR
QWe6/m9fpNcxTvx5qdBvLpb5vLLEHyjz97vHYV0Fz7tY4k2U2V5+JY4uGXs2
Ee3hUebypiiLPajM+t3FYu/F0cWpDwKDe6G+Xcz1na4s46eyjJfKsl6tzPnJ
VGb7xcXcTIPi6Of2q14c7DDb5y6W9Z047NdGfl9VFn9xHO07eeHv53qhvuYp
s3y7WPR1nJy31xPpLVGW+VocGXPvqzjI61JlsT+d9t95Mfh4LNrbxaL/48gs
Fy3rjvr8OI4WbBrwpFJ3lPcTZdHPcVRo4xvfj+2O+tqgLPpZWfRvHLXeULb1
hu7I/2fKoo+VxX8RR9OW/DR1SU+0125l8bfG0Y29GT+V89jxPU6+40F+D8TR
PLPhpI+1p53+VaHU4o6p1p5W5vIci5P4ljSU5/s4ylu/bbZfX4zXLhZ/rbLY
A8qyXhYn87l0lOeHOFmvycD7P8eRCWf7vS/6x69OfzH7yhzm+dpvcVTH/KWh
f/0eRwF5tQPzbH/8Q5nl/WKcrNf3wfdczPJ7JY7+90rtJ/590J+uOuXl9TJv
0XM3lUU/K7M98Gy89P/BqA8Xc36LxlNI8z+Dmw/B888ry/qAsqyvK3N7lVDm
+iipzPkvHU/DFpsFZNRfGWXxx8STGd3ihkO/llXm9MvHkwm/Pzoc+rBWPM49
wvsu5vqtEy/nQYzG+/WUWX6bxtOCy7fSPhsDefJS5vHKN178oyMhHx3iEf+J
9EPixZ8/FP3DxeIPVhb9rO9zfuLj6bxpn5HQPy6W/UjKXN4EZdYvSfHU1Zzn
O9rq43iJ2xxp9bEy52dgvKQ7FP3VxTLfjpfxbxjKO1hZ5t/KXPwh8TS0xOqg
M0NQfhdz+kOVubzDlFk+XSztpizz9/j8c264PCOVxR+tLOs9ylyeCcrcnhPj
Kctn97t9B0M+J8dL/GA/q6/jJV4uDPL6DtqvLeR1kTLL52Jlsc/jqTUbtN5i
Py1RFv0cL/FBgSjPGmXO37r4/PmExAvFi/+7GNLfEU9GHP8tbPWrsth/8WJ/
XLT2XDx5mf3kF2Gv/qws/l1l8e869R/93NDoS7BXzyrz/PmXeJp57u3PWjnP
s746pyx2qLLE/yiL/lNmu+tiPL1v6tthtvcuK4v/L17Oy7kAe/RGPA3K/XTZ
B78j/Yfx4i85ifQd7l79+uevH0f+H8XTk6A3Dpc4AXv7cTxtP966YInjsJcd
rmbOG7XznSfKLE/P9KADjvnf73vMZ1ws6yvKEr+gzPlxsfgDlSXeSZnrr4iy
xDs9lX6xHhTjzF4fH0P5Xuwh+uB7zAccbvvpwwVznd9Zn5ToQcX4/DYv6GNl
1ieVe1Cc2d7/DeThaW7Vg4y1W+ontEdrZU6/XQ857/gW6jO0B5ntlWlVIZ9h
PUQ+68K/1LkHFTTrZx2s/0WZ2z+6B85vRf+N6SHxtNY+iFXm78UpszzG9yCz
/TJwAPpXrx70njmQbzh+791D/GnToD9Sesj5k3Px/XE9YKchf7N6iHzNQ3lc
zO3zprL4W3pQf+OgmAR9+EEPMuGHRVKQ3qoeZLbzPfsK0nOxxCMqs/itVpb1
WGWWv7XKMp9XFn2izPkrniD+w7t2fVlZ/NHK/D0Xy3woAfHjOO+5vDLbI7US
aOu6m9XKlLPxb8oyP0qgQWe2DDxj70eolyDx9VURb1FfWeZLyjJfUmZ5aKLM
8thMWcbzBGo+/qOUzdUR7+BilmffBCqd3eOX1nXw/fYJEs/a0lfqIyiB7H0P
XB8ulvE+QeyJDjbeQZnz2ylB/HfdbLyDMue3a4LMn/PPh0qg/V2v7+tq40F6
Kkt8vzKnn5hAR8r+lT0pD99PTqA2ddYWvTPMnieuzPLXO4HO+15/YfZoG0+n
LPOzBBk/JqB+UpVlf3MCBV7Y5kwJcP55ljKPDwMTxN8yA98bpMzly06Q+exc
nA+fo8zfeytB/GNl/URfLUggc5xhfDE/aY93lMV/pizrWwniP34O8fsulv6F
773gJ/W/JUH8vQ2w33JbgujTpna/gbKMv8riP0qgDb+X7/iqlz1PVFn8R8ri
P1Lm8u5NoD3GzvDH/gOH7w0823dbC3seqTLrdxdL/IUy17/DG8x+nTbYj3BA
WeZPCdTdbJBsh+ePJFBxDpjDforjCRJ/k4D8nEiguxzv5yfj76kE8VfmYT/t
mQS6Zo77mW/3wyrL+jDSW4T9IRcS6CU+GBnvX0sQ/XvcD+t7CdTJOFzO+Il+
uZkAu8KeV6vM+vq2Mpf37wRZTz9nzxtVFv+RsuxPUxZ/krKsLzv54Q09yG/B
RLHff0N5iifSJbOhbCHyWz6RBpvlpXmQLxfLeo0yy0vFRErggGDkz+FL7baP
+2ke5KeSsqzvKHN+qijLeo+yrPcoy3pOIn24vmmJ8vb7DRLpe3OA5hx7PmKi
xDu8iff9EzF/sfvhE2V+HYLfQxPx37EfqHMiOdr113n1UT9dlGW8Vxb9p8z6
JyaRmu4633hXLchbXCL1Hdfym4vVUX89lEUfKst4nyjxszVQXwmJcp9CLbv/
PhHjEto/JZEmjdh+9Zw9f6CPMuunfolkjps+WRfpZSWK/m6I/ts/kcK8vv/1
60Zo/0GJWAdD/sYlin1fEvpsciIVrfegda8b9jy6RPF3/gF9ODtR6nEf9Otc
ZVnvUebyvKXM7bAwkX4P8ela533o3/ec731UNSFtMfTvUmXO76pEiueGxHjg
YtGXypz/9Ymyn96OhxsS5XyBdhg/Njr1V7hutaXtkL9NyuI/SpT1uLbI3xbI
Txt7nmEi8fKsH+J19yRifRzfc7GsFyXK+ZB+Nl4ykT5l8cb3XMzp70+U83J8
Uf4DibR5WuS6hX4ov4tFHyYiTszGTyfS3aQCvfY2QH5OJ9KV13tfft2eX/Zz
otz3Uw33zZxVlviIRJqeMOXf36vY/RGJMj+vhPpyscTPJNLCb554960Ie+Fi
oux3r4L2uKTM9XhZWfz4yvz9q056HGdnz0dTFv9+IpnR8cfqqC+HzXHGY2rZ
eNJEqfd6+P4tZdG/iXQx+Pi8ab4o/6NEiSft4yv9+XEifdWm239h/fD8k0QK
RLyrzJeSqK8Jt5uK7xVJwn4+u/8jSfyvq1DeosoSz6rM8vO8svivlGU+lUSf
joks//t6G1+eJPuTT+D50kmyf/Ua6qdcEk3t/uWlt++jfhzeb+Zn9r6GCkm0
+N6QlcOLQJ9UTkJ/sfo5iSrvCXmtfifox2pJlDvJZ1RiPN6vnoR4eOiPGspy
DlMS9vMi/VpJZLRdwFDoy7pJtNys10/zoz0m0LJBEplw0Gqboa+bOuXdNttv
5Xmk550k5+G+4C/v+yeJPeSF/bEBTvn2TJg7K8qeJ60s8YNJOCfHX+yzlsoS
L5kk/oV0ux82if4pMbVR8BjsBw9OQtwf9rOGoX0W4fsuFv9ZkvhHDvlL/+2a
JP6oi9jv2j1J9NETf5G/pCSxX8MCpP7TkrA/LwDx6UkSP7oiQORhdBKtMhW+
JEDyMzaJfho465eLCwOkvsYnyfzXYYlnVObyTVHm56cqs/6YkUTTzH7xOQFS
3zOVZf+sssw/lSVeMYlMOMqSYQGwb5OwXyIA671Jcv5RAvK3NknO54jD+w4f
4fMcUN51SRRmzs8ODcB6bhJ9ZvbH+yH/G5Rl/T6JLnTaWPG1ugHiH9uWhPEU
6X+RRFnmAMSXkf72JLlvrEoA/FlJ1PHjkx0/filA2meHsuyHU2a52Kks9nGS
+MMLoD73KYt+V+b6+D5J9vN97S/66scknL8HeTuXRGb5f0t3nEfwvyQaYyaA
rdEfLiTRUd6Xhf3k15Jkvbw05M3Fsl9cWfxVyqJPlUV/JtEfvQfXzHwB/eO2
MtfvnSQqYRYEC+E8h7vKnJ97yhKv5shbwfa3C/5n7VtlsW+Vuf5fSqav+Tx0
P2p/5a12V6ooi/88+f/vX26SLPphN/S1bzKVN9ODDb5iv7dOFnvnTbufJVn2
j0yBviZl1h8ulv6fTOZ4uRWv4X0Xs3yGK3P9RCqzPdZJWebbytweXZLpf7zh
HOWJTabb5rwgu5/LxXEyoc5n3mf9SjJVNBOUHhjfBiTLelCg3Q+jLPokmS6v
mN7siwawN8Ymi76pZfcnJJOn9hP/89UxHk9IlvHuZXz/dWWWHxdz/byhzPUz
WZm/P11Z9u8n036j4Krb/S/JFDbFeGjQHrP1eY4HnqMs8UfKYo8qSzxzMg0w
7u4biJ/cpiz9W1nsPWWun13KMp9OpgJ83hLi91ws9mEyfdzneKN6NxB/+5Uy
v38smWLNvqVrNv45We6Tu4Z40hPJsl/wKuJVTypz/Z9SlvU/ZdEnyhJPocz5
dbH445XFflQW+1FZ5tNP5e/sU/n5O1nGxy/s+dC95V6u1fDnVVIWf6+y2CfK
4r9TFr2uLP47ZVlPUxZ/nrLEW/YWfdvX7h9QlvZ9Bf5eG8+uzOP1t0/9Xswj
8a92/5CLOb8lPbL/qTL6g4slftIj+8/t/iIXS3y3hzgcuxbSr+CRfVz10F8q
Kst8XVn2r3joXXOuoxf6q4v5PrCqHpph7kHyx31qNTxkhqfMDr5yX0pNj9i/
kb5yf01tj8TDxiK/DT3iv4qx5zF6EP9t9bOHPnk7MMyrG/prMw8tMw7oMOhX
F4s/1CP+3WB839sj96m1xn1P/h7i6y8b2v3DylxeF3P9tPDQy+Y6z5pI38Vc
focDZvy9+G5VX7mfpqVH1scq4z7cVspc/tbKnF4bj+w/qoD0XMzlbecRf19Z
tH8Hj5z3VwXt6WJZv1Xm9F3M5Q/1YH+Gr9zn5GJZ71Dm8kd4qLhjfl8l6OeO
HvJmP7Dd3+bJ31/L4thFmfPf1UOBbN+hvRxm/529L9DF/H43D835sNDIjrPR
Pi7m+oz3yPrZx7h/uIcH+7SsP1lZ/MkeqmTmJ9esf9gj/a8k/E2vPMWpHokf
6AD/S1+P2Nu9MT9J91BttpPhf+rnkfNy1sAflOWhd8iZgKy395946NeKTgYO
Yr4y0EM/7OywYtox3KflcNnHSz56+0fMnxyuivuEuP4GKXN5sz1iH9/AfCpH
mdPP9ch8wt7vk+ehb5abC5lw/9YQZVknh3w9B3tuKOTF3h8zzENNTHxCBdhn
w5X5eyM9OA8X86dxqL9OsCene+S+uWawB2d4cB4uzlua6aGPFm6eFtkY33+a
53jojd6XX+/dAPbiXGUZrz1yfkx1zK9czP3lLQ/8Df5Sfw6f7F94aYsy/tLf
5nmoxIvmD+V920PLeYHLX/S+i/n3RR4qZe5HsfcZuZjrZ7GHzPVNzR5g/uti
iX/10DazQPgv7NF3HX01r0bU83fx+/se8U/egH/yA0c/vvxt2b9u4f4mh58z
C9j2fEgXc32uVOb6WqXM+XUx3+fkYs7/h8p8v53DK57MjA67BXlb7fTXjn+8
WuGOPU9Tmc+tX+shcz3X8rv2PjEPNVi/fMcbd1Ef653xo0v0hrh7KK/DS3lD
FdL/1EOF+w1sPuIe+tNGD/YzID2H79w2f8i/w4nGQLf536TM6W1WFn+dMvfv
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
4PdjqWLPT0L/crGsZ6XKeY2vIT8/pOIcS6TncP+KNwIv2PNKf0yl+7zfCeOD
izm9n1JpSqPgHclD4X93OHvw9YCDg1C+08pcfy6W9fZUMssFV9JhP/6amn8e
JLfX72jP5mify6k0w+wXqYfvu5i/d0WZ+99VZf6eiyXeSZm/d01Z1vNTybiX
A+16z3Vlbi8X8/dvpBLd9K8wt56Nn1JmeXaxrP8rc3v9mUr1H7Tu1bQ5vv8w
lQ6aAMFK+P6jVJkfl/IVe+FJqviTCuD5/1Lpy5QbVX54AvuiQJq8/y/sIxdz
fRdMk/uzb8PeKZRG88z5pHY9tnAafWIuYLlu74tLoxBn+v7NDaTvcJM5/yTv
s+uRRdNospHnK1jfe16Zx1sXS7xVGn3E7WDX85Q5fy7m9IqniX/8GvLnYs5f
iTT4o+x5Tmnk4Q1c+F71NJk/TcP4H5pGpfwfR594E/6BMGWxR5S5fl3M5Y1Q
5vHSxZy/SGWxX5QlfilN9MkM6BMXs/x0SaNoviAG/uEY5H8U5q+xaXTS7O8d
jO/FpWG9yMbHKosdrSz7AdLkvPpJyF+fNIlP3In8pKdRU77QGvotQ5nrw8Vi
TzzFk9KojOkXc+z98soSz6DM+XMx188badTCBNROhX9gWhqN71F+RN/xqI9Z
adSV57vI35tpYg/mofwulviGNLkPOw/z+TlpEj8wCOnNTaMFfF8Hyu9iHl8W
pOE8ALT3wjT6a7gzYe4Jf8CSNPE/heOe7vfSZH7ma9cX0kTfX7Dz4TSxb/dA
X61V5u87bMyjt+396euU5fyNNLq8c8y5bz7E7+uVOf0NabKeuwL6byPqY66N
v02jegW/7RXwGvTJFmXx3ytzf9zqfJ/vs7fz3zTK6PzWsxcHIH0Xc/6+QHky
kb/tyhL/pSx+e0f/tKZtBWNtvK8yy4uLuT73p8l5Of42nldZ/P/KMn6myfm+
FfH+EWWJD0mT81aKQ7+7mNvbxZzeyTQZjwva8S9N9PNvNr5DWfz7adTFHMd6
Dr//oizn5SnL+Kgs6wHK4g9PE3/ie/a8M2V+3sUSr6ss/u+0/PM+mf+x+tGe
r5dGB8x+vdcR7+Fi1p/P9pV4ukw7viiLf1yZ5atEX9jnmH+/pCz+X2XxV/RF
fD3qz8Xc32oqs3y4WOJjlTm/LmZ7ok5fCujtWOi1rH9DWfwTfaW/l/CBP1ZZ
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
B/3JHFe0LtKeH64s/mplzp+LOb1Vyqxf1yiLPPUnE26c3dlb2uer/lL/BbxF
P5ztL+sZj3H+fZMBOF8I5827mMsfMEDk5H3cN9BSmfVJK2U5v0VZ1qMGUNTz
d+fVeNNL+lOnAXL/8Uycf+9i8acpy/qVMuffxTLeKst+IGXxtyhzfblYzp9/
6n2H5XwznN+fOwD7JL1gjw2U84s7eUv/rjFQxr8OOL+9pjKXr7Yy6wcXS7ya
ssSrDcT+JOzvczHXf11lljeHp/ABfNh/WE+Z+0d9Zc6Pi7n9GyhzfTUdKP4u
L5xfHzwQ5/ChfToo8/sRA8U+3IX7DzoPFH/2Tty30HsgzuPDfQpHlSU+fyDu
KYV8/DNQ+ksL/O5irq/7ynLes7LMb5S5P/cZhHOym2N9UZnLkabM6bmYyz82
W/bT/dUM43W2nIeXi/QmZxNfL/BBc5Gvqdk0bEtsRqe/mot8TcuW/WuFIF8u
5u/NUGZ5npmN84a9KMXM22Zn08jUQmUft0V/cLGM18qyTqws58Fky/wuEb/P
z6ZipsEnQ75dzPLrYn7/7Wzqtbfflw1tf3gnm6qa+zM24PdFylw+h3k42Gbv
O1Tm9l+bTeZ6lnvfQT5cLPHR2XTF7E+z92GsU+b6djH3JxeL/lOW8VRZ1veU
5f4sZa6fDcoy3iqL/0pZ9i9n414p6MsvskU/XPOS8Wt7NpnrELbcgPzuUBb/
krL4k5Rl/FYW/1E2eU8q0qHfbXzvQDb9XHjfquO38ftBZfEPKYt/SJnr+7Cy
rPdl0wJzXtMte5+hsviPlMV/pMz1d0SZv+9iiadR5vK5mPP/Yzb2Y0F/Xcqm
QsZBWw366rKyrJdly3hV2d7XmU3Pbljj90dVjK/Xs8WfUAnP34Y8VsL+6jvZ
uH8Y93fczZY4loq4n+RBtoxntb3JXEscXzgnP3/MxXNwPiK4XI6sn1SAvq2W
I+m1QP5r5NDplKt5Dx19v9icG1czh8xxYsu6orwu5udr5VAlPo8S47+LuTwu
5nuTa+eIvuqF+nAxy2OdHCplDuRJsuOLMpfXxfHGsHCxjD/KXH8O8/lvKd5U
22TAxZx+vRzKxH1MXL6GqI8pGL8c5vPDVqC8jXKoxzdVai9cjfprmkMFOSAL
6buYn2+WA3sF9eEw7y/di++7mM998cuR8Wcl8h+YI+dvzUJ7tMyR8wZHIb8u
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
UT9oz1bKXP+tlbm/tlGW+cLgfH38f3jznh4=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxcnQd01EUTwOlFuihI+6R3kEACSAmTQqghCen1LpdcEoogqEiv0kGl9yrS
kd67IlVAEJTepPcmHfz+O+Xmb/J4z/fz7rbMzu7Ozs7ulnN1be/OliVLlqlF
s2Qx/922Ff+a/fJP1YTvfvaBkSPM36lmDX7vkH3WBh/Y1WBl5dkfnvZwFvy7
2qz9pv8NvbPaB5YtNX/Xm3nXs/7W+sCD+/jXLND8LfCBo6OCsu3o9cDDDw8v
G5ne/GGzpu/99cPnsyQ/5cO/mb/HHr64bXrPKO8nHr5w3vw9ofJM9oHlVmoV
sj71sPf7Joc3zapZtflnhA9E4t9byv8bH/ga/7LAwnI3fLcO9AH8/4FZ4esd
c0p+0k++rxzcpEbJvD2VX1w/uWdt+WzwZd7UAj9YXA//lJPMD0ZmAyymxdOn
mT9lKr8yySvz59nB33nt9/J95HPlP/esnT8uSw7Yenj12dJ9RH45wTRH2Ofy
eS5ql44+UB7/csHgSQGjO6dLeZWp/ZUp/3ywYnKDoDphkl5+D9PvlY14XqQp
U3kycwEPkzyUsX5dCsPLX8c7an7qA62Mwl0oDOsHtSt109sH4o613NXggXIR
8zeuCJfDB6KwwZVRX08qY/553od9oaeTb9f1gb5POl6JLaKM5SmhTL9TNto/
NlAZ5ZOYmT+Alpd7f/BTFdEvZZPdsRHKOU0BpiljdxpYDPJZ6t30PZFXMcjd
6LO5f+Ti9ptfjNont/S3YvDrzqA3nXJIexWDtXEXPtptcZr5u14Mcsyqb/UI
qV9xaPTt3w2/zS76oEz5FYeFM/aUXZVN5FsciuWpcC8mqw+MzWEVeH5x+p31
eTHzP5YWh91Vvn0al5XltVaZ+m9xGLHw2OUq2aQ8xWHqlnPvymaX8eMjSD3w
yeQ3kl8RZSqvMrXHR/w71tfGyphfW2Xszns+gp/NeJZNyqOMzfP8Iyj5yfmK
ubJK/yoBi4c0WjzklTenX5K/5w1W67Xc9XVJOFnnTNeDT7xZXsqUX0kYW6Tt
068fe3N9lUl/S8KbegsPZLG+T/UrBQMqTDx29rHkp0zjUSlYZvrHI2+unzKN
T8qYX5pyFUtdc2wrBd3MgPnQm+VSGnx9kra0usvlz6OMyZ0sDQd6WAPcA29u
jzJgtK/RPSmv8rr54wZ2vfA/KH1z3aB2Z6W+ypTfxx6m/qZM9VXG/hqpjP0/
SZnGB2XqX5nS21oWUocvOXTvqDf09nm0PGOPMtZ3vzL1F2UqvzL2r9vKJI9y
HkZ5fVjuv7+vrEz6Wp7ksMsbOlS8NCO6XgUYbA1f63ZLeynj17/IzBU9v6f+
VRE6oSJ6g6lexV3KVF5l0tuKYGbZCrtZPq+VqX0qQcN1+3vs2Cn1UUb5lFG2
Sl/0aMdK0DrgSL8e8vuBleDbKV3eH7JLfl8ZzHRbdRuXb2BlbheW3zhl/P4k
ZRrPKgPO79u9wYir6Eplk9ylxlU86WP+oIzyeVIF2pmJaBP3l/xVSW83e0ML
y/rwKVIVGuzr8sXdDaLPVWGzmS+t79N4WBXKG3Ngk6RfFZ4Zc2g9yyNRGb/u
qgobb5UOHbKBy9+xKtVrPfffb6pCy8ZRZces8waT/aMxVaHQ3Xc/Vlwn9a9K
erHWm+yjaVVhffCNgSXXcfrzlVFdFlaFvh/81OLyGtGHqvBFvh99T63m71+p
CsvGJIfls3im1VyjrleFI39MulBiFbff7aqQM36V9Y/70/2q8KTkwU5VV4q8
qsGV9c8/uLWU61O9Ghz6NfvWAUu4/7SsBpZ1Vf/3JTIeKWP5Y5VJXsqk79Vg
p1/3wD8WS3+uBt9Y0v/fj6JP1cBMDwE/ivyUabytBijOHzj9WdVghJ9lEM0X
eSmTvDJ9fqUaHCl/9mX/6dLflUke1aDS69sLDk7l/vqkGnw2Mnznjck8nuSo
DlEPR1bYPpnbM391Smey6L/1+chtD8pP5vRqV4exT+OsKVHGA+UVljrPaFAd
Jp/9OHXxGO4fYco0vivTeFAdzHToGin9qTrZQ9+IPKpDzl6tv19kcYzV/EHz
lbE8P1WndIbw+LCxOhjzo8UgKW8NsGbDQZOGSH414GTPW5W9RvD40acGmO5T
f7i0Vw2IfTy60s4R0j41oP+l3P0vDZfyKVP71IDxFVuNrzhS2keZ2qcGNAyq
c+ziSOnPyjR+1YDQ449udRot41dN6GP6wyiZz2qSXo6R/lwTGqLhxvVtUBPS
1m/zGjxSxsuaMLrzjddLusl4UAtejFr5YlRXmZ+USZ+Vqf8rU31rAa6Hukn/
zsy1yT7vKeO3MtkPyqhfvyljPQ5/QvbicOlPdcBUv/dEkWcdKH76yPPwH2Q8
rQMuozDzub8urwN1jVx/EH1QpnFLmcZNZRqnlVEe25Uxv4N1IN8GZ74Nczn9
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
zOd/4l9SJn+CMq3PWoDfogJfngH2J+VVJv9YC1oPtPGh+apaC6i9sdn+0Fgf
0rcaLcj+iOP86ipTf1LG8jZpARXe+VxxpLA/0leZ9F+Z9F8Zx6eoFjC00eIh
jTLY3xOtjPoZk4mntqDxZCbXf10LyLp6iffVmVy+DS0g8G2peWNmc3oblWl9
okzrkxZQy/ib57D/aJsy6U0LCP/7xxl75nJ77FYm+zbT58cyfX5cmcZHZSz/
CWXaj24B/5q/ORKv3YLkJPXJ3RL2jTcOF/F/KlP7KtP+WUuOj5T2VKb2aEnx
zj9z+ZNbkj35C8tzckvaD7ou/jhl8ie0ZP8G1+8HZVpPKuO2z+pMn29vSfvN
z/m8xJmWYMKtHj3m8l9oyfHJou/KZP+3BNwefCD+5JYUT/FA9oOUsT0fKpO9
0xKaD6iy7No9lt8rZeo/raCDie+5zfm9p4z9N18rOGbiA29z/vmVyR/fCqIP
laow9SbL168VjddvuHxJrdiO4/7XpxWXm9Prm4m3tYIzL60F71P+/Q5l0ldl
sleVcTz6VZnGn1YUH/aU2+OwMsW7KJP/Uxnld0oZ5XWrFWAY2B1pn1aQ1QQQ
3eL6vbbqszbfiOBrXJ83rcj+vir7Xa0hxWyQ3pTxrDU8CfWP2XhT/P/KpO+t
4as5idDZ0x6t4fGivW0a3JL2UCZ/VGvI/3hi2ZBbnN8HraHwRZ/Nc29x+sWU
aX2nTOu51jDG2E+3ZX+7NfTg/DH9/ylTOHhruNd5yZHJt2V/RZnsmdbwhdFn
qW+l1lDsQWzr9Jssz2qt4ds/M8b+eZPzq9Wa7IWb0r+VyT/bGpb0CCh8/haf
R4LWcKXlyg/7XmF9CGgNTrN/cVH2q5TR/g5rTXH4x7i87ZXJPlFGfYpURvlF
KeP8Eqvc0ThKprVmPZX9oNaU7laeT+5a5TXjxGau7z1l6r/KtL+ijOV9rEz9
SpnWO8pYvpetoVPtisFLNkn/V0b5vrPkbwbIjSzPLG08TPraBtahgST6qkzj
szKNJ8rkv24DZlobuFL0pQ3UnzRs5mvZDy6vTP7oNnCRz3+RP1oZ7a1gZSx/
O2Usf6gy7fcqkz3ThuJJY3zI/h6iTONJG4iofsS3bxDP33uVyd/fhuIRArm+
B5RpvGkDw3H9JedtlGn8Uab5U5nmT2WaL5VpfGoDn1urhzUBLI/zbWC0ie/2
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
GeX/bQTsxnss5bymMur/xAi4yusFrM/MCLI3/Xg8+TGC/VwyHitjey2JgNdm
PHDJeUNlWk9GwPQ9ZVd1z2D7ck0E9DLt35Hny7XKmP86ZdL/CDDHdS525frs
iKB4kgHiH4sAM73X+UbsFWXaj4ugePgJsh8XAUsO3StUdyKnd0SZ/LsRdF5/
mqxvIsj/O0vWNxGQVmPIv3tmynomAox3OXUGl+dSBFQ4+7J/x5myHxcBM1OM
hcr2lY1RXlciIKTu6oLJ02W/LgKM+hSfIfZSBKw149F0sZeUsb9di4AIExA5
g+evm6wfM8Vfp0z9NQKOJu+MGyLz7W1l1K+7EXCu3q9Nw2eK/1kZ638vAnJz
fVF+9yOgx+39Nb6cweP9gwhYZO4TnC7ruwg4XnrbqlfTZH2nTP7qCDDdrbTU
/0kEjS/TWT8s/inX0SJVp8v5wghotnXgqYjpsh6MgA1P3p7oOU38hcq4vnoZ
AavNucMZbK+8iqD9N8nvtTKmXyAScDks8Uo2pvgXZWzvj5QxvxLKFP+pjPIt
rUzxF5GA2yKibzUj6bxCCMuvTiTd1wrMDSMp34Zi70XyPbGcfpNIMOFGx2uJ
/zvyv/YKRMKf1vK7cknW3yBOrzDbdy0j6b6Tgtw+rSM993OiPraNpPkkl+zX
K+P41i6SznvIfQc2xvxDIykOWe4TaB8JJXJEFawl9w/YGNOPiISV2xe1jM7K
8o6JhEHRxXq6s7J9Ghfpuc8Sf29j8t9EQg9zfjUL60eSMs4Hjkiyb8QfmxwJ
awvNSY7Owu1nYxr3lMkfGkn+CfEHuyPJP5Sd5ZGmjOUZyvmd5PlpWCSN1/vY
XpgQSfbTVp7PJimTvRwJGH61UvyDnJ7E906NhFgM+BP7KRLMMYh2M8SeiYTp
OP6I/RIJpeeey3pwFt+3tSQS8lvm7KJZnP7KSKi8K/bJGDn/tMbSLzNfSXzv
WmXMb70y2SvKZJ9Ewt/mgtRF4j+MhKapa1a2W8r20+ZImGf2JeS+H4truybt
f/2T3MeljPq+TRnlvUOZ9lOUMf+dypj/rkjyL8j9gHsjIYzv30F57rfa7yP/
IeXWMd/k/nCQ7YPbyth+d5RpfRoJZrnquMv+wzxRNL8+Ynm+l4nfjwK8z/kZ
51c1CjDcPQf3HxujvKpFQYERwT+Wyy3rRWXab1CmdY0y+UuVaT8iivwz+Vn/
bUzxlspY33pR8H21XxKeif3hrYz5+0TxPagyXkXR+qio3McRReuX/8n4pIzy
8I+CfserWP9k/RoF981+dSPZv4uCtWZ/q4X4p6I84yf5p6Jgh9fgke/ayXgS
RfGe7SReMQrm8341+aOiKP4shr9vMc7X8WyPuKM88QG4vkuL+u99BenKOB9n
KON41THqv/vPmbl7FIQO2XCrdCiXr0cUDDxnIri4Pn2joGCtNbMeyP0kNqb9
emWU50Bl7N+DlDFfG2P+g5XJHo1iP7nEw7J+1pf9zCgw7soN9eQ+ZGXq76zf
XiyPTcrYfqeiaLyvK+tpZfI3R1F/qs7pXVT+avNbv2HXlcm+ieLzY+L/jYL6
eIBa/L/K2F/eKtN6RZnWK8pYv+zRMHDsi79GyP5anmioM9laAMj+WV5ltPds
TP4jZerv0XQeLQeXt2g0nE6+3f217DeWjgY0Y/Nz+5VTRn0qr0z7k9Fgwgka
FmH9sDH2w0rKWL/KyrS/rkz+ZGUsf3Vl8l8pY/1bRXM8tZwPycRh0TB85uu7
2a7w+ry9Ms3/yjieR0XTOu0Kyzc5mtaPct47JRo+q17g0+envcEco/myYzTN
p3/J/bTKKN9OyiivzsrYv7+KpvnglNy3nImnRLN/W+ZbZfKnKpM/QhnLM1+Z
5sdoeFc2wD18Cae3SZnmP2WKK1Wm+S8aeuKCVfbXosFcV7rvJzm/Gg2djQNo
Bcv7Z2Xy3ypjer9F0/mY1XI+Kpr8p6t4/X84mu4PXc3z/cloyGEMoFVsX/wV
DU3MeSqZX09x+8v5ltPKFJ8QDb++efTZOTl/dCGa/Ak/yn0TyrQeiiZ/549c
PhuTv1iZ4hmiPfdnor7bmObzaLiwc+I3vgu4v96KhtQ3kz45IPfn3lZG+d9R
pvlemdZH0eBvHIJzuTw2pvVSNN0LMkfON0aT/T+Lf/82muY3ua/3XTSdz5sq
57djeN9YxpMYsKwZy6Th8uWzGA8Min8lBmYbg3gyp1cwBhZ7Xz2XPkXOM8ZA
0qMPHY8myX3fymjfvK9M8X8xMLFsSN7HE8X/EgMFZlcIXTdJ7gOOofFI7mct
pozzpY0pvjLGc58r1qdkDNSNrFN9yQSuT6kY8p9OlPsxYuBD/j6Nj8qYf5kY
2H4ruGvvCXLfgjLK7+MYyOr3foe7Ezi9CjF0PmM816diDJjjkc8ncHqVYiBj
l1/3wAms31Us+d8bVnbLBJZXtRiyV+T3NWNg54aGMaHjZT86hsbHcfy5dwyM
MhmO4/L5xND9QeNkvzoGXOEd9m/+jssXEOO53xf7b+sYOk88TMbDGED3RA8Z
D5XJnlGm9YkynReLIX94Dzkvpkz2RwzZa1/LeJiJp8SAcVe0SeL0Z8XA3OeP
e33i4M/nxEAhs55IFH9sDNweag44i781huKdEzm/hcrkb42heOsE8a/GwMwj
WX0y4rm8Fss9hlj/ZTHQo707/+g48afGwDGMt2R9/CmG+lcc139VDOxPdcyK
iGV9XxND/p9Ylt86ZSyvjVGfN8RQPEOsrF9i4BHG08n4HQOjV74YtTKG9XtL
DBT84e3CJtHsz9waA7fM+iiGy7s9E5+PofmpBY83r2PAiLu/l4wXMfR+RV1e
v+WNZX8Alz9/7H/PTxdQJv9GLN1fU0/uN1Emf6oy1q+EMu33xtJ8VpL9+05l
2n9QxnZKiSV5lZHz/rFgGedRh0px/jam/dxYcJv3BQqxvL6I5X0SuZ8iFibf
eH9/yVycXn9lsn+VaT9XGdMbEgt5H/U4uT07l8/iCrhPKPFBsdD/1Zkrzqz8
+5HKtN+hTPEbyqiPozPxhFiY+TghW2x2OX8aS/7KHLJejyX/UG7Z71DG/jBX
GdeTczN9vjiW49tkfa+M+e2JhS13Pw4f9pLvUbUY485e1aP2/FUZy2NjLM/e
WJj0V2hSgPV7Wi/Hkv1tfY79fV8sJJl4XetzWj/Heu5RpfMUyrS/pkznK5Qp
XiUW3nzV6tovL+rx/psytt8hZeyWh2PBXHfc/SWX3+JKZebs2PCCy3skFobv
DPbq+ILrfyIWQo2B95zr92csbDQDoHzf4iJvZy2f/Jzr91cslDz/xFHuBdfv
VCz0Nhsu1ueoD2diaXy0GPvr2Vio+LTchH7/sHzPK5P9EwuLjf/5Ked/IRbW
lRp8s90/nN/FWLBWA0Py/8P5XVJGedqY/MvK5E+Ohe9/GrznssWo3xZ/uSEi
vc0/XL/7sdDBhMNKfg+UyT8bC+Z617LPWP6P9XPy1ypj+hYf4O+jfJ/GwtLy
e85GPuf6/6NM/ltl2q+Pg68Hds9d9TnXz8a0f6+M5bGY9p/q0fhdPo7lVI/G
59pxFC99isvXOA5Ot59V6+TpemRPNlHG+jeLgz/M8H2a8/NXxvoGKNO6WBnr
a2PyryrT/roylrOlMrZfbBzvr3P+ccrk34yjewr/5PrExwGGM59k+SbGkf79
VY/WMzYm/2ccTMb9qno0fmTEwalu5kEN7m8d46Be7/g/b5/i+naKg064vqpH
9mRnS94zrAHsNKfXJQ6Me8z7FKf3eRyvl7h/d1OmeB1lGs+Vyb7I9PmEOD5X
V4/srylxkGAeXDpTj+a7aXHQzYxPZzh9G2N9psfB6nnbhj0+w/phcXO8f5n7
54w4KNr26ddrznB7zlSm8ViZ4meUsTxz4uAc6w/tR8eBe871YQ/OcP3nxcHT
0ZV2xkj5bEz2Txx8d//lysLnOL8flclfq0z2TxxsHVdq87izrB9L42Chad6z
rB8Wz7Oyn36O229ZHOzA+6NZvivjIDyf14C+Z1n/VsWR/17Ku9qqz1nzx+mv
iYPBuZ8Evj3L6a1VRv2zMdlHmXhbHMcVsvwuxMHsB4v2ttnI8v+b9XMny/+q
Msav3o8Dc1x+8S8yXinjePEwDi4bf+geLv8jZYofVMb54Z84GJk6s+XeA6y/
z5RxvLAxnY9QRnm8iiN7/wj//l0cmOvxqou83ouH6eZ6ExkvLS5YbOKXfV+x
/PIpU7yQMtlrymTnKJP9pkzxIfEwOKc1w71j+dgY+2NhZdpfV6b9dWVaL8XT
+yofyPooHiZZuZ0pL/eVKNN6SZnWS8o4/tiY9qGUyR8dD++s6bVBZbZf6iiT
P1qZ/NHK5I9WRnnXzfT9T+PZj8X2ZCNl3A9sH0/+iMocvxCpjP05RpnG43ja
z6nA9ly8Mo7fyfEQae4/KMvlcSnTeBsPX1rT86QybH924vKUYH9Xl3iK/yvD
8ugZD8cmjlpb6GOJh1em+Jt4is8vzeXpEw/fm3NspeU9gXg457+kUI/Sct+H
MtnPymQ/K9N5L00f+8MAZSzfQGWyt5Up/jGe4lVLib2sTPZyPDz8fnH5PaXE
XlbG/vFDPO1fveb+sUAZ5bUw3nOPP5ZvkTKOD4uVyR5WpvEqnuz9K6z/6+PB
8dWD7xdf4fy2xcMN86DdX9z/tivT/lE8rKkB933+4vlotzLm84sy2d/xkIF2
ptjb8dD38NAF1U5yffbG033NJ8WeVib7WRnlcyie9q//5PR/U8bv/x4P8024
oXx+Ih6Kr259td9fPD+esfpLqXljLvzJ8+3ZeFhp4p3/ZPvoXDxsMeezTsr4
rd8n+1SZ7C5lbP/L8VDU2M9S/6vKOL/diIdRs06NnHWKf39TGfv/LWU6bxTv
sQcoPiGe4rMv8Hz02mJ8D5A/f6NM8Unx0LqRb7/PHsn4rUz+fmWs37/KWL4s
CR7G/mxjig9XRvnlUKZ4cGVs71zKNH8oY33LJ9B7c1lkPFam8ViZxmNl8k8l
QARueLM96JNA76m+5vrXT4De5gLPl1zfBglwLN/23/O95fo2VO68u1jn3Y0S
oE7Z+pOGvWF9aaxM8QYJsB3bgeXpq4z9wy8B+pkLHN5w/kEJkGPrgGp534q9
nABv8TyQ2MvKtL+QQPfqvmF72cYUj5AA71IO1pnyln8fkgBeu4f0mv+O6xOq
TPuBCXQ/+7+sH5HKOB7YGPU1OoHPq3B5YpVpfkiAO+a8+Dvun50SwNz2d0vW
m52t+v8a3fdXWQ99pkz2dAL5M19w/+yuTPG1CdAwx7FZHZ+zfn2pjOnbGNP/
ShnrY2OM8+2VQPP9U+6vFkeZC9NkPddHmeYP/T7Kq18CTB3/+/C2zzh9G9P+
YYJnfYb1G5ZA52VlvB6ujO0zQpni6ZVpPkmAuu0q/h34mHlJApjrDHMUFX9e
AvmXPuT5Z7UyynONMsUzKKM81ymTP08Z9c3iJcZ/Xlzuy07gc3pyP2GCx19H
61tluo9DmfzviXx+lOfH6ol8HwLPhzWUKd43kdZHDbm/N0mk96U+lfN8idyv
2b7xT/SUj+J5lKk/JNL9IV4sPxtTvEsi9O9hbqTi72ck0rsRdcR/rEz+40yf
f65M68FEjk+S+42Vaf87EcwwU6ym7MclgokeHFeL73cbmAgz3U+OTq3M8h2a
CM3u+xQfX1niaZRJXxLBHC8/U5nbf5QytvcYZfKzK1O8pPKwgwXDp3ynjOPZ
uEQ6f1qFz7/ZmNavyrRvo0zxPcrYbpMTwc32JvnXE8FcZz6gCstvmjKt5xLh
qelfct/mKmXSb2VavymT/aOM54HXK9P+pDLFGyvj/LdJmfqLMvm/lcn/rYzy
OJlI8UqyPvhTmfxvyrSfqIzyP51I/pHS3L5nuH98xPW3MdkTiTCqwvaoh3kl
fjmR9t/yyn5fIrzn223BX+/J/buJMOJ+xNZyeeT+5USyb/PI+2WJUOt/p962
ycvt/SQRCuP7OPx7G6P/5Kml7+ZC+twyXijTeJH4X//vM0vf51fY/CY352dx
YRMAJP7eF8q0PmV9yi3jTSLUTC2XLzaPvCepjPr/Rr9P+wmJfN7am9bh/ybS
fQh55P7BJGi111oRizxyJFG8TB4en3ImAQ7bebg+Nsb65Ery+KOxPhbjfex5
ZDxMoni2nNzemblOkmc+ofWhMq7f6yd55lPUj0+TKP5X/IeNkuDrgMLnlzxj
e7SJMpa/qTLdt6+M5QNlildSRn3yS6L9tWc8fwYok72jTPaOMtk7SWQfi/+z
pTLFUyTB75W+9xkj+XVIovcZzrE91kmZ4h2U6X7NJLqPUfyRXZPgmjWbFRb/
TP8kWl+d5c8HKNN+SBIEL2n4+qH4Ay3G/ULxlw1Vpvk9id79EH/TCGVaDyZB
+ydZ744Rf9JoSz/Kj+03XfxHY5LoftRz3L7fJlG881mWz/dJkNhmf+6mZ1ke
45Qx/fHKtN+ijOlbjPdnn2V7fHISx5ewPGxM568tfTb7U2dZ/6YpY37T9fvY
/yy+37NqueXiP5uhTP7GJLLHz7I8LS7QsOW3GWfYfpuljPOhjWk9mwRnGyzv
94v4Q5ck0TsU4s87kETxtz/LeiYJ0B2xSvzrDg/T+sVB8YrL+fM8DrjCn+P4
+p4yxQs4wISjl1wp/iUHzferxL+kTPECyhQvoEz3J2v+2F/+5wC8LnsJt0dl
K39HhXc+89ker6KM+l/DAe3MAwfzWJ9sTOenlCleUhntOy8Htd9srm9dZVo/
KaN/oaGDxr+59WifrJGD7iedy+1vY7S3mzpgTq7P/vh0LtfP1wFNi8xdv30u
67eNabxxQGMz4cn3gxxwr9K6Kb/PlvHDASZ888Zsbv9WDhj1qoF/iVkyXiij
/rVxQNzbjScHzOD1iY1RPm0dUOLRyiL/Tuf+HOyALSMiyz+Ywfm3U0b5hzjg
dO3V996fIesrB/Rccaloi+msH2EOGBp7O/HtdC6PxadNnNZ0lm97B3Tqcu1i
9uksLxtje4YrU3ynAz4Z0LfU19O4/0Qo03rNAQlBv1UvOo3LG6WM8rL49rIJ
1VOmcn+IdsBPEQuLHp7C5Y9RJv+fMq3vHHAxPjBx6xTZj1Emf6Ayli/BAd6/
tX9wewrrv41xvkl0wPrQ20PKTOHy2xjHoyQH5DET8WQun9MBRQc5i+SZzP4H
i/Py5xQPokzx6w44hOMcl9/lgIlXI1q1m8TyTHFAk8o964RM5PKlOmi+ncTp
dbD634d1Oq+dIPONMuprFwfH58h84oAJNfc6Xo5nfezmgFsPUtdvG8fy6u7g
fXBZzyqTf9MBxRO/PNZ8isxHWh6ajxyA2y3jZT5xgLke75eJXN6RDrKfRP5j
HLTfIPK3Mcrve2u8MReVTOLyjlOm8dwBZjuz/iQZz5Vpf97B8Uec33IHxZ8O
4fxsTPa6g98v5/FjlQO23r5QLmwo19/iYxetFe0QLs9qZVrPOuh+ocHMmx2Q
Ff2wXN4tyhQv6ICXgz5+MWiA+DOVyZ9p9YeWtf8t14/lucsBZ9pkfDKvn/g3
HbT+7M/57XZA59FDclbqx/n97IAv86YW+KGf+Dsd4HP9TtDzvqxfFuN7u/0k
3sABUe7zp7f2lXgCB5jnN0r0k3gCZfJ/OqBPw1+G1+vL8trvgK7GXuwr/lBl
mu+UKV7AAW8qHXKs6cvj228OMK/j/tVX4gOs+W/8pS+TpTxHHHC5nnmRTOIF
rPwfbH9+oY/4U63+Zc4/9WF5HLP6z6xtfxzow/I47qD9rz4sjz+s8TtiY8BX
fVgeFje5vjvlf30l/sAB/3T9pm7vPlyek9b42+repee9Jd7AAa3W9xj7srfE
G1j6Z/b/JP/TDggs+dq7QV9u33MOOJf1YJm5Up8LDvjdxKtLfSwePrXZjrF9
WF6XLf3bYv31Fn+tMp1Pc8CBHIWuj+wt8QTWfI1+IokncMA+++dPHBDT1zLA
h3J+zxwQOtY4JHm+eK5c9OiooGxZnB7G8tuY4qmd8Oih9fc566uNyV/qJPvh
c66vxaejq0Tu/Vz235x0X+LnXB4b036cMt0fpYztnd8J5nmhTl1lP055hXk4
qYAT8Hnwrtx+NqZ4SydMODi8284uXB6L8Tx8V65vYSeUaZge2KEr52dj8zzm
UYs3/Lp78PguYl85yd6yPvd5tDyj4vtOyGg7Iev1zpy+xTdPL3+V8Bmn94El
z9/G3XJ34vQsrjyv0LS7nbh8xZzQOeechsc78e8txvW0lR6+x1ncCe8fvPlZ
rPz+IyeY0xRRnbg9Sjghm7kPuQPLw+Jzkc8LjuzI8rAxjrdlnbS/lVgPOph3
p8o5IWGpuSCB27O8E2rg+xRcPhu3sIrjU8FJ6z15B7qiMupLJWWUb1VlOj/j
BO+FB7J8EcX5VXfSfVeh9cAk/8jiQqH3s1xrx/pRw0nvbQTz7+s46b7vNrL+
dMKJv4rlztea5VfXSec32/Dv6zlhlNk/bsXytNhhjhO04f7s7YR7eH89l9fG
My1xj7IxxY8q4/upPsoU3+KEp29P9LwVxOk3UUb9aeqk9X4LLq+vMvkPM3E7
J81f4Vy+UGXUBxujPoQpY/mSnWQfZ9QDI97lLmVMPzN3d8IcvN9P/NVW/bK5
wju05PL2cJJcW7B8v3aSnIK4/hY3Tbw1K2sLzr+Xk+yH5lw+G9P+qXJv06Fs
TP5vJ9SuEhP0v0Cuf18nnU/1Z/3t54TiG49lueDP8rUx+cOVaX/VidcZ5vfn
+lhswg8D/MXescYP8x6kH9dvgDLZP1Z5zPNtzepBjKn2QCfN98D6YWOs/yAn
RH3Tc+ttX66/xWuGHesf7sv5D3ZSPLEv68s3Toof92X9Hurk+2LFf+8kf2xT
/r3FrrB8XgOacP8cbrWHcWg0lfW/MtlnTrpntQmXZyT3L0l/lBP6mz9f7o8W
43m8piyfb510nwWwfL5TNtPJDovxfgp/bq/vlTH/ccqY33gn2W+BzPO5fdtL
PI6Tz2fxfLVYmdbfyih/G9P+hDLF5yijvJcrk/2Yibdxf0oR+8oJqbiQFPvK
+rzxyS55XJzeHmXsnxa7zXZYiuw3K1N8pzLZY8pkfzkh2bgnOnB+Nkb92++E
OPPceWfWtwPKmJ+NyR5Txva1eIXrePXKn3F+h5zw4NqTJN+unJ+NaX/bCXvb
WDO0zO9HnOTf+0LsNWWU11EnWJNbzjk9WT+Ocvl78fePO8k/PELsNSeY7aW6
3zL/5QQTrvV4K3//DH//N9b3s6w/J7j9zynj+HJBGctrY7LHlDG/i8pYXovN
9aMrZX/8kjLKw8Y4DtoYy2NjsveUUd43nPDyrxEDxkq8620nOM2FZXV5f+GO
MvnDlbF+95VRHx46yd/kz/5aG2N7P3Pyupv3I54rY/o2pvvYnPTeRAbvd2dJ
9px/wPraGOtrY0wvdzKft2f/ch5lsi+TeV+E/d82RnvGxvjfosl8P5I3zecW
f4HvI0i8vDLZV8p0H0kmLsnlucHyLpVM8+8N/n35ZGhixseX/HmFZLpf96XE
AySTX8pi7H+VkqHW9nqXylqM823lZAgyFyK88CZ9rZIM3Xvea9r8FZffYoq3
5vRsjPKqmgwZi3oebf+K29fGZE8po/xtTHFWyigfG2P9qydDhbH9ppeS94lr
KGN9bUz+vGTPfZHYfrWSIa1cvtj92XzAmMOXLN5zpsHyftl9qL6fJMOUYeZA
Ib8vb/HP5nxqdrkPPNlznySWp24yOG4OTbqZ04fq650MB0175+XzqTbG/D/l
9ivO79k3TYYT5n7Honwe1+KDuD/N5yd9lXF8hmSKJyzoQ/rml0znlQvKeedk
WGV11xfv8XnOlsmQbu4LlPsTWid77t9B+YUke94XxvraGMeT8GQ6j3Gb2zdC
GdsrMZnenb/B/TspGaqM71a+xA1uf2cynee/yfqWrIz9x8bYfinK5G9Sxvqn
Zvq9WxnlYXHGhxOivG5xedKUsX+kaX/B+ne15MXvT+N48bky7Tcrkz9KmexP
ZTovbenf1JsPUv9h+diY7KVkshffsjyGKtN+iDLmP0wZ++ewTN8fmUznf/L4
0OeTkz33Z6A8ZilTfLIyimNhMu3vvJTzVMr4+U/JdJ72MevDymTe12T5r1Ym
f5MylmeNMo2LyqhvO5OhvZkgH/F4/7My+tePJpP/qq4P2dvHlSk+jdmf63fS
Gs+/CrX+yXnwZNov7Mn90WJsh4FyP48ynY9IhrnWcFt9LJ9nvqyM44WN6Xxo
Mt0/v5jHh7vJYK7beHCV++vDZDDPwW64x+3xSBnb9zGXX97PeczylveTniTT
fu8NHl+eJnveu6H9W55v/mb5WDxvd+GS+S9zejbG7722xhNz//J5Oe+eDHis
5DyX/40yxbtZ/eVNpz079/J4+K8yzqc5XIAX2s2V+xGVsXy5lOl+RBeNL9/y
94u46L6STpzf+8o0fyrj+FnORfGz9Xh8q+qi8bie3G+hjPZ3TRfJq6oP+T/q
ukg/CnN9GrhgcNsS19f8y/ptY5RHQxcEmPJnkft0XNA4JLp3ehbO38bY/xu7
4Lh3ozeBct+LjWm97YIy5n4qSb+JMqZv8c7ke6X+lPuZbYzvizZVRv21MdbP
V5n2i5Rpve6ClW2qf7z3rbzv6IKEL481Ly73W1s895tVXcIsRn33c0Gp/uWh
02s5X+qi/RyLUb6BLjDPUXSU8dPGOF4GuSAd4+24/7dwee5zpv0dbt87/PsI
F9138IDLl+CCF+aBuKs8Xia6oAq/d0/3cbigvfH//c3pO5RRfk4XpM1suXfk
VTn/qkz7Gy5aH13h8crGNP+4oEjX6PONr8p5QxeUw/hfLm+GC9D9eInbo4OL
3u+8zOXp5KL4qMv8+WcumNIgqM6xi8zdXGCuN9xxkeVhMfVn5n6W/M39RLu5
PWyM5Rvgovvgd7N9O1AZfz9Umdbj+nvMZ7gynYdxsV+f5+MfXJATH1iV+xCV
Mb8FLqjZsdz171bK+VxlrN+PyrQ+Vkb5L1Sm+cjF+8OsPzam+UmZ4reVsf/a
GOuxWJnW28p0PkYZy2tjHK9tjPJa5oKFDbbfCl7J/XW5CwYktn9ZR97v/MkF
35v7cIXXuODV3Wyu8CVcfhvTfKiM9bEY34uT+x3WWeMRHmBh/V/vguxXk74o
t0TeJ1fG8X+Di+If5b37jS7y9y2T+yKUUX83Zfp8mwvwOfnFXD+LzXH2PxbL
fRHKqC/bXWRPLZL3pZWx/Xa44Ga79aUGy31OO5WxfBZ/9knPtXmXcvq7rPH6
xZ5xScu4fXa7IMLbWJg8vv3sggLT7i6bsFTuo3BBd7M+WirvU1vpD5/ef/ES
/v2vLvajsL2xz0XxSJK/jTH//RZz+Wl/yAWjrNXuX4tZ3hbXexHy2ziR90EX
z/9cHhtje1s861XTjXuWyHvYLtiw/dLhyotZ3r+56LyhpH/YBSZaorvI18a0
36RM/gxl8mdY422brzZEyH1Zv7vgesHQ+1l+ZPvZ4i7uh3Om/iDvFVvjcVTZ
Met+4PKc4PFqnsTbueCPMtn3DZjD4+OfLoqvkfd3bUz7TS64PbtJzRPTWb9s
jPI87YIHiRPyTZ/O6duY/CXKqC9nXRBn/P0zOP1zymTPuaDjyvc+2jCN62dj
zO+8Mtl7LrIHp7J8La6dYX1jqtwv4qL3aafy+HRBmfbHlMk/o4zte9EFRe8U
Xrh+Kpf3kjKdZ3DB4dyr6nWZzOW3MZbvmqXf5j6lKTz+WNza/+O6p6ewPG5Y
5f+mbu/4yTz+3nTBD+Y5Dblfw8aY3i1lTM/G2P53lFFe91x0Pnu83E/igg96
XWy+fDz//h7bVxO4fg+t8a/Ksmtjx3H9bIz2wVMXNDp0fY7XWLm/RBnz+0eZ
4htdMPlws5TpY+Q9dheMNvGXI/n7L63ybhv2uOQo7n+vlFE+r6353TwPPlLi
E13wYbzPjVujuL0tNq/blBgl/iJlHF/eKZP9q0znPZRRfv8qY/vbmPxPKR4m
/1MKHJyS6vVuFNcnqzKuf7KlQLdnl+vdlfpkV8b0LUbzYSSvr/OnkP34HcvL
xujPKJRC8WqjuT0KK5N9nQKtv1+Uo9couZ8lBXC4HSn+qRRaX4/g8hVTxt8X
V6b9vRQw21U1hrO+2Bg/L5PC7yPw5zam84TKaO9USoH7fD8Ptk9lZWx/G1O8
lzLKr4oy+auUab9PmfxTyrS+UKb1hTLWx8bkv1JG/amuTO8rpMCt+aNrb5H7
EGsok/9KGctTMwW2p1ebNW+Z3BejTP4sZYpPU6b7/FJgltlPkfub6qZAm6v9
iq8+yPKolwIDTX895k37Uz4pfL6N5V0/BXq4qvRw3ZD1UAo0NPp3i+VnY1of
KWP9GylTfJsyrX9SyN9wi/NvmgIDwme3KXuHy2+xuS590T0ej32Vsf0t/uzb
89dP3eP8A1MoTu253CeWAs58G5z5nnF5WivjfGZjbI82KXRfrtyf3S4Fjhi7
UvybocoUr6ZM+5nKqI/tUzzvy2D/T0ih/QB5nyopE7uUsTwpmT7vkgLmufLT
l1kfPk+h+10ui38qhfwJV7g+X6RQXPbf8n6SMp3/Ucb6fJUCqWY/5295XymF
7nu+yvK02Jhf1f/m/HqkwGKzwXJZ7v9J8dzHRvutKex/4PR7pcCBLF9MPnyR
+7fFaaFXy+e/xONL7xQ4/abewgOX5HyqslXr5Nt9U+BwgYs+m2W91S8FTPLz
Lst6KQUK3p5b8PYlOa+aAou4fCi//srY/hY/H9xgxlwp74AUum/wspxXTYG7
db7a/PYyy8/GdH5VmfZTLX73Y8WnUt9ByqjfFht12yD3eQ9PofsxL7F+jEih
+/Evs706IcXjD8Pvz1CmeOAUfj+C6z9LP0f+MROfTCH/rfjbr6XA3yae+7Xc
h5YCQxOzdl8p+wHXlcnfpYzyuqFM9oky2SPKuH65len7d5Rpv0iZ/GnKON/d
zZS+jbE+95TpPrUUvo9F7le1+rcZjqV93qaQPXiJ5yMbU/xzCqQcr155xRVu
v6ypHsb0bYz6kEMZ7VGL65oLv6/KeYZUKGYmuKssXxvT+QZlLG/hVE970X2P
qXTfXlZ5PzkV8Drhf2V+TaXyZ5H3uZUpPlqZ3ltVxvb8WBn1q6wy1s/GWD8b
Y/uWy1QeG1O8Tiq0feicvVjuv6yWCucr5ho0Se47thjddTnk/khlmi9T4XcT
TpmL/aM2pv0eZfz+J8p0fiOV/V5yfyznH8D+PItNONw5P3mvXhnL458KVW69
eLpe3l9ubrVPulkRs3/Txji+Nef2D2T/Y5Ayzl82pv2aVKgauXfVYit91LdW
qdDCvJ8YJPs3yvh7i/H8dRDXt40yysfi5l8vPV/YSh/9IzZGObRVRvnYGOVj
Y+wfwangf9Y86Mvph6fyeUJ5zykVdvN9rigPG2P9o1j+dbg+aansF+XydFbG
33+mjPl/leq5/xbL21MZPx/E/UXerx2cSu9zxMn9tKlQ+s8dyffkPdZvUmH8
tyGOeHmv2MZYfxvT+wmWPqxe4n01Qd7vVKb9mFSobI7bxMv7JsqY/+hUGq8T
WV9Hp3reS8byjEn973vKFmO/TWJ5z0il+3R7cPlmKtN7TsrkX0sFszz9vYMP
za8WU3wI6/cKTl/eW/spleyBdM5vZSrdZ5HG+6NbU8GotWUosn9ImfxDyjge
bFcmf5G2F/mLMrXnrlS6HyiG9xdsTP4gZYpPSYUAcx5G5L03FYqY9wUTWd8O
ppL9lSTv8SiTf0YZ2+eQMvlnlCmeRBnrb2Py3yiT/yaV7zOU9yJS4dKqZwU6
OTi/o8ooj9PcPuE8Xp9RpniRVM/70+SfSKX310Wf/k6l90EyuD9cS4UDGP/J
7XcjleyBbvKesDKW/1EqTDva5+U2aS8b036VMpbPxrR/lQoNjf5FyfsMqXBr
jldwLnkv+GkqLLpy95f0GJ4/LG5tDK5obt9/UuHsKesvhtvrmTLFB2fiV6me
96Vpf0v7P/kDVL9of0uZ7AH9PtkDqVDHGNixXP+cblqPtpP3u9xg3DOLZLzN
5+ZzNvKerBsepq7f5uXP33/f+r65D0DeE7ZY3l/C8hV1U7xqA87/QzfF83iz
fMu7KT60Bv/exrT+Vcb8bIzr/arKqA/VMrGPG4y5PFfiB2yM+ddXpv0pq37G
gM4r70W4YfjvzjwFcrH+NHXDYrNAy83ys5juT+Ty+bppPpX3GQLdHnuG9o+U
6X40N1i9/SP/7Cyf5m66/zSrzLduqH1qcK1Tsp8d5KbzhLLfZTFun8p+VrCb
zoWLPdTODdd/L3/2pbz/abEv709RPKsyxUu44YS5Xl72z0KV6TySG3ZOsTrE
G7b3otzwDd6XxJ9bjOtX2f+K1fLSeaFM5bfYhA+sl/2zeGUUV0Im7uz2vB+A
/cvGKL/PlNGe7uv2rHewfW2M5RmsTPOpMo7P37up/5xhf8F4N40nx9g+nsb9
5wjzEjftbx+U/RE3vSe5Sc6fK9P+h5VejfXWPzl/7qb7xzbIeXM33S+6ln9v
Mcajr5Pz58po/2y0eEzr2znWyflyN+D1oWs5PYt7POwzq9Ea/r3FuL5eLfdp
K9N+iRvM9URbV8n92m5oFXCkX4/Vsn/ihqCz++bfWCX7J8rYX7a76X2ilbKf
okzzozKWd4cyltfGtN/i9uzP4XxvMZ3X5PLvVKb9GGXa93NTfNJKro+N6XyP
Mub/sxuaXTAv9PDv97jBhDsdkN9bPGfHhoYxq/j3FuN5hZWsn/ut8fH1vonJ
ct/3ATd8y+nTfosy5nfQDSO//LBiQanvQS0/zefKON8dcsMLDGCU+8nd9B6z
vPdxxA143HUFy+eoG3L8+p3X1yu4Pr8r036KMqZnYyz/MTfgddrLeb1occ2H
B7OtXM7ta2NsXxvTfowbYk2863LZj7HkawLAl3P+Fhv32YGlLD+L1wd1Whe0
TNb3PL6L/8/iilX7j9m8jPXnTzfdp72c9cPiXM1r/5xF9tPOWP3P72jayUVc
nrNuuHOhXFhz8Ueec4O5fbPgEq6/xfcP/OK/Qvbbzrsp3kL2s2xM+y3KtN/i
huYhOdO6LZL9FjcsT153ceIi9u9ZXP2jSSfyyv6WxeUu/LTla/GfXnTDxpXZ
b4xZzP7tS25YiAMs65+NKb5HGfO/rIz5X1HG/Cwewu/lYPpX3RCXZcjphj/I
/o0bmob9G1T1B24Pi3G79geWxzVlsses8aJmQOk78t6OjVH+192wae6S7dXn
sv7ecMNh/wnTC80V/4oyyue2m8bdufx7G5N/xQ1zMaBZ/CvKWP67blovzpb4
XDe/p8nff+CGJlPgzzrTZb/HDUXMfZbTebx/5oZ7v6Sf+lDuq7cxts9zN/kj
Z3N5LC6zMfT2kFkSv+um+8Bny/0Ubpg90/zJ/o8bhhn5z2J9sxjP9c3k/F4p
k73npvPxM+T+CmWy/5QpDoXnr+myn2O11699Jh+fJv4fN5jw0F+my/6Om96N
mC77OWmwr1vpfd1mSjyxMu3npEFtY09O4/SzK6N+5Eyj303l/mLx1EPvvNyy
P2kx/m6K3I+hjO2dSxnb4700+C2uTNEmsj9pY9ofSoPn5j5W2Q8tkAbmuMz+
aeJvSoPQKBNAzeNXEWWK11JGfXlfmfaP0sCYP9umsL/vQ2W0CyxGf7b8vpgy
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
KUOeNZTR39Ys83y9Ao4nbST6PFeZ+09lzEc7FZTaB/wpzxewP+Reef8LytD3
GwWl82/8fW0B3+u3pRWvS94rcL28Q3WLtIcPC9yWB06Zf9kW0adhvG+9MsZL
4lbsKJP5iDLq/5Ey5/9S5vVYgav93conr98q8jDM+UkKeD9tm8jDMOcPU+Z4
D2V8zzDHfyjz+dsC56/D275N5L+rgNtjpTyJByjg+fFJedK+CuS+hTzxtxbw
fn/TPPG3KnN7Ucbzhrn9KON+zPIpV8tvSDTPE/tP8fznwjzJl5WS/kneZxi/
r5Ti9Tsxx0+meD/04jyWe9WUO9EHXDbI4/GtuvLmo3U79a6hzOchlPH9WsqQ
b+OU3C+dJ/mbynDHlNhvHtvfVSmOx6udx/ZrmP2ZKVfhJvpCrTzZ31Tm8TPF
+quZJ/m6U+yvO0/Kl59yTd7Y3viNs0U+hjl/tjKvB5XRXxhGe0in3BU+n391
+Z5hfO++FK9vKubx/Mown+dKib9W5uMPKMPeH1Rmf6My7OfplPhzRR/Pptx1
PuHKz9J+RqQ4nuNn6V9Hpvj+uR+k/RLP9xeiHwj+spSr6Bv8Lmk/htkflnIr
NycDeu+U8WRiytU72mr7v3dI/0CMfAg75P2G2X+Wkv25MJ6m3KwhTV/Zsz3E
26dc30ZTZjTeHvxlKXcX8oOE9aoyn8dKuaI9VzX965vgTyN7P0Qzzu3Bn6bM
+ZhSsu8k48FUZbRnwyifYdjftJRLHa224e7QfxHf569v2xbG/xTn294szxPX
vfTHuz7YLPNF4kf9/uoWqd+slPuluP8dz22W/nd2ykVrOp1wx+YwX0iV5g+C
vOcQn3jD+JKtop+ilFvuj19vkfLMTbnDPn/4Vnk/Mfr3zTK/n6fM+TbK8Msp
Xh+sDetZZd6vVOZ4xjK//4DswV+AvFL44xT7j1aE/lwZ9flEmf1tyhyvpww9
fKqM8W6DMuT3WZnvEf9SJbX1xeViH4ZhH58roz3tSnE+9amyPjOM3+9NSbyR
lN8wr29Tbp3X1xTRv2HMT/an3G6fQH2i6Mcw52NUxvt+SkmemBDvn3I9V82+
seukEO+vDH0Y5vuNlNF+DilzPFnKFY/tOW/spLB+VubxJyXtKszflCGfKoW8
3z0gnH8rZP/mA+E8W6Hz29i7wvkZw/j+2YXuUC+aEObCelIZ+qxXyPHpcZj/
KEP+hnk+VOiWltR89cPw+0aFkn88rCeVIa/GhW6lP997h9hXi0J3SvXKM96+
Vv5+oTKf3y50Nf15/2tCvkFljO+Geb9QGfVpXcjxzGE/xzDfh6vM/lhl2E+H
Qof0e8Hf4MrwtYW83r0q7M8VulHRjqbrwvk5w7w/V+hmVm+2ud4Vok/DkMdN
yugfiZ+y61HDvF4tdMs/39am/OVSXsO836eM8t6iDHkQr37zij9S4TycYdTn
VmVUxzDH5xe6qh1Wb3opPG+Y7/dQRn/4L7LHvvPfzl0m9t+r0P3uE/J0Ensk
flfy3aF+/1bm/FWFnO/WBX+1MuezUkbcZM20tFvZj66rjP73LGX2Z6RL48Mw
fnRMczzxdxK/1kkZz1+edv54xWMh36lh6Ltbmv0vP4V4sTSvdw7I/nPPtMyf
RN8FaYnTC/4DZb6/SpnPQyhzfJMy9Ben3Uyf/6SlvO+BNJ9v6SzyM8zzIWWO
V1LG+55Mc3xCOH83KM37QQ/J+DAkzecF+os9DpG/Px32J5U5Pintzjz5uS6d
hof5U9rd5+OLxsjzo0Ufs8J+X5rv/9gR5iNp3j/eE+YjyhhfpihDn1PTpfkL
Ud9pyqhPkegnrGeK086nJy8/P+zXpd3G9f4CCSmvYdRnsTL7w9N83mmZ+Ode
S7sHvdi/DOcHlaH/d9LuWD+/3izy/L+05KuQ772bdn/58xw7wnm+tIx7ok9i
nIfbL/VZn+b4/5/Dfpwyr7/SEt8V8ksqczx7WuKI5e+GeXxO8/5dVZmPG8b3
9ylDPweUOZ45zfOHwyFfozL0dVQZ5T0mw/kYysn8u2KG409q5LE9HJ8R/56s
T07NuIf31m9+/PnyvdOU+by5Mp4/XZnje5X5/uGMa9zxtX/d10zeb5j9scqc
j1gZxa+nDH0aZv+DMvtvlXm8LfP7hso8/pZ5/jxl2Jdh9KctMu768SV17t4j
6/MLlTmeRpnjZzKuCPklwniqDHm1UUb/SIzm91kYX5U5/kYZ9twhI/FN0p4u
zbi8sYMmHwn7u4bRn1+W4fFjtNhLlwz7AwZL++uZKZ0v8X5mhtv3CLHf3soc
35kpzd/J/tMy/HjG7fQByFkpj2HeL1Tm+A9lPl9W5u/DM+wfCvsfhrl/y/D4
cX3o35R5vZNxX0u8C693MuxfuF7mR7Mz7mTEIYf1iTLn61fmeE19HvqYr+9H
//WCMsdvKnM+vkxp/lLYy0pl1OfdjJy7FPmvUoY8DaN+q5XZH6vM+e6UUb61
ypzvrgx/leF8JBeE/LYZd27nUfU6nxrOC2fcQzRdPVBF2oNhjm/MuA/KLzr/
wN9l/rZX7C3kJ/4h41L+At/y8n7D6M/3Z1ydocvuOrZ88O8qcz7djPvvmse+
WxPyef+ozPl1M853Ry/8IfF8P2Xcm9+Oa/3zEYlf+0n0F/KJG+Z5TsbVRQOS
+cnPGXf7+B7th4b8KIZ5vaLM6xVl6PfXjOvWeU+n+kckHtUwn29R5vMtynwf
a8Z9uW/Ctrf/kPkW8TcVH9tW8ajEg/+RcSfKeVK8vyxXjmRcEPuoEXF89IGQ
P16Z/b3KeN4w+q9aypCPYejjrMj9M9NvxIwwnyNu9sqemUN+CPk+Ir6POMSj
E2O7N+Q7NYy/N4l4vN0W7nONeP66TfTbIuL825vCeQdl1Kdl5CY99vzepzaK
/lpFcn9niI9Uxvy7jf6e1z9lnjfMeSkivt/qa4lnbRdx/ryNIX9vGe4q+nhL
uDCSeJtwPlcZ9vRY5P6q26n3UyFfaL+I/ZkhP+XjEccLhfN2hrl/jdxlQwqp
hYX845HbV/PagcvniTwNc34LZZ7PKvN92RHnsw/vGxy58/y/YrEX4nf8fdzh
vCJx5S2FA55ZIPG9xDhPvUDK90zEeZMXSH2Jmzahf+E85hBl9B/DI76voSjc
t62M74+IeD4UzvsRf435pnyfeOlNayqcVCQ8JnLz+p0z5pPnpL5jlSFPw2jv
45RRXsN8jityN+C+wXD+OXLF3p85Quo7SZnHL2WOd4lcN+8QCfkPZ0duuD9w
l4TzBJH7yDuosyFfbsTjbybky1VGeYuV0V/PV0Z5FkbOZ78ZUii/Xy722T/k
X43YP/6w1O/dyL3656WD3h8uz68m/fn7z0aE87qRa4z7EEN+1IjH6zHhvK4y
z8eVOT+qMsrxQcTz8bEhH2rkPp5Q/28fTAznaSN3v/d3Tg/naZV5/h7xfDrY
B/G3S/p1rVYk7f3ziPMVhPOgxMdb+/oickvmtdy5KZwn/SpyB+DnDPeLU/82
YvqvzYvC+QZljl+J3KV3Tap8wVwpL/EGv28S3r8xcj38/DGcZy1R5vMRyqjP
JmW8f3Pk9n9VOH9M6XnaSO6/DednI3fFd23zSsL5XsN8nlaZ85dG7o5VVX4+
O7Tvbcqov2E+Txu5FZK/FuX5JnI4Dhj6I+JVU+p2rz8vnK+I3M2b29Yrfl7a
s2G8fye1X5uP1zDH90RuTp2C32cUSf0M835z5AYvmHTw3jkSf26Y4xsjNxMT
2pCfLHL5Z+1+NgrndfdGbpPPBxX4+8jVlvOqvJ+mzP7SyFXx8fwTw/mIyGF5
H85bEiPfxzj5nmGev1B7HH5C7Q9Gi//kYOTaSHti/2nkOvj+cqQ8fyhyp82/
bMsDI6X+v0TuhdHn3XVLaF/EzZDQSsa/XyPXyoerjQvzD2WOF4pc1R2LHuk8
LpyflfYfzmP+EXF8b8hH+2fE94uH86iGoZ+jyuifDKN8xHdTc+hTer424v3A
iWKPx2Tdv+T8Mcr79yzvl1F/6o8d9jGM91XOcj6KkfK8Yby/ijLan2HU70Rl
fM8w9Ed8pt/Qo+8hL6ph2MNJyvieYbyvapbPe0wM9/so4/3EfH9tS/e6j5M5
I8v+mHAe2DDu6SZm/7vI3zD0WU2Z422VUZ7qyvg+ce/+bdbtnib2RQw5ThX7
rpF1/rhO22lS/tpZPo9RLM8T/3flk9fXCfkM6mTdLQ/3eevSJfL7uso4N2oY
3zOM7xJjurK4JfvFz8ry+LdE5GMY5TPc1wvIMOzxbGXU3zDsifjoZw/urb9Y
7Il4+ckH16wgxrrGMNrrOcqQt2HUn7i7T4e2rKXzj39YL+sON/73qFUr5flz
s7w+fUV+3yDrEM67KuSjzbJ/ZpXIp2mW54MbpDyG8b5mypCP4fVUvctbZnl/
97Dow/AL9OdzWmedT58z4PuQz7UMX5zl53aH80DKsK+2yrArw6ifYci7ndjf
N6KvS5TRHtsro/4ds+z/Oyz1N4z6dirDV2fZ/1arldvqA8+6ZZ2v7pfnyPq2
uzLv3yvj98QLEN8g6/MeWZ7/dBH/xs1ZV+37i3a9HPL9Geb9BGWY3y1Z3h/u
2Ir1YRhyMcz7CcooH3HG7+8Gf75hlK+nMt5vGPI2jPb0r6x7VfLp8X5Alv3r
54v/4R5ltG/DkJ9h1K8wW3r+Fe0nm2V/Rsgvaxj6S5Qhv5xyQ39w+qEs3xe7
Tv5uGPV9WNlv6z74H2XfPU4yDPsyjPo9oozyDMjy+ux96W8GKqP8g7Jyz4LY
11NZVzz0jusqLRb7Nwz9EMP/uljKT/z5ih0znnhR2oNh6H8wjXcff9brHyE/
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
7o8O/hRl2N+zMee33x38I3Fpfj32j8T/m3/PMPoDw+wfof7A5+PcJeUZHTvq
ffaO3iL6Ngz5EU8uuKjCJ5tFv4bxvrEx+0tK5O/Eq+ZtzV29Sex9nDLaCzHy
vZWE/Xrq/yaddHufTSJf4nb+hG6JjLfEd0/bPWj/RrEH4hC/gecnxK5m5Rlv
n7wx+DNid9y6tQMblgR/hjLqOzHmfOUhH59h9mfEru6pNz7xYEm4fzd211zp
N2RDvEDsvq5asVKX8H3i7/19mhuD/yN23nyeDOUnPuDvzwzlJ17/8T/ixzaJ
vJ+L3Z5u0cMbSmT8J0Y+1SCPybHz18GdskmeJ8b9J5uC/0N/j/Ib5vunYs4f
uUX0RQy73yz1maoMeRGv8fG4W6V/mkb6ntv49Qu3SfmIcX443I9MvPW0Kx9e
sC34V5QxPzCM9j5dGfIzjPfPIH37/a+tUl5i3Fe+Tdrj87H7VOLVoW/DaG+G
+fySMvsvlGGfS+LSeHbO/xHz/THEyHP5ijLk8WrMeRfPlfGCGOEaDWQ8ey12
p7ddfFrb5rKfYJjzzytD3m/Q/De65cigVvL+N5VhH2/KfKuNjLfE8/wFZ5e0
Yvka5jgmZdR3dcz7T51kPF6jzPftKkM/a5XRXg3j++/RfNYncO/Siu37g5jX
t/fJ8+tj3i9+RMZjwzyOxOxfulf2Qz6LJQ9BK/EXxKXnj8FfyfcHhvtWYt4P
niHju2G2Y2WOv1CGvW9RRv220fjiFTpGyrs9Ls3/BPnviF3fM05+rstA2e8x
DPnt0t/j+d3KKD+xj/Y984mQvyQuzWeG/tkw549Uhnx+iN0NPr6kr+j3AL1f
7tdhf4MyxzMoQ98/KuP7hmGPP8VuES4okOcNczymMvR/MOb7B0O+ksNSv8tC
/hRl/N4w6kuMeEKyJ/QXhmGvv8acTync9/WbMuzrd2XI2zD0+Ufspsl5JHCF
pDQ/AvRXKXEdJR8g2hUx/C2nib0YxnylsjLnQ1GGvIhHyPyR17+Je9/3nyfJ
+4kRj19Zfn9qwvuhx4b7ZxL34JKeW84sJ/Z7WlJ6PyXaN/E4nz8txLOergx7
qJ44nw332J0hfkAZ4wUx8mPvkv6PGPlXdoT1Lv39lU1H6+6Q+VnNxFUa0nPw
bztkfDDM8afKqA9xY3/eebuMF7WUIQ/DGK8Mc7yqMuzBMK+vEzfxs0eOabtD
+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
I+7c45Tt34f9duIJXf8xtEuIFyauvuHu/m3CenqP6gvf25u4E36b3mdpcbhP
SObfxVK/fYlLjrn01PwXRN6G2R+cuNPeeeXynxeI/ojDfap4v2H2DyeutU+P
H+5P/Y7mW/6c2mKRH/H+p895/aYX5fffJ84f/9sT2uMPiXvcHy9aLPLcn7gl
bzWu9NoSkadh2MuBxMVnV2swarGUn/gjaR8o78HE7RN5cD6xxPnwl5/CfafE
2NAP54sPJa7d1muGjV8o9k1MvVHJ8gXSH/1M6/PjP97YK8SzH07cnT6AbIl8
zzDkQzzY378Q/DeG2b+cuOe6Xbv4xuDPIe7v/f3LpH6/KqN8hiFPYr6PQfqb
36h9vzuyV+OVUj7D0P9v+nt8zzDs4feE46VWyveIj8h9gLD3PxN3oNGnN45Y
Kfog7nL8f6t+vkLKe5T03f+LXwasEPsm9td1TFke4v+UUd6/lPE+w5AfcTME
wIf7NJWhP8Mo7zE5N3X/3NVXr5D2YxjtxzDHGyqj/RiG/ZXLuQmjPn6qayif
YfQnxB1puLhhhej/bznnr78dHORZIcf7t6+I/Cvl2J8R4hGqKHP8WhmummN/
2odS/zNynO/+veBfz/2vP9Ywn8/Lcb+yWvRXI8f5/9dKfWvmOB5mrdS3Vs7t
8xVYK+UjDvEH+H3tHMeXvifyqJNzT/cb9uuXa4M/Wxnthxj5hNZJf2WYz+vl
XDd/AcKHom/ih/x+xAdiL2fn+Lsfiv7q5dwof4HaFql/wxyfnzsk9TfM8Wc5
ni8flvHLMP5+Pv3eJ9g6IvVvkuP9/yPSXpvo76HfZjnnty//LCf7R4ah3+Y5
d6Lf36gg+0fEOJ9VXvKZtFCG/C5UxvcuyjmfjqRmdXmeGOERZ8j+YGtl6JW4
AxJ2y/7NxTle39eQ/bq2Oc5/UVf2p9rlJB9tK9YHMdbrZ8n72udYrnVl/84w
fk9cR57H+zoq43eX5fg+9jOlvIahxyty7D85U/aHr9TnYZ9X50r3w/h8njLe
1zVXmm8G9btB/p6S+t+k/P/Ttn24
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
0/wvTOM7CCZ4+1cMCTXjW5j6Lwj2a/cjhJ8HwjTehdF8thfG8dRBmOyBMNkD
YbIHwmQPgsBVqPjE42DsgTD1dxA8fTi06dJAsx8tTP0vTP0fBC3G1Jji39zY
g6Ac/aX+C4J9unxfM56DYPP+U9ef1DPjOQieJF5dtbC26c8gOK4d5losjxVB
UO3HreUfmfG3Lgje996QnpQzvoMgpUTjzYurc3u/CoLYuE3J/d/j9m0Rpnht
EBTW+lTNjG9hGt/C6P//KozrmT+D4LGOAxt7dEaY/N0gqLo1+uaYymb8B0EN
PQFUZvt+WRjLvxYEc2apPy8ePyVbAW2j8/xUsxWtR66Z9UQraLn1l0F7Lpn1
RCuK555l/7G+MPpDDVrBX5NHf/zsTzN/t6L44FEzfwtT/7civf3ZzN+tIM/X
je4f/pGf170VxOv4+06e7z9rRevIbTw/zhKm/msFqThwjX/ZivxPs/+4SZjk
1wpWhKsZbjb7W6Vbk382jP2D5Na0Huhh/BNh7F+nMM1nwtQ+YdJnYdJnYYp3
CpO9EiZ79Q4/bw3j9H54O7OeaA293lQ66QHjT7SBs5OOfdMQeL1TQJj8izaA
yykw/qow+YvCFI8SVtb9RL3GwmSP3nlegDDZp3ee36oNvK/Xj2D8xTbQX6cf
BRt/UZjsSxuol/dXW/Ngs34VJv+/DcVr3zPxC2GKx7WFWqgoLP8iwtS+tjn7
ATh+agiTfraFY8PVBFmS11tdhckeCZO/KUz2qS2U+aVy+5fF2X8eKUz+jDDF
f4TJHxXG9s0TpvlKGO3Hd22h+ZyJi14WM/GetqDVZWwJlu+1tnCyR/6lLcqY
9bAw7R8J03pDGOX9P2HSx7YULylr9LEtTCl/5renJj6bKziHsb/zCFN8UJjW
U8Kkr8Kkr8K03hEm/RUmeQVT/Os1xxs/DwY9Ddcx8cqFwfCNzn975cvxRWGs
74pgCL53/VHWG1/eLxCm9WswxBSYv6WnYrL/wdDWWt6ZYCjWMbHBb2+4vHPB
0LTPdOeKtxzvvBIME/LXqbZUfY72759gOJSr/9yj6nOSvzDJO5jia284npof
QFvfyepzzHcpCrCgWLMuZ1T9KZ4E8DruZMkAVR/s/7IAx56qCfGliccKk72H
nLgGtq+eMMonGkAXP+qBL+WvxAlj+elA9upffv5AgG551Qxwm58/SBjb9wXA
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
whS/z6Z8g+u8Prcw+dfvcF+u/08mH1gYnz9YGNtrYfJ3ssn/MPmAk4TpPHk2
5QN9wfGQj4UpXiqM/WNh1I8Z2aC3OyOXmPMP3H8LTL5xNsUz5/HzLYz2aG02
RA38NqmLuW99gzD+fmM2HDiX/LTEFP69hem+jWyKP07keIWFyX8SxudbmPKV
hVHem4TJf3rn+1uzc87DkL8jjP7Dt9lwne+rRn20MMr/O2HU/x3ZlI84iOOF
Fia7lE3nrQdz/fdmw3kMIJj7yIUpvpgNP7x/rM4Mc9/0gWy6H89838Io35+E
UV6/ZMN3usEDuH6Hs8GpE/z6cfssTPfbCmP/W5jyPYQpnqjmG6//9ZnQj+OR
R7Nz7jvG5/0mjPKwMPb3yWy636CnOS8oTO9Xz+Z1mYn3ZcOPYaPrre9k4n3C
6P+cz6b3y5j3T/ydTe8LzOD2Xsmm+77M+R7FmO5p3kdxVZj8mWy6X9LO+q0Y
4/fp3J8WxvF7UxjbZ2HyR4Tx+beFKX8iGwrM39LzjY3rZ2H8/t1s0NdvTjLn
cRRjeCOV+XU2rfcTzfua3XRfYYrJhxem+d5N54USTf6tMM3nbjjZoO7G7ARz
/k+Y9veFaX9fmPb3hVE/iruh7KEWM6cncn+VcoMWa6qpb1k37SdEm/xdN90/
E2/ud3fDA7yQjOVRzc3vRzL3vQtj/d4Txv7zdoN3bOGHs53mvjk35Z925v6y
MLa/thvw+Gpvk+/vJns3mMdTXTe9n28G6289YYqvuUnfNvJ4aeSGY/r+4TMm
399N75e5bvL73bDpSfEel+7z583ctH6pwv6EjzDqs68bbjzKanuvDs+XFkZ/
y89N64NG7C8Euun8QxLPp4oxnpTF/kkLN4x6VmxnHg9/v5Ubvms5aKF7sB+t
J1pz/4zk+bKtMNbHwjgegt2c/8rlKS62fF+pytN5/leM8b5ZXN4HbppfNxh/
wU3z0VfsH0W4KR9ts/EPhPH3kcLYf1FuiEhs8FvbXey/RAtj/WPc0G51sf5n
fmB/RXFnx+KkSvu5/FhhrK/i9miHWV5xblj8aMCqweY+zURVvk6P+JX9Iwtj
/ycJk/+h9KX54rzdj5v7TYUpn9YNSRO336l+kuunOEuHq09wealuWLF5/6nr
f/Dz07g/z/qRvtvcMK7go7DX5/h5dqXPW6NvjjnL5We6eR3K/luWm97Pc4HL
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
D6I+y2Ny/jQK54+Og70Jl+/7mOi/R0L+P8dwPx/KZ5jLvzUm93vE0B8Mc3tt
i9Ep49yKMdhfGGb57YzRLr6PBfX5VZn7i+MtP7u/oc1lP/JbjPr7/zMM9TEs
8UqVRf/q5ouufoWD8hvm9todw/0pIV6pMsvzjxjV6F/QfuNg5GeYy7c3JvGJ
B+H5v1x/5fUUzkcdT/HHBQMhr7+VWV6GWT77IN8bQnxTZe7f/8QQzwLp7Y/J
ed9A/H4wRq0e8hemobyHYnQ2+4+gPIZ5vJWKy/w7AHxGXM77b0D5qsRxXyra
q2qckg1OaftPP5TPMMuvmrLoJ+N0Kh+woD+crcztWStOU9usSZYdDPnVjct9
pkPDeXyc7uYLNlB+w1z/c5Vlfaws6+O46KOHBXupOFX18fNuhLwNy3o5TjMu
7Fz912GQp+NyXl94I/rXeXHqyhekNJf9zflxmucNCAognwZxWvvDex3KFCB9
xy/45UhBsL9SlvWzsqyflcV+QFnW08qyno7TMr5fCPVtGCc3G8W7FaK/O+4z
uEHs78IQb0pZ9KFx8uqOH4O9QuM4vptIv0mcftw0pNMV0WCvoCzr6zhd+PXk
bTXCeG4Wp2/7/Nb4vWiITxGnU3JzH/wxxLNyHOYPnp9axKnA6++DPZlhsQeL
Uwb2ErI+Vpb1cZwqu91lqzTybxeX9UgOvzv27rsPFCN/x1Tj6041hqM9HEt8
nRDvQlnWr3Hcb9ZcvmsXx6msP2+8B/KgOGUf8hFx8HyXONU/9tN+rT7EeHIs
/vIoX1dlbu/LwL9gPjEs9gRxauD/dob4WHGq2OauCm1KBXuA+FF7CTn/j4u+
6cTgrxan2msyg8udivXu1XE6sOvXj9rWwXrXsNifxan11oVl5tfDfqdHnPq/
98kd688L67s47fcBocN6u2dc/JNbhfi2cfrSxzcJ/rKG5T65OA2p3WZGYfAf
Ncz1u1aZy+eY4yF2hj7CcYiHx/r7XnGxR+qG/Hu73/851Pf4q5G/42/f7zzt
gZ5Yv16nzO1jWOJ9ob1DvIe+cdpTa2XXwWF/65j1acE+3vHGeftOSQZ/vOvj
9IXXtyaxnu4fp7qsUEX6jg8MWdZwwgiUf0Bc7PVGIb3BcVkvh/PNIXE61+9f
5yC9Ya59/H06C4L/GOSxLPiPKfPvsbjEM/0B6/V4nK6+rdFdc3+GfsawrG/j
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
4PmqSYmn1bql3MtVLUnevGtRU9SvehL+5ihvDWWJv5ekr7z9T7AvOzeJONHI
r56y7HOVeT1VP0l5f+FYuWA/nKTyYz5a+ULZYA+cFP1VSK9Bkg78VnpYrxPQ
Ho2TVGvDq+/ecjzed8zngSfAvtDx/aMe/ve7YF/YRFn8l5VZ/k2TtNoHWD0R
+yHDor/W8rD8DIu9QFL2mxuCfYCy+Hspiz5XWc7flbl9+ydl/xf2U4mknOet
CvGYlMV/KSn78/dDPKKkxH98NcQjUubxc1OS/vQBOOdj/XNbkjI+gXko34gk
zbX+Qnckac8HD15/7nzM34YlXpCyxAtSlvWHstinJmU8zg/rC2UeP4Y5/9Gu
vH+4v3lYLxuW9URS1nOvB31fUuLTh/THKLM8DHP64yDvF8L3PSlxS+4O33dl
zm+8MudnWPR9SfqOHRZCPB1lbr/H3fMN3V8qfN+VuX89mTx6/5/o+5RZPoZ5
Pn0qKfP/sKDPS1Jt/zcU7ft0kthdL9h7TVYW/VxS9H03oHyOn/Jy6Bfi6yZp
99a9gy4O8dAc13Gr/c9CPLPnk+TddU66PMSrSVLy3x/PnB78Dacl6YzLv124
h9BfHaePVPmqgFBfx+w/GPYz05VFP5ekTZleD1W9OOjnlLn+M5RFX5ek9QtS
Py64KOjnlMX+N0l9fIHbQz6O2V+nLdarhiW+TZLOmfp25TVtQ3wbZbkfTJnL
/1LyaHxQLr/jd74ZNeBw66DvUxZ9XZJu2nN1/d9boDyGRX+nLPFwknT+xtjB
61tgvM9JUuTxxK6qzUO84iT19R/cxmi/V5I0auC1+5s0Cvo9Nx/U3Xxps0Yh
Xk6SfHjN0heE+DhJirYo9fnk+mE9lhT9Vf2w/krK+ufcEA9Hmev3RlK+/2cF
/VxS1hNHcP5lWO7zVZb4M25+b+Ud4HDeZlju91UWfZ4yy2NZUvwFN8G+YXmS
6vt4g2vxvmGuz5dJutoHrP8a+Rnm/rA6Kfqaz3G+uEaZ52fD3J8Nc3m+Uub6
f1UivQ2Yv97CeeLPypy/YbnPKknPeP+wcH/cLmVZHynL+khZ7CGUOf/dyqJf
U5b4ySXy+zNJHO79mXCfa5K89UHpp4P9g5vvvnF/EyHvf5NyP+cjiMe/Pyn7
3YdQHscH+EAoxF9R5v5wSFnsG5RZPqcUwZ8H5atRhHsZgz1CEXl3hF7xcJ9T
kcRjvjHc56TM7VNHWewPlMXeoIi8djQxDOWtVyTfj6FIzzD/3kBZ7EeLpP4d
0P8Ni/1jEewYkZ5h7s+kLP7yylz/Tso8vi8pkZ5hWa8oszyvKxL9RIdwP5Iy
179fEXWghcdOaA/5Gub5sr+y6MOU5TxUmfMbWETfsn8h5DWoiIafUHDK9IvQ
/kOKqDjmA16H+5eURZ9UJPEmLkJ9HDdbPOa2aRej/xUUIT4x5FNYRBd18H94
PlpEOxtcXn1Qe8wHMWWJh1lEWxqtWnpse7wfV+bxZljuM1Dm9JNF1JAVHsGe
sEjuw24b7AWL5Dy4dbAXLKKbrpxy4KLWSM8wy8uw2BMqy/mssvizK8t9n0Xi
/9wS8h1eRC0qXzKmdguML8Oi71Lm/Wz1lOx3qsKeo1aKfvAOR+divqmtLPri
lKxPmqH+5ymLPUvqaH/g/m1Y7FeURb+rLPEyUuR3J092gHwM8/vNlMU+RVns
vZV5/r4kBTtY9LdLlcU+IiX1INhrGhZ7CGVu32uUuX0Ni32EsthHlEivtzLL
p3eJ569TFn1rij564ps9n1wexoOy6FeVJZ6sMveniLL075TYl1wL+Rrm/DIp
evG6q/ovDfZLhsUeICX+fRGMR8Msn5wyy+emlNwfE+wPDXP73aws+lZl3v86
5s9BEvmNTtGdN5d6ffaEEA8pJfPtU5ifHMv5UbjPVln2C8piT6vMcr9HmfMz
LPayrn5d6pTaOAXyczxnW4eBO6ZCXmNT5K0TOj2P9MYp8/gyLPYKyiy/+1PU
u8rH0ypNQ3sZZnk9kJLzr2l4/uEUvTf6+95V56M/OF52fL0D7RdivIxP0TQf
n/Fd9O8nUqK/2ojyTVDm+k1MwZ4jxG9KyX01e/D+M8pynp8S//G9GL+G5T5e
ZTnPhzz/RPlfTNEYH89zO+TpmPWN30GeL6XkvHQ52u+1FPGC9Plwf21K7iV4
Be1vWPSHyqI/VOb6OOb16qvoD++l5Pu4CPJZpMzyfV+Z59uPUnTAx9P7CuPb
MMtnsTK/b1jiGypzeQ2zPJam6PWyA+aV/RHvf5aiPl4B+yvk69ibz9+6FfL4
PEX++ukvN6F8X6boZz5QQv8zLPrFlNznthH9ZU2KSi387obL14b1sTK37zcp
6or24fwdV3q925aR3yG/71M0nu9vR/rfYz77FO39Q0r8eVahPo5XNJl0+MaV
SM9xN6/QXgV5rkvR8oONhk1cjvnSMD+/PiX6knDf84YUjWW7aMjTMevHVqH9
N6Zo5aSCpkdWYv36c4remPr7S5+sQv83LOfpKdrg4yevRHqbUpLOF2i/bSmJ
L7YG6f+Sogpbzu/0bLDP357C/fZozx0pSvEGK9hPK8v5Ofr/RqS/JyXrzT+x
/9ibkvODv4J9sTLn/19K4oudFPz30vQL3yeG/WFpZdGHpmmIP+8N/j9l0vSD
v26gHfbLx6XFPzrs/w3z++WUub2OT8v+LcRTNSz3lyjzfHZimvZ5g+I7cJ59
cpp2e//riSj/KWnoJbB/PS0t/fUL7P/PSMt+4TD0a+XTNBH30bD8KqXpuX/2
3Na4JvTrVdK0rvp7n70e/IMdc/zraiG+gzLXt6oyp1e1xPM1nLwONZ+54hjo
N89W5vrWStPT9Y79tN8+nFfUSUv8mrXQv9VVlv2JsuxPlGV/kj6qL5T4B+mj
8Ve4fVulybujfJEO5+Vpmrqk1rx8DPJ2zPF0bsT+vn1a9s/9w/0Vyix/w7wP
vzgt/f3acH+Fsvh3pcUfp2fw71Lm8l+SlnOTK4O/Vlq+95cHfy1lTq9z+mi8
aNnfpOmjfnsfqhf0TV2dfHx4ggvx/GVpmZ+DvdXlaTqx8K8FcyuG+yPSdObf
mXuaHcD877iztycO/kNXpWlopyuWvfR7uH9OWdaNyjyfdXf91W9Ht2N+7Zkm
qhxfduISzEfXuv7o4029h/FtWOJxKXN616VplPcvnBHWg2mx53o27N+UOX3D
cr+cMte3r7LYvypLPAdlieeQpu5PlNp2Ybjf3rDYA6QRZyqsR5XFflVZ1qPK
EdnQHGXx51IWe4AS6Rvm8ZBLkxdjrCD4WymLflxZ9j/KEp9fWc77lWW9WiJ9
w1z8m0s8f29azh974vt5nzLXzzC3x9gSPClNdbwBX9iPP52mBw+0vqTKRWjv
yWnx72iP/mOY339GmetvmOcbw6L/VZb1mbKsz0qk95zr3959OdwX/Zz+LvNy
mtqX+/r5VDvI1zDX5wVl8QdLy3oz7KdfSsv6q1Xw30pTeQ4QEfyt0hIfuWXQ
H6aPxkvl3z9N062+nGeF9U2atvv7c89E/zXM/XdNWvRXIf7pV2nq48tZEfl/
rSzrnTQ96w2OzwrxkdMSH+PMEB85Tb3v7nDu8gqQ7/q0xBuqiPoalvVKmtxq
rfAul54/pp3xszK39yZlsd9T5vlqc5r8tPzMWSjvFmXu74Yl/ie+n8cg/T3K
sr5Iy3OHcd+rYZbPXmXxd0pTae+/dAjxVfcpszz+Ueb3DXP/Mczy2p+W+L2H
cL/vgTR9yvHUEN/zYBrxaRA/9ZAyt/8xGfkeH0Q8UsPcn0tn5D77/bjf1rH4
q4b7cjPwq0L5yynzvydnxP7mULj/VpnlYZjle6oyj1fDnJ9hWc9kZP96CPU1
LPrLjOhn1iL+aV1lLs+5GfnvP4EbZmiZ30/+FO6jzUB/Dnk0Umb5N1WW+MwZ
2Y+G9w2LfjID/wTUv5Oy6B2VRV+pLN9/ZZZPV2Xxh1bmevXMyHhdhvpdo8zl
NSz6FmXej/TOHL1/XfQtGYlf9gnk2zcj9xMuhfwNc38dkKHFrLDHfcI3ZCR+
4Meo78AMrfHxeD9G/o4b+XDB/0P5h2ToLjc99ArvGxZ7PWVOzzCP9xuVWd6F
rv82uWnh4cXIzzG7fy6BfNMZGr+5zfjN76C/Gxb9oTKXL1uCh2do3hn/Vf3z
NYw3w/J9VObyGpbvZYn3b83IuJ6B9O/IQH+B9hmdITZHeBLPGxb9Tkb2Q5Mw
Pscoi75Gn5f7YTKiL3gK7Ts2Q2N8/LPAD2Zojw948hTK+3BG4ndNwnz2ZEbi
ydyF/A2zPA3L+WZG7H2Hor/PzNBpO58/decQjJdZymLfr8zlmZOReIeD0N8M
y/dPmev7jhvfuerLcjeE+NTKYl+vzOV5V1nO4zLk3ZNXDg3xqJW5P76fwX2Q
mI8/QH1zqL9hLs+SjMTbmo/+sTQj/nR78f4nGfqp3J0/lTsCeS3LkHdf/vC8
4M+szON7RYYu8PeHtcT3b6Uyf98/zVCnRQNv+r0n1gOGxZ5KmcvzmbLs25Hf
rchvdUbu05gV1gMZsb9Zjv36Nxnq3n/pjOtODvEpM/CDxf7zhwwNXNLgsX9q
YL/muM77ff64vw72w+syVOm03468WBf20IZlvaDM7xvm9tuQkfViLeyXHB98
vab7H/ZLhkW/oSzfBWUuj2HRf2Ro3R8DnzipKvJ3/G/q7SlDqmD/53jSmw9c
Macy9AGblFkOhrk/bnX133X9XU3Ko/zbMrK+OzX4F2Ro3P7NP75zEva/2zN0
kdc3HgP5Guby7VAW/4OMxJ860lzs3HZm6JlbvUYM65vdGbGPXRf8uzPko+8/
PgP95S9lOd9UZvnuy4j++slw34SyrGdcf/nGG8AivyMZiVdxE/qrYYm/lJH4
t+nmorc7Jkt3+QtSk82l3KWUOX3D/D0yzO1ZWnnu/dEudQxzfY7LIg5Pc+Jr
Gk7Mir9HY4yHk7KyvrgQ+RmOeb32Kdmj9xN4XHRaFvH0mtMDXvF9elbm39bg
M7Ny/2fT5vS5v/bK8cxnltSa1wz7iUpZ8tHIarWC/A1zOR2fPLHGzEatIY8q
WfLm8aPbBP/1LF3zX9fzprvf2e60apbW+fVPO7xvmONYVMvS8wM2ff17W8jP
8Xd7Pjm+Xjushw1zeatnqfqfr53xXzu0v+OnHit3Tat2aH/Dch6tzOPN8YCf
JpYd5PLz4prsuCzbm6B9zlbm8WeY28cwm9U6vsH7H4b8amap2eqNKxJtUT/D
3H6Oh7nl7o9tsd8wzPWrlaUv/TgI+TkesbHL3PJt0R7nZCU+S5twnp6lT/0F
6aG96mapq1uNf90G7X1eVuy5WqH/G+b3HS+Nfl+xVusQX19Z7AGVWX6GOWyh
YZanYW4/x3x/cBuMhwZZeqfnzjE1WkPejqv473lrjDfHe1PrChe652/z/8Ex
3w8SynOBMsvXMPefhlmKnvxg/3HhvLeR9jeuv+MRXSv8NDfI1zHbg7RDfo7b
c4AH9OfG2aPn79xehnm8Geb6Ghb/fWWWt2HuryW5TVb0pT3AlJX9z5Wob2dl
lrdh0bcpc/muzB71/+f698R8MRr9zTCPf8NyfpqlD4fuqvbtnWh/w9z+hnk+
ctzJb3dGQ/7XZuXf0RgvvbO4Dx3yMMz1NSz6tCw1yrgFyiik1ydLY3g9h/Ru
yNLHM9c8WjwY6Rnm/myY56uBylx+w1x+wzx+BinzfODYu4d9EPIzzP3HMMtv
sDL3J8Pcnwyz/Icoc37DstTv4H1vZa5vLvbRBVnxv+mF8hcq83iKKHP/S2Tl
PKIpymuYy5NUFnsJZU4/l6VX/HrgbMxfhvl5wyw/w1yevDLXzzDLp1iZ+5dh
Lp9h7g+GuX2GK3P/Hl4i/xFZ8Z87BfI0zOUxzPIyzN8vw9yfDIs/kDLX53Zl
lsfILLU7+EeVm8uivHcq83ge5Z73AT7/bibj2TDL1zD399HK3J4l+b4sTfL7
q2+xnzEs92sqs5/Kw2494Iq7axHyM8zlN8zlH6/M8jTM86lhlqdh8ddX5vIZ
5v72iDL3N8Pc/oZ5PnhUmdv/0RL5G2b5PZWlGW67tH0a8jfM7fe0MvdHwyyP
pzG/PQ95TFYW/W6Wevj4Di9gf2WY3zfM5Z+izP11Sonnp2YlXtFU1O/ZrOjj
pqC807Oin52E+szMij3xFLS34zf8fY2TIf+Xs/TYS/4Gh2byvXVc2/fXh5vR
SO+HNTdLV/n900PNZL58JSv3FT2A9jAs9qzK3H8Mi32rMveXV0s8/1qWKnj/
g3vRvoY5/9ez4r8yNtz/lJX4eCNQHsdy3oD6LMhKfIjbm8l8bJj719tZOugD
HoX3DfPz72SpS8XaG14dgfwXZuW+8tvR3u9m6YWHNjz51oiwX1cWe9ssfe/P
Y0eE+6TQPreE/bsyp/9+lvJ1Wufr3IL3HbOZya3hfillLm9J/hDr8VtQ/o+U
WV6LlTksysdZnDei/Qzz/LMU/SGF+n6SxT3V6J+OL2viF7T4fWWWBnt/00GQ
h2O2DxyM8ee4HX/PUJ5Vyhwm1rDYHShzeoZ5PHyWxX03eP5zZS6f442rfnn/
jkHgL7Pi3+GY1zuGef5dXYJ/yMp57ZUYT2uVWb4leVNW7AcHo323ZOV8fjDm
G8Pc/7Yqc/sZ5vlzW4n3DXN+hrk9f9Hy8/u/ZXFu10y+X/tc+/xZcfCf1+H5
f5T5+X+Vub0Mc//cr8zyPqDM6R8okd5xOYkfPxDzz/E58W8fhPqeoCx+Scrc
vo6re3/BAcjvxBzV9edtN0AeJ2r6nL9h2Q/nyG9/bo3j/VNzcn9AEep/Wg7n
YKjfGTn6+js3YFdi/Bnm8eCY9ZPfo33Lu/L++8Br/56I9YJhbh/H7P5XBeuX
CspcX8d9OZ4o1idn5qh4rdugtMD+xzDLq2KOvHgrDsZ63vE1Xca9PSeN9yvl
xP52JNYrjjl88btYD1XOyXzzH9ZXVXJH/Z1ZXo4/7DztgdMbQ99UNXc0HozY
UyjLfj73/+PFOB6dL3feLdRC6m+Y5VtNmeVhWPzdchI//uoW0j41c7CvQ3rn
5GjH2Ml3zpoN/VsdZR5Phrm8dXPy/ZvbQuRpWOwzlFm+hsWfTpm/T4ZZXiV/
r5+jj7yC8jX4izje2jW9peurLbA/zcl9FuOQv2HuX473u8/TM/fgfcdPte7a
ZPWoFtLfL8xR42ETlx9MQ54Nc8ThQRIh3kKOvPpkYSHsJwxzezlme5Rh0D86
PnOHN7CGPBsrc/8wzPJ1PM7bp10L/WSTHM1qdl+XhpdCX2iY29Mwl98wt4fj
89tfNTDdEc83y9Ehbx7WHuV1vIT1B+hfjnf4eHLNIb/mOfLTQ7Xz0B6O2d41
xOdplSMvnU1VkH6bnOxnareQ+ckwl88w9zfHrA+oF+Izu/E447sTL24a4i3n
aJFXF18EeRrm9rkoJ/uPEH/BcamWsWc+74T+Zljsd5Tlvj5llvfFyvz9Msz1
Mcz1MczydMzmRp3Rnh2VebwZlvh6ylz+Tjmqsqv11oXhvvsuOfLDc8iLKL9h
Xg90Veb56rIcpX28wwVI74ocsTr2I4yPK3N0uw9I8R3SM8zycJzwCsifkP5V
yiyPq9148/FANyC/Hjma7tfrmzA+euboOX+h8rYQH0+Z63+NMo9nw9xevXJ0
Fxv8YLwa5vwMc3l65xCHFfXrmxN7jLVIv5/r7z4exaIWMn/3z4n9+yKUzzD3
N8eb10XPOv09pDcgJ/GwFuL9G3LkT0evfBv1NSz6EGV+f6Ay18+wnIfie/E2
+s+gHM6LUB7D3N8H56iJvS/PMOcXxXy5CP01kcO98Oivhjk/w9wfkjmxR5sL
eRvm8jrmc4UZyD+Vo/X+PCHEzzHMz2dyEh/uZrRXFu0VgfyymA+GIr9cjsp7
+9BrIe98joZ8Pn9/9CrML4Z5Pip237erqmyb3xHpD1fm9B3zeXd7tI/jhfZ7
apjH/8052Nsgf8Ni35SjoX39DRnoP4Z5fr8lR72Kvpny0gVoD8f1vH1giM/u
mO93bID5+dYcne3j69QM8VKURX+Sk/uMzg7xUXK084mLdzxxNspvWPQjyqIf
Ueb2cjx1ivurjva6HfWvjvrekaN9mXuajagGeRrm/mOYy2+Yx+tIV/7nPljQ
pjLGn2Euzxi33vALskNYrznmdjyE9ZrjUR+vbT33MPQ39+ToD1+vI9CfOn7a
O/C757ld7s3BPgb6M8Ms/7E52lPl5rLLDyM/xw38gsz9zvORYc7fMOc/Tt/n
7+84zZ/LY5jl45j9uQ5D/2eY838wJ/rnkL/jjmyvA/3WQxhvh4L/gjKX51En
L28v/TfKY5jL4zh3TpX6j/+J9a3jmR0m0bd/YP38uPt99xsnjdsF/ZphPg98
AuNxF/Kb4Na3/If0Hc+5dMMtZ/wKfZ7j+n8vHj9gO+rr+EW+vwTr34k5usPr
OX4J/hM5evat93/6bBvW247ZXv4XyGNSmM/RHoa5PE/lyF+f2Xkr1uOOC/97
qtmnW1E+w/yeY9bv/4L6O57fZ1mZ07ZBP/20Ww83qtVq4rZgX+jGi79vYCvK
57gQ+XN/dhyBPwHzCzl6y+t71qI807C/2oD8HK98eN3yh9dBPoZZ/oa5vtPd
99qHr1iP/YdhHieGuf1nKLO8X8xJfODwvOMaPccs2LEO+vyZyiwfx2yfsR79
7aUcFfh4nBvRH2flyJ+Ort8Cec12v0+5/JP7t6B8jmf7DcH2ED9emcs3N0fH
+nPe3/D+K+57dlvj5/7Zg/I65n/3oryv5eQ87V+Ud54yy88xq+f2oX8b5vIa
5u/bfKR/EPJ2zP18P9pnQY7ehH8A/+7Yh+tY9if2lwsgn+CP87Yyl+ednMTb
+RXlMczpv5uj5/18vxPpO67i4wdsR39elKOTHr39s3u3QF9umNvHsNh3Kos+
KyfnTVuCf7gy5/dBjjrXbPZD318gH8fbxs1c/fMvqM+HyhLvJ0eXPjH5tCG/
oHwf5ahc51iTe7ZhfnPca9KPNQu2Iz3HH3XKX/rVdpRnsTJ/Dxx3n/5xjzLb
Ub//KXN9DHN5DYu/T478cC/8BfP5xzk5bwvziWHuf46jGK/cHkvw/d6G95fm
JN5ekJdhHs/LcqL/XY/0DPP4Xo70NqB/r8zJ/XM/Yv4xzOX/PEfeHHbLP5D3
F8r8vTLM841hng8Mc3kcL8X3k/mrHOL0YP3yNdr/eHyvv89JfOWTsH4wLP5G
ypzOWmVePxoWexaMpwrBnkWZ23uX2y94A8AdkNcfOelHG9GfDXP5DPN4Nczt
Z5jLuzcn95GsxvxhmPM3zPntgzzmob8Z5vb7F+M1xAcwzPIyLPMI2v8+lPeQ
+z5W+/aDoSmU1zHfX5wEH8nRh96/NPhv/qfM7e947tA3N06Iov0Ns3wNc3sb
5vY5Jn+U5f5aZbGnydNX3v4y3D9RKk9DucCYvw1zfY7L4x6oYC+jzPNhST41
T7NbbHE7Jsjv9Lys9ytBfo7ZX6ki5vczlFn+5ZV5/BgW/Z4yj98Keeri++mZ
WC8YFn1fnjrwAUKwv8nTvz+UXTKzfND/KbO8HOfnPT9jcwW8f1aefNjAU8pA
Po79576wVLC/yR+1Pxb9nrL4SymLvk+Zx2dVZW4/x+x/9w/05Wfn4V8K+0rD
3B6O+f7GH6Hfr5kX/a1jLm9tZc7fsNiv5MX/9Qec3ziuht8lPoQy/35enuYc
7y+IwPnR+Xn4d+L8yPHIKyptfm0R9P8NlOU+NWUuv2GxN1EWexNllqdhuS9C
meV1oTL33wtL5GeY6+f43V677qv1LvTTDfOU9QH23oX+2bDYh+fFfuddyKNJ
nu7xBzyvQp/dNC/xwoI9b4u8zC+z0H6G5f4HZa5vyzw16PRs+S2zcV7h+Bs3
fTWdhfIZlvshlLk/tVJm+Rvm8hgWfVZe7KEn4PeuefEXeBjpX5aX+9gfwnnT
5cpcH8NcH8Pcnoa5flcoiz5Kmec7wyx/wxKvtkR5uinz+HX8/pcnvf/lg+hv
hsV+Ji/xy+6HfK/B/DUGv1+Xh/0Nfr8O4/MOjJ++eUr6gKAjIe/rlfn7dT3G
wx3I3zDPV/3yNIiKGpxyG8p/Q1788YpQ/kF5sR+5Ee8bFvsVZZaHYS7PEGXu
345b+gBHw9A/hyrz+4b5/WHK3H9KcgLyuAH9x7Dol5R5fKby5K+zXDUA8s3k
ZT3eB7879tuVGr0hj6wyyyOfF31kX5S/WFn81/Iil+vQH4fnxX8hnIfdkZf1
YDLYx+fFHuEOtJdh0T/k6Y79iyZ9cTvSN8zj4548pb152kiUz/HVPkDx7ZD3
PcjvdvT3e/N0eGLjFcNC+obF/j4v/Sr0j7F5uvMs7yCO/ubY3x45ZSTkPS4v
+oU7kL9hnu8c/+ztx+9EeQxzee7P434XzCeO5f4r/P5gHvdlIf/H8rJfPg3r
i8fzdNXA9KhHa2M9a5jr90Re9I0XhngJeerqz6u7Yb02MU9ll7+/7ZJrsX4x
zN//J/OyHw/38Rjm9yfl6dRKE4bfMQLrpUlh/AZ9gTKX3/EiHv8oz1PKoh/I
07QHTs/0nYrfJ+dp3O7e79Veju//M3lZ3+3G81PyEo8h7Bcdd/z6r87d/8N6
ybDc56As/oTK3N6Gxb9QmcfDs679fUCZY6FfdEz4nfvztDziWCF/x1UWXzqq
/q9Bn6As90Eos/ymK7P8HEucLayfHX/j74PbifXoS3ny0V+XBH2M4/lFR6p8
Ffb/jtkfaCvqY5jrM0uZx59jf1yX3oL1oWHxB1EW/YMyt/PsEs+/XOJ5wyy/
uegfm7GenJcX/dZirOdeV+b+bJjlY5jLP1+Z85tf4v038nKfz8foz28q+2mw
1dt54utZFkPeCzF/LcX+0zCnv8itV3y4upfQHh/mxd9zKtrDsNzf4Nav/mLq
qWgPx5M2VMk+OgXj+aM8TfD300wN+3llXt84rujPI59F/12sv3P/NSzxOpS5
Pxjm8WiY5f2xMvdHw1w/wywfx+yfMwX1Myz7/Tytm31z59Onor8twfcw7N8c
N+aAChgvn6K9Xkf6n+XJm+PnZ6G8jtnfbxr6z+dYHzyP8q7Oiz5/MvJ33Ojt
jst7Po35Yk1YX0Hea/JH4+NI/Lw8eXeECyajPxrm/vNVnrw6t2XwX/82Tz7c
9QfTUH7H7P/3Ep7/Dv37DZRvY4n+uilPW59r2v247/G+YW5vw1z/zXn65d5B
2+/dgP3SFmWun2EeH1uR3w60v2GWj2Hxd1Hm8WFY7G+Uxd4mT+wO8TfKu93N
jz78xhHIzzD3zx3KLJdf3XznulPD4G/zW17iMZTH+YVhzm9XXsbp6Tj/3K3M
8jPM34+/8kfPj8T/Ny/20p2QnmG5X12Z67sP/b070nd85oo2jz0U4qH/k6cT
/Od8CPQrhkU/kacFXn85HOkdQP8Yi/QO4Hv+CM6HHK/39lrP4jzxoDLX95Cb
L36sWTBrLuRlmPujYZ5/j+Qlvsqb0BcdVyz9fSG+X4a5f5QrRn9Ffscrc36G
uX6G+d+TiuU+6pmQx2nFsn8ZifQNszzOLJbzk+Gov2Px8wz3kSiLP06x1KsI
/aNysdxnHMX7hmU/Xyz3yw9D+R3zvDkU8qheTD/h/jRuD8Ocj2HuvzWKZX7p
j/M5xz9cO7XhN/1wfuiY46/3QX5nF5O/zu6+a9CetYtp/Adz73m5I+wPHG/r
sr5pNtxH51jiyUH+5xTTAe//3RbpGebx6Zj9QYN9kmGWr+NgnyT2Q8U0qffF
Dx1sGeyHlMV+SFn8t5W5PQyzfOsqc/EM83xkWPxxlLn/1C1RnnOVWd6Ov/tg
6K5qrfB+vWLKfdth+glN8L5j3t80QXsZ5ucbFNMLXsFWK9wHXyz3w1bGeaph
rl/zYonPcGy4T12Z26d9MSUOvDCzZgO830GZ+5Nh7p+GxT5Gmet7UbHMV02C
fYwyz1eGuT9crMzyNizxOZU5/U7Fsv4P9iqdiyVe84uQbxfXn70D4Xy0v2Hu
T12VWZ6GebwY5voa5vQvK5b59x3kb5jnX8fTvL3wu5C/4yV+OvwA9gOO/+fj
5XyE+l9eTNlRj74w/2P0f8NyH2UxvfruLZf3Xo36X1lcwp6mGOvdYE9TTL8W
zf78yZ3BnqZY7H13oT5XF8t9m2UQD75HMTXy/vfHtZT6OXar8QbtT0Z8/J7F
Ys9dFfHrDYs9jTKn19f1h0XDn6js0uf50jCXzzCX73pl7n+G/w+iUsXj
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
60nByKc1rvl7ldc5n77g+luD+9tk+f8BBXYzJw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 14.37509259259259}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 700, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 309.53333333333336`}, {14.37509259259259, 24.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"ovi\"", "\"PK\"", "\"SZGK\"", "\"G\[OAcute]lyairoda\"", 
       "\"M\[EAcute]rce\"", "\"vend\[EAcute]gt\[EAcute]r\"", "\"kisterem\"", 
       "\"Oktopusz 1\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9095543452556343`*^9, 3.9095543716954093`*^9}, 
   3.909554435043933*^9, 3.9095544672457514`*^9, 3.9095881622713737`*^9},
 CellLabel->"Out[20]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"log", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "10"}], ";;", 
     RowBox[{"-", "1"}]}], "]"}], "]"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.909057312010708*^9, 3.9090573178440557`*^9}},
 CellLabel->"In[18]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"override detection\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"7\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 11:57:30\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"override detection\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"7\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 11:58:00\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"RasPi\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"CPU temp\"\>", ",", "\<\"62.8\"\>"}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 11:58:01\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"override detection\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"7\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 11:58:30\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"override detection\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"7\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 11:59:00\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"RasPi\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"CPU temp\"\>", ",", "\<\"62.8\"\>"}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 11:59:00\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"override detection\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"7\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 11:59:30\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"set temp\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"7\"\>", ",", "\<\"21.0\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 12:00:00\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"external temp\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"11.5\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 12:00:00\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"1\"\>", ",", "\<\"state\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"2\"\>", ",", "\<\"RasPi\"\>"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"3\"\>", ",", "\<\"CPU temp\"\>", ",", "\<\"62.3\"\>"}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{"\<\"4\"\>", ",", "\<\"2023-11-16 12:00:00\"\>"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9090573183114386`*^9, 3.909121378978143*^9},
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"categorizedSmoothedRoomTemps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Quiet", "[", 
        RowBox[{"Module", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"albatrosBounding", ",", "pumpBounding"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"albatrosBounding", "=", 
            RowBox[{"BoundingPositions", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Transpose", "[", "albatrosState", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"dataPoint", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"pumpBounding", "=", 
            RowBox[{"BoundingPositions", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"pumpStates", "[", 
                 RowBox[{"[", 
                  RowBox[{"roomToPump", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"dataPoint", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"albatrosBounding", ",", "None"}], "]"}], ",", 
                RowBox[{"-", "1"}], ",", 
                RowBox[{
                 RowBox[{"albatrosState", "[", 
                  RowBox[{"[", 
                   RowBox[{"albatrosBounding", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"pumpBounding", ",", "None"}], "]"}], ",", 
                RowBox[{"-", "1"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"pumpStates", "[", 
                   RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"pumpBounding", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"externalTemp", "[", 
                RowBox[{"[", 
                 RowBox[{"NearestPosition", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Transpose", "[", "externalTemp", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"dataPoint", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
               "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "dataPoint"}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"dataPoint", ",", 
         RowBox[{"smoothedRoomTemps", "[", 
          RowBox[{"[", "room", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.9089455950368104`*^9, 3.9089459719068985`*^9}, {
  3.9089470538645277`*^9, 3.9089470587677555`*^9}, {3.908947612821003*^9, 
  3.9089476299614906`*^9}, {3.9089476646663055`*^9, 3.90894766998693*^9}, {
  3.908949584305956*^9, 3.908949595130687*^9}, {3.9089496611532683`*^9, 
  3.908949671656799*^9}, {3.908949712982856*^9, 3.908949725701679*^9}, {
  3.90895005579069*^9, 3.908950083433028*^9}},
 CellLabel->"In[21]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"kEstimates", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", "3"}], "]"}], "]"}], "]"}], 
        "\[IndentingNewLine]", "&"}], ",", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{"GatherBy", "[", 
          RowBox[{
           RowBox[{"Map", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "8", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "9", "]"}], "]"}]}], "}"}], 
              "\[IndentingNewLine]", "&"}], ",", 
             RowBox[{"Select", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Map", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "2"}], "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"konzisztens", "-", "e"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    "amit", " ", "a", " ", 
                    "f\[UDoubleAcute]t\[ODoubleDot]tts\[EAcute]gi", " ", 
                    "\[AAcute]llapotr\[OAcute]l", " ", "tudunk"}], ";", " ", 
                    RowBox[{"1", "-", "2"}]}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "f\[UDoubleAcute]t\[ODoubleDot]tts\[EAcute]gi", " ", 
                    "\[AAcute]llapot", " ", "az", " ", "albatros", " ", 
                    "szerint"}], ";", " ", 
                    RowBox[{"3", "-", "4"}]}], "*)"}], "\[IndentingNewLine]", 
                    
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "f\[UDoubleAcute]t\[ODoubleDot]tts\[EAcute]gi", " ", 
                    "\[AAcute]llapot", " ", "a", " ", "pumpa", " ", 
                    "szerint"}], ";", " ", 
                    RowBox[{"5", "-", "6"}]}], "*)"}], "\[IndentingNewLine]", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], ",", 
                    RowBox[{"(*", 
                    RowBox[{"\[CapitalDelta]T", ";", " ", "7"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "]"}], "-", 
                    RowBox[{"Mean", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "#", "]"}], "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}]}], 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"T_int", " ", "-", " ", "T_ext"}], ";", " ", 
                    "8"}], "*)"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "5", "]"}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}]}], 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]T", "/", "\[CapitalDelta]t"}], 
                    ";", " ", "9"}], "*)"}], "\[IndentingNewLine]", "}"}], 
                   "\[IndentingNewLine]", "]"}], "&"}], ",", 
                 RowBox[{"Drop", "[", 
                  RowBox[{
                   RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"categorizedSmoothedRoomTemps", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], ",", 
                    RowBox[{"RotateLeft", "[", 
                    RowBox[{"categorizedSmoothedRoomTemps", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}]}], "}"}], "]"}], 
                   ",", 
                   RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "!=", 
                  RowBox[{"-", "1"}]}], "&&", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "5", "]"}], "]"}], "!=", 
                  RowBox[{"-", "1"}]}], "&&", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "7", "]"}], "]"}], "!=", "0."}]}], 
                "\[IndentingNewLine]", "&"}]}], "]"}]}], "]"}], ",", 
           "First"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.9089478519647827`*^9, 3.9089478615530806`*^9}, {
   3.9089479305298185`*^9, 3.908948010491604*^9}, {3.9089480432627254`*^9, 
   3.9089485011123686`*^9}, {3.9089485603776484`*^9, 
   3.9089486791471715`*^9}, {3.908948734902995*^9, 3.908948747169984*^9}, {
   3.908949737692789*^9, 3.9089497385775433`*^9}, 3.9089498027195463`*^9, {
   3.9089500932226777`*^9, 3.9089501326471334`*^9}, {3.908953353304487*^9, 
   3.908953416943821*^9}, {3.908953496691198*^9, 3.9089536180547366`*^9}, {
   3.908956108399001*^9, 3.9089561201734157`*^9}, {3.9089561748573685`*^9, 
   3.9089561807244453`*^9}, 3.908957073269355*^9, {3.909029171375862*^9, 
   3.9090291990416327`*^9}},
 CellLabel->"In[22]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"kEstimates", "[", 
             RowBox[{"[", "room", "]"}], "]"}], "[", 
            RowBox[{"[", "onOff", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"onOff", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
           RowBox[{"roomNames", "[", 
            RowBox[{"[", "room", "]"}], "]"}], "<>", "\"\<, \\n\>\"", "<>", 
           RowBox[{"ToString", "[", "k", "]"}], "<>", "\"\< = \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Fit", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"kEstimates", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                    RowBox[{"[", "onOff", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"onOff", ",", "1", ",", "2"}], "}"}]}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ImageSize", "\[Rule]", "220"}], ",", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Subscript", "[", 
              RowBox[{"T", ",", "bent"}], "]"}], "-", 
             RowBox[{"Subscript", "[", 
              RowBox[{"T", ",", "kint"}], "]"}]}], ",", 
            "\"\<\[CapitalDelta]T/\[CapitalDelta]t\>\""}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "2"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5", ",", "20"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Fit", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"kEstimates", "[", 
                RowBox[{"[", "room", "]"}], "]"}], "[", 
               RowBox[{"[", "onOff", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"onOff", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "5", ",", "20"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "->", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<nincs f\[UDoubleAcute]t\[EAcute]s\>\"", ",", 
              "\"\<van f\[UDoubleAcute]t\[EAcute]s\>\""}], "}"}], ",", 
            "Bottom"}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"room", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9089485056400805`*^9, 3.9089485200905485`*^9}, {
  3.9089498187196884`*^9, 3.908949927421328*^9}, {3.908950137610134*^9, 
  3.9089503581788845`*^9}, {3.9089530847398624`*^9, 3.9089531769828234`*^9}, {
  3.9089558698121057`*^9, 3.908955874520611*^9}, {3.908955975838831*^9, 
  3.908956098594946*^9}, {3.9089561904665823`*^9, 3.9089562218993692`*^9}, {
  3.9089570807983513`*^9, 3.9089573147300024`*^9}, {3.9089574128054085`*^9, 
  3.908957452955312*^9}, {3.9089582038049545`*^9, 3.9089582106571026`*^9}},
 CellLabel->"In[23]:="],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.007333333333333334], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           PointBox[CompressedData["
1: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
1TP/B5QlOgg=
            "]]}, {
           Directive[
            PointSize[0.007333333333333334], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           PointBox[CompressedData["
1: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
pLZiUwbCNiOX6acYELJVdjKmsBH/H9LzsVY=
            "]]}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJwVk3k01AkcwIkYaxzZceXIMTPRmMzMb9Yj5JssxlTk3A4ZOki79Oy0vFJR
nhyzdnfKEYoynSyZ1ZQ8fRURIiPT/NaRUr1tJenZyrm2/ePzPn9//vjYxyWH
7l2moaGx+Qv/+wE9n6ahQQPZN7sibZVV6OS/y1ihTYNniQ836IxWYV48l/q9
Hg0sKnnsyYkqDLmu1iJNaFDwla72XYoMh13p03UMGhwerauPBhn+s65ZGSOk
QXiupsG5Ohk6bH1fgEU0WDYia7UquITHj4bpHWebgijrLcdSeAVT35zhbxeb
wacrrQFTRtU45qneKblkDincHCf1mVrUGioev9dnAb9trlmgaNdjnERZG2a6
ElQTHidpL+VIMKkHvfyswACbJ1dfbEDffozPlFhD3fy+tGvZCtTt+tDW2WsD
PziZzYXH3Uaf6/RV++dtwSanSUSxvYM7tryJktvZgWdo9mvnpSZ83HT3/NBt
OxAGBwSHtTSjbXB4ic4WezjkZVh/OQ1RcoD5++h7e9AOOmrBr25BYiENXmU7
QOAvk10Wefdw1pTyvmiNI9zPTZE0HLmPpRGRIcJuRwhKnxW8TmhFsR6Dw4ql
Q1DO/Kylfxsm+XNYjVoMOCEwblzu9gAvfG6SpZQxgEevTPxo2o7T3CyPQR8m
WDT4ssopHWgn1c/c+IIJVK83f6k/dWD2vq8DyNTVkDZCKTZXPUT9tignKysn
sOZ7RRi2d2JnoXVO7h9O4C4bX653pQvjfq4snQ10hjhqubzkZDeuNIx9aP7W
GVqcRUmjKY9QX+uiOPbEGigVVVivCe1Bq8xVXtuYLLi66cOfLL9e1GHsVIR2
sKCN43/6Pvcxsrwt61KjXYBtnl9Rq9uHyc9MWoM02HD64EK6+ngfTkxLIgQl
bLgZWR22bKoP/VzbSwXstTB6e8fVz9FKbJr2nP/cuxaqDhVmBaqUeMCFN6jc
6wp0pG4v8+tHm1TeeI02B3x2G9wSNPejg4nkss5WDlieERrMsZ8gDb71elHG
gVnIfyEuf4JF8vJRk3ccEAeGewtpA8iP4fsOunOhZni71DFrAONCEuUzeVw4
1j2eFLU4gEcHluaLh7gQ5ZbeGSFW4U2pSruHyYNJttAm8qUK0wsFVtvSeGCb
UTVTv+MpivoXpw638YAa49Fj9Ogpci+uqLQxImCpsW+V+zo1ShWtO81FBBQk
f5htqlej8XIFebmagKH64J4N9iSqL6z3nqkhYMpbs51wJPH8+o4LgloCdLrk
dxkMEl3SyMSJGwRwx0xv6DmTGPh2boGrIOCUybBUySExQ+lj39xCAPFjwnex
QOLUuc79T1QE5PMzX2bEkHhrXWgvXU1AZQtvOCWWxGPqQd5PJAGKTa8G9uwm
kbpiYt5iiIDnewLaA+NJdMoyLNj1nAC3QoNrxskkihLD5H+PEzD28WxS5TES
V+sOm3lOEDCTKYyXZpA4WbXniOQdAQaGizFZJ0hMHznk5zpFgDtTtDUhm8SS
kJKn4o9f+iOZfE4BiTHv7DzbPxEgG1O7OPxKIjPvWoX5DAGNSbkMmpTEhtY7
CXfmiC8PTZjNFJJ4RLSxR3+BgDmT80bjxST6LnZzoxcJMKoIpgyfJZFSGl5U
+y8BjixNzd4yEh+7jcwtLRHgcUs+i+dI/A86MFQq
             "]]}, 
           Annotation[#, "Charting`Private`Tag$264702#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJwV0HdQ0wcUB/BcsQxBhBCIEkeAJDJEMjxOJfDe4QQFWUpBkJAWGS7OhmIL
DhxpqtEiClJQCBCtIiKHNaxDUZChEmSZkBAU9JQyhEpUZumvf7x7f3y+7727
Zyc8HBTzDYlE8iPq//6UcZ5CIlHwrkri9YimA8ctey0UCyhYXGXccn2pDs7F
cswOmFDwZq4kOJWqg4BilYGaTMH8KEnceisd9LoxJu4xKXjpw68Z9xfqQL+h
tj1qOwWTvorf/znVC/aBYxcfZVHQi3r2YrqqF04cCzY54WqNyt1pfdGXeyF5
8MracJEN7hBzadJ5LQx4qCKkN6j4o8X3gaeStGCgvTr0+OUSdI5NqXD9qAGh
tL002NoW+Yd2VAv2aIDHMkvkb6LhZNs1RVRHD3h3PIpNky5Dy4EbO9979oDR
s38aWpTLsboua4l9iRqgmLEyfmYFLpw21Dox1LDHfzC0nE7HyrduG6rSVdBW
8zBPW0lHc0d1BsVIBSt2hmQb+tuhfl0cjXnyFUj3s+6+HrPDddNlWDvaDbzZ
o/hObI8Mm5+j7GK6YcraeCzL2QEPDkzZLmrvgpxduwO2P3fAzSlCw1LoApEJ
k+0SzcDGQ77DtpWdcGgL26XKgIly8vCBxcxOKPhaIz+Sy0RnS9PBttwOmOCc
Wa8BFi6qeztPNeoAeoZp2sZ+Fp7wkG+1TmoH8T6rrerkVZhr+U7SN/ISTBtC
HWk0R7TK7t3nFvYSWjKXSX6774gJn26lZue1gfCCLGdqmxO+8Is7z09Xgq15
dDN12AkHTf7oHEtoBVODQlH0KWcMSWk29wh7AbS0lfwwlgum+sWfzmQ/B0Nm
hCKoyQWfVPaEhi96Bi6eS+8lR67G73q2rayYa4bDfeR6X5Ir3gp3ojuommBk
QrrLJ9sVfS8ZU1Y1NMImt8YcH9c1aBZdEZupeAo1Ex4zX5VrUHxJpSdnNMD+
1VxNe4wbBiV/ETmm1cPyZO5QyQI2qmvFa/zCnoA9WXrTMJCNpVXWWpPNj4GC
m/n9uWyU+4s+sN3rIKv82mvyKBtlEkm4kv4Q1kat9das46C8j/kiYbYGhAEJ
5ZPnOEj5cqOMWVwFx7rmZ65qOdgMT0MeCCvgQUb3glYWF+n6/j6R9wNIzfSh
hR3l4mB8vzZIXw6CjrnxXxq4GODb91DQWgacQkvZ8sU8JFXrn4iFdyFDUR9B
FfCQLfw0KlHeAotvFeqbd3hY9nro3ZBEDqoCL8/JEh4KUpJKVElyyPNqKvAp
JeapJFGDUA6rj6oTRsoI97c2yOPLYdvw9CxHwUOLWrALHC+Ck+1gV1tHeM6V
yIrQIhi/3hLf2U34Lq9Xp1mFULEhSMlQ8bBuvPl6olUhHFdpuD+pibw0OCaS
VAhmliMzS7SE18fp3TUF4HjG/OLeNzxM5F4mD10oAEFCcPnfQ4QvHvQP+CyD
VUa9Nh4jhN85YuM5IIOPRT+kSEeJe1vndE5tMkjVJW1yGyf8OPmgwW0ZZAdk
vxJ95iF9lH9eESGDqFG6R+MXYp+kKajIRwasc7fzqZNEnhFkm+4ug7/qq+Oq
pwnfE3s73kIGKYKNraazPHzz8W1/yXQ+eM8950TO8RBZU4nirnwwzgnJKv2X
h7JIc5KgNB/a3HXT8/PE/zIdfl8vyYf/AGeMM64=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$264702#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       2, Axes -> {True, True}, AxesLabel -> {
         FormBox[
          RowBox[{
            SubscriptBox["T", "bent"], "-", 
            SubscriptBox["T", "kint"]}], TraditionalForm], 
         FormBox["\"\[CapitalDelta]T/\[CapitalDelta]t\"", TraditionalForm]}, 
       AxesOrigin -> {5., 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 220, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"ovi, \\nk = -0.020\"", TraditionalForm], 
       PlotRange -> {{5, 20}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.007333333333333334], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           PointBox[CompressedData["
1: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
ud/MPkLCwvseV/ljDfTfVGF+gQ==
            "]]}, {
           Directive[
            PointSize[0.007333333333333334], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           PointBox[CompressedData["
1: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
PsWUXF2hT/q72KCL+3fHo/8B/jPN0g==
            "]]}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJwVzH8803kcwPHVnPTgIdxCqTW/ZjWy7esRh3zehyM5zChRNKKoHv10R8VR
15XT6iGV1lJRqY7oTt36oXwWCtWYiB2TUJ3m1/Ylv9Xt/ng9Xv89reN2CxLm
UiiUIF3//5ndCRqFQoMzMsYFJZtELL8YE6keDa5UhWomWSTK3sY12jmfBrdr
jvhbMUnEL26jKs1oUFP3/nM0g0QqZ7uRO/Y0GFHcEvTSSDTq/qRpcyANBN0c
o6FZLbIJHT6F82hgNvf7DKpCizLSw+ZnOC2EXJ/YhJXJWpTSd9YlKtkcbrX2
+5mWalCPR9smUZEFiIPf0X/8OIyoHefVTxWWsGHclJQdGEJxoqaysIWLwU/W
NhwyNIAIptEeT18rEOidrvBO70fer/G2w6IlkJ349q+QwU9o3gttTX3DUnBv
CVffjO9DqNhuWdI0HQwqKjVbxj6ijcF9EeUMBlCqHlu7J31AjRWVlzseMGCx
bxkjeawX0UPCxfrB1lAsr4udzO5Boh3M0q5ha0hMSZGLKd2ImEmF98dsIMuN
MHaz7kKTCw2G81bYgrjqSus+qgpJ1q3nB760hfyNMba+o0qUPN+ew461A6Wa
atS5qBXt8uOwH1LtYeejpoDiOc2ocLzi+r6L9uCZecwW0RVohHv0u3bEhDqj
2usmU/WIkWt42KebCROr7A0VLdXo2NZv/ZUpDsC/eFWwmvcYGdZEsKysWMA4
61obcfwOqj+3JOv3uyyg+Ffn9BbkoLiTBZLJNcsBSmodMnvz8WLj2DqL/uWg
Kdp/zeH0XWxIvZoce2QFMLIi5XxzjK0OL/OMZLIh0yUkNLz+Gda33yQV1LKB
cjyICFO/xOzVi+6kRDtCzljlrm6FAu9+a1a9luIE8KlsKF7djAdGROsCxE7w
4MP914zGVuzr/FwS4LQS3Jp38fyK/sEVIx7T4w0rITFz1tP1oQrvcOS1NyU4
wwbXohKhuAsvTeGpb+txYHR9bk9xVDe2MRPd0A/lAOt8TOHThh5Mgx88uy9y
QNU4h37S4z3OK8/vMhvkQGKfyR6v2g/YZbOLd7sbF1p+cxw94fYvjuNvL5/I
5oIl9V4QruvD6S1fp893cEGVapZwM1SN/859oydn8iBrf3oZW9aP084FWEWm
8kAvOFx+LmgQC1/Pag7W8CC+1JWeLxvC3KumBUsXEHB97oE8trkG50qrN1kI
CThCFxmkdWiwyTdS5Y0SAhRpRWckZ7S4rdBr9cRtAtwCW+4p8rT4sldtYUAZ
AQWLqK36Ei12TFVuH/iTgD1SoeX+Ai1e0z81w5USYKKxuhRYqsWZTcj6iYwA
/pbcGzPPtVhzqT6p+Y3OD8h4GDOlxffdBQ12bTrfsqz97KwW/9LWzvtZqfM/
qqZfUEhsZDowbdmh839193KdR2LWUeNTMe90/pPPVQtoJBZuDyv/pNb5nJ2v
ZE4kdpinMvcYIODBF8ngGIfEQ9fiD4kGCWDI642dXEic1vmTr7OGAE2SQ+gF
dxKL+eLW5M8E5FzrebPXn8SbBxkez8cImNhrOn5zLYmZ2X9csZggQAhg+TaI
xPeqHyU+miKA03kpam04iQ8JfeSGMwSIS14dyowgsffsS270LAGUg9P50igS
G0jC88q+ELB1zYrKgWgSN67qnPr6lYAG88gum1gS/wdFNVn9
             "]]}, 
           Annotation[#, "Charting`Private`Tag$264822#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJwVjn8803kcx/fIElnzoy1q1MiWmh/bviqFPu+kjlNafvXjFPOQUvr52GUX
XeqhPcrNuhzyoAmVO3QqlX44fXQoTjIVm30TUyeTHyuulh/n3B+vx/O/5/Pl
GHMoZPcMCoWyaXr/s975JwaFwgCqSUDW680G5LJhl1UllQFhocoqs2ADStsj
oCWYM+DqlU86z40GJCpVm2hsGLDOX+meHmBArz2cR25wGHD6zKenvmsNaHR1
dWtUEAOmZinH8oUG5LRlWIGzGTBB+xQlZhrQyROh5ifdmNDr5hX+7O4wSuzL
9NwhmQclkvLNwvtDqMdbHSm/ZgsJ+d3n45oGkQl5sf+xyg5U8SeH0NsBFCNv
LQ9lLgC7sAH7hPcfEMGlHfbxZ0G0I/NC3EQ/8nuB95yS20P6HFrb7Uk9mvXX
x7rG5w6wI+/QymITPUKlzovixxeCC+18V9yCPvRdcN/WCjYbNHnJW487vEct
VY/yyftsSKNzmZGCXrRwc1iOabAjdDr5fOwJ/BvJ93N/7xp2BGYEW/lH8DtE
TEjhncwJNibUKGJj36KvTLPh7GWLYW+huygqrgflhkeIgpoWA0dqzp9K0CGJ
OYfPEztDj6Ag/EBqNzq4gc97YMIBKnN2dqRVFyr8UnX1aB4H/OVBtKRVnWhE
kLpKi7iwce1SJ+RNInaGxal1Oi7krOqWbNrQgWRxc7/RJC6Bd1/oocajamRR
t9WFxXIB40iHKkDahhqz7M+eu+0CtEp77fLLL1FMekHu14ClEFvlxT7Q0ooW
0MUNth+WgtmkziLzZguyMCmSiE8vgwBLvyHZzGeIdWqRz3YuD+yUWst6iwZk
yomsDHnKg8O3OGUXnesQz3f+jcSdrlCzJXrnlZQadOiNTe23FDcQkcXKUdYD
NDAiDw/McQMrXkI5o/oW8vd4khvo5g41lm67q0yvoaoR7/Evz90h5Y2iRC8+
g/a7CrWtuz2AoguOr7uQgR0Shf3XqXyAUlW7NacEO9nIi0238IGtVSrcx25j
Bqz30eXxwSrk4JoynyqcXXGpy2aQD4f1vfcCFI+xZ5Snn9ZLABqHXx/M8K7H
MaJ9FcY0Adxsd08+sqIRn3g1NX6RFIDRjFoftKgZ381oozZzhfCbWpJ0LEaF
k7MCWdulQqAeaJIURr7A0S8mDcfrhBDrU9rjsfwVFhRZFzhYEpDScGOuhNqO
MyprI22jCXg1b/41m3E1tppZqSkuI8D18uwyhqoDqwvX+BqvE9C9sFfnp+nA
+WueFgaWE5CT/9juSHcHdpVq9g3cJICSL5U1GzpwwIexCUHltO9Sr1hmrcUp
rcixuoaA5Nw/7YwhWmxQNsa/bCNAlXVcRrZp8b3VIc+d1QSkMiOqzd9o8Y9q
rfCYhgCvLMHoyl4tplkPjNuRBFzN7BNnftZil1S6Ylc3AdJfInw32ZI4el9o
hb6fAPYF4eijbSReMuv1PO+B6b4VnTcYTeKhK7FJ8kECzv6sF7PiSZzc+b2/
h4GA0fMFLYk/kDhHlNMu+YeABgW9jJ9L4qhBtveTz9N/6f26XUUk5qaVXLY1
EsBX1Null5L4Tu3DvQ/HCLiUnizTPyRxUvS6ZosJAkRztlXb1pLYb7JJsHOS
AGo6Mbq+icRmuWHZ5f8ScIdmyZO8JHHLis6xqSkC9sr7xUUkif8D41NGGg==

             "]]}, 
           Annotation[#, "Charting`Private`Tag$264822#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       2, Axes -> {True, True}, AxesLabel -> {
         FormBox[
          RowBox[{
            SubscriptBox["T", "bent"], "-", 
            SubscriptBox["T", "kint"]}], TraditionalForm], 
         FormBox["\"\[CapitalDelta]T/\[CapitalDelta]t\"", TraditionalForm]}, 
       AxesOrigin -> {5., 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 220, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"PK, \\nk = -0.200\"", TraditionalForm], 
       PlotRange -> {{5, 20}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.007333333333333334], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           PointBox[CompressedData["
1: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
5v8HffZY
            "]]}, {
           Directive[
            PointSize[0.007333333333333334], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           PointBox[CompressedData["
1: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
pwrrtByK3VwGGeAeSznahP+qGOg6/J0B/Tb9oqi/FS9sXnVpbQkDlMeU+M1K
4jmflJ1ivvEZIHk8u0r/aSc+qbr/z7w0Bly8UH+IqzmJ4yiaOs6AzR8pe0o5
uwRzAAMU3OdF7x7qwwGNHbVHLRlAC1XbJDlYia89fre9jEf0B1YdvuY8jo9+
nYgdIPkcfEe9L5vjQRGECOnPBPd1ENstJR2ODvHvmcrkfPcS7HBK/eC6LQzo
1iflXqUH9T0Z06zbzoAwsd3r63KG0feyz91luxjge2fwctyWHLSw0ky50pEB
78xJObiVjxwzlkxak/3yVJaH33jcjEY3Ro1tvEziLydPUI9+9X0uy7rOAP0t
+gQtaMj+DT0gkAF+qpIEE+j7OWS4K5QB/A+7cINFE3p7P6pxHYmXUaWEnG3h
IJppFVKrNI0Ja7evJRhFGnEO5XRNJjQFZJ7eNa0HXTtz6wDdggm3oxqdv0uO
I0H/cZ8JPKmGzHLl/9C6ZtJxjDLh02UqXxMo2zV4vpgOC3rzSd+ZOoo6A+7L
fj/MgsfnnQI28OpR8ver630esWBGOekz0xpQU+kfkjJtLMheaz+pEW2O9lyu
tA/6xQIDxQZD3tJqfK5g67mCURYcizY3fWNZjcUovif95mZk3CkyPom985tT
Rm1YMJZbtf11VT2WsrBm8VeQ9RWitdzW12BQfM09bMiCeTPriny8JnHFlkDj
rCUsOD2DbzxHvRGfp5m07pvGgo9u3sz7xT+E/dprct5bCtJ+GpTieGqsK2bC
661xL/aeL8RLSbsrnsGEc8HtvG0/W7AWthu8XsCErT9I3sy8sBFFtyNM2NdP
9SMfsMTBQPGD/UxwdPZM3e9ZiOtNnetN25nQEq5lJTI/Dx+Wzz4g/5kJ1XI2
EzOj+LhP7/S/U41McFoRenN+xm20365yZWk9E8Yj2sZ4WXW4PTcwzaGWCcs2
T852iszBk+cPZbn2kfXcFdcoeOUL64MoC3aURZi49WZhEdZDERaNBW8fCuYj
9JZ2KrTsFxNmTt/544/mEvxZfPftM2NMONQZ5Bl+ogS/dXM591WcBbaaW3OO
zirG3lTaFrLgsKGGco6GF7YT/+W3VJ8FopmGcumGubiI0l/DgoHhtWqXxAYx
X9BQsuBEvdtX8RPFmHQjpM9kQ9fZBY7/Pv2ABeMNJvPzN6p+zgTB2BbBhR4z
w4iygg60jLPziEMiF3yex7ZkDbahszFzHosUcCHMx1PsRIo82MpwX0bUcKF4
kOLH3/PSV+7veicLlhRB/+CC+BLqPk4DwXMjXRjr8Unw/jQdHlP9iKcutAoG
p26UP8Z2uOWvC3bTxcXFfcdRh9e8pHV3dWFTkKSNl4Y0DF/XxnYxusD6td84
dmIE3Z+1e39DqS7c1j5tJXFaBn7W3pyq7dOFi6m3Nq1Mq0Wf4am064guiG80
9U9s+IUMpscr2dN4YGdp5Ge2+wPy9Xj801+WB9pTVOM+hNbyx5aNKvCgaVNy
uPrFMUQPNLwxspAHWA4RgqPBI1I+j+rxgLaBcmQGCOapjTywH+sl+IbmHyFz
gBkP/K79TdCPCshUMJfDg0wL6QvhTm1oKVm13YoHGpGOKh2OMrDOrjTmqyUP
tpmUNDCUq9BNmZzoLAkeKEncsR1bUooyqX65SBfmGVOTUAfSpT6zbNEFq+kO
Wzy0PqDN973GZk5w4Y8Uiv/SEamm9G+RXAj2mWeLPr5Bt3oowuHCZhnqMR+p
aVDgQoFqbE3Q2R4USPUfgxw4GkqhWvh9IYsDiiMf/+sab0NOVAMmQvrxjyur
opbUoXsrC2mx3WwYjOm6bqTXhLQHs6/bObNhPJLCC1Ttza315rLBcfcSv/uj
NUjqet1wwwALZgUfhHDxYdy7VDfG7iML2iVVTwT2xeI3c5onVdNZ0N3XMneG
djlKYpMGNo0FeVLUpNmONyZUrkt4xQKuY6lUyokvWCUyO9X4Lgv4xqJJa9bH
Y6sD35UM3VlQJHGjwNosByfGGrQ1bGWBxkaat25QFraVL7+2htyPd75UPirw
559q5s50Figvd+Uv/dogrH/qLHgRdnPGRDotp9K9S2cRsXfn+93EN8rlOI+0
/zcrWLD+HvU9Jg8/7SaE8JoFvAunX3lEiuT0lf3jt/8JC5bsEJOmn/6CBXNp
ANnfJfeTBuxh3GJilH3KnAV/t2v+WZzYi6nxXPwbE0DlWSc3YgQbzF95WT2f
CVKOZBxZKJIja9VLa+czweLQFwv++SqcPOmgtiWcCd4ifa96eybwL7L9q0sJ
32VnEnRjaRH21bmkn3iaMSjtEvYNx4+46swQZQJ/c20MO6nz9/caJjRrepEG
sAU/oNpC0g9E/XnGR1uzBY8Q93JTGHD/wfunG71bMLW8zDMGfJd/a+29/AOi
piW9fAbc9WiZmPRwQ6c3PjQ93MQAqcRrcqPPSf0j3XN4GwMc5QTzM4onXYMC
6R9EfHTV30lkY8F3uHVMSFZ9b53wPhdf06YImgl3x5JUJ5L6kFh+TEXgEBMW
+Ih6hMjUonaHn+0OpF48ivtcMJDahDIoNz1ZYP9MYrHNol6Udc/d1uAlC9hf
gs4qx9agjVQ/aceGb5YHeI9e06B3lr7NmfkcsDHbFrJ62zCaW5XW+mgVB/65
/mLs2osmRKb7I6wpDihZmE+ZRLQh6nNM6h4u/KesebezrxKlDk1VukvqQp3B
3U+ZWhM46eSBoJ4GLiTLLnLVc2rE7p4B15nVXDj58azRje5vuHC6zrhJEhd2
KcWr2M6SyOl4TxryVC6Utwc4nJxdjx3ayR//ckGqj+LHUUz/h8wV8Vy4c+OM
v1p4B5Yj5TNUQhc0RpQi/MIq8WpqnnHVhXQaP9pKuhnfoQp8qi6oCb5f3EIS
gnjpgvyiLQ/0tvDx/wGIpED8
            "]]}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAxSSLFAAAFEBjKxRAgg7lvyhGXhC2
BBRA1GvW+HoM5b+KZzEMbAkUQEasmLFzCuW/UKrXA9gSFEApLR0jZQblv9wv
JPOvJRRA7y4mBkj+5L/0Or3RX0sUQHoyOMwN7uS/IlHvjr+WFECSOVxYmc3k
v399Uwl/LRVAwEekcLCM5L936JQ0WnQWQITMbC7z/+O/4jvXXIylF0CC20eF
iXzjvwPbl+rB0BhAdGmXxrP74r9ijNGuUxUaQMxfH5Xyb+K/MyYMcDxEG0Be
4Ln8hO3hv0LSv2eBjBxAVsmM8Stg4b8HyvHEyc4dQEIx1NBm1eC/P6okH2n7
HkBqIy5J9VPgv1tO6FeyICBA6/uAnTCP37/Pu76e27ggQHrFytodid6/Hk9U
mAZOIUDxjP3sMojdv4xrJq3f7yFANCWhGXFx3L8z/HhA5IYiQOzRaXhWbdu/
+RUI75YqI0BwT6PxZFPav5pVVlBLyyNA3MrFP5s+2b90CSUwK2EkQL5aDcB4
PNi/bkYwK7kDJUBqu8VafyTXv6H3u6RymyVAijCjJy0f1r/zMYQ52j8mQHh2
8Q4EBNW/IJILgUPhJkBMuijLAu7Tv4ZmE0fYdydAmBKFuajq0r8LxFcoGxso
QK47UsJ30dG/yZUciImzKEA6eUT97crQv2KNoJr5SClAXGk/GhiTz78aDmHI
F+spQNyB126mZM2/CwOidGGCKkBIw7kng1vLvxuBHzxZJitASKZ9FbImyb8G
JVy2UscrQByFE60w/Ma/Kz0Zr3ddLEDUjPOo/fbEv2/eEsNKAC1AKDa12RzG
wr/s84xVSZgtQGQIwW6KusC/RC/GmkktLkDgrD1bj3K9v7vzO/v3zi5AKIy8
Qq4Yub9rLDLa0WUvQEi9z/JpCbW/HXcy6qwEMECYMaYMyqKwvyISjKYGUTBA
YO8h3o0Nqb8UQEU84ZswQOBqP0rG/qC/lrKc3xLtMEBg2cYTj4KQvzRfNELa
ODFAADASsFoCKb9iUGqy+IoxQOCD+QH0e5E/fdT/+5fbMUDQpmG1t2uhP7WS
1QTNJjJAEOid2DuEqT98lUkbWXgyQHDRKZS7JbE/YNL98HrEMkAAXXBzvD61
PzGiEaAdDzNA8PAS/x1DuT+StsNcF2AzQMBB8iDbnr0/EAW22KarM0BgoB69
/dfAP9ehPj34rDNAoAVeKBLhwD+ePsehSa4zQOBqnZMm6sA/LHjYauywM0Bo
NRxqT/zAP0jr+vwxtjNAeMoZF6EgwT+A0T8hvcAzQIj0FHFEacE/8J3JadPV
M0C4SAsli/rBP7c6Us4k1zNAAK5KkJ8Dwj9+19oydtgzQEATivuzDMI/DBHs
+xjbM0DI3QjS3B7CPyiEDo5e4DNA0HIGfy5Dwj9galOy6eozQOicAdnRi8I/
JwfcFjvsM0AwAkFE5pTCP+6jZHuM7TNAcGeAr/qdwj983XVEL/AzQPgx/4Uj
sMI/mFCY1nT1M0AAx/wyddTCP1/tIDvG9jNAQCw8nondwj8miqmfF/gzQIiR
ewme5sI/tMO6aLr6M0AQXPrfxvjCP3tgQ80L/DNAUME5S9sBwz9C/csxXf0z
QJAmebbvCsM/CJpUlq7+M0DQi7ghBBTDP8823fr//zNAEPH3jBgdwz/u1FDc

             "]]}, Annotation[#, "Charting`Private`Tag$264934#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJwVjns01Gkchwm5S5oammRcZsh95le7FXm/RKUiIdZqclsxatXuKk6xRmvt
1k7OydZkkdCmYtKSJsblrVBUbmmaybjMb9qkXPdYl1zX/vE5z3n+ej7mkSf8
o1eoqKj4LO9/Nln9RlFRoUBAk4QrqVVgm11HDEXqFDjZOyg0ESvwhRiW3nFt
CmROzo1xHiqwX4lUTWZEgRaGxemBcgXucbKauMeggFtG/LnpYgX+d3tdZ9g+
Ctjs1sw1uaTAFgfHMrGAAovNW19yohU4NSVAO9VhLZS8zHUc0FfgxMHLm79O
WAdRo1QDXkEfVrpID/NvUiGJdD8W5NaL1eRXPz3uMIbykqg9Zu/kOJLfWRaw
dj3sF7/dfyauGxNMvZOunjQYifljYVrnLfZ4hWPS+BtgPPSuRDNTijWf/9PY
0mYKxsxqBx3jNxiVWJlx5zaCZ6YB26nmNQ71HQyuoNPhlWsVZwC6cHtNfb68
ig5Hz5duedTfiTceCMxe6WsOdKHgIv/nDsw/xrzbP2YOCbZCkze0NkzMJ8Hf
GRZQtbX+pOzIC/x5rdaYwNYSaruS1i0dbcY5h4L89r2wBD2aZa1OShNO0GY4
20VYQWx+uDi06QmO3+VsV63GABXORYOimxgXTtf8+X0uA/wmU0OoDDGeYKVv
60ZMoN9qcJc4VmJ6lm7aTpIJhlGtAeLbQpxxdM1uWaI1GMaGZ/TXFmLdxmAb
Gs0GeLygtmDBL7jlyoZfz99f9r6CiaSidBR5sSDn855NwKv1lScvXkfrDSKa
qUOboONgY5TP41Kkq1aUEHHOFrJtn5+15NxHtDQz1xCmHTwyirgdfKAarWQc
Fvk/s4OviowljxkY2e0wuZfIsYfhnsDbHfueoBN9Rg17VRxgWJ5AzUNNaHiC
f8g72wF68lUdLVSbkafT0xxvB0fgP8j3bKh8jmomXOam2xzhOPpdD260omP2
7O7OaCco3jVbV+PUgUwT2Z+E6s7geCvI16u0E1kY8YtXHnQGMZfLFup3IQp4
uZK5zrAxKF1A575Ggoq8fqORZZ/f27VCKUGbwzZ7dG9lwXr15qgn7lIU6RdX
MXOBBaKm8Zdj9TKU8npp7qqcBbbl5iLbLd3oQZZEvZXJhpxFrQmPLDlKvuJN
C0liQ7FGnlaLXi8Kf7UwfqaRDWXx77+zj+9DrKLVBaarCMhS/TL0WnM/yhI1
HKaGE6BtnWPgVqBAhhoiWXEpAd6LP5jkHSCRtNBtx4yQgPZrIcxSfxLluz0r
9C4jIGAHIsSHSGSfJIsb/ouAsGQdH1koifYMzc6zRAScmi3gUWJJxOtE5nWP
CCicav3A55Fo/FoLt0tCwOdRa1FKOYkebvdvs5ISkJqp38CvJNGP0m72aRkB
Go4T7bkPSaS3enjOWE7Aqm/rP1bXkcgm3SDziIIA66FA06kWEoXHBVR8/LT8
50NaerySRNaaPetchgmQZsRcSnlPotEb35zljxDAYfrk8wdJlNx7ytNpnABu
tHFVySiJsv2y3yRMLvfflQ0NzJIobITu8nRquf/T5ZnJBRIxL9y5Tp0h4LzF
GQ0NVSWqbBDHimcJuBLhZWapqURnw3e26s4TQFO1s2frKJHHwgsWZ4GA6wWG
29z1lUgrJ1BQtkiAJUx5+RkqUfsXvbNLSwTc6Zf7h61Rov8AHwdIgA==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$264934#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       2, Axes -> {True, True}, AxesLabel -> {
         FormBox[
          RowBox[{
            SubscriptBox["T", "bent"], "-", 
            SubscriptBox["T", "kint"]}], TraditionalForm], 
         FormBox["\"\[CapitalDelta]T/\[CapitalDelta]t\"", TraditionalForm]}, 
       AxesOrigin -> {5., 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 220, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"SZGK, \\nk = 0.050\"", TraditionalForm], 
       PlotRange -> {{5, 20}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.004583333333333334], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           PointBox[CompressedData["
1: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
+6PT8CCzKvxjnGU9+j8Vum4S
            "]]}, {
           Directive[
            PointSize[0.004583333333333334], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           PointBox[CompressedData["
1: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
            
            "]]}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJwVj2lQ0wcQxVNBxMJQxHCUeAQIIZwhCTqWc8uhIFYjoAwKEg4BIwXEaBBi
A9axVoOilFs0IIIicgQIUbRrC2iVGgxokwKKWuogclmsYrj674ednd/M233v
WcWmhuxdQiKRviHm/91FO00mkcgw0T6da+SpQMbGPcZyXTLwjqjyWO4KPJXI
MkxeTobe9Q35YRsUyK1V62hMyNDWxC8pdVPgIJM23WBLhuyal1V0ZwW+d7+j
ig4mg3F+T7v3GgVab588g4VkcONff5NCUqD4aOhysbMpZFrEBfR0tqFw5Ce3
XQIzkNcUsU/6teErD3Wk5Io5BGbt3NT7UI46A0Wjvzy2gOpXUSczw+QYK1HV
h5paQovIYdHySSty6IZpnv4UsNydU74lshV9ezExR7IKmMnlBw73t+Cyh+86
HyhXg9GKJekLu1rQp5a2dt/sGtionSoxH27G3VtHwmVUKjiZXfnIiGvGnvaf
Lw4oqJB8+C9R96gM12wLK9bbagWH+HyX3wUylOyn3xiatAKXc3LTrvdNyJnL
gOET1gBzEtq2o034yVR/stDBBj4rZexTzTZi6Y6d3OBuG5B0G/Y3iRpRsNzW
1TGGBmlfZ6Xb6DViykZXx5s6tqD7JCrH0qABKz62V6WX2UL/jT+TjSn1OM06
/lW/Dx2Mxoc6PpjdQOp5gxy/l3TQhAoPlpjX4YmElZs0Qjvg+tmk77G/jgad
4QwKhQEOxRGDK+1q8UHBqpM/NjNAdqiq4O26axibKy39FGgPjzOza8RBV9HS
KOY387f2sOXv1zTdoBo00KkUxBxzgExNzLvaiGqk5Kz1jKA7gh4r0d535xXU
s42Uh9x3BEbT/M2C8Cp09PqyQRjlBDM3r5YY8C9j6nOTjs0kZ2Awng8fSKrE
sWnJjqBiZ9BfyxBrhRXoz7xXGuTsAiIvnXQfiRTbpz1mPypdQHpMJX1jcQn3
O7H7VXuZcLWsa7bYoxxXC9mjdbqukCZWOtuvL0NrE0m13nZXyBOQFuZDSpAM
AZ4vy1xhUBEmDj5ShIWyC0Mm464wfP+O+oiwAN2i3Xz7N7CAO7JNOVaUj7Fc
vmzmFAtEfR/KIO8cHn2yOFs0wAIpJXudJe0stp5/qvuIzgb95vhUz+TTKCoI
okRksGFqKD2cGv8D8nrnpzI72ZDH7MvKlX6PrMoV0tVfcMDYY0pXMyTG8/KO
SHMeB0i+uSkWz4VovFSuqb7OAd4ZJXf/3jRUV3h7zdRxAMLdnxr5p+FF7/sV
QfXEPbU6Qmadhk4ZGv5YIwekcbOd/2AqBr7VzrHkBNdGjBi1pmC2ysfqzl2C
N5gxN11KxqnyB/v6nnIgO+zs7baDSdjmHqKkqYn/rxO6FlyT8Dt1P/uwhsiT
4a0MmEhEwxVjsxYDRJ6y8aG+pERkHDc6s+cFwa+CdaaiEpDHD5W9GSU4TX8z
IzAe7ZYNmnmMcYC65EVI6tJ4nLgcnyUZ58CL/Lbd8l/jUPTskD9zivBrS/jW
3ysOi7nFfwj+JXihM4/HjsXocarHvQ+Ef96FkprJGKSfunbJfIYDd60ElRN1
MdjScSvplpbQB9i0iOxiMIvn98hgjtCrtbc7hnnoO9/Nipon9Em9XZ9X8lC/
NKywfoHor72m3B7Nw571z7SLi0ReSY66eBUP/wOk+0zx
             "]]}, 
           Annotation[#, "Charting`Private`Tag$265048#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJwVxXk41HkcAOAJK0WqaTCa1BBjGuMY3+nYHJ+PIzUqOYqH3CWlw7arTEVS
VhuTZ1eFpVoiSi2lkhqEMcaYX6RrLOnwdK2IzZY7u/3xPq9pZKxvlAaNRlv/
v2/LzdMZNBoDj5YYuwQ4SYHrETqnUouBzV92uxWCFNKiBXq7ZjBwlkfDqgEX
KXiXqjU76AzMeR3jedxDCs9szYfKLRh4zbTa7/YGKfy7sqY9bC0Du/NCtxlF
SsHMZyDjXhYDl/9amK5OlUJSot+MJGsD7BNbPw14IIX496eFQXGGyEx1f34r
thp6HNTBkotGyPeSrEnRqgHNruze+gdMlBd/jo3OqoFISXuZn8F8ZDtEzrwk
rAXC0fvB0Z2FW9KmtAOba8H14b3oZMkC3G6Qvz96+z2Y3vJPo7LVBA8wr/vI
NeoASs0X7RhfiBXHeMaz19XBZq/3ARVsNlISi9zjeXXQJq0931XFxqChFeuq
3tTBwg0bc7S9TJFn1h38k009SHZy/nwxYIrPPmpYhiTWA5kQ4+tUM5xm7GI2
1VQPowY6A1m8xTj9FU3dZtgAuZv8vdeqFqP3Xp9eXlQDxM2wsLOKMEe9sLs2
zmUNsMfDzuqOpgWW9hbxj0w2QMGwtOjHPAusflSy+eBqGQwJUr7vBA6WB/Hd
C7NlwM7UTXZ7xcHXl13S/d/KIHXbvNUd8ZaY4R+r2WDbCLqNAVwWi4vMgoVL
g5MaQXlmwS8nbnDRUPQ2u0zZCJEn83NH1yxB/zvOgel0OczXj2g2+rAExQrm
46wIOehqXoiLOMpDfaJ7JOiKHFjJixwDOVaY4pj0Zt24HLQtgit9FVbopJ9y
WSlqAisn4/L4ED7GOBWc/5rZBLHP6TJPmjWKZ+L6yJ4m6BuSbBLlWOOYcJh/
mK8Ad9umXJG1DdZawk7zfQqQDjmMD7fa4NYqnS2jMgXs5Nt3tkfZ4uHi3vTU
Wc1gEm/fe1XLDsX2XntcQ5rBjC4p1vaxw3esluTKkmZg4CrHV3l2mHP/6dDN
wWbIqjj7gt5vhzyTqEU9oARhmNC1c4UA7Vp0ExQnlBDpHVMxkiZApoEws+sv
JSQ+nhrP7hKgK7df+yC3BW5lPtG6z7HHlzm1Vx/sbYGEMyJWoNgeQ0vm6vnX
t0D4w8nBg4326D0v8ewpXRUILszNN5lNMHX1gfTNG1WQWSkLNgoneNZ4mPgW
qmDOd5UdxVcIckQnZ03rV4G6wNlp5CrBt8afZ3t+VMF5Z0WBqIxgUW8w/dSA
Cvjijpi+awTNJXwji08qWPNhbEJQSZDdpmKLhlVwpB1Ma+oIzt80U/jbNAoG
zyl3PHpCUD/ieJCpIQW3V/q2mqsJtgoGgmOMKDis7rTf30EwQyMg7AaTAr25
fePMLoJ6RZytq1gUcFP0M0JfEtR5J9+9g01BeIxfxd+9BDV2ayVf51FgOf2Z
oUMfwQanXcfGrCj4WLj1kKSf4FH9xz+7WVOQ0L3P3XaQIO1aYdoTWwpyvHOe
xn0mOPHJ9fSokIKwfrZD0xeC1bLSLNdlFHDSLv9hNEIw4TT99/TlFNyU3d1+
d4zg2NKecyYrKTgU7nZfd4JglbZn/jYHClwnVYKQSYJi9fUL5Y4U6ORuzCr7
SnDZJeOLI04UtC3rHpuaIvhFnFziAhT8B7ezJfg=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$265048#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       2, Axes -> {True, True}, AxesLabel -> {
         FormBox[
          RowBox[{
            SubscriptBox["T", "bent"], "-", 
            SubscriptBox["T", "kint"]}], TraditionalForm], 
         FormBox["\"\[CapitalDelta]T/\[CapitalDelta]t\"", TraditionalForm]}, 
       AxesOrigin -> {5., 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 220, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"G\[OAcute]lyairoda, \\nk = 0.006\"", TraditionalForm], 
       PlotRange -> {{5, 20}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   TemplateBox[{
     GraphicsBox[{{{}, {{{
           Directive[
            PointSize[0.011000000000000001`], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1]], 
           PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQffYMCBg6lK+dJ8tkfs3+338QUHbYNEVokR3jHfuZ
YKDnoOCjcO7yn8v7wVxJPQf+hRyuGk4H7cHaz2g4BMkcL5Q5/nC/kTEQbFZw
4JdIEDJbeN+eAQQaFBwkv855NzX/6P5zIOU+Sg5NEe8yW57es08DA3WH/hyL
pFvCJ6H6NRys1y/c0/Zpl70piG+s4rBEIrnH8NiO/SZgvoaDxGm+J7+n7t2f
Adav4bB4zqumJIvT9rNA7os0cLBSEY1a43t4PyPI/gMGDqkrXj7R3X/AHmz/
GV0HM7XF0xX/HLBPBevXduBfdGmiLfPF/elQ/rW4j6LxH49C+M+0HdqqRda5
P7xlDwCoIYyf
            "]]}, {
           Directive[
            PointSize[0.011000000000000001`], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           PointBox[CompressedData["
1:eJw9UntIU3EUXmZqRQ+dGCvzUabbrtPZJCrNewhFEstUzEeolTqLHq4RaaAk
PvOPdEaBm4pWxKIwcT6wEn6zLK10Tu3hUpmmm4ZiOULNxPL+fjc/uFw+fodz
vu87x/1cRlSaFYfDObz6Mf9U6SrMQsia7keUegqplKvgUZBYyTc0l/QjJeZC
4Ny3C+Ef7aMrMBfAneK3S/q4XrSOw4CC6uilznnrBvSXwU0hhPqmy72jO0k/
JR8sJse2qrxOlMbMkwphl1xXPXVlCPlLVtEohHLPaqfkfC1b7wOvFu8GSRw0
dDeDcDFsGKlQl50ap1fwAF/YLEvh3d00QOP5uXy4bDLZTcRqUTr2w4c8bkAD
N2COJv0F4DylUJ1pM9H//W0VmHXJMePEj5KCGbmsMfnWJ0S4EDJHCsOctxhZ
fwKw0sTU9CV9QD1YkAc4BYu+v+xvYd/3QO0+RWPZ9gmit9sNbMrGD5aOLxJ+
yRVaB37vWH9tFp1sdSmcnnOF47iRHjE0stUVZi8+sl0usiAcj9kdEhVq6xth
o6weN6hZ8FvIzNGgLtxwNyx/cZHH+/2kcb3UBVZKLHXdD37Q5zF3g6HYP0XN
GYt0FfbrDhn+oaq9PX1oP87DA6hDIdIoqzEa5yX1BIExa/SEjX5tX9/m7YdD
ZUZah+d5Qe8B9dNALkIkfz6YyL3QHDafnhcOSyUTg2t5J8qCbCZT9OR+DGK4
GshghnClGLRH7K9HFIyQPMP9wNaRQQfC+s0iaH8o9/dKeMbq9YWPePAvtr8Y
ZKZjqTtbpol/Tz+oP52VE88bJftVimCQSq6LWNax+/YCBVf1vLTpCSJ6PeG9
uqNfS5loCYYXaC5YF9M1TaxfPox16Tyak9pJfa4Qbk/N8h3L2fwkIkD5mcOV
lIX4zxVBsCrbUPtukuiTeENBAoOvbD8BnI3k3YvkvUHknil4TPbB3rcPGA31
2a+3DaBKrNcXQuJsrYQbP6N/3HK6ZQ==
            "]]}}}, {{}, {}}}, {{{{}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            LineBox[CompressedData["
1:eJwViXk41HkcgGexRY40jWbElHOaGjIzP1uu+n5W0qitJUmHMqNL2FUt0SFL
x7YadnfU0IR1ZUvH/GZsU0t8Y4zzUTtFIzo9tSlnITdbf7zP+7zPaxsWvXGP
HoVCWf+ZL9Y4nKNRKDQ4xO6pEBVoENt3p7nKgAbW2oBcvTwNStnHM4kyokHt
EVVSQY4G+Rfr9Fupn39jos+bixr01MVhQO5IA80P1Ibw3zVo0KNcG7qOBoyS
5S3RCRpkF9CXhqU0qFiR3JUQrEGJCYFGic4WMCuQzpAZa1Bc53nXbTHzYPH0
UabZvmrU4akLEV+mQ1jLUM7+JjXSb894X/kvA1wE6dfrlqlRmFh7M9BiPiR7
RezdlV6FCJbJAS8fK+jftiXrzVgl8n6I9yWJreH1WOKJgqBKNLPhQ3X9fSZE
LW/o3l1yD6Fih4X7xxeAWQ5HZ2p9D23f0BmstLGBCJPU9td9FehBWUVO+x0b
+Mj9QEkoL0cLvt+UOWODLeSnyVZa/3EXiSNZN1702UJIn6qZv64MERPx8PqM
HXxX+NUuhlUpGrUw7JMusQdBCPaL1d5BsqDN/usa7SFqfZXgSeptFGPkyOWI
HKBOMoBMhCr0oy+X84++Izi1Z/ymYtxCecNlhYcuOUJNXITO5W0JGuCdcm9D
LIiik3E2WUpkIzFOWvWKBR79HlxGsAKd2Tt3TWvcIgDm4Mvni0hkXB3MtrJi
Q64Mmt0rbqD6C9Znfy1hg1PB0OPALddQWGqubFSwGAwXfDPr+NQVNN9MVEfv
WgwTOdt6JQeLkLF+fowoeQkI655WrTEvRFZJC722sjjQPOwj6DqWh2Y4hqg2
1nLAjYiecH+bjTgrLOVxO5wgt9bU74nzRRT9nKpeS3EGdnj8cJDZedQ9IA7y
y3QGbombKVOchnxcamR+zksBQot7ajinUdmA5/jw/aUgXBNuHzwViyKd+G3a
PS5AyTb8KdFcgJhx/PfXDbgg7IvFlZKD2I4qLpoRwAVSRwwF7EnGNFjt9eoS
F/x7kwWztOewVJn1gtrDBcEn6+6TBunYNdTVu82NB5kO6JFvfQYO849QjqTw
4I7vhS1Og1k4oXl6PKOdBzTvyIqj+nn4lqTFoInFhyg3F+G3ogJ8/IKf1dZ4
PhSyTQMsP17GwoeT/Uer+RBzIC0gMPgK5uXPyWXOJmBw9WnbRLIYS1TqELqQ
gBALKdz1uoHNv1a1Fl373F5ro7dny7Eub+WKkesEOHGkpqN/yXHOyto8v5sE
TFh2XJMq5dgpvjWimyQga/hIp7ZWjgVdYxM8FQHNyqsiwUc5/lmLbMvvEVB8
3qBYZk/i/uz6/Y9aCFhivDvrl3gS3/bYeN9BR4BELyXycQKJT+ja+IdbCRgb
lXs4niSxyZzucUY7AQ2d461VqSRmnzJL2/mSgL016RZT+SQWRgQq370noChJ
nRbTROJFM5/O8+wmwOzIux3qhyTuLdh9TNxDwOEDs52prSQ+/izWx6WfAN/Q
7Y3yDhJn+mc+jhki4D+vgZldwyQO7bHxrPlEwAZXS537JIlZKVf/pI8QoOKg
orN6Cvy3ujS8dIyAM/PP+bBMFfiYcFWT8QQBvXMUc2OpCuw92cjbMUnAZiNd
h5quwIayTdKbUwSUUiYVVKYCP1j2bGx6mgC7EbskkZ0C/w+T1T5G
             "]]}, 
           Annotation[#, "Charting`Private`Tag$265160#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            LineBox[CompressedData["
1:eJwVzms01AkcxnEHKY1ajXFZlwwxTW5j/G3l+vtthNFW4xKKkKNsdFGr2JCK
M0djskU0iy6kTvmPyyJ3wozLjC1JRdS2OmqRopDc1s6+eM73xfPmYxR23Pug
ooKCwk75/m+bSRpNQYGG5bnNvGcXZcB0C1avUqZhXeb7MI9UGfAj2GpHVGko
TlODBp4MuEV9Sv1UGj6LD5i9nSyDVyyTqVJTGs4ETkb8kiiDafvGnpAdNNyq
T+dQT8jA2Gsi/WE2DZvykijcABkkJfqoJllqovS68+UuhgxiR67a7ovRwuDe
t5Rj9VJ469AXJLijjYETFV8s/aWgNHhtrOWJDp6krHB/N90JYYKeEh9NXVQJ
TFjjwe8EgqEW7eiqh8pX6NDJ6IRtTx9GnBfo49n5sbdTdR2wUvZZIn1sgNTw
H6a1vDoAikwMDy+sR/VKUbT/p3YI3DXiX06nI3+LZ4hLcjt01zfdGKyh45F8
Wu1Phu2wfrevUGWXEUZSQs7tbGwDQRSj+M2EEQ7f666d824DYjEOh3nG2GFx
NFg8IYE5zVUT2WYbkDlsfWprigRy9vhxd3RtwILcmLlCXQnEqJpamx8wQZ7d
uxGrGjEcc7M2r1UyxferEzzDd4ohf7a+8GSuKZa0gnb1aCtMsVPsBoCB08Wb
/B4ktgI9g3LeZYiBvr9nKpIarcA7pOHeH7sR10eZ6TaVtQBF4s/U02NiePQ/
txO2t4A0Sz/1YgUTNYJ6hAFDzRB26VbOnMcmHHR3WDBPagbdtQc6tT9sQuOI
ru4iWjNQlApiDlwww4KX6obpYQ9B77yh416GOc7v6LtgkNYEKqZBVd4d5pja
dL0lt7oRzJ2+L43db4Hvlxpf+H5pgON/UcWeCpboXGj2JFy/AcanBHs4Qks8
pP35ZqlvPbiy2nM4llYo4Vd7jl6ug/oph4XZx1aof1D28teGWoiysBnoOchC
N7UtsP1rDRjE2oyJlK0xUncyNcKwBoypgrsqXtYYNKN4X+JXDTTc7jiUa428
J5qF6hlVkF2e94b60RrvUU8lVzQ8ANsQ220DW9mYZ2Rld2WmEsK4keXf+Gzk
XyN62wwqIfHZ8sK1QTaWrLHzGOVUwIOM58qPGDZYwBVmuqeUQ0IWR29vnA1m
zLuIF4v/gNCnS5NnJDbofYIjHX9XBuyCdbcMviPQbWRXUZdRGWRUiYO0Qwk8
IvjxjWJOCaivqOq/SxI4MiTUGlYrhr58Z6dvIvkfPPz664piuOHckc8pIXB6
gHVHdVkEFnH9keNlBC72thOszyLw+DC/yK4ikNY+zT3zXATnesCosZlAxyJu
mvoNEUxelx7ufU7g1ZOrFJxYIqi2935s0kegzoRPx26mCM72Ddic7icwL+pm
epiRCNTWjS/oDBJ4L3yzQaqGCJgpa9OD/yawwS/cvneWhNBIn/LRMbnXvjnm
cDMJG1e+0nIYl3urKY4JtSR8uh0eL/go9xL+Sr+Vk5Dw+pQra1Lutfh0pbKQ
BCFX+CJmRu411C9dTiUh5CPdof0rgcLciNPUCyQw+Pdvan8jUF+nwsk0noRK
cd3PdfMEMtd5/ul5lIT4UJdHlEUCRZeyMvcfImHbUhd7/xKBtquH9kWHkLAq
xze75F+5l2dhnBxAQvfm1/PLywS6KsWNZnmR8B8iSTO4
             "]]}, 
           Annotation[#, "Charting`Private`Tag$265160#2"]& ]}}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
       2, Axes -> {True, True}, AxesLabel -> {
         FormBox[
          RowBox[{
            SubscriptBox["T", "bent"], "-", 
            SubscriptBox["T", "kint"]}], TraditionalForm], 
         FormBox["\"\[CapitalDelta]T/\[CapitalDelta]t\"", TraditionalForm]}, 
       AxesOrigin -> {5., 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> 220, 
       Method -> {
        "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& )}}, PlotLabel -> 
       FormBox["\"M\[EAcute]rce, \\nk = -0.020\"", TraditionalForm], 
       PlotRange -> {{5, 20}, {-1, 1}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{0, 0}, {0, 0}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"nincs f\[UDoubleAcute]t\[EAcute]s\"", 
         "\"van f\[UDoubleAcute]t\[EAcute]s\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.908957163084953*^9, 3.9089573155701613`*^9}, {
   3.908957430706317*^9, 3.908957454033662*^9}, 3.908957499574708*^9, 
   3.908958212249787*^9, {3.9090291453731127`*^9, 3.9090292035984583`*^9}, 
   3.909029458985402*^9, 3.909121437514201*^9, 3.909121754547435*^9, 
   3.9091218360755033`*^9, 3.9095881952189093`*^9},
 CellLabel->"Out[23]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2 week vis", "Chapter",
 CellChangeTimes->{{3.9089365436621428`*^9, 3.908936578861992*^9}, {
  3.9095882474019594`*^9, 3.90958826167394*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gas", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DateDifferenceInUnits", "[", 
         RowBox[{"startDate", ",", 
          RowBox[{"DateObject", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "timeGranularity"}], 
         "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
      "&"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Import", "[", 
             RowBox[{
              RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
              "\"\<gaz.csv\>\""}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"Differences", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
             "\"\<gaz.csv\>\""}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9095968500855923`*^9, 3.909596901976996*^9}, 
   3.909596965703174*^9, {3.9095970122721195`*^9, 3.909597017871027*^9}},
 CellLabel->"In[140]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"roomNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<ovi\>\"", ",", "\"\<PK\>\"", ",", "\"\<SZGK\>\"", ",", 
     "\"\<G\[OAcute]lyairoda\>\"", ",", "\"\<M\[EAcute]rce\>\"", ",", 
     "\"\<vend\[EAcute]gt\[EAcute]r\>\"", ",", "\"\<kisterem\>\"", ",", 
     "\"\<Oktopusz 1\>\"", ",", "\"\<traf\[OAcute]h\[AAcute]z\>\""}], "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.9095957934162226`*^9, 3.9095958066304307`*^9}},
 CellLabel->"In[14]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tStart", "=", 
  RowBox[{
   RowBox[{"Round", "[", 
    RowBox[{"Max", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
       "smoothedRoomTemps"}], "]"}], "]"}], "]"}], "-", 
   RowBox[{"24", " ", "7", " ", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"tEnd", "=", 
  RowBox[{"Round", "[", 
   RowBox[{"Max", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", "#", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
      "smoothedRoomTemps"}], "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tStep", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9095974560374575`*^9, 3.9095974643698025`*^9}, {
   3.909769812746994*^9, 3.909769812970436*^9}, {3.9097701029693193`*^9, 
   3.9097701265232625`*^9}, 3.9097701596755767`*^9, {3.9097702347173834`*^9, 
   3.9097702590507164`*^9}, {3.909770720713893*^9, 3.9097707210022106`*^9}},
 CellLabel->"In[77]:="],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{{3.909770252669155*^9, 3.909770259213896*^9}, 
   3.9097707215526996`*^9},
 CellLabel->"Out[77]="],

Cell[BoxData["360"], "Output",
 CellChangeTimes->{{3.909770252669155*^9, 3.909770259213896*^9}, 
   3.9097707215990787`*^9},
 CellLabel->"Out[78]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<kimutat\[AAcute]s.csv\>\""}], ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roomNames", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "8"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "\"\<h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet \
be\[AAcute]ll\[IAcute]tott felett: \>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<%\>\""}], "&"}], 
        ",", 
        RowBox[{"Round", "[", 
         RowBox[{"100", "roomAboveSetTemp"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "\"\<h\[ODoubleAcute]m\[EAcute]rs\[EAcute]klet \
be\[AAcute]ll\[IAcute]tott alatt: \>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<%\>\""}], "&"}], 
        ",", 
        RowBox[{"Round", "[", 
         RowBox[{"100", "roomBelowSetTemp"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "\"\<f\[UDoubleAcute]t\[ODoubleDot]tts\[EAcute]g egyezik \
\[AAcute]llapottal: \>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<%\>\""}], "&"}], 
        ",", 
        RowBox[{"Round", "[", 
         RowBox[{"100", "statusMatchesSettingByRoom"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "\"\<f\[UDoubleAcute]t\[UDoubleDot]nk amikor nem k\[EAcute]ne: \>\"",
           "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<%\>\""}], "&"}], 
        ",", 
        RowBox[{"Round", "[", 
         RowBox[{"100", "unnecessaryHeatingByRoom"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "\"\<nem f\[UDoubleAcute]t\[UDoubleDot]nk, amikor k\[EAcute]ne: \
\>\"", "<>", 
          RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<%\>\""}], "&"}], 
        ",", 
        RowBox[{"Round", "[", 
         RowBox[{"100", "noHeatingWhenRequestedByRoom"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9095979146356397`*^9, 3.909598242776676*^9}, {
  3.9095984533631783`*^9, 3.9095984776757903`*^9}, {3.9095985080597906`*^9, 
  3.9095985095249825`*^9}, {3.9096296418281903`*^9, 3.9096296474050055`*^9}},
 CellLabel->"In[241]:="],

Cell[BoxData["\<\"C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\kazankontroll\\\
\\kimutat\[AAcute]s.csv\"\>"], "Output",
 CellChangeTimes->{{3.9095979855591183`*^9, 3.9095980897651925`*^9}, 
   3.9095981345059605`*^9, {3.909598230126997*^9, 3.909598243104295*^9}, {
   3.9095984465441017`*^9, 3.9095984780769978`*^9}, 3.90959850985557*^9, 
   3.9096296491473055`*^9},
 CellLabel->"Out[241]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["roomToPump"], "Input",
 CellChangeTimes->{{3.9097703046695824`*^9, 3.90977030673464*^9}},
 CellLabel->"In[63]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.9097703069623704`*^9},
 CellLabel->"Out[63]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roomPlots", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"ArrayReshape", "[", 
     RowBox[{
      RowBox[{"Quiet", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"roomSetTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"roomSetTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                   "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"smoothedRoomTemps", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"smoothedRoomTemps", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                   "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], 
                "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Gray", ",", "Blue", ",", "Blue"}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"roomNames", "[", 
             RowBox[{"[", "room", "]"}], "]"}]}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\[UDoubleDot]zem\[OAcute]ra\>\"", ",", 
              "\"\<\[Degree]C\>\""}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"tStart", ",", "tEnd"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"10", ",", "24"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Prolog", "\[Rule]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"Map", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "]"}], ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "tStep"}], ",", 
                    "100"}], "}"}]}], "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0", ",", "0.05"}], "]"}], 
                    ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "tStep"}], ",", 
                    "100"}], "}"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]",
                  "]"}], "\[IndentingNewLine]", "&"}], ",", 
               RowBox[{"Quiet", "[", 
                RowBox[{"Select", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Table", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"t", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                    "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "0"}]}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], 
                    "}"}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"NumberQ", "[", 
                    RowBox[{"Boole", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "&"}]}], 
                 "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
             "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"room", ",", 
           RowBox[{"{", 
            RowBox[{
            "8", ",", "1", ",", "2", ",", "4", ",", "3", ",", "5", ",", "7", 
             ",", "6"}], "}"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3"}], "}"}], ",", "\"\<\>\""}], "]"}], "//", 
    "Transpose"}], "//", "Grid"}]}]], "Input",
 CellChangeTimes->{{3.909595000099304*^9, 3.9095950354879875`*^9}, {
   3.909595592275758*^9, 3.9095955962415533`*^9}, {3.909595628356187*^9, 
   3.9095956375462055`*^9}, {3.9095957043277087`*^9, 
   3.9095959461718473`*^9}, {3.9095959967561426`*^9, 3.909596015386594*^9}, {
   3.909596081194501*^9, 3.909596154151312*^9}, {3.909596281734482*^9, 
   3.9095962862175503`*^9}, {3.909596480824318*^9, 3.909596587718401*^9}, {
   3.909596619857088*^9, 3.9095967227594275`*^9}, {3.9095967541554985`*^9, 
   3.9095967891593404`*^9}, {3.909598527142437*^9, 3.909598530867042*^9}, {
   3.909598763359619*^9, 3.909598782075378*^9}, 3.9095988461085052`*^9, {
   3.90960020830417*^9, 3.909600265708621*^9}, {3.9096299722287455`*^9, 
   3.909629975771243*^9}, {3.9096300075765424`*^9, 3.909630008416625*^9}, {
   3.9097701670045614`*^9, 3.909770172316222*^9}, {3.909770319357132*^9, 
   3.9097703581724377`*^9}, {3.909770464476128*^9, 3.909770570956811*^9}, {
   3.9097706350193014`*^9, 3.909770635788331*^9}},
 CellLabel->"In[80]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0.5], PointSize[0.0055000000000000005`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd1clt3EAQheGCI2AI9M0wdKC3e4dA+Oi1LVu2vIpezxXChNAhMIQKgSFU
CIzA8DL9DvwHGJQ+gDWPXWy2bl/ePL66ZWa//37/1f+feFLOf9zp9Wmv07kW
2OGA7VmvD3s/7HDA9hz98qPeDweutxe4f9jhgO0l+mGHA7Z69AgXuMIONzjg
hO0V8uX7PV9+0PNxvcMNDjhhu0Q+XOAKO9zggBO218iHC1xhhxsccML2Bvmy
5i9r/rLeD7nv7wYHnOi3K+TDBa6www0OOGF7i3xZ7zNcYUd/gwNO2N4hX9b8
Zc1fVj76m6z5w4l+u0Y+XOAKO9zggBO298iHC1xhhxsccML2AflwgSvscIMD
Ttg+Il++6PlwhR1ucMAJ26ejR1nrl+/2fNjlvp8aHHDC9vnoES5wlfX/FW5w
wInfsy+9av5wgSvscIMDTthukA8XuMION7mfHyH38yNlrX/ptc9ngEd4ggs8
wxVeZJ1fcr//E9zgFQ54gxPeYft69ACP8CTr/YRnuMILfs/le+d6kvvza3J/
fiuuD3iDE95h+3b0IOs8gCe4wDNc4QV2+AQ3eIUD3uCEd1nP/3uvWr/c5z/K
ff6TrPNJ1v6HK7yg32WtH27wCge8wQnvsP04eoBHeIILPMMVXmTtf1n7X9b+
h1c44A1OeEe+/Tze3wCP8AQXeIYrvMAOn+AGr3DAG5zwLmv9v44e4BGe4ALP
cIUX2OWL8gcNxItX
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd1n9sFEUUB/BJQar1R+4PTDGILiZa1EZO+aEpEV9EoURtr5hglbYMLRRK
e2V33T0TFRi0NAaDLQpGRHQJNv3DhFZB4k8cEI02mpw2sYk/yBoMlABJRQ0t
GuPu3TyT/W7aXD43u/fuzXszczObNyxbUyKE+Df6j18Ll36C5s6Jrzup+MYK
en13dF1nTGAF1ivM+/x8Q9IEVmANFo3wPFiBNVg0wfNgBdZgsRKeByuwBguZ
tAUmsAQrcADWklrj69RdRYeSCuWbYyxWQXwwgSVYgQOwBodg0QzxwQSWYAUO
wBocgkULxAcTWLYU57OV44ODluL8Hkyb+DAegsXqpC0wgSVYgQOwBoerzXNc
/zX07TfxxfHBBJZgBQ7AGhyCRSvEBxNYghU4AOtW0/+mHiFYrE3aWlvcr3Zz
fLAEK3AA1uAQLNYlbYEJLMEKHIA1OASLNogPJrAEK3AA1uAQLNZDfDCBJViB
A7AGh2DRDvHb6Y8Xb/6s/r3ZJj5YghU4AOt2OrDk16enHrjDxG+nZ6bG7xiL
jqQtMHXQjB+OrDq/x1h2UNmFnVbtFcaqg246vfBjVW8cgDU4BIts0laWZOXE
Fy+vNOuBsnS27oMbtrYbyyxFOls3bqyydOPW+A6ef7AGh2DRWcx3Oa+/Tiob
2W/fW8XxO8l/Zdrk5S/x/INVJ00aqBwbKuH5B2twCBYbkrbABJZgBQ7AGhyC
hZ10yqae8ZEXNm/n+bBp8JY3r91+3Dht0/ijJ/v2sMk2n2PmM2PTNd6P1H81
rxebquP2qzC2wQrcCw7Ag2ANzoND8BhYOEmnwBY47VB+2+KSIxO8PhxaXN7o
fXeZmY+MQ/80fz371Ye5XyNXnPrqT9fYdqimb+bphQu4fx069teshp7njHsd
Gvi0v/qxo8aBQ5ve/a38oRPGgw5dGffnEJ/vDv0SXzM4f4e6Dp+5PrOI83eK
/d7E+TsUP15Wzvm7NBDXt8t8Xsqlu/Ntk/bO5/q7xfVQxvV36Snlls66yP3p
0vtbaqaPHjLOuBRP15J93K8u1UajW2qMbZcm752fb3ue+9el0kXr0l3dnL9r
8uL8o8/ftvSd1+Zy/q5Zv5w/OA8OwWNg8WTSKbAFToMJnAFLsA1W4F5wAB4E
a3AeHILHwMKD/D2KqzW9mvP3qDC8i/P36KeJTes/8Th/j4YfaU7VT3D9PXq7
9lL0x/UH22AF7vWotCobDH/J+Xt0Jv4+o5x/dH/UjSMnOX+PFkS3T7nE+YND
r/h7rJL736OGnmjF/cz5+0mnfJrX9NHSq0o4f5/64nj7zfdL+3QuPo9u5/73
ze83sx9kfNJD+x48fJDPSzPebWz7dGshIJ+fPr01PKUqm+L6+xTElpy/T/Hq
Gxk28Qb94vk3yuerT7/Hx/EFM5434/dw/j7tOP/sffP+r79Pnxf2G97/c1Sx
8fuKjct4/89RPHyM623lqLCdH+L65+jEtKMPbO7n+udox8XG47fVcf/nqPBz
5nHu/xzt6n7j73P3c//nzH7E/Z+jD+Pve3ma/gOPRSXV
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
        FormBox["\"\[Degree]C\"", TraditionalForm]},
      AxesOrigin->{24., 10.},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Oktopusz 1\"", TraditionalForm],
      PlotRange->{{24, 360}, {10, 24}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Prolog->{{{
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{24, 0}, {25, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{25, 0}, {26, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{26, 0}, {27, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{27, 0}, {28, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{28, 0}, {29, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{29, 0}, {30, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{30, 0}, {31, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{31, 0}, {32, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{32, 0}, {33, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{33, 0}, {34, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{34, 0}, {35, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{35, 0}, {36, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{36, 0}, {37, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{37, 0}, {38, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{38, 0}, {39, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{39, 0}, {40, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{40, 0}, {41, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{41, 0}, {42, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{42, 0}, {43, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{43, 0}, {44, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{44, 0}, {45, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{45, 0}, {46, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{46, 0}, {47, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{47, 0}, {48, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{48, 0}, {49, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{49, 0}, {50, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{50, 0}, {51, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{51, 0}, {52, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{52, 0}, {53, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{53, 0}, {54, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{54, 0}, {55, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{55, 0}, {56, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{56, 0}, {57, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{57, 0}, {58, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{58, 0}, {59, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{59, 0}, {60, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{60, 0}, {61, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{61, 0}, {62, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{62, 0}, {63, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{63, 0}, {64, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{64, 0}, {65, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{65, 0}, {66, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{66, 0}, {67, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{67, 0}, {68, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{68, 0}, {69, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{69, 0}, {70, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{70, 0}, {71, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{71, 0}, {72, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{72, 0}, {73, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{73, 0}, {74, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{74, 0}, {75, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{75, 0}, {76, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{76, 0}, {77, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{77, 0}, {78, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{78, 0}, {79, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{79, 0}, {80, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{80, 0}, {81, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{81, 0}, {82, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{82, 0}, {83, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{83, 0}, {84, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{84, 0}, {85, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{85, 0}, {86, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{86, 0}, {87, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{87, 0}, {88, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{88, 0}, {89, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{89, 0}, {90, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{90, 0}, {91, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{91, 0}, {92, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{92, 0}, {93, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{93, 0}, {94, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{94, 0}, {95, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{95, 0}, {96, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{96, 0}, {97, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{97, 0}, {98, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{98, 0}, {99, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{99, 0}, {100, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{100, 0}, {101, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{101, 0}, {102, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{102, 0}, {103, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{103, 0}, {104, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{104, 0}, {105, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{105, 0}, {106, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{106, 0}, {107, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{107, 0}, {108, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{108, 0}, {109, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{109, 0}, {110, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{110, 0}, {111, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{111, 0}, {112, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{112, 0}, {113, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{113, 0}, {114, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{114, 0}, {115, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{115, 0}, {116, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{116, 0}, {117, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{117, 0}, {118, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{118, 0}, {119, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{119, 0}, {120, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{120, 0}, {121, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{121, 0}, {122, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{122, 0}, {123, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{123, 0}, {124, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{124, 0}, {125, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{125, 0}, {126, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{126, 0}, {127, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{127, 0}, {128, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{128, 0}, {129, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{129, 0}, {130, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{130, 0}, {131, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{131, 0}, {132, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{132, 0}, {133, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{133, 0}, {134, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{134, 0}, {135, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{135, 0}, {136, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{136, 0}, {137, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{137, 0}, {138, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{138, 0}, {139, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{139, 0}, {140, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{140, 0}, {141, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{141, 0}, {142, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{142, 0}, {143, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{143, 0}, {144, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{144, 0}, {145, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{145, 0}, {146, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{146, 0}, {147, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{147, 0}, {148, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{148, 0}, {149, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{149, 0}, {150, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{150, 0}, {151, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{151, 0}, {152, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{152, 0}, {153, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{153, 0}, {154, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{154, 0}, {155, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{155, 0}, {156, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{156, 0}, {157, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{157, 0}, {158, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{158, 0}, {159, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{159, 0}, {160, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{160, 0}, {161, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{161, 0}, {162, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{162, 0}, {163, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{163, 0}, {164, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{164, 0}, {165, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{165, 0}, {166, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{166, 0}, {167, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{167, 0}, {168, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{168, 0}, {169, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{169, 0}, {170, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{170, 0}, {171, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{171, 0}, {172, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{172, 0}, {173, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{173, 0}, {174, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{174, 0}, {175, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{175, 0}, {176, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{176, 0}, {177, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{177, 0}, {178, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{178, 0}, {179, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{179, 0}, {180, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{180, 0}, {181, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{181, 0}, {182, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{182, 0}, {183, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{183, 0}, {184, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{184, 0}, {185, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{185, 0}, {186, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{186, 0}, {187, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{187, 0}, {188, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{188, 0}, {189, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{189, 0}, {190, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{190, 0}, {191, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{191, 0}, {192, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{192, 0}, {193, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{193, 0}, {194, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{194, 0}, {195, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{195, 0}, {196, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{196, 0}, {197, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{197, 0}, {198, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{198, 0}, {199, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{199, 0}, {200, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{200, 0}, {201, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{201, 0}, {202, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{202, 0}, {203, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{203, 0}, {204, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{204, 0}, {205, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{205, 0}, {206, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{206, 0}, {207, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{207, 0}, {208, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{208, 0}, {209, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{209, 0}, {210, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{210, 0}, {211, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{211, 0}, {212, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{212, 0}, {213, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{213, 0}, {214, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{214, 0}, {215, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{215, 0}, {216, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{216, 0}, {217, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{217, 0}, {218, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{218, 0}, {219, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{219, 0}, {220, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{220, 0}, {221, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{221, 0}, {222, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{222, 0}, {223, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{223, 0}, {224, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{224, 0}, {225, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{225, 0}, {226, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{226, 0}, {227, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{227, 0}, {228, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{228, 0}, {229, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{229, 0}, {230, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{230, 0}, {231, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{231, 0}, {232, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{232, 0}, {233, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{233, 0}, {234, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{234, 0}, {235, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{235, 0}, {236, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{236, 0}, {237, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{237, 0}, {238, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{238, 0}, {239, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{239, 0}, {240, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{240, 0}, {241, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{241, 0}, {242, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{242, 0}, {243, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{243, 0}, {244, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{244, 0}, {245, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{245, 0}, {246, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{246, 0}, {247, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{247, 0}, {248, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{248, 0}, {249, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{249, 0}, {250, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{250, 0}, {251, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{251, 0}, {252, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{252, 0}, {253, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{253, 0}, {254, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{254, 0}, {255, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{255, 0}, {256, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{256, 0}, {257, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{257, 0}, {258, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{258, 0}, {259, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{259, 0}, {260, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{260, 0}, {261, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{261, 0}, {262, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{262, 0}, {263, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{263, 0}, {264, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{264, 0}, {265, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{265, 0}, {266, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{266, 0}, {267, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{267, 0}, {268, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{268, 0}, {269, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{269, 0}, {270, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{270, 0}, {271, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{271, 0}, {272, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{272, 0}, {273, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{273, 0}, {274, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{274, 0}, {275, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{275, 0}, {276, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{276, 0}, {277, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{277, 0}, {278, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{278, 0}, {279, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{279, 0}, {280, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{280, 0}, {281, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{281, 0}, {282, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{282, 0}, {283, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{283, 0}, {284, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{284, 0}, {285, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{285, 0}, {286, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{286, 0}, {287, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{287, 0}, {288, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{288, 0}, {289, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{289, 0}, {290, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{290, 0}, {291, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{291, 0}, {292, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{292, 0}, {293, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{293, 0}, {294, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{294, 0}, {295, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{295, 0}, {296, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{296, 0}, {297, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{297, 0}, {298, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{298, 0}, {299, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{299, 0}, {300, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{300, 0}, {301, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{301, 0}, {302, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{302, 0}, {303, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{303, 0}, {304, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{304, 0}, {305, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{305, 0}, {306, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{306, 0}, {307, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{307, 0}, {308, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{308, 0}, {309, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{309, 0}, {310, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{310, 0}, {311, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{311, 0}, {312, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{312, 0}, {313, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{313, 0}, {314, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{314, 0}, {315, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{315, 0}, {316, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{316, 0}, {317, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{317, 0}, {318, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{318, 0}, {319, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{319, 0}, {320, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{320, 0}, {321, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{321, 0}, {322, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{322, 0}, {323, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{323, 0}, {324, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{324, 0}, {325, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{325, 0}, {326, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{326, 0}, {327, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{327, 0}, {328, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{328, 0}, {329, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{329, 0}, {330, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{330, 0}, {331, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{331, 0}, {332, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{332, 0}, {333, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{333, 0}, {334, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{334, 0}, {335, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{335, 0}, {336, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{336, 0}, {337, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{337, 0}, {338, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{338, 0}, {339, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{339, 0}, {340, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{340, 0}, {341, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{341, 0}, {342, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{342, 0}, {343, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{343, 0}, {344, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{344, 0}, {345, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{345, 0}, {346, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{346, 0}, {347, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{347, 0}, {348, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{348, 0}, {349, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{349, 0}, {350, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{350, 0}, {351, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{351, 0}, {352, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{352, 0}, {353, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{353, 0}, {354, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{354, 0}, {355, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{355, 0}, {356, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{356, 0}, {357, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{357, 0}, {358, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{358, 0}, {359, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{359, 0}, {360, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{360, 0}, {361, 100}]}}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0.5], PointSize[0.0055000000000000005`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd1uetYzcQBtCxK1AJ1w0YggPgvHQO66ANzolee529K8ffLEEl3BJUAkt4
JbAElWAYjwPjHv35cDAYEEPyEnrs3sPb9x+NiFuPRPyX179nynXuZz6Ln8PP
4xfwi/glfAOXmU9cZ0s/OfPlmU/Nevrpma9s3XC8Sh3Ha9RxvM76ON7YztNw
vEkdx1vUcbxNHcc71HHcpI7jXeo43qOO433qOD6gjuOwdcENdxy36McNdxy3
6ccNdxx36McNdxx36ccNdxwf0o8b7jg+oh833HF8TD9uuOP4hH7ccMfxKf24
pef70tP5vnw2c37PJZ3vAfWO43P6ccM9/fjML7Yu6Vwfdxxfzsz5ccMdx1f0
44Y7jq/pxw13HHXmPJ8lPc+npOf+VdzwijseOL7ZesEFV9zSc54Vdzxw3Nt6
wQVX3PCKOx44vp2Z+5/O/U/n/LjhFXc8cHy39YILrrilc37c8cBxf+sFF1xx
wyvueOD4fub8nhdccE3n/HjFHQ8cP2y94IIrbumcH3c8cPy49YILrrjhFXc8
cPw0M+9/Ou9/OufHDa+444Hj560XXHDFLZ3z444Hjl+2XnDBFTe84o4Hjl9Z
HxdcccMr7njg+I31ccEVN7zijgeOB6yPC6644RV3PHA8ZH1ccMUNr7jjgeO4
9Q4veI8LPuCKj7jhE17xGXd8hUd6vi+XdP7//H3m/J53eMF7XPABV3zEDZ/w
is+4p3N+PPAFxx9b7/CC97jgA674iFt6ns8pPc9nTef8uOMrPPAFx59b7/CC
97ikc35c8RE3fMIrPuOOr/DAFxx/zZz7v0vP/V/wHhd8wBUfccMnvOIz7umc
Hw98wfH31ju84D0u+IArPuKWzvufzvnxGXd8hQe+4Phn6x1e8B6XdM6PKz7i
9r//BRf19kQ=
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdmAtwVOUVxy+JqDiiwVIpj9K1YLVFymKAgLwOgYQQSLIJeZgnNyTZzea5
b4wIc2WkSKCQpq2ANe0W2lJbhIAjRVC4QEUaSwnaClTARYHasUgAsVCB9t58
5+90zx1mmB9nzz3feX7n8tDC5ryaBE3Tcvtomv23eiaSY2bNipdHJZPiSbRr
+PJPc68/zvyE4Mm0Z1FG/oCN4CmUbD9B8FTypI3o8+EU8DRy/XBd0wMjwNNp
xub+ob/7wERnnx64dfZlZoNo/yNrPi/Zj/PMIHfvM47lM2jjvh//7cohZi2V
/vHA4SHpX0KeStbbzj5N41k+k8/HbMykX/mm3nP8IOSz6HFb/irks6jln98Z
e3cD5GlUvvbAtUdfgjyNGj4qPpahQZ5OnrjzpZP+2I232n+B88+msl59ZmM2
3Xhj3dHFLZBnUErq4DdH10OeQXdM70mc7oN8Dn3LCv+uCsjn0LDoqT5dSyDP
pH/lWhlC/oxMGvPCzYV/uh/yufTFo9YJbiG+grV5Qj5PxfsC5FnxbGTR8U1W
ANdBnk1/tp/VkGfTLPt5DvIcOnjNMpAKeQ4N6PqksXgU5C56trkiawqYXOS3
0rPJhd8LNl105rT1lEM/l+zy3DUN+rnU3ZqesHcS9HPJqjba3B/6ufTiBus5
OZb189T5ljFTHn2mnb/P1cRs5NG5U55BSaXMZp6KxwTozye73AaCSbAh2BSs
5dN3ewsE+oINwWY+HVmbeHf7YSfrF7Ae9AvoHjtBddAvoMV2Q5RAv4BaO06s
7HgS9gspZvdfJfQLyareBY+1QL+Q+wf6hWSLb/SFfhF9823/sLeP8XmoiK63
brveeonZKKKH57SPnNMO/SJaaQ+IBdB/Mp5JsCHYFKwVC33BhmBTsFYi9EtU
f05CP5WoeLYzmyW0/eMHM5c4MX9KaW7Kyhn6eWYqVf0UxjwopQH2M5bZLKXe
chyH/iyjlJ/+4KUvG5ipjJyekzeT3Zg3ZXSicc3pC+snsH4ZZb7y18xXBjJr
5XQ50RoY/4X9ciq+surhfc/j/OV0wK7vb+P85dQQfe/OJy6ifypUfexG/1TQ
3pbxl7f8Fv1TQXZ7Da9B/wjWFsQzCTYEm4I1Xc2TImaHTqut9m0Zj3joZLfL
1q8x6/z7+xFfnZa8+4j1h+MV1enqTxw5/a4g3joNifQ9/OYF5phOtvnlnyJ/
lWq+nmF2VNKxDDNlG35PlZRmz7NzzHol5dnq22G/UuU3lzlaSdYwG9LvKcS7
kk4N23Nk+1DmmGBtYTw7BJNgXbAhOCrYFBwTrFUJ+1W0zro+xnyBfqiiFfZz
F+xXUXRs1p3rg7BfRTv6lnb2/cp+FdnTquwo7FfRO79M23n1FuxXxd9nWjXt
q7w49P3byH+16rdW+C9Yr6br8z/+9c+eQ/yrafSOjkubsQ9Eq8nssgwmI//V
ZI/7DV7Yr6aszxftKDmD+quhQ/Y8Ww77NWS3y4HxqOca6rIv1H7MumBDcFSw
KTgmWHPHs8Ot9iOC/261Tz0D/91qvxkJ/91UeJ8VgRz476Zub2LHBOwPpptW
WeN42wnUv1vtC4tR/x46Yt/f81D/HnUfbkT9e+iZFbO+/tBw7i/dQ4t6H54/
hkfd//OYox6yrHd7g4i/h5atvJ1duArx99DzD578y7+Tkf9aGrX3I+sP/K9V
/fUy4l+r6ikH8a9V9YP73hAcFWwKjgnWvPHsEExedV9vRfy9al/tg/h7KcP+
Bw/i76WW3e9OTlwD/71k//xsKuLvpZ9veSEl3Yn9sY7e/+OrG39EiH8dLZh2
6fzVM8h/ncrPFsyfOrUP+WC/jvYYJ/KHXEH/1dGh/cva12D/M+tU/C7B/zrV
Dxvgfz29bi9Q34D/9VRqK9xE/wvWBRuCo4LNevrP5OLRzfOYY/XUe/xb2F8a
4tkhmBrUvr6JWW9Q/qzFftGg9rHfMEcFm4JjgrXGeHY00tyl288Nmgv/G1U/
OeF/o7q/lsO+4KhgU3BMsNakvq8mwr5gEqwLNprU+Q+NYfuCTcExwVpzPDsE
k2BdsNGs9p1r32f7zaq+Xof/zfTBzsYPdl6E/83qe2gY9i+fyu8I5iSf6r/h
zA6f2n8nMjt96nvyIPLjo4QP33jxqUJml0/tM79DvHw0zt5f5zP7BBuC2wRH
BXcKNgV3C44J7hGs+eM5SbBDsNNPA49aHzhLMR/8lHlvwqgVhTwPXH5atH73
qdsxzCs/zydmH/NdmB9+eu3Z7KGfhJjb/HwuzDM/fx+xfqdf1e9bmC9+srbJ
xuh85m6/+l54D/PGz/OKucevvr8GY/4E+H3If0DdT/XIf0C9Lxn5D6jzJCD/
AbUPHuf4uFj/98h/QM3P1cg/vy+I/Aesjbfhe/1v8PvaAjx/cJ8EVL3i/u0M
UFvvPIX/AVX/BRyv7oC6v/yY9/x77EM9AXV/fPX/G0EafId9gzMnBWmabf80
7oOgOs9Uvi+cgimo/MU+6xKsB1U/LWV/fMH4+BvB+Pi3BXnfwjwPqn0jn7lT
sCm4W3BMcI9gLRTPSSF1Pnx/OUIqHh3MzhCdH2RN6JGo/5DK51VmV0jt9++g
/kMqHwNQ/yHy/X89GiE1f6pY3sb2T+I+Dal4ZCL/4n1miOPN7+sWHGN73fA/
xP9/Av/DKv5p8D+s5INQ/2G1f3yG/g+rensN90NY1fe9mH9CXxfsE2yEKWh/
j4b4vG1h3g/gP84H//k8TfCf33cc/R9W8UxE/QvuCfO5Uf+R+HglRdR924Z9
JKLsZSP/EXUf1CL/Ea4f/r0ros7zB/gfiZ8nvojwP6Ly2+Wk/wGzxa5M
          
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
        FormBox["\"\[Degree]C\"", TraditionalForm]},
      AxesOrigin->{24., 10.},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"G\[OAcute]lyairoda\"", TraditionalForm],
      PlotRange->{{24, 360}, {10, 24}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Prolog->{{{
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{24, 0}, {25, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{25, 0}, {26, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{26, 0}, {27, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{27, 0}, {28, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{28, 0}, {29, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{29, 0}, {30, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{30, 0}, {31, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{31, 0}, {32, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{32, 0}, {33, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{33, 0}, {34, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{34, 0}, {35, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{35, 0}, {36, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{36, 0}, {37, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{37, 0}, {38, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{38, 0}, {39, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{39, 0}, {40, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{40, 0}, {41, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{41, 0}, {42, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{42, 0}, {43, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{43, 0}, {44, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{44, 0}, {45, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{45, 0}, {46, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{46, 0}, {47, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{47, 0}, {48, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{48, 0}, {49, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{49, 0}, {50, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{50, 0}, {51, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{51, 0}, {52, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{52, 0}, {53, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{53, 0}, {54, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{54, 0}, {55, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{55, 0}, {56, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{56, 0}, {57, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{57, 0}, {58, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{58, 0}, {59, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{59, 0}, {60, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{60, 0}, {61, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{61, 0}, {62, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{62, 0}, {63, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{63, 0}, {64, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{64, 0}, {65, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{65, 0}, {66, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{66, 0}, {67, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{67, 0}, {68, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{68, 0}, {69, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{69, 0}, {70, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{70, 0}, {71, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{71, 0}, {72, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{72, 0}, {73, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{73, 0}, {74, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{74, 0}, {75, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{75, 0}, {76, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{76, 0}, {77, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{77, 0}, {78, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{78, 0}, {79, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{79, 0}, {80, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{80, 0}, {81, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{81, 0}, {82, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{82, 0}, {83, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{83, 0}, {84, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{84, 0}, {85, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{85, 0}, {86, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{86, 0}, {87, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{87, 0}, {88, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{88, 0}, {89, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{89, 0}, {90, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{90, 0}, {91, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{91, 0}, {92, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{92, 0}, {93, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{93, 0}, {94, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{94, 0}, {95, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{95, 0}, {96, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{96, 0}, {97, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{97, 0}, {98, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{98, 0}, {99, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{99, 0}, {100, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{100, 0}, {101, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{101, 0}, {102, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{102, 0}, {103, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{103, 0}, {104, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{104, 0}, {105, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{105, 0}, {106, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{106, 0}, {107, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{107, 0}, {108, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{108, 0}, {109, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{109, 0}, {110, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{110, 0}, {111, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{111, 0}, {112, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{112, 0}, {113, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{113, 0}, {114, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{114, 0}, {115, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{115, 0}, {116, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{116, 0}, {117, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{117, 0}, {118, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{118, 0}, {119, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{119, 0}, {120, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{120, 0}, {121, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{121, 0}, {122, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{122, 0}, {123, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{123, 0}, {124, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{124, 0}, {125, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{125, 0}, {126, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{126, 0}, {127, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{127, 0}, {128, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{128, 0}, {129, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{129, 0}, {130, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{130, 0}, {131, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{131, 0}, {132, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{132, 0}, {133, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{133, 0}, {134, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{134, 0}, {135, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{135, 0}, {136, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{136, 0}, {137, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{137, 0}, {138, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{138, 0}, {139, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{139, 0}, {140, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{140, 0}, {141, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{141, 0}, {142, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{142, 0}, {143, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{143, 0}, {144, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{144, 0}, {145, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{145, 0}, {146, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{146, 0}, {147, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{147, 0}, {148, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{148, 0}, {149, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{149, 0}, {150, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{150, 0}, {151, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{151, 0}, {152, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{152, 0}, {153, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{153, 0}, {154, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{154, 0}, {155, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{155, 0}, {156, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{156, 0}, {157, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{157, 0}, {158, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{158, 0}, {159, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{159, 0}, {160, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{160, 0}, {161, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{161, 0}, {162, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{162, 0}, {163, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{163, 0}, {164, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{164, 0}, {165, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{165, 0}, {166, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{166, 0}, {167, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{167, 0}, {168, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{168, 0}, {169, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{169, 0}, {170, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{170, 0}, {171, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{171, 0}, {172, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{172, 0}, {173, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{173, 0}, {174, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{174, 0}, {175, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{175, 0}, {176, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{176, 0}, {177, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{177, 0}, {178, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{178, 0}, {179, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{179, 0}, {180, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{180, 0}, {181, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{181, 0}, {182, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{182, 0}, {183, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{183, 0}, {184, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{184, 0}, {185, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{185, 0}, {186, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{186, 0}, {187, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{187, 0}, {188, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{188, 0}, {189, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{189, 0}, {190, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{190, 0}, {191, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{191, 0}, {192, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{192, 0}, {193, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{193, 0}, {194, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{194, 0}, {195, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{195, 0}, {196, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{196, 0}, {197, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{197, 0}, {198, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{198, 0}, {199, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{199, 0}, {200, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{200, 0}, {201, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{201, 0}, {202, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{202, 0}, {203, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{203, 0}, {204, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{204, 0}, {205, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{205, 0}, {206, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{206, 0}, {207, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{207, 0}, {208, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{208, 0}, {209, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{209, 0}, {210, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{210, 0}, {211, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{211, 0}, {212, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{212, 0}, {213, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{213, 0}, {214, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{214, 0}, {215, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{215, 0}, {216, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{216, 0}, {217, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{217, 0}, {218, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{218, 0}, {219, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{219, 0}, {220, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{220, 0}, {221, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{221, 0}, {222, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{222, 0}, {223, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{223, 0}, {224, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{224, 0}, {225, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{225, 0}, {226, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{226, 0}, {227, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{227, 0}, {228, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{228, 0}, {229, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{229, 0}, {230, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{230, 0}, {231, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{231, 0}, {232, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{232, 0}, {233, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{233, 0}, {234, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{234, 0}, {235, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{235, 0}, {236, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{236, 0}, {237, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{237, 0}, {238, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{238, 0}, {239, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{239, 0}, {240, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{240, 0}, {241, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{241, 0}, {242, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{242, 0}, {243, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{243, 0}, {244, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{244, 0}, {245, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{245, 0}, {246, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{246, 0}, {247, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{247, 0}, {248, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{248, 0}, {249, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{249, 0}, {250, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{250, 0}, {251, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{251, 0}, {252, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{252, 0}, {253, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{253, 0}, {254, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{254, 0}, {255, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{255, 0}, {256, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{256, 0}, {257, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{257, 0}, {258, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{258, 0}, {259, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{259, 0}, {260, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{260, 0}, {261, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{261, 0}, {262, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{262, 0}, {263, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{263, 0}, {264, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{264, 0}, {265, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{265, 0}, {266, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{266, 0}, {267, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{267, 0}, {268, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{268, 0}, {269, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{269, 0}, {270, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{270, 0}, {271, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{271, 0}, {272, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{272, 0}, {273, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{273, 0}, {274, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{274, 0}, {275, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{275, 0}, {276, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{276, 0}, {277, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{277, 0}, {278, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{278, 0}, {279, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{279, 0}, {280, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{280, 0}, {281, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{281, 0}, {282, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{282, 0}, {283, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{283, 0}, {284, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{284, 0}, {285, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{285, 0}, {286, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{286, 0}, {287, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{287, 0}, {288, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{288, 0}, {289, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{289, 0}, {290, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{290, 0}, {291, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{291, 0}, {292, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{292, 0}, {293, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{293, 0}, {294, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{294, 0}, {295, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{295, 0}, {296, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{296, 0}, {297, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{297, 0}, {298, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{298, 0}, {299, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{299, 0}, {300, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{300, 0}, {301, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{301, 0}, {302, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{302, 0}, {303, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{303, 0}, {304, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{304, 0}, {305, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{305, 0}, {306, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{306, 0}, {307, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{307, 0}, {308, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{308, 0}, {309, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{309, 0}, {310, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{310, 0}, {311, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{311, 0}, {312, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{312, 0}, {313, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{313, 0}, {314, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{314, 0}, {315, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{315, 0}, {316, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{316, 0}, {317, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{317, 0}, {318, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{318, 0}, {319, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{319, 0}, {320, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{320, 0}, {321, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{321, 0}, {322, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{322, 0}, {323, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{323, 0}, {324, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{324, 0}, {325, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{325, 0}, {326, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{326, 0}, {327, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{327, 0}, {328, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{328, 0}, {329, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{329, 0}, {330, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{330, 0}, {331, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{331, 0}, {332, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{332, 0}, {333, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{333, 0}, {334, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{334, 0}, {335, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{335, 0}, {336, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{336, 0}, {337, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{337, 0}, {338, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{338, 0}, {339, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{339, 0}, {340, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{340, 0}, {341, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{341, 0}, {342, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{342, 0}, {343, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{343, 0}, {344, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{344, 0}, {345, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{345, 0}, {346, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{346, 0}, {347, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{347, 0}, {348, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{348, 0}, {349, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{349, 0}, {350, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{350, 0}, {351, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{351, 0}, {352, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{352, 0}, {353, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{353, 0}, {354, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{354, 0}, {355, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{355, 0}, {356, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{356, 0}, {357, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{357, 0}, {358, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{358, 0}, {359, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{359, 0}, {360, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{360, 0}, {361, 100}]}}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0.5], PointSize[0.0055000000000000005`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd1ueRE0EQhuGGCBTCkoGwhWfwHsTh/eA9CPu7Q1AIE8KF0CEohAlBIVDU
9VfUvPen66ne3dn+1LrSnpfftt7sNrNbu8z+1Z2/w2Wn7s96JOu+rEezzrMe
g4/DJ+CT8Cm4jHbYTqMP2xn0YTuLPmznsua8Dtt59GXldSHrgezLB7NeHO0X
x+vt0vg8l3X+Zbw/bFfQh+0q+rBdQx+26+jDdgN92G6iD9sia85bYIdDVv63
smaeRVbecOB62xqfV2SdL+f7Bmy3RxfY4YDtDu6HHQ7Y7uJ+2OGA7V5W5Q87
HLLyv59V+cvKHw5cbw/G5xVZ58t6f9geji6wwwHbI9wPOxywPcb9sMMB25Os
yh92OGTl/zSr8peVPxy43p6Nzyuyzpf1/rA9H11ghwO2OnqCC1xhhxsccJcP
ZX0xeoKLnHlV2OEGB9xhezl6krUPsuaHHW5wwB22V1n35vmyzpc1v5z5ONxk
7RvcYXs9epK1z3CFHW5wwB22N1m1f7LmR7/CDjc44A7b26zKX9b5suaX9f1G
v6Ef6Hf07d3o6d14fYEr7HCDA+6wvR89yfk+RVb+sMMNDrjD9iGr8peVv6z5
ZeUPNzjgDtvH0ZOs/OEKO9zggDtsn0ZPsvKHK+yy8ocD7rB9Hj3BBa6ww03O
zzPgDtuX0ZOs/OEKO9zggDtsX0dPsvKXNT/scIMD7rB9Gz3BBa6ww01W/nJ+
n7qs+ZejZ/AEz+ECL+AKL2GX8/1XcIO34YDXcIc3sH3PmnnN5MxrkjW/rP2A
F3CFl7DDK5zX4G044DXc4Q1sP7JmHjNZ86M/hwu8gCu8hF3O/Fc4v8maX9b/
d3gNd3gD28/RM1n7D8/hAi/gCi9hl/P3/0rW/LL2Hw54DXd4A9uvrNp/WZ+/
rPll7T+8gCu8hB1e4bwGb8MBr+EOb2D7nVX7L2t+9OdwgRdwhZewy9p/nN9k
zS9r/+E13OENbH9Gz2TtPzyHC7yAK7yE/b//AuA193g=
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
        FormBox["\"\[Degree]C\"", TraditionalForm]},
      AxesOrigin->{24., 10.},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"kisterem\"", TraditionalForm],
      PlotRange->{{24, 360}, {10, 24}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Prolog->{{{
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{135, 0}, {136, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{136, 0}, {137, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{137, 0}, {138, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{138, 0}, {139, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{139, 0}, {140, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{140, 0}, {141, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{141, 0}, {142, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{142, 0}, {143, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{143, 0}, {144, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{144, 0}, {145, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{145, 0}, {146, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{146, 0}, {147, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{147, 0}, {148, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{148, 0}, {149, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{149, 0}, {150, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{150, 0}, {151, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{151, 0}, {152, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{152, 0}, {153, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{153, 0}, {154, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{154, 0}, {155, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{155, 0}, {156, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{156, 0}, {157, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{157, 0}, {158, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{158, 0}, {159, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{159, 0}, {160, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{160, 0}, {161, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{161, 0}, {162, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{162, 0}, {163, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{163, 0}, {164, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{164, 0}, {165, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{165, 0}, {166, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{166, 0}, {167, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{167, 0}, {168, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{168, 0}, {169, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{169, 0}, {170, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{170, 0}, {171, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{171, 0}, {172, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{172, 0}, {173, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{173, 0}, {174, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{174, 0}, {175, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{175, 0}, {176, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{176, 0}, {177, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{177, 0}, {178, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{178, 0}, {179, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{179, 0}, {180, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{180, 0}, {181, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{181, 0}, {182, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{182, 0}, {183, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{183, 0}, {184, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{184, 0}, {185, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{185, 0}, {186, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{186, 0}, {187, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{187, 0}, {188, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{188, 0}, {189, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{189, 0}, {190, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{190, 0}, {191, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{191, 0}, {192, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{192, 0}, {193, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{193, 0}, {194, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{194, 0}, {195, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{195, 0}, {196, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{196, 0}, {197, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{197, 0}, {198, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{198, 0}, {199, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{199, 0}, {200, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{200, 0}, {201, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{201, 0}, {202, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{202, 0}, {203, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{203, 0}, {204, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{204, 0}, {205, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{205, 0}, {206, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{206, 0}, {207, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{207, 0}, {208, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{208, 0}, {209, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{209, 0}, {210, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{210, 0}, {211, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{211, 0}, {212, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{212, 0}, {213, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{213, 0}, {214, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{214, 0}, {215, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{215, 0}, {216, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{216, 0}, {217, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{217, 0}, {218, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{218, 0}, {219, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{219, 0}, {220, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{220, 0}, {221, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{221, 0}, {222, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{222, 0}, {223, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{223, 0}, {224, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{224, 0}, {225, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{225, 0}, {226, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{226, 0}, {227, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{227, 0}, {228, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{228, 0}, {229, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{229, 0}, {230, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{230, 0}, {231, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{231, 0}, {232, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{232, 0}, {233, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{233, 0}, {234, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{234, 0}, {235, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{235, 0}, {236, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{236, 0}, {237, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{237, 0}, {238, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{238, 0}, {239, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{239, 0}, {240, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{240, 0}, {241, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{241, 0}, {242, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{242, 0}, {243, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{243, 0}, {244, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{244, 0}, {245, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{245, 0}, {246, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{246, 0}, {247, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{247, 0}, {248, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{248, 0}, {249, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{249, 0}, {250, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{250, 0}, {251, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{251, 0}, {252, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{252, 0}, {253, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{253, 0}, {254, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{254, 0}, {255, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{255, 0}, {256, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{256, 0}, {257, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{257, 0}, {258, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{258, 0}, {259, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{259, 0}, {260, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{260, 0}, {261, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{261, 0}, {262, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{262, 0}, {263, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{263, 0}, {264, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{264, 0}, {265, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{265, 0}, {266, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{266, 0}, {267, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{267, 0}, {268, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{268, 0}, {269, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{269, 0}, {270, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{270, 0}, {271, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{271, 0}, {272, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{272, 0}, {273, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{273, 0}, {274, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{274, 0}, {275, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{275, 0}, {276, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{276, 0}, {277, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{277, 0}, {278, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{278, 0}, {279, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{279, 0}, {280, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{280, 0}, {281, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{281, 0}, {282, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{282, 0}, {283, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{283, 0}, {284, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{284, 0}, {285, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{285, 0}, {286, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{286, 0}, {287, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{287, 0}, {288, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{288, 0}, {289, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{289, 0}, {290, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{290, 0}, {291, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{291, 0}, {292, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{292, 0}, {293, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{293, 0}, {294, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{294, 0}, {295, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{295, 0}, {296, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{296, 0}, {297, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{297, 0}, {298, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{298, 0}, {299, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{299, 0}, {300, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{300, 0}, {301, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{301, 0}, {302, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{302, 0}, {303, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{303, 0}, {304, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{304, 0}, {305, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{305, 0}, {306, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{306, 0}, {307, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{307, 0}, {308, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{308, 0}, {309, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{309, 0}, {310, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{310, 0}, {311, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{311, 0}, {312, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{312, 0}, {313, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{313, 0}, {314, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{314, 0}, {315, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{315, 0}, {316, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{316, 0}, {317, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{317, 0}, {318, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{318, 0}, {319, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{319, 0}, {320, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{320, 0}, {321, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{321, 0}, {322, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{322, 0}, {323, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{323, 0}, {324, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{324, 0}, {325, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{325, 0}, {326, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{326, 0}, {327, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{327, 0}, {328, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{328, 0}, {329, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{329, 0}, {330, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{330, 0}, {331, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{331, 0}, {332, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{332, 0}, {333, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{333, 0}, {334, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{334, 0}, {335, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{335, 0}, {336, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{336, 0}, {337, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{337, 0}, {338, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{338, 0}, {339, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{339, 0}, {340, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{340, 0}, {341, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{341, 0}, {342, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{342, 0}, {343, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{343, 0}, {344, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{344, 0}, {345, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{345, 0}, {346, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{346, 0}, {347, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{347, 0}, {348, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{348, 0}, {349, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{349, 0}, {350, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{350, 0}, {351, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{351, 0}, {352, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{352, 0}, {353, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{353, 0}, {354, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{354, 0}, {355, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{355, 0}, {356, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{356, 0}, {357, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{357, 0}, {358, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{358, 0}, {359, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{359, 0}, {360, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{360, 0}, {361, 100}]}}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0.5], PointSize[0.0055000000000000005`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd1unNW0UUBuCTVOASLh1YASQgLMO+gxP2JMAQCDvELOH3KeErYUpwCVOC
S5gSXAJCuSN0H/85evT61fGxpSs/cf/h7QfXI+LWtYj/5uPXM+Xx3K/zWfwc
vomfxy/gF/FLuGydOF4mx/EKOY5XyXG8Ro7jdXIcb5DjeJMcx1vkON4mx/EO
OY53yXG8R47jfXIcH5Dj+JAcx2HrghN3HLfo48Qdx236OHHH8RF9nLjj+Jg+
TtxxfEIfJ+44PqWPE3ccn9HHiTuOz+njxB3HF/Snb6z96SfX/vRT67yzzqfX
Pk7ccdyljxN3HPfo48Qdx5frnPfjxB3HV/Rx4o7ja/o4ccdRt/csuOCKEzfc
8Ziev/83Wy+44Do978MNdzxw3N96wQVXnLjhjgeOb9c578cFV5y4Tc/vHw8c
37EfF1xx4jY978cDx4OtF1xwxYkb7njg+H77+RdccMWJG+544PiB/bhMz/tx
4oY7Hjh+3HrBBVecuOGOB46f2I8Lrjhxwx0PHD+zHxdcp+fzDzfe3/HA8Qv7
ccEVJ26444HjV/bjgitO3HDHA8dv7McFV5y44Y4Hjt/ZjwuuOHHDHQ8cD9mP
C644ccMdDxzHrXd4wXtc8AFXfMSJr3DDJ9zxeXr9/zmm1/+fl+n5/P1j6x1e
8B4XfMAVH3HiK9ym5/244zMe+ILjz613eMF7XPABV3zEOT3vxw2fcMdnPPAF
x19b7/CC99PzfnzAFR9x4ivc8Al3fMYDX3D8vb1vhxe8xwUfcMVHnPgKN3zC
HZ+n5/34guPR1ju84D0u+IArPuKcnvfjhk+44zMe+ILjn613eJme9+OCD7ji
I87//S+Zl/Yb
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd1mtsFUUUB/BTA2IMKVckokD0qoAQJVTLQ6jAKcijFLClvFqg3RZ52N62
u8vuJUXRIQYSApErBgyisBiE8AXLI8ZglMEQiMRHNVExgbhYbQgQaSCGpGr0
bnfOh/3vl+aX09nZM3PmzH28oXXh6nuIqLKAKPobP8/zN19HzziOPQk8Ofa8
CcYlEH8BPAU8FTwNzEkrMJVCHEzTIQ6mGRAH04v83t7884jEwTQT4mCaBfFZ
vKb3KTbx2UkrMM2BOJjKIA6muRCfy8XRc/I5Ey9PWoFpHsTBNB/iYFoAcTC9
BHEwVSTNYAXWYKqE8WAF1mBaCOPBCqzBVAXjwQqswbQIxoMVWINpMYwHK7AG
0xIYD1ZgDaalMB6swBpMy2A8WIE1mKphPFiBNZhqYHyNOU8yvsb0C3O+NJiW
m/5ozj+DFVgvN++X/rEiaQYrsAbTyrj/7JXxYAXWYKqF8bXx+7ukn4A1mOqS
ZrACazBZSafBDLbAyor3r3h87MBK9ncNDsFUb95nnAYz2AIrcFBv6knmr0/e
DyGYGpJOgxlsgRU4AGtwCKZVMD+YwRZYgQOwBodgehnmBzPYAitwANbgEEyr
YX4wgy2wAgdgDQ7BtAbmBzPYAitwANbgEExrYX4wgy2wAgdgDQ7BtA7mBzPY
AitwANbgEEyvwPxgBltgBQ7AGhyCqRHmBzPYajTzyvyNyfsgAOvGuN/1l/nN
eJL5m5JON/Ehe8r9Pz8p/RdsgVUTr9j55V+jLpv7MgBrcAimTNJpMGf42Oyr
Gwd1GVsZM07mz/C08bWny/obB2ANDsHUnHS6mU/8Prj89UpZ/2Z+dVD+CybL
+jfD/d6c7PcBWINDMLXE+W2V9W/hG5WfPrqlSeZv4fIZ327KnpX1b4Hf+y18
M/r/cskfrMEhmFqTToMZbIEVOABrcAgmO+mUzQ8cqF+qLst62OwOu+AM62fu
9yKbN2ULjh8dZMw2dz2z743z44wrbL6zY6Sult8Dls1LCsec+GCssQ1W4Bw4
ALeDNbgDHIK7weQknQKnwUUOD712avOC5VIfDneOLt0/8JBxhcO5/PFZUSf1
6vDn3jsP99ljbDtc0PvdUr8OH//73V0dsr45h6s6P9p3Li35OzzgelB43ZL8
Zbzk7/DYK8Pv3bxb8nd4g3L7jdog+Tv8W/X3c7S42+GyyVM3NT8r+bs86e4v
fc8dNt+TcrltybiB3fNl/924H/xj6qPI5TMHhoy9ckrq0+XF0bPbuMJlpz04
1Fkl9erygK5tPROnG9suR8s3dJTUr8tPl8xb2fKfcc7lW3/mn7fkPLvc+3NR
1rfd5YX5cr1xVs63yxErLxl3uPxUT0n1mFY57y4/ET0Nxt0uR+1k4yI5/+uT
ToHT4CIwgyvAFtgGq/VxP19lnAMH4HawBneAQ3A3mLykUx6fWXZ7+4g66Uce
D40KrFTy95ijfr1D8vd4cObsQ5kCyd8z94fsP9gGK3DO4yPnyyduuyr5e/zd
nuuZo4VS/x5viRp0X6l/j5vaVvV5cIrUv8ejoxeuk/r3+NSHb6vWWql/E78m
+ftJp3z+6fb5+0b2SP4+64sHZ35yUurf597jWSH17/OPr1FJ50ipf5/n5K+T
Y3flvvT59g/zG1KXjG2w8nltdJ0clvx9jtrHzhrJ3+e6qbf+uLNf9t/ntrm5
I33aZP99/rd068XCKtl/P97PTtl/P643T/I33/er5J81cck/y409Bw8/1ij1
n+Wvsl8cGPKx7H+WW9ffnHDhmOx/lkeU7RpeNlD2PxvfJ9tl/7P85oJ8xyyV
/c/G9/lp2f8spyfs3vr+Z8X8PwJhoO8=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
        FormBox["\"\[Degree]C\"", TraditionalForm]},
      AxesOrigin->{24., 10.},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"ovi\"", TraditionalForm],
      PlotRange->{{24, 360}, {10, 24}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Prolog->{{{
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{24, 0}, {25, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{25, 0}, {26, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{26, 0}, {27, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{27, 0}, {28, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{28, 0}, {29, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{29, 0}, {30, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{30, 0}, {31, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{31, 0}, {32, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{32, 0}, {33, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{33, 0}, {34, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{34, 0}, {35, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{35, 0}, {36, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{36, 0}, {37, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{37, 0}, {38, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{38, 0}, {39, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{39, 0}, {40, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{40, 0}, {41, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{41, 0}, {42, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{42, 0}, {43, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{43, 0}, {44, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{44, 0}, {45, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{45, 0}, {46, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{46, 0}, {47, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{47, 0}, {48, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{48, 0}, {49, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{49, 0}, {50, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{50, 0}, {51, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{51, 0}, {52, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{52, 0}, {53, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{53, 0}, {54, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{54, 0}, {55, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{55, 0}, {56, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{56, 0}, {57, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{57, 0}, {58, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{58, 0}, {59, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{59, 0}, {60, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{60, 0}, {61, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{61, 0}, {62, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{62, 0}, {63, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{63, 0}, {64, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{64, 0}, {65, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{65, 0}, {66, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{66, 0}, {67, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{67, 0}, {68, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{68, 0}, {69, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{69, 0}, {70, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{70, 0}, {71, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{71, 0}, {72, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{72, 0}, {73, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{73, 0}, {74, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{74, 0}, {75, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{75, 0}, {76, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{76, 0}, {77, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{77, 0}, {78, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{78, 0}, {79, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{79, 0}, {80, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{80, 0}, {81, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{81, 0}, {82, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{82, 0}, {83, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{83, 0}, {84, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{84, 0}, {85, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{85, 0}, {86, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{86, 0}, {87, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{87, 0}, {88, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{88, 0}, {89, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{89, 0}, {90, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{90, 0}, {91, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{91, 0}, {92, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{92, 0}, {93, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{93, 0}, {94, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{94, 0}, {95, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{95, 0}, {96, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{96, 0}, {97, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{97, 0}, {98, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{98, 0}, {99, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{99, 0}, {100, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{100, 0}, {101, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{101, 0}, {102, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{102, 0}, {103, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{103, 0}, {104, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{104, 0}, {105, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{105, 0}, {106, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{106, 0}, {107, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{107, 0}, {108, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{108, 0}, {109, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{109, 0}, {110, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{110, 0}, {111, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{111, 0}, {112, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{112, 0}, {113, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{113, 0}, {114, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{114, 0}, {115, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{115, 0}, {116, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{116, 0}, {117, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{117, 0}, {118, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{118, 0}, {119, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{119, 0}, {120, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{120, 0}, {121, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{121, 0}, {122, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{122, 0}, {123, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{123, 0}, {124, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{124, 0}, {125, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{125, 0}, {126, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{126, 0}, {127, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{127, 0}, {128, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{128, 0}, {129, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{129, 0}, {130, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{130, 0}, {131, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{131, 0}, {132, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{132, 0}, {133, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{133, 0}, {134, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{134, 0}, {135, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{135, 0}, {136, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{136, 0}, {137, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{137, 0}, {138, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{138, 0}, {139, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{139, 0}, {140, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{140, 0}, {141, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{141, 0}, {142, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{142, 0}, {143, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{143, 0}, {144, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{144, 0}, {145, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{145, 0}, {146, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{146, 0}, {147, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{147, 0}, {148, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{148, 0}, {149, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{149, 0}, {150, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{150, 0}, {151, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{151, 0}, {152, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{152, 0}, {153, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{153, 0}, {154, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{154, 0}, {155, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{155, 0}, {156, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{156, 0}, {157, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{157, 0}, {158, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{158, 0}, {159, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{159, 0}, {160, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{160, 0}, {161, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{161, 0}, {162, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{162, 0}, {163, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{163, 0}, {164, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{164, 0}, {165, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{165, 0}, {166, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{166, 0}, {167, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{167, 0}, {168, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{168, 0}, {169, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{169, 0}, {170, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{170, 0}, {171, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{171, 0}, {172, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{172, 0}, {173, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{173, 0}, {174, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{174, 0}, {175, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{175, 0}, {176, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{176, 0}, {177, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{177, 0}, {178, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{178, 0}, {179, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{179, 0}, {180, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{180, 0}, {181, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{181, 0}, {182, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{182, 0}, {183, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{183, 0}, {184, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{184, 0}, {185, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{185, 0}, {186, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{186, 0}, {187, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{187, 0}, {188, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{188, 0}, {189, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{189, 0}, {190, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{190, 0}, {191, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{191, 0}, {192, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{192, 0}, {193, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{193, 0}, {194, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{194, 0}, {195, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{195, 0}, {196, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{196, 0}, {197, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{197, 0}, {198, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{198, 0}, {199, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{199, 0}, {200, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{200, 0}, {201, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{201, 0}, {202, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{202, 0}, {203, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{203, 0}, {204, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{204, 0}, {205, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{205, 0}, {206, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{206, 0}, {207, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{207, 0}, {208, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{208, 0}, {209, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{209, 0}, {210, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{210, 0}, {211, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{211, 0}, {212, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{212, 0}, {213, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{213, 0}, {214, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{214, 0}, {215, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{215, 0}, {216, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{216, 0}, {217, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{217, 0}, {218, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{218, 0}, {219, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{219, 0}, {220, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{220, 0}, {221, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{221, 0}, {222, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{222, 0}, {223, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{223, 0}, {224, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{224, 0}, {225, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{225, 0}, {226, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{226, 0}, {227, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{227, 0}, {228, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{228, 0}, {229, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{229, 0}, {230, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{230, 0}, {231, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{231, 0}, {232, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{232, 0}, {233, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{233, 0}, {234, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{234, 0}, {235, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{235, 0}, {236, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{236, 0}, {237, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{237, 0}, {238, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{238, 0}, {239, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{239, 0}, {240, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{240, 0}, {241, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{241, 0}, {242, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{242, 0}, {243, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{243, 0}, {244, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{244, 0}, {245, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{245, 0}, {246, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{246, 0}, {247, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{247, 0}, {248, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{248, 0}, {249, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{249, 0}, {250, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{250, 0}, {251, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{251, 0}, {252, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{252, 0}, {253, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{253, 0}, {254, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{254, 0}, {255, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{255, 0}, {256, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{256, 0}, {257, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{257, 0}, {258, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{258, 0}, {259, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{259, 0}, {260, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{260, 0}, {261, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{261, 0}, {262, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{262, 0}, {263, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{263, 0}, {264, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{264, 0}, {265, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{265, 0}, {266, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{266, 0}, {267, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{267, 0}, {268, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{268, 0}, {269, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{269, 0}, {270, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{270, 0}, {271, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{271, 0}, {272, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{272, 0}, {273, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{273, 0}, {274, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{274, 0}, {275, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{275, 0}, {276, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{276, 0}, {277, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{277, 0}, {278, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{278, 0}, {279, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{279, 0}, {280, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{280, 0}, {281, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{281, 0}, {282, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{282, 0}, {283, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{283, 0}, {284, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{284, 0}, {285, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{285, 0}, {286, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{286, 0}, {287, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{287, 0}, {288, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{288, 0}, {289, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{289, 0}, {290, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{290, 0}, {291, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{291, 0}, {292, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{292, 0}, {293, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{293, 0}, {294, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{294, 0}, {295, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{295, 0}, {296, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{296, 0}, {297, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{297, 0}, {298, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{298, 0}, {299, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{299, 0}, {300, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{300, 0}, {301, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{301, 0}, {302, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{302, 0}, {303, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{303, 0}, {304, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{304, 0}, {305, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{305, 0}, {306, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{306, 0}, {307, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{307, 0}, {308, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{308, 0}, {309, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{309, 0}, {310, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{310, 0}, {311, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{311, 0}, {312, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{312, 0}, {313, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{313, 0}, {314, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{314, 0}, {315, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{315, 0}, {316, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{316, 0}, {317, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{317, 0}, {318, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{318, 0}, {319, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{319, 0}, {320, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{320, 0}, {321, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{321, 0}, {322, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{322, 0}, {323, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{323, 0}, {324, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{324, 0}, {325, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{325, 0}, {326, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{326, 0}, {327, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{327, 0}, {328, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{328, 0}, {329, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{329, 0}, {330, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{330, 0}, {331, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{331, 0}, {332, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{332, 0}, {333, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{333, 0}, {334, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{334, 0}, {335, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{335, 0}, {336, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{336, 0}, {337, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{337, 0}, {338, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{338, 0}, {339, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{339, 0}, {340, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{340, 0}, {341, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{341, 0}, {342, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{342, 0}, {343, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{343, 0}, {344, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{344, 0}, {345, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{345, 0}, {346, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{346, 0}, {347, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{347, 0}, {348, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{348, 0}, {349, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{349, 0}, {350, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{350, 0}, {351, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{351, 0}, {352, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{352, 0}, {353, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{353, 0}, {354, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{354, 0}, {355, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{355, 0}, {356, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{356, 0}, {357, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{357, 0}, {358, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{358, 0}, {359, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{359, 0}, {360, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{360, 0}, {361, 100}]}}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0.5], PointSize[0.0055000000000000005`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd1udtHDEQhuGxK9gS1oALWDgAzqZztk9yzrSco9bx95RwJbCEK2FKuBJY
wpVgGOIHg6/+DB6MBsQ3XBE6sLO7/Xa/mW3tM/tX936Opb06tXocPgGfhE/B
p+Ez8Fk4tXpor7p8uNVzrR5pffloq+fRh+0C+rBdRB+2S+jDdrnP47BdQR+2
q+jDdg192K6jD9sN9GG7iT5st9CH7Tb6sN1BH7ZF7wQ7HLBtYR52OGDbxjzs
cMB2F/OwwwHbPczDDgds9zEPOxywPcA87HDA9hDzsMMB2yPMww4HbI8xD7vc
3peQ9b48abX9PSf5YJuHA79vTzEPOxywPcO83N43hwO2560qv6zz0Q/YXmAe
djhge4l52OGALbfa7meU2/0kueXJsvYDFzjgCtur3iOc4Ay73PIUOOAK207v
EU5whh0ucMAVttetav+y9i9r/7LywwUOuML2pvcIJzjDLis/HHCF7W3vEU5w
hh0ucMAVtnetav+y9i9r/7LywwUOuML2vvcIJzjDLis/HHCF7UPvEU5whh0u
cMAVto+tav+y9i9r/7LywwUOuML2qfcIJzjDLis/HHCF7XPvEU5whh0ucMAV
ti84H05whh0ucMAVtq84H05whh0ucMAVtm84H05whh0ucMAVtl2cDyc4ww4X
OOAK29x7gEd4ghO8gDM8ww4v4QKv4IDXcJXb+7KR9f/n91bb+zLIeg/gCU7w
As7wDDu8hAu8gkNWfrjCG9h+9B7gEZ7gBC/gDM+wy+1+lnK7nyK3+1nJyg+v
4QpvYPvZe4BHeIKTrPxwhmfY4SVc4BUc8Bqu8Aa2X622/Q9y2/8ot/1PsvLD
CzjDM+zwEi7wCg5Z+eEKb2D73XuAR3iCE7yAMzzDLuv7l/X9y/r+ZeWH13CF
N7D96T3AIzzBSVZ+OMMz7P/9F3mH9oU=
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd1mlsFVUUB/ALuKAQrAGjENQHIkGBUCiytCxHBKHSQgtIoZQyXSgUuryZ
N+9Fa4QJFWNTkKqRRUCHNaCJFkgIVCPDImVTqgiFqHFAigEaIIUiBEJ8w5zz
Yf7z5eX3zty5c+5y7vTIL58yt61SKrONUt6vfw2jL9bEr3Ovke/h4GRwiu81
4hFU5F2XBrNHgkeBR4MpaIvg+a/TzyfiV9oQjoPVGEryrlMSZ+8ayvE3grbA
aizJOPhxsBoH8XF++yRp/yb/L89nK4mPh/cHqwnBfC2wSoU4WL0F4wdWEyEO
VmkQB6t0iKfz+0t8UtAWWE3m3ySOT+b4IP4/I2gCW2CHfULaZwZNYAvsZPL8
8fuoKUET2JrC61/ag9XUoAlsgR2wmsbrUdqDLbADVm9De7DFTpL2YDU9aAJb
YAessvi+gdwebGXRD997F9sBqxlBE9gCO2A1E9qDLbADVtnQPpvXu7TP9uer
q+Sfzf9L/rPYsn7A1iz/eVvZDljl8PqU9jk8vrLfc/h92A5YzQ6awBbYAatc
aJ8L+xnsgNWcoAlsgR2w0oIOgUnj5/D7aRq/r9RTjesh2wY7WjA/F6zyeL+w
Q2ACa3l++yIZX7CdRw+nM03GO4/7kf7BKj/oEJjAGtgC22AH7IJVAfQvlvEv
CI6XVhAcXwtsw/1OQXA9u2BVGHQITGANbIHtQugf7ML9ai70DyawBrbANtgB
u2BVBP2DqYj74fHVJC7fG+zObJvvV7L+i3h9ctwFq3n0Us/4tZHvD4EJrM3j
eiX5g22wA3bBaj7XV8kfTPOD3x8a2ALbYAfsglVx0CEwFfP7SP5gC2yDHbBb
HKwXakHQITAtgP7BFtxvg50FXL8kf7BaGHRoIb3X5dvx55Mlf7AGtsA22FlI
Rvd6vXs9n28uWJUEHQJTCeV12K11WMnWSmjFgdY+OeVyvpbQd+PPV3TJZdtg
B+yCVWnQoVKa2VL98r4Z0n8p3f3p0zn9hkv/paSPfLJxU6L0X8rzIf2DHbAL
VmUUz2bFgWek/zI66P3RVvovo1X3848OOMPfG1oZ1VcVrptwWL7PyqjbE3cu
nT7EtsEO2AWr8qBDYAJrYAtsgx2wC1bhoBPCtH5IQ3G7v+R9wtScueeFpcfZ
iRCnMFUtXn6n8Qg7I0z9vAmT730tTKffudx7oMTDYAtcA7bBtWAH3AB2wTfA
Sg86ARwCJ+p0N2Vm//JmqQ86tdmxffDF7lwPMnQKe+uzVs4r3a8HuRwP69S4
KX7HKqkfOu331tsFdo1O7bu+mpI2UuqZTlvWHgrV7uTn1ep0bWjT3kcMqW86
9do3o6W6ieMNOhUcHbDyfr7Ue51aTq7u3U6+h27odNWbz75S/wz65f1Ymx2X
uV4kGFCPDEpbtOPis9XsRIMq4sPRvkTqk0HL4ru1ZSI7w6BR8fTDPaRe8fNu
8n4KG/76aJb9a9BNb7sv4fepMfzzqaPkb5A3nGEZj1qDtlUmb6usk/wNaqjt
S9da2Q0G9fpn7KBJm6XeGzQkty614wXJ3/C/D5dJ/hFaXLNh58Hf2QkRyi5M
+XvycjmPI9Sp/8711+s5nhihMy2H2/euk/mP0IZTjyWXEjsj4tePMTL/EX/+
z/B4hCP03MT4gDZK/Y7Q8S05x7asY9dEaLO3gCqlnkfo8eRS+1QRuxbsgBvA
LvgGWJlBJ5g0/L9zjx7qLeehSQ+PA13yN2nrqLN6h7mSv0mtqV/dSh0t+Zt+
vUiR/E3KTR/Rt1sVO2zS1OIje09Oku8Xk6o+il9HZP5NavktPT/hrJynJj11
xe50JSTr3/TX00HJ36RpsdV1f/4o+Zv0sbZx32efS/4mfbjuXnPbfMnfJM1b
gKMl/yhVeOdlN8k/Spnn8q4Y9+Q8iNJt73xoZSdG6VbuqOtNu+R8iNIrXngb
OyNK1SX/3tv+iZxXUfqmafnTaaas/ygtqXowafpCWf9R8ra3sU3mP0rx0bua
OUzyj5L3ehUfyPxH6cV4eM8DyT9KXvd9Rsj+5/eZL/s/Sme9ejNU1n+UGnr+
cXfR15J/jCqdYxvG3Zb8Y+Suzep88pjs/xjFo7tvzpb5j1H58eznO0t/FKOl
vy6a+uVEmf+Y/30wQOY/5u+HlbL+Y/Rwe2XJ+o/R6YH7K9/tOZj+BwsonSw=

          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
        FormBox["\"\[Degree]C\"", TraditionalForm]},
      AxesOrigin->{24., 10.},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"SZGK\"", TraditionalForm],
      PlotRange->{{24, 360}, {10, 24}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Prolog->{{{
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{24, 0}, {25, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{25, 0}, {26, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{26, 0}, {27, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{27, 0}, {28, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{28, 0}, {29, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{29, 0}, {30, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{30, 0}, {31, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{31, 0}, {32, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{32, 0}, {33, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{33, 0}, {34, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{34, 0}, {35, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{35, 0}, {36, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{36, 0}, {37, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{37, 0}, {38, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{38, 0}, {39, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{39, 0}, {40, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{40, 0}, {41, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{41, 0}, {42, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{42, 0}, {43, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{43, 0}, {44, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{44, 0}, {45, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{45, 0}, {46, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{46, 0}, {47, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{47, 0}, {48, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{48, 0}, {49, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{49, 0}, {50, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{50, 0}, {51, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{51, 0}, {52, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{52, 0}, {53, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{53, 0}, {54, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{54, 0}, {55, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{55, 0}, {56, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{56, 0}, {57, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{57, 0}, {58, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{58, 0}, {59, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{59, 0}, {60, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{60, 0}, {61, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{61, 0}, {62, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{62, 0}, {63, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{63, 0}, {64, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{64, 0}, {65, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{65, 0}, {66, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{66, 0}, {67, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{67, 0}, {68, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{68, 0}, {69, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{69, 0}, {70, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{70, 0}, {71, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{71, 0}, {72, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{72, 0}, {73, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{73, 0}, {74, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{74, 0}, {75, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{75, 0}, {76, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{76, 0}, {77, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{77, 0}, {78, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{78, 0}, {79, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{79, 0}, {80, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{80, 0}, {81, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{81, 0}, {82, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{82, 0}, {83, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{83, 0}, {84, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{84, 0}, {85, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{85, 0}, {86, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{86, 0}, {87, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{87, 0}, {88, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{88, 0}, {89, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{89, 0}, {90, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{90, 0}, {91, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{91, 0}, {92, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{92, 0}, {93, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{93, 0}, {94, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{94, 0}, {95, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{95, 0}, {96, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{96, 0}, {97, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{97, 0}, {98, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{98, 0}, {99, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{99, 0}, {100, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{100, 0}, {101, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{101, 0}, {102, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{102, 0}, {103, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{103, 0}, {104, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{104, 0}, {105, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{105, 0}, {106, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{106, 0}, {107, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{107, 0}, {108, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{108, 0}, {109, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{109, 0}, {110, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{110, 0}, {111, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{111, 0}, {112, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{112, 0}, {113, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{113, 0}, {114, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{114, 0}, {115, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{115, 0}, {116, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{116, 0}, {117, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{117, 0}, {118, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{118, 0}, {119, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{119, 0}, {120, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{120, 0}, {121, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{121, 0}, {122, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{122, 0}, {123, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{123, 0}, {124, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{124, 0}, {125, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{125, 0}, {126, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{126, 0}, {127, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{127, 0}, {128, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{128, 0}, {129, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{129, 0}, {130, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{130, 0}, {131, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{131, 0}, {132, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{132, 0}, {133, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{133, 0}, {134, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{134, 0}, {135, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{135, 0}, {136, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{136, 0}, {137, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{137, 0}, {138, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{138, 0}, {139, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{139, 0}, {140, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{140, 0}, {141, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{141, 0}, {142, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{142, 0}, {143, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{143, 0}, {144, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{144, 0}, {145, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{145, 0}, {146, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{146, 0}, {147, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{147, 0}, {148, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{148, 0}, {149, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{149, 0}, {150, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{150, 0}, {151, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{151, 0}, {152, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{152, 0}, {153, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{153, 0}, {154, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{154, 0}, {155, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{155, 0}, {156, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{156, 0}, {157, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{157, 0}, {158, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{158, 0}, {159, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{159, 0}, {160, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{160, 0}, {161, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{161, 0}, {162, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{162, 0}, {163, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{163, 0}, {164, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{164, 0}, {165, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{165, 0}, {166, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{166, 0}, {167, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{167, 0}, {168, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{168, 0}, {169, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{169, 0}, {170, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{170, 0}, {171, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{171, 0}, {172, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{172, 0}, {173, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{173, 0}, {174, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{174, 0}, {175, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{175, 0}, {176, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{176, 0}, {177, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{177, 0}, {178, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{178, 0}, {179, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{179, 0}, {180, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{180, 0}, {181, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{181, 0}, {182, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{182, 0}, {183, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{183, 0}, {184, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{184, 0}, {185, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{185, 0}, {186, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{186, 0}, {187, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{187, 0}, {188, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{188, 0}, {189, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{189, 0}, {190, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{190, 0}, {191, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{191, 0}, {192, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{192, 0}, {193, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{193, 0}, {194, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{194, 0}, {195, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{195, 0}, {196, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{196, 0}, {197, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{197, 0}, {198, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{198, 0}, {199, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{199, 0}, {200, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{200, 0}, {201, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{201, 0}, {202, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{202, 0}, {203, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{203, 0}, {204, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{204, 0}, {205, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{205, 0}, {206, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{206, 0}, {207, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{207, 0}, {208, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{208, 0}, {209, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{209, 0}, {210, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{210, 0}, {211, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{211, 0}, {212, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{212, 0}, {213, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{213, 0}, {214, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{214, 0}, {215, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{215, 0}, {216, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{216, 0}, {217, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{217, 0}, {218, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{218, 0}, {219, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{219, 0}, {220, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{220, 0}, {221, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{221, 0}, {222, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{222, 0}, {223, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{223, 0}, {224, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{224, 0}, {225, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{225, 0}, {226, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{226, 0}, {227, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{227, 0}, {228, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{228, 0}, {229, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{229, 0}, {230, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{230, 0}, {231, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{231, 0}, {232, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{232, 0}, {233, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{233, 0}, {234, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{234, 0}, {235, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{235, 0}, {236, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{236, 0}, {237, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{237, 0}, {238, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{238, 0}, {239, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{239, 0}, {240, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{240, 0}, {241, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{241, 0}, {242, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{242, 0}, {243, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{243, 0}, {244, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{244, 0}, {245, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{245, 0}, {246, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{246, 0}, {247, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{247, 0}, {248, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{248, 0}, {249, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{249, 0}, {250, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{250, 0}, {251, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{251, 0}, {252, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{252, 0}, {253, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{253, 0}, {254, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{254, 0}, {255, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{255, 0}, {256, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{256, 0}, {257, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{257, 0}, {258, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{258, 0}, {259, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{259, 0}, {260, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{260, 0}, {261, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{261, 0}, {262, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{262, 0}, {263, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{263, 0}, {264, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{264, 0}, {265, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{265, 0}, {266, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{266, 0}, {267, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{267, 0}, {268, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{268, 0}, {269, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{269, 0}, {270, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{270, 0}, {271, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{271, 0}, {272, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{272, 0}, {273, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{273, 0}, {274, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{274, 0}, {275, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{275, 0}, {276, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{276, 0}, {277, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{277, 0}, {278, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{278, 0}, {279, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{279, 0}, {280, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{280, 0}, {281, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{281, 0}, {282, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{282, 0}, {283, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{283, 0}, {284, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{284, 0}, {285, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{285, 0}, {286, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{286, 0}, {287, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{287, 0}, {288, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{288, 0}, {289, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{289, 0}, {290, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{290, 0}, {291, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{291, 0}, {292, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{292, 0}, {293, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{293, 0}, {294, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{294, 0}, {295, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{295, 0}, {296, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{296, 0}, {297, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{297, 0}, {298, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{298, 0}, {299, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{299, 0}, {300, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{300, 0}, {301, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{301, 0}, {302, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{302, 0}, {303, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{303, 0}, {304, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{304, 0}, {305, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{305, 0}, {306, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{306, 0}, {307, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{307, 0}, {308, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{308, 0}, {309, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{309, 0}, {310, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{310, 0}, {311, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{311, 0}, {312, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{312, 0}, {313, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{313, 0}, {314, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{314, 0}, {315, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{315, 0}, {316, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{316, 0}, {317, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{317, 0}, {318, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{318, 0}, {319, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{319, 0}, {320, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{320, 0}, {321, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{321, 0}, {322, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{322, 0}, {323, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{323, 0}, {324, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{324, 0}, {325, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{325, 0}, {326, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{326, 0}, {327, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{327, 0}, {328, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{328, 0}, {329, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{329, 0}, {330, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{330, 0}, {331, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{331, 0}, {332, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{332, 0}, {333, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{333, 0}, {334, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{334, 0}, {335, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{335, 0}, {336, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{336, 0}, {337, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{337, 0}, {338, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{338, 0}, {339, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{339, 0}, {340, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{340, 0}, {341, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{341, 0}, {342, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{342, 0}, {343, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{343, 0}, {344, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{344, 0}, {345, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{345, 0}, {346, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{346, 0}, {347, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{347, 0}, {348, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{348, 0}, {349, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{349, 0}, {350, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{350, 0}, {351, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{351, 0}, {352, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{352, 0}, {353, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{353, 0}, {354, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{354, 0}, {355, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{355, 0}, {356, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{356, 0}, {357, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{357, 0}, {358, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{358, 0}, {359, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{359, 0}, {360, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{360, 0}, {361, 100}]}}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0.5], PointSize[0.0055000000000000005`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd19mNFDEQxvGCCCaEJoMWh8SNOZeb3uW+zcJywzbnc4UwITiECaFCmBAc
woSAEP6E/J+XTz9Vd7uq5Jc5tLu/s3fQzLYPmP3Nf7/j6V8eaXmi5eGWJ1uO
LU/Bp+Ez8Fn4HJx6O2znUYftAuqwXUQdtkst27wO22XUZe3rSsujrS4fa7nV
27f65+1q/z2Xdf419A/bddRhu4E6bDdRh+0W6rDdRh22O6jDNrVs8ybY4ZC1
/+2WbZ9J1r7hwPO2038vyTpfbv0GbHd7J9jhgO0e3ocdDtju433Y4YDtQUvt
H3Y4ZO3/YUvtX9b+Zb0P2yOcD7us/mF73DvBDgdsT/A+7HDA9hTvww4HbM9a
an7Y4ZC1/+cttX9Z+4cDz9uL/ntJ1vmy+oftZe8EOxyw5d4DnOAMO1zggCts
r1q2eQdZ+4Qz7HCBA66w7fYeZN0HWfPDDhc44Arb694DnOAMO1zggCtsb1pq
/7L2D2fY4QIHXGHb6/sZ4ARn2OECB1xhe4vz4QRn2OECB1xhe9dS+5e1fzjD
Dhc44Arb+94DnGTNDztc4IArbB96D3CCM+xwgQOusH1sqf3Lmh/OsMMFDrjC
9qn3ACc4wy5rfjjgCtvn3gOc4Aw7XOCAK2xfcL6s+eEMO1zggCtsX3sPcJI1
P+xwgQOusO33HuAEZ9jhAgdcYZtbtvu/kLUPeIQTPMEZnmGXWz9L9FNQX8EB
r+EKb2D71nsBD/AIJ3iCMzzDLrd5l7LuM7yCA17DFd7A9r3vZwEP8AgneIIz
PMMOL+ECr+CA13CFN7D9aKn7L+v+wyOc4AnO8Ay7rPnhAq/ggNdwhTew/ey9
gAd4hBM8wRmeYZd1/+X2f6jAKzjgNVzhDWy/+n4W8ACPcIInOMMz7PASLvAK
DngNV3gD2++Wuv9y288Aj3CCJzjDM+z//QfYy/ZH
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
vZf9p1jmy0b2n2KMSz74Xvx89h/1fxf7TzEyDra4GbiZ/UeT9bJSyX4annks
oWVQGc+jIXFKridsu5KDNRmP73g+TfqH/TdKw9a/3j+MGsQ6tWewkjXNtz+6
NMyc+3B8wldKLtUQXRlvW8v91K3Jfsh5WaEhZG6Y8Xwp+WmY7H2UXK1Jf/H+
WathpXf+KLlOk/keSf4W9BXh6UH+Fiw8lrfg2PPkb0FFq0dtr/cmf4uvPSxY
GnppSSj9GWWB97rC+Wy0yP34htJrFpk/n5O/Rfazg+RvgTecv5C/BWf8w6ds
rSV/C74NrLk7nfcVjwWb9evfJ0MVXrVF3r+mMt8scj6+q+Q6C2JX1HTMqr//
WvFO296nO49Ssp9V5n9z1oMV5uy6d8pZf8FWNQ/I3wrRLo5/RP5WLMlv1Dxn
PfPVinQxcHif0KyyX5WQvxV27wAmf6vMlxTyt0p/M58rrPJ+x3ntsaL9nqOV
NW8z/la5f69j/K0Y1id8w4qtjL8V2z09ntzLfDbYINaz7rsYfxvC9NOcZH0F
2DC3ZMGd41Xkb4Nw9wPuI7DJ83B+RNl869to890nNRvW6ttABPuryybPm6Pk
UpvsH4HsJzaZHzfJ3ybr9QT52+C9Dh8lfx0/sE23skrybyDXNZANdl/Zzy7n
qZP87ciKG9fKn/4MtsvvOfsYfzuW/HDjUDPma5Rd8uG+Y7TjcOzMIV1YD5od
/g/WbFl+m/G34950/QLEflJqV+dk/O1yX/qD/O2yntuwv9rlffwR+dtRV7op
8EAK89+OE1/fjj33PvPfLudN/fx1wK9vnLP8HvPfAfH56T8dOY8dsh55Pwh2
AMbz1YGrGX8HvJ9nchl/B5aIhGf/NzqwUL9uTu5L/g6svpHaOInfA1wOOc+5
P5Y6MM1nn3TIefW4+n+FA3P/pT+jyd8h70vprH+HzM8Z5O9AoiDE7yF1DiSI
gdGb/J34evvd3MhY8neiZpe5ZlcL1r8Tg//6vSXYiXZ6u2gaRv5OnBX9hXKU
E51Cls1++3XydyJFH0eR3Oc0J7ztz0H+Tuhvm7Fs1gD8HzQF6N0=
          
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
        FormBox["\"\[Degree]C\"", TraditionalForm]},
      AxesOrigin->{24., 10.},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"vend\[EAcute]gt\[EAcute]r\"", TraditionalForm],
      PlotRange->{{24, 360}, {10, 24}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Prolog->{{{
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{135, 0}, {136, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{136, 0}, {137, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{137, 0}, {138, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{138, 0}, {139, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{139, 0}, {140, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{140, 0}, {141, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{141, 0}, {142, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{142, 0}, {143, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{143, 0}, {144, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{144, 0}, {145, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{145, 0}, {146, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{146, 0}, {147, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{147, 0}, {148, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{148, 0}, {149, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{149, 0}, {150, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{150, 0}, {151, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{151, 0}, {152, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{152, 0}, {153, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{153, 0}, {154, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{154, 0}, {155, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{155, 0}, {156, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{156, 0}, {157, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{157, 0}, {158, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{158, 0}, {159, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{159, 0}, {160, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{160, 0}, {161, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{161, 0}, {162, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{162, 0}, {163, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{163, 0}, {164, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{164, 0}, {165, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{165, 0}, {166, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{166, 0}, {167, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{167, 0}, {168, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{168, 0}, {169, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{169, 0}, {170, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{170, 0}, {171, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{171, 0}, {172, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{172, 0}, {173, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{173, 0}, {174, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{174, 0}, {175, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{175, 0}, {176, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{176, 0}, {177, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{177, 0}, {178, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{178, 0}, {179, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{179, 0}, {180, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{180, 0}, {181, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{181, 0}, {182, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{182, 0}, {183, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{183, 0}, {184, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{184, 0}, {185, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{185, 0}, {186, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{186, 0}, {187, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{187, 0}, {188, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{188, 0}, {189, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{189, 0}, {190, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{190, 0}, {191, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{191, 0}, {192, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{192, 0}, {193, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{193, 0}, {194, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{194, 0}, {195, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{195, 0}, {196, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{196, 0}, {197, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{197, 0}, {198, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{198, 0}, {199, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{199, 0}, {200, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{200, 0}, {201, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{201, 0}, {202, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{202, 0}, {203, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{203, 0}, {204, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{204, 0}, {205, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{205, 0}, {206, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{206, 0}, {207, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{207, 0}, {208, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{208, 0}, {209, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{209, 0}, {210, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{210, 0}, {211, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{211, 0}, {212, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{212, 0}, {213, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{213, 0}, {214, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{214, 0}, {215, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{215, 0}, {216, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{216, 0}, {217, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{217, 0}, {218, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{218, 0}, {219, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{219, 0}, {220, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{220, 0}, {221, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{221, 0}, {222, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{222, 0}, {223, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{223, 0}, {224, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{224, 0}, {225, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{225, 0}, {226, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{226, 0}, {227, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{227, 0}, {228, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{228, 0}, {229, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{229, 0}, {230, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{230, 0}, {231, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{231, 0}, {232, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{232, 0}, {233, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{233, 0}, {234, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{234, 0}, {235, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{235, 0}, {236, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{236, 0}, {237, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{237, 0}, {238, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{238, 0}, {239, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{239, 0}, {240, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{240, 0}, {241, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{241, 0}, {242, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{242, 0}, {243, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{243, 0}, {244, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{244, 0}, {245, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{245, 0}, {246, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{246, 0}, {247, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{247, 0}, {248, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{248, 0}, {249, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{249, 0}, {250, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{250, 0}, {251, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{251, 0}, {252, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{252, 0}, {253, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{253, 0}, {254, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{254, 0}, {255, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{255, 0}, {256, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{256, 0}, {257, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{257, 0}, {258, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{258, 0}, {259, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{259, 0}, {260, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{260, 0}, {261, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{261, 0}, {262, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{262, 0}, {263, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{263, 0}, {264, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{264, 0}, {265, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{265, 0}, {266, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{266, 0}, {267, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{267, 0}, {268, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{268, 0}, {269, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{269, 0}, {270, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{270, 0}, {271, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{271, 0}, {272, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{272, 0}, {273, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{273, 0}, {274, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{274, 0}, {275, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{275, 0}, {276, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{276, 0}, {277, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{277, 0}, {278, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{278, 0}, {279, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{279, 0}, {280, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{280, 0}, {281, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{281, 0}, {282, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{282, 0}, {283, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{283, 0}, {284, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{284, 0}, {285, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{285, 0}, {286, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{286, 0}, {287, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{287, 0}, {288, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{288, 0}, {289, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{289, 0}, {290, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{290, 0}, {291, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{291, 0}, {292, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{292, 0}, {293, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{293, 0}, {294, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{294, 0}, {295, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{295, 0}, {296, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{296, 0}, {297, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{297, 0}, {298, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{298, 0}, {299, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{299, 0}, {300, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{300, 0}, {301, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{301, 0}, {302, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{302, 0}, {303, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{303, 0}, {304, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{304, 0}, {305, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{305, 0}, {306, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{306, 0}, {307, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{307, 0}, {308, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{308, 0}, {309, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{309, 0}, {310, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{310, 0}, {311, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{311, 0}, {312, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{312, 0}, {313, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{313, 0}, {314, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{314, 0}, {315, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{315, 0}, {316, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{316, 0}, {317, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{317, 0}, {318, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{318, 0}, {319, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{319, 0}, {320, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{320, 0}, {321, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{321, 0}, {322, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{322, 0}, {323, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{323, 0}, {324, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{324, 0}, {325, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{325, 0}, {326, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{326, 0}, {327, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{327, 0}, {328, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{328, 0}, {329, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{329, 0}, {330, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{330, 0}, {331, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{331, 0}, {332, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{332, 0}, {333, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{333, 0}, {334, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{334, 0}, {335, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{335, 0}, {336, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{336, 0}, {337, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{337, 0}, {338, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{338, 0}, {339, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{339, 0}, {340, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{340, 0}, {341, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{341, 0}, {342, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{342, 0}, {343, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{343, 0}, {344, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{344, 0}, {345, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{345, 0}, {346, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{346, 0}, {347, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{347, 0}, {348, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{348, 0}, {349, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{349, 0}, {350, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{350, 0}, {351, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{351, 0}, {352, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{352, 0}, {353, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{353, 0}, {354, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{354, 0}, {355, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{355, 0}, {356, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{356, 0}, {357, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{357, 0}, {358, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{358, 0}, {359, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{359, 0}, {360, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{360, 0}, {361, 100}]}}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0.5], PointSize[0.0055000000000000005`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd19ltFEEQxvGCCDaE4Z2HFYfETXPfsDb33RibGzyczxXChtAhbAgVgkPo
EDYEhFyf0Pz98umncrlVNbOt9aGt3c2dg2a2ccDsX+7/nCj7Oc88CZ+CT8Nn
4LPwOfg8XDKP7KfLRzMvZB7Lunw88yLqsF1CHbbLqMN2BXXYrqIO2zXUYbue
mftw2G6gDttN1GG7hTpst1GH7Q7qsN1FHbZ7qMO2mLrADgdsG+iHHQ7YNtEP
Oxyw3Uc/7HDA9gD9sMMB20P0ww4HbI/QDzscsD1GP+xwwPYE/bDDAdtT9MMu
5/0Ssu6XZ5n5eSxy3i8uH85+/L49Rz/scMD2YnpegR0O2F5man7Y4YDtFfph
hwO21+iHHQ7YamY+n0HO51Pk3FeVtR+4wQF32N5MPcAFrrDLOU+DA+6wbU09
wAWusMMNDrjD9jZT+5e1f1n7lzU/3OCAO2zb078/bE/rBa6wy5ofDrjDtjP1
ABe4wg43OOAO27tM7V/W/mXtX9b8cIMD7rC9n3qAC1xhlzU/HHCH7cPUA1zg
Cjvc4IA7bB8ztX9Z+5e1f1nzww0OuMP2aeoBLnCFHW5wwB22z5naP1zgCjvc
4IA7bF9wPlzgCjvc4IA7bF9xPlzgCjvc4IA7bN9wPlzgCjvc4IA7bLs4Hy5w
hR1ucMAdtnHqGTzAc7jAC7jCI+zwEm7wCg54D+5y3i9rWd8/v2fm/TKTdR/A
c7jAC7jCI+zwEm7wCg5Z88MdXsP2Y+oZPMBzuMALuMIj7HI+n6Wcz6fJ+XxW
suaH9+AOr2H7OfUMHuA5XGTND1d4hB1ewg1ewQHvwR1ew/YrM/c/k3P/g5z7
n8uaH17AFR5hh5dwg1dwyJof7vAatt9Tz+ABnsMFXsAVHmGX9f7Lev9lvf+y
5of34A6vYfsz9Qwe4Lms/7dlzQ9XeIT9v/8Cv6T2vQ==
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
B57ytgU=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
        FormBox["\"\[Degree]C\"", TraditionalForm]},
      AxesOrigin->{24., 10.},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"PK\"", TraditionalForm],
      PlotRange->{{24, 360}, {10, 24}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Prolog->{{{
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{24, 0}, {25, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{25, 0}, {26, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{26, 0}, {27, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{27, 0}, {28, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{28, 0}, {29, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{29, 0}, {30, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{30, 0}, {31, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{31, 0}, {32, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{32, 0}, {33, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{33, 0}, {34, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{34, 0}, {35, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{35, 0}, {36, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{36, 0}, {37, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{37, 0}, {38, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{38, 0}, {39, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{39, 0}, {40, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{40, 0}, {41, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{41, 0}, {42, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{42, 0}, {43, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{43, 0}, {44, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{44, 0}, {45, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{45, 0}, {46, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{46, 0}, {47, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{47, 0}, {48, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{48, 0}, {49, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{49, 0}, {50, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{50, 0}, {51, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{51, 0}, {52, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{52, 0}, {53, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{53, 0}, {54, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{54, 0}, {55, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{55, 0}, {56, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{56, 0}, {57, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{57, 0}, {58, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{58, 0}, {59, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{59, 0}, {60, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{60, 0}, {61, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{61, 0}, {62, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{62, 0}, {63, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{63, 0}, {64, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{64, 0}, {65, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{65, 0}, {66, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{66, 0}, {67, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{67, 0}, {68, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{68, 0}, {69, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{69, 0}, {70, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{70, 0}, {71, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{71, 0}, {72, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{72, 0}, {73, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{73, 0}, {74, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{74, 0}, {75, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{75, 0}, {76, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{76, 0}, {77, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{77, 0}, {78, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{78, 0}, {79, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{79, 0}, {80, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{80, 0}, {81, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{81, 0}, {82, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{82, 0}, {83, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{83, 0}, {84, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{84, 0}, {85, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{85, 0}, {86, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{86, 0}, {87, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{87, 0}, {88, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{88, 0}, {89, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{89, 0}, {90, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{90, 0}, {91, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{91, 0}, {92, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{92, 0}, {93, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{93, 0}, {94, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{94, 0}, {95, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{95, 0}, {96, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{96, 0}, {97, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{97, 0}, {98, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{98, 0}, {99, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{99, 0}, {100, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{100, 0}, {101, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{101, 0}, {102, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{102, 0}, {103, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{103, 0}, {104, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{104, 0}, {105, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{105, 0}, {106, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{106, 0}, {107, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{107, 0}, {108, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{108, 0}, {109, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{109, 0}, {110, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{110, 0}, {111, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{111, 0}, {112, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{112, 0}, {113, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{113, 0}, {114, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{114, 0}, {115, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{115, 0}, {116, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{116, 0}, {117, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{117, 0}, {118, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{118, 0}, {119, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{119, 0}, {120, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{120, 0}, {121, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{121, 0}, {122, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{122, 0}, {123, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{123, 0}, {124, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{124, 0}, {125, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{125, 0}, {126, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{126, 0}, {127, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{127, 0}, {128, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{128, 0}, {129, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{129, 0}, {130, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{130, 0}, {131, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{131, 0}, {132, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{132, 0}, {133, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{133, 0}, {134, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{134, 0}, {135, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{135, 0}, {136, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{136, 0}, {137, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{137, 0}, {138, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{138, 0}, {139, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{139, 0}, {140, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{140, 0}, {141, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{141, 0}, {142, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{142, 0}, {143, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{143, 0}, {144, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{144, 0}, {145, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{145, 0}, {146, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{146, 0}, {147, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{147, 0}, {148, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{148, 0}, {149, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{149, 0}, {150, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{150, 0}, {151, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{151, 0}, {152, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{152, 0}, {153, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{153, 0}, {154, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{154, 0}, {155, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{155, 0}, {156, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{156, 0}, {157, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{157, 0}, {158, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{158, 0}, {159, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{159, 0}, {160, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{160, 0}, {161, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{161, 0}, {162, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{162, 0}, {163, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{163, 0}, {164, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{164, 0}, {165, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{165, 0}, {166, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{166, 0}, {167, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{167, 0}, {168, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{168, 0}, {169, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{169, 0}, {170, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{170, 0}, {171, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{171, 0}, {172, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{172, 0}, {173, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{173, 0}, {174, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{174, 0}, {175, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{175, 0}, {176, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{176, 0}, {177, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{177, 0}, {178, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{178, 0}, {179, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{179, 0}, {180, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{180, 0}, {181, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{181, 0}, {182, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{182, 0}, {183, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{183, 0}, {184, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{184, 0}, {185, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{185, 0}, {186, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{186, 0}, {187, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{187, 0}, {188, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{188, 0}, {189, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{189, 0}, {190, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{190, 0}, {191, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{191, 0}, {192, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{192, 0}, {193, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{193, 0}, {194, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{194, 0}, {195, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{195, 0}, {196, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{196, 0}, {197, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{197, 0}, {198, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{198, 0}, {199, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{199, 0}, {200, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{200, 0}, {201, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{201, 0}, {202, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{202, 0}, {203, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{203, 0}, {204, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{204, 0}, {205, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{205, 0}, {206, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{206, 0}, {207, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{207, 0}, {208, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{208, 0}, {209, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{209, 0}, {210, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{210, 0}, {211, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{211, 0}, {212, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{212, 0}, {213, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{213, 0}, {214, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{214, 0}, {215, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{215, 0}, {216, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{216, 0}, {217, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{217, 0}, {218, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{218, 0}, {219, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{219, 0}, {220, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{220, 0}, {221, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{221, 0}, {222, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{222, 0}, {223, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{223, 0}, {224, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{224, 0}, {225, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{225, 0}, {226, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{226, 0}, {227, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{227, 0}, {228, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{228, 0}, {229, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{229, 0}, {230, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{230, 0}, {231, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{231, 0}, {232, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{232, 0}, {233, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{233, 0}, {234, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{234, 0}, {235, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{235, 0}, {236, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{236, 0}, {237, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{237, 0}, {238, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{238, 0}, {239, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{239, 0}, {240, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{240, 0}, {241, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{241, 0}, {242, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{242, 0}, {243, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{243, 0}, {244, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{244, 0}, {245, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{245, 0}, {246, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{246, 0}, {247, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{247, 0}, {248, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{248, 0}, {249, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{249, 0}, {250, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{250, 0}, {251, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{251, 0}, {252, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{252, 0}, {253, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{253, 0}, {254, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{254, 0}, {255, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{255, 0}, {256, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{256, 0}, {257, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{257, 0}, {258, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{258, 0}, {259, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{259, 0}, {260, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{260, 0}, {261, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{261, 0}, {262, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{262, 0}, {263, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{263, 0}, {264, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{264, 0}, {265, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{265, 0}, {266, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{266, 0}, {267, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{267, 0}, {268, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{268, 0}, {269, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{269, 0}, {270, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{270, 0}, {271, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{271, 0}, {272, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{272, 0}, {273, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{273, 0}, {274, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{274, 0}, {275, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{275, 0}, {276, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{276, 0}, {277, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{277, 0}, {278, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{278, 0}, {279, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{279, 0}, {280, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{280, 0}, {281, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{281, 0}, {282, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{282, 0}, {283, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{283, 0}, {284, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{284, 0}, {285, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{285, 0}, {286, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{286, 0}, {287, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{287, 0}, {288, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{288, 0}, {289, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{289, 0}, {290, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{290, 0}, {291, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{291, 0}, {292, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{292, 0}, {293, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{293, 0}, {294, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{294, 0}, {295, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{295, 0}, {296, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{296, 0}, {297, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{297, 0}, {298, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{298, 0}, {299, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{299, 0}, {300, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{300, 0}, {301, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{301, 0}, {302, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{302, 0}, {303, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{303, 0}, {304, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{304, 0}, {305, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{305, 0}, {306, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{306, 0}, {307, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{307, 0}, {308, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{308, 0}, {309, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{309, 0}, {310, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{310, 0}, {311, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{311, 0}, {312, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{312, 0}, {313, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{313, 0}, {314, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{314, 0}, {315, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{315, 0}, {316, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{316, 0}, {317, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{317, 0}, {318, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{318, 0}, {319, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{319, 0}, {320, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{320, 0}, {321, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{321, 0}, {322, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{322, 0}, {323, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{323, 0}, {324, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{324, 0}, {325, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{325, 0}, {326, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{326, 0}, {327, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{327, 0}, {328, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{328, 0}, {329, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{329, 0}, {330, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{330, 0}, {331, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{331, 0}, {332, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{332, 0}, {333, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{333, 0}, {334, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{334, 0}, {335, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{335, 0}, {336, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{336, 0}, {337, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{337, 0}, {338, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{338, 0}, {339, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{339, 0}, {340, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{340, 0}, {341, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{341, 0}, {342, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{342, 0}, {343, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{343, 0}, {344, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{344, 0}, {345, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{345, 0}, {346, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{346, 0}, {347, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{347, 0}, {348, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{348, 0}, {349, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{349, 0}, {350, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{350, 0}, {351, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{351, 0}, {352, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{352, 0}, {353, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{353, 0}, {354, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{354, 0}, {355, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{355, 0}, {356, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{356, 0}, {357, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{357, 0}, {358, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{358, 0}, {359, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{359, 0}, {360, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{360, 0}, {361, 100}]}}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {GrayLevel[0.5], PointSize[0.0055000000000000005`], AbsoluteThickness[
         1.6], LineBox[CompressedData["
1:eJxd1ueNGzEQhuGxK9gS6A4WTnA2nbOtO+dMn3O8dfw9JagElqASpgSVwBJU
gmEcPxj76s+HB3MDYoarPR3Y2d1+u9/MtvaZ/cu9z7G8l2PP4/AJ+CR8Cj4N
n4HPwrnnwb10+VDPcz0P97p8pOd51GG7gDpsF1GH7RLqsF2ez+OwXUEdtquo
w3YNddiuow7bDdRhu4k6bLdQh+026rDdQR22xdwZdjhg20I/7HDAto1+2OGA
7S76YYcDtnvohx0O2O6jH3Y4YHuAftjhgO0h+mGHA7ZH6IcdDtgeox92ub9f
Qtb75UnP/n3Ocn+/OOoB21P0ww4HbM/QL+t8OGB73lPzww4HbC/QDzscsL1E
P+xwwFZ69vtJcr+fLPf9FFn7gSsccIPt1dwJznCBXe7zVDjgBtvO3AnOcIEd
rnDADbbXPbV/WfuXtX9Z88MVDrjB9mbuBGe4wC5rfjjgBtvbuROc4QI7XOGA
G2zvemr/svYva/+y5ocrHHCD7f3cCc5wkY/282XNDwfcYPswd4IzXGCHKxxw
g+1jT+1f1v5l7V/W/uEKB9xg+zR3gjNcZP1/kTU/HHCD7fPcCc5wgR2ucMAN
ti84H85wgR2ucMANtq84H85wgR2ucMANtm84H85wgR2ucMANtl2cD2e4wA5X
OOAG2zT3ACd4hDO8gAs8wQ4v4Qqv4IDXcJP7+2Uj6/fn9579+zzIeh/AI5zh
BVzgCXZ4CVd4BYes+eEGb2D7MfcAJ3iEM7yACzzBLvf7Wcr9fqrc72cla354
DTd4A9vPuQc4wSOcZc0PF3iCHV7CFV7BAa/hBm9g+9Wz73+Q+/6T3Pc/ypof
XsAFnmCHl3CFV3DImh9u8Aa233MPcIJHOMMLuMAT7LKef1nPv6znX9b88Bp/
3+ANbH/mHuAEj7LuX9b8cIEn2P/7L0hT9pw=
          "]]}, 
        {RGBColor[0, 0, 1], PointSize[0.0055000000000000005`], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd10uSE0cQgOHEJ9CWXfsGCssm/MTlGcAYgy3G2BgQ45qXmOE1kuaxzghf
QFt7VUdQBBfIA+AIHaFWrHUEh1AWRP696fgmOzursqtLPZ/un+4cfSIi96+I
rM+b48v0/qRfbM7yFfw1/A38Lfxd+u/t+vjcfR3+Hk7RCssP8f4KyxbiW2m8
Pt61+Ha0bqfB+njT4jeiFZabiMNyC/FbGN+PGB8stxG/jfn/hP7AcgdxWH5G
HJa7iMNyD3FYfkEcll+9/wOPwzKMTrDCBst95MMKGyw7yIcVtp3N8x60/N+i
E6ywwfIA+bA+8OtaPiy/RydYYYPlD+TDChssD5EPK2yw/Il8WGGD5RHyYYUN
lsf+/rb8x5vnPW7rucXdBsuT6AQrbO5Byx9FpxHyR36d7w82wv7z1MfrTk+R
Dxssuxj/rv+95cMGy1/RCVa3tv7DkqO7jH7AOad//1kfbb+EC2xw9fv93fq3
5++337+D057nt/qwwgU2uO5h/9mP7uAEZ1jhAhtcYTlA/QPsRweY/8Fmf7/b
+g8X2OCK+8lhdHcYr09wPvS8a14fLrDBFZYj1IfTEdYfrHCBDa6wjKO7Mdbf
OK7fDCtcYIMrLM+iOzjB+RmeP1xggyssx9HdMfoPZ1jhAtux12n9h+UkuoPT
SdxfM6wnm3pX2/qDDa7Il+fRHZzgDCtcYHse11OF5QXWH5zgDCtcYHvh17X9
B5aX0R2c4AwrXGCDKyyvUB9OcIYVLrDBFZbXqA8nOMMKF9jgCsupr8/PvD6c
4AwrXE79+99tcIVlEt2DO7gPJ3gIZ3gCKzyfYD7wAjZ4CVfcfzVB/6fxfelN
8T0C9+E0jfvzEM5Tr+eetHrt93Pq+697Dhd4ARu8RP0Kr2CZxfn04G4W+9OH
EzyEMzyZxf4r4nPUL7M43sUM84eXcIVX7rdt/mfRvTMfl1/fwX04IX8I5zNf
j+35e/6H73N4fobvSXgBG7yEK7yC5Ty6d47vAbgPJ3gIZ3gC67mPwz0/j/9f
FXgBG/KXcG31vL8rWC6ie3AH9+EED+EMT2C98PXt/Z8jXi7ifBawwUu4XsTv
kRXichndgzu4fxn7nxAfwvkS84f1o/8HsH//6w==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
        FormBox["\"\[Degree]C\"", TraditionalForm]},
      AxesOrigin->{24., 10.},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->500,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"M\[EAcute]rce\"", TraditionalForm],
      PlotRange->{{24, 360}, {10, 24}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Prolog->{{{
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{24, 0}, {25, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{25, 0}, {26, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{26, 0}, {27, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{27, 0}, {28, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{28, 0}, {29, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{29, 0}, {30, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{30, 0}, {31, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{31, 0}, {32, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{32, 0}, {33, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{33, 0}, {34, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{34, 0}, {35, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{35, 0}, {36, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{36, 0}, {37, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{37, 0}, {38, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{38, 0}, {39, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{39, 0}, {40, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{40, 0}, {41, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{41, 0}, {42, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{42, 0}, {43, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{43, 0}, {44, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{44, 0}, {45, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{45, 0}, {46, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{46, 0}, {47, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{47, 0}, {48, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{48, 0}, {49, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{49, 0}, {50, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{50, 0}, {51, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{51, 0}, {52, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{52, 0}, {53, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{53, 0}, {54, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{54, 0}, {55, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{55, 0}, {56, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{56, 0}, {57, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{57, 0}, {58, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{58, 0}, {59, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{59, 0}, {60, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{60, 0}, {61, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{61, 0}, {62, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{62, 0}, {63, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{63, 0}, {64, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{64, 0}, {65, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{65, 0}, {66, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{66, 0}, {67, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{67, 0}, {68, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{68, 0}, {69, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{69, 0}, {70, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{70, 0}, {71, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{71, 0}, {72, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{72, 0}, {73, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{73, 0}, {74, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{74, 0}, {75, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{75, 0}, {76, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{76, 0}, {77, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{77, 0}, {78, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{78, 0}, {79, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{79, 0}, {80, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{80, 0}, {81, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{81, 0}, {82, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{82, 0}, {83, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{83, 0}, {84, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{84, 0}, {85, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{85, 0}, {86, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{86, 0}, {87, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{87, 0}, {88, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{88, 0}, {89, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{89, 0}, {90, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{90, 0}, {91, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{91, 0}, {92, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{92, 0}, {93, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{93, 0}, {94, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{94, 0}, {95, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{95, 0}, {96, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{96, 0}, {97, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{97, 0}, {98, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{98, 0}, {99, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{99, 0}, {100, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{100, 0}, {101, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{101, 0}, {102, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{102, 0}, {103, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{103, 0}, {104, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{104, 0}, {105, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{105, 0}, {106, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{106, 0}, {107, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{107, 0}, {108, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{108, 0}, {109, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{109, 0}, {110, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{110, 0}, {111, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{111, 0}, {112, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{112, 0}, {113, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{113, 0}, {114, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{114, 0}, {115, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{115, 0}, {116, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{116, 0}, {117, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{117, 0}, {118, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{118, 0}, {119, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{119, 0}, {120, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{120, 0}, {121, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{121, 0}, {122, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{122, 0}, {123, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{123, 0}, {124, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{124, 0}, {125, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{125, 0}, {126, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{126, 0}, {127, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{127, 0}, {128, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{128, 0}, {129, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{129, 0}, {130, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{130, 0}, {131, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{131, 0}, {132, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{132, 0}, {133, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{133, 0}, {134, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{134, 0}, {135, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{135, 0}, {136, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{136, 0}, {137, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{137, 0}, {138, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{138, 0}, {139, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{139, 0}, {140, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{140, 0}, {141, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{141, 0}, {142, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{142, 0}, {143, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{143, 0}, {144, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{144, 0}, {145, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{145, 0}, {146, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{146, 0}, {147, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{147, 0}, {148, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{148, 0}, {149, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{149, 0}, {150, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{150, 0}, {151, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{151, 0}, {152, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{152, 0}, {153, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{153, 0}, {154, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{154, 0}, {155, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{155, 0}, {156, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{156, 0}, {157, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{157, 0}, {158, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{158, 0}, {159, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{159, 0}, {160, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{160, 0}, {161, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{161, 0}, {162, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{162, 0}, {163, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{163, 0}, {164, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{164, 0}, {165, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{165, 0}, {166, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{166, 0}, {167, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{167, 0}, {168, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{168, 0}, {169, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{169, 0}, {170, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{170, 0}, {171, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{171, 0}, {172, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{172, 0}, {173, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{173, 0}, {174, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{174, 0}, {175, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{175, 0}, {176, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{176, 0}, {177, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{177, 0}, {178, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{178, 0}, {179, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{179, 0}, {180, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{180, 0}, {181, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{181, 0}, {182, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{182, 0}, {183, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{183, 0}, {184, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{184, 0}, {185, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{185, 0}, {186, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{186, 0}, {187, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{187, 0}, {188, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{188, 0}, {189, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{189, 0}, {190, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{190, 0}, {191, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{191, 0}, {192, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{192, 0}, {193, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{193, 0}, {194, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{194, 0}, {195, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{195, 0}, {196, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{196, 0}, {197, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{197, 0}, {198, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{198, 0}, {199, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{199, 0}, {200, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{200, 0}, {201, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{201, 0}, {202, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{202, 0}, {203, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{203, 0}, {204, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{204, 0}, {205, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{205, 0}, {206, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{206, 0}, {207, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{207, 0}, {208, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{208, 0}, {209, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{209, 0}, {210, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{210, 0}, {211, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{211, 0}, {212, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{212, 0}, {213, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{213, 0}, {214, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{214, 0}, {215, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{215, 0}, {216, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{216, 0}, {217, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{217, 0}, {218, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{218, 0}, {219, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{219, 0}, {220, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{220, 0}, {221, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{221, 0}, {222, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{222, 0}, {223, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{223, 0}, {224, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{224, 0}, {225, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{225, 0}, {226, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{226, 0}, {227, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{227, 0}, {228, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{228, 0}, {229, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{229, 0}, {230, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{230, 0}, {231, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{231, 0}, {232, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{232, 0}, {233, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{233, 0}, {234, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{234, 0}, {235, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{235, 0}, {236, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{236, 0}, {237, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{237, 0}, {238, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{238, 0}, {239, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{239, 0}, {240, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{240, 0}, {241, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{241, 0}, {242, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{242, 0}, {243, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{243, 0}, {244, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{244, 0}, {245, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{245, 0}, {246, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{246, 0}, {247, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{247, 0}, {248, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{248, 0}, {249, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{249, 0}, {250, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{250, 0}, {251, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{251, 0}, {252, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{252, 0}, {253, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{253, 0}, {254, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{254, 0}, {255, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{255, 0}, {256, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{256, 0}, {257, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{257, 0}, {258, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{258, 0}, {259, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{259, 0}, {260, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{260, 0}, {261, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{261, 0}, {262, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{262, 0}, {263, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{263, 0}, {264, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{264, 0}, {265, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{265, 0}, {266, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{266, 0}, {267, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{267, 0}, {268, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{268, 0}, {269, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{269, 0}, {270, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{270, 0}, {271, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{271, 0}, {272, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{272, 0}, {273, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{273, 0}, {274, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{274, 0}, {275, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{275, 0}, {276, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{276, 0}, {277, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{277, 0}, {278, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{278, 0}, {279, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{279, 0}, {280, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{280, 0}, {281, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{281, 0}, {282, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{282, 0}, {283, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{283, 0}, {284, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{284, 0}, {285, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{285, 0}, {286, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{286, 0}, {287, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{287, 0}, {288, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{288, 0}, {289, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{289, 0}, {290, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{290, 0}, {291, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{291, 0}, {292, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{292, 0}, {293, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{293, 0}, {294, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{294, 0}, {295, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{295, 0}, {296, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{296, 0}, {297, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{297, 0}, {298, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{298, 0}, {299, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{299, 0}, {300, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{300, 0}, {301, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{301, 0}, {302, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{302, 0}, {303, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{303, 0}, {304, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{304, 0}, {305, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{305, 0}, {306, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{306, 0}, {307, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{307, 0}, {308, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{308, 0}, {309, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{309, 0}, {310, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{310, 0}, {311, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{311, 0}, {312, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{312, 0}, {313, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{313, 0}, {314, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{314, 0}, {315, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{315, 0}, {316, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{316, 0}, {317, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{317, 0}, {318, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{318, 0}, {319, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{319, 0}, {320, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{320, 0}, {321, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{321, 0}, {322, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{322, 0}, {323, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{323, 0}, {324, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{324, 0}, {325, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{325, 0}, {326, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{326, 0}, {327, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{327, 0}, {328, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{328, 0}, {329, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{329, 0}, {330, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{330, 0}, {331, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{331, 0}, {332, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{332, 0}, {333, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{333, 0}, {334, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{334, 0}, {335, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{335, 0}, {336, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{336, 0}, {337, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{337, 0}, {338, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{338, 0}, {339, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{339, 0}, {340, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{340, 0}, {341, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{341, 0}, {342, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{342, 0}, {343, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{343, 0}, {344, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{344, 0}, {345, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{345, 0}, {346, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{346, 0}, {347, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{347, 0}, {348, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{348, 0}, {349, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{349, 0}, {350, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{350, 0}, {351, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{351, 0}, {352, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{352, 0}, {353, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{353, 0}, {354, 100}]}, {
          RGBColor[1, 0, 0, 0.05], 
          RectangleBox[{354, 0}, {355, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{355, 0}, {356, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{356, 0}, {357, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{357, 0}, {358, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{358, 0}, {359, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{359, 0}, {360, 100}]}, {
          RGBColor[0, 0, 1, 0], 
          RectangleBox[{360, 0}, {361, 100}]}}},
      Ticks->{Automatic, Automatic}], "\<\"\"\>"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.909770184051896*^9, 3.9097702639669027`*^9, {3.909770323902527*^9, 
   3.9097703624109993`*^9}, {3.909770473824193*^9, 3.909770573404219*^9}, 
   3.909770638498062*^9, 3.9097707283612347`*^9},
 CellLabel->"Out[80]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<roomPlots.png\>\""}], 
   ",", "roomPlots"}], "]"}]], "Input",
 CellChangeTimes->{{3.909598858043396*^9, 3.9095988880034065`*^9}, {
  3.9096292180379934`*^9, 3.9096292240229692`*^9}, {3.9096292733352995`*^9, 
  3.909629274786857*^9}, {3.909770642042118*^9, 3.9097706470517745`*^9}},
 CellLabel->"In[76]:="],

Cell[BoxData["\<\"C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\kazankontroll\\\
\\roomPlots.png\"\>"], "Output",
 CellChangeTimes->{
  3.9095988901873684`*^9, {3.909629221305015*^9, 3.9096292257723775`*^9}, 
   3.909629276829323*^9, 3.9096299834060397`*^9, 3.90963001548394*^9, {
   3.9097706446284943`*^9, 3.9097706485264716`*^9}},
 CellLabel->"Out[76]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gasAndExt", "=", 
  RowBox[{"Row", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"externalTemp", "[", 
             RowBox[{"[", 
              RowBox[{"PrecedingPos", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Transpose", "[", "externalTemp", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
             "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Blue", "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<k\[UDoubleDot]ls\[ODoubleAcute] h\[ODoubleAcute]m\[EAcute]rs\
\[EAcute]klet\>\""}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[UDoubleDot]zem\[OAcute]ra\>\"", ",", "\"\<\[Degree]C\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"95", ",", "300"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"albatrosState", "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "albatrosState", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"t", "+", "tStep"}], ",", "100"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], "}"}]}], 
          "]"}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
      RowBox[{"gas", ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<g\[AAcute]z fogy\[AAcute]s\>\""}],
        ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[UDoubleDot]zem\[OAcute]ra\>\"", ",", "\"\<m^3\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"95", ",", "300"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Prolog", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"albatrosState", "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", "albatrosState", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "==", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "]"}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"t", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"t", "+", "tStep"}], ",", "100"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], "}"}]}], 
          "]"}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.909596929382676*^9, 3.9095969393479004`*^9}, {
   3.9095970255042095`*^9, 3.9095970408345003`*^9}, {3.909597118657482*^9, 
   3.909597282502615*^9}, {3.9095985366180964`*^9, 3.9095985390479965`*^9}, 
   3.9095988923232126`*^9, {3.9096300922538013`*^9, 3.9096300957823553`*^9}},
 CellLabel->"In[247]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxdlrluFEEQhlvmPrUc4j7aNjeJJR6AfgSLBNv46N2dPWbPmX2CeQSnEM0j
+BEmRQLklGwkJCICB4iEBOz5KqgayVp9rvrr6p6eXu7M3/WWnHPf/v8d/548
1fvQP3muhuYfG/DFhsMG/z/d/BZiX2q42ghvTp5T+G1q/yB8Hv1m+PTx+LmA
3rDbgq+gF76Gfov8N9GL/Tb6D9RzH73wY/TCHr1ht639w7a2F8ZeGXY7Rm+4
2Alfvxw/j9Dv0A/sdulH9Lv4S/5d4q2gF/9V9HvYn6DfQw8Xe+R7il78YReJ
B/uI/hnxIv4vGo7CL4kv/q8aLiXea/KJHa4j9cCujZ14Xph8oY3/c/ILU19h
uGxTH/5VW/dTt3W/rqPn5YWZb+gQD44ddHDRIT9cGv9K4rF+dcesXxe7zL+r
5x26+DOf2DXzN1x29fwqw3WXemGXEJ95+UTPLyR6vjFBJ/NP9H4qE70fq0T3
Wyd6Pq6n97fv4b9M/p5+H2LPvJ89/b6Vhqueft9qsT8kf598sO/rfKFv1r9v
3i/Ry/4Tlvn39frUht2AeDL/gd4PYUD95IsDvT+Lga6vFH/mWQ30POsBeWE3
1P16w2GIXuY/JL7Mf6jXozRcGa6H+jx0qV4vn2r/kOr6Y6r3U5Ga/lPiSv+p
7qdOdf1upPP5kd4vQex8X+KIeLfIP6KeG+QX/XXyi3+L/GKH3Vh/j73hMNbf
xzhGd5n8Y+q7RH7jXxn/2vi7ibb7ia43CPP9jRP0d8kv9gfkn5jvneHasJtq
9lOdLwgzzzjV8yumut9yau4bU+o9R37RnyX/jF/uL17YkX+G/u/bJv8M/Z+G
ixn1/Wq4FP8fDVcz6vnecC38uWE31+znxP/ZcJgT/zf5hamvEP0Z+hc761nN
9X6q52b/ZXq9W5m2e2NfMxwy+uW+tp7p/R8z8sCZsKxfpuvbz8x+Fn/6OTBc
GT7M9PrXmb7fHok/91OXa/9WrvvzYme/r+Xmvpbr82c91/etmOvzPMv1/aPI
qQPez/X5Xgqv0H+uv5dVrs/HQ7HLeZ/r8+9I8sn7t6Be3t+W8D36X5j+F8S7
Q/8LfR6sL4iLPko8/DNhOT9Fz31+3+jLhf4+Hyx0f5X4r4Z/xT1IDg==
         
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
       FormBox["\"\[Degree]C\"", TraditionalForm]}, AxesOrigin -> {95., 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"k\[UDoubleDot]ls\[ODoubleAcute] h\[ODoubleAcute]m\[EAcute]rs\
\[EAcute]klet\"", TraditionalForm], PlotRange -> {{95, 300}, {0, 13.9}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Prolog -> {{{
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{95, 0}, {96, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{96, 0}, {97, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{97, 0}, {98, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{98, 0}, {99, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{99, 0}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{100, 0}, {101, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{101, 0}, {102, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{102, 0}, {103, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{103, 0}, {104, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{104, 0}, {105, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{105, 0}, {106, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{106, 0}, {107, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{107, 0}, {108, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{108, 0}, {109, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{109, 0}, {110, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{110, 0}, {111, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{111, 0}, {112, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{112, 0}, {113, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{113, 0}, {114, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{114, 0}, {115, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{115, 0}, {116, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{116, 0}, {117, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{117, 0}, {118, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{118, 0}, {119, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{119, 0}, {120, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{120, 0}, {121, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{121, 0}, {122, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{122, 0}, {123, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{123, 0}, {124, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{124, 0}, {125, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{125, 0}, {126, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{126, 0}, {127, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{127, 0}, {128, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{128, 0}, {129, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{129, 0}, {130, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{130, 0}, {131, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{131, 0}, {132, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{132, 0}, {133, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{133, 0}, {134, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{134, 0}, {135, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{135, 0}, {136, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{136, 0}, {137, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{137, 0}, {138, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{138, 0}, {139, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{139, 0}, {140, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{140, 0}, {141, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{141, 0}, {142, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{142, 0}, {143, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{143, 0}, {144, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{144, 0}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{145, 0}, {146, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{146, 0}, {147, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{147, 0}, {148, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{148, 0}, {149, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{149, 0}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{150, 0}, {151, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{151, 0}, {152, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{152, 0}, {153, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{153, 0}, {154, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{154, 0}, {155, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{155, 0}, {156, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{156, 0}, {157, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{157, 0}, {158, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{158, 0}, {159, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{159, 0}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{160, 0}, {161, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{161, 0}, {162, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{162, 0}, {163, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{163, 0}, {164, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{164, 0}, {165, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{165, 0}, {166, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{166, 0}, {167, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{167, 0}, {168, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{168, 0}, {169, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{169, 0}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{170, 0}, {171, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{171, 0}, {172, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{172, 0}, {173, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{173, 0}, {174, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{174, 0}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{175, 0}, {176, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{176, 0}, {177, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{177, 0}, {178, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{178, 0}, {179, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{179, 0}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{180, 0}, {181, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{181, 0}, {182, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{182, 0}, {183, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{183, 0}, {184, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{184, 0}, {185, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{185, 0}, {186, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{186, 0}, {187, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{187, 0}, {188, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{188, 0}, {189, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{189, 0}, {190, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{190, 0}, {191, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{191, 0}, {192, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{192, 0}, {193, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{193, 0}, {194, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{194, 0}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{195, 0}, {196, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{196, 0}, {197, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{197, 0}, {198, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{198, 0}, {199, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{199, 0}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{200, 0}, {201, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{201, 0}, {202, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{202, 0}, {203, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{203, 0}, {204, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{204, 0}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{205, 0}, {206, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{206, 0}, {207, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{207, 0}, {208, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{208, 0}, {209, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{209, 0}, {210, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{210, 0}, {211, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{211, 0}, {212, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{212, 0}, {213, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{213, 0}, {214, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{214, 0}, {215, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{215, 0}, {216, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{216, 0}, {217, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{217, 0}, {218, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{218, 0}, {219, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{219, 0}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{220, 0}, {221, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{221, 0}, {222, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{222, 0}, {223, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{223, 0}, {224, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{224, 0}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{225, 0}, {226, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{226, 0}, {227, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{227, 0}, {228, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{228, 0}, {229, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{229, 0}, {230, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{230, 0}, {231, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{231, 0}, {232, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{232, 0}, {233, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{233, 0}, {234, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{234, 0}, {235, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{235, 0}, {236, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{236, 0}, {237, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{237, 0}, {238, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{238, 0}, {239, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{239, 0}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{240, 0}, {241, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{241, 0}, {242, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{242, 0}, {243, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{243, 0}, {244, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{244, 0}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{245, 0}, {246, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{246, 0}, {247, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{247, 0}, {248, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{248, 0}, {249, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{249, 0}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{250, 0}, {251, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{251, 0}, {252, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{252, 0}, {253, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{253, 0}, {254, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{254, 0}, {255, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{255, 0}, {256, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{256, 0}, {257, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{257, 0}, {258, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{258, 0}, {259, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{259, 0}, {260, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{260, 0}, {261, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{261, 0}, {262, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{262, 0}, {263, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{263, 0}, {264, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{264, 0}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{265, 0}, {266, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{266, 0}, {267, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{267, 0}, {268, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{268, 0}, {269, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{269, 0}, {270, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{270, 0}, {271, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{271, 0}, {272, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{272, 0}, {273, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{273, 0}, {274, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{274, 0}, {275, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{275, 0}, {276, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{276, 0}, {277, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{277, 0}, {278, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{278, 0}, {279, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{279, 0}, {280, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{280, 0}, {281, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{281, 0}, {282, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{282, 0}, {283, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{283, 0}, {284, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{284, 0}, {285, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{285, 0}, {286, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{286, 0}, {287, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{287, 0}, {288, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{288, 0}, {289, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{289, 0}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{290, 0}, {291, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{291, 0}, {292, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{292, 0}, {293, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{293, 0}, {294, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{294, 0}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{295, 0}, {296, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{296, 0}, {297, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{297, 0}, {298, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{298, 0}, {299, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{299, 0}, {300, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{300, 0}, {301, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQYNxQcYFhTYcombOUAEig4wALnXF2tD+A0FByDi
dlD5PKD6mUAgB+VnH2CYcOirxh1VKD8DqD9j4lsbUyg/9QBDBTI/CU0+Do0f
gaY+CMgXWefuaAXle6DxLQ4wbHB/WBUCcz8QXDhz5owPjG/hwLBDrvW1IIzv
4cCg0Po6sALmnyAHhobXgTviYPwIB4YOZH6cA4PHwyqRdTB+kgPDGqB9U1xg
/nNgELi+uKDWGuZ/Bwag9Wd0HGHh48AwAxhckjB+ngPDka8aMfowfpEDwxJg
gH8PcwAAAaZhMQ==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[UDoubleDot]zem\[OAcute]ra\"", TraditionalForm], 
       FormBox["\"m^3\"", TraditionalForm]}, AxesOrigin -> {95., 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 500, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"g\[AAcute]z fogy\[AAcute]s\"", TraditionalForm], 
     PlotRange -> {{95, 300}, {0, 91.86000000000058}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Prolog -> {{{
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{95, 0}, {96, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{96, 0}, {97, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{97, 0}, {98, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{98, 0}, {99, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{99, 0}, {100, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{100, 0}, {101, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{101, 0}, {102, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{102, 0}, {103, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{103, 0}, {104, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{104, 0}, {105, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{105, 0}, {106, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{106, 0}, {107, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{107, 0}, {108, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{108, 0}, {109, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{109, 0}, {110, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{110, 0}, {111, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{111, 0}, {112, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{112, 0}, {113, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{113, 0}, {114, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{114, 0}, {115, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{115, 0}, {116, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{116, 0}, {117, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{117, 0}, {118, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{118, 0}, {119, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{119, 0}, {120, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{120, 0}, {121, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{121, 0}, {122, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{122, 0}, {123, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{123, 0}, {124, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{124, 0}, {125, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{125, 0}, {126, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{126, 0}, {127, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{127, 0}, {128, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{128, 0}, {129, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{129, 0}, {130, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{130, 0}, {131, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{131, 0}, {132, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{132, 0}, {133, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{133, 0}, {134, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{134, 0}, {135, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{135, 0}, {136, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{136, 0}, {137, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{137, 0}, {138, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{138, 0}, {139, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{139, 0}, {140, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{140, 0}, {141, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{141, 0}, {142, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{142, 0}, {143, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{143, 0}, {144, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{144, 0}, {145, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{145, 0}, {146, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{146, 0}, {147, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{147, 0}, {148, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{148, 0}, {149, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{149, 0}, {150, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{150, 0}, {151, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{151, 0}, {152, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{152, 0}, {153, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{153, 0}, {154, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{154, 0}, {155, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{155, 0}, {156, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{156, 0}, {157, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{157, 0}, {158, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{158, 0}, {159, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{159, 0}, {160, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{160, 0}, {161, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{161, 0}, {162, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{162, 0}, {163, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{163, 0}, {164, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{164, 0}, {165, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{165, 0}, {166, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{166, 0}, {167, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{167, 0}, {168, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{168, 0}, {169, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{169, 0}, {170, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{170, 0}, {171, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{171, 0}, {172, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{172, 0}, {173, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{173, 0}, {174, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{174, 0}, {175, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{175, 0}, {176, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{176, 0}, {177, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{177, 0}, {178, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{178, 0}, {179, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{179, 0}, {180, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{180, 0}, {181, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{181, 0}, {182, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{182, 0}, {183, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{183, 0}, {184, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{184, 0}, {185, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{185, 0}, {186, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{186, 0}, {187, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{187, 0}, {188, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{188, 0}, {189, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{189, 0}, {190, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{190, 0}, {191, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{191, 0}, {192, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{192, 0}, {193, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{193, 0}, {194, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{194, 0}, {195, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{195, 0}, {196, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{196, 0}, {197, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{197, 0}, {198, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{198, 0}, {199, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{199, 0}, {200, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{200, 0}, {201, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{201, 0}, {202, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{202, 0}, {203, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{203, 0}, {204, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{204, 0}, {205, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{205, 0}, {206, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{206, 0}, {207, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{207, 0}, {208, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{208, 0}, {209, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{209, 0}, {210, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{210, 0}, {211, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{211, 0}, {212, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{212, 0}, {213, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{213, 0}, {214, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{214, 0}, {215, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{215, 0}, {216, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{216, 0}, {217, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{217, 0}, {218, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{218, 0}, {219, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{219, 0}, {220, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{220, 0}, {221, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{221, 0}, {222, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{222, 0}, {223, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{223, 0}, {224, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{224, 0}, {225, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{225, 0}, {226, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{226, 0}, {227, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{227, 0}, {228, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{228, 0}, {229, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{229, 0}, {230, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{230, 0}, {231, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{231, 0}, {232, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{232, 0}, {233, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{233, 0}, {234, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{234, 0}, {235, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{235, 0}, {236, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{236, 0}, {237, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{237, 0}, {238, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{238, 0}, {239, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{239, 0}, {240, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{240, 0}, {241, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{241, 0}, {242, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{242, 0}, {243, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{243, 0}, {244, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{244, 0}, {245, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{245, 0}, {246, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{246, 0}, {247, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{247, 0}, {248, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{248, 0}, {249, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{249, 0}, {250, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{250, 0}, {251, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{251, 0}, {252, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{252, 0}, {253, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{253, 0}, {254, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{254, 0}, {255, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{255, 0}, {256, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{256, 0}, {257, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{257, 0}, {258, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{258, 0}, {259, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{259, 0}, {260, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{260, 0}, {261, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{261, 0}, {262, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{262, 0}, {263, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{263, 0}, {264, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{264, 0}, {265, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{265, 0}, {266, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{266, 0}, {267, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{267, 0}, {268, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{268, 0}, {269, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{269, 0}, {270, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{270, 0}, {271, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{271, 0}, {272, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{272, 0}, {273, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{273, 0}, {274, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{274, 0}, {275, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{275, 0}, {276, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{276, 0}, {277, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{277, 0}, {278, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{278, 0}, {279, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{279, 0}, {280, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{280, 0}, {281, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{281, 0}, {282, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{282, 0}, {283, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{283, 0}, {284, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{284, 0}, {285, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{285, 0}, {286, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{286, 0}, {287, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{287, 0}, {288, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{288, 0}, {289, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{289, 0}, {290, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{290, 0}, {291, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{291, 0}, {292, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{292, 0}, {293, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{293, 0}, {294, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{294, 0}, {295, 100}]}, {
         RGBColor[0, 0, 1, 0], 
         RectangleBox[{295, 0}, {296, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{296, 0}, {297, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{297, 0}, {298, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{298, 0}, {299, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{299, 0}, {300, 100}]}, {
         RGBColor[1, 0, 0, 0], 
         RectangleBox[{300, 0}, {301, 100}]}}}, 
     Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.9095969469540977`*^9, {3.9095970354729633`*^9, 3.909597041699173*^9}, {
   3.909597120157462*^9, 3.9095971276562214`*^9}, {3.9095971796988935`*^9, 
   3.909597250534461*^9}, 3.909597283593296*^9, 3.909597471135025*^9, 
   3.9095988950994587`*^9, {3.909630093360509*^9, 3.9096300962369003`*^9}},
 CellLabel->"Out[247]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<gasAndExt.png\>\""}], 
   ",", "gasAndExt"}], "]"}]], "Input",
 CellChangeTimes->{{3.9095989021089754`*^9, 3.9095989032997475`*^9}, {
  3.9096001600091496`*^9, 3.90960016569218*^9}, {3.9096292794815855`*^9, 
  3.9096292797508097`*^9}},
 CellLabel->"In[248]:="],

Cell[BoxData["\<\"C:\\\\Users\\\\Beno\\\\Documents\\\\SZAKI\\\\kazankontroll\\\
\\gasAndExt.png\"\>"], "Output",
 CellChangeTimes->{3.909600167893947*^9, 3.9096292803679523`*^9, 
  3.909630102436311*^9},
 CellLabel->"Out[248]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"mikor", " ", "megy", " ", 
    RowBox[{"feleslegesen", "?"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"mikor", " ", "van"}], ",", " ", 
    RowBox[{"hogy", " ", "k\[EAcute]ne", " ", "menjen"}], ",", " ", 
    RowBox[{"de", " ", "nem", " ", 
     RowBox[{"megy", "?"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.909596054014786*^9, 3.909596076227824*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roomAboveSetTemp", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]",
                "1", ",", "\[IndentingNewLine]", "0"}], "\[IndentingNewLine]",
               "]"}], "\[IndentingNewLine]", "&"}], ",", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"roomSetTemps", "[", 
                   RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"roomSetTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"smoothedRoomTemps", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"smoothedRoomTemps", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                    "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], ",", "0", 
                  ",", "1"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], 
               "}"}]}], "]"}]}], "]"}], ",", "NumberQ"}], "]"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"tEnd", "-", "tStart", "+", "tStep"}], ")"}], "/", 
         "tStep"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "8"}], "}"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.909597788218915*^9, 3.9095977944845977`*^9}, {
  3.9095982666285934`*^9, 3.9095982667970524`*^9}, {3.9095983005842867`*^9, 
  3.909598313200653*^9}},
 CellLabel->"In[206]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.8737864077669902`", ",", "0.9368932038834952`", ",", 
   "0.9368932038834952`", ",", "0.7718446601941747`", ",", 
   "0.9271844660194175`", ",", "0.9902912621359223`", ",", 
   "0.6941747572815534`", ",", "0.6213592233009708`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9095978032887735`*^9, {3.909598308350745*^9, 3.9095983217149987`*^9}},
 CellLabel->"Out[206]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roomBelowSetTemp", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ">", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]",
                "1", ",", "\[IndentingNewLine]", "0"}], "\[IndentingNewLine]",
               "]"}], "\[IndentingNewLine]", "&"}], ",", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"roomSetTemps", "[", 
                   RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"roomSetTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"smoothedRoomTemps", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"smoothedRoomTemps", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                    "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], ",", "0", 
                  ",", "1"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], 
               "}"}]}], "]"}]}], "]"}], ",", "NumberQ"}], "]"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"tEnd", "-", "tStart", "+", "tStep"}], ")"}], "/", 
         "tStep"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "8"}], "}"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.909597810867565*^9, 3.9095978136568937`*^9}},
 CellLabel->"In[186]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1262135922330097`", ",", "0.06310679611650485`", ",", 
   "0.06310679611650485`", ",", "0.22330097087378642`", ",", 
   "0.06310679611650485`", ",", "0.009708737864077669`", ",", 
   "0.3058252427184466`", ",", "0.32038834951456313`"}], "}"}]], "Output",
 CellChangeTimes->{3.909597819322457*^9},
 CellLabel->"Out[186]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unnecessaryHeatingByRoom", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "<", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "&&", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "==", "1"}]}], ",", 
               "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", "0"}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "&"}], ",", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"roomSetTemps", "[", 
                   RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"roomSetTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"smoothedRoomTemps", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"smoothedRoomTemps", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                    "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], ",", "0", 
                  ",", "1"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], 
               "}"}]}], "]"}]}], "]"}], ",", "NumberQ"}], "]"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"tEnd", "-", "tStart", "+", "tStep"}], ")"}], "/", 
         "tStep"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "8"}], "}"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.9095973209888544`*^9, 3.9095974312497787`*^9}, {
  3.909597483009738*^9, 3.9095975368692055`*^9}, {3.909597589628965*^9, 
  3.909597722768716*^9}, {3.909598325456311*^9, 3.909598326898876*^9}},
 CellLabel->"In[207]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.529126213592233`", ",", "0.558252427184466`", ",", "0.7087378640776699`",
    ",", "0.4320388349514563`", ",", "0.6407766990291263`", ",", 
   "0.6601941747572816`", ",", "0.3786407766990291`", ",", 
   "0.46116504854368934`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9095976140752535`*^9, {3.9095976604528413`*^9, 3.909597728244071*^9}, 
   3.9095983328359046`*^9},
 CellLabel->"Out[207]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"statusMatchesSettingByRoom", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ">", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "-", "1"}]}], "&&", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "==", "1"}]}], "||", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "<", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", "1"}]}], "&&", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "==", "0"}]}]}], ",", 
               "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", "0"}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "&"}], ",", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"roomSetTemps", "[", 
                   RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"roomSetTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"smoothedRoomTemps", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"smoothedRoomTemps", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                    "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], ",", "0", 
                  ",", "1"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], 
               "}"}]}], "]"}]}], "]"}], ",", "NumberQ"}], "]"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"tEnd", "-", "tStart", "+", "tStep"}], ")"}], "/", 
         "tStep"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "8"}], "}"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.9095978308973045`*^9, 3.909597881639493*^9}, {
  3.909598343264693*^9, 3.9095983804912972`*^9}},
 CellLabel->"In[210]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.46116504854368934`", ",", "0.4368932038834951`", ",", 
   "0.27184466019417475`", ",", "0.529126213592233`", ",", 
   "0.35436893203883496`", ",", "0.14563106796116504`", ",", 
   "0.4029126213592233`", ",", "0.32524271844660196`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9095978459951477`*^9, 3.9095978546847515`*^9}, 
   3.9095978870808353`*^9, {3.9095983491194763`*^9, 3.909598386039669*^9}},
 CellLabel->"Out[210]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"noHeatingWhenRequestedByRoom", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Map", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ">", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "-", "1"}]}], "&&", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "==", "0"}]}], ",", 
               "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", "0"}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "&"}], ",", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"t", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"roomSetTemps", "[", 
                   RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"roomSetTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"room", "==", "8"}], ",", "9", ",", "room"}], 
                    "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"smoothedRoomTemps", "[", 
                   RowBox[{"[", "room", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"smoothedRoomTemps", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                  "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"PrecedingPos", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"pumpStates", "[", 
                    RowBox[{"[", 
                    RowBox[{"roomToPump", "[", 
                    RowBox[{"[", "room", "]"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "t"}], "]"}], "]"}], 
                    "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], ",", "0", 
                  ",", "1"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "tStart", ",", "tEnd", ",", "tStep"}], 
               "}"}]}], "]"}]}], "]"}], ",", "NumberQ"}], "]"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"tEnd", "-", "tStart", "+", "tStep"}], ")"}], "/", 
         "tStep"}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"room", ",", "1", ",", "8"}], "}"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.90959775023228*^9, 3.9095977639718323`*^9}, {
  3.909598396780164*^9, 3.909598424310313*^9}},
 CellLabel->"In[211]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.11650485436893204`", ",", "0.0825242718446602`", ",", 
   "0.06310679611650485`", ",", "0.16019417475728157`", ",", 
   "0.08737864077669903`", ",", "0.0048543689320388345`", ",", 
   "0.07281553398058252`", ",", "0.038834951456310676`"}], "}"}]], "Output",
 CellChangeTimes->{3.9095977729874887`*^9, 3.9095984322924423`*^9},
 CellLabel->"Out[211]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
  "roomNames", ",", "\[IndentingNewLine]", "roomAboveSetTemp", ",", 
   "\[IndentingNewLine]", "roomBelowSetTemp", ",", "\[IndentingNewLine]", 
   "statusMatchesSettingByRoom", ",", "\[IndentingNewLine]", 
   "unnecessaryHeatingByRoom", ",", "\[IndentingNewLine]", 
   "noHeatingWhenRequestedByRoom"}], "\[IndentingNewLine]", "}"}]], "Input",
 CellChangeTimes->{{3.9095979146356397`*^9, 3.909597954414033*^9}},
 CellLabel->"In[191]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"ovi\"\>", ",", "\<\"PK\"\>", ",", "\<\"SZGK\"\>", 
     ",", "\<\"G\[OAcute]lyairoda\"\>", ",", "\<\"M\[EAcute]rce\"\>", 
     ",", "\<\"vend\[EAcute]gt\[EAcute]r\"\>", ",", "\<\"kisterem\"\>", 
     ",", "\<\"Oktopusz 1\"\>", ",", "\<\"traf\[OAcute]h\[AAcute]z\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8737864077669902`", ",", "0.9368932038834952`", ",", 
     "0.9368932038834952`", ",", "0.7718446601941747`", ",", 
     "0.9271844660194175`", ",", "0.9902912621359223`", ",", 
     "0.6941747572815534`", ",", "0.6213592233009708`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1262135922330097`", ",", "0.06310679611650485`", ",", 
     "0.06310679611650485`", ",", "0.22330097087378642`", ",", 
     "0.06310679611650485`", ",", "0.009708737864077669`", ",", 
     "0.3058252427184466`", ",", "0.32038834951456313`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.30097087378640774`", ",", "0.3058252427184466`", ",", 
     "0.1941747572815534`", ",", "0.16990291262135923`", ",", 
     "0.1796116504854369`", ",", "0.07281553398058252`", ",", 
     "0.21359223300970873`", ",", "0.28640776699029125`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6407766990291263`", ",", "0.6699029126213593`", ",", 
     "0.7864077669902912`", ",", "0.7135922330097088`", ",", 
     "0.7864077669902912`", ",", "0.7330097087378641`", ",", 
     "0.5339805825242718`", ",", "0.49514563106796117`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.05825242718446602`", ",", "0.024271844660194174`", ",", 
     "0.019417475728155338`", ",", "0.11165048543689321`", ",", 
     "0.024271844660194174`", ",", "0.`", ",", "0.05825242718446602`", ",", 
     "0.019417475728155338`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9095979467825336`*^9, 3.90959795503098*^9}},
 CellLabel->"Out[191]="]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536., 831.5999999999999},
WindowMargins->{{-5.3999999999999995`, Automatic}, {
  Automatic, -5.3999999999999995`}},
WindowStatusArea->"analyzer-kazankontroll.nb last backed up to \
analyzer-kazankontroll.nb~ on Fri 24 Nov 2023 at 12:19:22 AM",
Magnification:>0.9 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 105, 1, 63, "Chapter",ExpressionUUID->"ea43d582-07a9-4f9d-9962-440d4409482a"],
Cell[CellGroupData[{
Cell[710, 27, 922, 24, 63, "Input",ExpressionUUID->"ad5b9808-cdec-4f72-8f4c-092fbf8c7648",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1657, 55, 335, 8, 63, "PrintTemporary",ExpressionUUID->"70f4cd23-1986-4873-ada2-cccad93f8243"],
Cell[1995, 65, 389, 8, 63, "PrintTemporary",ExpressionUUID->"4a0d4eb8-f524-463e-8682-9833d2d12d5f"]
}, Open  ]]
}, Open  ]],
Cell[2411, 77, 3309, 84, 63, "Input",ExpressionUUID->"0dd060fd-30ba-4f30-9efd-6e3acb880f0d",
 InitializationCell->True],
Cell[5723, 163, 662, 18, 63, "Input",ExpressionUUID->"a61de7c6-c34a-475c-a066-22eddda0cc6a",
 InitializationCell->True],
Cell[6388, 183, 659, 18, 63, "Input",ExpressionUUID->"9942e574-15c7-4414-abab-82cd14c99796",
 InitializationCell->True],
Cell[7050, 203, 1269, 37, 63, "Input",ExpressionUUID->"9973ca83-7763-4fee-9e92-221af2919373",
 InitializationCell->True],
Cell[8322, 242, 419, 10, 63, "Input",ExpressionUUID->"6b2fe36f-83fb-460c-b718-b140a044f718",
 InitializationCell->True],
Cell[8744, 254, 1303, 34, 63, "Input",ExpressionUUID->"c01cffb8-0e6e-404b-a3df-d8997819be76",
 InitializationCell->True],
Cell[10050, 290, 1185, 30, 63, "Input",ExpressionUUID->"83e7b3a0-e184-422e-ae20-59071d207e1b",
 InitializationCell->True],
Cell[11238, 322, 612, 14, 63, "Input",ExpressionUUID->"805d7f40-3d55-4e81-b180-e6e71a0d3a49",
 InitializationCell->True],
Cell[11853, 338, 572, 13, 63, "Input",ExpressionUUID->"191e022a-405f-4b9f-a75a-ad3c41362a1c",
 InitializationCell->True],
Cell[12428, 353, 2325, 54, 63, "Input",ExpressionUUID->"4ce31da9-c7cc-48fa-9471-d4c741cd4661",
 InitializationCell->True],
Cell[14756, 409, 324, 9, 63, "Input",ExpressionUUID->"22c053d3-31eb-43ca-b69f-45f5176203b6",
 InitializationCell->True],
Cell[15083, 420, 353, 10, 63, "Input",ExpressionUUID->"19e5856d-fe38-43fc-8fd8-5b43e7fb09e1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[15473, 435, 98, 1, 63, "Chapter",ExpressionUUID->"48fbc6bc-9a73-4dd8-a4e8-9f5fdc751e92"],
Cell[15574, 438, 2164, 61, 63, "Input",ExpressionUUID->"b1f2a9bf-8005-419f-9d5d-b3ddec53493c"],
Cell[CellGroupData[{
Cell[17763, 503, 1735, 37, 63, "Input",ExpressionUUID->"f7078241-00c4-4bf6-b8c0-77a17c830306"],
Cell[19501, 542, 85595, 1559, 63, "Output",ExpressionUUID->"a06220e7-2d08-45e3-b730-1f69af91b9a0"]
}, Open  ]],
Cell[105111, 2104, 2724, 69, 63, "Input",ExpressionUUID->"a087b29e-0cb0-4788-abb6-6e9eb9f38141"],
Cell[CellGroupData[{
Cell[107860, 2177, 928, 25, 63, "Input",ExpressionUUID->"18e943aa-4bc6-441a-a076-c621b83e521a"],
Cell[108791, 2204, 75088, 1385, 63, "Output",ExpressionUUID->"dedddf20-6fb9-4a52-9fe1-1ff47908b049"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183916, 3594, 1315, 35, 63, "Input",ExpressionUUID->"5ce1c621-19e4-47c4-9c4f-319c34870a39"],
Cell[185234, 3631, 47192, 831, 63, "Output",ExpressionUUID->"8b75ad26-c149-40f4-a32e-ec2b6e00d6ee"]
}, Open  ]],
Cell[232441, 4465, 771, 24, 63, "Input",ExpressionUUID->"d6eaf939-b9ea-4c9d-8706-d0e7676f166d"],
Cell[CellGroupData[{
Cell[233237, 4493, 250, 6, 63, "Input",ExpressionUUID->"5ab33e55-c659-47a3-9979-7a302798d91d"],
Cell[233490, 4501, 233, 5, 63, "Output",ExpressionUUID->"fbea67dc-a0ce-4594-9fbf-6e284610abdc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233760, 4511, 3943, 99, 63, "Input",ExpressionUUID->"d7ef47e2-7711-425b-9e54-ff6a636cc7d5"],
Cell[237706, 4612, 39600, 667, 63, "Output",ExpressionUUID->"a7c58d48-6436-4b40-93ac-085a02e4162c"]
}, Open  ]],
Cell[277321, 5282, 1156, 34, 63, "Input",ExpressionUUID->"9550c565-303d-4839-98ef-035a238e938f"],
Cell[CellGroupData[{
Cell[278502, 5320, 253, 6, 63, "Input",ExpressionUUID->"4e404d5b-d9ed-447b-a4c0-e8f8bbac0ddd"],
Cell[278758, 5328, 12763, 384, 63, "Output",ExpressionUUID->"e0d85313-cd2c-42b2-bf9e-2e1d6852fa28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291558, 5717, 267, 5, 63, "Input",ExpressionUUID->"8c3eb9b0-3c03-4841-a8a3-087f5d5ba006"],
Cell[291828, 5724, 16666, 357, 63, "Output",ExpressionUUID->"e8e73bdc-779c-4f21-81e1-adb5f23e15f1"]
}, Open  ]],
Cell[308509, 6084, 2047, 56, 63, "Input",ExpressionUUID->"4ff32310-eb59-4dee-ada9-7feffe95a785"],
Cell[CellGroupData[{
Cell[310581, 6144, 899, 23, 63, "Input",ExpressionUUID->"f13222d0-0377-4c07-8177-0b8a6557b4bc"],
Cell[311483, 6169, 15822, 400, 63, "Output",ExpressionUUID->"f3011372-34b7-428b-84b9-2a6981024dfb"]
}, Open  ]],
Cell[327320, 6572, 991, 29, 63, "Input",ExpressionUUID->"f6e65a69-9c02-4c95-9272-08159ea229a9"],
Cell[CellGroupData[{
Cell[328336, 6605, 336, 9, 63, "Input",ExpressionUUID->"93f10929-047a-462d-8328-c4a9b6460fad"],
Cell[328675, 6616, 12253, 317, 63, "Output",ExpressionUUID->"6d93d403-b8d4-403f-b88a-ac290bd77f9a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[340977, 6939, 106, 1, 63, "Chapter",ExpressionUUID->"5f3813bd-2f68-4dac-949f-f62ef740722f"],
Cell[341086, 6942, 487, 14, 63, "Input",ExpressionUUID->"172f33f4-e0cb-4d43-9e18-58ea31efb400"],
Cell[341576, 6958, 649, 18, 63, "Input",ExpressionUUID->"330054d6-2cd5-4994-83e1-e196b28e3898"],
Cell[342228, 6978, 340, 6, 63, "Input",ExpressionUUID->"101c9c4f-afde-4a48-86c2-b991d7bd6761"],
Cell[342571, 6986, 3980, 92, 63, "Input",ExpressionUUID->"3eb4154b-5ff2-422c-b207-07fe3a6bbea8"],
Cell[346554, 7080, 2790, 72, 63, "Input",ExpressionUUID->"21f5fe73-43e7-486e-aae6-805a9b373331"],
Cell[349347, 7154, 2817, 72, 63, "Input",ExpressionUUID->"d9527bdc-c9c0-4134-90e8-368785d0425d"],
Cell[352167, 7228, 3667, 94, 63, "Input",ExpressionUUID->"39e5f767-69b7-49b5-b107-33874b9cb099"],
Cell[355837, 7324, 1622, 41, 63, "Input",ExpressionUUID->"2c00b670-9498-4d7c-ac77-479db226cc4a"],
Cell[357462, 7367, 886, 19, 63, "Input",ExpressionUUID->"a2c0a726-f931-46fe-b480-fd082c0a8185"],
Cell[CellGroupData[{
Cell[358373, 7390, 1211, 27, 63, "Input",ExpressionUUID->"2979f786-b6dc-421f-8187-0eae5b2e4ce3"],
Cell[359587, 7419, 195598, 3379, 63, "Output",ExpressionUUID->"c104bc38-88b3-4cdb-9448-dadac2f2e5c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555222, 10803, 268, 8, 63, "Input",ExpressionUUID->"e7beea86-89eb-4e15-9cf3-955760fe35c9"],
Cell[555493, 10813, 3731, 100, 63, "Output",ExpressionUUID->"331ef6a7-09d0-4c77-8fb8-de2c3a2a1663"]
}, Open  ]],
Cell[559239, 10916, 4175, 95, 63, "Input",ExpressionUUID->"9d5f3304-fbbb-4806-be76-2c7e379fc2ec"],
Cell[563417, 11013, 8119, 182, 63, "Input",ExpressionUUID->"1dc4f59b-6052-4af7-90a2-fad698795d96"],
Cell[CellGroupData[{
Cell[571561, 11199, 4737, 111, 63, "Input",ExpressionUUID->"af8d5df4-cbfb-4807-9276-34c8a1d6d3c6"],
Cell[576301, 11312, 140177, 2605, 63, "Output",ExpressionUUID->"ec09b08e-b091-4470-ae38-c6559faf8717"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[716527, 13923, 147, 2, 63, "Chapter",ExpressionUUID->"2c844e61-1d51-42cf-b7c7-593fad0f7dd9"],
Cell[716677, 13927, 1469, 40, 63, "Input",ExpressionUUID->"7d4cb483-e5d6-4042-82c6-ccfa267b0229"],
Cell[718149, 13969, 484, 11, 63, "Input",ExpressionUUID->"04aae3aa-a685-4854-84a2-f865e37d1345"],
Cell[CellGroupData[{
Cell[718658, 13984, 1189, 31, 63, "Input",ExpressionUUID->"2495f269-9efa-45aa-8a3c-152d650b23bc"],
Cell[719850, 14017, 147, 3, 63, "Output",ExpressionUUID->"c7cecd18-98a8-4491-92a0-f937010b192f"],
Cell[720000, 14022, 148, 3, 63, "Output",ExpressionUUID->"d3da92d0-7152-475d-8950-036cd220d122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[720185, 14030, 2667, 70, 63, "Input",ExpressionUUID->"dcdefd71-bdec-4d4c-8f35-49cb2f5b30e8"],
Cell[722855, 14102, 392, 6, 63, "Output",ExpressionUUID->"6cfcc555-30e3-4062-aad6-2d783b68138c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723284, 14113, 127, 2, 63, "Input",ExpressionUUID->"555ed4cd-f75e-4a73-8aaa-3042906d7e98"],
Cell[723414, 14117, 218, 6, 63, "Output",ExpressionUUID->"9d7a39ba-554f-4dbd-8c9f-3b7cfeba759e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723669, 14128, 9020, 199, 63, "Input",ExpressionUUID->"7c84679f-b917-48b8-a717-f0ae1546ed2d"],
Cell[732692, 14329, 242052, 5705, 63, "Output",ExpressionUUID->"a91f2dc2-1da7-49f2-948e-47106c224594"]
}, Open  ]],
Cell[CellGroupData[{
Cell[974781, 20039, 424, 9, 63, "Input",ExpressionUUID->"e4f8b108-ba0e-43b0-915a-5889cbffb300"],
Cell[975208, 20050, 356, 6, 63, "Output",ExpressionUUID->"e54f6cd4-c691-4a91-8513-ca61f8dd503a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[975601, 20061, 6069, 139, 63, "Input",ExpressionUUID->"4e45423e-752e-4226-8f80-c00b2f99a8ef"],
Cell[981673, 20202, 37948, 928, 63, "Output",ExpressionUUID->"589759e6-b9c5-4d7c-a38c-92a1001dbd47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019658, 21135, 378, 9, 63, "Input",ExpressionUUID->"5593d7fc-2ce2-4c41-8ab8-fd643963f15a"],
Cell[1020039, 21146, 228, 4, 63, "Output",ExpressionUUID->"edffa19c-e70e-4cb7-8c3b-ed7b59cc41cf"]
}, Open  ]],
Cell[1020282, 21153, 446, 11, 63, "Input",ExpressionUUID->"0810d0d2-cabe-4e99-9b8e-d43e1ce8f10c"],
Cell[CellGroupData[{
Cell[1020753, 21168, 4344, 100, 63, "Input",ExpressionUUID->"ecaa9b1e-0337-489a-be5f-7db4d1c9b3bf"],
Cell[1025100, 21270, 412, 9, 63, "Output",ExpressionUUID->"e16825a9-a138-4a1f-8efe-19e74c8d1d32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1025549, 21284, 4240, 98, 63, "Input",ExpressionUUID->"f7a19b9e-9e37-4562-a7c5-fa4562240e46"],
Cell[1029792, 21384, 366, 8, 63, "Output",ExpressionUUID->"31c55f4b-3765-4655-a468-0b11510483f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1030195, 21397, 4598, 105, 63, "Input",ExpressionUUID->"760cd4a8-6262-456b-b218-6e7f625a7e62"],
Cell[1034796, 21504, 439, 10, 63, "Output",ExpressionUUID->"f0f9ec73-83a2-4451-bd13-52e34dc2ad0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1035272, 21519, 4958, 115, 63, "Input",ExpressionUUID->"1b9a975e-ca8b-4a6d-af4a-be7a49ce0772"],
Cell[1040233, 21636, 467, 9, 63, "Output",ExpressionUUID->"4bdf5f09-1232-480a-bac1-b216d7b3ca85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1040737, 21650, 4502, 104, 63, "Input",ExpressionUUID->"0adb47a4-2d5f-4327-97cc-a9006168509d"],
Cell[1045242, 21756, 395, 8, 63, "Output",ExpressionUUID->"93905ea8-3726-42d4-ae12-0cd6e53d9666"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1045674, 21769, 498, 9, 63, "Input",ExpressionUUID->"18f31ec3-a475-4ec8-8af1-ace9badb7cca"],
Cell[1046175, 21780, 1905, 40, 63, "Output",ExpressionUUID->"fae9184f-740f-4bc1-88df-a37e2ddf2ae2"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
